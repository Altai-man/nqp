# Copyright (C) 2006-2009, The Perl Foundation.
# $Id$

PARROT_ARGS      =

# values from parrot_config
PARROT_BIN_DIR     = @bindir@
PARROT_VERSION     = @versiondir@
PARROT_INCLUDE_DIR = @includedir@$(PARROT_VERSION)
PARROT_LIB_DIR     = @libdir@$(PARROT_VERSION)
PARROT_SRC_DIR     = @srcdir@$(PARROT_VERSION)
HAS_ICU            = @has_icu@

CC            = @cc@
CFLAGS        = @ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@
EXE           = @exe@
LD            = @ld@
LDFLAGS       = @ldflags@ @ld_debug@
LD_LOAD_FLAGS = @ld_load_flags@
LIBPARROT     = @inst_libparrot_ldflags@
O             = @o@
LOAD_EXT      = @load_ext@
PERL          = @perl@
CP            = @cp@
MV            = @mv@
RM_F          = @rm_f@
MKPATH        = $(PERL) -MExtUtils::Command -e mkpath
CHMOD         = $(PERL) -MExtUtils::Command -e chmod

# locations of parrot resources
PARROT           = $(PARROT_BIN_DIR)/parrot$(EXE)
NQP              = $(PARROT_BIN_DIR)/parrot_nqp$(EXE)
PBC_TO_EXE       = $(PARROT_BIN_DIR)/pbc_to_exe$(EXE)
PARROT_TOOLS_DIR = $(PARROT_LIB_DIR)/tools
PARROT_PERL_LIB  = $(PARROT_TOOLS_DIR)/lib
PERL6GRAMMAR_PBC = $(PARROT_LIB_DIR)/library/PGE/Perl6Grammar.pbc

NQP_LANG_DIR     = $(PARROT_LIB_DIR)/languages/nqp

CLEANUPS = \
  *.manifest \
  *.pdb \
  p6regex$(EXE) \
  p6regex.pbc \
  src/gen/*.pir \

P6GRAMMAR_SOURCES = \
  src/Regex/P6Grammar.pir \
  src/Regex/P6Grammar/Grammar.pm \
  src/Regex/P6Grammar/Actions.pm \
  src/gen/p6grammar-grammar.pir \
  src/gen/p6grammar-actions.pir \

P6REGEX_SOURCES = \
  src/Regex/P6Regex.pir \
  src/gen/p6regex-grammar.pir \
  src/gen/p6regex-actions.pir \
  src/cheats/PGE.pir \
  src/cheats/p6regex-grammar.pir \
  src/cheats/hll-compiler.pir \
  src/cheats/regex-cursor-protoregex.pir \
  src/PAST/Regex.pir \
  src/PAST/Compiler-Regex.pir \
  src/Regex/constants.pir \
  src/Regex/Cursor.pir \
  src/Regex/Cursor-builtins.pir \
  src/Regex/Match.pir \
  src/Regex/Dumper.pir \

all: p6regex$(EXE)  p6grammar$(EXE)


p6grammar$(EXE): p6grammar.pbc
	$(PBC_TO_EXE) p6grammar.pbc

p6grammar.pbc: p6regex.pbc $(P6GRAMMAR_SOURCES)
	$(PARROT) -o p6grammar.pbc src/Regex/P6Grammar.pir

src/gen/p6grammar-grammar.pir: $(PARROT) $(PERL6GRAMMAR_PBC) src/Regex/P6Grammar/Grammar.pm
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR_PBC) \
	    --output=src/gen/p6grammar-grammar.pir --encoding=utf8 \
	    src/Regex/P6Grammar/Grammar.pm

src/gen/p6grammar-actions.pir: $(NQP) src/Regex/P6Grammar/Actions.pm
	$(NQP) --target=pir --output=src/gen/p6grammar-actions.pir \
	    --encoding=fixed_8 src/Regex/P6Grammar/Actions.pm

p6regex$(EXE): p6regex.pbc
	$(PBC_TO_EXE) p6regex.pbc

p6regex.pbc: $(P6REGEX_SOURCES)
	$(PARROT) -o p6regex.pbc src/Regex/P6Regex.pir

src/gen/p6regex-grammar.pir: $(PARROT) $(PERL6GRAMMAR_PBC) src/Regex/P6Regex/Grammar.pm
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR_PBC) \
	    --output=src/gen/p6regex-grammar.pir --encoding=utf8 \
	    src/Regex/P6Regex/Grammar.pm

src/gen/p6regex-actions.pir: $(NQP) src/Regex/P6Regex/Actions.pm
	$(NQP) --target=pir --output=src/gen/p6regex-actions.pir \
	    --encoding=fixed_8 src/Regex/P6Regex/Actions.pm

bootstrap: p6grammar
	./p6grammar --target=pir src/Regex/P6Regex/Grammar.pm >p6regex-grammar.pir
	./p6grammar --target=pir src/Regex/P6Grammar/Grammar.pm >p6grammar-grammar.pir
	$(CP) p6*-grammar.pir src/gen

## testing

test: all
	prove -r --exec $(PARROT) t

test_loud: all
	prove -r -v --exec $(PARROT) t

## cleaning
clean:
	$(RM_F) $(CLEANUPS)

distclean: realclean

realclean: clean
	$(RM_F) Makefile

testclean:
