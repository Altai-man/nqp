JAVA   = java
JAVAC  = javac
JAR    = jar
PROVE  = prove
ASM    = 3rdparty/asm/

PREFIX = $(DESTDIR)@prefix@
BIN_DIR = $(PREFIX)/bin
NQP_LANG_DIR= $(PREFIX)/languages/nqp
NQP_JAR_DIR = $(NQP_LANG_DIR)/runtime
NQP_LIB_DIR = $(NQP_LANG_DIR)/lib
JVM_BUILD_DIR = gen/jvm

RUNTIME_JAVAS = \
  src/vm/jvm/runtime/org/perl6/nqp/io/*.java \
  src/vm/jvm/runtime/org/perl6/nqp/jast2bc/*.java \
  src/vm/jvm/runtime/org/perl6/nqp/runtime/*.java \
  src/vm/jvm/runtime/org/perl6/nqp/sixmodel/*.java \
  src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/*.java \
  src/vm/jvm/runtime/org/perl6/nqp/tools/*.java \

RUNTIME_JAR = nqp-runtime.jar

THIRDPARTY_JARS = $(ASM)asm-4.1.jar@cpsep@$(ASM)asm-tree-4.1.jar@cpsep@3rdparty/jline/jline-1.0.jar@cpsep@3rdparty/jna/jna.jar
STAGE0 = src/vm/jvm/stage0
STAGE1 = $(JVM_BUILD_DIR)/stage1
STAGE2 = $(JVM_BUILD_DIR)/stage2

STAGE0_NQP = $(JAVA) -cp $(STAGE0) -Xbootclasspath/a:$(STAGE0)@cpsep@nqp-runtime.jar@cpsep@$(THIRDPARTY_JARS)@cpsep@$(STAGE0)/nqp.jar nqp --bootstrap
STAGE1_NQP = $(JAVA) -cp $(STAGE1) -Xbootclasspath/a:$(STAGE1)@cpsep@nqp-runtime.jar@cpsep@$(THIRDPARTY_JARS)@cpsep@$(STAGE1)/nqp.jar nqp --bootstrap

NQP_MO_JAR      = nqpmo.jar

MODULE_LOADER_JAR   = ModuleLoader.jar

CORE_SETTING_JAR      = NQPCORE.setting.jar

QASTNODE_JAR      = QASTNode.jar

QREGEX_JAR      = QRegex.jar
QREGEX_COMBINED = QRegex.nqp

HLL_JAR      = NQPHLL.jar
HLL_SOURCES  = src/vm/jvm/HLL/Backend.nqp $(COMMON_HLL_SOURCES)

JASTNODES_JAR      = JASTNodes.jar
JASTNODES_COMBINED = JASTNodes.nqp
JASTNODES_SOURCES  = \
  src/vm/jvm/QAST/JASTNodes.nqp \

QAST_JAR       = QAST.jar
J_QAST_SOURCES = src/vm/jvm/QAST/Compiler.nqp

P6QREGEX_JAR      = NQPP6QRegex.jar

P5QREGEX_JAR      = NQPP5QRegex.jar

EVAL_CLIENT = tools/jvm/eval-client.pl

NQP_JAR      = nqp.jar
J_NQP_SOURCES= src/vm/jvm/NQP/Ops.nqp $(COMMON_NQP_SOURCES)

STAGE1_OUTPUT = $(STAGE1)/$(NQP_MO_JAR) $(STAGE1)/$(MODULE_LOADER_JAR) \
                $(STAGE1)/$(CORE_SETTING_JAR) $(STAGE1)/$(QASTNODE_JAR) \
                $(STAGE1)/$(QREGEX_JAR) $(STAGE1)/$(HLL_JAR) \
                $(STAGE1)/$(JASTNODES_JAR) $(STAGE1)/$(QAST_JAR) \
                $(STAGE1)/$(P6QREGEX_JAR) $(STAGE1)/$(NQP_JAR) \

STAGE2_OUTPUT = $(STAGE2)/$(NQP_MO_JAR) $(STAGE2)/$(MODULE_LOADER_JAR) \
                $(STAGE2)/$(CORE_SETTING_JAR) $(STAGE2)/$(QASTNODE_JAR) \
                $(STAGE2)/$(QREGEX_JAR) $(STAGE2)/$(HLL_JAR) \
                $(STAGE2)/$(JASTNODES_JAR) $(STAGE2)/$(QAST_JAR) \
                $(STAGE2)/$(P6QREGEX_JAR) $(STAGE2)/$(NQP_JAR) \

ALL_OUTPUT = $(NQP_MO_JAR) $(MODULE_LOADER_JAR) \
             $(CORE_SETTING_JAR) $(QASTNODE_JAR) \
             $(QREGEX_JAR) $(HLL_JAR) \
             $(JASTNODES_JAR) $(QAST_JAR) \
             $(P6QREGEX_JAR) $(NQP_JAR) \

RUNNER = @runner@

all: $(ALL_OUTPUT) $(RUNNER) $(P5QREGEX_JAR)

install: all
	$(MKPATH) $(BIN_DIR)
	$(MKPATH) $(NQP_JAR_DIR)
	$(MKPATH) $(NQP_LIB_DIR)
	$(CP) 3rdparty/asm/asm-4.1.jar $(NQP_JAR_DIR)
	$(CP) 3rdparty/asm/asm-tree-4.1.jar $(NQP_JAR_DIR)
	$(CP) 3rdparty/jline/jline-1.0.jar $(NQP_JAR_DIR)
	$(CP) 3rdparty/jna/jna.jar $(NQP_JAR_DIR)
	$(CP) $(RUNTIME_JAR) $(NQP_JAR_DIR)
	$(CP) $(NQP_MO_JAR) $(NQP_LIB_DIR)
	$(CP) $(MODULE_LOADER_JAR) $(NQP_LIB_DIR)
	$(CP) $(CORE_SETTING_JAR) $(NQP_LIB_DIR)
	$(CP) $(QASTNODE_JAR) $(NQP_LIB_DIR)
	$(CP) $(QREGEX_JAR) $(NQP_LIB_DIR)
	$(CP) $(HLL_JAR) $(NQP_LIB_DIR)
	$(CP) $(JASTNODES_JAR) $(NQP_LIB_DIR)
	$(CP) $(QAST_JAR) $(NQP_LIB_DIR)
	$(CP) $(P6QREGEX_JAR) $(NQP_LIB_DIR)
	$(CP) $(NQP_JAR) $(NQP_LIB_DIR)
	$(CP) $(P5QREGEX_JAR) $(NQP_LIB_DIR)
	$(CP) $(EVAL_CLIENT) $(BIN_DIR)
	$(CHMOD) 0755 $(BIN_DIR)/eval-client.pl
	$(PERL) tools/build/install-jvm-runner.pl $(PREFIX)

$(RUNTIME_JAR): $(RUNTIME_JAVAS) tools/build/gen-jvm-properties.pl
	$(PERL) -MExtUtils::Command -e mkpath bin
	$(JAVAC) -source 1.7 -cp $(THIRDPARTY_JARS) -g -d bin $(RUNTIME_JAVAS)
	$(PERL) tools/build/gen-jvm-properties.pl . $(THIRDPARTY_JARS) > jvmconfig.properties
	$(PERL) tools/build/gen-jvm-properties.pl @prefix@ $(THIRDPARTY_JARS) > bin/jvmconfig.properties
	$(JAR) cf0 nqp-runtime.jar -C bin/ .

clean:
	$(PERL) -MExtUtils::Command -e rm_rf *.class *.jar src/stage1 src/stage2 bin nqp nqp.bat jvmconfig.properties

$(STAGE0): $(RUNTIME_JAR)

$(STAGE1): $(STAGE1_OUTPUT)

$(STAGE1)/$(NQP_MO_JAR): $(STAGE0) $(NQP_MO_SOURCES)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(NQP_MO_SOURCES) > $(STAGE1)/$(NQP_MO_COMBINED)
	$(STAGE0_NQP) --setting=NULL --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(NQP_MO_JAR) $(STAGE1)/$(NQP_MO_COMBINED)

$(STAGE1)/$(MODULE_LOADER_JAR): $(STAGE0) src/vm/jvm/ModuleLoader.nqp
	$(STAGE0_NQP) --setting=NULL --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(MODULE_LOADER_JAR) src/vm/jvm/ModuleLoader.nqp

$(STAGE1)/$(CORE_SETTING_JAR): $(STAGE0) $(CORE_SETTING_SOURCES) $(STAGE1)/$(NQP_MO_JAR) $(STAGE1)/$(MODULE_LOADER_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(CORE_SETTING_SOURCES) > $(STAGE1)/$(CORE_SETTING_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting=NULL --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(CORE_SETTING_JAR) $(STAGE1)/$(CORE_SETTING_COMBINED)

$(STAGE1)/$(QASTNODE_JAR): $(STAGE0) $(QASTNODE_SOURCES) $(STAGE1)/$(CORE_SETTING_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(QASTNODE_SOURCES) > $(STAGE1)/$(QASTNODE_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(QASTNODE_JAR) $(STAGE1)/$(QASTNODE_COMBINED)

$(STAGE1)/$(QREGEX_JAR): $(STAGE0) $(QREGEX_SOURCES) $(STAGE1)/$(QASTNODE_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(QREGEX_SOURCES) > $(STAGE1)/$(QREGEX_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(QREGEX_JAR) $(STAGE1)/$(QREGEX_COMBINED)

$(STAGE1)/$(HLL_JAR): $(STAGE0) $(HLL_SOURCES) $(STAGE1)/$(QREGEX_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(HLL_SOURCES) > $(STAGE1)/$(HLL_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(HLL_JAR) $(STAGE1)/$(HLL_COMBINED)

$(STAGE1)/$(JASTNODES_JAR): $(STAGE0) $(JASTNODES_SOURCES) $(STAGE1)/$(CORE_SETTING_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(JASTNODES_SOURCES) > $(STAGE1)/$(JASTNODES_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(JASTNODES_JAR) $(STAGE1)/$(JASTNODES_COMBINED)

$(STAGE1)/$(QAST_JAR): $(STAGE0) $(J_QAST_SOURCES) $(STAGE1)/$(HLL_JAR) $(STAGE1)/$(JASTNODES_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(J_QAST_SOURCES) > $(STAGE1)/$(QAST_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(QAST_JAR) $(STAGE1)/$(QAST_COMBINED)

$(STAGE1)/$(P6QREGEX_JAR): $(STAGE0) $(P6QREGEX_SOURCES) $(STAGE1)/$(QAST_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-cat.pl jvm $(P6QREGEX_SOURCES) > $(STAGE1)/$(P6QREGEX_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE1)/$(P6QREGEX_JAR) $(STAGE1)/$(P6QREGEX_COMBINED)

$(STAGE1)/$(NQP_JAR): $(STAGE0) $(J_NQP_SOURCES) $(STAGE1)/$(P6QREGEX_JAR)
	$(MKPATH) $(STAGE1)
	$(PERL) tools/build/gen-version.pl > $(STAGE1)/nqp-config.nqp
	$(PERL) tools/build/gen-cat.pl jvm $(J_NQP_SOURCES) $(STAGE1)/nqp-config.nqp > $(STAGE1)/$(NQP_COMBINED)
	$(STAGE0_NQP) --module-path=$(STAGE1) --setting-path=$(STAGE1) \
         --setting=NQPCORE --target=jar --no-regex-lib --javaclass=nqp \
	    --output=$(STAGE1)/$(NQP_JAR) $(STAGE1)/$(NQP_COMBINED)

$(STAGE2): $(STAGE2_OUTPUT)

$(STAGE2)/$(NQP_MO_JAR): $(STAGE1) $(NQP_MO_SOURCES)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(NQP_MO_SOURCES) > $(STAGE2)/$(NQP_MO_COMBINED)
	$(STAGE1_NQP) --setting=NULL --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(NQP_MO_JAR) $(STAGE2)/$(NQP_MO_COMBINED)

$(STAGE2)/$(MODULE_LOADER_JAR): $(STAGE1) src/vm/jvm/ModuleLoader.nqp
	$(STAGE1_NQP) --setting=NULL --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(MODULE_LOADER_JAR) src/vm/jvm/ModuleLoader.nqp

$(STAGE2)/$(CORE_SETTING_JAR): $(STAGE1) $(CORE_SETTING_SOURCES) $(STAGE2)/$(NQP_MO_JAR) $(STAGE2)/$(MODULE_LOADER_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(CORE_SETTING_SOURCES) > $(STAGE2)/$(CORE_SETTING_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting=NULL --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(CORE_SETTING_JAR) $(STAGE2)/$(CORE_SETTING_COMBINED)

$(STAGE2)/$(QASTNODE_JAR): $(STAGE1) $(QASTNODE_SOURCES) $(STAGE2)/$(CORE_SETTING_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(QASTNODE_SOURCES) > $(STAGE2)/$(QASTNODE_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(QASTNODE_JAR) $(STAGE2)/$(QASTNODE_COMBINED)

$(STAGE2)/$(QREGEX_JAR): $(STAGE1) $(QREGEX_SOURCES) $(STAGE2)/$(QASTNODE_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(QREGEX_SOURCES) > $(STAGE2)/$(QREGEX_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(QREGEX_JAR) $(STAGE2)/$(QREGEX_COMBINED)

$(STAGE2)/$(HLL_JAR): $(STAGE1) $(HLL_SOURCES) $(STAGE2)/$(QREGEX_JAR)
	$(MKPATH) $(STAGE2)/gen
	$(PERL) tools/build/gen-cat.pl jvm $(HLL_SOURCES) > $(STAGE2)/$(HLL_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(HLL_JAR) $(STAGE2)/$(HLL_COMBINED)

$(STAGE2)/$(JASTNODES_JAR): $(STAGE1) $(JASTNODES_SOURCES) $(STAGE2)/$(CORE_SETTING_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(JASTNODES_SOURCES) > $(STAGE2)/$(JASTNODES_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(JASTNODES_JAR) $(STAGE2)/$(JASTNODES_COMBINED)

$(STAGE2)/$(QAST_JAR): $(STAGE1) $(J_QAST_SOURCES) $(STAGE2)/$(HLL_JAR) $(STAGE2)/$(JASTNODES_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(J_QAST_SOURCES) > $(STAGE2)/$(QAST_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(QAST_JAR) $(STAGE2)/$(QAST_COMBINED)

$(STAGE2)/$(P6QREGEX_JAR): $(STAGE1) $(P6QREGEX_SOURCES) $(STAGE2)/$(QAST_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(P6QREGEX_SOURCES) > $(STAGE2)/$(P6QREGEX_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --no-regex-lib --target=jar \
	    --output=$(STAGE2)/$(P6QREGEX_JAR) $(STAGE2)/$(P6QREGEX_COMBINED)

$(STAGE2)/$(NQP_JAR): $(STAGE1) $(J_NQP_SOURCES) $(STAGE2)/$(P6QREGEX_JAR)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-version.pl > $(STAGE2)/nqp-config.nqp
	$(PERL) tools/build/gen-cat.pl jvm $(J_NQP_SOURCES) $(STAGE2)/nqp-config.nqp > $(STAGE2)/$(NQP_COMBINED)
	$(STAGE1_NQP) --module-path=$(STAGE2) --setting-path=$(STAGE2) \
         --setting=NQPCORE --target=jar --no-regex-lib --javaclass=nqp \
	    --output=$(STAGE2)/$(NQP_JAR) $(STAGE2)/$(NQP_COMBINED)

$(ALL_OUTPUT): $(STAGE2_OUTPUT)
	$(CP) $(STAGE2)/$(NQP_MO_JAR) .
	$(CP) $(STAGE2)/$(MODULE_LOADER_JAR) .
	$(CP) $(STAGE2)/$(CORE_SETTING_JAR) .
	$(CP) $(STAGE2)/$(QASTNODE_JAR) .
	$(CP) $(STAGE2)/$(QREGEX_JAR) .
	$(CP) $(STAGE2)/$(HLL_JAR) .
	$(CP) $(STAGE2)/$(JASTNODES_JAR) .
	$(CP) $(STAGE2)/$(QAST_JAR) .
	$(CP) $(STAGE2)/$(P6QREGEX_JAR) .
	$(CP) $(STAGE2)/$(NQP_JAR) .

$(RUNNER): src/vm/jvm/runners/$(RUNNER)
	$(CP) src/vm/jvm/runners/$(RUNNER) .
	$(CHMOD) 755 $(RUNNER)

$(P5QREGEX_JAR): $(ALL_OUTPUT) $(P5QREGEX_SOURCES)
	$(MKPATH) $(STAGE2)
	$(PERL) tools/build/gen-cat.pl jvm $(P5QREGEX_SOURCES) > $(STAGE2)/$(P5QREGEX_COMBINED)
	.@slash@$(RUNNER) --target=jar --output=$(P5QREGEX_JAR) \
	    $(STAGE2)/$(P5QREGEX_COMBINED)

bootstrap-files: $(STAGE2_OUTPUT)
	$(CP) $(STAGE2)/$(NQP_MO_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(MODULE_LOADER_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(CORE_SETTING_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(QASTNODE_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(QREGEX_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(HLL_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(JASTNODES_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(QAST_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(P6QREGEX_JAR) $(STAGE0)
	$(CP) $(STAGE2)/$(NQP_JAR) $(STAGE0)

## testing

t/*/*.t: all
	prove -r -v --exec .@slash@$(RUNNER) $@

test: all
	prove -r --exec .@slash@$(RUNNER) t/nqp t/qregex t/p5regex t/qast t/serialization t/jvm t/nativecall

test-loud: all
	prove -r -v --exec .@slash@$(RUNNER) t/nqp t/qregex t/p5regex t/qast t/serialization t/jvm t/nativecall

core-test: $(RUNNER)
	prove -r --exec .@slash@$(RUNNER) t/nqp

core-test-loud: $(RUNNER)
	prove -r -v --exec .@slash@$(RUNNER) t/nqp

qregex-test: $(RUNNER)
	prove -r --exec .@slash@$(RUNNER) t/qregex

qregex-test-loud: $(RUNNER)
	prove -r -v --exec .@slash@$(RUNNER) t/qregex
