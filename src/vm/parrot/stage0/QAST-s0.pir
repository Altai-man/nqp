.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_144_1368096764.976") :anon :lex
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5675 = 'cuid_146_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_147_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_148_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_154_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_159_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_162_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_171_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_178_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_180_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_182_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_184_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_186_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_188_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_190_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_191_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_198_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_199_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_204_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_206_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_208_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_210_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_214_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_216_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_219_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_222_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_223_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_224_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_225_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_226_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_227_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_228_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_229_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_230_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_231_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_232_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_233_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_234_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_236_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_244_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_245_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_246_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_247_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_248_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_249_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_250_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_251_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_253_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_255_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_257_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_258_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_259_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_260_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_261_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_262_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_263_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_264_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_265_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_266_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_267_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_268_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_269_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_270_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_271_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_272_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_273_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_274_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_275_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_276_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_277_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_278_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_279_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_280_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_281_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_282_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_283_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_284_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_285_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_286_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_287_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_288_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_289_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_290_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_291_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_292_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_293_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_294_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_295_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_296_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_297_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_298_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_299_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_300_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_301_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_302_1368096764.976' 
    capture_lex $P5675 
    .const 'Sub' $P5675 = 'cuid_303_1368096764.976' 
    capture_lex $P5675 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "&handle_arg", $P104 
    .lex "%const_map", $P105 
    .lex "$exc_exclude", $P106 
    .lex "$exc_include", $P107 
    .lex "%handler_names", $P108 
    .lex "%control_map", $P109 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    .const 'Sub' $P5001 = 'cuid_146_1368096764.976' 
    capture_lex $P5001
    set $P104, $P5001
    new $P5002, 'Hash'
    set $P105, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5004
    new $P5005, 'Hash'
    set $P108, $P5005
    new $P5006, 'Hash'
    set $P109, $P5006
    find_dynamic_lex $P5007, "$*CTXSAVE"
    set ctxsave, $P5007
    isnull $I5001, ctxsave
    if $I5001 goto unless15_end22 
    can $I5002, ctxsave, "ctxsave"
    box $P5010, $I5002
    set $P5009, $P5010
    unless $I5002 goto if16_end24 
    $P5008 = ctxsave."ctxsave"()
    set $P5009, $P5008
  if16_end24:
  unless15_end22:
.annotate 'line', 1
    .const 'Sub' $P5011 = 'cuid_147_1368096764.976' 
    capture_lex $P5011
    $P5012 = $P5011()
    .const 'Sub' $P5013 = 'cuid_148_1368096764.976' 
    capture_lex $P5013
    $P5014 = $P5013()
    .const 'Sub' $P5015 = 'cuid_154_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
    .const 'Sub' $P5017 = 'cuid_159_1368096764.976' 
    capture_lex $P5017
    $P5018 = $P5017()
    .const 'Sub' $P5019 = 'cuid_162_1368096764.976' 
    capture_lex $P5019
    $P5020 = $P5019()
    .const 'Sub' $P5021 = 'cuid_171_1368096764.976' 
    capture_lex $P5021
    $P5022 = $P5021()
.annotate 'line', 597
    nqp_get_sc_object $P5023, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5025 = 'cuid_178_1368096764.976' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P5023."add_core_op"("list", $P5024, 1 :named("inlinable"))
.annotate 'line', 613
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5028 = 'cuid_180_1368096764.976' 
    capture_lex $P5028
    newclosure $P5027, $P5028
    $P5026."add_core_op"("qlist", $P5027, 1 :named("inlinable"))
.annotate 'line', 629
    nqp_get_sc_object $P5029, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5031 = 'cuid_182_1368096764.976' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5029."add_core_op"("list_i", $P5030, 1 :named("inlinable"))
.annotate 'line', 645
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5034 = 'cuid_184_1368096764.976' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    $P5032."add_core_op"("list_s", $P5033, 1 :named("inlinable"))
.annotate 'line', 661
    nqp_get_sc_object $P5035, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5037 = 'cuid_186_1368096764.976' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5035."add_core_op"("list_b", $P5036, 1 :named("inlinable"))
.annotate 'line', 678
    nqp_get_sc_object $P5038, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5040 = 'cuid_188_1368096764.976' 
    capture_lex $P5040
    newclosure $P5039, $P5040
    $P5038."add_core_op"("hash", $P5039, 1 :named("inlinable"))
.annotate 'line', 703
    nqp_get_sc_object $P5041, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5043 = 'cuid_190_1368096764.976' 
    capture_lex $P5043
    newclosure $P5042, $P5043
    $P5041."add_core_op"("chain", $P5042, 1 :named("inlinable"))
.annotate 'line', 745
    nqp_get_sc_object $P5044, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5046 = 'cuid_191_1368096764.976' 
    capture_lex $P5046
    newclosure $P5045, $P5046
    $P5044."add_core_op"("stmts", $P5045, 1 :named("inlinable"))
    new $P5050, 'ResizablePMCArray'
    box $P5051, "if"
    push $P5050, $P5051
    box $P5052, "unless"
    push $P5050, $P5052
    set $P5047, $P5050
    iter $P5049, $P5050
  for_next650:
    unless $P5049, for_done652
    shift $P5054, $P5049
  for_redo651:
    .const 'Sub' $P5053 = 'cuid_198_1368096764.976' 
    capture_lex $P5053
    $P5047 = $P5053($P5054)
    goto for_next650
  for_done652:
.annotate 'line', 847
    nqp_get_sc_object $P5055, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5057 = 'cuid_199_1368096764.976' 
    capture_lex $P5057
    newclosure $P5056, $P5057
    $P5055."add_core_op"("ifnull", $P5056, 1 :named("inlinable"))
    new $P5061, 'ResizablePMCArray'
    box $P5062, ""
    push $P5061, $P5062
    box $P5063, "repeat_"
    push $P5061, $P5063
    set $P5058, $P5061
    iter $P5060, $P5061
  for_next758:
    unless $P5060, for_done760
    shift $P5065, $P5060
  for_redo759:
    .const 'Sub' $P5064 = 'cuid_204_1368096764.976' 
    capture_lex $P5064
    $P5058 = $P5064($P5065)
    goto for_next758
  for_done760:
.annotate 'line', 981
    nqp_get_sc_object $P5066, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5068 = 'cuid_206_1368096764.976' 
    capture_lex $P5068
    newclosure $P5067, $P5068
    $P5066."add_core_op"("for", $P5067, 1 :named("inlinable"))
.annotate 'line', 1069
    nqp_get_sc_object $P5069, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5071 = 'cuid_208_1368096764.976' 
    capture_lex $P5071
    newclosure $P5070, $P5071
    $P5069."add_core_op"("defor", $P5070, 1 :named("inlinable"))
.annotate 'line', 1090
    nqp_get_sc_object $P5072, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5074 = 'cuid_210_1368096764.976' 
    capture_lex $P5074
    newclosure $P5073, $P5074
    $P5072."add_core_op"("xor", $P5073, 1 :named("inlinable"))
.annotate 'line', 1159
    nqp_get_sc_object $P5075, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5077 = 'cuid_214_1368096764.976' 
    capture_lex $P5077
    newclosure $P5076, $P5077
    $P5075."add_core_op"("bind", $P5076, 1 :named("inlinable"))
.annotate 'line', 1200
    nqp_get_sc_object $P5078, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5080 = 'cuid_216_1368096764.976' 
    capture_lex $P5080
    newclosure $P5079, $P5080
    $P5078."add_core_op"("call", $P5079)
.annotate 'line', 1236
    nqp_get_sc_object $P5081, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5083 = 'cuid_219_1368096764.976' 
    capture_lex $P5083
    newclosure $P5082, $P5083
    $P5081."add_core_op"("callmethod", $P5082, 1 :named("inlinable"))
.annotate 'line', 1288
    nqp_get_sc_object $P5084, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5086 = 'cuid_222_1368096764.976' 
    capture_lex $P5086
    newclosure $P5085, $P5086
    $P5084."add_core_op"("lexotic", $P5085)
.annotate 'line', 1312
    nqp_get_sc_object $P5087, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5089 = 'cuid_223_1368096764.976' 
    capture_lex $P5089
    newclosure $P5088, $P5089
    $P5087."add_core_op"("ctx", $P5088)
.annotate 'line', 1320
    nqp_get_sc_object $P5090, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5092 = 'cuid_224_1368096764.976' 
    capture_lex $P5092
    newclosure $P5091, $P5092
    $P5090."add_core_op"("ctxouter", $P5091)
.annotate 'line', 1329
    nqp_get_sc_object $P5093, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5095 = 'cuid_225_1368096764.976' 
    capture_lex $P5095
    newclosure $P5094, $P5095
    $P5093."add_core_op"("ctxcaller", $P5094)
.annotate 'line', 1338
    nqp_get_sc_object $P5096, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5098 = 'cuid_226_1368096764.976' 
    capture_lex $P5098
    newclosure $P5097, $P5098
    $P5096."add_core_op"("ctxlexpad", $P5097)
.annotate 'line', 1347
    nqp_get_sc_object $P5099, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5101 = 'cuid_227_1368096764.976' 
    capture_lex $P5101
    newclosure $P5100, $P5101
    $P5099."add_core_op"("curlexpad", $P5100)
.annotate 'line', 1355
    nqp_get_sc_object $P5102, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5104 = 'cuid_228_1368096764.976' 
    capture_lex $P5104
    newclosure $P5103, $P5104
    $P5102."add_core_op"("curcode", $P5103)
.annotate 'line', 1363
    nqp_get_sc_object $P5105, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5107 = 'cuid_229_1368096764.976' 
    capture_lex $P5107
    newclosure $P5106, $P5107
    $P5105."add_core_op"("callercode", $P5106)
.annotate 'line', 1371
    nqp_get_sc_object $P5108, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5110 = 'cuid_230_1368096764.976' 
    capture_lex $P5110
    newclosure $P5109, $P5110
    $P5108."add_core_op"("lexprimspec", $P5109)
.annotate 'line', 1383
    nqp_get_sc_object $P5111, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5113 = 'cuid_231_1368096764.976' 
    capture_lex $P5113
    newclosure $P5112, $P5113
    $P5111."add_core_op"("usecapture", $P5112)
.annotate 'line', 1392
    nqp_get_sc_object $P5114, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5116 = 'cuid_232_1368096764.976' 
    capture_lex $P5116
    newclosure $P5115, $P5116
    $P5114."add_core_op"("savecapture", $P5115)
.annotate 'line', 1403
    nqp_get_sc_object $P5117, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5117."add_core_pirop_mapping"("captureposelems", "elements", "IP")
.annotate 'line', 1404
    nqp_get_sc_object $P5118, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5118."add_core_pirop_mapping"("captureposarg", "set", "PQi")
.annotate 'line', 1405
    nqp_get_sc_object $P5119, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5119."add_core_pirop_mapping"("captureposarg_i", "set", "IQi")
.annotate 'line', 1406
    nqp_get_sc_object $P5120, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5120."add_core_pirop_mapping"("captureposarg_n", "set", "NQi")
.annotate 'line', 1407
    nqp_get_sc_object $P5121, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5121."add_core_pirop_mapping"("captureposarg_s", "set", "SQi")
.annotate 'line', 1408
    nqp_get_sc_object $P5122, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5122."add_core_pirop_mapping"("captureposprimspec", "captureposprimspec", "IPi")
.annotate 'line', 1409
    nqp_get_sc_object $P5123, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5123."add_core_pirop_mapping"("captureexistsnamed", "exists", "IQs")
.annotate 'line', 1410
    nqp_get_sc_object $P5124, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5124."add_core_pirop_mapping"("capturehasnameds", "nqp_capturehasnameds", "IP")
.annotate 'line', 1413
    nqp_get_sc_object $P5125, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5127 = 'cuid_233_1368096764.976' 
    capture_lex $P5127
    newclosure $P5126, $P5127
    $P5125."add_core_op"("invokewithcapture", $P5126)
.annotate 'line', 1431
    nqp_get_sc_object $P5128, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5128."add_core_pirop_mapping"("multicacheadd", "multi_cache_add", "PPPP")
.annotate 'line', 1432
    nqp_get_sc_object $P5129, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5129."add_core_pirop_mapping"("multicachefind", "multi_cache_find", "PPP")
    new $P5130, 'Hash'
    box $P5131, .CCLASS_ANY
    set $P5130["CCLASS_ANY"], $P5131
    box $P5132, .CCLASS_NUMERIC
    set $P5130["CCLASS_NUMERIC"], $P5132
    box $P5133, .CCLASS_WHITESPACE
    set $P5130["CCLASS_WHITESPACE"], $P5133
    box $P5134, .CCLASS_PRINTING
    set $P5130["CCLASS_PRINTING"], $P5134
    box $P5135, .CCLASS_GRAPHICAL
    set $P5130["CCLASS_GRAPHICAL"], $P5135
    box $P5136, .CCLASS_WORD
    set $P5130["CCLASS_WORD"], $P5136
    box $P5137, .CCLASS_NEWLINE
    set $P5130["CCLASS_NEWLINE"], $P5137
    box $P5138, .CCLASS_ALPHABETIC
    set $P5130["CCLASS_ALPHABETIC"], $P5138
    box $P5139, .CCLASS_UPPERCASE
    set $P5130["CCLASS_UPPERCASE"], $P5139
    box $P5140, .CCLASS_LOWERCASE
    set $P5130["CCLASS_LOWERCASE"], $P5140
    box $P5141, .CCLASS_NUMERIC
    set $P5130["CCLASS_NUMERIC"], $P5141
    box $P5142, .CCLASS_HEXADECIMAL
    set $P5130["CCLASS_HEXADECIMAL"], $P5142
    box $P5143, .CCLASS_BLANK
    set $P5130["CCLASS_BLANK"], $P5143
    box $P5144, .CCLASS_CONTROL
    set $P5130["CCLASS_CONTROL"], $P5144
    box $P5145, .CCLASS_PUNCTUATION
    set $P5130["CCLASS_PUNCTUATION"], $P5145
    box $P5146, .CCLASS_ALPHANUMERIC
    set $P5130["CCLASS_ALPHANUMERIC"], $P5146
    box $P5147, 0
    set $P5130["HLL_ROLE_NONE"], $P5147
    box $P5148, 1
    set $P5130["HLL_ROLE_INT"], $P5148
    box $P5149, 2
    set $P5130["HLL_ROLE_NUM"], $P5149
    box $P5150, 3
    set $P5130["HLL_ROLE_STR"], $P5150
    box $P5151, 4
    set $P5130["HLL_ROLE_ARRAY"], $P5151
    box $P5152, 5
    set $P5130["HLL_ROLE_HASH"], $P5152
    box $P5153, 6
    set $P5130["HLL_ROLE_CODE"], $P5153
    box $P5154, .STAT_EXISTS
    set $P5130["STAT_EXISTS"], $P5154
    box $P5155, .STAT_FILESIZE
    set $P5130["STAT_FILESIZE"], $P5155
    box $P5156, .STAT_ISDIR
    set $P5130["STAT_ISDIR"], $P5156
    box $P5157, .STAT_ISREG
    set $P5130["STAT_ISREG"], $P5157
    box $P5158, .STAT_ISDEV
    set $P5130["STAT_ISDEV"], $P5158
    box $P5159, .STAT_CREATETIME
    set $P5130["STAT_CREATETIME"], $P5159
    box $P5160, .STAT_ACCESSTIME
    set $P5130["STAT_ACCESSTIME"], $P5160
    box $P5161, .STAT_MODIFYTIME
    set $P5130["STAT_MODIFYTIME"], $P5161
    box $P5162, .STAT_CHANGETIME
    set $P5130["STAT_CHANGETIME"], $P5162
    box $P5163, .STAT_BACKUPTIME
    set $P5130["STAT_BACKUPTIME"], $P5163
    box $P5164, .STAT_PLATFORM_DEV
    set $P5130["STAT_PLATFORM_DEV"], $P5164
    box $P5165, .STAT_PLATFORM_INODE
    set $P5130["STAT_PLATFORM_INODE"], $P5165
    box $P5166, .STAT_PLATFORM_MODE
    set $P5130["STAT_PLATFORM_MODE"], $P5166
    box $P5167, .STAT_PLATFORM_NLINKS
    set $P5130["STAT_PLATFORM_NLINKS"], $P5167
    box $P5168, .STAT_PLATFORM_DEVTYPE
    set $P5130["STAT_PLATFORM_DEVTYPE"], $P5168
    box $P5169, .STAT_PLATFORM_BLOCKSIZE
    set $P5130["STAT_PLATFORM_BLOCKSIZE"], $P5169
    box $P5170, .STAT_PLATFORM_BLOCKS
    set $P5130["STAT_PLATFORM_BLOCKS"], $P5170
    box $P5171, .STAT_TYPE_UNKNOWN
    set $P5130["STAT_TYPE_UNKNOWN"], $P5171
    box $P5172, .STAT_TYPE_FILE
    set $P5130["STAT_TYPE_FILE"], $P5172
    box $P5173, .STAT_TYPE_DIRECTORY
    set $P5130["STAT_TYPE_DIRECTORY"], $P5173
    box $P5174, .STAT_TYPE_PIPE
    set $P5130["STAT_TYPE_PIPE"], $P5174
    box $P5175, .STAT_TYPE_LINK
    set $P5130["STAT_TYPE_LINK"], $P5175
    box $P5176, .STAT_TYPE_DEVICE
    set $P5130["STAT_TYPE_DEVICE"], $P5176
    set $P105, $P5130
.annotate 'line', 1485
    nqp_get_sc_object $P5177, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5179 = 'cuid_234_1368096764.976' 
    capture_lex $P5179
    newclosure $P5178, $P5179
    $P5177."add_core_op"("const", $P5178)
    box $P5180, 0
    set $P106, $P5180
    box $P5181, 1
    set $P107, $P5181
    new $P5182, 'Hash'
    box $P5183, ".CONTROL_ALL"
    set $P5182["CATCH"], $P5183
    box $P5184, ".CONTROL_ALL"
    set $P5182["CONTROL"], $P5184
    box $P5185, ".CONTROL_LOOP_NEXT"
    set $P5182["NEXT"], $P5185
    box $P5186, ".CONTROL_LOOP_LAST"
    set $P5182["LAST"], $P5186
    box $P5187, ".CONTROL_LOOP_REDO"
    set $P5182["REDO"], $P5187
    box $P5188, ".CONTROL_TAKE"
    set $P5182["TAKE"], $P5188
    box $P5189, ".CONTROL_BREAK"
    set $P5182["SUCCEED"], $P5189
    box $P5190, ".CONTROL_CONTINUE"
    set $P5182["PROCEED"], $P5190
    set $P108, $P5182
.annotate 'line', 1507
    nqp_get_sc_object $P5191, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5193 = 'cuid_236_1368096764.976' 
    capture_lex $P5193
    newclosure $P5192, $P5193
    $P5191."add_core_op"("handle", $P5192)
.annotate 'line', 1648
    nqp_get_sc_object $P5194, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5196 = 'cuid_244_1368096764.976' 
    capture_lex $P5196
    newclosure $P5195, $P5196
    $P5194."add_core_op"("exception", $P5195)
.annotate 'line', 1657
    nqp_get_sc_object $P5197, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5199 = 'cuid_245_1368096764.976' 
    capture_lex $P5199
    newclosure $P5198, $P5199
    $P5197."add_core_op"("getpayload", $P5198)
.annotate 'line', 1669
    nqp_get_sc_object $P5200, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5202 = 'cuid_246_1368096764.976' 
    capture_lex $P5202
    newclosure $P5201, $P5202
    $P5200."add_core_op"("setpayload", $P5201)
.annotate 'line', 1680
    nqp_get_sc_object $P5203, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5205 = 'cuid_247_1368096764.976' 
    capture_lex $P5205
    newclosure $P5204, $P5205
    $P5203."add_core_op"("getmessage", $P5204)
.annotate 'line', 1694
    nqp_get_sc_object $P5206, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5208 = 'cuid_248_1368096764.976' 
    capture_lex $P5208
    newclosure $P5207, $P5208
    $P5206."add_core_op"("setmessage", $P5207)
.annotate 'line', 1709
    nqp_get_sc_object $P5209, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5211 = 'cuid_249_1368096764.976' 
    capture_lex $P5211
    newclosure $P5210, $P5211
    $P5209."add_core_op"("backtracestrings", $P5210)
.annotate 'line', 1718
    nqp_get_sc_object $P5212, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5214 = 'cuid_250_1368096764.976' 
    capture_lex $P5214
    newclosure $P5213, $P5214
    $P5212."add_core_op"("newexception", $P5213)
.annotate 'line', 1728
    nqp_get_sc_object $P5215, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5215."add_core_pirop_mapping"("die_s", "die", "0s")
.annotate 'line', 1729
    nqp_get_sc_object $P5216, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5216."add_core_pirop_mapping"("die", "die", "0P")
.annotate 'line', 1730
    nqp_get_sc_object $P5217, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5217."add_core_pirop_mapping"("throw", "throw", "0P")
.annotate 'line', 1731
    nqp_get_sc_object $P5218, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5218."add_core_pirop_mapping"("rethrow", "rethrow", "0P")
.annotate 'line', 1732
    nqp_get_sc_object $P5219, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5221 = 'cuid_251_1368096764.976' 
    capture_lex $P5221
    newclosure $P5220, $P5221
    $P5219."add_core_op"("resume", $P5220)
    new $P5222, 'Hash'
    box $P5223, ".CONTROL_LOOP_NEXT"
    set $P5222["next"], $P5223
    box $P5224, ".CONTROL_LOOP_LAST"
    set $P5222["last"], $P5224
    box $P5225, ".CONTROL_LOOP_REDO"
    set $P5222["redo"], $P5225
    set $P109, $P5222
.annotate 'line', 1751
    nqp_get_sc_object $P5226, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5228 = 'cuid_253_1368096764.976' 
    capture_lex $P5228
    newclosure $P5227, $P5228
    $P5226."add_core_op"("control", $P5227)
    new $P5232, 'ResizablePMCArray'
    box $P5233, "i"
    push $P5232, $P5233
    box $P5234, "n"
    push $P5232, $P5234
    box $P5235, "s"
    push $P5232, $P5235
    set $P5229, $P5232
    iter $P5231, $P5232
  for_next1198:
    unless $P5231, for_done1200
    shift $P5237, $P5231
  for_redo1199:
    .const 'Sub' $P5236 = 'cuid_255_1368096764.976' 
    capture_lex $P5236
    $P5229 = $P5236($P5237)
    goto for_next1198
  for_done1200:
.annotate 'line', 1784
    nqp_get_sc_object $P5238, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5238."add_core_pirop_mapping"("positional_get", "set", "PQi", 1 :named("inlinable"))
.annotate 'line', 1785
    nqp_get_sc_object $P5239, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5239."add_core_pirop_mapping"("positional_bind", "set", "1QiP", 1 :named("inlinable"))
.annotate 'line', 1786
    nqp_get_sc_object $P5240, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5240."add_core_pirop_mapping"("associative_get", "set", "PQs", 1 :named("inlinable"))
.annotate 'line', 1787
    nqp_get_sc_object $P5241, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5241."add_core_pirop_mapping"("associative_bind", "set", "1QsP", 1 :named("inlinable"))
.annotate 'line', 1790
    nqp_get_sc_object $P5242, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5242."add_core_pirop_mapping"("print", "print", "0s", 1 :named("inlinable"))
.annotate 'line', 1791
    nqp_get_sc_object $P5243, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5243."add_core_pirop_mapping"("say", "say", "0s", 1 :named("inlinable"))
.annotate 'line', 1792
    nqp_get_sc_object $P5244, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5244."add_core_pirop_mapping"("stat", "stat", "Isi", 1 :named("inlinable"))
.annotate 'line', 1793
    nqp_get_sc_object $P5245, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5245."add_core_pirop_mapping"("open", "open", "Pss", 1 :named("inlinable"))
.annotate 'line', 1794
    nqp_get_sc_object $P5246, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5248 = 'cuid_257_1368096764.976' 
    capture_lex $P5248
    newclosure $P5247, $P5248
    $P5246."add_core_op"("getstdin", $P5247)
.annotate 'line', 1803
    nqp_get_sc_object $P5249, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5251 = 'cuid_258_1368096764.976' 
    capture_lex $P5251
    newclosure $P5250, $P5251
    $P5249."add_core_op"("getstdout", $P5250)
.annotate 'line', 1812
    nqp_get_sc_object $P5252, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5254 = 'cuid_259_1368096764.976' 
    capture_lex $P5254
    newclosure $P5253, $P5254
    $P5252."add_core_op"("getstderr", $P5253)
.annotate 'line', 1821
    nqp_get_sc_object $P5255, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5257 = 'cuid_260_1368096764.976' 
    capture_lex $P5257
    newclosure $P5256, $P5257
    $P5255."add_core_op"("setencoding", $P5256)
.annotate 'line', 1830
    nqp_get_sc_object $P5258, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5260 = 'cuid_261_1368096764.976' 
    capture_lex $P5260
    newclosure $P5259, $P5260
    $P5258."add_core_op"("tellfh", $P5259)
.annotate 'line', 1839
    nqp_get_sc_object $P5261, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5263 = 'cuid_262_1368096764.976' 
    capture_lex $P5263
    newclosure $P5262, $P5263
    $P5261."add_core_op"("printfh", $P5262)
.annotate 'line', 1848
    nqp_get_sc_object $P5264, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5266 = 'cuid_263_1368096764.976' 
    capture_lex $P5266
    newclosure $P5265, $P5266
    $P5264."add_core_op"("sayfh", $P5265)
.annotate 'line', 1857
    nqp_get_sc_object $P5267, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5269 = 'cuid_264_1368096764.976' 
    capture_lex $P5269
    newclosure $P5268, $P5269
    $P5267."add_core_op"("readlinefh", $P5268)
.annotate 'line', 1866
    nqp_get_sc_object $P5270, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5272 = 'cuid_265_1368096764.976' 
    capture_lex $P5272
    newclosure $P5271, $P5272
    $P5270."add_core_op"("readlineintfh", $P5271)
.annotate 'line', 1875
    nqp_get_sc_object $P5273, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5275 = 'cuid_266_1368096764.976' 
    capture_lex $P5275
    newclosure $P5274, $P5275
    $P5273."add_core_op"("readallfh", $P5274)
.annotate 'line', 1884
    nqp_get_sc_object $P5276, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5278 = 'cuid_267_1368096764.976' 
    capture_lex $P5278
    newclosure $P5277, $P5278
    $P5276."add_core_op"("eoffh", $P5277)
.annotate 'line', 1890
    nqp_get_sc_object $P5279, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5281 = 'cuid_268_1368096764.976' 
    capture_lex $P5281
    newclosure $P5280, $P5281
    $P5279."add_core_op"("closefh", $P5280)
.annotate 'line', 1900
    nqp_get_sc_object $P5282, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5284 = 'cuid_269_1368096764.976' 
    capture_lex $P5284
    newclosure $P5283, $P5284
    $P5282."add_core_op"("chmod", $P5283)
.annotate 'line', 1912
    nqp_get_sc_object $P5285, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5287 = 'cuid_270_1368096764.976' 
    capture_lex $P5287
    newclosure $P5286, $P5287
    $P5285."add_core_op"("unlink", $P5286)
.annotate 'line', 1923
    nqp_get_sc_object $P5288, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5290 = 'cuid_271_1368096764.976' 
    capture_lex $P5290
    newclosure $P5289, $P5290
    $P5288."add_core_op"("rmdir", $P5289)
.annotate 'line', 1934
    nqp_get_sc_object $P5291, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5293 = 'cuid_272_1368096764.976' 
    capture_lex $P5293
    newclosure $P5292, $P5293
    $P5291."add_core_op"("cwd", $P5292)
.annotate 'line', 1944
    nqp_get_sc_object $P5294, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5296 = 'cuid_273_1368096764.976' 
    capture_lex $P5296
    newclosure $P5295, $P5296
    $P5294."add_core_op"("chdir", $P5295)
.annotate 'line', 1955
    nqp_get_sc_object $P5297, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5299 = 'cuid_274_1368096764.976' 
    capture_lex $P5299
    newclosure $P5298, $P5299
    $P5297."add_core_op"("mkdir", $P5298)
.annotate 'line', 1967
    nqp_get_sc_object $P5300, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5302 = 'cuid_275_1368096764.976' 
    capture_lex $P5302
    newclosure $P5301, $P5302
    $P5300."add_core_op"("rename", $P5301)
.annotate 'line', 1979
    nqp_get_sc_object $P5303, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5305 = 'cuid_276_1368096764.976' 
    capture_lex $P5305
    newclosure $P5304, $P5305
    $P5303."add_core_op"("copy", $P5304)
.annotate 'line', 1991
    nqp_get_sc_object $P5306, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5308 = 'cuid_277_1368096764.976' 
    capture_lex $P5308
    newclosure $P5307, $P5308
    $P5306."add_core_op"("symlink", $P5307)
.annotate 'line', 2003
    nqp_get_sc_object $P5309, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5311 = 'cuid_278_1368096764.976' 
    capture_lex $P5311
    newclosure $P5310, $P5311
    $P5309."add_core_op"("link", $P5310)
.annotate 'line', 2017
    nqp_get_sc_object $P5312, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5312."add_core_pirop_mapping"("time_i", "time", "I", 1 :named("inlinable"))
.annotate 'line', 2018
    nqp_get_sc_object $P5313, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5313."add_core_pirop_mapping"("time_n", "time", "N", 1 :named("inlinable"))
.annotate 'line', 2021
    nqp_get_sc_object $P5314, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5314."add_core_pirop_mapping"("add_i", "add", "Iii", 1 :named("inlinable"))
.annotate 'line', 2022
    nqp_get_sc_object $P5315, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5315."add_core_pirop_mapping"("add_I", "nqp_bigint_add", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2023
    nqp_get_sc_object $P5316, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5316."add_core_pirop_mapping"("add_n", "add", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2024
    nqp_get_sc_object $P5317, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5317."add_core_pirop_mapping"("sub_i", "sub", "Iii", 1 :named("inlinable"))
.annotate 'line', 2025
    nqp_get_sc_object $P5318, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5318."add_core_pirop_mapping"("sub_I", "nqp_bigint_sub", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2026
    nqp_get_sc_object $P5319, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5319."add_core_pirop_mapping"("sub_n", "sub", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2027
    nqp_get_sc_object $P5320, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5320."add_core_pirop_mapping"("mul_i", "mul", "Iii", 1 :named("inlinable"))
.annotate 'line', 2028
    nqp_get_sc_object $P5321, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5321."add_core_pirop_mapping"("mul_I", "nqp_bigint_mul", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2029
    nqp_get_sc_object $P5322, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5322."add_core_pirop_mapping"("mul_n", "mul", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2030
    nqp_get_sc_object $P5323, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5323."add_core_pirop_mapping"("div_i", "div", "Iii", 1 :named("inlinable"))
.annotate 'line', 2031
    nqp_get_sc_object $P5324, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5324."add_core_pirop_mapping"("div_I", "nqp_bigint_div", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2032
    nqp_get_sc_object $P5325, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5325."add_core_pirop_mapping"("div_In", "nqp_bigint_div_num", "NPP", 1 :named("inlinable"))
.annotate 'line', 2033
    nqp_get_sc_object $P5326, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5326."add_core_pirop_mapping"("div_n", "div", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2034
    nqp_get_sc_object $P5327, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5327."add_core_pirop_mapping"("mod_i", "mod", "Iii", 1 :named("inlinable"))
.annotate 'line', 2035
    nqp_get_sc_object $P5328, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5328."add_core_pirop_mapping"("mod_I", "nqp_bigint_mod", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2036
    nqp_get_sc_object $P5329, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5329."add_core_pirop_mapping"("expmod_I", "nqp_bigint_exp_mod", "PPPPP", 1 :named("inlinable"))
.annotate 'line', 2037
    nqp_get_sc_object $P5330, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5330."add_core_pirop_mapping"("isprime_I", "nqp_bigint_is_prime", "IPi", 1 :named("inlinable"))
.annotate 'line', 2038
    nqp_get_sc_object $P5331, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5331."add_core_pirop_mapping"("rand_I", "nqp_bigint_rand", "PPP", 1 :named("inlinable"))
.annotate 'line', 2039
    nqp_get_sc_object $P5332, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5332."add_core_pirop_mapping"("mod_n", "mod", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2040
    nqp_get_sc_object $P5333, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5333."add_core_pirop_mapping"("pow_n", "pow", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2041
    nqp_get_sc_object $P5334, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5334."add_core_pirop_mapping"("pow_I", "nqp_bigint_pow", "PPPPP", 1 :named("inlinable"))
.annotate 'line', 2042
    nqp_get_sc_object $P5335, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5335."add_core_pirop_mapping"("neg_i", "neg", "Ii", 1 :named("inlinable"))
.annotate 'line', 2043
    nqp_get_sc_object $P5336, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5336."add_core_pirop_mapping"("neg_I", "nqp_bigint_neg", "PPP", 1 :named("inlinable"))
.annotate 'line', 2044
    nqp_get_sc_object $P5337, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5337."add_core_pirop_mapping"("neg_n", "neg", "Nn", 1 :named("inlinable"))
.annotate 'line', 2045
    nqp_get_sc_object $P5338, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5338."add_core_pirop_mapping"("abs_i", "abs", "Ii", 1 :named("inlinable"))
.annotate 'line', 2046
    nqp_get_sc_object $P5339, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5339."add_core_pirop_mapping"("abs_I", "nqp_bigint_abs", "PPP", 1 :named("inlinable"))
.annotate 'line', 2047
    nqp_get_sc_object $P5340, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5340."add_core_pirop_mapping"("abs_n", "abs", "Nn", 1 :named("inlinable"))
.annotate 'line', 2049
    nqp_get_sc_object $P5341, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5341."add_core_pirop_mapping"("gcd_i", "gcd", "Iii", 1 :named("inlinable"))
.annotate 'line', 2050
    nqp_get_sc_object $P5342, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5342."add_core_pirop_mapping"("gcd_I", "nqp_bigint_gcd", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2051
    nqp_get_sc_object $P5343, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5343."add_core_pirop_mapping"("lcm_i", "lcm", "Iii", 1 :named("inlinable"))
.annotate 'line', 2052
    nqp_get_sc_object $P5344, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5344."add_core_pirop_mapping"("lcm_I", "nqp_bigint_lcm", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2054
    nqp_get_sc_object $P5345, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5345."add_core_pirop_mapping"("ceil_n", "ceil", "Nn", 1 :named("inlinable"))
.annotate 'line', 2055
    nqp_get_sc_object $P5346, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5346."add_core_pirop_mapping"("floor_n", "floor", "NN", 1 :named("inlinable"))
.annotate 'line', 2056
    nqp_get_sc_object $P5347, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5347."add_core_pirop_mapping"("ln_n", "ln", "Nn", 1 :named("inlinable"))
.annotate 'line', 2057
    nqp_get_sc_object $P5348, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5348."add_core_pirop_mapping"("sqrt_n", "sqrt", "Nn", 1 :named("inlinable"))
.annotate 'line', 2058
    nqp_get_sc_object $P5349, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5349."add_core_pirop_mapping"("radix", "nqp_radix", "Pisii", 1 :named("inlinable"))
.annotate 'line', 2059
    nqp_get_sc_object $P5350, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5350."add_core_pirop_mapping"("radix_I", "nqp_bigint_radix", "PisiiP", 1 :named("inlinable"))
.annotate 'line', 2060
    nqp_get_sc_object $P5351, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5351."add_core_pirop_mapping"("log_n", "ln", "NN", 1 :named("inlinable"))
.annotate 'line', 2061
    nqp_get_sc_object $P5352, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5352."add_core_pirop_mapping"("exp_n", "exp", "Nn", 1 :named("inlinable"))
.annotate 'line', 2062
    nqp_get_sc_object $P5353, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5353."add_core_pirop_mapping"("isnanorinf", "is_inf_or_nan", "In", 1 :named("inlinable"))
.annotate 'line', 2065
    nqp_get_sc_object $P5354, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5354."add_core_pirop_mapping"("sin_n", "sin", "NN", 1 :named("inlinable"))
.annotate 'line', 2066
    nqp_get_sc_object $P5355, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5355."add_core_pirop_mapping"("asin_n", "asin", "NN", 1 :named("inlinable"))
.annotate 'line', 2067
    nqp_get_sc_object $P5356, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5356."add_core_pirop_mapping"("cos_n", "cos", "NN", 1 :named("inlinable"))
.annotate 'line', 2068
    nqp_get_sc_object $P5357, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5357."add_core_pirop_mapping"("acos_n", "acos", "NN", 1 :named("inlinable"))
.annotate 'line', 2069
    nqp_get_sc_object $P5358, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5358."add_core_pirop_mapping"("tan_n", "tan", "NN", 1 :named("inlinable"))
.annotate 'line', 2070
    nqp_get_sc_object $P5359, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5359."add_core_pirop_mapping"("atan_n", "atan", "NN", 1 :named("inlinable"))
.annotate 'line', 2071
    nqp_get_sc_object $P5360, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5360."add_core_pirop_mapping"("atan2_n", "atan", "NNN", 1 :named("inlinable"))
.annotate 'line', 2072
    nqp_get_sc_object $P5361, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5361."add_core_pirop_mapping"("sec_n", "sec", "NN", 1 :named("inlinable"))
.annotate 'line', 2073
    nqp_get_sc_object $P5362, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5362."add_core_pirop_mapping"("asec_n", "asec", "NN", 1 :named("inlinable"))
.annotate 'line', 2074
    nqp_get_sc_object $P5363, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5363."add_core_pirop_mapping"("sin_n", "sin", "NN", 1 :named("inlinable"))
.annotate 'line', 2075
    nqp_get_sc_object $P5364, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5364."add_core_pirop_mapping"("asin_n", "asin", "NN", 1 :named("inlinable"))
.annotate 'line', 2076
    nqp_get_sc_object $P5365, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5365."add_core_pirop_mapping"("sinh_n", "sinh", "NN", 1 :named("inlinable"))
.annotate 'line', 2077
    nqp_get_sc_object $P5366, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5366."add_core_pirop_mapping"("cosh_n", "cosh", "NN", 1 :named("inlinable"))
.annotate 'line', 2078
    nqp_get_sc_object $P5367, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5367."add_core_pirop_mapping"("tanh_n", "tanh", "NN", 1 :named("inlinable"))
.annotate 'line', 2079
    nqp_get_sc_object $P5368, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5368."add_core_pirop_mapping"("sech_n", "sech", "NN", 1 :named("inlinable"))
.annotate 'line', 2082
    nqp_get_sc_object $P5369, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5369."add_core_pirop_mapping"("bitor_i", "bor", "Iii", 1 :named("inlinable"))
.annotate 'line', 2083
    nqp_get_sc_object $P5370, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5370."add_core_pirop_mapping"("bitor_I", "nqp_bigint_bor", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2084
    nqp_get_sc_object $P5371, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5371."add_core_pirop_mapping"("bitxor_i", "bxor", "Iii", 1 :named("inlinable"))
.annotate 'line', 2085
    nqp_get_sc_object $P5372, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5372."add_core_pirop_mapping"("bitxor_I", "nqp_bigint_bxor", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2086
    nqp_get_sc_object $P5373, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5373."add_core_pirop_mapping"("bitand_i", "band", "Iii", 1 :named("inlinable"))
.annotate 'line', 2087
    nqp_get_sc_object $P5374, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5374."add_core_pirop_mapping"("bitand_I", "nqp_bigint_band", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2088
    nqp_get_sc_object $P5375, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5375."add_core_pirop_mapping"("bitneg_i", "bnot", "Ii", 1 :named("inlinable"))
.annotate 'line', 2089
    nqp_get_sc_object $P5376, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5376."add_core_pirop_mapping"("bitneg_I", "nqp_bigint_bnot", "PPP", 1 :named("inlinable"))
.annotate 'line', 2090
    nqp_get_sc_object $P5377, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5377."add_core_pirop_mapping"("bitshiftl_i", "shl", "Iii", 1 :named("inlinable"))
.annotate 'line', 2091
    nqp_get_sc_object $P5378, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5378."add_core_pirop_mapping"("bitshiftl_I", "nqp_bigint_shl", "PPIP", 1 :named("inlinable"))
.annotate 'line', 2092
    nqp_get_sc_object $P5379, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5379."add_core_pirop_mapping"("bitshiftr_i", "shr", "Iii", 1 :named("inlinable"))
.annotate 'line', 2093
    nqp_get_sc_object $P5380, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5380."add_core_pirop_mapping"("bitshiftr_I", "nqp_bigint_shr", "PPIP", 1 :named("inlinable"))
.annotate 'line', 2096
    nqp_get_sc_object $P5381, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5381."add_core_pirop_mapping"("bitor_s", "bors", "Sss", 1 :named("inlinable"))
.annotate 'line', 2097
    nqp_get_sc_object $P5382, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5382."add_core_pirop_mapping"("bitxor_s", "bxors", "Sss", 1 :named("inlinable"))
.annotate 'line', 2098
    nqp_get_sc_object $P5383, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5383."add_core_pirop_mapping"("bitand_s", "bands", "Sss", 1 :named("inlinable"))
.annotate 'line', 2101
    nqp_get_sc_object $P5384, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5384."add_core_pirop_mapping"("chars", "length", "Is", 1 :named("inlinable"))
.annotate 'line', 2102
    nqp_get_sc_object $P5385, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5385."add_core_pirop_mapping"("concat", "concat", "Sss", 1 :named("inlinable"))
.annotate 'line', 2103
    nqp_get_sc_object $P5386, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5386."add_core_pirop_mapping"("concat_s", "concat", "Sss", 1 :named("inlinable"))
.annotate 'line', 2104
    nqp_get_sc_object $P5387, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5387."add_core_pirop_mapping"("join", "join", "SsP", 1 :named("inlinable"))
.annotate 'line', 2105
    nqp_get_sc_object $P5388, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5388."add_core_pirop_mapping"("split", "split", "Pss", 1 :named("inlinable"))
.annotate 'line', 2106
    nqp_get_sc_object $P5389, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5389."add_core_pirop_mapping"("chr", "chr", "Si", 1 :named("inlinable"))
.annotate 'line', 2107
    nqp_get_sc_object $P5390, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5390."add_core_pirop_mapping"("lc", "downcase", "Ss", 1 :named("inlinable"))
.annotate 'line', 2108
    nqp_get_sc_object $P5391, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5391."add_core_pirop_mapping"("uc", "upcase", "Ss", 1 :named("inlinable"))
.annotate 'line', 2109
    nqp_get_sc_object $P5392, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5392."add_core_pirop_mapping"("x", "repeat", "Ssi", 1 :named("inlinable"))
.annotate 'line', 2110
    nqp_get_sc_object $P5393, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5393."add_core_pirop_mapping"("iscclass", "is_cclass", "Iisi", 1 :named("inlinable"))
.annotate 'line', 2111
    nqp_get_sc_object $P5394, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5394."add_core_pirop_mapping"("findcclass", "find_cclass", "Iisii", 1 :named("inlinable"))
.annotate 'line', 2112
    nqp_get_sc_object $P5395, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5395."add_core_pirop_mapping"("findnotcclass", "find_not_cclass", "Iisii", 1 :named("inlinable"))
.annotate 'line', 2113
    nqp_get_sc_object $P5396, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5396."add_core_pirop_mapping"("sprintf", "sprintf", "SsP", 1 :named("inlinable"))
.annotate 'line', 2114
    nqp_get_sc_object $P5397, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5397."add_core_pirop_mapping"("escape", "escape", "Ss", 1 :named("inlinable"))
.annotate 'line', 2116
    nqp_get_sc_object $P5398, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5400 = 'cuid_279_1368096764.976' 
    capture_lex $P5400
    newclosure $P5399, $P5400
    $P5398."add_core_op"("flip", $P5399, 1 :named("inlinable"))
.annotate 'line', 2130
    nqp_get_sc_object $P5401, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5401."add_core_pirop_mapping"("substr2", "substr", "Ssi", 1 :named("inlinable"))
.annotate 'line', 2131
    nqp_get_sc_object $P5402, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5402."add_core_pirop_mapping"("substr3", "substr", "Ssii", 1 :named("inlinable"))
.annotate 'line', 2132
    nqp_get_sc_object $P5403, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5405 = 'cuid_280_1368096764.976' 
    capture_lex $P5405
    newclosure $P5404, $P5405
    $P5403."add_core_op"("substr", $P5404, 1 :named("inlinable"))
.annotate 'line', 2140
    nqp_get_sc_object $P5406, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5406."add_core_pirop_mapping"("ordfirst", "ord", "Is", 1 :named("inlinable"))
.annotate 'line', 2141
    nqp_get_sc_object $P5407, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5407."add_core_pirop_mapping"("ordat", "ord", "Isi", 1 :named("inlinable"))
.annotate 'line', 2142
    nqp_get_sc_object $P5408, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5410 = 'cuid_281_1368096764.976' 
    capture_lex $P5410
    newclosure $P5409, $P5410
    $P5408."add_core_op"("ord", $P5409, 1 :named("inlinable"))
.annotate 'line', 2150
    nqp_get_sc_object $P5411, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5411."add_core_pirop_mapping"("indexfrom", "index", "Issi", 1 :named("inlinable"))
.annotate 'line', 2151
    nqp_get_sc_object $P5412, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5414 = 'cuid_282_1368096764.976' 
    capture_lex $P5414
    newclosure $P5413, $P5414
    $P5412."add_core_op"("index", $P5413, 1 :named("inlinable"))
.annotate 'line', 2157
    nqp_get_sc_object $P5415, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5415."add_core_pirop_mapping"("rindexfrom", "rindex", "Issi", 1 :named("inlinable"))
.annotate 'line', 2158
    nqp_get_sc_object $P5416, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5416."add_core_pirop_mapping"("rindexfromend", "rindex", "Iss", 1 :named("inlinable"))
.annotate 'line', 2159
    nqp_get_sc_object $P5417, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5419 = 'cuid_283_1368096764.976' 
    capture_lex $P5419
    newclosure $P5418, $P5419
    $P5417."add_core_op"("rindex", $P5418, 1 :named("inlinable"))
.annotate 'line', 2166
    nqp_get_sc_object $P5420, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5422 = 'cuid_284_1368096764.976' 
    capture_lex $P5422
    newclosure $P5421, $P5422
    $P5420."add_core_op"("codepointfromname", $P5421, 1 :named("inlinable"))
.annotate 'line', 2182
    nqp_get_sc_object $P5423, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5423."add_core_pirop_mapping"("cmp_i", "cmp", "Iii", 1 :named("inlinable"))
.annotate 'line', 2183
    nqp_get_sc_object $P5424, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5424."add_core_pirop_mapping"("iseq_i", "iseq", "Iii", 1 :named("inlinable"))
.annotate 'line', 2184
    nqp_get_sc_object $P5425, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5425."add_core_pirop_mapping"("isne_i", "isne", "Iii", 1 :named("inlinable"))
.annotate 'line', 2185
    nqp_get_sc_object $P5426, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5426."add_core_pirop_mapping"("islt_i", "islt", "Iii", 1 :named("inlinable"))
.annotate 'line', 2186
    nqp_get_sc_object $P5427, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5427."add_core_pirop_mapping"("isle_i", "isle", "Iii", 1 :named("inlinable"))
.annotate 'line', 2187
    nqp_get_sc_object $P5428, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5428."add_core_pirop_mapping"("isgt_i", "isgt", "Iii", 1 :named("inlinable"))
.annotate 'line', 2188
    nqp_get_sc_object $P5429, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5429."add_core_pirop_mapping"("isge_i", "isge", "Iii", 1 :named("inlinable"))
.annotate 'line', 2190
    nqp_get_sc_object $P5430, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5430."add_core_pirop_mapping"("bool_I", "nqp_bigint_bool", "IP", 1 :named("inlinable"))
.annotate 'line', 2191
    nqp_get_sc_object $P5431, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5431."add_core_pirop_mapping"("cmp_I", "nqp_bigint_cmp", "IPP", 1 :named("inlinable"))
.annotate 'line', 2192
    nqp_get_sc_object $P5432, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5432."add_core_pirop_mapping"("iseq_I", "nqp_bigint_eq", "IPP", 1 :named("inlinable"))
.annotate 'line', 2193
    nqp_get_sc_object $P5433, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5433."add_core_pirop_mapping"("isne_I", "nqp_bigint_ne", "IPP", 1 :named("inlinable"))
.annotate 'line', 2194
    nqp_get_sc_object $P5434, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5434."add_core_pirop_mapping"("islt_I", "nqp_bigint_lt", "IPP", 1 :named("inlinable"))
.annotate 'line', 2195
    nqp_get_sc_object $P5435, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5435."add_core_pirop_mapping"("isle_I", "nqp_bigint_le", "IPP", 1 :named("inlinable"))
.annotate 'line', 2196
    nqp_get_sc_object $P5436, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5436."add_core_pirop_mapping"("isgt_I", "nqp_bigint_gt", "IPP", 1 :named("inlinable"))
.annotate 'line', 2197
    nqp_get_sc_object $P5437, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5437."add_core_pirop_mapping"("isge_I", "nqp_bigint_ge", "IPP", 1 :named("inlinable"))
.annotate 'line', 2199
    nqp_get_sc_object $P5438, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5438."add_core_pirop_mapping"("cmp_n", "cmp", "Inn", 1 :named("inlinable"))
.annotate 'line', 2200
    nqp_get_sc_object $P5439, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5439."add_core_pirop_mapping"("iseq_n", "iseq", "Inn", 1 :named("inlinable"))
.annotate 'line', 2201
    nqp_get_sc_object $P5440, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5440."add_core_pirop_mapping"("isne_n", "isne", "Inn", 1 :named("inlinable"))
.annotate 'line', 2202
    nqp_get_sc_object $P5441, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5441."add_core_pirop_mapping"("islt_n", "islt", "Inn", 1 :named("inlinable"))
.annotate 'line', 2203
    nqp_get_sc_object $P5442, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5442."add_core_pirop_mapping"("isle_n", "isle", "Inn", 1 :named("inlinable"))
.annotate 'line', 2204
    nqp_get_sc_object $P5443, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5443."add_core_pirop_mapping"("isgt_n", "isgt", "Inn", 1 :named("inlinable"))
.annotate 'line', 2205
    nqp_get_sc_object $P5444, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5444."add_core_pirop_mapping"("isge_n", "isge", "Inn", 1 :named("inlinable"))
.annotate 'line', 2207
    nqp_get_sc_object $P5445, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5445."add_core_pirop_mapping"("cmp_s", "cmp", "Iss", 1 :named("inlinable"))
.annotate 'line', 2208
    nqp_get_sc_object $P5446, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5446."add_core_pirop_mapping"("iseq_s", "iseq", "Iss", 1 :named("inlinable"))
.annotate 'line', 2209
    nqp_get_sc_object $P5447, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5447."add_core_pirop_mapping"("isne_s", "isne", "Iss", 1 :named("inlinable"))
.annotate 'line', 2210
    nqp_get_sc_object $P5448, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5448."add_core_pirop_mapping"("islt_s", "islt", "Iss", 1 :named("inlinable"))
.annotate 'line', 2211
    nqp_get_sc_object $P5449, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5449."add_core_pirop_mapping"("isle_s", "isle", "Iss", 1 :named("inlinable"))
.annotate 'line', 2212
    nqp_get_sc_object $P5450, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5450."add_core_pirop_mapping"("isgt_s", "isgt", "Iss", 1 :named("inlinable"))
.annotate 'line', 2213
    nqp_get_sc_object $P5451, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5451."add_core_pirop_mapping"("isge_s", "isge", "Iss", 1 :named("inlinable"))
.annotate 'line', 2216
    nqp_get_sc_object $P5452, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5452."add_core_pirop_mapping"("fromstr_I", "nqp_bigint_from_str", "PsP", 1 :named("inlinable"))
.annotate 'line', 2217
    nqp_get_sc_object $P5453, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5453."add_core_pirop_mapping"("tostr_I", "nqp_bigint_to_str", "SP", 1 :named("inlinable"))
.annotate 'line', 2218
    nqp_get_sc_object $P5454, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5454."add_core_pirop_mapping"("base_I", "nqp_bigint_to_str_base", "SPI", 1 :named("inlinable"))
.annotate 'line', 2219
    nqp_get_sc_object $P5455, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5455."add_core_pirop_mapping"("isbig_I", "nqp_bigint_is_big", "IP", 1 :named("inlinable"))
.annotate 'line', 2220
    nqp_get_sc_object $P5456, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5456."add_core_pirop_mapping"("fromnum_I", "nqp_bigint_from_num", "PNP", 1 :named("inlinable"))
.annotate 'line', 2221
    nqp_get_sc_object $P5457, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5457."add_core_pirop_mapping"("tonum_I", "nqp_bigint_to_num", "NP", 1 :named("inlinable"))
.annotate 'line', 2224
    nqp_get_sc_object $P5458, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5458."add_core_pirop_mapping"("buildnativecall", "nqp_native_call_build", "vPsssPP")
.annotate 'line', 2225
    nqp_get_sc_object $P5459, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5459."add_core_pirop_mapping"("nativecall", "nqp_native_call", "PPPP")
.annotate 'line', 2226
    nqp_get_sc_object $P5460, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5460."add_core_pirop_mapping"("nativecallrefresh", "nqp_native_call_wb", "vP")
.annotate 'line', 2227
    nqp_get_sc_object $P5461, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5461."add_core_pirop_mapping"("x_posixerrno", "nqp_posixerrno", "I")
.annotate 'line', 2230
    nqp_get_sc_object $P5462, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5462."add_core_pirop_mapping"("not_i", "not", "Ii", 1 :named("inlinable"))
.annotate 'line', 2233
    nqp_get_sc_object $P5463, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5463."add_core_pirop_mapping"("atkey", "set", "PQs", 1 :named("inlinable"))
.annotate 'line', 2234
    nqp_get_sc_object $P5464, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5464."add_core_pirop_mapping"("atkey_i", "set", "IQs", 1 :named("inlinable"))
.annotate 'line', 2235
    nqp_get_sc_object $P5465, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5465."add_core_pirop_mapping"("atkey_n", "set", "NQs", 1 :named("inlinable"))
.annotate 'line', 2236
    nqp_get_sc_object $P5466, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5466."add_core_pirop_mapping"("atkey_s", "set", "SQs", 1 :named("inlinable"))
.annotate 'line', 2237
    nqp_get_sc_object $P5467, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5467."add_core_pirop_mapping"("atpos", "set", "PQi", 1 :named("inlinable"))
.annotate 'line', 2238
    nqp_get_sc_object $P5468, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5468."add_core_pirop_mapping"("atpos_i", "set", "IQi", 1 :named("inlinable"))
.annotate 'line', 2239
    nqp_get_sc_object $P5469, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5469."add_core_pirop_mapping"("atpos_n", "set", "NQi", 1 :named("inlinable"))
.annotate 'line', 2240
    nqp_get_sc_object $P5470, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5470."add_core_pirop_mapping"("atpos_s", "set", "SQi", 1 :named("inlinable"))
.annotate 'line', 2241
    nqp_get_sc_object $P5471, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5471."add_core_pirop_mapping"("bindkey", "set", "1QsP", 1 :named("inlinable"))
.annotate 'line', 2242
    nqp_get_sc_object $P5472, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5472."add_core_pirop_mapping"("bindkey_i", "set", "1QsI", 1 :named("inlinable"))
.annotate 'line', 2243
    nqp_get_sc_object $P5473, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5473."add_core_pirop_mapping"("bindkey_n", "set", "1QsN", 1 :named("inlinable"))
.annotate 'line', 2244
    nqp_get_sc_object $P5474, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5474."add_core_pirop_mapping"("bindkey_s", "set", "1QsS", 1 :named("inlinable"))
.annotate 'line', 2245
    nqp_get_sc_object $P5475, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5475."add_core_pirop_mapping"("bindpos", "set", "1QiP", 1 :named("inlinable"))
.annotate 'line', 2246
    nqp_get_sc_object $P5476, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5476."add_core_pirop_mapping"("bindpos_i", "set", "1Qii", 1 :named("inlinable"))
.annotate 'line', 2247
    nqp_get_sc_object $P5477, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5477."add_core_pirop_mapping"("bindpos_n", "set", "1Qin", 1 :named("inlinable"))
.annotate 'line', 2248
    nqp_get_sc_object $P5478, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5478."add_core_pirop_mapping"("bindpos_s", "set", "1Qis", 1 :named("inlinable"))
.annotate 'line', 2249
    nqp_get_sc_object $P5479, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5479."add_core_pirop_mapping"("deletekey", "delete", "0Qs", 1 :named("inlinable"))
.annotate 'line', 2250
    nqp_get_sc_object $P5480, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5480."add_core_pirop_mapping"("deletepos", "delete", "0Qi", 1 :named("inlinable"))
.annotate 'line', 2251
    nqp_get_sc_object $P5481, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5481."add_core_pirop_mapping"("existskey", "exists", "IQs", 1 :named("inlinable"))
.annotate 'line', 2252
    nqp_get_sc_object $P5482, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5482."add_core_pirop_mapping"("existspos", "exists", "IQi", 1 :named("inlinable"))
.annotate 'line', 2253
    nqp_get_sc_object $P5483, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5483."add_core_pirop_mapping"("elems", "elements", "IP", 1 :named("inlinable"))
.annotate 'line', 2254
    nqp_get_sc_object $P5484, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5484."add_core_pirop_mapping"("setelems", "assign", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2255
    nqp_get_sc_object $P5485, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5485."add_core_pirop_mapping"("push", "push", "0PP", 1 :named("inlinable"))
.annotate 'line', 2256
    nqp_get_sc_object $P5486, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5486."add_core_pirop_mapping"("push_s", "push", "0Ps", 1 :named("inlinable"))
.annotate 'line', 2257
    nqp_get_sc_object $P5487, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5487."add_core_pirop_mapping"("push_i", "push", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2258
    nqp_get_sc_object $P5488, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5488."add_core_pirop_mapping"("push_n", "push", "0Pn", 1 :named("inlinable"))
.annotate 'line', 2259
    nqp_get_sc_object $P5489, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5489."add_core_pirop_mapping"("pop", "pop", "PP", 1 :named("inlinable"))
.annotate 'line', 2260
    nqp_get_sc_object $P5490, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5490."add_core_pirop_mapping"("pop_s", "pop", "SP", 1 :named("inlinable"))
.annotate 'line', 2261
    nqp_get_sc_object $P5491, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5491."add_core_pirop_mapping"("pop_i", "pop", "IP", 1 :named("inlinable"))
.annotate 'line', 2262
    nqp_get_sc_object $P5492, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5492."add_core_pirop_mapping"("pop_n", "pop", "NP", 1 :named("inlinable"))
.annotate 'line', 2263
    nqp_get_sc_object $P5493, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5493."add_core_pirop_mapping"("shift", "shift", "PP", 1 :named("inlinable"))
.annotate 'line', 2264
    nqp_get_sc_object $P5494, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5494."add_core_pirop_mapping"("shift_s", "shift", "SP", 1 :named("inlinable"))
.annotate 'line', 2265
    nqp_get_sc_object $P5495, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5495."add_core_pirop_mapping"("shift_i", "shift", "IP", 1 :named("inlinable"))
.annotate 'line', 2266
    nqp_get_sc_object $P5496, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5496."add_core_pirop_mapping"("shift_n", "shift", "NP", 1 :named("inlinable"))
.annotate 'line', 2267
    nqp_get_sc_object $P5497, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5497."add_core_pirop_mapping"("unshift", "unshift", "0PP", 1 :named("inlinable"))
.annotate 'line', 2268
    nqp_get_sc_object $P5498, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5498."add_core_pirop_mapping"("unshift_s", "unshift", "0Ps", 1 :named("inlinable"))
.annotate 'line', 2269
    nqp_get_sc_object $P5499, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5499."add_core_pirop_mapping"("unshift_i", "unshift", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2270
    nqp_get_sc_object $P5500, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5500."add_core_pirop_mapping"("unshift_n", "unshift", "0Pn", 1 :named("inlinable"))
.annotate 'line', 2271
    nqp_get_sc_object $P5501, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5501."add_core_pirop_mapping"("splice", "splice", "0PPii", 1 :named("inlinable"))
.annotate 'line', 2272
    nqp_get_sc_object $P5502, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5502."add_core_pirop_mapping"("isint", "nqp_isint", "IP", 1 :named("inlinable"))
.annotate 'line', 2273
    nqp_get_sc_object $P5503, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5503."add_core_pirop_mapping"("isnum", "nqp_isnum", "IP", 1 :named("inlinable"))
.annotate 'line', 2274
    nqp_get_sc_object $P5504, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5504."add_core_pirop_mapping"("isstr", "nqp_isstr", "IP", 1 :named("inlinable"))
.annotate 'line', 2275
    nqp_get_sc_object $P5505, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5505."add_core_pirop_mapping"("islist", "nqp_islist", "IP", 1 :named("inlinable"))
.annotate 'line', 2276
    nqp_get_sc_object $P5506, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5506."add_core_pirop_mapping"("ishash", "nqp_ishash", "IP", 1 :named("inlinable"))
.annotate 'line', 2277
    nqp_get_sc_object $P5507, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5507."add_core_pirop_mapping"("isinvokable", "is_invokable", "IP", 1 :named("inlinable"))
.annotate 'line', 2278
    nqp_get_sc_object $P5508, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5508."add_core_pirop_mapping"("iterator", "iter", "PP", 1 :named("inlinable"))
.annotate 'line', 2279
    nqp_get_sc_object $P5509, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5511 = 'cuid_285_1368096764.976' 
    capture_lex $P5511
    newclosure $P5510, $P5511
    $P5509."add_core_op"("iterkey_s", $P5510)
.annotate 'line', 2282
    nqp_get_sc_object $P5512, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5514 = 'cuid_286_1368096764.976' 
    capture_lex $P5514
    newclosure $P5513, $P5514
    $P5512."add_core_op"("iterval", $P5513)
.annotate 'line', 2287
    nqp_get_sc_object $P5515, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5515."add_core_pirop_mapping"("r_atpos", "repr_at_pos_obj", "PPi", 1 :named("inlinable"))
.annotate 'line', 2288
    nqp_get_sc_object $P5516, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5516."add_core_pirop_mapping"("r_atpos_i", "repr_at_pos_int", "IPi", 1 :named("inlinable"))
.annotate 'line', 2289
    nqp_get_sc_object $P5517, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5517."add_core_pirop_mapping"("r_atpos_n", "repr_at_pos_num", "NPi", 1 :named("inlinable"))
.annotate 'line', 2290
    nqp_get_sc_object $P5518, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5518."add_core_pirop_mapping"("r_bindpos", "repr_bind_pos_obj", "2PiP", 1 :named("inlinable"))
.annotate 'line', 2291
    nqp_get_sc_object $P5519, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5519."add_core_pirop_mapping"("r_bindpos_i", "repr_bind_pos_int", "2Pii", 1 :named("inlinable"))
.annotate 'line', 2292
    nqp_get_sc_object $P5520, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5520."add_core_pirop_mapping"("r_bindpos_n", "repr_bind_pos_num", "2Pin", 1 :named("inlinable"))
.annotate 'line', 2293
    nqp_get_sc_object $P5521, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5521."add_core_pirop_mapping"("r_elems", "repr_elems", "IP", 1 :named("inlinable"))
.annotate 'line', 2296
    nqp_get_sc_object $P5522, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5522."add_core_pirop_mapping"("bindattr", "setattribute", "3PPsP", 1 :named("inlinable"))
.annotate 'line', 2297
    nqp_get_sc_object $P5523, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5523."add_core_pirop_mapping"("bindattr_i", "repr_bind_attr_int", "3PPsi", 1 :named("inlinable"))
.annotate 'line', 2298
    nqp_get_sc_object $P5524, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5524."add_core_pirop_mapping"("bindattr_n", "repr_bind_attr_num", "3PPsn", 1 :named("inlinable"))
.annotate 'line', 2299
    nqp_get_sc_object $P5525, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5525."add_core_pirop_mapping"("bindattr_s", "repr_bind_attr_str", "3PPss", 1 :named("inlinable"))
.annotate 'line', 2300
    nqp_get_sc_object $P5526, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5526."add_core_pirop_mapping"("getattr", "getattribute", "PPPs", 1 :named("inlinable"))
.annotate 'line', 2301
    nqp_get_sc_object $P5527, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5527."add_core_pirop_mapping"("getattr_i", "repr_get_attr_int", "IPPs", 1 :named("inlinable"))
.annotate 'line', 2302
    nqp_get_sc_object $P5528, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5528."add_core_pirop_mapping"("getattr_n", "repr_get_attr_num", "NPPs", 1 :named("inlinable"))
.annotate 'line', 2303
    nqp_get_sc_object $P5529, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5529."add_core_pirop_mapping"("getattr_s", "repr_get_attr_str", "SPPs", 1 :named("inlinable"))
.annotate 'line', 2304
    nqp_get_sc_object $P5530, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5530."add_core_pirop_mapping"("attrinited", "repr_is_attr_initialized", "IPPs", 1 :named("inlinable"))
.annotate 'line', 2305
    nqp_get_sc_object $P5531, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5531."add_core_pirop_mapping"("create", "repr_instance_of", "PP", 1 :named("inlinable"))
.annotate 'line', 2306
    nqp_get_sc_object $P5532, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5532."add_core_pirop_mapping"("clone", "repr_clone", "PP", 1 :named("inlinable"))
.annotate 'line', 2307
    nqp_get_sc_object $P5533, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5533."add_core_pirop_mapping"("isconcrete", "repr_defined", "IP", 1 :named("inlinable"))
.annotate 'line', 2308
    nqp_get_sc_object $P5534, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5534."add_core_pirop_mapping"("isnull", "isnull", "IP", 1 :named("inlinable"))
.annotate 'line', 2309
    nqp_get_sc_object $P5535, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5535."add_core_pirop_mapping"("isnull_s", "isnull", "IS", 1 :named("inlinable"))
.annotate 'line', 2310
    nqp_get_sc_object $P5536, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5536."add_core_pirop_mapping"("istrue", "istrue", "IP", 1 :named("inlinable"))
.annotate 'line', 2311
    nqp_get_sc_object $P5537, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5537."add_core_pirop_mapping"("isfalse", "isfalse", "IP", 1 :named("inlinable"))
.annotate 'line', 2312
    nqp_get_sc_object $P5538, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5538."add_core_pirop_mapping"("istype", "type_check", "IPP", 1 :named("inlinable"))
.annotate 'line', 2313
    nqp_get_sc_object $P5539, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5539."add_core_pirop_mapping"("null", "null", "P", 1 :named("inlinable"))
.annotate 'line', 2314
    nqp_get_sc_object $P5540, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5540."add_core_pirop_mapping"("null_s", "null", "S", 1 :named("inlinable"))
.annotate 'line', 2315
    nqp_get_sc_object $P5541, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5541."add_core_pirop_mapping"("unbox_i", "repr_unbox_int", "IP", 1 :named("inlinable"))
.annotate 'line', 2316
    nqp_get_sc_object $P5542, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5542."add_core_pirop_mapping"("unbox_n", "repr_unbox_num", "NP", 1 :named("inlinable"))
.annotate 'line', 2317
    nqp_get_sc_object $P5543, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5543."add_core_pirop_mapping"("unbox_s", "repr_unbox_str", "SP", 1 :named("inlinable"))
.annotate 'line', 2318
    nqp_get_sc_object $P5544, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5544."add_core_pirop_mapping"("box_i", "repr_box_int", "PiP", 1 :named("inlinable"))
.annotate 'line', 2319
    nqp_get_sc_object $P5545, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5545."add_core_pirop_mapping"("box_n", "repr_box_num", "PnP", 1 :named("inlinable"))
.annotate 'line', 2320
    nqp_get_sc_object $P5546, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5546."add_core_pirop_mapping"("box_s", "repr_box_str", "PsP", 1 :named("inlinable"))
.annotate 'line', 2321
    nqp_get_sc_object $P5547, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5547."add_core_pirop_mapping"("what", "get_what", "PP", 1 :named("inlinable"))
.annotate 'line', 2322
    nqp_get_sc_object $P5548, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5548."add_core_pirop_mapping"("how", "get_how", "PP", 1 :named("inlinable"))
.annotate 'line', 2323
    nqp_get_sc_object $P5549, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5549."add_core_pirop_mapping"("who", "get_who", "PP", 1 :named("inlinable"))
.annotate 'line', 2324
    nqp_get_sc_object $P5550, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5550."add_core_pirop_mapping"("where", "get_id", "IP", 1 :named("inlinable"))
.annotate 'line', 2325
    nqp_get_sc_object $P5551, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5551."add_core_pirop_mapping"("findmethod", "find_method", "PPs", 1 :named("inlinable"))
.annotate 'line', 2326
    nqp_get_sc_object $P5552, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5552."add_core_pirop_mapping"("defined", "defined", "IP", 1 :named("inlinable"))
.annotate 'line', 2327
    nqp_get_sc_object $P5553, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5553."add_core_pirop_mapping"("can", "can", "IPs", 1 :named("inlinable"))
.annotate 'line', 2328
    nqp_get_sc_object $P5554, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5554."add_core_pirop_mapping"("reprname", "repr_name", "SP", 1 :named("inlinable"))
.annotate 'line', 2329
    nqp_get_sc_object $P5555, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5555."add_core_pirop_mapping"("newtype", "repr_type_object_for", "PPs", 1 :named("inlinable"))
.annotate 'line', 2330
    nqp_get_sc_object $P5556, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5556."add_core_pirop_mapping"("composetype", "repr_compose", "0PP", 1 :named("inlinable"))
.annotate 'line', 2331
    nqp_get_sc_object $P5557, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5557."add_core_pirop_mapping"("setwho", "set_who", "0PP", 1 :named("inlinable"))
.annotate 'line', 2332
    nqp_get_sc_object $P5558, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5558."add_core_pirop_mapping"("rebless", "repr_change_type", "0PP", 1 :named("inlinable"))
.annotate 'line', 2333
    nqp_get_sc_object $P5559, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5559."add_core_pirop_mapping"("knowhow", "get_knowhow", "P", 1 :named("inlinable"))
.annotate 'line', 2334
    nqp_get_sc_object $P5560, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5560."add_core_pirop_mapping"("knowhowattr", "get_knowhow_attribute", "P", 1 :named("inlinable"))
.annotate 'line', 2335
    nqp_get_sc_object $P5561, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5561."add_core_pirop_mapping"("setboolspec", "set_boolification_spec", "0PiP", 1 :named("inlinable"))
.annotate 'line', 2336
    nqp_get_sc_object $P5562, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5562."add_core_pirop_mapping"("setmethcache", "publish_method_cache", "0PP", 1 :named("inlinable"))
.annotate 'line', 2337
    nqp_get_sc_object $P5563, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5563."add_core_pirop_mapping"("setmethcacheauth", "set_method_cache_authoritativeness", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2338
    nqp_get_sc_object $P5564, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5564."add_core_pirop_mapping"("settypecache", "publish_type_check_cache", "0PP", 1 :named("inlinable"))
.annotate 'line', 2339
    nqp_get_sc_object $P5565, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5565."add_core_pirop_mapping"("settypecheckmode", "stable_set_type_check_mode", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2340
    nqp_get_sc_object $P5566, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5566."add_core_pirop_mapping"("objprimspec", "repr_get_primitive_type_spec", "IP", 1 :named("inlinable"))
.annotate 'line', 2341
    nqp_get_sc_object $P5567, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5567."add_core_pirop_mapping"("setinvokespec", "set_invocation_spec", "0PPsP", 1 :named("inlinable"))
.annotate 'line', 2344
    nqp_get_sc_object $P5568, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5568."add_core_pirop_mapping"("setcontspec", "set_container_spec", "0PsP", 1 :named("inlinable"))
.annotate 'line', 2345
    nqp_get_sc_object $P5569, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5569."add_core_pirop_mapping"("iscont", "is_container", "IP", 1 :named("inlinable"))
.annotate 'line', 2346
    nqp_get_sc_object $P5570, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5570."add_core_pirop_mapping"("decont", "nqp_decontainerize", "PP", 1 :named("inlinable"))
.annotate 'line', 2347
    nqp_get_sc_object $P5571, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5571."add_core_pirop_mapping"("assign", "nqp_assign", "0PP", 1 :named("inlinable"))
.annotate 'line', 2348
    nqp_get_sc_object $P5572, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5572."add_core_pirop_mapping"("assignunchecked", "nqp_assignunchecked", "0PP", 1 :named("inlinable"))
.annotate 'line', 2351
    nqp_get_sc_object $P5573, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5573."add_core_pirop_mapping"("getlex", "find_lex", "Ps")
.annotate 'line', 2352
    nqp_get_sc_object $P5574, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5574."add_core_pirop_mapping"("getlex_i", "find_lex", "Is")
.annotate 'line', 2353
    nqp_get_sc_object $P5575, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5575."add_core_pirop_mapping"("getlex_n", "find_lex", "Ns")
.annotate 'line', 2354
    nqp_get_sc_object $P5576, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5576."add_core_pirop_mapping"("getlex_s", "find_lex", "Ss")
.annotate 'line', 2355
    nqp_get_sc_object $P5577, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5577."add_core_pirop_mapping"("bindlex", "store_lex", "1sP")
.annotate 'line', 2356
    nqp_get_sc_object $P5578, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5578."add_core_pirop_mapping"("bindlex_i", "store_lex", "1si")
.annotate 'line', 2357
    nqp_get_sc_object $P5579, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5579."add_core_pirop_mapping"("bindlex_n", "store_lex", "1sn")
.annotate 'line', 2358
    nqp_get_sc_object $P5580, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5580."add_core_pirop_mapping"("bindlex_s", "store_lex", "1ss")
.annotate 'line', 2359
    nqp_get_sc_object $P5581, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5581."add_core_pirop_mapping"("getlexdyn", "find_dynamic_lex", "Ps")
.annotate 'line', 2360
    nqp_get_sc_object $P5582, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5582."add_core_pirop_mapping"("bindlexdyn", "store_dynamic_lex", "1sP")
.annotate 'line', 2361
    nqp_get_sc_object $P5583, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5583."add_core_pirop_mapping"("getlexcaller", "find_caller_lex", "Ps")
.annotate 'line', 2362
    nqp_get_sc_object $P5584, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5584."add_core_pirop_mapping"("getlexouter", "nqp_getlexouter", "Ps")
.annotate 'line', 2363
    nqp_get_sc_object $P5585, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5585."add_core_pirop_mapping"("getlexrel", "nqp_getlexrel", "PPs")
.annotate 'line', 2364
    nqp_get_sc_object $P5586, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5586."add_core_pirop_mapping"("getlexreldyn", "nqp_getlexreldyn", "PPs")
.annotate 'line', 2365
    nqp_get_sc_object $P5587, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5587."add_core_pirop_mapping"("getlexrelcaller", "nqp_getlexrelcaller", "PPs")
.annotate 'line', 2368
    nqp_get_sc_object $P5588, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5588."add_core_pirop_mapping"("takeclosure", "newclosure", "PP")
.annotate 'line', 2369
    nqp_get_sc_object $P5589, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5589."add_core_pirop_mapping"("getcodeobj", "get_sub_code_object", "PP")
.annotate 'line', 2370
    nqp_get_sc_object $P5590, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5590."add_core_pirop_mapping"("setcodeobj", "set_sub_code_object", "1PP")
.annotate 'line', 2371
    nqp_get_sc_object $P5591, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5591."add_core_pirop_mapping"("getcodename", "set", "SP")
.annotate 'line', 2372
    nqp_get_sc_object $P5592, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5592."add_core_pirop_mapping"("setcodename", "assign", "1Ps")
.annotate 'line', 2373
    nqp_get_sc_object $P5593, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5595 = 'cuid_287_1368096764.976' 
    capture_lex $P5595
    newclosure $P5594, $P5595
    $P5593."add_core_op"("getcodecuid", $P5594)
.annotate 'line', 2382
    nqp_get_sc_object $P5596, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5598 = 'cuid_288_1368096764.976' 
    capture_lex $P5598
    newclosure $P5597, $P5598
    $P5596."add_core_op"("forceouterctx", $P5597)
.annotate 'line', 2391
    nqp_get_sc_object $P5599, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5599."add_core_pirop_mapping"("freshcoderef", "nqp_fresh_stub", "PP")
.annotate 'line', 2392
    nqp_get_sc_object $P5600, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5600."add_core_pirop_mapping"("replacecoderef", "assign", "0PP")
.annotate 'line', 2393
    nqp_get_sc_object $P5601, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5603 = 'cuid_289_1368096764.976' 
    capture_lex $P5603
    newclosure $P5602, $P5603
    $P5601."add_core_op"("markcodestatic", $P5602)
.annotate 'line', 2404
    nqp_get_sc_object $P5604, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5606 = 'cuid_290_1368096764.976' 
    capture_lex $P5606
    newclosure $P5605, $P5606
    $P5604."add_core_op"("markcodestub", $P5605)
.annotate 'line', 2415
    nqp_get_sc_object $P5607, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5609 = 'cuid_291_1368096764.976' 
    capture_lex $P5609
    newclosure $P5608, $P5609
    $P5607."add_core_op"("getstaticcode", $P5608)
.annotate 'line', 2426
    nqp_get_sc_object $P5610, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5610."add_core_pirop_mapping"("setdispatcher", "nqp_setdispatcher", "0P")
.annotate 'line', 2427
    nqp_get_sc_object $P5611, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5611."add_core_pirop_mapping"("takedispatcher", "nqp_takedispatcher", "0s")
.annotate 'line', 2430
    nqp_get_sc_object $P5612, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5612."add_core_pirop_mapping"("sha1", "nqp_sha1", "Ss")
.annotate 'line', 2431
    nqp_get_sc_object $P5613, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5613."add_core_pirop_mapping"("createsc", "nqp_create_sc", "Ps")
.annotate 'line', 2432
    nqp_get_sc_object $P5614, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5614."add_core_pirop_mapping"("scsetobj", "set", "1QiP")
.annotate 'line', 2433
    nqp_get_sc_object $P5615, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5615."add_core_pirop_mapping"("scsetcode", "nqp_add_code_ref_to_sc", "2PiP")
.annotate 'line', 2434
    nqp_get_sc_object $P5616, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5616."add_core_pirop_mapping"("scgetobj", "set", "PQi")
.annotate 'line', 2435
    nqp_get_sc_object $P5617, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5617."add_core_pirop_mapping"("scgetcode", "nqp_get_sc_code_ref", "Psi")
.annotate 'line', 2436
    nqp_get_sc_object $P5618, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5620 = 'cuid_292_1368096764.976' 
    capture_lex $P5620
    newclosure $P5619, $P5620
    $P5618."add_core_op"("scgethandle", $P5619)
.annotate 'line', 2442
    nqp_get_sc_object $P5621, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5623 = 'cuid_293_1368096764.976' 
    capture_lex $P5623
    newclosure $P5622, $P5623
    $P5621."add_core_op"("scgetdesc", $P5622)
.annotate 'line', 2448
    nqp_get_sc_object $P5624, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5626 = 'cuid_294_1368096764.976' 
    capture_lex $P5626
    newclosure $P5625, $P5626
    $P5624."add_core_op"("scgetobjidx", $P5625)
.annotate 'line', 2454
    nqp_get_sc_object $P5627, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5629 = 'cuid_295_1368096764.976' 
    capture_lex $P5629
    newclosure $P5628, $P5629
    $P5627."add_core_op"("scsetdesc", $P5628)
.annotate 'line', 2460
    nqp_get_sc_object $P5630, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5632 = 'cuid_296_1368096764.976' 
    capture_lex $P5632
    newclosure $P5631, $P5632
    $P5630."add_core_op"("scobjcount", $P5631)
.annotate 'line', 2466
    nqp_get_sc_object $P5633, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5633."add_core_pirop_mapping"("setobjsc", "nqp_set_sc_for_object", "0PP")
.annotate 'line', 2467
    nqp_get_sc_object $P5634, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5634."add_core_pirop_mapping"("getobjsc", "nqp_get_sc_for_object", "PP")
.annotate 'line', 2468
    nqp_get_sc_object $P5635, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5635."add_core_pirop_mapping"("serialize", "nqp_serialize_sc", "SPP")
.annotate 'line', 2469
    nqp_get_sc_object $P5636, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5636."add_core_pirop_mapping"("deserialize", "nqp_deserialize_sc", "0sPPPP")
.annotate 'line', 2470
    nqp_get_sc_object $P5637, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5637."add_core_pirop_mapping"("wval", "nqp_get_sc_object", "Psi")
.annotate 'line', 2471
    nqp_get_sc_object $P5638, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5640 = 'cuid_297_1368096764.976' 
    capture_lex $P5640
    newclosure $P5639, $P5640
    $P5638."add_core_op"("scwbdisable", $P5639)
.annotate 'line', 2477
    nqp_get_sc_object $P5641, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5643 = 'cuid_298_1368096764.976' 
    capture_lex $P5643
    newclosure $P5642, $P5643
    $P5641."add_core_op"("scwbenable", $P5642)
.annotate 'line', 2483
    nqp_get_sc_object $P5644, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5644."add_core_pirop_mapping"("pushcompsc", "nqp_push_compiling_sc", "0P")
.annotate 'line', 2484
    nqp_get_sc_object $P5645, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5647 = 'cuid_299_1368096764.976' 
    capture_lex $P5647
    newclosure $P5646, $P5647
    $P5645."add_core_op"("popcompsc", $P5646)
.annotate 'line', 2492
    nqp_get_sc_object $P5648, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5648."add_core_pirop_mapping"("getcomp", "compreg", "Ps")
.annotate 'line', 2493
    nqp_get_sc_object $P5649, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5649."add_core_pirop_mapping"("bindcomp", "compreg", "1sP")
.annotate 'line', 2494
    nqp_get_sc_object $P5650, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5650."add_core_pirop_mapping"("getcurhllsym", "get_hll_global", "Ps")
.annotate 'line', 2495
    nqp_get_sc_object $P5651, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5651."add_core_pirop_mapping"("bindcurhllsym", "set_hll_global", "1sP")
.annotate 'line', 2496
    nqp_get_sc_object $P5652, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5652."add_core_pirop_mapping"("loadbytecode", "load_bytecode", "0s")
.annotate 'line', 2497
    nqp_get_sc_object $P5653, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5655 = 'cuid_300_1368096764.976' 
    capture_lex $P5655
    newclosure $P5654, $P5655
    $P5653."add_core_op"("gethllsym", $P5654)
.annotate 'line', 2507
    nqp_get_sc_object $P5656, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5658 = 'cuid_301_1368096764.976' 
    capture_lex $P5658
    newclosure $P5657, $P5658
    $P5656."add_core_op"("bindhllsym", $P5657)
.annotate 'line', 2518
    nqp_get_sc_object $P5659, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5659."add_core_pirop_mapping"("sethllconfig", "nqp_sethllconfig", "PsP")
.annotate 'line', 2519
    nqp_get_sc_object $P5660, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5660."add_core_pirop_mapping"("settypehll", "nqp_settypehll", "0Ps")
.annotate 'line', 2520
    nqp_get_sc_object $P5661, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5661."add_core_pirop_mapping"("settypehllrole", "nqp_settypehllrole", "0Pi")
.annotate 'line', 2521
    nqp_get_sc_object $P5662, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5662."add_core_pirop_mapping"("hllize", "nqp_hllize", "PP")
.annotate 'line', 2522
    nqp_get_sc_object $P5663, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5663."add_core_pirop_mapping"("hllizefor", "nqp_hllizefor", "PPs")
.annotate 'line', 2525
    nqp_get_sc_object $P5664, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5664."add_core_pirop_mapping"("nfafromstatelist", "nqp_nfa_from_statelist", "PPP")
.annotate 'line', 2526
    nqp_get_sc_object $P5665, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5665."add_core_pirop_mapping"("nfatostatelist", "nqp_nfa_to_statelist", "PP")
.annotate 'line', 2527
    nqp_get_sc_object $P5666, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5666."add_core_pirop_mapping"("nfarunproto", "nqp_nfa_run_proto", "PPsi")
.annotate 'line', 2528
    nqp_get_sc_object $P5667, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5667."add_core_pirop_mapping"("nfarunalt", "nqp_nfa_run_alt", "0PsiPPP")
.annotate 'line', 2531
    nqp_get_sc_object $P5668, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5668."add_core_pirop_mapping"("exit", "exit", "0i", 1 :named("inlinable"))
.annotate 'line', 2532
    nqp_get_sc_object $P5669, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    $P5669."add_core_pirop_mapping"("sleep", "sleep", "0n", 1 :named("inlinable"))
.annotate 'line', 2533
    nqp_get_sc_object $P5670, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5672 = 'cuid_302_1368096764.976' 
    capture_lex $P5672
    newclosure $P5671, $P5672
    $P5670."add_core_op"("getenvhash", $P5671)
    .const 'Sub' $P5673 = 'cuid_303_1368096764.976' 
    capture_lex $P5673
    $P5674 = $P5673()
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "handle_arg" :subid("cuid_146_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1176
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .param pmc _lex_param_5 :named("coerce") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5020 = 'cuid_145_1368096764.976' 
    capture_lex $P5020 
    .lex "$arg_post", $P101 
    .lex "$result", $P102 
    .lex "$arg", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$ops", _lex_param_2 
    .lex "@pos_arg_results", _lex_param_3 
    .lex "@named_arg_results", _lex_param_4 
    .lex "$coerce", _lex_param_5 
    if haz_param_1, default20
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_5, $P5019
  default20:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1177
    $P5003 = _lex_param_1."as_post"(_lex_param_0)
    set $P101, $P5003
    unless _lex_param_5 goto if10_end11 
.annotate 'line', 1178
.annotate 'line', 1179
    $P5004 = _lex_param_1."coerce"($P101, _lex_param_5)
    set $P101, $P5004
  if10_end11:
.annotate 'line', 1181
    _lex_param_2."push"($P101)
.annotate 'line', 1182
    $P5005 = $P101."result"()
    set $P102, $P5005
.annotate 'line', 1183
    $P5006 = _lex_param_0."flat"()
    unless $P5006 goto if11_else12 
    set $S5002, $P102
    concat $S5001, $S5002, " :flat"
    box $P5007, $S5001
    set $P102, $P5007
.annotate 'line', 1185
    $P5008 = _lex_param_0."named"()
    set $P5010, $P5008
    unless $P5008 goto if12_end15 
    set $S5004, $P102
    concat $S5003, $S5004, " :named"
    box $P5009, $S5003
    set $P102, $P5009
    set $P5010, $P102
  if12_end15:
    goto if11_end13
  if11_else12:
.annotate 'line', 1189
    $P5011 = _lex_param_0."named"()
    set $P5014, $P5011
    unless $P5011 goto if13_end17 
    .const 'Sub' $P5012 = 'cuid_145_1368096764.976' 
    capture_lex $P5012
    $P5013 = $P5012($P5011)
    set $P5014, $P5013
  if13_end17:
  if11_end13:
.annotate 'line', 1192
    $P5015 = _lex_param_0."named"()
    unless $P5015 goto if14_else18 
.annotate 'line', 1193
    $P5016 = _lex_param_4."push"($P102)
    set $P5018, $P5016
    goto if14_end19
  if14_else18:
.annotate 'line', 1195
.annotate 'line', 1196
    $P5017 = _lex_param_3."push"($P102)
    set $P5018, $P5017
  if14_end19:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_145_1368096764.976") :anon :lex :outer("cuid_146_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1189
    .param pmc _lex_param_0 
    .lex "$name", _lex_param_0 
    find_lex $P5001, "$result"
    set $S5004, $P5001
    concat $S5003, $S5004, " :named("
.annotate 'line', 1190
    find_lex $P5002, "$qastcomp"
    $P5003 = $P5002."escape"(_lex_param_0)
    set $S5005, $P5003
    concat $S5002, $S5003, $S5005
    concat $S5001, $S5002, ")"
    box $P5004, $S5001
    store_lex "$result", $P5004
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_147_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 10
    .const 'Sub' $P5003 = 'cuid_1_1368096764.976' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_2_1368096764.976' 
    capture_lex $P5003 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_1_1368096764.976' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_2_1368096764.976' 
    capture_lex $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_1_1368096764.976") :anon :lex :outer("cuid_147_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 13
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("result") 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$result", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc pkg_lookup_tmp_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    set pkg_lookup_tmp_1, $P5006
    get_who $P5007, pkg_lookup_tmp_1
    exists $I5003, $P5007["PIRT"]
    unless $I5003 goto if19_else29 
    get_who $P5009, pkg_lookup_tmp_1
    set $P5008, $P5009["PIRT"]
    set $P5011, $P5008
    goto if19_end30
  if19_else29:
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5010
  if19_end30:
    get_who $P5005, $P5011
    set fb_tmp_1, $P5005
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if18_else27 
    set $P5012, fb_tmp_1["Node"]
    set $P5014, $P5012
    goto if18_end28
  if18_else27:
    null $P5013
    set $P5014, $P5013
  if18_end28:
    unless_null $P5014, vivi_2031
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_2031:
    type_check $I5001, _lex_param_1, $P5014
    unless $I5001 goto if17_else25 
.annotate 'line', 16
    $P5016 = _lex_param_1."result"()
    set $P5017, $P5016
    goto if17_end26
  if17_else25:
    set $P5017, _lex_param_1
  if17_end26:
    set $S5001, $P5017
    repr_bind_attr_str $P101, $P5004, "$!result", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_2_1368096764.976") :anon :lex :outer("cuid_147_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 20
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    repr_get_attr_str $S5001, $P5001, $P5002, "$!result"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_148_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 25
    .const 'Sub' $P5016 = 'cuid_3_1368096764.976' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_4_1368096764.976' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_5_1368096764.976' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_6_1368096764.976' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_7_1368096764.976' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_10_1368096764.976' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_11_1368096764.976' 
    capture_lex $P5016 
    .lex "%op_compilers", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    .const 'Sub' $P5004 = 'cuid_3_1368096764.976' 
    capture_lex $P5004
    newclosure $P5003, $P5004
    set $P5002["call"], $P5003
    .const 'Sub' $P5006 = 'cuid_4_1368096764.976' 
    capture_lex $P5006
    newclosure $P5005, $P5006
    set $P5002["callmethod"], $P5005
    .const 'Sub' $P5008 = 'cuid_5_1368096764.976' 
    capture_lex $P5008
    newclosure $P5007, $P5008
    set $P5002["return"], $P5007
    .const 'Sub' $P5010 = 'cuid_6_1368096764.976' 
    capture_lex $P5010
    newclosure $P5009, $P5010
    set $P5002["yield"], $P5009
    .const 'Sub' $P5012 = 'cuid_7_1368096764.976' 
    capture_lex $P5012
    newclosure $P5011, $P5012
    set $P5002["tailcall"], $P5011
    .const 'Sub' $P5014 = 'cuid_10_1368096764.976' 
    capture_lex $P5014
    newclosure $P5013, $P5014
    set $P5002["inline"], $P5013
    set $P101, $P5002
    .const 'Sub' $P5015 = 'cuid_11_1368096764.976' 
    capture_lex $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_3_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 27
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_2 
    find_dynamic_lex $P5001, "$*HAS_RESULT"
    unless_null $P5001, fallback34
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set fb_tmp_2, $P5002
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if22_else35 
    set $P5004, fb_tmp_2["$HAS_RESULT"]
    set $P5006, $P5004
    goto if22_end36
  if22_else35:
    null $P5005
    set $P5006, $P5005
  if22_end36:
    unless_null $P5006, vivi_2337
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_2337:
    unless_null $P5006, vivi_2438
    die "Contextual $*HAS_RESULT not found"
    box $P5008, "Contextual $*HAS_RESULT not found"
    set $P5006, $P5008
  vivi_2438:
    set $P5001, $P5006
  fallback34:
    unless $P5001 goto if21_else32 
.annotate 'line', 29
    $P5009 = _lex_param_0."shift"()
    set $S5007, $P5009
    concat $S5006, $S5007, " = "
    set $S5008, $S5006
    goto if21_end33
  if21_else32:
    set $S5008, ""
  if21_end33:
    concat $S5005, "    ", $S5008
.annotate 'line', 30
    $P5010 = _lex_param_0."shift"()
    set $S5009, $P5010
    concat $S5004, $S5005, $S5009
    concat $S5003, $S5004, "("
    join $S5010, ", ", _lex_param_0
    concat $S5002, $S5003, $S5010
    concat $S5001, $S5002, ")"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_4_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 32
    .param pmc _lex_param_0 
    .lex "$pir", $P101 
    .lex "$name", $P102 
    .lex "$invocant", $P103 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_3 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    find_dynamic_lex $P5004, "$*HAS_RESULT"
    unless_null $P5004, fallback41
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_3, $P5005
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if26_else42 
    set $P5007, fb_tmp_3["$HAS_RESULT"]
    set $P5009, $P5007
    goto if26_end43
  if26_else42:
    null $P5008
    set $P5009, $P5008
  if26_end43:
    unless_null $P5009, vivi_2744
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_2744:
    unless_null $P5009, vivi_2845
    die "Contextual $*HAS_RESULT not found"
    box $P5011, "Contextual $*HAS_RESULT not found"
    set $P5009, $P5011
  vivi_2845:
    set $P5004, $P5009
  fallback41:
    unless $P5004 goto if25_else39 
.annotate 'line', 33
    $P5012 = _lex_param_0."shift"()
    set $S5003, $P5012
    concat $S5002, $S5003, " = "
    set $S5004, $S5002
    goto if25_end40
  if25_else39:
    set $S5004, ""
  if25_end40:
    concat $S5001, "    ", $S5004
    box $P5013, $S5001
    set $P101, $P5013
.annotate 'line', 34
    $P5014 = _lex_param_0."shift"()
    set $P102, $P5014
.annotate 'line', 35
    $P5015 = _lex_param_0."shift"()
    set $P103, $P5015
    set $S5011, $P101
    set $S5012, $P103
    concat $S5010, $S5011, $S5012
    concat $S5009, $S5010, "."
    set $S5013, $P102
    concat $S5008, $S5009, $S5013
    concat $S5007, $S5008, "("
    join $S5014, ", ", _lex_param_0
    concat $S5006, $S5007, $S5014
    concat $S5005, $S5006, ")"
    .return ($S5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_5_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 38
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    join $S5003, ", ", _lex_param_0
    concat $S5002, "    .return (", $S5003
    concat $S5001, $S5002, ")"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_6_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 41
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    box $P5001, "yield compilation NYI"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_7_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 44
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    box $P5001, "tailcall compilation NYI"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_10_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 47
    .param pmc _lex_param_0 
    .const 'Sub' $P5020 = 'cuid_149_1368096764.976' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_150_1368096764.976' 
    capture_lex $P5020 
    .lex "$pir", $P101 
    .lex "$i", $P102 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_4 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*HAS_RESULT"
    unless_null $P5003, fallback48
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_4, $P5004
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if30_else49 
    set $P5006, fb_tmp_4["$HAS_RESULT"]
    set $P5008, $P5006
    goto if30_end50
  if30_else49:
    null $P5007
    set $P5008, $P5007
  if30_end50:
    unless_null $P5008, vivi_3151
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_3151:
    unless_null $P5008, vivi_3252
    die "Contextual $*HAS_RESULT not found"
    box $P5010, "Contextual $*HAS_RESULT not found"
    set $P5008, $P5010
  vivi_3252:
    set $P5003, $P5008
  fallback48:
    unless $P5003 goto if29_else46 
    .const 'Sub' $P5011 = 'cuid_149_1368096764.976' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if29_end47
  if29_else46:
.annotate 'line', 53
.annotate 'line', 54
    $P5013 = _lex_param_0."shift"()
    set $P101, $P5013
  if29_end47:
    box $P5014, 0
    set $P102, $P5014
    set $P5015, _lex_param_0
    iter $P5017, _lex_param_0
  for_next83:
    unless $P5017, for_done85
    shift $P5019, $P5017
  for_redo84:
    .const 'Sub' $P5018 = 'cuid_150_1368096764.976' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next83
  for_done85:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_149_1368096764.976") :anon :lex :outer("cuid_10_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 49
    .const 'Sub' $P5018 = 'cuid_8_1368096764.976' 
    capture_lex $P5018 
    .lex "$result", $P101 
    .local pmc fb_tmp_5 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 50
    find_lex $P5002, "@args"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 51
    find_lex $P5004, "@args"
    $P5005 = $P5004."shift"()
    find_lex $P5007, "$?PACKAGE"
    get_who $P5006, $P5007
    set fb_tmp_5, $P5006
    repr_defined $I5001, fb_tmp_5
    unless $I5001 goto if33_else53 
    set $P5008, fb_tmp_5["NQPRegex"]
    set $P5010, $P5008
    goto if33_end54
  if33_else53:
    null $P5009
    set $P5010, $P5009
  if33_end54:
    unless_null $P5010, vivi_3556
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5012, $P5013
    set $P5011, $P5012["NQPRegex"]
    unless_null $P5011, vivi_3455
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5014
  vivi_3455:
    set $P5010, $P5011
  vivi_3556:
    .const 'Sub' $P5015 = 'cuid_8_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5010."new"($P5015)
    $P5017 = "&subst"($P5005, $P5016, $P101, 1 :named("global"))
    store_lex "$pir", $P5017
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_8_1368096764.976") :anon :lex :outer("cuid_149_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 51
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx36_start
    .local string rx36_tgt
    .local int rx36_pos
    .local int rx36_off
    .local int rx36_eos
    .local int rx36_rep
    .local pmc rx36_cur
    .local pmc rx36_curclass
    .local pmc rx36_bstack
    .local pmc rx36_cstack
    rx36_start = self."!cursor_start_all"()
    set rx36_cur, rx36_start[0]
    set rx36_tgt, rx36_start[1]
    set rx36_pos, rx36_start[2]
    set rx36_curclass, rx36_start[3]
    set rx36_bstack, rx36_start[4]
    set $I19, rx36_start[5]
    store_lex unicode:"$\x{a2}", rx36_cur
    length rx36_eos, rx36_tgt
    eq $I19, 1, rx36_restart59
    gt rx36_pos, rx36_eos, rx36_fail60
    repr_get_attr_int $I11, self, rx36_curclass, "$!from"
    ne $I11, -1, rxscan37_done66
    goto rxscan37_scan65
  rxscan37_loop64:
    inc rx36_pos
    gt rx36_pos, rx36_eos, rx36_fail60
    repr_bind_attr_int rx36_cur, rx36_curclass, "$!from", rx36_pos
  rxscan37_scan65:
    nqp_rxmark rx36_bstack, rxscan37_loop64, rx36_pos, 0
  rxscan37_done66:
    add $I11, rx36_pos, 2
    gt $I11, rx36_eos, rx36_fail60
    substr $S10, rx36_tgt, rx36_pos, 2
    ne $S10, ucs4:"%r", rx36_fail60
    add rx36_pos, 2
    rx36_cur."!cursor_pass"(rx36_pos, 'backtrack'=>1)
    .return (rx36_cur)
  rx36_restart59:
    repr_get_attr_obj rx36_cstack, rx36_cur, rx36_curclass, "$!cstack"
  rx36_fail60:
    unless rx36_bstack, rx36_done58
    pop $I19, rx36_bstack
    if_null rx36_cstack, rx36_cstack_done63
    unless rx36_cstack, rx36_cstack_done63
    dec $I19
    set $P11, rx36_cstack[$I19]
  rx36_cstack_done63:
    pop rx36_rep, rx36_bstack
    pop rx36_pos, rx36_bstack
    pop $I19, rx36_bstack
    lt rx36_pos, -1, rx36_done58
    lt rx36_pos, 0, rx36_fail60
    eq $I19, 0, rx36_fail60
    nqp_islist $I20, rx36_cstack
    unless $I20, rx36_jump61
    elements $I18, rx36_bstack
    le $I18, 0, rx36_cut62
    dec $I18
    set $I18, rx36_bstack[$I18]
  rx36_cut62:
    assign rx36_cstack, $I18
  rx36_jump61:
    jump $I19
  rx36_done58:
    rx36_cur."!cursor_fail"()
    .return (rx36_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_150_1368096764.976") :anon :lex :outer("cuid_10_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 57
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_9_1368096764.976' 
    capture_lex $P5016 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_6 
.annotate 'line', 58
    find_lex $P5001, "$pir"
    find_lex $P5003, "$?PACKAGE"
    get_who $P5002, $P5003
    set fb_tmp_6, $P5002
    repr_defined $I5001, fb_tmp_6
    unless $I5001 goto if38_else67 
    set $P5004, fb_tmp_6["NQPRegex"]
    set $P5006, $P5004
    goto if38_end68
  if38_else67:
    null $P5005
    set $P5006, $P5005
  if38_end68:
    unless_null $P5006, vivi_4070
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set $P5007, $P5008["NQPRegex"]
    unless_null $P5007, vivi_3969
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5010
  vivi_3969:
    set $P5006, $P5007
  vivi_4070:
    .const 'Sub' $P5011 = 'cuid_9_1368096764.976' 
    capture_lex $P5011
    $P5012 = $P5006."new"($P5011)
    $P5013 = "&subst"($P5001, $P5012, _lex_param_0, 1 :named("global"))
    store_lex "$pir", $P5013
    find_lex $P5014, "$i"
    set $N5002, $P5014
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$i", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_9_1368096764.976") :anon :lex :outer("cuid_150_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 58
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx41_start
    .local string rx41_tgt
    .local int rx41_pos
    .local int rx41_off
    .local int rx41_eos
    .local int rx41_rep
    .local pmc rx41_cur
    .local pmc rx41_curclass
    .local pmc rx41_bstack
    .local pmc rx41_cstack
    rx41_start = self."!cursor_start_all"()
    set rx41_cur, rx41_start[0]
    set rx41_tgt, rx41_start[1]
    set rx41_pos, rx41_start[2]
    set rx41_curclass, rx41_start[3]
    set rx41_bstack, rx41_start[4]
    set $I19, rx41_start[5]
    store_lex unicode:"$\x{a2}", rx41_cur
    length rx41_eos, rx41_tgt
    eq $I19, 1, rx41_restart73
    gt rx41_pos, rx41_eos, rx41_fail74
    repr_get_attr_int $I11, self, rx41_curclass, "$!from"
    ne $I11, -1, rxscan42_done80
    goto rxscan42_scan79
  rxscan42_loop78:
    inc rx41_pos
    gt rx41_pos, rx41_eos, rx41_fail74
    repr_bind_attr_int rx41_cur, rx41_curclass, "$!from", rx41_pos
  rxscan42_scan79:
    nqp_rxmark rx41_bstack, rxscan42_loop78, rx41_pos, 0
  rxscan42_done80:
    add $I11, rx41_pos, 1
    gt $I11, rx41_eos, rx41_fail74
    substr $S10, rx41_tgt, rx41_pos, 1
    ne $S10, ucs4:"%", rx41_fail74
    add rx41_pos, 1
    find_lex $P5001, "$i"
    repr_bind_attr_int rx41_cur, rx41_curclass, "$!pos", rx41_pos
    $P11 = rx41_cur."!INTERPOLATE"($P5001, 0)
    repr_get_attr_int $I11, $P11, rx41_curclass, "$!pos"
    lt $I11, 0, rx41_fail74
    goto rxsubrule43_pass81
  rxsubrule43_back82:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx41_curclass, "$!pos"
    lt $I11, 0, rx41_fail74
  rxsubrule43_pass81:
    rx41_cstack = rx41_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule43_back82
    push rx41_bstack, $I11
    push rx41_bstack, 0
    push rx41_bstack, rx41_pos
    elements $I11, rx41_cstack
    push rx41_bstack, $I11
    repr_get_attr_int rx41_pos, $P11, rx41_curclass, "$!pos"
    rx41_cur."!cursor_pass"(rx41_pos, 'backtrack'=>1)
    .return (rx41_cur)
  rx41_restart73:
    repr_get_attr_obj rx41_cstack, rx41_cur, rx41_curclass, "$!cstack"
  rx41_fail74:
    unless rx41_bstack, rx41_done72
    pop $I19, rx41_bstack
    if_null rx41_cstack, rx41_cstack_done77
    unless rx41_cstack, rx41_cstack_done77
    dec $I19
    set $P11, rx41_cstack[$I19]
  rx41_cstack_done77:
    pop rx41_rep, rx41_bstack
    pop rx41_pos, rx41_bstack
    pop $I19, rx41_bstack
    lt rx41_pos, -1, rx41_done72
    lt rx41_pos, 0, rx41_fail74
    eq $I19, 0, rx41_fail74
    nqp_islist $I20, rx41_cstack
    unless $I20, rx41_jump75
    elements $I18, rx41_bstack
    le $I18, 0, rx41_cut76
    dec $I18
    set $I18, rx41_bstack[$I18]
  rx41_cut76:
    assign rx41_cstack, $I18
  rx41_jump75:
    jump $I19
  rx41_done72:
    rx41_cur."!cursor_fail"()
    .return (rx41_cur) 
.end
.HLL "nqp"
.namespace []
.sub "children_pir" :subid("cuid_11_1368096764.976") :anon :lex :outer("cuid_148_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 64
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5007 = 'cuid_152_1368096764.976' 
    capture_lex $P5007 
    .lex "@parts", $P101 
    .lex "self", _lex_param_0 
    .lex "@children", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_1
    iter $P5004, _lex_param_1
  for_next131:
    unless $P5004, for_done133
    shift $P5006, $P5004
  for_redo132:
    .const 'Sub' $P5005 = 'cuid_152_1368096764.976' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next131
  for_done133:
    join $S5001, "\n", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_152_1368096764.976") :anon :lex :outer("cuid_11_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .const 'Sub' $P5029 = 'cuid_151_1368096764.976' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_153_1368096764.976' 
    capture_lex $P5029 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_11 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_12 
    .local pmc pkg_viv_tmp_1 
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if44_else86 
    .const 'Sub' $P5001 = 'cuid_151_1368096764.976' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5028, $P5002
    goto if44_end87
  if44_else86:
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    set pkg_lookup_tmp_2, $P5004
    get_who $P5005, pkg_lookup_tmp_2
    exists $I5004, $P5005["PIRT"]
    unless $I5004 goto if61_else119 
    get_who $P5007, pkg_lookup_tmp_2
    set $P5006, $P5007["PIRT"]
    set $P5009, $P5006
    goto if61_end120
  if61_else119:
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5008
  if61_end120:
    get_who $P5003, $P5009
    set fb_tmp_11, $P5003
    repr_defined $I5003, fb_tmp_11
    unless $I5003 goto if60_else117 
    set $P5010, fb_tmp_11["Sub"]
    set $P5012, $P5010
    goto if60_end118
  if60_else117:
    null $P5011
    set $P5012, $P5011
  if60_end118:
    unless_null $P5012, vivi_62121
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_62121:
    type_check $I5002, _lex_param_0, $P5012
    unless $I5002 goto if59_else115 
.annotate 'line', 99
    find_dynamic_lex $P5014, "@*PIRT_BLOCKS"
    unless_null $P5014, fallback122
    nqp_get_sc_object $P5016, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5015, $P5016
    set pkg_viv_tmp_1, $P5015
    set fb_tmp_12, pkg_viv_tmp_1
    repr_defined $I5005, fb_tmp_12
    unless $I5005 goto if63_else123 
    set $P5017, fb_tmp_12["@PIRT_BLOCKS"]
    set $P5019, $P5017
    goto if63_end124
  if63_else123:
    null $P5018
    set $P5019, $P5018
  if63_end124:
    unless_null $P5019, vivi_64125
    new $P5020, 'ResizablePMCArray'
    set pkg_viv_tmp_1["@PIRT_BLOCKS"], $P5020
    set $P5019, $P5020
  vivi_64125:
    unless_null $P5019, vivi_65126
    die "Contextual @*PIRT_BLOCKS not found"
    box $P5021, "Contextual @*PIRT_BLOCKS not found"
    set $P5019, $P5021
  vivi_65126:
    set $P5014, $P5019
  fallback122:
    push $P5014, _lex_param_0
    set $P5027, $P5014
    goto if59_end116
  if59_else115:
    nqp_get_sc_object $P5022, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 6
    type_check $I5006, _lex_param_0, $P5022
    unless $I5006 goto if66_else127 
    .const 'Sub' $P5023 = 'cuid_153_1368096764.976' 
    capture_lex $P5023
    $P5024 = $P5023()
    set $P5026, $P5024
    goto if66_end128
  if66_else127:
.annotate 'line', 106
    box $P5025, "Unexpected object in PIRT tree"
    die $P5025
    set $P5026, $P5025
  if66_end128:
    set $P5027, $P5026
  if59_end116:
    set $P5028, $P5027
  if44_end87:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_151_1368096764.976") :anon :lex :outer("cuid_152_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 67
    .lex "$op_name", $P101 
    .lex "@op_args", $P102 
    .lex "$i", $P103 
    .lex "$c", $P104 
    .lex "$arg", $P105 
    .lex "$*HAS_RESULT", $P106 
    .lex "$result", $P107 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    .local pmc fb_tmp_9 
    .local pmc fb_tmp_10 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    find_lex $P5008, "$_"
    set fb_tmp_7, $P5008
    repr_defined $I5001, fb_tmp_7
    unless $I5001 goto if45_else88 
    set $P5009, fb_tmp_7[0]
    set $P5011, $P5009
    goto if45_end89
  if45_else88:
    null $P5010
    set $P5011, $P5010
  if45_end89:
    unless_null $P5011, vivi_4690
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_4690:
    set $P101, $P5011
    box $P5013, 1
    set $P103, $P5013
    find_lex $P5014, "$_"
    elements $I5002, $P5014
    box $P5015, $I5002
    set $P104, $P5015
    box $P5016, 0
    set $P106, $P5016
  while47_test91:
    set $N5001, $P103
    set $N5002, $P104
    islt $I5003, $N5001, $N5002
    box $P5030, $I5003
    set $P5029, $P5030
    unless $I5003 goto while47_done95 
  while47_redo93:
.annotate 'line', 75
    find_lex $P5017, "$_"
    set fb_tmp_8, $P5017
    repr_defined $I5004, fb_tmp_8
    unless $I5004 goto if48_else96 
    set $I5005, $P103
    set $P5018, fb_tmp_8[$I5005]
    set $P5020, $P5018
    goto if48_end97
  if48_else96:
    null $P5019
    set $P5020, $P5019
  if48_end97:
    unless_null $P5020, vivi_4998
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_4998:
    set $P105, $P5020
    nqp_get_sc_object $P5022, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 6
    type_check $I5006, $P105, $P5022
    unless $I5006 goto if50_else99 
.annotate 'line', 77
.annotate 'line', 78
    $P5023 = $P105."result"()
    push $P102, $P5023
    goto if50_end100
  if50_else99:
    nqp_get_sc_object $P5024, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    type_check $I5007, $P105, $P5024
    unless $I5007 goto if51_else101 
.annotate 'line', 80
.annotate 'line', 81
    $P5025 = $P105."result"()
    set $P107, $P5025
    box $P5026, 1
    set $P106, $P5026
    set $P5027, $P106
    goto if51_end102
  if51_else101:
.annotate 'line', 84
    push $P102, $P105
    set $P5027, $P102
  if51_end102:
  if50_end100:
    set $N5004, $P103
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5028, $N5003
    set $P103, $P5028
    set $P5029, $P103
    goto while47_test91 
  while47_done95:
    unless_null $P106, fallback105
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5031, $P5032
    set fb_tmp_9, $P5031
    repr_defined $I5008, fb_tmp_9
    unless $I5008 goto if53_else106 
    set $P5033, fb_tmp_9["$HAS_RESULT"]
    set $P5035, $P5033
    goto if53_end107
  if53_else106:
    null $P5034
    set $P5035, $P5034
  if53_end107:
    unless_null $P5035, vivi_54108
    nqp_get_sc_object $P5036, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5035, $P5036
  vivi_54108:
    unless_null $P5035, vivi_55109
    die "Contextual $*HAS_RESULT not found"
    box $P5037, "Contextual $*HAS_RESULT not found"
    set $P5035, $P5037
  vivi_55109:
    set $P106, $P5035
  fallback105:
    unless $P106 goto if52_end104 
.annotate 'line', 89
    unshift $P102, $P107
  if52_end104:
    find_lex $P5038, "%op_compilers"
    set $S5001, $P101
    exists $I5009, $P5038[$S5001]
    unless $I5009 goto if56_else110 
.annotate 'line', 92
    find_lex $P5039, "@parts"
.annotate 'line', 93
    find_lex $P5040, "%op_compilers"
    set fb_tmp_10, $P5040
    repr_defined $I5010, fb_tmp_10
    unless $I5010 goto if57_else112 
    set $S5002, $P101
    set $P5041, fb_tmp_10[$S5002]
    set $P5043, $P5041
    goto if57_end113
  if57_else112:
    null $P5042
    set $P5043, $P5042
  if57_end113:
    unless_null $P5043, vivi_58114
    nqp_get_sc_object $P5044, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5043, $P5044
  vivi_58114:
    $P5045 = $P5043($P102)
    push $P5039, $P5045
    set $P5048, $P5039
    goto if56_end111
  if56_else110:
.annotate 'line', 95
    find_lex $P5046, "@parts"
    set $S5006, $P101
    concat $S5005, "    ", $S5006
    concat $S5004, $S5005, " "
    join $S5007, ", ", $P102
    concat $S5003, $S5004, $S5007
    box $P5047, $S5003
    push $P5046, $P5047
    set $P5048, $P5046
  if56_end111:
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_153_1368096764.976") :anon :lex :outer("cuid_152_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 102
    .lex "$pir", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 103
    find_lex $P5002, "$_"
    $P5003 = $P5002."pir"()
    set $P101, $P5003
    set $S5001, $P101
    iseq $I5001, $S5001, ""
    box $P5006, $I5001
    set $P5005, $P5006
    if $I5001 goto unless67_end130 
    find_lex $P5004, "@parts"
    push $P5004, $P101
    set $P5005, $P5004
  unless67_end130:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_154_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 114
    .const 'Sub' $P5015 = 'cuid_12_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_13_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_14_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_15_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_16_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_17_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_18_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_19_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_20_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_21_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_22_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_23_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_24_1368096764.976' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_25_1368096764.976' 
    capture_lex $P5015 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_12_1368096764.976' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_13_1368096764.976' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_14_1368096764.976' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_15_1368096764.976' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_16_1368096764.976' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_17_1368096764.976' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_18_1368096764.976' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_19_1368096764.976' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_20_1368096764.976' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_21_1368096764.976' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_22_1368096764.976' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_23_1368096764.976' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_24_1368096764.976' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_25_1368096764.976' 
    capture_lex $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "escape" :subid("cuid_12_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 126
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$esc", $P101 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    set $S5002, _lex_param_1
    escape $S5001, $S5002
    box $P5002, $S5001
    set $P101, $P5002
    set $S5003, $P101
    index $I5002, $S5003, utf8:"\\x", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if68_else134 
    set $S5006, $P101
    concat $S5005, "utf8:\"", $S5006
    concat $S5004, $S5005, "\""
    set $S5015, $S5004
    goto if68_end135
  if68_else134:
    set $S5007, $P101
    index $I5004, $S5007, unicode:"\\u", 0
    set $N5003, $I5004
    set $N5004, 0
    isge $I5003, $N5003, $N5004
    unless $I5003 goto if69_else136 
    set $S5010, $P101
    concat $S5009, "unicode:\"", $S5010
    concat $S5008, $S5009, "\""
    set $S5014, $S5008
    goto if69_end137
  if69_else136:
    set $S5013, $P101
    concat $S5012, "\"", $S5013
    concat $S5011, $S5012, "\""
    set $S5014, $S5011
  if69_end137:
    set $S5015, $S5014
  if68_end135:
    .return ($S5015) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_13_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 135
    .param pmc _lex_param_0 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    new $P5005, 'ResizablePMCArray'
    setattribute $P101, $P5004, "@!children", $P5005
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "push" :subid("cuid_14_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!children"
    push $P5003, _lex_param_1
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "push_pirop" :subid("cuid_15_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .param pmc _lex_param_2 :named("result") :optional 
    .param int haz_param_2 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@opbits", _lex_param_1 
    .lex "$result", _lex_param_2 
    if haz_param_2, default140
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5006
  default140:
    unless _lex_param_2 goto if70_end139 
.annotate 'line', 146
.annotate 'line', 147
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    $P5002 = $P5001."new"(_lex_param_2)
    push _lex_param_1, $P5002
  if70_end139:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!children"
    push $P5005, _lex_param_1
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "subid" :subid("cuid_16_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_13 
    unless _lex_param_1 goto if71_else141 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    set fb_tmp_13, _lex_param_1
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if72_else143 
    set $P5003, fb_tmp_13[0]
    set $P5005, $P5003
    goto if72_end144
  if72_else143:
    null $P5004
    set $P5005, $P5004
  if72_end144:
    unless_null $P5005, vivi_73145
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_73145:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!subid", $S5001
    set $S5003, $S5001
    goto if71_end142
  if71_else141:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!subid"
    set $S5003, $S5002
  if71_end142:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "pirflags" :subid("cuid_17_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_14 
    unless _lex_param_1 goto if74_else146 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    set fb_tmp_14, _lex_param_1
    repr_defined $I5001, fb_tmp_14
    unless $I5001 goto if75_else148 
    set $P5003, fb_tmp_14[0]
    set $P5005, $P5003
    goto if75_end149
  if75_else148:
    null $P5004
    set $P5005, $P5004
  if75_end149:
    unless_null $P5005, vivi_76150
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_76150:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!pirflags", $S5001
    set $S5003, $S5001
    goto if74_end147
  if74_else146:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!pirflags"
    set $S5003, $S5002
  if74_end147:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_18_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 160
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_15 
    unless _lex_param_1 goto if77_else151 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    set fb_tmp_15, _lex_param_1
    repr_defined $I5001, fb_tmp_15
    unless $I5001 goto if78_else153 
    set $P5003, fb_tmp_15[0]
    set $P5005, $P5003
    goto if78_end154
  if78_else153:
    null $P5004
    set $P5005, $P5004
  if78_end154:
    unless_null $P5005, vivi_79155
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_79155:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!name", $S5001
    set $S5003, $S5001
    goto if77_end152
  if77_else151:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!name"
    set $S5003, $S5002
  if77_end152:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "loadlibs" :subid("cuid_19_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 164
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_3 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@libs", _lex_param_1 
    if haz_param_3, default158
    new $P5007, 'ResizablePMCArray'
    set _lex_param_1, $P5007
  default158:
    unless _lex_param_1 goto if80_else156 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_bind_attr_obj $P5001, $P5002, "@!loadlibs", _lex_param_1
    set $P5006, _lex_param_1
    goto if80_end157
  if80_else156:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!loadlibs"
    set $P5006, $P5005
  if80_end157:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "hll" :subid("cuid_20_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 168
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_16 
    unless _lex_param_1 goto if81_else159 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    set fb_tmp_16, _lex_param_1
    repr_defined $I5001, fb_tmp_16
    unless $I5001 goto if82_else161 
    set $P5003, fb_tmp_16[0]
    set $P5005, $P5003
    goto if82_end162
  if82_else161:
    null $P5004
    set $P5005, $P5004
  if82_end162:
    unless_null $P5005, vivi_83163
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_83163:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!hll", $S5001
    set $S5003, $S5001
    goto if81_end160
  if81_else159:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!hll"
    set $S5003, $S5002
  if81_end160:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "namespace" :subid("cuid_21_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_4 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@namespace", _lex_param_1 
    if haz_param_4, default166
    new $P5007, 'ResizablePMCArray'
    set _lex_param_1, $P5007
  default166:
    unless _lex_param_1 goto if84_else164 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_bind_attr_obj $P5001, $P5002, "@!namespace", _lex_param_1
    set $P5006, _lex_param_1
    goto if84_end165
  if84_else164:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!namespace"
    set $P5006, $P5005
  if84_end165:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_22_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 176
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .return ("") 
.end
.HLL "nqp"
.namespace []
.sub "close_sub" :subid("cuid_23_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 180
    .param pmc _lex_param_0 
    .const 'Sub' $P5080 = 'cuid_155_1368096764.976' 
    capture_lex $P5080 
    .const 'Sub' $P5080 = 'cuid_157_1368096764.976' 
    capture_lex $P5080 
    .lex "@parts", $P101 
    .lex "$sub_decl", $P102 
    .lex "$file", $P103 
    .lex "@*PIRT_BLOCKS", $P104 
    .lex "$*SUB_LINE", $P105 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_17 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_18 
    .local pmc pkg_viv_tmp_3 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!loadlibs"
    isnull $I5001, $P5008
    if $I5001 goto unless85_end168 
.annotate 'line', 184
    nqp_decontainerize $P5012, _lex_param_0
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5014, $P5012, $P5013, "@!loadlibs"
    set $P5009, $P5014
    iter $P5011, $P5014
  for_next169:
    unless $P5011, for_done171
    shift $P5016, $P5011
  for_redo170:
    .const 'Sub' $P5015 = 'cuid_155_1368096764.976' 
    capture_lex $P5015
    $P5009 = $P5015($P5016)
    goto for_next169
  for_done171:
  unless85_end168:
    nqp_decontainerize $P5017, _lex_param_0
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5001, $P5017, $P5018, "$!hll"
    unless_null $S5001, vivi_87174
    set $S5002, ""
    set $S5001, $S5002
  vivi_87174:
    unless $S5001 goto if86_end173 
.annotate 'line', 189
.annotate 'line', 190
    nqp_decontainerize $P5019, _lex_param_0
    nqp_decontainerize $P5020, _lex_param_0
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5004, $P5020, $P5021, "$!hll"
    $P5022 = $P5019."escape"($S5004)
    set $S5005, $P5022
    concat $S5003, ".HLL ", $S5005
    box $P5023, $S5003
    push $P101, $P5023
  if86_end173:
    nqp_decontainerize $P5024, _lex_param_0
    nqp_get_sc_object $P5025, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5026, $P5024, $P5025, "@!namespace"
    isnull $I5002, $P5026
    unless $I5002 goto if88_else175 
.annotate 'line', 192
    box $P5027, ".namespace []"
    push $P101, $P5027
    goto if88_end176
  if88_else175:
    .const 'Sub' $P5028 = 'cuid_157_1368096764.976' 
    capture_lex $P5028
    $P5029 = $P5028()
  if88_end176:
.annotate 'line', 202
    nqp_decontainerize $P5030, _lex_param_0
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5007, $P5031, $P5032, "$!name"
    set $S5008, $S5007
    if $S5007 goto unless89_end181 
    set $S5008, ""
  unless89_end181:
    $P5033 = $P5030."escape"($S5008)
    set $S5009, $P5033
    concat $S5006, ".sub ", $S5009
    box $P5034, $S5006
    set $P102, $P5034
    nqp_decontainerize $P5035, _lex_param_0
    nqp_get_sc_object $P5036, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5010, $P5035, $P5036, "$!subid"
    unless_null $S5010, vivi_91184
    set $S5011, ""
    set $S5010, $S5011
  vivi_91184:
    unless $S5010 goto if90_end183 
.annotate 'line', 203
    set $S5015, $P102
    concat $S5014, $S5015, " :subid("
.annotate 'line', 204
    nqp_decontainerize $P5037, _lex_param_0
    nqp_decontainerize $P5038, _lex_param_0
    nqp_get_sc_object $P5039, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5016, $P5038, $P5039, "$!subid"
    $P5040 = $P5037."escape"($S5016)
    set $S5017, $P5040
    concat $S5013, $S5014, $S5017
    concat $S5012, $S5013, ")"
    box $P5041, $S5012
    set $P102, $P5041
  if90_end183:
    nqp_decontainerize $P5042, _lex_param_0
    nqp_get_sc_object $P5043, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5018, $P5042, $P5043, "$!pirflags"
    unless_null $S5018, vivi_93187
    set $S5019, ""
    set $S5018, $S5019
  vivi_93187:
    unless $S5018 goto if92_end186 
.annotate 'line', 206
    set $S5022, $P102
    concat $S5021, $S5022, " "
    nqp_decontainerize $P5044, _lex_param_0
    nqp_get_sc_object $P5045, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5023, $P5044, $P5045, "$!pirflags"
    concat $S5020, $S5021, $S5023
    box $P5046, $S5020
    set $P102, $P5046
  if92_end186:
    push $P101, $P102
    find_dynamic_lex $P5047, "$?FILES"
    set $P103, $P5047
    unless_null $P103, vivi_95190
    box $P5048, ""
    set $P103, $P5048
  vivi_95190:
    unless $P103 goto if94_end189 
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5049, _lex_param_0
    $P5050 = $P5049."escape"($P103)
    set $S5025, $P5050
    concat $S5024, ".annotate 'file', ", $S5025
    box $P5051, $S5024
    push $P101, $P5051
  if94_end189:
    box $P5059, -1
    set $P105, $P5059
.annotate 'line', 220
    nqp_decontainerize $P5060, _lex_param_0
    nqp_decontainerize $P5061, _lex_param_0
    nqp_get_sc_object $P5062, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5063, $P5061, $P5062, "@!children"
    $P5064 = $P5060."children_pir"($P5063)
    push $P101, $P5064
    box $P5065, ".end"
    push $P101, $P5065
    nqp_decontainerize $P5066, _lex_param_0
    nqp_get_sc_object $P5067, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    join $S5026, "\n", $P101
    repr_bind_attr_str $P5066, $P5067, "$!cached_pir", $S5026
    nqp_decontainerize $P5068, _lex_param_0
    nqp_get_sc_object $P5069, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    unless_null $P104, fallback196
    nqp_get_sc_object $P5071, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5070, $P5071
    set pkg_viv_tmp_3, $P5070
    set fb_tmp_18, pkg_viv_tmp_3
    repr_defined $I5004, fb_tmp_18
    unless $I5004 goto if99_else197 
    set $P5072, fb_tmp_18["@PIRT_BLOCKS"]
    set $P5074, $P5072
    goto if99_end198
  if99_else197:
    null $P5073
    set $P5074, $P5073
  if99_end198:
    unless_null $P5074, vivi_100199
    new $P5075, 'ResizablePMCArray'
    set pkg_viv_tmp_3["@PIRT_BLOCKS"], $P5075
    set $P5074, $P5075
  vivi_100199:
    unless_null $P5074, vivi_101200
    die "Contextual @*PIRT_BLOCKS not found"
    box $P5076, "Contextual @*PIRT_BLOCKS not found"
    set $P5074, $P5076
  vivi_101200:
    set $P104, $P5074
  fallback196:
    repr_bind_attr_obj $P5068, $P5069, "@!nested_blocks", $P104
    nqp_decontainerize $P5077, _lex_param_0
    nqp_get_sc_object $P5078, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    null $P5079
    repr_bind_attr_obj $P5077, $P5078, "@!children", $P5079
    .return ($P5079) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_155_1368096764.976") :anon :lex :outer("cuid_23_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 185
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
.annotate 'line', 186
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."escape"(_lex_param_0)
    set $S5002, $P5004
    concat $S5001, ".loadlib ", $S5002
    box $P5005, $S5001
    push $P5001, $P5005
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_157_1368096764.976") :anon :lex :outer("cuid_23_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 195
    .const 'Sub' $P5013 = 'cuid_156_1368096764.976' 
    capture_lex $P5013 
    .lex "@ns", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5008, $P5005, $P5007, "@!namespace"
    set $P5002, $P5008
    iter $P5004, $P5008
  for_next177:
    unless $P5004, for_done179
    shift $P5010, $P5004
  for_redo178:
    .const 'Sub' $P5009 = 'cuid_156_1368096764.976' 
    capture_lex $P5009
    $P5002 = $P5009($P5010)
    goto for_next177
  for_done179:
    find_lex $P5011, "@parts"
    join $S5003, ";", $P101
    concat $S5002, ".namespace [", $S5003
    concat $S5001, $S5002, "]"
    box $P5012, $S5001
    push $P5011, $P5012
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_156_1368096764.976") :anon :lex :outer("cuid_157_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@ns"
.annotate 'line', 198
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."escape"(_lex_param_0)
    push $P5001, $P5004
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_24_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 232
    .param pmc _lex_param_0 
    .lex "@parts", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 234
    nqp_decontainerize $P5002, _lex_param_0
    $P5002."collect_sub_pir_into"($P101)
    join $S5001, "\n", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "collect_sub_pir_into" :subid("cuid_25_1368096764.976") :anon :lex :outer("cuid_154_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 238
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5015 = 'cuid_158_1368096764.976' 
    capture_lex $P5015 
    .lex "self", _lex_param_0 
    .lex "@result", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5001, $P5001, $P5002, "$!cached_pir"
    if $S5001 goto unless102_end202 
.annotate 'line', 240
.annotate 'line', 241
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = $P5003."close_sub"()
  unless102_end202:
.annotate 'line', 245
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_str $S5002, $P5005, $P5006, "$!cached_pir"
    _lex_param_1."push"($S5002)
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!nested_blocks"
    set $P5007, $P5012
    iter $P5009, $P5012
  for_next203:
    unless $P5009, for_done205
    shift $P5014, $P5009
  for_redo204:
    .const 'Sub' $P5013 = 'cuid_158_1368096764.976' 
    capture_lex $P5013
    $P5007 = $P5013($P5014)
    goto for_next203
  for_done205:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_158_1368096764.976") :anon :lex :outer("cuid_25_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 246
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 247
    find_lex $P5001, "@result"
    $P5002 = _lex_param_0."collect_sub_pir_into"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_159_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 252
    .const 'Sub' $P5007 = 'cuid_26_1368096764.976' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_27_1368096764.976' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_28_1368096764.976' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_29_1368096764.976' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_30_1368096764.976' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_31_1368096764.976' 
    capture_lex $P5007 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_26_1368096764.976' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_27_1368096764.976' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_28_1368096764.976' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_29_1368096764.976' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_30_1368096764.976' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_31_1368096764.976' 
    capture_lex $P5006
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_26_1368096764.976") :anon :lex :outer("cuid_159_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 257
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("result") :optional 
    .param int haz_param_5 :opt_flag 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$result", _lex_param_1 
    if haz_param_5, default208
    box $P5010, ""
    set _lex_param_1, $P5010
  default208:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    new $P5005, 'ResizablePMCArray'
    setattribute $P101, $P5004, "@!children", $P5005
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 6
    type_check $I5001, _lex_param_1, $P5007
    unless $I5001 goto if103_else206 
.annotate 'line', 261
    $P5008 = _lex_param_1."result"()
    set $P5009, $P5008
    goto if103_end207
  if103_else206:
    set $P5009, _lex_param_1
  if103_end207:
    set $S5001, $P5009
    repr_bind_attr_str $P101, $P5006, "$!result", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "push" :subid("cuid_27_1368096764.976") :anon :lex :outer("cuid_159_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 265
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!children"
    push $P5003, _lex_param_1
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "push_pirop" :subid("cuid_28_1368096764.976") :anon :lex :outer("cuid_159_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .param pmc _lex_param_2 :named("result") :optional 
    .param int haz_param_6 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@opbits", _lex_param_1 
    .lex "$result", _lex_param_2 
    if haz_param_6, default211
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5006
  default211:
    unless _lex_param_2 goto if104_end210 
.annotate 'line', 270
.annotate 'line', 271
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    $P5002 = $P5001."new"(_lex_param_2)
    push _lex_param_1, $P5002
  if104_end210:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!children"
    push $P5005, _lex_param_1
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_29_1368096764.976") :anon :lex :outer("cuid_159_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 276
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    unless _lex_param_1 goto if105_else212 
.annotate 'line', 277
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    set fb_tmp_19, _lex_param_1
    repr_defined $I5002, fb_tmp_19
    unless $I5002 goto if107_else216 
    set $P5003, fb_tmp_19[0]
    set $P5005, $P5003
    goto if107_end217
  if107_else216:
    null $P5004
    set $P5005, $P5004
  if107_end217:
    unless_null $P5005, vivi_108218
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_108218:
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 6
    type_check $I5001, $P5005, $P5007
    unless $I5001 goto if106_else214 
.annotate 'line', 278
    set fb_tmp_20, _lex_param_1
    repr_defined $I5003, fb_tmp_20
    unless $I5003 goto if109_else219 
    set $P5008, fb_tmp_20[0]
    set $P5010, $P5008
    goto if109_end220
  if109_else219:
    null $P5009
    set $P5010, $P5009
  if109_end220:
    unless_null $P5010, vivi_110221
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_110221:
    $P5012 = $P5010."result"()
    set $P5017, $P5012
    goto if106_end215
  if106_else214:
    set fb_tmp_21, _lex_param_1
    repr_defined $I5004, fb_tmp_21
    unless $I5004 goto if111_else222 
    set $P5013, fb_tmp_21[0]
    set $P5015, $P5013
    goto if111_end223
  if111_else222:
    null $P5014
    set $P5015, $P5014
  if111_end223:
    unless_null $P5015, vivi_112224
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_112224:
    set $P5017, $P5015
  if106_end215:
    set $S5001, $P5017
    repr_bind_attr_str $P5001, $P5002, "$!result", $S5001
    set $S5003, $S5001
    goto if105_end213
  if105_else212:
.annotate 'line', 280
    nqp_decontainerize $P5018, _lex_param_0
    nqp_get_sc_object $P5019, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_str $S5002, $P5018, $P5019, "$!result"
    set $S5003, $S5002
  if105_end213:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "node" :subid("cuid_30_1368096764.976") :anon :lex :outer("cuid_159_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_22 
    unless _lex_param_1 goto if113_else225 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    set fb_tmp_22, _lex_param_1
    repr_defined $I5001, fb_tmp_22
    unless $I5001 goto if114_else227 
    set $P5003, fb_tmp_22[0]
    set $P5005, $P5003
    goto if114_end228
  if114_else227:
    null $P5004
    set $P5005, $P5004
  if114_end228:
    unless_null $P5005, vivi_115229
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_115229:
    repr_bind_attr_obj $P5001, $P5002, "$!node", $P5005
    set $P5010, $P5005
    goto if113_end226
  if113_else225:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5009, $P5007, $P5008, "$!node"
    set $P5010, $P5009
  if113_end226:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_31_1368096764.976") :anon :lex :outer("cuid_159_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 289
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_160_1368096764.976' 
    capture_lex $P5013 
    .lex "$ann", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5005, $P5003, $P5004, "$!node"
    unless $P5005 goto if116_end231 
    .const 'Sub' $P5006 = 'cuid_160_1368096764.976' 
    capture_lex $P5006
    $P5007 = $P5006()
  if116_end231:
    set $S5002, $P101
.annotate 'line', 298
    nqp_decontainerize $P5008, _lex_param_0
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!children"
    $P5012 = $P5008."children_pir"($P5011)
    set $S5003, $P5012
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_160_1368096764.976") :anon :lex :outer("cuid_31_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 291
    .lex "$line", $P101 
    .local pmc fb_tmp_23 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 292
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    set pkg_lookup_tmp_3, $P5003
    get_who $P5004, pkg_lookup_tmp_3
    exists $I5002, $P5004["HLL"]
    unless $I5002 goto if118_else234 
    get_who $P5006, pkg_lookup_tmp_3
    set $P5005, $P5006["HLL"]
    set $P5008, $P5005
    goto if118_end235
  if118_else234:
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5007
  if118_end235:
    get_who $P5002, $P5008
    set fb_tmp_23, $P5002
    repr_defined $I5001, fb_tmp_23
    unless $I5001 goto if117_else232 
    set $P5009, fb_tmp_23["Compiler"]
    set $P5011, $P5009
    goto if117_end233
  if117_else232:
    null $P5010
    set $P5011, $P5010
  if117_end233:
    unless_null $P5011, vivi_119236
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_119236:
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5016, $P5013, $P5015, "$!node"
    $P5017 = $P5016."orig"()
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    repr_get_attr_obj $P5021, $P5018, $P5020, "$!node"
    $P5022 = $P5021."from"()
    $P5023 = $P5011."lineof"($P5017, $P5022, 1 :named("cache"))
    set $P101, $P5023
    set $N5001, $P101
    find_dynamic_lex $P5024, "$*SUB_LINE"
    unless_null $P5024, fallback239
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5025, $P5026
    set fb_tmp_24, $P5025
    repr_defined $I5004, fb_tmp_24
    unless $I5004 goto if121_else240 
    set $P5027, fb_tmp_24["$SUB_LINE"]
    set $P5029, $P5027
    goto if121_end241
  if121_else240:
    null $P5028
    set $P5029, $P5028
  if121_end241:
    unless_null $P5029, vivi_122242
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_122242:
    unless_null $P5029, vivi_123243
    die "Contextual $*SUB_LINE not found"
    box $P5031, "Contextual $*SUB_LINE not found"
    set $P5029, $P5031
  vivi_123243:
    set $P5024, $P5029
  fallback239:
    set $N5002, $P5024
    isne $I5003, $N5001, $N5002
    box $P5034, $I5003
    set $P5033, $P5034
    unless $I5003 goto if120_end238 
.annotate 'line', 293
    set $S5003, $P101
    concat $S5002, ".annotate 'line', ", $S5003
    concat $S5001, $S5002, "\n"
    box $P5032, $S5001
    store_lex "$ann", $P5032
    store_dynamic_lex "$*SUB_LINE", $P101
    set $P5033, $P101
  if120_end238:
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_162_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 302
    .const 'Sub' $P5008 = 'cuid_161_1368096764.976' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_32_1368096764.976' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_33_1368096764.976' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_34_1368096764.976' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_35_1368096764.976' 
    capture_lex $P5008 
    .lex "$serno", $P101 
    .lex "&unique", $P102 
    .lex "$?PACKAGE", $P103 
    .lex "$?CLASS", $P104 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_161_1368096764.976' 
    capture_lex $P5002
    set $P102, $P5002
    box $P5003, 10
    set $P101, $P5003
    .const 'Sub' $P5004 = 'cuid_32_1368096764.976' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_33_1368096764.976' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_34_1368096764.976' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_35_1368096764.976' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "unique" :subid("cuid_161_1368096764.976") :anon :lex :outer("cuid_162_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 306
    .param pmc _lex_param_0 
    .lex "$prefix", _lex_param_0 
    .local pmc tmp_1 
    set $S5002, _lex_param_0
    find_lex $P5001, "$serno"
    set tmp_1, $P5001
    set $N5002, tmp_1
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5002, $N5001
    store_lex "$serno", $P5002
    set $S5003, tmp_1
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_32_1368096764.976") :anon :lex :outer("cuid_162_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("name") 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
.annotate 'line', 310
    $P5005 = "&unique"(_lex_param_1)
    set $S5001, $P5005
    repr_bind_attr_str $P101, $P5004, "$!name", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_33_1368096764.976") :anon :lex :outer("cuid_162_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_25 
    unless _lex_param_1 goto if124_else244 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
.annotate 'line', 315
    set fb_tmp_25, _lex_param_1
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if125_else246 
    set $P5003, fb_tmp_25[0]
    set $P5005, $P5003
    goto if125_end247
  if125_else246:
    null $P5004
    set $P5005, $P5004
  if125_end247:
    unless_null $P5005, vivi_126248
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_126248:
    $P5007 = "&unique"($P5005)
    set $S5001, $P5007
    repr_bind_attr_str $P5001, $P5002, "$!name", $S5001
    set $S5003, $S5001
    goto if124_end245
  if124_else244:
    nqp_decontainerize $P5008, _lex_param_0
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    repr_get_attr_str $S5002, $P5008, $P5009, "$!name"
    set $S5003, $S5002
  if124_end245:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_34_1368096764.976") :anon :lex :outer("cuid_162_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 318
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    repr_get_attr_str $S5001, $P5001, $P5002, "$!name"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_35_1368096764.976") :anon :lex :outer("cuid_162_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 322
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    repr_get_attr_str $S5003, $P5001, $P5002, "$!name"
    concat $S5002, "  ", $S5003
    concat $S5001, $S5002, ":"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_171_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 330
    .const 'Sub' $P5027 = 'cuid_170_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_36_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_37_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_38_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_39_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_40_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_41_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_42_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_43_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_44_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_45_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_46_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_47_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_48_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_49_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_50_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_51_1368096764.976' 
    capture_lex $P5027 
    .lex "%core_ops", $P101 
    .lex "%hll_ops", $P102 
    .lex "%cached_pirops", $P103 
    .lex "%hll_box", $P104 
    .lex "%hll_unbox", $P105 
    .lex "%core_inlinability", $P106 
    .lex "%hll_inlinability", $P107 
    .lex "%core_result_type", $P108 
    .lex "%hll_result_type", $P109 
    .lex "&pirop_mapper", $P110 
    .lex "$?PACKAGE", $P111 
    .lex "$?CLASS", $P112 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    new $P5003, 'Hash'
    set $P103, $P5003
    new $P5004, 'Hash'
    set $P104, $P5004
    new $P5005, 'Hash'
    set $P105, $P5005
    new $P5006, 'Hash'
    set $P106, $P5006
    new $P5007, 'Hash'
    set $P107, $P5007
    new $P5008, 'Hash'
    set $P108, $P5008
    new $P5009, 'Hash'
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_170_1368096764.976' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_36_1368096764.976' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_37_1368096764.976' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_38_1368096764.976' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_39_1368096764.976' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_40_1368096764.976' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_41_1368096764.976' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_42_1368096764.976' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_43_1368096764.976' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_44_1368096764.976' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_45_1368096764.976' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_46_1368096764.976' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_47_1368096764.976' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_48_1368096764.976' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_49_1368096764.976' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_50_1368096764.976' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_51_1368096764.976' 
    capture_lex $P5026
    .return ($P110) 
.end
.HLL "nqp"
.namespace []
.sub "pirop_mapper" :subid("cuid_170_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 516
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5016 = 'cuid_164_1368096764.976' 
    capture_lex $P5016 
    .lex "@arg_types", $P101 
    .lex "$ret_type", $P102 
    .lex "$ret_meth", $P103 
    .lex "$pirop", _lex_param_0 
    .lex "$sig", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    set $S5001, _lex_param_1
    split $P5004, "", $S5001
    set $P101, $P5004
.annotate 'line', 519
    $P5005 = $P101."shift"()
    set $P102, $P5005
    set $S5002, $P102
    iseq $I5001, $S5002, "P"
    unless $I5001 goto if127_else249 
.annotate 'line', 523
    box $P5006, "fresh_p"
    set $P103, $P5006
    goto if127_end250
  if127_else249:
    set $S5003, $P102
    iseq $I5002, $S5003, "S"
    unless $I5002 goto if128_else251 
.annotate 'line', 524
    box $P5007, "fresh_s"
    set $P103, $P5007
    set $P5013, $P103
    goto if128_end252
  if128_else251:
    set $S5004, $P102
    iseq $I5003, $S5004, "I"
    unless $I5003 goto if129_else253 
.annotate 'line', 525
    box $P5008, "fresh_i"
    set $P103, $P5008
    set $P5012, $P103
    goto if129_end254
  if129_else253:
    set $S5005, $P102
    iseq $I5004, $S5005, "N"
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if130_end256 
.annotate 'line', 526
    box $P5009, "fresh_n"
    set $P103, $P5009
    set $P5010, $P103
  if130_end256:
    set $P5012, $P5010
  if129_end254:
    set $P5013, $P5012
  if128_end252:
  if127_end250:
    .const 'Sub' $P5015 = 'cuid_164_1368096764.976' 
    capture_lex $P5015
    newclosure $P5014, $P5015
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_164_1368096764.976") :anon :lex :outer("cuid_170_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 528
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5030 = 'cuid_163_1368096764.976' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_166_1368096764.976' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_169_1368096764.976' 
    capture_lex $P5030 
    .lex "$ops", $P101 
    .lex "@args", $P102 
    .lex "$num_args", $P103 
    .lex "$i", $P104 
    .lex "$last_argtype_was_Q", $P105 
    .lex "$aggregate", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op_name", _lex_param_1 
    .lex "@op_args", _lex_param_2 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
.annotate 'line', 529
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5008 = $P5007."new"()
    set $P101, $P5008
    find_lex $P5009, "$ret_meth"
    unless $P5009 goto if131_end258 
    .const 'Sub' $P5010 = 'cuid_163_1368096764.976' 
    capture_lex $P5010
    $P5011 = $P5010()
  if131_end258:
    set $N5001, _lex_param_2
    box $P5012, $N5001
    set $P103, $P5012
    find_lex $P5013, "@arg_types"
    set $N5002, $P5013
    set $N5003, $P103
    isne $I5001, $N5002, $N5003
    unless $I5001 goto if135_end265 
.annotate 'line', 542
    set $S5005, _lex_param_1
    concat $S5004, "Operation '", $S5005
    concat $S5003, $S5004, "' requires "
    find_lex $P5014, "@arg_types"
    set $N5004, $P5014
    set $S5006, $N5004
    concat $S5002, $S5003, $S5006
    set $S5008, $P103
    concat $S5007, " operands, but got ", $S5008
    concat $S5001, $S5002, $S5007
    box $P5015, $S5001
    die $P5015
  if135_end265:
    box $P5016, 0
    set $P104, $P5016
    box $P5017, 0
    set $P105, $P5017
    box $P5018, ""
    set $P106, $P5018
  while136_test266:
    set $N5005, $P104
    set $N5006, $P103
    islt $I5002, $N5005, $N5006
    box $P5022, $I5002
    set $P5021, $P5022
    unless $I5002 goto while136_done270 
  while136_redo268:
    .const 'Sub' $P5019 = 'cuid_166_1368096764.976' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
    goto while136_test266 
  while136_done270:
    find_lex $P5023, "$ret_meth"
    isfalse $I5003, $P5023
    set $I5005, $I5003
    unless $I5003 goto if147_end290 
    find_lex $P5024, "$ret_type"
    set $S5009, $P5024
    isne $I5004, $S5009, "v"
    set $I5005, $I5004
  if147_end290:
    set $I5007, $I5005
    unless $I5005 goto if146_end288 
    find_lex $P5025, "$ret_type"
    set $N5007, $P5025
    set $S5010, $N5007
    find_lex $P5026, "$ret_type"
    set $S5011, $P5026
    iseq $I5006, $S5010, $S5011
    set $I5007, $I5006
  if146_end288:
    unless $I5007 goto if145_end286 
    .const 'Sub' $P5027 = 'cuid_169_1368096764.976' 
    capture_lex $P5027
    $P5028 = $P5027()
  if145_end286:
.annotate 'line', 590
    find_lex $P5029, "$pirop"
    $P101."push_pirop"($P5029, $P102 :flat)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_163_1368096764.976") :anon :lex :outer("cuid_164_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 534
    .lex "$reg", $P101 
    .local pmc fb_tmp_26 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 535
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback259
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_26, $P5004
    repr_defined $I5001, fb_tmp_26
    unless $I5001 goto if132_else260 
    set $P5006, fb_tmp_26["$REGALLOC"]
    set $P5008, $P5006
    goto if132_end261
  if132_else260:
    null $P5007
    set $P5008, $P5007
  if132_end261:
    unless_null $P5008, vivi_133262
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_133262:
    unless_null $P5008, vivi_134263
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_134263:
    set $P5003, $P5008
  fallback259:
    find_lex $P5002, "$ret_meth"
    set $S5001, $P5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 536
    find_lex $P5012, "@args"
    $P5012."push"($P101)
.annotate 'line', 537
    find_lex $P5013, "$ops"
    $P5014 = $P5013."result"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_166_1368096764.976") :anon :lex :outer("cuid_164_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 549
    .const 'Sub' $P5025 = 'cuid_165_1368096764.976' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_167_1368096764.976' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_168_1368096764.976' 
    capture_lex $P5025 
    .lex "$arg_type", $P101 
    .lex "$operand", $P102 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    find_lex $P5003, "@arg_types"
    set fb_tmp_27, $P5003
    repr_defined $I5001, fb_tmp_27
    unless $I5001 goto if137_else271 
    find_lex $P5005, "$i"
    set $I5002, $P5005
    set $P5004, fb_tmp_27[$I5002]
    set $P5007, $P5004
    goto if137_end272
  if137_else271:
    null $P5006
    set $P5007, $P5006
  if137_end272:
    unless_null $P5007, vivi_138273
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_138273:
    set $P101, $P5007
    find_lex $P5009, "@op_args"
    set fb_tmp_28, $P5009
    repr_defined $I5003, fb_tmp_28
    unless $I5003 goto if139_else274 
    find_lex $P5011, "$i"
    set $I5004, $P5011
    set $P5010, fb_tmp_28[$I5004]
    set $P5013, $P5010
    goto if139_end275
  if139_else274:
    null $P5012
    set $P5013, $P5012
  if139_end275:
    unless_null $P5013, vivi_140276
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_140276:
    set $P102, $P5013
    set $S5001, $P101
    iseq $I5005, $S5001, "Q"
    unless $I5005 goto if141_else277 
    .const 'Sub' $P5015 = 'cuid_165_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
    goto if141_end278
  if141_else277:
    find_lex $P5017, "$last_argtype_was_Q"
    unless $P5017 goto if142_else279 
    .const 'Sub' $P5018 = 'cuid_167_1368096764.976' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5022, $P5019
    goto if142_end280
  if142_else279:
    .const 'Sub' $P5020 = 'cuid_168_1368096764.976' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5022, $P5021
  if142_end280:
  if141_end278:
    find_lex $P5023, "$i"
    set $N5002, $P5023
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5024, $N5001
    store_lex "$i", $P5024
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_165_1368096764.976") :anon :lex :outer("cuid_166_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 552
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 553
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    $P5005 = $P5003."as_post"($P5004)
    $P5006 = $P5002."coerce"($P5005, "P")
    set $P101, $P5006
.annotate 'line', 554
    find_lex $P5007, "$ops"
    $P5007."push"($P101)
.annotate 'line', 555
    $P5008 = $P101."result"()
    store_lex "$aggregate", $P5008
    box $P5009, 1
    store_lex "$last_argtype_was_Q", $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_167_1368096764.976") :anon :lex :outer("cuid_166_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 558
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_lex $P5002, "$arg_type"
    set $S5001, $P5002
    isne $I5001, $S5001, "P"
    unless $I5001 goto if143_end282 
.annotate 'line', 559
.annotate 'line', 560
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    find_lex $P5005, "$arg_type"
    $P5006 = $P5003."apply_context"($P5004, $P5005)
    store_lex "$operand", $P5006
  if143_end282:
.annotate 'line', 562
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$qastcomp"
    find_lex $P5009, "$operand"
    $P5010 = $P5008."as_post"($P5009)
    find_lex $P5011, "$arg_type"
    $P5012 = $P5007."coerce"($P5010, $P5011)
    set $P101, $P5012
.annotate 'line', 563
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 564
    find_lex $P5014, "@args"
    find_lex $P5015, "$aggregate"
    set $S5005, $P5015
    concat $S5004, $S5005, "["
    $P5016 = $P101."result"()
    set $S5006, $P5016
    concat $S5003, $S5004, $S5006
    concat $S5002, $S5003, "]"
    $P5014."push"($S5002)
    box $P5017, 0
    store_lex "$last_argtype_was_Q", $P5017
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_168_1368096764.976") :anon :lex :outer("cuid_166_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 567
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_lex $P5002, "$arg_type"
    set $S5001, $P5002
    isne $I5001, $S5001, "P"
    unless $I5001 goto if144_end284 
.annotate 'line', 568
.annotate 'line', 569
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    find_lex $P5005, "$arg_type"
    $P5006 = $P5003."apply_context"($P5004, $P5005)
    store_lex "$operand", $P5006
  if144_end284:
.annotate 'line', 571
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$qastcomp"
    find_lex $P5009, "$operand"
    $P5010 = $P5008."as_post"($P5009)
    find_lex $P5011, "$arg_type"
    $P5012 = $P5007."coerce"($P5010, $P5011)
    set $P101, $P5012
.annotate 'line', 572
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 573
    find_lex $P5014, "@args"
    $P5015 = $P101."result"()
    $P5016 = $P5014."push"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_169_1368096764.976") :anon :lex :outer("cuid_164_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 580
    .lex "$rreg", $P101 
    .lex "$brak", $P102 
    .local pmc fb_tmp_29 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    find_lex $P5003, "@args"
    set fb_tmp_29, $P5003
    repr_defined $I5001, fb_tmp_29
    unless $I5001 goto if148_else291 
    find_lex $P5005, "$ret_type"
    set $N5001, $P5005
    set $I5002, $N5001
    set $P5004, fb_tmp_29[$I5002]
    set $P5007, $P5004
    goto if148_end292
  if148_else291:
    null $P5006
    set $P5007, $P5006
  if148_end292:
    unless_null $P5007, vivi_149293
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_149293:
    set $P101, $P5007
    set $S5001, $P101
    index $I5003, $S5001, "[", 0
    box $P5009, $I5003
    set $P102, $P5009
    set $N5002, $P102
    set $N5003, 0
    isgt $I5004, $N5002, $N5003
    unless $I5004 goto if150_end295 
.annotate 'line', 583
    set $S5003, $P101
    set $N5005, $P102
    set $N5006, 1
    add $N5004, $N5005, $N5006
    set $I5005, $N5004
    set $S5004, $P101
    length $I5006, $S5004
    set $N5008, $I5006
    set $N5010, $P102
    set $N5011, 2
    add $N5009, $N5010, $N5011
    sub $N5007, $N5008, $N5009
    set $I5007, $N5007
    substr $S5002, $S5003, $I5005, $I5007
    box $P5010, $S5002
    set $P101, $P5010
  if150_end295:
.annotate 'line', 586
    find_lex $P5011, "$ops"
    $P5012 = $P5011."result"($P101)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "compile_op" :subid("cuid_36_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 354
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5029 = 'cuid_172_1368096764.976' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_173_1368096764.976' 
    capture_lex $P5029 
    .lex "$name", $P101 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$op", _lex_param_3 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    .local pmc fb_tmp_33 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_296
    .lex "RETURN", $P102
.annotate 'line', 355
    $P5002 = _lex_param_3."op"()
    set $P101, $P5002
    unless _lex_param_2 goto if151_end299 
.annotate 'line', 356
    find_lex $P5003, "%hll_ops"
    set fb_tmp_30, $P5003
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if154_else304 
    set $S5001, _lex_param_2
    set $P5004, fb_tmp_30[$S5001]
    set $P5006, $P5004
    goto if154_end305
  if154_else304:
    null $P5005
    set $P5006, $P5005
  if154_end305:
    unless_null $P5006, vivi_155306
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_155306:
    set $P5017, $P5006
    unless $P5006 goto if153_end303 
    find_lex $P5008, "%hll_ops"
    set fb_tmp_32, $P5008
    repr_defined $I5003, fb_tmp_32
    unless $I5003 goto if157_else309 
    set $S5002, _lex_param_2
    set $P5009, fb_tmp_32[$S5002]
    set $P5011, $P5009
    goto if157_end310
  if157_else309:
    null $P5010
    set $P5011, $P5010
  if157_end310:
    unless_null $P5011, vivi_158311
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_158311:
    set fb_tmp_31, $P5011
    repr_defined $I5002, fb_tmp_31
    unless $I5002 goto if156_else307 
    set $S5003, $P101
    set $P5013, fb_tmp_31[$S5003]
    set $P5015, $P5013
    goto if156_end308
  if156_else307:
    null $P5014
    set $P5015, $P5014
  if156_end308:
    unless_null $P5015, vivi_159312
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_159312:
    set $P5017, $P5015
  if153_end303:
    set $P5020, $P5017
    unless $P5017 goto if152_end301 
    .const 'Sub' $P5018 = 'cuid_172_1368096764.976' 
    capture_lex $P5018
    $P5019 = $P5018($P5017)
    set $P5020, $P5019
  if152_end301:
  if151_end299:
    find_lex $P5021, "%core_ops"
    set fb_tmp_33, $P5021
    repr_defined $I5004, fb_tmp_33
    unless $I5004 goto if161_else315 
    set $S5004, $P101
    set $P5022, fb_tmp_33[$S5004]
    set $P5024, $P5022
    goto if161_end316
  if161_else315:
    null $P5023
    set $P5024, $P5023
  if161_end316:
    unless_null $P5024, vivi_162317
    nqp_get_sc_object $P5025, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5024, $P5025
  vivi_162317:
    unless $P5024 goto if160_end314 
    .const 'Sub' $P5026 = 'cuid_173_1368096764.976' 
    capture_lex $P5026
    $P5027 = $P5026($P5024)
  if160_end314:
    set $S5007, $P101
    concat $S5006, "No registered operation handler for '", $S5007
    concat $S5005, $S5006, "'"
    box $P5028, $S5005
    die $P5028
    goto lexotic_297
  lexotic_296:
    .get_results ($P5028)
  lexotic_297:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_172_1368096764.976") :anon :lex :outer("cuid_36_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 357
    .param pmc _lex_param_0 
    .lex "$mapper", _lex_param_0 
.annotate 'line', 358
    find_lex $P5001, "$qastcomp"
    find_lex $P5002, "$op"
    $P5003 = _lex_param_0($P5001, $P5002)
    $P5004 = "RETURN"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_173_1368096764.976") :anon :lex :outer("cuid_36_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 361
    .param pmc _lex_param_0 
    .lex "$mapper", _lex_param_0 
.annotate 'line', 362
    find_lex $P5001, "$qastcomp"
    find_lex $P5002, "$op"
    $P5003 = _lex_param_0($P5001, $P5002)
    $P5004 = "RETURN"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "compile_pirop" :subid("cuid_37_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 368
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_174_1368096764.976' 
    capture_lex $P5012 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$op_name", _lex_param_2 
    .lex "@op_args", _lex_param_3 
    .local pmc fb_tmp_36 
    set $S5001, _lex_param_2
    index $I5001, $S5001, " ", 0
    unless $I5001 goto if163_end319 
.annotate 'line', 369
    set $S5003, _lex_param_2
    split $P5001, " ", $S5003
    join $S5002, "__", $P5001
    box $P5002, $S5002
    set _lex_param_2, $P5002
  if163_end319:
    find_lex $P5003, "%cached_pirops"
    set $S5004, _lex_param_2
    exists $I5002, $P5003[$S5004]
    if $I5002 goto unless164_end321 
    .const 'Sub' $P5004 = 'cuid_174_1368096764.976' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless164_end321:
.annotate 'line', 376
    find_lex $P5006, "%cached_pirops"
    set fb_tmp_36, $P5006
    repr_defined $I5003, fb_tmp_36
    unless $I5003 goto if169_else328 
    set $S5005, _lex_param_2
    set $P5007, fb_tmp_36[$S5005]
    set $P5009, $P5007
    goto if169_end329
  if169_else328:
    null $P5008
    set $P5009, $P5008
  if169_end329:
    unless_null $P5009, vivi_170330
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_170330:
    $P5011 = $P5009(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_174_1368096764.976") :anon :lex :outer("cuid_37_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 372
    .lex "@pieces", $P101 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$op_name"
    set $S5001, $P5003
    split $P5002, "__", $S5001
    set $P101, $P5002
    find_lex $P5004, "%cached_pirops"
    find_lex $P5005, "$op_name"
    set $S5002, $P5005
.annotate 'line', 374
    set fb_tmp_34, $P101
    repr_defined $I5001, fb_tmp_34
    unless $I5001 goto if165_else322 
    set $P5006, fb_tmp_34[0]
    set $P5008, $P5006
    goto if165_end323
  if165_else322:
    null $P5007
    set $P5008, $P5007
  if165_end323:
    unless_null $P5008, vivi_166324
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_166324:
    set fb_tmp_35, $P101
    repr_defined $I5002, fb_tmp_35
    unless $I5002 goto if167_else325 
    set $P5010, fb_tmp_35[1]
    set $P5012, $P5010
    goto if167_end326
  if167_else325:
    null $P5011
    set $P5012, $P5011
  if167_end326:
    unless_null $P5012, vivi_168327
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_168327:
    $P5014 = "&pirop_mapper"($P5008, $P5012)
    set $P5004[$S5002], $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "add_core_op" :subid("cuid_38_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 380
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 :named("inlinable") :optional 
    .param int haz_param_7 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$handler", _lex_param_2 
    .lex "$inlinable", _lex_param_3 
    if haz_param_7, default331
    box $P5004, 0
    set _lex_param_3, $P5004
  default331:
    find_lex $P5001, "%core_ops"
    set $S5001, _lex_param_1
    set $P5001[$S5001], _lex_param_2
.annotate 'line', 382
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."set_core_op_inlinability"(_lex_param_1, _lex_param_3)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_op" :subid("cuid_39_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 386
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("inlinable") :optional 
    .param int haz_param_8 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .lex "$inlinable", _lex_param_4 
    .local pmc fb_tmp_37 
    if haz_param_8, default337
    box $P5011, 0
    set _lex_param_4, $P5011
  default337:
    find_lex $P5001, "%hll_ops"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless171_end333 
    find_lex $P5002, "%hll_ops"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless171_end333:
    find_lex $P5004, "%hll_ops"
    set fb_tmp_37, $P5004
    repr_defined $I5002, fb_tmp_37
    unless $I5002 goto if172_else334 
    set $S5003, _lex_param_1
    set $P5005, fb_tmp_37[$S5003]
    set $P5007, $P5005
    goto if172_end335
  if172_else334:
    null $P5006
    set $P5007, $P5006
  if172_end335:
    unless_null $P5007, vivi_173336
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_173336:
    set $S5004, _lex_param_2
    set $P5007[$S5004], _lex_param_3
.annotate 'line', 389
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."set_hll_op_inlinability"(_lex_param_1, _lex_param_2, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "add_core_pirop_mapping" :subid("cuid_40_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 393
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("inlinable") :optional 
    .param int haz_param_9 :opt_flag 
    .const 'Sub' $P5010 = 'cuid_175_1368096764.976' 
    capture_lex $P5010 
    .lex "$pirop_mapper", $P101 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$pirop", _lex_param_2 
    .lex "$sig", _lex_param_3 
    .lex "$inlinable", _lex_param_4 
    if haz_param_9, default338
    box $P5009, 0
    set _lex_param_4, $P5009
  default338:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 394
    $P5002 = "&pirop_mapper"(_lex_param_2, _lex_param_3)
    set $P101, $P5002
    find_lex $P5003, "%core_ops"
    set $S5001, _lex_param_1
    .const 'Sub' $P5005 = 'cuid_175_1368096764.976' 
    capture_lex $P5005
    newclosure $P5004, $P5005
    set $P5003[$S5001], $P5004
.annotate 'line', 398
    nqp_decontainerize $P5006, _lex_param_0
    $P5006."set_core_op_inlinability"(_lex_param_1, _lex_param_4)
.annotate 'line', 399
    nqp_decontainerize $P5007, _lex_param_0
    set $S5003, _lex_param_3
    substr $S5002, $S5003, 0, 1
    $P5008 = $P5007."set_core_op_result_type"(_lex_param_1, $S5002)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_175_1368096764.976") :anon :lex :outer("cuid_40_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 395
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 396
    $P5002 = _lex_param_1."op"()
    $P5003 = _lex_param_1."list"()
    find_lex $P5001, "$pirop_mapper"
    $P5004 = $P5001(_lex_param_0, $P5002, $P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_pirop_mapping" :subid("cuid_41_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 403
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .param pmc _lex_param_5 :named("inlinable") :optional 
    .param int haz_param_10 :opt_flag 
    .const 'Sub' $P5017 = 'cuid_176_1368096764.976' 
    capture_lex $P5017 
    .lex "$pirop_mapper", $P101 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$pirop", _lex_param_3 
    .lex "$sig", _lex_param_4 
    .lex "$inlinable", _lex_param_5 
    .local pmc fb_tmp_38 
    if haz_param_10, default344
    box $P5016, 0
    set _lex_param_5, $P5016
  default344:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 404
    $P5002 = "&pirop_mapper"(_lex_param_3, _lex_param_4)
    set $P101, $P5002
    find_lex $P5003, "%hll_ops"
    set $S5001, _lex_param_1
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless174_end340 
    find_lex $P5004, "%hll_ops"
    set $S5002, _lex_param_1
    new $P5005, 'Hash'
    set $P5004[$S5002], $P5005
  unless174_end340:
    find_lex $P5006, "%hll_ops"
    set fb_tmp_38, $P5006
    repr_defined $I5002, fb_tmp_38
    unless $I5002 goto if175_else341 
    set $S5003, _lex_param_1
    set $P5007, fb_tmp_38[$S5003]
    set $P5009, $P5007
    goto if175_end342
  if175_else341:
    null $P5008
    set $P5009, $P5008
  if175_end342:
    unless_null $P5009, vivi_176343
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_176343:
    set $S5004, _lex_param_2
    .const 'Sub' $P5012 = 'cuid_176_1368096764.976' 
    capture_lex $P5012
    newclosure $P5011, $P5012
    set $P5009[$S5004], $P5011
.annotate 'line', 409
    nqp_decontainerize $P5013, _lex_param_0
    $P5013."set_hll_op_inlinability"(_lex_param_1, _lex_param_2, _lex_param_5)
.annotate 'line', 410
    nqp_decontainerize $P5014, _lex_param_0
    set $S5006, _lex_param_4
    substr $S5005, $S5006, 0, 1
    $P5015 = $P5014."set_hll_op_result_type"(_lex_param_1, _lex_param_2, $S5005)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_176_1368096764.976") :anon :lex :outer("cuid_41_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 406
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 407
    $P5002 = _lex_param_1."op"()
    $P5003 = _lex_param_1."list"()
    find_lex $P5001, "$pirop_mapper"
    $P5004 = $P5001(_lex_param_0, $P5002, $P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "set_core_op_inlinability" :subid("cuid_42_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 414
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$inlinable", _lex_param_2 
    find_lex $P5001, "%core_inlinability"
    set $S5001, _lex_param_1
    set $P5001[$S5001], _lex_param_2
    .return (_lex_param_2) 
.end
.HLL "nqp"
.namespace []
.sub "set_hll_op_inlinability" :subid("cuid_43_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 420
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$inlinable", _lex_param_3 
    .local pmc fb_tmp_39 
    find_lex $P5001, "%hll_inlinability"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless177_end346 
    find_lex $P5002, "%hll_inlinability"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless177_end346:
    find_lex $P5004, "%hll_inlinability"
    set fb_tmp_39, $P5004
    repr_defined $I5002, fb_tmp_39
    unless $I5002 goto if178_else347 
    set $S5003, _lex_param_1
    set $P5005, fb_tmp_39[$S5003]
    set $P5007, $P5005
    goto if178_end348
  if178_else347:
    null $P5006
    set $P5007, $P5006
  if178_end348:
    unless_null $P5007, vivi_179349
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_179349:
    set $S5004, _lex_param_2
    set $P5007[$S5004], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "is_inlinable" :subid("cuid_44_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 426
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_350
    .lex "RETURN", $P101
    find_lex $P5001, "%hll_inlinability"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if180_end353 
.annotate 'line', 427
    find_lex $P5002, "%hll_inlinability"
    set fb_tmp_40, $P5002
    repr_defined $I5003, fb_tmp_40
    unless $I5003 goto if182_else356 
    set $S5002, _lex_param_1
    set $P5003, fb_tmp_40[$S5002]
    set $P5005, $P5003
    goto if182_end357
  if182_else356:
    null $P5004
    set $P5005, $P5004
  if182_end357:
    unless_null $P5005, vivi_183358
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_183358:
    set $S5003, _lex_param_2
    exists $I5002, $P5005[$S5003]
    box $P5018, $I5002
    set $P5017, $P5018
    unless $I5002 goto if181_end355 
.annotate 'line', 428
    find_lex $P5007, "%hll_inlinability"
    set fb_tmp_42, $P5007
    repr_defined $I5005, fb_tmp_42
    unless $I5005 goto if185_else361 
    set $S5004, _lex_param_1
    set $P5008, fb_tmp_42[$S5004]
    set $P5010, $P5008
    goto if185_end362
  if185_else361:
    null $P5009
    set $P5010, $P5009
  if185_end362:
    unless_null $P5010, vivi_186363
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_186363:
    set fb_tmp_41, $P5010
    repr_defined $I5004, fb_tmp_41
    unless $I5004 goto if184_else359 
    set $S5005, _lex_param_2
    set $P5012, fb_tmp_41[$S5005]
    set $P5014, $P5012
    goto if184_end360
  if184_else359:
    null $P5013
    set $P5014, $P5013
  if184_end360:
    unless_null $P5014, vivi_187364
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_187364:
    $P5016 = "RETURN"($P5014)
    set $P5017, $P5016
  if181_end355:
  if180_end353:
    find_lex $P5020, "%core_inlinability"
    set fb_tmp_43, $P5020
    repr_defined $I5007, fb_tmp_43
    unless $I5007 goto if188_else366 
    set $S5006, _lex_param_2
    set $P5021, fb_tmp_43[$S5006]
    set $P5023, $P5021
    goto if188_end367
  if188_else366:
    null $P5022
    set $P5023, $P5022
  if188_end367:
    unless_null $P5023, vivi_189368
    nqp_get_sc_object $P5024, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5023, $P5024
  vivi_189368:
    set $P5019, $P5023
    defined $I5006, $P5019
    if $I5006, defor365
    box $P5025, 0
    set $P5019, $P5025
  defor365:
    $P5026 = "RETURN"($P5019)
    goto lexotic_351
  lexotic_350:
    .get_results ($P5026)
  lexotic_351:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "set_core_op_result_type" :subid("cuid_45_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$type_char", _lex_param_2 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "I"
    unless $I5001 goto if190_else369 
.annotate 'line', 437
    find_lex $P5001, "%core_result_type"
    set $S5002, _lex_param_1
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 2
    set $P5001[$S5002], $P5002
    set $P5010, $P5002
    goto if190_end370
  if190_else369:
    set $S5003, _lex_param_2
    iseq $I5002, $S5003, "N"
    unless $I5002 goto if191_else371 
.annotate 'line', 440
    find_lex $P5003, "%core_result_type"
    set $S5004, _lex_param_1
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 3
    set $P5003[$S5004], $P5004
    set $P5009, $P5004
    goto if191_end372
  if191_else371:
    set $S5005, _lex_param_2
    iseq $I5003, $S5005, "S"
    box $P5008, $I5003
    set $P5007, $P5008
    unless $I5003 goto if192_end374 
.annotate 'line', 443
    find_lex $P5005, "%core_result_type"
    set $S5006, _lex_param_1
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 4
    set $P5005[$S5006], $P5006
    set $P5007, $P5006
  if192_end374:
    set $P5009, $P5007
  if191_end372:
    set $P5010, $P5009
  if190_end370:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_hll_op_result_type" :subid("cuid_46_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$type_char", _lex_param_3 
    .local pmc fb_tmp_44 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    find_lex $P5001, "%hll_result_type"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless193_end376 
    find_lex $P5002, "%hll_result_type"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless193_end376:
    set $S5003, _lex_param_3
    iseq $I5002, $S5003, "I"
    unless $I5002 goto if194_else377 
.annotate 'line', 452
    find_lex $P5004, "%hll_result_type"
    set fb_tmp_44, $P5004
    repr_defined $I5003, fb_tmp_44
    unless $I5003 goto if195_else379 
    set $S5004, _lex_param_1
    set $P5005, fb_tmp_44[$S5004]
    set $P5007, $P5005
    goto if195_end380
  if195_else379:
    null $P5006
    set $P5007, $P5006
  if195_end380:
    unless_null $P5007, vivi_196381
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_196381:
    set $S5005, _lex_param_2
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 2
    set $P5007[$S5005], $P5009
    set $P5025, $P5009
    goto if194_end378
  if194_else377:
    set $S5006, _lex_param_3
    iseq $I5004, $S5006, "N"
    unless $I5004 goto if197_else382 
.annotate 'line', 455
    find_lex $P5010, "%hll_result_type"
    set fb_tmp_45, $P5010
    repr_defined $I5005, fb_tmp_45
    unless $I5005 goto if198_else384 
    set $S5007, _lex_param_1
    set $P5011, fb_tmp_45[$S5007]
    set $P5013, $P5011
    goto if198_end385
  if198_else384:
    null $P5012
    set $P5013, $P5012
  if198_end385:
    unless_null $P5013, vivi_199386
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_199386:
    set $S5008, _lex_param_2
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 3
    set $P5013[$S5008], $P5015
    set $P5024, $P5015
    goto if197_end383
  if197_else382:
    set $S5009, _lex_param_3
    iseq $I5006, $S5009, "S"
    box $P5023, $I5006
    set $P5022, $P5023
    unless $I5006 goto if200_end388 
.annotate 'line', 458
    find_lex $P5016, "%hll_result_type"
    set fb_tmp_46, $P5016
    repr_defined $I5007, fb_tmp_46
    unless $I5007 goto if201_else389 
    set $S5010, _lex_param_1
    set $P5017, fb_tmp_46[$S5010]
    set $P5019, $P5017
    goto if201_end390
  if201_else389:
    null $P5018
    set $P5019, $P5018
  if201_end390:
    unless_null $P5019, vivi_202391
    nqp_get_sc_object $P5020, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5019, $P5020
  vivi_202391:
    set $S5011, _lex_param_2
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 4
    set $P5019[$S5011], $P5021
    set $P5022, $P5021
  if200_end388:
    set $P5024, $P5022
  if197_end383:
    set $P5025, $P5024
  if194_end378:
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "attach_result_type" :subid("cuid_47_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$op", $P101 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$node", _lex_param_2 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_392
    .lex "RETURN", $P102
.annotate 'line', 465
    $P5002 = _lex_param_2."op"()
    set $P101, $P5002
    find_lex $P5003, "%hll_result_type"
    set $S5001, _lex_param_1
    exists $I5001, $P5003[$S5001]
    unless $I5001 goto if203_end395 
.annotate 'line', 466
    find_lex $P5004, "%hll_result_type"
    set fb_tmp_47, $P5004
    repr_defined $I5003, fb_tmp_47
    unless $I5003 goto if205_else398 
    set $S5002, _lex_param_1
    set $P5005, fb_tmp_47[$S5002]
    set $P5007, $P5005
    goto if205_end399
  if205_else398:
    null $P5006
    set $P5007, $P5006
  if205_end399:
    unless_null $P5007, vivi_206400
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_206400:
    set $S5003, $P101
    exists $I5002, $P5007[$S5003]
    box $P5020, $I5002
    set $P5019, $P5020
    unless $I5002 goto if204_end397 
.annotate 'line', 467
.annotate 'line', 468
    find_lex $P5009, "%hll_result_type"
    set fb_tmp_49, $P5009
    repr_defined $I5005, fb_tmp_49
    unless $I5005 goto if208_else403 
    set $S5004, _lex_param_1
    set $P5010, fb_tmp_49[$S5004]
    set $P5012, $P5010
    goto if208_end404
  if208_else403:
    null $P5011
    set $P5012, $P5011
  if208_end404:
    unless_null $P5012, vivi_209405
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_209405:
    set fb_tmp_48, $P5012
    repr_defined $I5004, fb_tmp_48
    unless $I5004 goto if207_else401 
    set $S5005, $P101
    set $P5014, fb_tmp_48[$S5005]
    set $P5016, $P5014
    goto if207_end402
  if207_else401:
    null $P5015
    set $P5016, $P5015
  if207_end402:
    unless_null $P5016, vivi_210406
    nqp_get_sc_object $P5017, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5016, $P5017
  vivi_210406:
    _lex_param_2."returns"($P5016)
    $P5018 = "RETURN"(1)
    set $P5019, $P5018
  if204_end397:
  if203_end395:
    find_lex $P5021, "%core_result_type"
    set $S5006, $P101
    exists $I5006, $P5021[$S5006]
    box $P5029, $I5006
    set $P5028, $P5029
    unless $I5006 goto if211_end408 
.annotate 'line', 472
.annotate 'line', 473
    find_lex $P5022, "%core_result_type"
    set fb_tmp_50, $P5022
    repr_defined $I5007, fb_tmp_50
    unless $I5007 goto if212_else409 
    set $S5007, $P101
    set $P5023, fb_tmp_50[$S5007]
    set $P5025, $P5023
    goto if212_end410
  if212_else409:
    null $P5024
    set $P5025, $P5024
  if212_end410:
    unless_null $P5025, vivi_213411
    nqp_get_sc_object $P5026, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5025, $P5026
  vivi_213411:
    $P5027 = _lex_param_2."returns"($P5025)
    set $P5028, $P5027
  if211_end408:
    goto lexotic_393
  lexotic_392:
    .get_results ($P5028)
  lexotic_393:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_box" :subid("cuid_48_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 478
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$type", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .local pmc fb_tmp_51 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "i"
    set $I5003, $I5001
    if $I5001 goto unless216_end417 
    set $S5002, _lex_param_2
    iseq $I5002, $S5002, "n"
    set $I5003, $I5002
  unless216_end417:
    set $I5005, $I5003
    if $I5003 goto unless215_end415 
    set $S5003, _lex_param_2
    iseq $I5004, $S5003, "s"
    set $I5005, $I5004
  unless215_end415:
    if $I5005 goto unless214_end413 
.annotate 'line', 479
    set $S5006, _lex_param_2
    concat $S5005, "Unknown box type '", $S5006
    concat $S5004, $S5005, "'"
    box $P5001, $S5004
    die $P5001
  unless214_end413:
    find_lex $P5002, "%hll_box"
    set $S5007, _lex_param_1
    exists $I5006, $P5002[$S5007]
    if $I5006 goto unless217_end419 
    find_lex $P5003, "%hll_box"
    set $S5008, _lex_param_1
    new $P5004, 'Hash'
    set $P5003[$S5008], $P5004
  unless217_end419:
    find_lex $P5005, "%hll_box"
    set fb_tmp_51, $P5005
    repr_defined $I5007, fb_tmp_51
    unless $I5007 goto if218_else420 
    set $S5009, _lex_param_1
    set $P5006, fb_tmp_51[$S5009]
    set $P5008, $P5006
    goto if218_end421
  if218_else420:
    null $P5007
    set $P5008, $P5007
  if218_end421:
    unless_null $P5008, vivi_219422
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_219422:
    set $S5010, _lex_param_2
    set $P5008[$S5010], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_unbox" :subid("cuid_49_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 487
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$type", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .local pmc fb_tmp_52 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "i"
    set $I5003, $I5001
    if $I5001 goto unless222_end428 
    set $S5002, _lex_param_2
    iseq $I5002, $S5002, "n"
    set $I5003, $I5002
  unless222_end428:
    set $I5005, $I5003
    if $I5003 goto unless221_end426 
    set $S5003, _lex_param_2
    iseq $I5004, $S5003, "s"
    set $I5005, $I5004
  unless221_end426:
    if $I5005 goto unless220_end424 
.annotate 'line', 488
    set $S5006, _lex_param_2
    concat $S5005, "Unknown unbox type '", $S5006
    concat $S5004, $S5005, "'"
    box $P5001, $S5004
    die $P5001
  unless220_end424:
    find_lex $P5002, "%hll_unbox"
    set $S5007, _lex_param_1
    exists $I5006, $P5002[$S5007]
    if $I5006 goto unless223_end430 
    find_lex $P5003, "%hll_unbox"
    set $S5008, _lex_param_1
    new $P5004, 'Hash'
    set $P5003[$S5008], $P5004
  unless223_end430:
    find_lex $P5005, "%hll_unbox"
    set fb_tmp_52, $P5005
    repr_defined $I5007, fb_tmp_52
    unless $I5007 goto if224_else431 
    set $S5009, _lex_param_1
    set $P5006, fb_tmp_52[$S5009]
    set $P5008, $P5006
    goto if224_end432
  if224_else431:
    null $P5007
    set $P5008, $P5007
  if224_end432:
    unless_null $P5008, vivi_225433
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_225433:
    set $S5010, _lex_param_2
    set $P5008[$S5010], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "box" :subid("cuid_50_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 496
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$type", _lex_param_3 
    .lex "$post", _lex_param_4 
    .local pmc fb_tmp_53 
    .local pmc fb_tmp_54 
.annotate 'line', 497
    find_lex $P5001, "%hll_box"
    set fb_tmp_54, $P5001
    repr_defined $I5002, fb_tmp_54
    unless $I5002 goto if227_else436 
    set $S5001, _lex_param_2
    set $P5002, fb_tmp_54[$S5001]
    set $P5004, $P5002
    goto if227_end437
  if227_else436:
    null $P5003
    set $P5004, $P5003
  if227_end437:
    unless_null $P5004, vivi_228438
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_228438:
    set fb_tmp_53, $P5004
    repr_defined $I5001, fb_tmp_53
    unless $I5001 goto if226_else434 
    set $S5002, _lex_param_3
    set $P5006, fb_tmp_53[$S5002]
    set $P5008, $P5006
    goto if226_end435
  if226_else434:
    null $P5007
    set $P5008, $P5007
  if226_end435:
    unless_null $P5008, vivi_229439
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_229439:
    $P5010 = $P5008(_lex_param_1, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "unbox" :subid("cuid_51_1368096764.976") :anon :lex :outer("cuid_171_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 501
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$type", _lex_param_3 
    .lex "$post", _lex_param_4 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
.annotate 'line', 502
    find_lex $P5001, "%hll_unbox"
    set fb_tmp_56, $P5001
    repr_defined $I5002, fb_tmp_56
    unless $I5002 goto if231_else442 
    set $S5001, _lex_param_2
    set $P5002, fb_tmp_56[$S5001]
    set $P5004, $P5002
    goto if231_end443
  if231_else442:
    null $P5003
    set $P5004, $P5003
  if231_end443:
    unless_null $P5004, vivi_232444
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_232444:
    set fb_tmp_55, $P5004
    repr_defined $I5001, fb_tmp_55
    unless $I5001 goto if230_else440 
    set $S5002, _lex_param_3
    set $P5006, fb_tmp_55[$S5002]
    set $P5008, $P5006
    goto if230_end441
  if230_else440:
    null $P5007
    set $P5008, $P5007
  if230_end441:
    unless_null $P5008, vivi_233445
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_233445:
    $P5010 = $P5008(_lex_param_1, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_178_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 597
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_177_1368096764.976' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 599
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback446
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_57, $P5004
    repr_defined $I5001, fb_tmp_57
    unless $I5001 goto if234_else447 
    set $P5006, fb_tmp_57["$REGALLOC"]
    set $P5008, $P5006
    goto if234_end448
  if234_else447:
    null $P5007
    set $P5008, $P5007
  if234_end448:
    unless_null $P5008, vivi_235449
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_235449:
    unless_null $P5008, vivi_236450
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_236450:
    set $P5003, $P5008
  fallback446:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 600
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 601
    $P102."push_pirop"("new", $P101, "'ResizablePMCArray'")
.annotate 'line', 604
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next451:
    unless $P5016, for_done453
    shift $P5019, $P5016
  for_redo452:
    .const 'Sub' $P5018 = 'cuid_177_1368096764.976' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next451
  for_done453:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_177_1368096764.976") :anon :lex :outer("cuid_178_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 604
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 605
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 606
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 607
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_180_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 613
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_179_1368096764.976' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_58 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 615
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback454
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_58, $P5004
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if237_else455 
    set $P5006, fb_tmp_58["$REGALLOC"]
    set $P5008, $P5006
    goto if237_end456
  if237_else455:
    null $P5007
    set $P5008, $P5007
  if237_end456:
    unless_null $P5008, vivi_238457
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_238457:
    unless_null $P5008, vivi_239458
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_239458:
    set $P5003, $P5008
  fallback454:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 616
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 617
    $P102."push_pirop"("new", $P101, "'QRPA'")
.annotate 'line', 620
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next459:
    unless $P5016, for_done461
    shift $P5019, $P5016
  for_redo460:
    .const 'Sub' $P5018 = 'cuid_179_1368096764.976' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next459
  for_done461:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_179_1368096764.976") :anon :lex :outer("cuid_180_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 620
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 621
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 622
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 623
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_182_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 629
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_181_1368096764.976' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_59 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 631
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback462
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_59, $P5004
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if240_else463 
    set $P5006, fb_tmp_59["$REGALLOC"]
    set $P5008, $P5006
    goto if240_end464
  if240_else463:
    null $P5007
    set $P5008, $P5007
  if240_end464:
    unless_null $P5008, vivi_241465
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_241465:
    unless_null $P5008, vivi_242466
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_242466:
    set $P5003, $P5008
  fallback462:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 632
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 633
    $P102."push_pirop"("new", $P101, "'ResizableIntegerArray'")
.annotate 'line', 636
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next467:
    unless $P5016, for_done469
    shift $P5019, $P5016
  for_redo468:
    .const 'Sub' $P5018 = 'cuid_181_1368096764.976' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next467
  for_done469:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_181_1368096764.976") :anon :lex :outer("cuid_182_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 636
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 637
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "i")
    set $P101, $P5005
.annotate 'line', 638
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 639
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_184_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 645
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_183_1368096764.976' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_60 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 647
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback470
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_60, $P5004
    repr_defined $I5001, fb_tmp_60
    unless $I5001 goto if243_else471 
    set $P5006, fb_tmp_60["$REGALLOC"]
    set $P5008, $P5006
    goto if243_end472
  if243_else471:
    null $P5007
    set $P5008, $P5007
  if243_end472:
    unless_null $P5008, vivi_244473
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_244473:
    unless_null $P5008, vivi_245474
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_245474:
    set $P5003, $P5008
  fallback470:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 648
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 649
    $P102."push_pirop"("new", $P101, "'ResizableStringArray'")
.annotate 'line', 652
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next475:
    unless $P5016, for_done477
    shift $P5019, $P5016
  for_redo476:
    .const 'Sub' $P5018 = 'cuid_183_1368096764.976' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next475
  for_done477:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_183_1368096764.976") :anon :lex :outer("cuid_184_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 652
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 653
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "s")
    set $P101, $P5005
.annotate 'line', 654
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 655
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_186_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 661
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_185_1368096764.976' 
    capture_lex $P5030 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$block_reg", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 663
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback478
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_61, $P5005
    repr_defined $I5001, fb_tmp_61
    unless $I5001 goto if246_else479 
    set $P5007, fb_tmp_61["$REGALLOC"]
    set $P5009, $P5007
    goto if246_end480
  if246_else479:
    null $P5008
    set $P5009, $P5008
  if246_end480:
    unless_null $P5009, vivi_247481
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_247481:
    unless_null $P5009, vivi_248482
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_248482:
    set $P5004, $P5009
  fallback478:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 664
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 665
    $P102."push_pirop"("new", $P101, "'ResizablePMCArray'")
.annotate 'line', 668
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback483
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5016, $P5017
    set fb_tmp_62, $P5016
    repr_defined $I5002, fb_tmp_62
    unless $I5002 goto if249_else484 
    set $P5018, fb_tmp_62["$REGALLOC"]
    set $P5020, $P5018
    goto if249_end485
  if249_else484:
    null $P5019
    set $P5020, $P5019
  if249_end485:
    unless_null $P5020, vivi_250486
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_250486:
    unless_null $P5020, vivi_251487
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_251487:
    set $P5015, $P5020
  fallback483:
    $P5023 = $P5015."fresh_p"()
    set $P103, $P5023
.annotate 'line', 669
    $P5027 = _lex_param_1."list"()
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next488:
    unless $P5026, for_done490
    shift $P5029, $P5026
  for_redo489:
    .const 'Sub' $P5028 = 'cuid_185_1368096764.976' 
    capture_lex $P5028
    $P5024 = $P5028($P5029)
    goto for_next488
  for_done490:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_185_1368096764.976") :anon :lex :outer("cuid_186_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 669
    .param pmc _lex_param_0 
    .lex "$cuid", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 670
    $P5002 = _lex_param_0."cuid"()
    set $P101, $P5002
.annotate 'line', 671
    find_lex $P5003, "$ops"
    find_lex $P5004, "$block_reg"
    set $S5005, $P5004
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = \""
    set $S5006, $P101
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "\""
    $P5003."push_pirop"($S5001)
.annotate 'line', 672
    find_lex $P5005, "$ops"
    find_lex $P5006, "$list_reg"
    find_lex $P5007, "$block_reg"
    $P5008 = $P5005."push_pirop"("push", $P5006, $P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_188_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 678
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_187_1368096764.976' 
    capture_lex $P5022 
    .lex "$hash_reg", $P101 
    .lex "$ops", $P102 
    .lex "$i", $P103 
    .lex "@op_list", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_63 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
.annotate 'line', 680
    find_dynamic_lex $P5005, "$*REGALLOC"
    unless_null $P5005, fallback491
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set fb_tmp_63, $P5006
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if252_else492 
    set $P5008, fb_tmp_63["$REGALLOC"]
    set $P5010, $P5008
    goto if252_end493
  if252_else492:
    null $P5009
    set $P5010, $P5009
  if252_end493:
    unless_null $P5010, vivi_253494
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_253494:
    unless_null $P5010, vivi_254495
    die "Contextual $*REGALLOC not found"
    box $P5012, "Contextual $*REGALLOC not found"
    set $P5010, $P5012
  vivi_254495:
    set $P5005, $P5010
  fallback491:
    $P5013 = $P5005."fresh_p"()
    set $P101, $P5013
.annotate 'line', 681
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5015 = $P5014."new"($P101 :named("result"))
    set $P102, $P5015
.annotate 'line', 682
    $P102."push_pirop"("new", $P101, "'Hash'")
    box $P5016, 0
    set $P103, $P5016
.annotate 'line', 686
    $P5017 = _lex_param_1."list"()
    set $P104, $P5017
  while255_test496:
    set $N5001, $P103
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5021, $I5002
    set $P5020, $P5021
    unless $I5002 goto while255_done500 
  while255_redo498:
    .const 'Sub' $P5018 = 'cuid_187_1368096764.976' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5020, $P5019
    goto while255_test496 
  while255_done500:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_187_1368096764.976") :anon :lex :outer("cuid_188_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 687
    .lex "$kpost", $P101 
    .lex "$vpost", $P102 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 688
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "@op_list"
    set fb_tmp_64, $P5005
    repr_defined $I5001, fb_tmp_64
    unless $I5001 goto if256_else501 
    find_lex $P5007, "$i"
    set $I5002, $P5007
    set $P5006, fb_tmp_64[$I5002]
    set $P5009, $P5006
    goto if256_end502
  if256_else501:
    null $P5008
    set $P5009, $P5008
  if256_end502:
    unless_null $P5009, vivi_257503
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_257503:
    $P5011 = $P5004."as_post"($P5009)
    $P5012 = $P5003."coerce"($P5011, "s")
    set $P101, $P5012
.annotate 'line', 689
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
    find_lex $P5014, "$i"
    set $N5002, $P5014
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$i", $P5015
.annotate 'line', 692
    find_lex $P5016, "$qastcomp"
    find_lex $P5017, "$qastcomp"
    find_lex $P5018, "@op_list"
    set fb_tmp_65, $P5018
    repr_defined $I5003, fb_tmp_65
    unless $I5003 goto if258_else504 
    find_lex $P5020, "$i"
    set $I5004, $P5020
    set $P5019, fb_tmp_65[$I5004]
    set $P5022, $P5019
    goto if258_end505
  if258_else504:
    null $P5021
    set $P5022, $P5021
  if258_end505:
    unless_null $P5022, vivi_259506
    nqp_get_sc_object $P5023, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5022, $P5023
  vivi_259506:
    $P5024 = $P5017."as_post"($P5022)
    $P5025 = $P5016."coerce"($P5024, "P")
    set $P102, $P5025
.annotate 'line', 693
    find_lex $P5026, "$ops"
    $P5026."push"($P102)
    find_lex $P5027, "$i"
    set $N5005, $P5027
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5028, $N5004
    store_lex "$i", $P5028
.annotate 'line', 696
    find_lex $P5029, "$ops"
    find_lex $P5030, "$hash_reg"
    set $S5004, $P5030
    concat $S5003, $S5004, "["
    $P5031 = $P101."result"()
    set $S5005, $P5031
    concat $S5002, $S5003, $S5005
    concat $S5001, $S5002, "]"
    $P5032 = $P102."result"()
    $P5033 = $P5029."push_pirop"("set", $S5001, $P5032)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_190_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 703
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_189_1368096764.976' 
    capture_lex $P5043 
    .lex "@clist", $P101 
    .lex "$cpast", $P102 
    .lex "$ops", $P103 
    .lex "$endlabel", $P104 
    .lex "$apast", $P105 
    .lex "$apost", $P106 
    .lex "$more", $P107 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    set $P102, _lex_param_1
  while260_test507:
.annotate 'line', 707
    nqp_get_sc_object $P5008, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5009 = $P5008."ACCEPTS"($P102)
    set $P5011, $P5009
    unless $P5009 goto if261_end513 
    $P5010 = $P102."op"()
    set $S5001, $P5010
    iseq $I5001, $S5001, "chain"
    box $P5012, $I5001
    set $P5011, $P5012
  if261_end513:
    set $P5017, $P5011
    unless $P5011 goto while260_done511 
  while260_redo509:
    push $P101, $P102
    set fb_tmp_66, $P102
    repr_defined $I5002, fb_tmp_66
    unless $I5002 goto if262_else514 
    set $P5013, fb_tmp_66[0]
    set $P5015, $P5013
    goto if262_end515
  if262_else514:
    null $P5014
    set $P5015, $P5014
  if262_end515:
    unless_null $P5015, vivi_263516
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_263516:
    set $P102, $P5015
    set $P5017, $P102
    goto while260_test507 
  while260_done511:
.annotate 'line', 712
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    find_dynamic_lex $P5019, "$*REGALLOC"
    unless_null $P5019, fallback517
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set fb_tmp_67, $P5020
    repr_defined $I5003, fb_tmp_67
    unless $I5003 goto if264_else518 
    set $P5022, fb_tmp_67["$REGALLOC"]
    set $P5024, $P5022
    goto if264_end519
  if264_else518:
    null $P5023
    set $P5024, $P5023
  if264_end519:
    unless_null $P5024, vivi_265520
    nqp_get_sc_object $P5025, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5024, $P5025
  vivi_265520:
    unless_null $P5024, vivi_266521
    die "Contextual $*REGALLOC not found"
    box $P5026, "Contextual $*REGALLOC not found"
    set $P5024, $P5026
  vivi_266521:
    set $P5019, $P5024
  fallback517:
    $P5027 = $P5019."fresh_p"()
    $P5028 = $P5018."new"($P5027 :named("result"))
    set $P103, $P5028
.annotate 'line', 713
    nqp_get_sc_object $P5029, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5030 = _lex_param_0."unique"("chain_end_")
    $P5031 = $P5029."new"($P5030 :named("name"))
    set $P104, $P5031
    pop $P5032, $P101
    set $P102, $P5032
    set fb_tmp_68, $P102
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if267_else522 
    set $P5033, fb_tmp_68[0]
    set $P5035, $P5033
    goto if267_end523
  if267_else522:
    null $P5034
    set $P5035, $P5034
  if267_end523:
    unless_null $P5035, vivi_268524
    nqp_get_sc_object $P5036, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5035, $P5036
  vivi_268524:
    set $P105, $P5035
.annotate 'line', 717
    $P5037 = _lex_param_0."as_post"($P105)
    $P5038 = _lex_param_0."coerce"($P5037, "P")
    set $P106, $P5038
.annotate 'line', 718
    $P103."push"($P106)
    box $P5039, 1
    set $P107, $P5039
  while269_test525:
    set $P5042, $P107
    unless $P107 goto while269_done529 
  while269_redo527:
    .const 'Sub' $P5040 = 'cuid_189_1368096764.976' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5042, $P5041
    goto while269_test525 
  while269_done529:
.annotate 'line', 739
    $P103."push"($P104)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_189_1368096764.976") :anon :lex :outer("cuid_190_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 721
    .lex "$bpast", $P101 
    .lex "$bpost", $P102 
    .lex "$name", $P103 
    .local pmc fb_tmp_69 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    find_lex $P5004, "$cpast"
    set fb_tmp_69, $P5004
    repr_defined $I5001, fb_tmp_69
    unless $I5001 goto if270_else530 
    set $P5005, fb_tmp_69[1]
    set $P5007, $P5005
    goto if270_end531
  if270_else530:
    null $P5006
    set $P5007, $P5006
  if270_end531:
    unless_null $P5007, vivi_271532
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_271532:
    set $P101, $P5007
.annotate 'line', 723
    find_lex $P5009, "$qastcomp"
    find_lex $P5010, "$qastcomp"
    $P5011 = $P5010."as_post"($P101)
    $P5012 = $P5009."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 724
    find_lex $P5013, "$ops"
    $P5013."push"($P102)
.annotate 'line', 726
    find_lex $P5014, "$qastcomp"
    find_lex $P5015, "$cpast"
    $P5016 = $P5015."name"()
    $P5017 = $P5014."escape"($P5016)
    set $P103, $P5017
.annotate 'line', 727
    find_lex $P5018, "$ops"
    find_lex $P5019, "$apost"
    find_lex $P5020, "$ops"
    $P5018."push_pirop"("call", $P103, $P5019, $P102, $P5020 :named("result"))
    find_lex $P5021, "@clist"
    unless $P5021 goto if272_else533 
.annotate 'line', 729
.annotate 'line', 730
    find_lex $P5022, "$ops"
    find_lex $P5023, "$ops"
    find_lex $P5024, "$endlabel"
    $P5022."push_pirop"("unless", $P5023, $P5024)
    find_lex $P5026, "@clist"
    pop $P5025, $P5026
    store_lex "$cpast", $P5025
    store_lex "$apost", $P102
    set $P5028, $P102
    goto if272_end534
  if272_else533:
.annotate 'line', 734
    box $P5027, 0
    store_lex "$more", $P5027
    set $P5028, $P5027
  if272_end534:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_191_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 745
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 746
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 94
    $P5002 = _lex_param_1."list"()
    $P5003 = $P5001."new"($P5002 :flat)
    $P5004 = _lex_param_0."as_post"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_198_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 750
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_193_1368096764.976' 
    capture_lex $P5005 
    .lex "$op_name", _lex_param_0 
.annotate 'line', 751
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5003 = 'cuid_193_1368096764.976' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    $P5004 = $P5001."add_core_op"(_lex_param_0, $P5002, 1 :named("inlinable"))
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_193_1368096764.976") :anon :lex :outer("cuid_198_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 751
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5116 = 'cuid_192_1368096764.976' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_194_1368096764.976' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_195_1368096764.976' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_196_1368096764.976' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_197_1368096764.976' 
    capture_lex $P5116 
    .lex "$operands", $P101 
    .lex "$if_id", $P102 
    .lex "$else_lbl", $P103 
    .lex "$end_lbl", $P104 
    .lex "@comp_ops", $P105 
    .lex "@op_types", $P106 
    .lex "@im_args", $P107 
    .lex "$res_type", $P108 
    .lex "$res_reg", $P109 
    .lex "$ops", $P110 
    .lex "$cond_result", $P111 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_90 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
.annotate 'line', 753
    $P5012 = _lex_param_1."list"()
    set $N5001, $P5012
    box $P5013, $N5001
    set $P101, $P5013
    set $N5002, $P101
    set $N5003, 2
    islt $I5001, $N5002, $N5003
    set $I5003, $I5001
    if $I5001 goto unless274_end538 
    set $N5004, $P101
    set $N5005, 3
    isgt $I5002, $N5004, $N5005
    set $I5003, $I5002
  unless274_end538:
    unless $I5003 goto if273_end536 
    find_lex $P5014, "$op_name"
    set $S5003, $P5014
    concat $S5002, "Operation '", $S5003
    concat $S5001, $S5002, "' needs either 2 or 3 operands"
    box $P5015, $S5001
    die $P5015
  if273_end536:
.annotate 'line', 758
    find_lex $P5016, "$op_name"
    $P5017 = _lex_param_0."unique"($P5016)
    set $P102, $P5017
.annotate 'line', 759
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5005, $P102
    concat $S5004, $S5005, "_else"
    $P5019 = $P5018."new"($S5004 :named("name"))
    set $P103, $P5019
.annotate 'line', 760
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5007, $P102
    concat $S5006, $S5007, "_end"
    $P5021 = $P5020."new"($S5006 :named("name"))
    set $P104, $P5021
.annotate 'line', 767
    $P5025 = _lex_param_1."list"()
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next568:
    unless $P5024, for_done570
    shift $P5027, $P5024
  for_redo569:
    .const 'Sub' $P5026 = 'cuid_192_1368096764.976' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next568
  for_done570:
    find_dynamic_lex $P5028, "$*WANT"
    unless_null $P5028, fallback573
    nqp_get_sc_object $P5030, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5029, $P5030
    set fb_tmp_75, $P5029
    repr_defined $I5005, fb_tmp_75
    unless $I5005 goto if293_else574 
    set $P5031, fb_tmp_75["$WANT"]
    set $P5033, $P5031
    goto if293_end575
  if293_else574:
    null $P5032
    set $P5033, $P5032
  if293_end575:
    unless_null $P5033, vivi_294576
    nqp_get_sc_object $P5034, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5033, $P5034
  vivi_294576:
    unless_null $P5033, vivi_295577
    die "Contextual $*WANT not found"
    box $P5035, "Contextual $*WANT not found"
    set $P5033, $P5035
  vivi_295577:
    set $P5028, $P5033
  fallback573:
    set $S5008, $P5028
    isne $I5004, $S5008, "v"
    unless $I5004 goto if292_end572 
.annotate 'line', 784
    set $N5006, $P101
    set $N5007, 3
    iseq $I5006, $N5006, $N5007
    unless $I5006 goto if296_else578 
    set fb_tmp_76, $P106
    repr_defined $I5008, fb_tmp_76
    unless $I5008 goto if298_else582 
    set $P5036, fb_tmp_76[1]
    set $P5038, $P5036
    goto if298_end583
  if298_else582:
    null $P5037
    set $P5038, $P5037
  if298_end583:
    unless_null $P5038, vivi_299584
    nqp_get_sc_object $P5039, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5038, $P5039
  vivi_299584:
    set $S5009, $P5038
    set fb_tmp_77, $P106
    repr_defined $I5009, fb_tmp_77
    unless $I5009 goto if300_else585 
    set $P5040, fb_tmp_77[2]
    set $P5042, $P5040
    goto if300_end586
  if300_else585:
    null $P5041
    set $P5042, $P5041
  if300_end586:
    unless_null $P5042, vivi_301587
    nqp_get_sc_object $P5043, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5042, $P5043
  vivi_301587:
    set $S5010, $P5042
    iseq $I5007, $S5009, $S5010
    unless $I5007 goto if297_else580 
    set fb_tmp_78, $P106
    repr_defined $I5010, fb_tmp_78
    unless $I5010 goto if302_else588 
    set $P5044, fb_tmp_78[1]
    set $P5046, $P5044
    goto if302_end589
  if302_else588:
    null $P5045
    set $P5046, $P5045
  if302_end589:
    unless_null $P5046, vivi_303590
    nqp_get_sc_object $P5047, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5046, $P5047
  vivi_303590:
    set $S5012, $P5046
    downcase $S5011, $S5012
    set $S5013, $S5011
    goto if297_end581
  if297_else580:
    set $S5013, "p"
  if297_end581:
    set $S5019, $S5013
    goto if296_end579
  if296_else578:
    set fb_tmp_79, $P106
    repr_defined $I5012, fb_tmp_79
    unless $I5012 goto if305_else593 
    set $P5048, fb_tmp_79[0]
    set $P5050, $P5048
    goto if305_end594
  if305_else593:
    null $P5049
    set $P5050, $P5049
  if305_end594:
    unless_null $P5050, vivi_306595
    nqp_get_sc_object $P5051, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5050, $P5051
  vivi_306595:
    set $S5014, $P5050
    set fb_tmp_80, $P106
    repr_defined $I5013, fb_tmp_80
    unless $I5013 goto if307_else596 
    set $P5052, fb_tmp_80[1]
    set $P5054, $P5052
    goto if307_end597
  if307_else596:
    null $P5053
    set $P5054, $P5053
  if307_end597:
    unless_null $P5054, vivi_308598
    nqp_get_sc_object $P5055, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5054, $P5055
  vivi_308598:
    set $S5015, $P5054
    iseq $I5011, $S5014, $S5015
    unless $I5011 goto if304_else591 
    set fb_tmp_81, $P106
    repr_defined $I5014, fb_tmp_81
    unless $I5014 goto if309_else599 
    set $P5056, fb_tmp_81[0]
    set $P5058, $P5056
    goto if309_end600
  if309_else599:
    null $P5057
    set $P5058, $P5057
  if309_end600:
    unless_null $P5058, vivi_310601
    nqp_get_sc_object $P5059, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5058, $P5059
  vivi_310601:
    set $S5017, $P5058
    downcase $S5016, $S5017
    set $S5018, $S5016
    goto if304_end592
  if304_else591:
    set $S5018, "p"
  if304_end592:
    set $S5019, $S5018
  if296_end579:
    box $P5060, $S5019
    set $P108, $P5060
.annotate 'line', 788
    find_dynamic_lex $P5061, "$*REGALLOC"
    unless_null $P5061, fallback602
    nqp_get_sc_object $P5063, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5062, $P5063
    set fb_tmp_82, $P5062
    repr_defined $I5015, fb_tmp_82
    unless $I5015 goto if311_else603 
    set $P5064, fb_tmp_82["$REGALLOC"]
    set $P5066, $P5064
    goto if311_end604
  if311_else603:
    null $P5065
    set $P5066, $P5065
  if311_end604:
    unless_null $P5066, vivi_312605
    nqp_get_sc_object $P5067, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5066, $P5067
  vivi_312605:
    unless_null $P5066, vivi_313606
    die "Contextual $*REGALLOC not found"
    box $P5068, "Contextual $*REGALLOC not found"
    set $P5066, $P5068
  vivi_313606:
    set $P5061, $P5066
  fallback602:
    set $S5021, $P108
    concat $S5020, "fresh_", $S5021
    $P5069 = $P5061.$S5020()
    set $P109, $P5069
  if292_end572:
.annotate 'line', 792
    nqp_get_sc_object $P5070, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5071 = $P5070."new"()
    set $P110, $P5071
    set $P5072, $P109
    unless $P109 goto if315_end610 
    set $N5008, $P101
    set $N5009, 2
    iseq $I5016, $N5008, $N5009
    box $P5073, $I5016
    set $P5072, $P5073
  if315_end610:
    unless $P5072 goto if314_else607 
    .const 'Sub' $P5074 = 'cuid_194_1368096764.976' 
    capture_lex $P5074
    $P5075 = $P5074()
    goto if314_end608
  if314_else607:
.annotate 'line', 800
.annotate 'line', 801
    set fb_tmp_84, $P105
    repr_defined $I5017, fb_tmp_84
    unless $I5017 goto if318_else614 
    set $P5076, fb_tmp_84[0]
    set $P5078, $P5076
    goto if318_end615
  if318_else614:
    null $P5077
    set $P5078, $P5077
  if318_end615:
    unless_null $P5078, vivi_319616
    nqp_get_sc_object $P5079, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5078, $P5079
  vivi_319616:
    $P110."push"($P5078)
    set fb_tmp_85, $P105
    repr_defined $I5018, fb_tmp_85
    unless $I5018 goto if320_else617 
    set $P5080, fb_tmp_85[0]
    set $P5082, $P5080
    goto if320_end618
  if320_else617:
    null $P5081
    set $P5082, $P5081
  if320_end618:
    unless_null $P5082, vivi_321619
    nqp_get_sc_object $P5083, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5082, $P5083
  vivi_321619:
    set $P111, $P5082
  if314_end608:
    set $P5084, $P107
    iter $P5086, $P107
  for_next620:
    unless $P5086, for_done622
    shift $P5088, $P5086
  for_redo621:
    .const 'Sub' $P5087 = 'cuid_195_1368096764.976' 
    capture_lex $P5087
    $P5084 = $P5087($P5088)
    goto for_next620
  for_done622:
.annotate 'line', 811
    find_lex $P5089, "$op_name"
    set $S5025, $P5089
    iseq $I5019, $S5025, "if"
    unless $I5019 goto if322_else623 
    set $S5026, "unless "
    goto if322_end624
  if322_else623:
    set $S5026, "if "
  if322_end624:
.annotate 'line', 812
    set fb_tmp_86, $P105
    repr_defined $I5020, fb_tmp_86
    unless $I5020 goto if323_else625 
    set $P5090, fb_tmp_86[0]
    set $P5092, $P5090
    goto if323_end626
  if323_else625:
    null $P5091
    set $P5092, $P5091
  if323_end626:
    unless_null $P5092, vivi_324627
    nqp_get_sc_object $P5093, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5092, $P5093
  vivi_324627:
    $P5094 = $P5092."result"()
    set $S5027, $P5094
    concat $S5024, $S5026, $S5027
    concat $S5023, $S5024, " goto "
    set $N5010, $P101
    set $N5011, 2
    iseq $I5021, $N5010, $N5011
    unless $I5021 goto if325_else628 
.annotate 'line', 813
    $P5095 = $P104."result"()
    set $P5097, $P5095
    goto if325_end629
  if325_else628:
    $P5096 = $P103."result"()
    set $P5097, $P5096
  if325_end629:
    set $S5028, $P5097
    concat $S5022, $S5023, $S5028
    $P110."push_pirop"($S5022)
    unless $P109 goto if326_else630 
    .const 'Sub' $P5098 = 'cuid_196_1368096764.976' 
    capture_lex $P5098
    $P5099 = $P5098()
    goto if326_end631
  if326_else630:
.annotate 'line', 821
.annotate 'line', 822
    set fb_tmp_88, $P105
    repr_defined $I5022, fb_tmp_88
    unless $I5022 goto if329_else635 
    set $P5100, fb_tmp_88[1]
    set $P5102, $P5100
    goto if329_end636
  if329_else635:
    null $P5101
    set $P5102, $P5101
  if329_end636:
    unless_null $P5102, vivi_330637
    nqp_get_sc_object $P5103, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5102, $P5103
  vivi_330637:
    $P5104 = $P110."push"($P5102)
  if326_end631:
    set $N5012, $P101
    set $N5013, 3
    iseq $I5023, $N5012, $N5013
    unless $I5023 goto if331_end639 
.annotate 'line', 826
.annotate 'line', 827
    $P5105 = $P104."result"()
    $P110."push_pirop"("goto", $P5105)
.annotate 'line', 828
    $P110."push"($P103)
    unless $P109 goto if332_else640 
    .const 'Sub' $P5106 = 'cuid_197_1368096764.976' 
    capture_lex $P5106
    $P5107 = $P5106()
    set $P5113, $P5107
    goto if332_end641
  if332_else640:
.annotate 'line', 834
.annotate 'line', 835
    set fb_tmp_90, $P105
    repr_defined $I5024, fb_tmp_90
    unless $I5024 goto if335_else645 
    set $P5108, fb_tmp_90[2]
    set $P5110, $P5108
    goto if335_end646
  if335_else645:
    null $P5109
    set $P5110, $P5109
  if335_end646:
    unless_null $P5110, vivi_336647
    nqp_get_sc_object $P5111, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5110, $P5111
  vivi_336647:
    $P5112 = $P110."push"($P5110)
    set $P5113, $P5112
  if332_end641:
  if331_end639:
.annotate 'line', 840
    $P110."push"($P104)
.annotate 'line', 841
    set $P5114, $P109
    if $P109 goto unless337_end649 
    box $P5115, "null"
    set $P5114, $P5115
  unless337_end649:
    $P110."result"($P5114)
    .return ($P110) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_192_1368096764.976") :anon :lex :outer("cuid_193_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 767
    .param pmc _lex_param_0 
    .lex "$*HAVE_IMM_ARG", $P101 
    .lex "$*IMM_ARG", $P102 
    .lex "$comp", $P103 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 768
    $P5004 = _lex_param_0."arity"()
    set $N5001, $P5004
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    set $I5007, $I5001
    unless $I5001 goto if275_end540 
    get_id $I5004, _lex_param_0
    find_lex $P5005, "$op"
    set fb_tmp_70, $P5005
    repr_defined $I5006, fb_tmp_70
    unless $I5006 goto if276_else541 
    set $P5006, fb_tmp_70[0]
    set $P5008, $P5006
    goto if276_end542
  if276_else541:
    null $P5007
    set $P5008, $P5007
  if276_end542:
    unless_null $P5008, vivi_277543
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_277543:
    get_id $I5005, $P5008
    iseq $I5003, $I5004, $I5005
    not $I5002, $I5003
    set $I5007, $I5002
  if275_end540:
    box $P5010, $I5007
    set $P101, $P5010
.annotate 'line', 770
    find_lex $P5018, "$qastcomp"
    $P5019 = $P5018."as_post"(_lex_param_0)
    set $P103, $P5019
.annotate 'line', 771
    find_lex $P5020, "@comp_ops"
    $P5020."push"($P103)
.annotate 'line', 772
    find_lex $P5021, "@op_types"
    find_lex $P5022, "$qastcomp"
    $P5023 = $P103."result"()
    $P5024 = $P5022."infer_type"($P5023)
    set $S5002, $P5024
    upcase $S5001, $S5002
    $P5021."push"($S5001)
    unless_null $P101, fallback551
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5025, $P5026
    set fb_tmp_72, $P5025
    repr_defined $I5009, fb_tmp_72
    unless $I5009 goto if282_else552 
    set $P5027, fb_tmp_72["$HAVE_IMM_ARG"]
    set $P5029, $P5027
    goto if282_end553
  if282_else552:
    null $P5028
    set $P5029, $P5028
  if282_end553:
    unless_null $P5029, vivi_283554
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_283554:
    unless_null $P5029, vivi_284555
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5031, "Contextual $*HAVE_IMM_ARG not found"
    set $P5029, $P5031
  vivi_284555:
    set $P101, $P5029
  fallback551:
    set $P5051, $P101
    unless $P101 goto if281_end550 
.annotate 'line', 773
    unless_null $P102, fallback558
    nqp_get_sc_object $P5033, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5032, $P5033
    set fb_tmp_73, $P5032
    repr_defined $I5010, fb_tmp_73
    unless $I5010 goto if286_else559 
    set $P5034, fb_tmp_73["$IMM_ARG"]
    set $P5036, $P5034
    goto if286_end560
  if286_else559:
    null $P5035
    set $P5036, $P5035
  if286_end560:
    unless_null $P5036, vivi_287561
    nqp_get_sc_object $P5037, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5036, $P5037
  vivi_287561:
    unless_null $P5036, vivi_288562
    die "Contextual $*IMM_ARG not found"
    box $P5038, "Contextual $*IMM_ARG not found"
    set $P5036, $P5038
  vivi_288562:
    set $P102, $P5036
  fallback558:
    unless $P102 goto if285_else556 
.annotate 'line', 774
.annotate 'line', 775
    find_lex $P5039, "@im_args"
    unless_null $P102, fallback563
    nqp_get_sc_object $P5041, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5040, $P5041
    set fb_tmp_74, $P5040
    repr_defined $I5011, fb_tmp_74
    unless $I5011 goto if289_else564 
    set $P5042, fb_tmp_74["$IMM_ARG"]
    set $P5044, $P5042
    goto if289_end565
  if289_else564:
    null $P5043
    set $P5044, $P5043
  if289_end565:
    unless_null $P5044, vivi_290566
    nqp_get_sc_object $P5045, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5044, $P5045
  vivi_290566:
    unless_null $P5044, vivi_291567
    die "Contextual $*IMM_ARG not found"
    box $P5046, "Contextual $*IMM_ARG not found"
    set $P5044, $P5046
  vivi_291567:
    set $P102, $P5044
  fallback563:
    $P5047 = $P5039."push"($P102)
    set $P5050, $P5047
    goto if285_end557
  if285_else556:
.annotate 'line', 777
    find_lex $P5048, "$op_name"
    set $S5004, $P5048
    concat $S5003, $S5004, " block expects an argument, but there's no immediate block to take it"
    box $P5049, $S5003
    die $P5049
    set $P5050, $P5049
  if285_end557:
    set $P5051, $P5050
  if281_end550:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_194_1368096764.976") :anon :lex :outer("cuid_193_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 794
    .lex "$coerced", $P101 
    .local pmc fb_tmp_83 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 795
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_83, $P5003
    repr_defined $I5001, fb_tmp_83
    unless $I5001 goto if316_else611 
    set $P5004, fb_tmp_83[0]
    set $P5006, $P5004
    goto if316_end612
  if316_else611:
    null $P5005
    set $P5006, $P5005
  if316_end612:
    unless_null $P5006, vivi_317613
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_317613:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 796
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 797
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5011."push_pirop"("set", $P5012, $P5013)
    store_lex "$cond_result", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_195_1368096764.976") :anon :lex :outer("cuid_193_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 806
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 807
    find_lex $P5001, "$cond_result"
    $P5002 = $P5001."result"()
    $P5003 = _lex_param_0($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_196_1368096764.976") :anon :lex :outer("cuid_193_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 816
    .lex "$then", $P101 
    .local pmc fb_tmp_87 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 817
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_87, $P5003
    repr_defined $I5001, fb_tmp_87
    unless $I5001 goto if327_else632 
    set $P5004, fb_tmp_87[1]
    set $P5006, $P5004
    goto if327_end633
  if327_else632:
    null $P5005
    set $P5006, $P5005
  if327_end633:
    unless_null $P5006, vivi_328634
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_328634:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 818
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 819
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5014 = $P5011."push_pirop"("set", $P5012, $P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_197_1368096764.976") :anon :lex :outer("cuid_193_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 829
    .lex "$else", $P101 
    .local pmc fb_tmp_89 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 830
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_89, $P5003
    repr_defined $I5001, fb_tmp_89
    unless $I5001 goto if333_else642 
    set $P5004, fb_tmp_89[2]
    set $P5006, $P5004
    goto if333_end643
  if333_else642:
    null $P5005
    set $P5006, $P5005
  if333_end643:
    unless_null $P5006, vivi_334644
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_334644:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 831
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 832
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5014 = $P5011."push_pirop"("set", $P5012, $P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_199_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 847
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exprpost", $P101 
    .lex "$vivipost", $P102 
    .lex "$vivlabel", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
.annotate 'line', 848
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if338_end654 
    box $P5006, "The 'ifnull' op expects two children"
    die $P5006
  if338_end654:
.annotate 'line', 852
    set fb_tmp_91, _lex_param_1
    repr_defined $I5002, fb_tmp_91
    unless $I5002 goto if339_else655 
    set $P5007, fb_tmp_91[0]
    set $P5009, $P5007
    goto if339_end656
  if339_else655:
    null $P5008
    set $P5009, $P5008
  if339_end656:
    unless_null $P5009, vivi_340657
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_340657:
    $P5011 = _lex_param_0."as_post"($P5009)
    set $P101, $P5011
.annotate 'line', 853
    set fb_tmp_92, _lex_param_1
    repr_defined $I5003, fb_tmp_92
    unless $I5003 goto if341_else658 
    set $P5012, fb_tmp_92[1]
    set $P5014, $P5012
    goto if341_end659
  if341_else658:
    null $P5013
    set $P5014, $P5013
  if341_end659:
    unless_null $P5014, vivi_342660
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_342660:
    $P5016 = _lex_param_0."as_post"($P5014)
.annotate 'line', 854
    $P5017 = $P101."result"()
    $P5018 = _lex_param_0."infer_type"($P5017)
    $P5019 = _lex_param_0."coerce"($P5016, $P5018)
    set $P102, $P5019
.annotate 'line', 855
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5021 = _lex_param_0."unique"("vivi_")
    $P5022 = $P5020."new"($P5021 :named("name"))
    set $P103, $P5022
.annotate 'line', 857
    nqp_get_sc_object $P5023, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5024 = $P5023."new"()
    set $P104, $P5024
.annotate 'line', 858
    $P104."push"($P101)
.annotate 'line', 859
    $P104."push_pirop"("unless_null", $P101, $P103)
.annotate 'line', 860
    $P104."push"($P102)
.annotate 'line', 861
    $P104."push_pirop"("set", $P101, $P102)
.annotate 'line', 862
    $P104."push"($P103)
.annotate 'line', 863
    $P5025 = $P101."result"()
    $P104."result"($P5025)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_204_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 868
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_203_1368096764.976' 
    capture_lex $P5009 
    .lex "$repness", _lex_param_0 
    new $P5004, 'ResizablePMCArray'
    box $P5005, "while"
    push $P5004, $P5005
    box $P5006, "until"
    push $P5004, $P5006
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next755:
    unless $P5003, for_done757
    shift $P5008, $P5003
  for_redo756:
    .const 'Sub' $P5007 = 'cuid_203_1368096764.976' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next755
  for_done757:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_203_1368096764.976") :anon :lex :outer("cuid_204_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 869
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_202_1368096764.976' 
    capture_lex $P5006 
    .lex "$op_name", _lex_param_0 
.annotate 'line', 870
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    find_lex $P5002, "$repness"
    set $S5002, $P5002
    set $S5003, _lex_param_0
    concat $S5001, $S5002, $S5003
    .const 'Sub' $P5004 = 'cuid_202_1368096764.976' 
    capture_lex $P5004
    newclosure $P5003, $P5004
    $P5005 = $P5001."add_core_op"($S5001, $P5003, 1 :named("inlinable"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_202_1368096764.976") :anon :lex :outer("cuid_203_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 870
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5129 = 'cuid_201_1368096764.976' 
    capture_lex $P5129 
    .lex "$while_id", $P101 
    .lex "$test_lbl", $P102 
    .lex "$next_lbl", $P103 
    .lex "$redo_lbl", $P104 
    .lex "$hand_lbl", $P105 
    .lex "$done_lbl", $P106 
    .lex "@comp_ops", $P107 
    .lex "@comp_types", $P108 
    .lex "$handler", $P109 
    .lex "$*IMM_ARG", $P110 
    .lex "$res_type", $P111 
    .lex "$res_reg", $P112 
    .lex "$operands", $P113 
    .lex "$ops", $P114 
    .lex "$exc_reg", $P115 
    .lex "$coerced", $P116 
    .lex "$body", $P117 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    new $P5008, 'ResizablePMCArray'
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P112, $P5012
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P113, $P5013
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P114, $P5014
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P115, $P5015
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P116, $P5016
    nqp_get_sc_object $P5017, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P117, $P5017
.annotate 'line', 872
    find_lex $P5018, "$op_name"
    $P5019 = _lex_param_0."unique"($P5018)
    set $P101, $P5019
.annotate 'line', 873
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5002, $P101
    concat $S5001, $S5002, "_test"
    $P5021 = $P5020."new"($S5001 :named("name"))
    set $P102, $P5021
.annotate 'line', 874
    nqp_get_sc_object $P5022, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5004, $P101
    concat $S5003, $S5004, "_next"
    $P5023 = $P5022."new"($S5003 :named("name"))
    set $P103, $P5023
.annotate 'line', 875
    nqp_get_sc_object $P5024, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5006, $P101
    concat $S5005, $S5006, "_redo"
    $P5025 = $P5024."new"($S5005 :named("name"))
    set $P104, $P5025
.annotate 'line', 876
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5008, $P101
    concat $S5007, $S5008, "_handlers"
    $P5027 = $P5026."new"($S5007 :named("name"))
    set $P105, $P5027
.annotate 'line', 877
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    set $S5010, $P101
    concat $S5009, $S5010, "_done"
    $P5029 = $P5028."new"($S5009 :named("name"))
    set $P106, $P5029
    box $P5030, 1
    set $P109, $P5030
.annotate 'line', 885
    $P5041 = _lex_param_1."list"()
    set $P5038, $P5041
    iter $P5040, $P5041
  for_next687:
    unless $P5040, for_done689
    shift $P5043, $P5040
  for_redo688:
    .const 'Sub' $P5042 = 'cuid_201_1368096764.976' 
    capture_lex $P5042
    $P5038 = $P5042($P5043)
    goto for_next687
  for_done689:
    set fb_tmp_97, $P108
    repr_defined $I5003, fb_tmp_97
    unless $I5003 goto if359_else692 
    set $P5044, fb_tmp_97[0]
    set $P5046, $P5044
    goto if359_end693
  if359_else692:
    null $P5045
    set $P5046, $P5045
  if359_end693:
    unless_null $P5046, vivi_360694
    nqp_get_sc_object $P5047, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5046, $P5047
  vivi_360694:
    set $S5011, $P5046
    set fb_tmp_98, $P108
    repr_defined $I5004, fb_tmp_98
    unless $I5004 goto if361_else695 
    set $P5048, fb_tmp_98[1]
    set $P5050, $P5048
    goto if361_end696
  if361_else695:
    null $P5049
    set $P5050, $P5049
  if361_end696:
    unless_null $P5050, vivi_362697
    nqp_get_sc_object $P5051, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5050, $P5051
  vivi_362697:
    set $S5012, $P5050
    iseq $I5002, $S5011, $S5012
    unless $I5002 goto if358_else690 
    set fb_tmp_99, $P108
    repr_defined $I5005, fb_tmp_99
    unless $I5005 goto if363_else698 
    set $P5052, fb_tmp_99[0]
    set $P5054, $P5052
    goto if363_end699
  if363_else698:
    null $P5053
    set $P5054, $P5053
  if363_end699:
    unless_null $P5054, vivi_364700
    nqp_get_sc_object $P5055, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5054, $P5055
  vivi_364700:
    set $S5014, $P5054
    downcase $S5013, $S5014
    set $S5015, $S5013
    goto if358_end691
  if358_else690:
    set $S5015, "p"
  if358_end691:
    box $P5056, $S5015
    set $P111, $P5056
.annotate 'line', 898
    find_dynamic_lex $P5057, "$*REGALLOC"
    unless_null $P5057, fallback701
    nqp_get_sc_object $P5059, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5058, $P5059
    set fb_tmp_100, $P5058
    repr_defined $I5006, fb_tmp_100
    unless $I5006 goto if365_else702 
    set $P5060, fb_tmp_100["$REGALLOC"]
    set $P5062, $P5060
    goto if365_end703
  if365_else702:
    null $P5061
    set $P5062, $P5061
  if365_end703:
    unless_null $P5062, vivi_366704
    nqp_get_sc_object $P5063, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5062, $P5063
  vivi_366704:
    unless_null $P5062, vivi_367705
    die "Contextual $*REGALLOC not found"
    box $P5064, "Contextual $*REGALLOC not found"
    set $P5062, $P5064
  vivi_367705:
    set $P5057, $P5062
  fallback701:
    set $S5017, $P111
    concat $S5016, "fresh_", $S5017
    $P5065 = $P5057.$S5016()
    set $P112, $P5065
    set $N5001, $P107
    box $P5066, $N5001
    set $P113, $P5066
    set $N5002, $P113
    set $N5003, 2
    isne $I5007, $N5002, $N5003
    set $I5009, $I5007
    unless $I5007 goto if369_end709 
    set $N5004, $P113
    set $N5005, 3
    isne $I5008, $N5004, $N5005
    set $I5009, $I5008
  if369_end709:
    unless $I5009 goto if368_end707 
    find_lex $P5067, "$repness"
    set $S5021, $P5067
    concat $S5020, "Operation '", $S5021
    find_lex $P5068, "$op_name"
    set $S5022, $P5068
    concat $S5019, $S5020, $S5022
    concat $S5018, $S5019, "' needs 2 or 3 operands"
    box $P5069, $S5018
    die $P5069
  if368_end707:
.annotate 'line', 906
    nqp_get_sc_object $P5070, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5071 = $P5070."new"()
    set $P114, $P5071
.annotate 'line', 907
    $P114."result"($P112)
    unless $P109 goto if370_end711 
.annotate 'line', 910
.annotate 'line', 911
    find_dynamic_lex $P5072, "$*REGALLOC"
    unless_null $P5072, fallback712
    nqp_get_sc_object $P5074, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5073, $P5074
    set fb_tmp_101, $P5073
    repr_defined $I5010, fb_tmp_101
    unless $I5010 goto if371_else713 
    set $P5075, fb_tmp_101["$REGALLOC"]
    set $P5077, $P5075
    goto if371_end714
  if371_else713:
    null $P5076
    set $P5077, $P5076
  if371_end714:
    unless_null $P5077, vivi_372715
    nqp_get_sc_object $P5078, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5077, $P5078
  vivi_372715:
    unless_null $P5077, vivi_373716
    die "Contextual $*REGALLOC not found"
    box $P5079, "Contextual $*REGALLOC not found"
    set $P5077, $P5079
  vivi_373716:
    set $P5072, $P5077
  fallback712:
    $P5080 = $P5072."fresh_p"()
    set $P115, $P5080
.annotate 'line', 912
    $P114."push_pirop"("new", $P115, "'ExceptionHandler'", "[.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]")
.annotate 'line', 914
    $P114."push_pirop"("set_label", $P115, $P105)
.annotate 'line', 915
    $P5081 = $P114."push_pirop"("push_eh", $P115)
  if370_end711:
.annotate 'line', 920
    set fb_tmp_102, $P107
    repr_defined $I5011, fb_tmp_102
    unless $I5011 goto if374_else717 
    set $P5082, fb_tmp_102[0]
    set $P5084, $P5082
    goto if374_end718
  if374_else717:
    null $P5083
    set $P5084, $P5083
  if374_end718:
    unless_null $P5084, vivi_375719
    nqp_get_sc_object $P5085, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5084, $P5085
  vivi_375719:
    $P5086 = _lex_param_0."coerce"($P5084, $P111)
    set $P116, $P5086
    find_lex $P5087, "$repness"
    unless $P5087 goto if376_end721 
.annotate 'line', 921
    set $S5023, $P111
    iseq $I5012, $S5023, "p"
    set $I5014, $I5012
    if $I5012 goto unless378_end725 
    set $S5024, $P111
    iseq $I5013, $S5024, "s"
    set $I5014, $I5013
  unless378_end725:
    unless $I5014 goto if377_else722 
.annotate 'line', 925
.annotate 'line', 926
    $P5088 = $P114."push_pirop"("null", $P112)
    goto if377_end723
  if377_else722:
.annotate 'line', 928
.annotate 'line', 929
    $P5089 = $P114."push_pirop"("set", $P112, "0")
  if377_end723:
.annotate 'line', 931
    $P5090 = $P114."push_pirop"("goto", $P104)
  if376_end721:
.annotate 'line', 933
    $P114."push"($P102)
.annotate 'line', 934
    $P114."push"($P116)
.annotate 'line', 935
    $P5091 = $P116."result"()
    $P114."push_pirop"("set", $P112, $P5091)
.annotate 'line', 936
    find_lex $P5092, "$op_name"
    set $S5028, $P5092
    iseq $I5015, $S5028, "while"
    unless $I5015 goto if379_else726 
    set $S5029, "unless "
    goto if379_end727
  if379_else726:
    set $S5029, "if "
  if379_end727:
.annotate 'line', 937
    set fb_tmp_103, $P107
    repr_defined $I5016, fb_tmp_103
    unless $I5016 goto if380_else728 
    set $P5093, fb_tmp_103[0]
    set $P5095, $P5093
    goto if380_end729
  if380_else728:
    null $P5094
    set $P5095, $P5094
  if380_end729:
    unless_null $P5095, vivi_381730
    nqp_get_sc_object $P5096, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5095, $P5096
  vivi_381730:
    $P5097 = $P5095."result"()
    set $S5030, $P5097
    concat $S5027, $S5029, $S5030
    concat $S5026, $S5027, " goto "
    $P5098 = $P106."result"()
    set $S5031, $P5098
    concat $S5025, $S5026, $S5031
    $P114."push_pirop"($S5025)
    unless_null $P110, fallback733
    nqp_get_sc_object $P5100, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5099, $P5100
    set fb_tmp_104, $P5099
    repr_defined $I5017, fb_tmp_104
    unless $I5017 goto if383_else734 
    set $P5101, fb_tmp_104["$IMM_ARG"]
    set $P5103, $P5101
    goto if383_end735
  if383_else734:
    null $P5102
    set $P5103, $P5102
  if383_end735:
    unless_null $P5103, vivi_384736
    nqp_get_sc_object $P5104, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5103, $P5104
  vivi_384736:
    unless_null $P5103, vivi_385737
    die "Contextual $*IMM_ARG not found"
    box $P5105, "Contextual $*IMM_ARG not found"
    set $P5103, $P5105
  vivi_385737:
    set $P110, $P5103
  fallback733:
    unless $P110 goto if382_end732 
.annotate 'line', 940
.annotate 'line', 941
    unless_null $P110, fallback738
    nqp_get_sc_object $P5107, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5106, $P5107
    set fb_tmp_105, $P5106
    repr_defined $I5018, fb_tmp_105
    unless $I5018 goto if386_else739 
    set $P5108, fb_tmp_105["$IMM_ARG"]
    set $P5110, $P5108
    goto if386_end740
  if386_else739:
    null $P5109
    set $P5110, $P5109
  if386_end740:
    unless_null $P5110, vivi_387741
    nqp_get_sc_object $P5111, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5110, $P5111
  vivi_387741:
    unless_null $P5110, vivi_388742
    die "Contextual $*IMM_ARG not found"
    box $P5112, "Contextual $*IMM_ARG not found"
    set $P5110, $P5112
  vivi_388742:
    set $P110, $P5110
  fallback738:
    $P5113 = $P110($P112)
  if382_end732:
.annotate 'line', 945
    set fb_tmp_106, $P107
    repr_defined $I5019, fb_tmp_106
    unless $I5019 goto if389_else743 
    set $P5114, fb_tmp_106[1]
    set $P5116, $P5114
    goto if389_end744
  if389_else743:
    null $P5115
    set $P5116, $P5115
  if389_end744:
    unless_null $P5116, vivi_390745
    nqp_get_sc_object $P5117, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5116, $P5117
  vivi_390745:
    $P5118 = _lex_param_0."coerce"($P5116, $P111)
    set $P117, $P5118
.annotate 'line', 946
    $P114."push"($P104)
.annotate 'line', 947
    $P114."push"($P117)
.annotate 'line', 948
    $P5119 = $P117."result"()
    $P114."push_pirop"("set", $P112, $P5119)
    set $N5006, $P113
    set $N5007, 3
    iseq $I5020, $N5006, $N5007
    unless $I5020 goto if391_end747 
.annotate 'line', 952
.annotate 'line', 953
    $P114."push"($P103)
.annotate 'line', 954
    set fb_tmp_107, $P107
    repr_defined $I5021, fb_tmp_107
    unless $I5021 goto if392_else748 
    set $P5120, fb_tmp_107[2]
    set $P5122, $P5120
    goto if392_end749
  if392_else748:
    null $P5121
    set $P5122, $P5121
  if392_end749:
    unless_null $P5122, vivi_393750
    nqp_get_sc_object $P5123, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5122, $P5123
  vivi_393750:
    $P5124 = $P114."push"($P5122)
  if391_end747:
.annotate 'line', 958
    $P5125 = $P102."result"()
    set $S5033, $P5125
    concat $S5032, "goto ", $S5033
    $P114."push_pirop"($S5032)
    unless $P109 goto if394_else751 
.annotate 'line', 961
.annotate 'line', 962
    $P114."push"($P105)
.annotate 'line', 963
    set $S5036, $P115
    concat $S5035, "(", $S5036
    concat $S5034, $S5035, ")"
    $P114."push_pirop"(".get_results", $S5034)
.annotate 'line', 964
    $P114."push_pirop"("pop_upto_eh", $P115)
.annotate 'line', 965
    $P114."push_pirop"("getattribute", $P115, $P115, "'type'")
.annotate 'line', 966
    set $N5008, $P113
    set $N5009, 3
    iseq $I5022, $N5008, $N5009
    unless $I5022 goto if395_else753 
    set $P5126, $P103
    goto if395_end754
  if395_else753:
    set $P5126, $P102
  if395_end754:
    $P114."push_pirop"("eq", $P115, ".CONTROL_LOOP_NEXT", $P5126)
.annotate 'line', 968
    $P114."push_pirop"("eq", $P115, ".CONTROL_LOOP_REDO", $P104)
.annotate 'line', 969
    $P114."push"($P106)
.annotate 'line', 970
    $P5127 = $P114."push_pirop"("pop_eh")
    goto if394_end752
  if394_else751:
.annotate 'line', 972
.annotate 'line', 973
    $P5128 = $P114."push"($P106)
  if394_end752:
    .return ($P114) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_201_1368096764.976") :anon :lex :outer("cuid_202_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 885
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_200_1368096764.976' 
    capture_lex $P5006 
    .lex "$_", _lex_param_0 
.annotate 'line', 886
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "nohandler"
    unless $I5001 goto if346_else666 
    box $P5002, 0
    store_lex "$handler", $P5002
    set $P5005, $P5002
    goto if346_end667
  if346_else666:
    .const 'Sub' $P5003 = 'cuid_200_1368096764.976' 
    capture_lex $P5003
    $P5004 = $P5003()
    set $P5005, $P5004
  if346_end667:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_200_1368096764.976") :anon :lex :outer("cuid_201_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 887
    .lex "$*HAVE_IMM_ARG", $P101 
    .lex "$comp", $P102 
    .local pmc fb_tmp_94 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 888
    find_lex $P5003, "$_"
    $P5004 = $P5003."arity"()
    set $N5001, $P5004
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    set $I5006, $I5001
    unless $I5001 goto if347_end669 
    find_lex $P5005, "$_"
    get_id $I5003, $P5005
    find_lex $P5006, "$op"
    $P5007 = $P5006."list"()
    set fb_tmp_94, $P5007
    repr_defined $I5005, fb_tmp_94
    unless $I5005 goto if348_else670 
    set $P5008, fb_tmp_94[1]
    set $P5010, $P5008
    goto if348_end671
  if348_else670:
    null $P5009
    set $P5010, $P5009
  if348_end671:
    unless_null $P5010, vivi_349672
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_349672:
    get_id $I5004, $P5010
    iseq $I5002, $I5003, $I5004
    set $I5006, $I5002
  if347_end669:
    box $P5012, $I5006
    set $P101, $P5012
.annotate 'line', 889
    find_lex $P5013, "$qastcomp"
    find_lex $P5014, "$_"
    $P5015 = $P5013."as_post"($P5014)
    set $P102, $P5015
.annotate 'line', 890
    find_lex $P5016, "@comp_ops"
    $P5016."push"($P102)
.annotate 'line', 891
    find_lex $P5017, "@comp_types"
    find_lex $P5018, "$qastcomp"
    $P5019 = $P102."result"()
    $P5020 = $P5018."infer_type"($P5019)
    $P5017."push"($P5020)
    unless_null $P101, fallback677
    nqp_get_sc_object $P5022, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5021, $P5022
    set fb_tmp_95, $P5021
    repr_defined $I5007, fb_tmp_95
    unless $I5007 goto if352_else678 
    set $P5023, fb_tmp_95["$HAVE_IMM_ARG"]
    set $P5025, $P5023
    goto if352_end679
  if352_else678:
    null $P5024
    set $P5025, $P5024
  if352_end679:
    unless_null $P5025, vivi_353680
    nqp_get_sc_object $P5026, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5025, $P5026
  vivi_353680:
    unless_null $P5025, vivi_354681
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5027, "Contextual $*HAVE_IMM_ARG not found"
    set $P5025, $P5027
  vivi_354681:
    set $P101, $P5025
  fallback677:
    set $P5036, $P101
    unless $P101 goto if351_end676 
    find_dynamic_lex $P5028, "$*IMM_ARG"
    unless_null $P5028, fallback682
    nqp_get_sc_object $P5030, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5029, $P5030
    set fb_tmp_96, $P5029
    repr_defined $I5009, fb_tmp_96
    unless $I5009 goto if355_else683 
    set $P5031, fb_tmp_96["$IMM_ARG"]
    set $P5033, $P5031
    goto if355_end684
  if355_else683:
    null $P5032
    set $P5033, $P5032
  if355_end684:
    unless_null $P5033, vivi_356685
    nqp_get_sc_object $P5034, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5033, $P5034
  vivi_356685:
    unless_null $P5033, vivi_357686
    die "Contextual $*IMM_ARG not found"
    box $P5035, "Contextual $*IMM_ARG not found"
    set $P5033, $P5035
  vivi_357686:
    set $P5028, $P5033
  fallback682:
    isfalse $I5008, $P5028
    box $P5037, $I5008
    set $P5036, $P5037
  if351_end676:
    set $P5040, $P5036
    unless $P5036 goto if350_end674 
.annotate 'line', 892
    find_lex $P5038, "$op_name"
    set $S5002, $P5038
    concat $S5001, $S5002, " block expects an argument, but there's no immediate block to take it"
    box $P5039, $S5001
    die $P5039
    set $P5040, $P5039
  if350_end674:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_206_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 981
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5112 = 'cuid_205_1368096764.976' 
    capture_lex $P5112 
    .const 'Sub' $P5112 = 'cuid_207_1368096764.976' 
    capture_lex $P5112 
    .lex "$handler", $P101 
    .lex "@operands", $P102 
    .lex "$res", $P103 
    .lex "$curval", $P104 
    .lex "$iter", $P105 
    .lex "$ops", $P106 
    .lex "$listpost", $P107 
    .lex "$blockpost", $P108 
    .lex "$exc_reg", $P109 
    .lex "$hand_lbl", $P110 
    .lex "$lbl_next", $P111 
    .lex "$lbl_redo", $P112 
    .lex "$lbl_done", $P113 
    .lex "@valreg", $P114 
    .lex "$arity", $P115 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_108 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P112, $P5012
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P113, $P5013
    new $P5014, 'ResizablePMCArray'
    set $P114, $P5014
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P115, $P5015
    box $P5016, 1
    set $P101, $P5016
.annotate 'line', 984
    $P5020 = _lex_param_1."list"()
    set $P5017, $P5020
    iter $P5019, $P5020
  for_next763:
    unless $P5019, for_done765
    shift $P5022, $P5019
  for_redo764:
    .const 'Sub' $P5021 = 'cuid_205_1368096764.976' 
    capture_lex $P5021
    $P5017 = $P5021($P5022)
    goto for_next763
  for_done765:
    set $N5001, $P102
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if397_end767 
.annotate 'line', 989
    box $P5023, "Operation 'for' needs 2 operands"
    die $P5023
  if397_end767:
    set fb_tmp_108, $P102
    repr_defined $I5003, fb_tmp_108
    unless $I5003 goto if399_else770 
    set $P5024, fb_tmp_108[1]
    set $P5026, $P5024
    goto if399_end771
  if399_else770:
    null $P5025
    set $P5026, $P5025
  if399_end771:
    unless_null $P5026, vivi_400772
    nqp_get_sc_object $P5027, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5026, $P5027
  vivi_400772:
    nqp_get_sc_object $P5028, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    type_check $I5002, $P5026, $P5028
    if $I5002 goto unless398_end769 
.annotate 'line', 992
    box $P5029, "Operation 'for' expects a block as its second operand"
    die $P5029
  unless398_end769:
.annotate 'line', 995
    set fb_tmp_109, $P102
    repr_defined $I5005, fb_tmp_109
    unless $I5005 goto if402_else775 
    set $P5030, fb_tmp_109[1]
    set $P5032, $P5030
    goto if402_end776
  if402_else775:
    null $P5031
    set $P5032, $P5031
  if402_end776:
    unless_null $P5032, vivi_403777
    nqp_get_sc_object $P5033, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5032, $P5033
  vivi_403777:
    $P5034 = $P5032."blocktype"()
    set $S5001, $P5034
    iseq $I5004, $S5001, "immediate"
    unless $I5004 goto if401_end774 
.annotate 'line', 996
    set fb_tmp_110, $P102
    repr_defined $I5006, fb_tmp_110
    unless $I5006 goto if404_else778 
    set $P5035, fb_tmp_110[1]
    set $P5037, $P5035
    goto if404_end779
  if404_else778:
    null $P5036
    set $P5037, $P5036
  if404_end779:
    unless_null $P5037, vivi_405780
    nqp_get_sc_object $P5038, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5037, $P5038
  vivi_405780:
    $P5039 = $P5037."blocktype"("declaration")
  if401_end774:
.annotate 'line', 1000
    find_dynamic_lex $P5040, "$*REGALLOC"
    unless_null $P5040, fallback781
    nqp_get_sc_object $P5042, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5041, $P5042
    set fb_tmp_111, $P5041
    repr_defined $I5007, fb_tmp_111
    unless $I5007 goto if406_else782 
    set $P5043, fb_tmp_111["$REGALLOC"]
    set $P5045, $P5043
    goto if406_end783
  if406_else782:
    null $P5044
    set $P5045, $P5044
  if406_end783:
    unless_null $P5045, vivi_407784
    nqp_get_sc_object $P5046, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5045, $P5046
  vivi_407784:
    unless_null $P5045, vivi_408785
    die "Contextual $*REGALLOC not found"
    box $P5047, "Contextual $*REGALLOC not found"
    set $P5045, $P5047
  vivi_408785:
    set $P5040, $P5045
  fallback781:
    $P5048 = $P5040."fresh_p"()
    set $P103, $P5048
.annotate 'line', 1001
    find_dynamic_lex $P5049, "$*REGALLOC"
    unless_null $P5049, fallback786
    nqp_get_sc_object $P5051, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5050, $P5051
    set fb_tmp_112, $P5050
    repr_defined $I5008, fb_tmp_112
    unless $I5008 goto if409_else787 
    set $P5052, fb_tmp_112["$REGALLOC"]
    set $P5054, $P5052
    goto if409_end788
  if409_else787:
    null $P5053
    set $P5054, $P5053
  if409_end788:
    unless_null $P5054, vivi_410789
    nqp_get_sc_object $P5055, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5054, $P5055
  vivi_410789:
    unless_null $P5054, vivi_411790
    die "Contextual $*REGALLOC not found"
    box $P5056, "Contextual $*REGALLOC not found"
    set $P5054, $P5056
  vivi_411790:
    set $P5049, $P5054
  fallback786:
    $P5057 = $P5049."fresh_p"()
    set $P104, $P5057
.annotate 'line', 1002
    find_dynamic_lex $P5058, "$*REGALLOC"
    unless_null $P5058, fallback791
    nqp_get_sc_object $P5060, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5059, $P5060
    set fb_tmp_113, $P5059
    repr_defined $I5009, fb_tmp_113
    unless $I5009 goto if412_else792 
    set $P5061, fb_tmp_113["$REGALLOC"]
    set $P5063, $P5061
    goto if412_end793
  if412_else792:
    null $P5062
    set $P5063, $P5062
  if412_end793:
    unless_null $P5063, vivi_413794
    nqp_get_sc_object $P5064, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5063, $P5064
  vivi_413794:
    unless_null $P5063, vivi_414795
    die "Contextual $*REGALLOC not found"
    box $P5065, "Contextual $*REGALLOC not found"
    set $P5063, $P5065
  vivi_414795:
    set $P5058, $P5063
  fallback791:
    $P5066 = $P5058."fresh_p"()
    set $P105, $P5066
.annotate 'line', 1003
    nqp_get_sc_object $P5067, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5068 = $P5067."new"()
    set $P106, $P5068
.annotate 'line', 1004
    set fb_tmp_114, $P102
    repr_defined $I5010, fb_tmp_114
    unless $I5010 goto if415_else796 
    set $P5069, fb_tmp_114[0]
    set $P5071, $P5069
    goto if415_end797
  if415_else796:
    null $P5070
    set $P5071, $P5070
  if415_end797:
    unless_null $P5071, vivi_416798
    nqp_get_sc_object $P5072, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5071, $P5072
  vivi_416798:
    $P5073 = _lex_param_0."as_post"($P5071)
    $P5074 = _lex_param_0."coerce"($P5073, "P")
    set $P107, $P5074
.annotate 'line', 1005
    set fb_tmp_115, $P102
    repr_defined $I5011, fb_tmp_115
    unless $I5011 goto if417_else799 
    set $P5075, fb_tmp_115[1]
    set $P5077, $P5075
    goto if417_end800
  if417_else799:
    null $P5076
    set $P5077, $P5076
  if417_end800:
    unless_null $P5077, vivi_418801
    nqp_get_sc_object $P5078, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5077, $P5078
  vivi_418801:
    $P5079 = _lex_param_0."as_post"($P5077)
    $P5080 = _lex_param_0."coerce"($P5079, "P")
    set $P108, $P5080
.annotate 'line', 1006
    $P106."push"($P107)
.annotate 'line', 1009
    $P106."push_pirop"("set", $P103, $P107)
.annotate 'line', 1010
    $P106."push_pirop"("iter", $P105, $P107)
    unless $P101 goto if419_end803 
.annotate 'line', 1015
.annotate 'line', 1016
    find_dynamic_lex $P5081, "$*REGALLOC"
    unless_null $P5081, fallback804
    nqp_get_sc_object $P5083, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5082, $P5083
    set fb_tmp_116, $P5082
    repr_defined $I5012, fb_tmp_116
    unless $I5012 goto if420_else805 
    set $P5084, fb_tmp_116["$REGALLOC"]
    set $P5086, $P5084
    goto if420_end806
  if420_else805:
    null $P5085
    set $P5086, $P5085
  if420_end806:
    unless_null $P5086, vivi_421807
    nqp_get_sc_object $P5087, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5086, $P5087
  vivi_421807:
    unless_null $P5086, vivi_422808
    die "Contextual $*REGALLOC not found"
    box $P5088, "Contextual $*REGALLOC not found"
    set $P5086, $P5088
  vivi_422808:
    set $P5081, $P5086
  fallback804:
    $P5089 = $P5081."fresh_p"()
    set $P109, $P5089
.annotate 'line', 1017
    nqp_get_sc_object $P5090, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5091 = $P5090."new"("for_handlers" :named("name"))
    set $P110, $P5091
.annotate 'line', 1018
    $P106."push_pirop"("new", $P109, "'ExceptionHandler'", "[.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]")
.annotate 'line', 1020
    $P106."push_pirop"("set_label", $P109, $P110)
.annotate 'line', 1021
    $P5092 = $P106."push_pirop"("push_eh", $P109)
  if419_end803:
.annotate 'line', 1025
    nqp_get_sc_object $P5093, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5094 = $P5093."new"("for_next" :named("name"))
    set $P111, $P5094
.annotate 'line', 1026
    nqp_get_sc_object $P5095, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5096 = $P5095."new"("for_redo" :named("name"))
    set $P112, $P5096
.annotate 'line', 1027
    nqp_get_sc_object $P5097, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5098 = $P5097."new"("for_done" :named("name"))
    set $P113, $P5098
.annotate 'line', 1028
    $P106."push"($P111)
.annotate 'line', 1029
    $P106."push_pirop"("unless", $P105, $P113)
.annotate 'line', 1033
    set fb_tmp_117, $P102
    repr_defined $I5013, fb_tmp_117
    unless $I5013 goto if424_else811 
    set $P5099, fb_tmp_117[1]
    set $P5101, $P5099
    goto if424_end812
  if424_else811:
    null $P5100
    set $P5101, $P5100
  if424_end812:
    unless_null $P5101, vivi_425813
    nqp_get_sc_object $P5102, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5101, $P5102
  vivi_425813:
    $P5103 = $P5101."arity"()
    set $P5104, $P5103
    if $P5103 goto unless423_end810 
    box $P5105, 1
    set $P5104, $P5105
  unless423_end810:
    set $P115, $P5104
  while426_test814:
    set $N5003, $P115
    set $N5004, 0
    isgt $I5014, $N5003, $N5004
    box $P5109, $I5014
    set $P5108, $P5109
    unless $I5014 goto while426_done818 
  while426_redo816:
    .const 'Sub' $P5106 = 'cuid_207_1368096764.976' 
    capture_lex $P5106
    $P5107 = $P5106()
    set $P5108, $P5107
    goto while426_test814 
  while426_done818:
.annotate 'line', 1042
    $P106."push"($P112)
.annotate 'line', 1043
    $P106."push"($P108)
.annotate 'line', 1044
    $P106."push_pirop"("call", $P108, $P114 :flat, $P103 :named("result"))
.annotate 'line', 1047
    $P106."push_pirop"("goto", $P111)
    unless $P101 goto if430_else824 
.annotate 'line', 1050
.annotate 'line', 1051
    $P106."push"($P110)
.annotate 'line', 1052
    set $S5004, $P109
    concat $S5003, "(", $S5004
    concat $S5002, $S5003, ")"
    $P106."push_pirop"(".get_results", $S5002)
.annotate 'line', 1053
    $P106."push_pirop"("pop_upto_eh", $P109)
.annotate 'line', 1054
    $P106."push_pirop"("getattribute", $P109, $P109, "'type'")
.annotate 'line', 1055
    $P106."push_pirop"("eq", $P109, ".CONTROL_LOOP_NEXT", $P111)
.annotate 'line', 1056
    $P106."push_pirop"("eq", $P109, ".CONTROL_LOOP_REDO", $P112)
.annotate 'line', 1057
    $P106."push"($P113)
.annotate 'line', 1058
    $P5110 = $P106."push_pirop"("pop_eh")
    goto if430_end825
  if430_else824:
.annotate 'line', 1060
.annotate 'line', 1061
    $P5111 = $P106."push"($P113)
  if430_end825:
.annotate 'line', 1065
    $P106."result"($P103)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_205_1368096764.976") :anon :lex :outer("cuid_206_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 984
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 985
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "nohandler"
    unless $I5001 goto if396_else761 
    box $P5002, 0
    store_lex "$handler", $P5002
    set $P5005, $P5002
    goto if396_end762
  if396_else761:
.annotate 'line', 986
    find_lex $P5003, "@operands"
    $P5004 = $P5003."push"(_lex_param_0)
    set $P5005, $P5004
  if396_end762:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_207_1368096764.976") :anon :lex :outer("cuid_206_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1034
    .lex "$reg", $P101 
    .local pmc fb_tmp_118 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1035
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback819
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_118, $P5003
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if427_else820 
    set $P5005, fb_tmp_118["$REGALLOC"]
    set $P5007, $P5005
    goto if427_end821
  if427_else820:
    null $P5006
    set $P5007, $P5006
  if427_end821:
    unless_null $P5007, vivi_428822
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_428822:
    unless_null $P5007, vivi_429823
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_429823:
    set $P5002, $P5007
  fallback819:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 1036
    find_lex $P5011, "$ops"
    find_lex $P5012, "$iter"
    $P5011."push_pirop"("shift", $P101, $P5012)
    find_lex $P5013, "@valreg"
    push $P5013, $P101
    find_lex $P5014, "$arity"
    set $N5002, $P5014
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$arity", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_208_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1069
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$lbl", $P102 
    .lex "$dreg", $P103 
    .lex "$rreg", $P104 
    .lex "$test", $P105 
    .lex "$then", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
.annotate 'line', 1070
    $P5007 = _lex_param_1."list"()
    set $N5001, $P5007
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if431_end827 
    box $P5008, "Operation 'defor' needs 2 operands"
    die $P5008
  if431_end827:
.annotate 'line', 1073
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5010 = $P5009."new"()
    set $P101, $P5010
.annotate 'line', 1074
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5012 = $P5011."new"("defor" :named("name"))
    set $P102, $P5012
.annotate 'line', 1075
    find_dynamic_lex $P5013, "$*REGALLOC"
    unless_null $P5013, fallback828
    nqp_get_sc_object $P5015, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5014, $P5015
    set fb_tmp_119, $P5014
    repr_defined $I5002, fb_tmp_119
    unless $I5002 goto if432_else829 
    set $P5016, fb_tmp_119["$REGALLOC"]
    set $P5018, $P5016
    goto if432_end830
  if432_else829:
    null $P5017
    set $P5018, $P5017
  if432_end830:
    unless_null $P5018, vivi_433831
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5018, $P5019
  vivi_433831:
    unless_null $P5018, vivi_434832
    die "Contextual $*REGALLOC not found"
    box $P5020, "Contextual $*REGALLOC not found"
    set $P5018, $P5020
  vivi_434832:
    set $P5013, $P5018
  fallback828:
    $P5021 = $P5013."fresh_i"()
    set $P103, $P5021
.annotate 'line', 1076
    find_dynamic_lex $P5022, "$*REGALLOC"
    unless_null $P5022, fallback833
    nqp_get_sc_object $P5024, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5023, $P5024
    set fb_tmp_120, $P5023
    repr_defined $I5003, fb_tmp_120
    unless $I5003 goto if435_else834 
    set $P5025, fb_tmp_120["$REGALLOC"]
    set $P5027, $P5025
    goto if435_end835
  if435_else834:
    null $P5026
    set $P5027, $P5026
  if435_end835:
    unless_null $P5027, vivi_436836
    nqp_get_sc_object $P5028, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5027, $P5028
  vivi_436836:
    unless_null $P5027, vivi_437837
    die "Contextual $*REGALLOC not found"
    box $P5029, "Contextual $*REGALLOC not found"
    set $P5027, $P5029
  vivi_437837:
    set $P5022, $P5027
  fallback833:
    $P5030 = $P5022."fresh_p"()
    set $P104, $P5030
.annotate 'line', 1077
    set fb_tmp_121, _lex_param_1
    repr_defined $I5004, fb_tmp_121
    unless $I5004 goto if438_else838 
    set $P5031, fb_tmp_121[0]
    set $P5033, $P5031
    goto if438_end839
  if438_else838:
    null $P5032
    set $P5033, $P5032
  if438_end839:
    unless_null $P5033, vivi_439840
    nqp_get_sc_object $P5034, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5033, $P5034
  vivi_439840:
    $P5035 = _lex_param_0."as_post"($P5033)
    $P5036 = _lex_param_0."coerce"($P5035, "P")
    set $P105, $P5036
.annotate 'line', 1078
    set fb_tmp_122, _lex_param_1
    repr_defined $I5005, fb_tmp_122
    unless $I5005 goto if440_else841 
    set $P5037, fb_tmp_122[1]
    set $P5039, $P5037
    goto if440_end842
  if440_else841:
    null $P5038
    set $P5039, $P5038
  if440_end842:
    unless_null $P5039, vivi_441843
    nqp_get_sc_object $P5040, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5039, $P5040
  vivi_441843:
    $P5041 = _lex_param_0."as_post"($P5039)
    $P5042 = _lex_param_0."coerce"($P5041, "P")
    set $P106, $P5042
.annotate 'line', 1079
    $P101."push"($P105)
.annotate 'line', 1080
    $P101."push_pirop"("set", $P104, $P105)
.annotate 'line', 1081
    $P101."push_pirop"("defined", $P103, $P104)
.annotate 'line', 1082
    $P101."push_pirop"("if", $P103, $P102)
.annotate 'line', 1083
    $P101."push"($P106)
.annotate 'line', 1084
    $P101."push_pirop"("set", $P104, $P106)
.annotate 'line', 1085
    $P101."push"($P102)
.annotate 'line', 1086
    $P101."result"($P104)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_210_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1090
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5071 = 'cuid_209_1368096764.976' 
    capture_lex $P5071 
    .const 'Sub' $P5071 = 'cuid_212_1368096764.976' 
    capture_lex $P5071 
    .const 'Sub' $P5071 = 'cuid_213_1368096764.976' 
    capture_lex $P5071 
    .lex "$ops", $P101 
    .lex "$falselabel", $P102 
    .lex "$endlabel", $P103 
    .lex "@childlist", $P104 
    .lex "$fpast", $P105 
    .lex "$i", $P106 
    .lex "$t", $P107 
    .lex "$u", $P108 
    .lex "$apast", $P109 
    .lex "$apost", $P110 
    .lex "$have_middle_child", $P111 
    .lex "$bpost", $P112 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P112, $P5012
.annotate 'line', 1091
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"()
    set $P101, $P5014
.annotate 'line', 1092
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback844
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5016, $P5017
    set fb_tmp_123, $P5016
    repr_defined $I5001, fb_tmp_123
    unless $I5001 goto if442_else845 
    set $P5018, fb_tmp_123["$REGALLOC"]
    set $P5020, $P5018
    goto if442_end846
  if442_else845:
    null $P5019
    set $P5020, $P5019
  if442_end846:
    unless_null $P5020, vivi_443847
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_443847:
    unless_null $P5020, vivi_444848
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_444848:
    set $P5015, $P5020
  fallback844:
    $P5023 = $P5015."fresh_p"()
    $P101."result"($P5023)
.annotate 'line', 1094
    nqp_get_sc_object $P5024, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5025 = $P5024."new"("xor_false" :named("name"))
    set $P102, $P5025
.annotate 'line', 1095
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5027 = $P5026."new"("xor_end" :named("name"))
    set $P103, $P5027
.annotate 'line', 1099
    $P5031 = _lex_param_1."list"()
    set $P5028, $P5031
    iter $P5030, $P5031
  for_next851:
    unless $P5030, for_done853
    shift $P5033, $P5030
  for_redo852:
    .const 'Sub' $P5032 = 'cuid_209_1368096764.976' 
    capture_lex $P5032
    $P5028 = $P5032($P5033)
    goto for_next851
  for_done853:
.annotate 'line', 1108
    find_dynamic_lex $P5034, "$*REGALLOC"
    unless_null $P5034, fallback854
    nqp_get_sc_object $P5036, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5035, $P5036
    set fb_tmp_124, $P5035
    repr_defined $I5002, fb_tmp_124
    unless $I5002 goto if446_else855 
    set $P5037, fb_tmp_124["$REGALLOC"]
    set $P5039, $P5037
    goto if446_end856
  if446_else855:
    null $P5038
    set $P5039, $P5038
  if446_end856:
    unless_null $P5039, vivi_447857
    nqp_get_sc_object $P5040, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5039, $P5040
  vivi_447857:
    unless_null $P5039, vivi_448858
    die "Contextual $*REGALLOC not found"
    box $P5041, "Contextual $*REGALLOC not found"
    set $P5039, $P5041
  vivi_448858:
    set $P5034, $P5039
  fallback854:
    $P5042 = $P5034."fresh_i"()
    set $P106, $P5042
.annotate 'line', 1109
    find_dynamic_lex $P5043, "$*REGALLOC"
    unless_null $P5043, fallback859
    nqp_get_sc_object $P5045, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5044, $P5045
    set fb_tmp_125, $P5044
    repr_defined $I5003, fb_tmp_125
    unless $I5003 goto if449_else860 
    set $P5046, fb_tmp_125["$REGALLOC"]
    set $P5048, $P5046
    goto if449_end861
  if449_else860:
    null $P5047
    set $P5048, $P5047
  if449_end861:
    unless_null $P5048, vivi_450862
    nqp_get_sc_object $P5049, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5048, $P5049
  vivi_450862:
    unless_null $P5048, vivi_451863
    die "Contextual $*REGALLOC not found"
    box $P5050, "Contextual $*REGALLOC not found"
    set $P5048, $P5050
  vivi_451863:
    set $P5043, $P5048
  fallback859:
    $P5051 = $P5043."fresh_i"()
    set $P107, $P5051
.annotate 'line', 1110
    find_dynamic_lex $P5052, "$*REGALLOC"
    unless_null $P5052, fallback864
    nqp_get_sc_object $P5054, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5053, $P5054
    set fb_tmp_126, $P5053
    repr_defined $I5004, fb_tmp_126
    unless $I5004 goto if452_else865 
    set $P5055, fb_tmp_126["$REGALLOC"]
    set $P5057, $P5055
    goto if452_end866
  if452_else865:
    null $P5056
    set $P5057, $P5056
  if452_end866:
    unless_null $P5057, vivi_453867
    nqp_get_sc_object $P5058, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5057, $P5058
  vivi_453867:
    unless_null $P5057, vivi_454868
    die "Contextual $*REGALLOC not found"
    box $P5059, "Contextual $*REGALLOC not found"
    set $P5057, $P5059
  vivi_454868:
    set $P5052, $P5057
  fallback864:
    $P5060 = $P5052."fresh_i"()
    set $P108, $P5060
    shift $P5061, $P104
    set $P109, $P5061
.annotate 'line', 1113
    $P5062 = _lex_param_0."as_post"($P109)
    $P5063 = _lex_param_0."coerce"($P5062, "P")
    set $P110, $P5063
.annotate 'line', 1114
    $P101."push"($P110)
.annotate 'line', 1115
    $P101."push_pirop"("set", $P101, $P110)
.annotate 'line', 1116
    $P101."push_pirop"("istrue", $P107, $P110)
    box $P5064, 1
    set $P111, $P5064
  while455_test869:
    set $P5067, $P111
    unless $P111 goto while455_done873 
  while455_redo871:
    .const 'Sub' $P5065 = 'cuid_212_1368096764.976' 
    capture_lex $P5065
    $P5066 = $P5065()
    set $P5067, $P5066
    goto while455_test869 
  while455_done873:
.annotate 'line', 1139
    $P101."push_pirop"("if", $P107, $P103)
.annotate 'line', 1140
    $P101."push_pirop"("set", $P101, $P112)
.annotate 'line', 1141
    $P101."push_pirop"("goto", $P103)
.annotate 'line', 1142
    $P101."push"($P102)
    unless $P105 goto if457_else876 
    .const 'Sub' $P5068 = 'cuid_213_1368096764.976' 
    capture_lex $P5068
    $P5069 = $P5068()
    goto if457_end877
  if457_else876:
.annotate 'line', 1149
.annotate 'line', 1150
    $P5070 = $P101."push_pirop"("new", $P101, "[\"Undef\"]")
  if457_end877:
.annotate 'line', 1153
    $P101."push"($P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_209_1368096764.976") :anon :lex :outer("cuid_210_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1099
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1100
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "false"
    unless $I5001 goto if445_else849 
    store_lex "$fpast", _lex_param_0
    set $P5003, _lex_param_0
    goto if445_end850
  if445_else849:
.annotate 'line', 1103
    find_lex $P5002, "@childlist"
    push $P5002, _lex_param_0
    set $P5003, $P5002
  if445_end850:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_212_1368096764.976") :anon :lex :outer("cuid_210_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1120
    .const 'Sub' $P5025 = 'cuid_211_1368096764.976' 
    capture_lex $P5025 
    .lex "$bpast", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_lex $P5003, "@childlist"
    shift $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 1122
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "$qastcomp"
    $P5006 = $P5005."as_post"($P101)
    $P5007 = $P5004."coerce"($P5006, "P")
    store_lex "$bpost", $P5007
.annotate 'line', 1123
    find_lex $P5008, "$ops"
    find_lex $P5009, "$bpost"
    $P5008."push"($P5009)
.annotate 'line', 1124
    find_lex $P5010, "$ops"
    find_lex $P5011, "$u"
    find_lex $P5012, "$bpost"
    $P5010."push_pirop"("istrue", $P5011, $P5012)
.annotate 'line', 1125
    find_lex $P5013, "$ops"
    find_lex $P5014, "$i"
    find_lex $P5015, "$t"
    find_lex $P5016, "$u"
    $P5013."push_pirop"("and", $P5014, $P5015, $P5016)
.annotate 'line', 1126
    find_lex $P5017, "$ops"
    find_lex $P5018, "$i"
    find_lex $P5019, "$falselabel"
    $P5017."push_pirop"("if", $P5018, $P5019)
    find_lex $P5020, "@childlist"
    unless $P5020 goto if456_else874 
    .const 'Sub' $P5021 = 'cuid_211_1368096764.976' 
    capture_lex $P5021
    $P5022 = $P5021()
    set $P5024, $P5022
    goto if456_end875
  if456_else874:
.annotate 'line', 1134
    box $P5023, 0
    store_lex "$have_middle_child", $P5023
    set $P5024, $P5023
  if456_end875:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_211_1368096764.976") :anon :lex :outer("cuid_212_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1127
    .lex "$truelabel", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1128
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5003 = $P5002."new"("xor_true" :named("name"))
    set $P101, $P5003
.annotate 'line', 1129
    find_lex $P5004, "$ops"
    find_lex $P5005, "$t"
    $P5004."push_pirop"("if", $P5005, $P101)
.annotate 'line', 1130
    find_lex $P5006, "$ops"
    find_lex $P5007, "$ops"
    find_lex $P5008, "$bpost"
    $P5006."push_pirop"("set", $P5007, $P5008)
.annotate 'line', 1131
    find_lex $P5009, "$ops"
    find_lex $P5010, "$t"
    find_lex $P5011, "$u"
    $P5009."push_pirop"("set", $P5010, $P5011)
.annotate 'line', 1132
    find_lex $P5012, "$ops"
    $P5013 = $P5012."push"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_213_1368096764.976") :anon :lex :outer("cuid_210_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1144
    .lex "$fpost", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1145
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$fpast"
    $P5005 = $P5003."as_post"($P5004)
    $P5006 = $P5002."coerce"($P5005, "P")
    set $P101, $P5006
.annotate 'line', 1146
    find_lex $P5007, "$ops"
    $P5007."push"($P101)
.annotate 'line', 1147
    find_lex $P5008, "$ops"
    find_lex $P5009, "$ops"
    $P5010 = $P5008."push_pirop"("set", $P5009, $P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_214_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1159
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@children", $P101 
    .lex "$*BINDVAL", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1161
    $P5003 = _lex_param_1."list"()
    set $P101, $P5003
    set $N5001, $P101
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if458_end879 
.annotate 'line', 1162
    box $P5004, "A 'bind' op must have exactly two children"
    die $P5004
  if458_end879:
    set fb_tmp_127, $P101
    repr_defined $I5003, fb_tmp_127
    unless $I5003 goto if460_else882 
    set $P5005, fb_tmp_127[0]
    set $P5007, $P5005
    goto if460_end883
  if460_else882:
    null $P5006
    set $P5007, $P5006
  if460_end883:
    unless_null $P5007, vivi_461884
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_461884:
    nqp_get_sc_object $P5009, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    type_check $I5002, $P5007, $P5009
    if $I5002 goto unless459_end881 
.annotate 'line', 1165
    box $P5010, "First child of a 'bind' op must be a QAST::Var"
    die $P5010
  unless459_end881:
    set fb_tmp_128, $P101
    repr_defined $I5004, fb_tmp_128
    unless $I5004 goto if462_else885 
    set $P5011, fb_tmp_128[1]
    set $P5013, $P5011
    goto if462_end886
  if462_else885:
    null $P5012
    set $P5013, $P5012
  if462_end886:
    unless_null $P5013, vivi_463887
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_463887:
    set $P102, $P5013
.annotate 'line', 1172
    set fb_tmp_129, $P101
    repr_defined $I5005, fb_tmp_129
    unless $I5005 goto if464_else888 
    set $P5015, fb_tmp_129[0]
    set $P5017, $P5015
    goto if464_end889
  if464_else888:
    null $P5016
    set $P5017, $P5016
  if464_end889:
    unless_null $P5017, vivi_465890
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_465890:
    $P5019 = _lex_param_0."as_post"($P5017)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_216_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1200
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_215_1368096764.976' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_217_1368096764.976' 
    capture_lex $P5039 
    .lex "$callee", $P101 
    .lex "@args", $P102 
    .lex "$ops", $P103 
    .lex "@pos_arg_results", $P104 
    .lex "@named_arg_results", $P105 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_130 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
.annotate 'line', 1203
    $P5007 = _lex_param_1."list"()
    repr_clone $P5006, $P5007
    set $P102, $P5006
.annotate 'line', 1204
    $P5008 = _lex_param_1."name"()
    unless $P5008 goto if466_else891 
.annotate 'line', 1205
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5010 = _lex_param_1."name"()
    $P5011 = _lex_param_0."escape"($P5010)
    $P5012 = $P5009."new"($P5011 :named("result"))
    set $P101, $P5012
    goto if466_end892
  if466_else891:
    set $N5001, $P102
    unless $N5001 goto if467_else893 
.annotate 'line', 1207
.annotate 'line', 1208
    $P5013 = $P102."shift"()
    $P5014 = _lex_param_0."as_post"($P5013)
    set $P101, $P5014
    set $P5016, $P101
    goto if467_end894
  if467_else893:
.annotate 'line', 1210
    box $P5015, "No name for call and empty children list"
    die $P5015
    set $P5016, $P5015
  if467_end894:
  if466_end892:
.annotate 'line', 1215
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5018 = $P5017."new"()
    set $P103, $P5018
.annotate 'line', 1216
    $P5019 = _lex_param_1."node"()
    unless $P5019 goto if468_end896 
    $P5020 = _lex_param_1."node"()
    $P5021 = $P103."node"($P5020)
  if468_end896:
    set $P5022, $P102
    iter $P5024, $P102
  for_next897:
    unless $P5024, for_done899
    shift $P5026, $P5024
  for_redo898:
    .const 'Sub' $P5025 = 'cuid_215_1368096764.976' 
    capture_lex $P5025
    $P5022 = $P5025($P5026)
    goto for_next897
  for_done899:
.annotate 'line', 1224
    $P103."push"($P101)
    find_dynamic_lex $P5027, "$*WANT"
    unless_null $P5027, fallback902
    nqp_get_sc_object $P5029, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5028, $P5029
    set fb_tmp_130, $P5028
    repr_defined $I5002, fb_tmp_130
    unless $I5002 goto if470_else903 
    set $P5030, fb_tmp_130["$WANT"]
    set $P5032, $P5030
    goto if470_end904
  if470_else903:
    null $P5031
    set $P5032, $P5031
  if470_end904:
    unless_null $P5032, vivi_471905
    nqp_get_sc_object $P5033, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5032, $P5033
  vivi_471905:
    unless_null $P5032, vivi_472906
    die "Contextual $*WANT not found"
    box $P5034, "Contextual $*WANT not found"
    set $P5032, $P5034
  vivi_472906:
    set $P5027, $P5032
  fallback902:
    set $S5001, $P5027
    iseq $I5001, $S5001, "v"
    unless $I5001 goto if469_else900 
.annotate 'line', 1225
.annotate 'line', 1226
    $P5035 = $P101."result"()
    $P5036 = $P103."push_pirop"("call", $P5035, $P104 :flat, $P105 :flat)
    goto if469_end901
  if469_else900:
    .const 'Sub' $P5037 = 'cuid_217_1368096764.976' 
    capture_lex $P5037
    $P5038 = $P5037()
  if469_end901:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_215_1368096764.976") :anon :lex :outer("cuid_216_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1219
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1220
    find_lex $P5001, "$qastcomp"
    find_lex $P5002, "$ops"
    find_lex $P5003, "@pos_arg_results"
    find_lex $P5004, "@named_arg_results"
    $P5005 = "&handle_arg"(_lex_param_0, $P5001, $P5002, $P5003, $P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_217_1368096764.976") :anon :lex :outer("cuid_216_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1228
    .lex "$res_type", $P101 
    .lex "$res_reg", $P102 
    .local pmc fb_tmp_131 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1229
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$op"
    $P5005 = $P5004."returns"()
    $P5006 = $P5003."type_to_register_type"($P5005)
    set $P101, $P5006
.annotate 'line', 1230
    find_dynamic_lex $P5007, "$*REGALLOC"
    unless_null $P5007, fallback907
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set fb_tmp_131, $P5008
    repr_defined $I5001, fb_tmp_131
    unless $I5001 goto if473_else908 
    set $P5010, fb_tmp_131["$REGALLOC"]
    set $P5012, $P5010
    goto if473_end909
  if473_else908:
    null $P5011
    set $P5012, $P5011
  if473_end909:
    unless_null $P5012, vivi_474910
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_474910:
    unless_null $P5012, vivi_475911
    die "Contextual $*REGALLOC not found"
    box $P5014, "Contextual $*REGALLOC not found"
    set $P5012, $P5014
  vivi_475911:
    set $P5007, $P5012
  fallback907:
    set $S5003, $P101
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5015 = $P5007.$S5001()
    set $P102, $P5015
.annotate 'line', 1231
    find_lex $P5016, "$ops"
    find_lex $P5017, "$callee"
    $P5018 = $P5017."result"()
    find_lex $P5019, "@pos_arg_results"
    find_lex $P5020, "@named_arg_results"
    $P5016."push_pirop"("call", $P5018, $P5019 :flat, $P5020 :flat, $P102 :named("result"))
.annotate 'line', 1232
    find_lex $P5021, "$ops"
    $P5022 = $P5021."result"($P102)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_219_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1236
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_218_1368096764.976' 
    capture_lex $P5042 
    .const 'Sub' $P5042 = 'cuid_220_1368096764.976' 
    capture_lex $P5042 
    .const 'Sub' $P5042 = 'cuid_221_1368096764.976' 
    capture_lex $P5042 
    .lex "@args", $P101 
    .lex "$name", $P102 
    .lex "$ops", $P103 
    .lex "@pos_arg_results", $P104 
    .lex "@named_arg_results", $P105 
    .lex "$inv", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_132 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
.annotate 'line', 1238
    $P5008 = _lex_param_1."list"()
    repr_clone $P5007, $P5008
    set $P101, $P5007
    set $N5001, $P101
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if476_end913 
.annotate 'line', 1239
    box $P5009, "Method call node requires at least one child"
    die $P5009
  if476_end913:
.annotate 'line', 1245
    $P5010 = _lex_param_1."name"()
    unless $P5010 goto if477_else914 
.annotate 'line', 1246
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5012 = _lex_param_1."name"()
    $P5013 = _lex_param_0."escape"($P5012)
    $P5014 = $P5011."new"($P5013 :named("result"))
    set $P102, $P5014
    goto if477_end915
  if477_else914:
    set $N5003, $P101
    set $N5004, 2
    isge $I5002, $N5003, $N5004
    unless $I5002 goto if478_else916 
    .const 'Sub' $P5015 = 'cuid_218_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5018, $P5016
    goto if478_end917
  if478_else916:
.annotate 'line', 1253
    box $P5017, "Method call must either supply a name or have a child node that evaluates to the name"
    die $P5017
    set $P5018, $P5017
  if478_end917:
  if477_end915:
.annotate 'line', 1258
    nqp_get_sc_object $P5019, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5020 = $P5019."new"()
    set $P103, $P5020
.annotate 'line', 1259
    $P5021 = _lex_param_1."node"()
    unless $P5021 goto if479_end919 
    $P5022 = _lex_param_1."node"()
    $P5023 = $P103."node"($P5022)
  if479_end919:
    box $P5024, 1
    set $P106, $P5024
    set $P5025, $P101
    iter $P5027, $P101
  for_next922:
    unless $P5027, for_done924
    shift $P5029, $P5027
  for_redo923:
    .const 'Sub' $P5028 = 'cuid_220_1368096764.976' 
    capture_lex $P5028
    $P5025 = $P5028($P5029)
    goto for_next922
  for_done924:
.annotate 'line', 1274
    $P103."push"($P102)
    find_dynamic_lex $P5030, "$*WANT"
    unless_null $P5030, fallback927
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5031, $P5032
    set fb_tmp_132, $P5031
    repr_defined $I5004, fb_tmp_132
    unless $I5004 goto if482_else928 
    set $P5033, fb_tmp_132["$WANT"]
    set $P5035, $P5033
    goto if482_end929
  if482_else928:
    null $P5034
    set $P5035, $P5034
  if482_end929:
    unless_null $P5035, vivi_483930
    nqp_get_sc_object $P5036, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5035, $P5036
  vivi_483930:
    unless_null $P5035, vivi_484931
    die "Contextual $*WANT not found"
    box $P5037, "Contextual $*WANT not found"
    set $P5035, $P5037
  vivi_484931:
    set $P5030, $P5035
  fallback927:
    set $S5001, $P5030
    iseq $I5003, $S5001, "v"
    unless $I5003 goto if481_else925 
.annotate 'line', 1275
.annotate 'line', 1276
    $P5038 = $P102."result"()
    $P5039 = $P103."push_pirop"("callmethod", $P5038, $P104 :flat, $P105 :flat)
    goto if481_end926
  if481_else925:
    .const 'Sub' $P5040 = 'cuid_221_1368096764.976' 
    capture_lex $P5040
    $P5041 = $P5040()
  if481_end926:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_218_1368096764.976") :anon :lex :outer("cuid_219_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1248
    .lex "$invocant", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1249
    find_lex $P5002, "@args"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 1250
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "$qastcomp"
    find_lex $P5006, "@args"
    $P5007 = $P5006."shift"()
    $P5008 = $P5005."as_post"($P5007)
    $P5009 = $P5004."coerce"($P5008, "s")
    store_lex "$name", $P5009
.annotate 'line', 1251
    find_lex $P5010, "@args"
    $P5011 = $P5010."unshift"($P101)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_220_1368096764.976") :anon :lex :outer("cuid_219_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1263
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$inv"
    unless $P5001 goto if480_else920 
.annotate 'line', 1264
.annotate 'line', 1265
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$ops"
    find_lex $P5004, "@pos_arg_results"
    find_lex $P5005, "@named_arg_results"
    "&handle_arg"(_lex_param_0, $P5002, $P5003, $P5004, $P5005, "P" :named("coerce"))
    box $P5006, 0
    store_lex "$inv", $P5006
    set $P5012, $P5006
    goto if480_end921
  if480_else920:
.annotate 'line', 1268
.annotate 'line', 1269
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$ops"
    find_lex $P5009, "@pos_arg_results"
    find_lex $P5010, "@named_arg_results"
    $P5011 = "&handle_arg"(_lex_param_0, $P5007, $P5008, $P5009, $P5010)
    set $P5012, $P5011
  if480_end921:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_221_1368096764.976") :anon :lex :outer("cuid_219_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1278
    .lex "$res_type", $P101 
    .lex "$res_reg", $P102 
    .local pmc fb_tmp_133 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1279
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$op"
    $P5005 = $P5004."returns"()
    $P5006 = $P5003."type_to_register_type"($P5005)
    set $P101, $P5006
.annotate 'line', 1280
    find_dynamic_lex $P5007, "$*REGALLOC"
    unless_null $P5007, fallback932
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set fb_tmp_133, $P5008
    repr_defined $I5001, fb_tmp_133
    unless $I5001 goto if485_else933 
    set $P5010, fb_tmp_133["$REGALLOC"]
    set $P5012, $P5010
    goto if485_end934
  if485_else933:
    null $P5011
    set $P5012, $P5011
  if485_end934:
    unless_null $P5012, vivi_486935
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_486935:
    unless_null $P5012, vivi_487936
    die "Contextual $*REGALLOC not found"
    box $P5014, "Contextual $*REGALLOC not found"
    set $P5012, $P5014
  vivi_487936:
    set $P5007, $P5012
  fallback932:
    set $S5003, $P101
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5015 = $P5007.$S5001()
    set $P102, $P5015
.annotate 'line', 1281
    find_lex $P5016, "$ops"
    find_lex $P5017, "$name"
    $P5018 = $P5017."result"()
    find_lex $P5019, "@pos_arg_results"
    find_lex $P5020, "@named_arg_results"
    $P5016."push_pirop"("callmethod", $P5018, $P5019 :flat, $P5020 :flat, $P102 :named("result"))
.annotate 'line', 1282
    find_lex $P5021, "$ops"
    $P5022 = $P5021."result"($P102)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$label1", $P101 
    .lex "$label2", $P102 
    .lex "$lexname", $P103 
    .lex "$ops", $P104 
    .lex "$handler", $P105 
    .lex "$cpost", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_134 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
.annotate 'line', 1289
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5008 = $P5007."new"("lexotic_" :named("name"))
    set $P101, $P5008
.annotate 'line', 1290
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5010 = $P5009."new"("lexotic_" :named("name"))
    set $P102, $P5010
.annotate 'line', 1291
    $P5011 = _lex_param_1."name"()
    $P5012 = _lex_param_0."escape"($P5011)
    set $P103, $P5012
.annotate 'line', 1293
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"()
    set $P104, $P5014
.annotate 'line', 1294
    find_dynamic_lex $P5015, "$*BLOCK"
    unless_null $P5015, fallback937
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5016, $P5017
    set fb_tmp_134, $P5016
    repr_defined $I5001, fb_tmp_134
    unless $I5001 goto if488_else938 
    set $P5018, fb_tmp_134["$BLOCK"]
    set $P5020, $P5018
    goto if488_end939
  if488_else938:
    null $P5019
    set $P5020, $P5019
  if488_end939:
    unless_null $P5020, vivi_489940
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_489940:
    unless_null $P5020, vivi_490941
    die "Contextual $*BLOCK not found"
    box $P5022, "Contextual $*BLOCK not found"
    set $P5020, $P5022
  vivi_490941:
    set $P5015, $P5020
  fallback937:
    $P5023 = $P5015."fresh_lex_p"()
    set $P105, $P5023
.annotate 'line', 1295
    $P104."push_pirop"("root_new", $P105, "['parrot';'Continuation']")
.annotate 'line', 1296
    $P104."push_pirop"("set_label", $P105, $P101)
.annotate 'line', 1297
    $P104."push_pirop"(".lex", $P103, $P105)
.annotate 'line', 1299
    $P5024 = _lex_param_1."list"()
    $P5025 = _lex_param_0."compile_all_the_stmts"($P5024)
    $P5026 = _lex_param_0."coerce"($P5025, "P")
    set $P106, $P5026
.annotate 'line', 1300
    $P104."push"($P106)
.annotate 'line', 1301
    $P104."result"($P106)
.annotate 'line', 1303
    $P104."push_pirop"("goto", $P102)
.annotate 'line', 1304
    $P104."push"($P101)
.annotate 'line', 1305
    $P5027 = $P104."result"()
    set $S5003, $P5027
    concat $S5002, "(", $S5003
    concat $S5001, $S5002, ")"
    $P104."push_pirop"(".get_results", $S5001)
.annotate 'line', 1306
    $P104."push"($P102)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_223_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1312
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_135 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1313
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback942
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_135, $P5004
    repr_defined $I5001, fb_tmp_135
    unless $I5001 goto if491_else943 
    set $P5006, fb_tmp_135["$REGALLOC"]
    set $P5008, $P5006
    goto if491_end944
  if491_else943:
    null $P5007
    set $P5008, $P5007
  if491_end944:
    unless_null $P5008, vivi_492945
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_492945:
    unless_null $P5008, vivi_493946
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_493946:
    set $P5003, $P5008
  fallback942:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1314
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1315
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1316
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1317
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1320
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 1321
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback947
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_136, $P5005
    repr_defined $I5001, fb_tmp_136
    unless $I5001 goto if494_else948 
    set $P5007, fb_tmp_136["$REGALLOC"]
    set $P5009, $P5007
    goto if494_end949
  if494_else948:
    null $P5008
    set $P5009, $P5008
  if494_end949:
    unless_null $P5009, vivi_495950
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_495950:
    unless_null $P5009, vivi_496951
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_496951:
    set $P5004, $P5009
  fallback947:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1322
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1323
    set fb_tmp_137, _lex_param_1
    repr_defined $I5002, fb_tmp_137
    unless $I5002 goto if497_else952 
    set $P5015, fb_tmp_137[0]
    set $P5017, $P5015
    goto if497_end953
  if497_else952:
    null $P5016
    set $P5017, $P5016
  if497_end953:
    unless_null $P5017, vivi_498954
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_498954:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1324
    $P102."push"($P103)
.annotate 'line', 1325
    $P102."push_pirop"("getattribute", $P101, $P103, "'outer_ctx'")
.annotate 'line', 1326
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_225_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1329
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 1330
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback955
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_138, $P5005
    repr_defined $I5001, fb_tmp_138
    unless $I5001 goto if499_else956 
    set $P5007, fb_tmp_138["$REGALLOC"]
    set $P5009, $P5007
    goto if499_end957
  if499_else956:
    null $P5008
    set $P5009, $P5008
  if499_end957:
    unless_null $P5009, vivi_500958
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_500958:
    unless_null $P5009, vivi_501959
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_501959:
    set $P5004, $P5009
  fallback955:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1331
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1332
    set fb_tmp_139, _lex_param_1
    repr_defined $I5002, fb_tmp_139
    unless $I5002 goto if502_else960 
    set $P5015, fb_tmp_139[0]
    set $P5017, $P5015
    goto if502_end961
  if502_else960:
    null $P5016
    set $P5017, $P5016
  if502_end961:
    unless_null $P5017, vivi_503962
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_503962:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1333
    $P102."push"($P103)
.annotate 'line', 1334
    $P102."push_pirop"("getattribute", $P101, $P103, "'caller_ctx'")
.annotate 'line', 1335
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1338
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 1339
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback963
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_140, $P5005
    repr_defined $I5001, fb_tmp_140
    unless $I5001 goto if504_else964 
    set $P5007, fb_tmp_140["$REGALLOC"]
    set $P5009, $P5007
    goto if504_end965
  if504_else964:
    null $P5008
    set $P5009, $P5008
  if504_end965:
    unless_null $P5009, vivi_505966
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_505966:
    unless_null $P5009, vivi_506967
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_506967:
    set $P5004, $P5009
  fallback963:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1340
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1341
    set fb_tmp_141, _lex_param_1
    repr_defined $I5002, fb_tmp_141
    unless $I5002 goto if507_else968 
    set $P5015, fb_tmp_141[0]
    set $P5017, $P5015
    goto if507_end969
  if507_else968:
    null $P5016
    set $P5017, $P5016
  if507_end969:
    unless_null $P5017, vivi_508970
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_508970:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1342
    $P102."push"($P103)
.annotate 'line', 1343
    $P102."push_pirop"("getattribute", $P101, $P103, "'lex_pad'")
.annotate 'line', 1344
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_227_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1347
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_142 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1348
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback971
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_142, $P5004
    repr_defined $I5001, fb_tmp_142
    unless $I5001 goto if509_else972 
    set $P5006, fb_tmp_142["$REGALLOC"]
    set $P5008, $P5006
    goto if509_end973
  if509_else972:
    null $P5007
    set $P5008, $P5007
  if509_end973:
    unless_null $P5008, vivi_510974
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_510974:
    unless_null $P5008, vivi_511975
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_511975:
    set $P5003, $P5008
  fallback971:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1349
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1350
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1351
    set $S5002, $P101
    concat $S5001, $S5002, "['lexpad']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1352
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_228_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1355
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_143 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1356
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback976
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_143, $P5004
    repr_defined $I5001, fb_tmp_143
    unless $I5001 goto if512_else977 
    set $P5006, fb_tmp_143["$REGALLOC"]
    set $P5008, $P5006
    goto if512_end978
  if512_else977:
    null $P5007
    set $P5008, $P5007
  if512_end978:
    unless_null $P5008, vivi_513979
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_513979:
    unless_null $P5008, vivi_514980
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_514980:
    set $P5003, $P5008
  fallback976:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1357
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1358
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1359
    set $S5002, $P101
    concat $S5001, $S5002, "['sub']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1360
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_229_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_144 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1364
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback981
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_144, $P5004
    repr_defined $I5001, fb_tmp_144
    unless $I5001 goto if515_else982 
    set $P5006, fb_tmp_144["$REGALLOC"]
    set $P5008, $P5006
    goto if515_end983
  if515_else982:
    null $P5007
    set $P5008, $P5007
  if515_end983:
    unless_null $P5008, vivi_516984
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_516984:
    unless_null $P5008, vivi_517985
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_517985:
    set $P5003, $P5008
  fallback981:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1365
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1366
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1367
    set $S5002, $P101
    concat $S5001, $S5002, "['sub';1]"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1368
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless518_end987 
.annotate 'line', 1372
    box $P5002, "Operation 'lexprimspec' expects two operands"
    die $P5002
  unless518_end987:
.annotate 'line', 1375
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 2
    set fb_tmp_145, _lex_param_1
    repr_defined $I5002, fb_tmp_145
    unless $I5002 goto if519_else988 
    set $P5005, fb_tmp_145[0]
    set $P5007, $P5005
    goto if519_end989
  if519_else988:
    null $P5006
    set $P5007, $P5006
  if519_end989:
    unless_null $P5007, vivi_520990
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_520990:
    set fb_tmp_146, _lex_param_1
    repr_defined $I5003, fb_tmp_146
    unless $I5003 goto if521_else991 
    set $P5009, fb_tmp_146[1]
    set $P5011, $P5009
    goto if521_end992
  if521_else991:
    null $P5010
    set $P5011, $P5010
  if521_end992:
    unless_null $P5011, vivi_522993
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_522993:
    $P5013 = $P5003."new"($P5007, $P5011, "callmethod" :named("op"), "get_lex_type" :named("name"), $P5004 :named("returns"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_231_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_147 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1385
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback994
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_147, $P5004
    repr_defined $I5001, fb_tmp_147
    unless $I5001 goto if523_else995 
    set $P5006, fb_tmp_147["$REGALLOC"]
    set $P5008, $P5006
    goto if523_end996
  if523_else995:
    null $P5007
    set $P5008, $P5007
  if523_end996:
    unless_null $P5008, vivi_524997
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_524997:
    unless_null $P5008, vivi_525998
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_525998:
    set $P5003, $P5008
  fallback994:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1386
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1387
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1388
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1389
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_232_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_148 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1396
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback999
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_148, $P5004
    repr_defined $I5001, fb_tmp_148
    unless $I5001 goto if526_else1000 
    set $P5006, fb_tmp_148["$REGALLOC"]
    set $P5008, $P5006
    goto if526_end1001
  if526_else1000:
    null $P5007
    set $P5008, $P5007
  if526_end1001:
    unless_null $P5008, vivi_5271002
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_5271002:
    unless_null $P5008, vivi_5281003
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_5281003:
    set $P5003, $P5008
  fallback999:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1397
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1398
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1399
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1400
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1413
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pos_reg", $P101 
    .lex "$nam_reg", $P102 
    .lex "$res_reg", $P103 
    .lex "$inv_post", $P104 
    .lex "$cap_post", $P105 
    .lex "$ops", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
.annotate 'line', 1414
    $P5007 = _lex_param_1."list"()
    set $N5001, $P5007
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless529_end1005 
    box $P5008, "The 'invokewithcapture' op requires two children"
    die $P5008
  unless529_end1005:
.annotate 'line', 1417
    find_dynamic_lex $P5009, "$*REGALLOC"
    unless_null $P5009, fallback1006
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5010, $P5011
    set fb_tmp_149, $P5010
    repr_defined $I5002, fb_tmp_149
    unless $I5002 goto if530_else1007 
    set $P5012, fb_tmp_149["$REGALLOC"]
    set $P5014, $P5012
    goto if530_end1008
  if530_else1007:
    null $P5013
    set $P5014, $P5013
  if530_end1008:
    unless_null $P5014, vivi_5311009
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_5311009:
    unless_null $P5014, vivi_5321010
    die "Contextual $*REGALLOC not found"
    box $P5016, "Contextual $*REGALLOC not found"
    set $P5014, $P5016
  vivi_5321010:
    set $P5009, $P5014
  fallback1006:
    $P5017 = $P5009."fresh_p"()
    set $P101, $P5017
.annotate 'line', 1418
    find_dynamic_lex $P5018, "$*REGALLOC"
    unless_null $P5018, fallback1011
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5019, $P5020
    set fb_tmp_150, $P5019
    repr_defined $I5003, fb_tmp_150
    unless $I5003 goto if533_else1012 
    set $P5021, fb_tmp_150["$REGALLOC"]
    set $P5023, $P5021
    goto if533_end1013
  if533_else1012:
    null $P5022
    set $P5023, $P5022
  if533_end1013:
    unless_null $P5023, vivi_5341014
    nqp_get_sc_object $P5024, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5023, $P5024
  vivi_5341014:
    unless_null $P5023, vivi_5351015
    die "Contextual $*REGALLOC not found"
    box $P5025, "Contextual $*REGALLOC not found"
    set $P5023, $P5025
  vivi_5351015:
    set $P5018, $P5023
  fallback1011:
    $P5026 = $P5018."fresh_p"()
    set $P102, $P5026
.annotate 'line', 1419
    find_dynamic_lex $P5027, "$*REGALLOC"
    unless_null $P5027, fallback1016
    nqp_get_sc_object $P5029, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5028, $P5029
    set fb_tmp_151, $P5028
    repr_defined $I5004, fb_tmp_151
    unless $I5004 goto if536_else1017 
    set $P5030, fb_tmp_151["$REGALLOC"]
    set $P5032, $P5030
    goto if536_end1018
  if536_else1017:
    null $P5031
    set $P5032, $P5031
  if536_end1018:
    unless_null $P5032, vivi_5371019
    nqp_get_sc_object $P5033, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5032, $P5033
  vivi_5371019:
    unless_null $P5032, vivi_5381020
    die "Contextual $*REGALLOC not found"
    box $P5034, "Contextual $*REGALLOC not found"
    set $P5032, $P5034
  vivi_5381020:
    set $P5027, $P5032
  fallback1016:
    $P5035 = $P5027."fresh_p"()
    set $P103, $P5035
.annotate 'line', 1420
    set fb_tmp_152, _lex_param_1
    repr_defined $I5005, fb_tmp_152
    unless $I5005 goto if539_else1021 
    set $P5036, fb_tmp_152[0]
    set $P5038, $P5036
    goto if539_end1022
  if539_else1021:
    null $P5037
    set $P5038, $P5037
  if539_end1022:
    unless_null $P5038, vivi_5401023
    nqp_get_sc_object $P5039, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5038, $P5039
  vivi_5401023:
    $P5040 = _lex_param_0."as_post"($P5038)
    $P5041 = _lex_param_0."coerce"($P5040, "P")
    set $P104, $P5041
.annotate 'line', 1421
    set fb_tmp_153, _lex_param_1
    repr_defined $I5006, fb_tmp_153
    unless $I5006 goto if541_else1024 
    set $P5042, fb_tmp_153[1]
    set $P5044, $P5042
    goto if541_end1025
  if541_else1024:
    null $P5043
    set $P5044, $P5043
  if541_end1025:
    unless_null $P5044, vivi_5421026
    nqp_get_sc_object $P5045, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5044, $P5045
  vivi_5421026:
    $P5046 = _lex_param_0."as_post"($P5044)
    $P5047 = _lex_param_0."coerce"($P5046, "P")
    set $P105, $P5047
.annotate 'line', 1422
    nqp_get_sc_object $P5048, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5049 = $P5048."new"()
    set $P106, $P5049
.annotate 'line', 1423
    $P106."push"($P104)
.annotate 'line', 1424
    $P106."push"($P105)
.annotate 'line', 1425
    $P5050 = $P105."result"()
    $P106."push_pirop"("deconstruct_capture", $P5050, $P101, $P102)
.annotate 'line', 1426
    $P5051 = $P104."result"()
    set $S5002, $P101
    concat $S5001, $S5002, " :flat"
    set $S5004, $P102
    concat $S5003, $S5004, " :flat :named"
    $P106."push_pirop"("call", $P5051, $S5001, $S5003, $P103 :named("result"))
.annotate 'line', 1428
    $P106."result"($P103)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_234_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1485
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_154 
    find_lex $P5001, "%const_map"
.annotate 'line', 1486
    $P5002 = _lex_param_1."name"()
    set $S5001, $P5002
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if543_else1027 
.annotate 'line', 1487
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 42
    find_lex $P5004, "%const_map"
    set fb_tmp_154, $P5004
    repr_defined $I5002, fb_tmp_154
    unless $I5002 goto if544_else1029 
    $P5006 = _lex_param_1."name"()
    set $S5002, $P5006
    set $P5005, fb_tmp_154[$S5002]
    set $P5008, $P5005
    goto if544_end1030
  if544_else1029:
    null $P5007
    set $P5008, $P5007
  if544_end1030:
    unless_null $P5008, vivi_5451031
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_5451031:
    $P5010 = $P5003."new"($P5008 :named("value"))
    $P5011 = _lex_param_0."as_post"($P5010)
    set $P5014, $P5011
    goto if543_end1028
  if543_else1027:
.annotate 'line', 1489
.annotate 'line', 1490
    $P5012 = _lex_param_1."name"()
    set $S5005, $P5012
    concat $S5004, "Unknown constant '", $S5005
    concat $S5003, $S5004, "'"
    box $P5013, $S5003
    die $P5013
    set $P5014, $P5013
  if543_end1028:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1507
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5081 = 'cuid_235_1368096764.976' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_238_1368096764.976' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_240_1368096764.976' 
    capture_lex $P5081 
    .lex "@children", $P101 
    .lex "$protected", $P102 
    .lex "$procpost", $P103 
    .lex "%handlers", $P104 
    .lex "$catch", $P105 
    .lex "$control", $P106 
    .lex "@other", $P107 
    .lex "$catch_label", $P108 
    .lex "$control_label", $P109 
    .lex "$other_label", $P110 
    .lex "$num_pops", $P111 
    .lex "$skip_handler_label", $P112 
    .lex "$ops", $P113 
    .lex "$reg", $P114 
    .lex "$res_type", $P115 
    .lex "$res_reg", $P116 
    .lex "$orig_alloc", $P117 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    new $P5004, 'Hash'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P112, $P5012
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P113, $P5013
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P114, $P5014
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P115, $P5015
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P116, $P5016
    nqp_get_sc_object $P5017, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P117, $P5017
.annotate 'line', 1508
    $P5019 = _lex_param_1."list"()
    repr_clone $P5018, $P5019
    set $P101, $P5018
    set $N5001, $P101
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if546_end1033 
.annotate 'line', 1509
    box $P5020, "The 'handle' op requires at least one child"
    die $P5020
  if546_end1033:
.annotate 'line', 1515
    $P5021 = $P101."shift"()
    set $P102, $P5021
.annotate 'line', 1516
    $P5022 = _lex_param_0."as_post"($P102)
    $P5023 = _lex_param_0."coerce"($P5022, "P")
    set $P103, $P5023
    if $P101 goto unless547_end1035 
.annotate 'line', 1517
    $P5024 = "RETURN"($P103)
  unless547_end1035:
    set $P5025, $P101
    iter $P5027, $P101
  for_next1044:
    unless $P5027, for_done1046
    shift $P5029, $P5027
    shift $P5030, $P5027
  for_redo1045:
    .const 'Sub' $P5028 = 'cuid_235_1368096764.976' 
    capture_lex $P5028
    $P5025 = $P5028($P5029, $P5030)
    goto for_next1044
  for_done1046:
    box $P5031, 0
    set $P111, $P5031
.annotate 'line', 1552
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5033 = _lex_param_0."unique"("skip_handler_")
    $P5034 = $P5032."new"($P5033 :named("name"))
    set $P112, $P5034
.annotate 'line', 1553
    nqp_get_sc_object $P5035, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5036 = $P5035."new"()
    set $P113, $P5036
.annotate 'line', 1554
    find_dynamic_lex $P5037, "$*REGALLOC"
    unless_null $P5037, fallback1047
    nqp_get_sc_object $P5039, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5038, $P5039
    set fb_tmp_155, $P5038
    repr_defined $I5002, fb_tmp_155
    unless $I5002 goto if552_else1048 
    set $P5040, fb_tmp_155["$REGALLOC"]
    set $P5042, $P5040
    goto if552_end1049
  if552_else1048:
    null $P5041
    set $P5042, $P5041
  if552_end1049:
    unless_null $P5042, vivi_5531050
    nqp_get_sc_object $P5043, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5042, $P5043
  vivi_5531050:
    unless_null $P5042, vivi_5541051
    die "Contextual $*REGALLOC not found"
    box $P5044, "Contextual $*REGALLOC not found"
    set $P5042, $P5044
  vivi_5541051:
    set $P5037, $P5042
  fallback1047:
    $P5045 = $P5037."fresh_p"()
    set $P114, $P5045
    unless $P105 goto if555_end1053 
.annotate 'line', 1555
.annotate 'line', 1556
    nqp_get_sc_object $P5046, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5047 = _lex_param_0."unique"("catch_handler_")
    $P5048 = $P5046."new"($P5047 :named("name"))
    set $P108, $P5048
.annotate 'line', 1557
    $P113."push_pirop"("new", $P114, "'ExceptionHandler'")
.annotate 'line', 1558
    $P113."push_pirop"("set_label", $P114, $P108)
.annotate 'line', 1559
    $P113."push_pirop"("callmethod", "'handle_types_except'", $P114, ".CONTROL_ALL")
.annotate 'line', 1560
    $P113."push_pirop"("push_eh", $P114)
    set $N5004, $P111
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5049, $N5003
    set $P111, $P5049
  if555_end1053:
    unless $P106 goto if556_end1055 
.annotate 'line', 1563
.annotate 'line', 1564
    nqp_get_sc_object $P5050, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5051 = _lex_param_0."unique"("catch_handler_")
    $P5052 = $P5050."new"($P5051 :named("name"))
    set $P109, $P5052
.annotate 'line', 1565
    $P113."push_pirop"("new", $P114, "'ExceptionHandler'", "[.CONTROL_ALL]")
.annotate 'line', 1566
    $P113."push_pirop"("set_label", $P114, $P109)
.annotate 'line', 1567
    $P113."push_pirop"("push_eh", $P114)
    set $N5007, $P111
    set $N5008, 1
    add $N5006, $N5007, $N5008
    box $P5053, $N5006
    set $P111, $P5053
  if556_end1055:
    unless $P107 goto if557_end1057 
    .const 'Sub' $P5054 = 'cuid_238_1368096764.976' 
    capture_lex $P5054
    $P5055 = $P5054()
  if557_end1057:
.annotate 'line', 1582
    $P5056 = $P103."result"()
    $P5057 = _lex_param_0."infer_type"($P5056)
    set $S5002, $P5057
    downcase $S5001, $S5002
    box $P5058, $S5001
    set $P115, $P5058
.annotate 'line', 1583
    find_dynamic_lex $P5059, "$*REGALLOC"
    unless_null $P5059, fallback1064
    nqp_get_sc_object $P5061, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5060, $P5061
    set fb_tmp_157, $P5060
    repr_defined $I5003, fb_tmp_157
    unless $I5003 goto if560_else1065 
    set $P5062, fb_tmp_157["$REGALLOC"]
    set $P5064, $P5062
    goto if560_end1066
  if560_else1065:
    null $P5063
    set $P5064, $P5063
  if560_end1066:
    unless_null $P5064, vivi_5611067
    nqp_get_sc_object $P5065, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5064, $P5065
  vivi_5611067:
    unless_null $P5064, vivi_5621068
    die "Contextual $*REGALLOC not found"
    box $P5066, "Contextual $*REGALLOC not found"
    set $P5064, $P5066
  vivi_5621068:
    set $P5059, $P5064
  fallback1064:
    set $S5004, $P115
    concat $S5003, "fresh_", $S5004
    $P5067 = $P5059.$S5003()
    set $P116, $P5067
.annotate 'line', 1584
    $P113."push"($P103)
.annotate 'line', 1585
    $P5068 = $P103."result"()
    $P113."push_pirop"("set", $P116, $P5068)
  while563_test1069:
    set $P5070, $P111
    unless $P111 goto while563_done1073 
  while563_redo1071:
.annotate 'line', 1586
.annotate 'line', 1587
    $P113."push_pirop"("pop_eh")
    set $N5010, $P111
    set $N5011, 1
    sub $N5009, $N5010, $N5011
    box $P5069, $N5009
    set $P111, $P5069
    set $P5070, $P111
    goto while563_test1069 
  while563_done1073:
.annotate 'line', 1590
    $P113."push_pirop"("goto", $P112)
    find_dynamic_lex $P5071, "$*REGALLOC"
    unless_null $P5071, fallback1074
    nqp_get_sc_object $P5073, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5072, $P5073
    set fb_tmp_158, $P5072
    repr_defined $I5004, fb_tmp_158
    unless $I5004 goto if564_else1075 
    set $P5074, fb_tmp_158["$REGALLOC"]
    set $P5076, $P5074
    goto if564_end1076
  if564_else1075:
    null $P5075
    set $P5076, $P5075
  if564_end1076:
    unless_null $P5076, vivi_5651077
    nqp_get_sc_object $P5077, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5076, $P5077
  vivi_5651077:
    unless_null $P5076, vivi_5661078
    die "Contextual $*REGALLOC not found"
    box $P5078, "Contextual $*REGALLOC not found"
    set $P5076, $P5078
  vivi_5661078:
    set $P5071, $P5076
  fallback1074:
    set $P117, $P5071
    .const 'Sub' $P5079 = 'cuid_240_1368096764.976' 
    capture_lex $P5079
    $P5080 = $P5079()
.annotate 'line', 1643
    $P113."push"($P112)
.annotate 'line', 1644
    $P113."result"($P116)
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_235_1368096764.976") :anon :lex :outer("cuid_236_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1526
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", _lex_param_0 
    .lex "$handler_code", _lex_param_1 
    find_lex $P5001, "%handler_names"
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if548_else1036 
.annotate 'line', 1527
    find_lex $P5002, "%handlers"
    set $S5002, _lex_param_0
    exists $I5002, $P5002[$S5002]
    unless $I5002 goto if549_end1039 
.annotate 'line', 1528
    set $S5004, _lex_param_0
    concat $S5003, "Multiple handlers for ", $S5004
    box $P5003, $S5003
    die $P5003
  if549_end1039:
    find_lex $P5004, "%handlers"
    set $S5005, _lex_param_0
    set $P5004[$S5005], _lex_param_1
    set $S5006, _lex_param_0
    iseq $I5003, $S5006, "CATCH"
    unless $I5003 goto if550_else1040 
.annotate 'line', 1532
    box $P5005, 1
    store_lex "$catch", $P5005
    set $P5009, $P5005
    goto if550_end1041
  if550_else1040:
    set $S5007, _lex_param_0
    iseq $I5004, $S5007, "CONTROL"
    unless $I5004 goto if551_else1042 
.annotate 'line', 1535
    box $P5006, 1
    store_lex "$control", $P5006
    set $P5008, $P5006
    goto if551_end1043
  if551_else1042:
.annotate 'line', 1538
    find_lex $P5007, "@other"
    push $P5007, _lex_param_0
    set $P5008, $P5007
  if551_end1043:
    set $P5009, $P5008
  if550_end1041:
    set $P5011, $P5009
    goto if548_end1037
  if548_else1036:
.annotate 'line', 1542
    set $S5010, _lex_param_0
    concat $S5009, "Invalid handler type '", $S5010
    concat $S5008, $S5009, "'"
    box $P5010, $S5008
    die $P5010
    set $P5011, $P5010
  if548_end1037:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_238_1368096764.976") :anon :lex :outer("cuid_236_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1570
    .const 'Sub' $P5021 = 'cuid_237_1368096764.976' 
    capture_lex $P5021 
    .lex "@hnames", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5005, "@other"
    set $P5002, $P5005
    iter $P5004, $P5005
  for_next1061:
    unless $P5004, for_done1063
    shift $P5007, $P5004
  for_redo1062:
    .const 'Sub' $P5006 = 'cuid_237_1368096764.976' 
    capture_lex $P5006
    $P5002 = $P5006($P5007)
    goto for_next1061
  for_done1063:
.annotate 'line', 1573
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    find_lex $P5009, "$qastcomp"
    $P5010 = $P5009."unique"("catch_handler_")
    $P5011 = $P5008."new"($P5010 :named("name"))
    store_lex "$other_label", $P5011
.annotate 'line', 1574
    find_lex $P5012, "$ops"
    find_lex $P5013, "$reg"
    join $S5003, ", ", $P101
    concat $S5002, "[", $S5003
    concat $S5001, $S5002, "]"
    $P5012."push_pirop"("new", $P5013, "'ExceptionHandler'", $S5001)
.annotate 'line', 1576
    find_lex $P5014, "$ops"
    find_lex $P5015, "$reg"
    find_lex $P5016, "$other_label"
    $P5014."push_pirop"("set_label", $P5015, $P5016)
.annotate 'line', 1577
    find_lex $P5017, "$ops"
    find_lex $P5018, "$reg"
    $P5017."push_pirop"("push_eh", $P5018)
    find_lex $P5019, "$num_pops"
    set $N5002, $P5019
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5020, $N5001
    store_lex "$num_pops", $P5020
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1368096764.976") :anon :lex :outer("cuid_238_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1572
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_156 
    find_lex $P5001, "@hnames"
    find_lex $P5002, "%handler_names"
    set fb_tmp_156, $P5002
    repr_defined $I5001, fb_tmp_156
    unless $I5001 goto if558_else1058 
    set $S5001, _lex_param_0
    set $P5003, fb_tmp_156[$S5001]
    set $P5005, $P5003
    goto if558_end1059
  if558_else1058:
    null $P5004
    set $P5005, $P5004
  if558_end1059:
    unless_null $P5005, vivi_5591060
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_5591060:
    push $P5001, $P5005
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1368096764.976") :anon :lex :outer("cuid_236_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1594
    .const 'Sub' $P5027 = 'cuid_239_1368096764.976' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_242_1368096764.976' 
    capture_lex $P5027 
    .lex "$*CUR_EXCEPTION", $P101 
    .lex "$*REGALLOC", $P102 
    .lex "&simple_handler", $P103 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_239_1368096764.976' 
    capture_lex $P5003
    set $P103, $P5003
    find_lex $P5004, "$reg"
    set $P101, $P5004
.annotate 'line', 1596
    find_lex $P5005, "$orig_alloc"
    $P5006 = $P5005."handler_allocator"()
    set $P102, $P5006
    find_lex $P5007, "$catch"
    unless $P5007 goto if567_end1080 
.annotate 'line', 1608
.annotate 'line', 1609
    find_lex $P5008, "$catch_label"
    find_lex $P5009, "%handlers"
    set fb_tmp_159, $P5009
    repr_defined $I5001, fb_tmp_159
    unless $I5001 goto if568_else1081 
    set $P5010, fb_tmp_159["CATCH"]
    set $P5012, $P5010
    goto if568_end1082
  if568_else1081:
    null $P5011
    set $P5012, $P5011
  if568_end1082:
    unless_null $P5012, vivi_5691083
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_5691083:
    $P5014 = "&simple_handler"($P5008, $P5012)
  if567_end1080:
    find_lex $P5015, "$control"
    unless $P5015 goto if570_end1085 
.annotate 'line', 1611
.annotate 'line', 1612
    find_lex $P5016, "$control_label"
    find_lex $P5017, "%handlers"
    set fb_tmp_160, $P5017
    repr_defined $I5002, fb_tmp_160
    unless $I5002 goto if571_else1086 
    set $P5018, fb_tmp_160["CONTROL"]
    set $P5020, $P5018
    goto if571_end1087
  if571_else1086:
    null $P5019
    set $P5020, $P5019
  if571_end1087:
    unless_null $P5020, vivi_5721088
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_5721088:
    $P5022 = "&simple_handler"($P5016, $P5020)
  if570_end1085:
    find_lex $P5023, "@other"
    set $P5026, $P5023
    unless $P5023 goto if573_end1090 
    .const 'Sub' $P5024 = 'cuid_242_1368096764.976' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5026, $P5025
  if573_end1090:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "simple_handler" :subid("cuid_239_1368096764.976") :anon :lex :outer("cuid_240_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1597
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$handler_post", $P101 
    .lex "$label", _lex_param_0 
    .lex "$handler_qast", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1598
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_1)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 1599
    find_lex $P5006, "$ops"
    $P5006."push"(_lex_param_0)
.annotate 'line', 1600
    find_lex $P5007, "$ops"
    find_lex $P5008, "$reg"
    set $S5003, $P5008
    concat $S5002, ".get_results (", $S5003
    concat $S5001, $S5002, ")"
    $P5007."push_pirop"($S5001)
.annotate 'line', 1601
    find_lex $P5009, "$ops"
    $P5009."push"($P101)
.annotate 'line', 1602
    find_lex $P5010, "$ops"
    find_lex $P5011, "$reg"
    $P5010."push_pirop"("finalize", $P5011)
.annotate 'line', 1603
    find_lex $P5012, "$ops"
    find_lex $P5013, "$reg"
    $P5012."push_pirop"("pop_upto_eh", $P5013)
.annotate 'line', 1604
    find_lex $P5014, "$ops"
    $P5014."push_pirop"("pop_eh")
.annotate 'line', 1605
    find_lex $P5015, "$ops"
    find_lex $P5016, "$res_reg"
    $P5017 = $P101."result"()
    $P5015."push_pirop"("set", $P5016, $P5017)
.annotate 'line', 1606
    find_lex $P5018, "$ops"
    find_lex $P5019, "$skip_handler_label"
    $P5020 = $P5018."push_pirop"("goto", $P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1368096764.976") :anon :lex :outer("cuid_240_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1614
    .const 'Sub' $P5030 = 'cuid_241_1368096764.976' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_243_1368096764.976' 
    capture_lex $P5030 
    .lex "$type_reg", $P101 
    .lex "%type_labels", $P102 
    .local pmc fb_tmp_161 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
.annotate 'line', 1615
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1091
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_161, $P5004
    repr_defined $I5001, fb_tmp_161
    unless $I5001 goto if574_else1092 
    set $P5006, fb_tmp_161["$REGALLOC"]
    set $P5008, $P5006
    goto if574_end1093
  if574_else1092:
    null $P5007
    set $P5008, $P5007
  if574_end1093:
    unless_null $P5008, vivi_5751094
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_5751094:
    unless_null $P5008, vivi_5761095
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_5761095:
    set $P5003, $P5008
  fallback1091:
    $P5011 = $P5003."fresh_i"()
    set $P101, $P5011
.annotate 'line', 1616
    find_lex $P5012, "$ops"
    find_lex $P5013, "$other_label"
    $P5012."push"($P5013)
.annotate 'line', 1617
    find_lex $P5014, "$ops"
    find_lex $P5015, "$reg"
    set $S5003, $P5015
    concat $S5002, ".get_results (", $S5003
    concat $S5001, $S5002, ")"
    $P5014."push_pirop"($S5001)
.annotate 'line', 1621
    find_lex $P5016, "$ops"
    find_lex $P5017, "$reg"
    set $S5005, $P5017
    concat $S5004, $S5005, "[\"type\"]"
    $P5016."push_pirop"("set", $P101, $S5004)
    find_lex $P5021, "@other"
    set $P5018, $P5021
    iter $P5020, $P5021
  for_next1099:
    unless $P5020, for_done1101
    shift $P5023, $P5020
  for_redo1100:
    .const 'Sub' $P5022 = 'cuid_241_1368096764.976' 
    capture_lex $P5022
    $P5018 = $P5022($P5023)
    goto for_next1099
  for_done1101:
    find_lex $P5027, "@other"
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next1108:
    unless $P5026, for_done1110
    shift $P5029, $P5026
  for_redo1109:
    .const 'Sub' $P5028 = 'cuid_243_1368096764.976' 
    capture_lex $P5028
    $P5024 = $P5028($P5029)
    goto for_next1108
  for_done1110:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_241_1368096764.976") :anon :lex :outer("cuid_242_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1622
    .param pmc _lex_param_0 
    .lex "$lbl", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_162 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1623
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."unique"("handle_type_")
    $P5005 = $P5002."new"($P5004 :named("name"))
    set $P101, $P5005
.annotate 'line', 1624
    find_lex $P5006, "$ops"
    find_lex $P5007, "$type_reg"
    find_lex $P5008, "%handler_names"
    set fb_tmp_162, $P5008
    repr_defined $I5001, fb_tmp_162
    unless $I5001 goto if577_else1096 
    set $S5001, _lex_param_0
    set $P5009, fb_tmp_162[$S5001]
    set $P5011, $P5009
    goto if577_end1097
  if577_else1096:
    null $P5010
    set $P5011, $P5010
  if577_end1097:
    unless_null $P5011, vivi_5781098
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_5781098:
    $P5006."push_pirop"("eq", $P5007, $P5011, $P101)
    find_lex $P5013, "%type_labels"
    set $S5002, _lex_param_0
    set $P5013[$S5002], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_243_1368096764.976") :anon :lex :outer("cuid_242_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1629
    .param pmc _lex_param_0 
    .lex "$handler_post", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1630
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "%handlers"
    set fb_tmp_163, $P5004
    repr_defined $I5001, fb_tmp_163
    unless $I5001 goto if579_else1102 
    set $S5001, _lex_param_0
    set $P5005, fb_tmp_163[$S5001]
    set $P5007, $P5005
    goto if579_end1103
  if579_else1102:
    null $P5006
    set $P5007, $P5006
  if579_end1103:
    unless_null $P5007, vivi_5801104
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_5801104:
    $P5009 = $P5003."as_post"($P5007)
    $P5010 = $P5002."coerce"($P5009, "P")
    set $P101, $P5010
.annotate 'line', 1631
    find_lex $P5011, "$ops"
    find_lex $P5012, "%type_labels"
    set fb_tmp_164, $P5012
    repr_defined $I5002, fb_tmp_164
    unless $I5002 goto if581_else1105 
    set $S5002, _lex_param_0
    set $P5013, fb_tmp_164[$S5002]
    set $P5015, $P5013
    goto if581_end1106
  if581_else1105:
    null $P5014
    set $P5015, $P5014
  if581_end1106:
    unless_null $P5015, vivi_5821107
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_5821107:
    $P5011."push"($P5015)
.annotate 'line', 1632
    find_lex $P5017, "$ops"
    $P5017."push"($P101)
.annotate 'line', 1633
    find_lex $P5018, "$ops"
    find_lex $P5019, "$reg"
    $P5018."push_pirop"("finalize", $P5019)
.annotate 'line', 1634
    find_lex $P5020, "$ops"
    find_lex $P5021, "$reg"
    $P5020."push_pirop"("pop_upto_eh", $P5021)
.annotate 'line', 1635
    find_lex $P5022, "$ops"
    $P5022."push_pirop"("pop_eh")
.annotate 'line', 1636
    find_lex $P5023, "$ops"
    find_lex $P5024, "$res_reg"
    $P5025 = $P101."result"()
    $P5023."push_pirop"("set", $P5024, $P5025)
.annotate 'line', 1637
    find_lex $P5026, "$ops"
    find_lex $P5027, "$skip_handler_label"
    $P5028 = $P5026."push_pirop"("goto", $P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1648
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_165 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_5871117
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*CUR_EXCEPTION"
    unless_null $P5003, fallback1111
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_165, $P5004
    repr_defined $I5001, fb_tmp_165
    unless $I5001 goto if583_else1112 
    set $P5006, fb_tmp_165["$CUR_EXCEPTION"]
    set $P5008, $P5006
    goto if583_end1113
  if583_else1112:
    null $P5007
    set $P5008, $P5007
  if583_end1113:
    unless_null $P5008, vivi_5841114
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_5841114:
    unless_null $P5008, vivi_5851115
    die "Contextual $*CUR_EXCEPTION not found"
    box $P5010, "Contextual $*CUR_EXCEPTION not found"
    set $P5008, $P5010
  vivi_5851115:
    set $P5003, $P5008
  fallback1111:
    set $P5012, $P5003
    pop_eh 
    goto skip_handler_5861116
  catch_handler_5871117:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_5861116
  skip_handler_5861116:
    set $P101, $P5012
    if $P101 goto unless588_end1119 
.annotate 'line', 1650
    box $P5013, "Can only use 'exception' op in the context of an exception handler"
    die $P5013
  unless588_end1119:
.annotate 'line', 1653
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5015 = $P5014."new"()
    set $P102, $P5015
.annotate 'line', 1654
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_245_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1657
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$reg", $P102 
    .lex "$ops", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 1658
    $P5004 = _lex_param_1."list"()
    set $N5001, $P5004
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if589_end1121 
    box $P5005, "The 'getpayload' op expects one child"
    die $P5005
  if589_end1121:
.annotate 'line', 1661
    set fb_tmp_166, _lex_param_1
    repr_defined $I5002, fb_tmp_166
    unless $I5002 goto if590_else1122 
    set $P5006, fb_tmp_166[0]
    set $P5008, $P5006
    goto if590_end1123
  if590_else1122:
    null $P5007
    set $P5008, $P5007
  if590_end1123:
    unless_null $P5008, vivi_5911124
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_5911124:
    $P5010 = _lex_param_0."as_post"($P5008)
    $P5011 = _lex_param_0."coerce"($P5010, "P")
    set $P101, $P5011
.annotate 'line', 1662
    find_dynamic_lex $P5012, "$*REGALLOC"
    unless_null $P5012, fallback1125
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5013, $P5014
    set fb_tmp_167, $P5013
    repr_defined $I5003, fb_tmp_167
    unless $I5003 goto if592_else1126 
    set $P5015, fb_tmp_167["$REGALLOC"]
    set $P5017, $P5015
    goto if592_end1127
  if592_else1126:
    null $P5016
    set $P5017, $P5016
  if592_end1127:
    unless_null $P5017, vivi_5931128
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_5931128:
    unless_null $P5017, vivi_5941129
    die "Contextual $*REGALLOC not found"
    box $P5019, "Contextual $*REGALLOC not found"
    set $P5017, $P5019
  vivi_5941129:
    set $P5012, $P5017
  fallback1125:
    $P5020 = $P5012."fresh_p"()
    set $P102, $P5020
.annotate 'line', 1663
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5022 = $P5021."new"()
    set $P103, $P5022
.annotate 'line', 1664
    $P103."push"($P101)
.annotate 'line', 1665
    $P5023 = $P101."result"()
    $P103."push_pirop"("getattribute", $P102, $P5023, "\"payload\"")
.annotate 'line', 1666
    $P103."result"($P102)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_246_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1669
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$payload", $P102 
    .lex "$ops", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_168 
    .local pmc fb_tmp_169 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 1670
    $P5004 = _lex_param_1."list"()
    set $N5001, $P5004
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if595_end1131 
    box $P5005, "The 'setpayload' op expects two children"
    die $P5005
  if595_end1131:
.annotate 'line', 1673
    set fb_tmp_168, _lex_param_1
    repr_defined $I5002, fb_tmp_168
    unless $I5002 goto if596_else1132 
    set $P5006, fb_tmp_168[0]
    set $P5008, $P5006
    goto if596_end1133
  if596_else1132:
    null $P5007
    set $P5008, $P5007
  if596_end1133:
    unless_null $P5008, vivi_5971134
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_5971134:
    $P5010 = _lex_param_0."as_post"($P5008)
    $P5011 = _lex_param_0."coerce"($P5010, "P")
    set $P101, $P5011
.annotate 'line', 1674
    set fb_tmp_169, _lex_param_1
    repr_defined $I5003, fb_tmp_169
    unless $I5003 goto if598_else1135 
    set $P5012, fb_tmp_169[1]
    set $P5014, $P5012
    goto if598_end1136
  if598_else1135:
    null $P5013
    set $P5014, $P5013
  if598_end1136:
    unless_null $P5014, vivi_5991137
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_5991137:
    $P5016 = _lex_param_0."as_post"($P5014)
    $P5017 = _lex_param_0."coerce"($P5016, "P")
    set $P102, $P5017
.annotate 'line', 1675
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5019 = $P5018."new"()
    set $P103, $P5019
.annotate 'line', 1676
    $P103."push_pirop"("setattribute", $P101, "\"payload\"", $P102)
.annotate 'line', 1677
    $P5020 = $P102."result"()
    $P103."result"($P5020)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_247_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1680
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$pmc", $P102 
    .lex "$reg", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_170 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
.annotate 'line', 1681
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if600_end1139 
    box $P5006, "The 'getmessage' op expects one child"
    die $P5006
  if600_end1139:
.annotate 'line', 1684
    set fb_tmp_170, _lex_param_1
    repr_defined $I5002, fb_tmp_170
    unless $I5002 goto if601_else1140 
    set $P5007, fb_tmp_170[0]
    set $P5009, $P5007
    goto if601_end1141
  if601_else1140:
    null $P5008
    set $P5009, $P5008
  if601_end1141:
    unless_null $P5009, vivi_6021142
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_6021142:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P101, $P5012
.annotate 'line', 1685
    find_dynamic_lex $P5013, "$*REGALLOC"
    unless_null $P5013, fallback1143
    nqp_get_sc_object $P5015, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5014, $P5015
    set fb_tmp_171, $P5014
    repr_defined $I5003, fb_tmp_171
    unless $I5003 goto if603_else1144 
    set $P5016, fb_tmp_171["$REGALLOC"]
    set $P5018, $P5016
    goto if603_end1145
  if603_else1144:
    null $P5017
    set $P5018, $P5017
  if603_end1145:
    unless_null $P5018, vivi_6041146
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5018, $P5019
  vivi_6041146:
    unless_null $P5018, vivi_6051147
    die "Contextual $*REGALLOC not found"
    box $P5020, "Contextual $*REGALLOC not found"
    set $P5018, $P5020
  vivi_6051147:
    set $P5013, $P5018
  fallback1143:
    $P5021 = $P5013."fresh_p"()
    set $P102, $P5021
.annotate 'line', 1686
    find_dynamic_lex $P5022, "$*REGALLOC"
    unless_null $P5022, fallback1148
    nqp_get_sc_object $P5024, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5023, $P5024
    set fb_tmp_172, $P5023
    repr_defined $I5004, fb_tmp_172
    unless $I5004 goto if606_else1149 
    set $P5025, fb_tmp_172["$REGALLOC"]
    set $P5027, $P5025
    goto if606_end1150
  if606_else1149:
    null $P5026
    set $P5027, $P5026
  if606_end1150:
    unless_null $P5027, vivi_6071151
    nqp_get_sc_object $P5028, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5027, $P5028
  vivi_6071151:
    unless_null $P5027, vivi_6081152
    die "Contextual $*REGALLOC not found"
    box $P5029, "Contextual $*REGALLOC not found"
    set $P5027, $P5029
  vivi_6081152:
    set $P5022, $P5027
  fallback1148:
    $P5030 = $P5022."fresh_s"()
    set $P103, $P5030
.annotate 'line', 1687
    nqp_get_sc_object $P5031, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5032 = $P5031."new"()
    set $P104, $P5032
.annotate 'line', 1688
    $P104."push"($P101)
.annotate 'line', 1689
    $P5033 = $P101."result"()
    $P104."push_pirop"("getattribute", $P102, $P5033, "\"message\"")
.annotate 'line', 1690
    $P104."push_pirop"("set", $P103, $P102)
.annotate 'line', 1691
    $P104."result"($P103)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_248_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1694
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$message", $P102 
    .lex "$pmc", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_173 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
.annotate 'line', 1695
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if609_end1154 
    box $P5006, "The 'setmessage' op expects two children"
    die $P5006
  if609_end1154:
.annotate 'line', 1698
    set fb_tmp_173, _lex_param_1
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if610_else1155 
    set $P5007, fb_tmp_173[0]
    set $P5009, $P5007
    goto if610_end1156
  if610_else1155:
    null $P5008
    set $P5009, $P5008
  if610_end1156:
    unless_null $P5009, vivi_6111157
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_6111157:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P101, $P5012
.annotate 'line', 1699
    set fb_tmp_174, _lex_param_1
    repr_defined $I5003, fb_tmp_174
    unless $I5003 goto if612_else1158 
    set $P5013, fb_tmp_174[1]
    set $P5015, $P5013
    goto if612_end1159
  if612_else1158:
    null $P5014
    set $P5015, $P5014
  if612_end1159:
    unless_null $P5015, vivi_6131160
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_6131160:
    $P5017 = _lex_param_0."as_post"($P5015)
    $P5018 = _lex_param_0."coerce"($P5017, "S")
    set $P102, $P5018
.annotate 'line', 1700
    find_dynamic_lex $P5019, "$*REGALLOC"
    unless_null $P5019, fallback1161
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set fb_tmp_175, $P5020
    repr_defined $I5004, fb_tmp_175
    unless $I5004 goto if614_else1162 
    set $P5022, fb_tmp_175["$REGALLOC"]
    set $P5024, $P5022
    goto if614_end1163
  if614_else1162:
    null $P5023
    set $P5024, $P5023
  if614_end1163:
    unless_null $P5024, vivi_6151164
    nqp_get_sc_object $P5025, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5024, $P5025
  vivi_6151164:
    unless_null $P5024, vivi_6161165
    die "Contextual $*REGALLOC not found"
    box $P5026, "Contextual $*REGALLOC not found"
    set $P5024, $P5026
  vivi_6161165:
    set $P5019, $P5024
  fallback1161:
    $P5027 = $P5019."fresh_p"()
    set $P103, $P5027
.annotate 'line', 1701
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5029 = $P5028."new"()
    set $P104, $P5029
.annotate 'line', 1702
    $P104."push"($P101)
.annotate 'line', 1703
    $P104."push"($P102)
.annotate 'line', 1704
    $P104."push_pirop"("box", $P103, $P102)
.annotate 'line', 1705
    $P104."push_pirop"("setattribute", $P101, "\"message\"", $P103)
.annotate 'line', 1706
    $P5030 = $P102."result"()
    $P104."result"($P5030)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_249_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1709
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_176 
.annotate 'line', 1710
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if617_end1167 
    box $P5002, "The 'backtracestrings' op expects one child"
    die $P5002
  if617_end1167:
.annotate 'line', 1713
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_176, _lex_param_1
    repr_defined $I5002, fb_tmp_176
    unless $I5002 goto if618_else1168 
    set $P5004, fb_tmp_176[0]
    set $P5006, $P5004
    goto if618_end1169
  if618_else1168:
    null $P5005
    set $P5006, $P5005
  if618_end1169:
    unless_null $P5006, vivi_6191170
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6191170:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "backtrace_strings" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_250_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1718
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_177 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1719
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if620_end1172 
    box $P5004, "The 'newexception' op expects no children"
    die $P5004
  if620_end1172:
.annotate 'line', 1722
    find_dynamic_lex $P5005, "$*REGALLOC"
    unless_null $P5005, fallback1173
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set fb_tmp_177, $P5006
    repr_defined $I5002, fb_tmp_177
    unless $I5002 goto if621_else1174 
    set $P5008, fb_tmp_177["$REGALLOC"]
    set $P5010, $P5008
    goto if621_end1175
  if621_else1174:
    null $P5009
    set $P5010, $P5009
  if621_end1175:
    unless_null $P5010, vivi_6221176
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6221176:
    unless_null $P5010, vivi_6231177
    die "Contextual $*REGALLOC not found"
    box $P5012, "Contextual $*REGALLOC not found"
    set $P5010, $P5012
  vivi_6231177:
    set $P5005, $P5010
  fallback1173:
    $P5013 = $P5005."fresh_p"()
    set $P101, $P5013
.annotate 'line', 1723
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5015 = $P5014."new"()
    set $P102, $P5015
.annotate 'line', 1724
    $P102."push_pirop"("new", $P101, "[\"Exception\"]")
.annotate 'line', 1725
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_251_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1732
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_178 
.annotate 'line', 1733
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if624_end1179 
    box $P5002, "The 'resume' op expects 1 child"
    die $P5002
  if624_end1179:
.annotate 'line', 1736
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1738
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_178, _lex_param_1
    repr_defined $I5002, fb_tmp_178
    unless $I5002 goto if625_else1180 
    set $P5005, fb_tmp_178[0]
    set $P5007, $P5005
    goto if625_end1181
  if625_else1180:
    null $P5006
    set $P5007, $P5006
  if625_end1181:
    unless_null $P5007, vivi_6261182
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_6261182:
.annotate 'line', 1741
    nqp_get_sc_object $P5009, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5010 = $P5009."new"("resume" :named("value"))
    $P5011 = $P5004."new"($P5007, $P5010, "atkey" :named("op"))
    $P5012 = $P5003."new"($P5011, "call" :named("op"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_253_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1751
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5008 = 'cuid_252_1368096764.976' 
    capture_lex $P5008 
    .lex "$name", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1752
    $P5002 = _lex_param_1."name"()
    set $P101, $P5002
    find_lex $P5003, "%control_map"
    set $S5001, $P101
    exists $I5001, $P5003[$S5001]
    unless $I5001 goto if627_else1183 
    .const 'Sub' $P5004 = 'cuid_252_1368096764.976' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5007, $P5005
    goto if627_end1184
  if627_else1183:
.annotate 'line', 1758
    set $S5004, $P101
    concat $S5003, "Unknown control exception type '", $S5004
    concat $S5002, $S5003, "'"
    box $P5006, $S5002
    die $P5006
    set $P5007, $P5006
  if627_end1184:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_252_1368096764.976") :anon :lex :outer("cuid_253_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1753
    .lex "$ops", $P101 
    .local pmc fb_tmp_179 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 1754
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5003 = $P5002."new"("0" :named("result"))
    set $P101, $P5003
.annotate 'line', 1755
    find_lex $P5004, "%control_map"
    set fb_tmp_179, $P5004
    repr_defined $I5001, fb_tmp_179
    unless $I5001 goto if628_else1185 
    find_lex $P5006, "$name"
    set $S5001, $P5006
    set $P5005, fb_tmp_179[$S5001]
    set $P5008, $P5005
    goto if628_end1186
  if628_else1185:
    null $P5007
    set $P5008, $P5007
  if628_end1186:
    unless_null $P5008, vivi_6291187
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_6291187:
    $P101."push_pirop"("die", "0", $P5008)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_255_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1764
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_254_1368096764.976' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_256_1368096764.976' 
    capture_lex $P5008 
    .lex "$_", _lex_param_0 
.annotate 'line', 1765
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5003 = 'cuid_254_1368096764.976' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    $P5001."add_hll_box"("nqp", _lex_param_0, $P5002)
.annotate 'line', 1773
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .const 'Sub' $P5006 = 'cuid_256_1368096764.976' 
    capture_lex $P5006
    newclosure $P5005, $P5006
    $P5007 = $P5004."add_hll_unbox"("nqp", _lex_param_0, $P5005)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_254_1368096764.976") :anon :lex :outer("cuid_255_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1765
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_180 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1766
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1188
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_180, $P5004
    repr_defined $I5001, fb_tmp_180
    unless $I5001 goto if630_else1189 
    set $P5006, fb_tmp_180["$REGALLOC"]
    set $P5008, $P5006
    goto if630_end1190
  if630_else1189:
    null $P5007
    set $P5008, $P5007
  if630_end1190:
    unless_null $P5008, vivi_6311191
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_6311191:
    unless_null $P5008, vivi_6321192
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6321192:
    set $P5003, $P5008
  fallback1188:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1767
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1768
    $P102."push"(_lex_param_1)
.annotate 'line', 1769
    $P102."push_pirop"("box", $P101, _lex_param_1)
.annotate 'line', 1770
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_256_1368096764.976") :anon :lex :outer("cuid_255_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1773
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_181 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 1774
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback1193
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_181, $P5005
    repr_defined $I5001, fb_tmp_181
    unless $I5001 goto if633_else1194 
    set $P5007, fb_tmp_181["$REGALLOC"]
    set $P5009, $P5007
    goto if633_end1195
  if633_else1194:
    null $P5008
    set $P5009, $P5008
  if633_end1195:
    unless_null $P5009, vivi_6341196
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_6341196:
    unless_null $P5009, vivi_6351197
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_6351197:
    set $P5004, $P5009
  fallback1193:
    find_lex $P5003, "$_"
    set $S5002, $P5003
    concat $S5001, "fresh_", $S5002
    $P5012 = $P5004.$S5001()
    set $P101, $P5012
.annotate 'line', 1775
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1776
    $P102."push"(_lex_param_1)
.annotate 'line', 1777
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1778
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_257_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1794
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1795
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if636_end1202 
    box $P5002, "The 'getstdin' op expects no operands"
    die $P5002
  if636_end1202:
.annotate 'line', 1798
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1800
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stdin_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_258_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1803
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1804
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if637_end1204 
    box $P5002, "The 'getstdout' op expects no operands"
    die $P5002
  if637_end1204:
.annotate 'line', 1807
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1809
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stdout_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_259_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1812
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1813
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if638_end1206 
    box $P5002, "The 'getstderr' op expects no operands"
    die $P5002
  if638_end1206:
.annotate 'line', 1816
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1818
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stderr_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_260_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1821
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_183 
.annotate 'line', 1822
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if639_end1208 
    box $P5002, "The 'setencoding' op expects two operands"
    die $P5002
  if639_end1208:
.annotate 'line', 1825
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_182, _lex_param_1
    repr_defined $I5002, fb_tmp_182
    unless $I5002 goto if640_else1209 
    set $P5004, fb_tmp_182[0]
    set $P5006, $P5004
    goto if640_end1210
  if640_else1209:
    null $P5005
    set $P5006, $P5005
  if640_end1210:
    unless_null $P5006, vivi_6411211
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6411211:
    set fb_tmp_183, _lex_param_1
    repr_defined $I5003, fb_tmp_183
    unless $I5003 goto if642_else1212 
    set $P5008, fb_tmp_183[1]
    set $P5010, $P5008
    goto if642_end1213
  if642_else1212:
    null $P5009
    set $P5010, $P5009
  if642_end1213:
    unless_null $P5010, vivi_6431214
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6431214:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "encoding" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_261_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1830
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_184 
.annotate 'line', 1831
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if644_end1216 
    box $P5002, "The 'tellfh' op expects one operand"
    die $P5002
  if644_end1216:
.annotate 'line', 1834
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_184, _lex_param_1
    repr_defined $I5002, fb_tmp_184
    unless $I5002 goto if645_else1217 
    set $P5004, fb_tmp_184[0]
    set $P5006, $P5004
    goto if645_end1218
  if645_else1217:
    null $P5005
    set $P5006, $P5005
  if645_end1218:
    unless_null $P5006, vivi_6461219
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6461219:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "tell" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_262_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1839
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_185 
    .local pmc fb_tmp_186 
.annotate 'line', 1840
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if647_end1221 
    box $P5002, "The 'printfh' op expects two operands"
    die $P5002
  if647_end1221:
.annotate 'line', 1843
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_185, _lex_param_1
    repr_defined $I5002, fb_tmp_185
    unless $I5002 goto if648_else1222 
    set $P5004, fb_tmp_185[0]
    set $P5006, $P5004
    goto if648_end1223
  if648_else1222:
    null $P5005
    set $P5006, $P5005
  if648_end1223:
    unless_null $P5006, vivi_6491224
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6491224:
    set fb_tmp_186, _lex_param_1
    repr_defined $I5003, fb_tmp_186
    unless $I5003 goto if650_else1225 
    set $P5008, fb_tmp_186[1]
    set $P5010, $P5008
    goto if650_end1226
  if650_else1225:
    null $P5009
    set $P5010, $P5009
  if650_end1226:
    unless_null $P5010, vivi_6511227
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6511227:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "print" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_263_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1848
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
.annotate 'line', 1849
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if652_end1229 
    box $P5002, "The 'printfh' op expects two operands"
    die $P5002
  if652_end1229:
.annotate 'line', 1852
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_187, _lex_param_1
    repr_defined $I5002, fb_tmp_187
    unless $I5002 goto if653_else1230 
    set $P5004, fb_tmp_187[0]
    set $P5006, $P5004
    goto if653_end1231
  if653_else1230:
    null $P5005
    set $P5006, $P5005
  if653_end1231:
    unless_null $P5006, vivi_6541232
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6541232:
    set fb_tmp_188, _lex_param_1
    repr_defined $I5003, fb_tmp_188
    unless $I5003 goto if655_else1233 
    set $P5008, fb_tmp_188[1]
    set $P5010, $P5008
    goto if655_end1234
  if655_else1233:
    null $P5009
    set $P5010, $P5009
  if655_end1234:
    unless_null $P5010, vivi_6561235
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6561235:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "print" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_264_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1857
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_189 
.annotate 'line', 1858
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if657_end1237 
    box $P5002, "The 'readlinefh' op expects one operand"
    die $P5002
  if657_end1237:
.annotate 'line', 1861
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_189, _lex_param_1
    repr_defined $I5002, fb_tmp_189
    unless $I5002 goto if658_else1238 
    set $P5004, fb_tmp_189[0]
    set $P5006, $P5004
    goto if658_end1239
  if658_else1238:
    null $P5005
    set $P5006, $P5005
  if658_end1239:
    unless_null $P5006, vivi_6591240
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6591240:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "readline" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_265_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1866
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_190 
    .local pmc fb_tmp_191 
.annotate 'line', 1867
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if660_end1242 
    box $P5002, "The 'readlineintfh' op expects two operands"
    die $P5002
  if660_end1242:
.annotate 'line', 1870
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_190, _lex_param_1
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if661_else1243 
    set $P5004, fb_tmp_190[0]
    set $P5006, $P5004
    goto if661_end1244
  if661_else1243:
    null $P5005
    set $P5006, $P5005
  if661_end1244:
    unless_null $P5006, vivi_6621245
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6621245:
    set fb_tmp_191, _lex_param_1
    repr_defined $I5003, fb_tmp_191
    unless $I5003 goto if663_else1246 
    set $P5008, fb_tmp_191[1]
    set $P5010, $P5008
    goto if663_end1247
  if663_else1246:
    null $P5009
    set $P5010, $P5009
  if663_end1247:
    unless_null $P5010, vivi_6641248
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6641248:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "readline_interactive" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_266_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1875
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_192 
.annotate 'line', 1876
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if665_end1250 
    box $P5002, "The 'readallfh' op expects one operand"
    die $P5002
  if665_end1250:
.annotate 'line', 1879
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_192, _lex_param_1
    repr_defined $I5002, fb_tmp_192
    unless $I5002 goto if666_else1251 
    set $P5004, fb_tmp_192[0]
    set $P5006, $P5004
    goto if666_end1252
  if666_else1251:
    null $P5005
    set $P5006, $P5005
  if666_end1252:
    unless_null $P5006, vivi_6671253
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6671253:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "readall" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_267_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1884
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_193 
.annotate 'line', 1885
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if668_end1255 
    box $P5002, "The 'eoffh' op expects one operand"
    die $P5002
  if668_end1255:
.annotate 'line', 1888
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_193, _lex_param_1
    repr_defined $I5002, fb_tmp_193
    unless $I5002 goto if669_else1256 
    set $P5004, fb_tmp_193[0]
    set $P5006, $P5004
    goto if669_end1257
  if669_else1256:
    null $P5005
    set $P5006, $P5005
  if669_end1257:
    unless_null $P5006, vivi_6701258
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6701258:
    $P5008 = $P5003."new"($P5006, "isfalse" :named("op"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_268_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1890
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_194 
.annotate 'line', 1891
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if671_end1260 
    box $P5002, "The 'closefh' op expects one operand"
    die $P5002
  if671_end1260:
.annotate 'line', 1894
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_194, _lex_param_1
    repr_defined $I5002, fb_tmp_194
    unless $I5002 goto if672_else1261 
    set $P5004, fb_tmp_194[0]
    set $P5006, $P5004
    goto if672_end1262
  if672_else1261:
    null $P5005
    set $P5006, $P5005
  if672_end1262:
    unless_null $P5006, vivi_6731263
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_6731263:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "close" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_269_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1900
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_195 
    .local pmc fb_tmp_196 
.annotate 'line', 1901
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if674_end1265 
    box $P5002, "The 'chmod' op expects two operands"
    die $P5002
  if674_end1265:
.annotate 'line', 1904
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1907
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1908
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_195, _lex_param_1
    repr_defined $I5002, fb_tmp_195
    unless $I5002 goto if675_else1266 
    set $P5008, fb_tmp_195[0]
    set $P5010, $P5008
    goto if675_end1267
  if675_else1266:
    null $P5009
    set $P5010, $P5009
  if675_end1267:
    unless_null $P5010, vivi_6761268
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6761268:
    set fb_tmp_196, _lex_param_1
    repr_defined $I5003, fb_tmp_196
    unless $I5003 goto if677_else1269 
    set $P5012, fb_tmp_196[1]
    set $P5014, $P5012
    goto if677_end1270
  if677_else1269:
    null $P5013
    set $P5014, $P5013
  if677_end1270:
    unless_null $P5014, vivi_6781271
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_6781271:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "chmod" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_270_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1912
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_197 
.annotate 'line', 1913
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if679_end1273 
    box $P5002, "The 'unlink' op expects one operand"
    die $P5002
  if679_end1273:
.annotate 'line', 1916
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1919
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1920
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_197, _lex_param_1
    repr_defined $I5002, fb_tmp_197
    unless $I5002 goto if680_else1274 
    set $P5008, fb_tmp_197[0]
    set $P5010, $P5008
    goto if680_end1275
  if680_else1274:
    null $P5009
    set $P5010, $P5009
  if680_end1275:
    unless_null $P5010, vivi_6811276
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6811276:
    $P5012 = $P5003."new"($P5007, $P5010, "callmethod" :named("op"), "unlink" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_271_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1923
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_198 
.annotate 'line', 1924
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if682_end1278 
    box $P5002, "The 'rmdir' op expects one operand"
    die $P5002
  if682_end1278:
.annotate 'line', 1927
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1930
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1931
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_198, _lex_param_1
    repr_defined $I5002, fb_tmp_198
    unless $I5002 goto if683_else1279 
    set $P5008, fb_tmp_198[0]
    set $P5010, $P5008
    goto if683_end1280
  if683_else1279:
    null $P5009
    set $P5010, $P5009
  if683_end1280:
    unless_null $P5010, vivi_6841281
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6841281:
    $P5012 = $P5003."new"($P5007, $P5010, "callmethod" :named("op"), "rmdir" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_272_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1934
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1935
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if685_end1283 
    box $P5002, "The 'cwd' op expects no operands"
    die $P5002
  if685_end1283:
.annotate 'line', 1938
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1941
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1942
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    $P5008 = $P5003."new"($P5007, "callmethod" :named("op"), "cwd" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_273_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1944
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_199 
.annotate 'line', 1945
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if686_end1285 
    box $P5002, "The 'chdir' op expects one operand"
    die $P5002
  if686_end1285:
.annotate 'line', 1948
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1951
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1952
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_199, _lex_param_1
    repr_defined $I5002, fb_tmp_199
    unless $I5002 goto if687_else1286 
    set $P5008, fb_tmp_199[0]
    set $P5010, $P5008
    goto if687_end1287
  if687_else1286:
    null $P5009
    set $P5010, $P5009
  if687_end1287:
    unless_null $P5010, vivi_6881288
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6881288:
    $P5012 = $P5003."new"($P5007, $P5010, "callmethod" :named("op"), "chdir" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_274_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1955
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
.annotate 'line', 1956
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if689_end1290 
    box $P5002, "The 'mkdir' op expects two operands"
    die $P5002
  if689_end1290:
.annotate 'line', 1959
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1962
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1963
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_200, _lex_param_1
    repr_defined $I5002, fb_tmp_200
    unless $I5002 goto if690_else1291 
    set $P5008, fb_tmp_200[0]
    set $P5010, $P5008
    goto if690_end1292
  if690_else1291:
    null $P5009
    set $P5010, $P5009
  if690_end1292:
    unless_null $P5010, vivi_6911293
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6911293:
    set fb_tmp_201, _lex_param_1
    repr_defined $I5003, fb_tmp_201
    unless $I5003 goto if692_else1294 
    set $P5012, fb_tmp_201[1]
    set $P5014, $P5012
    goto if692_end1295
  if692_else1294:
    null $P5013
    set $P5014, $P5013
  if692_end1295:
    unless_null $P5014, vivi_6931296
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_6931296:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "mkdir" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_275_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1967
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_203 
.annotate 'line', 1968
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if694_end1298 
    box $P5002, "The 'rename' op expects two operands"
    die $P5002
  if694_end1298:
.annotate 'line', 1971
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1974
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1975
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_202, _lex_param_1
    repr_defined $I5002, fb_tmp_202
    unless $I5002 goto if695_else1299 
    set $P5008, fb_tmp_202[0]
    set $P5010, $P5008
    goto if695_end1300
  if695_else1299:
    null $P5009
    set $P5010, $P5009
  if695_end1300:
    unless_null $P5010, vivi_6961301
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_6961301:
    set fb_tmp_203, _lex_param_1
    repr_defined $I5003, fb_tmp_203
    unless $I5003 goto if697_else1302 
    set $P5012, fb_tmp_203[1]
    set $P5014, $P5012
    goto if697_end1303
  if697_else1302:
    null $P5013
    set $P5014, $P5013
  if697_end1303:
    unless_null $P5014, vivi_6981304
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_6981304:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "rename" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_276_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1979
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_204 
    .local pmc fb_tmp_205 
.annotate 'line', 1980
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if699_end1306 
    box $P5002, "The 'copy' op expects two operands"
    die $P5002
  if699_end1306:
.annotate 'line', 1983
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1986
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1987
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("File" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_204, _lex_param_1
    repr_defined $I5002, fb_tmp_204
    unless $I5002 goto if700_else1307 
    set $P5008, fb_tmp_204[0]
    set $P5010, $P5008
    goto if700_end1308
  if700_else1307:
    null $P5009
    set $P5010, $P5009
  if700_end1308:
    unless_null $P5010, vivi_7011309
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_7011309:
    set fb_tmp_205, _lex_param_1
    repr_defined $I5003, fb_tmp_205
    unless $I5003 goto if702_else1310 
    set $P5012, fb_tmp_205[1]
    set $P5014, $P5012
    goto if702_end1311
  if702_else1310:
    null $P5013
    set $P5014, $P5013
  if702_end1311:
    unless_null $P5014, vivi_7031312
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_7031312:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "copy" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_277_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1991
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_206 
    .local pmc fb_tmp_207 
.annotate 'line', 1992
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if704_end1314 
    box $P5002, "The 'symlink' op expects two operands"
    die $P5002
  if704_end1314:
.annotate 'line', 1995
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 1998
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 1999
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_206, _lex_param_1
    repr_defined $I5002, fb_tmp_206
    unless $I5002 goto if705_else1315 
    set $P5008, fb_tmp_206[0]
    set $P5010, $P5008
    goto if705_end1316
  if705_else1315:
    null $P5009
    set $P5010, $P5009
  if705_end1316:
    unless_null $P5010, vivi_7061317
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_7061317:
    set fb_tmp_207, _lex_param_1
    repr_defined $I5003, fb_tmp_207
    unless $I5003 goto if707_else1318 
    set $P5012, fb_tmp_207[1]
    set $P5014, $P5012
    goto if707_end1319
  if707_else1318:
    null $P5013
    set $P5014, $P5013
  if707_end1319:
    unless_null $P5014, vivi_7081320
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_7081320:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "symlink" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_278_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2003
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_209 
.annotate 'line', 2004
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if709_end1322 
    box $P5002, "The 'link' op expects two operands"
    die $P5002
  if709_end1322:
.annotate 'line', 2007
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2010
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 2011
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_208, _lex_param_1
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if710_else1323 
    set $P5008, fb_tmp_208[0]
    set $P5010, $P5008
    goto if710_end1324
  if710_else1323:
    null $P5009
    set $P5010, $P5009
  if710_end1324:
    unless_null $P5010, vivi_7111325
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_7111325:
    set fb_tmp_209, _lex_param_1
    repr_defined $I5003, fb_tmp_209
    unless $I5003 goto if712_else1326 
    set $P5012, fb_tmp_209[1]
    set $P5014, $P5012
    goto if712_end1327
  if712_else1326:
    null $P5013
    set $P5014, $P5013
  if712_end1327:
    unless_null $P5014, vivi_7131328
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_7131328:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "link" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_279_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2116
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_210 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if714_end1330 
.annotate 'line', 2117
    box $P5002, "flip requires one operand"
    die $P5002
  if714_end1330:
.annotate 'line', 2120
.annotate 'line', 2121
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 2122
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2124
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
    set fb_tmp_210, _lex_param_1
    repr_defined $I5002, fb_tmp_210
    unless $I5002 goto if715_else1331 
    set $P5006, fb_tmp_210[0]
    set $P5008, $P5006
    goto if715_end1332
  if715_else1331:
    null $P5007
    set $P5008, $P5007
  if715_end1332:
    unless_null $P5008, vivi_7161333
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_7161333:
    $P5010 = $P5005."new"($P5008, "box__PS" :named("pirop"))
    $P5011 = $P5004."new"($P5010, "callmethod" :named("op"), "reverse" :named("name"))
    $P5012 = $P5003."new"($P5011, "set__SP" :named("pirop"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_280_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2132
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2133
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2134
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if717_else1334 
.annotate 'line', 2135
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5004 = $P5003."new"($P101 :flat, "substr2" :named("op"))
    set $P5007, $P5004
    goto if717_end1335
  if717_else1334:
.annotate 'line', 2136
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5006 = $P5005."new"($P101 :flat, "substr3" :named("op"))
    set $P5007, $P5006
  if717_end1335:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_281_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2142
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2143
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2144
    set $N5001, $P101
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if718_else1336 
.annotate 'line', 2145
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5004 = $P5003."new"($P101 :flat, "ordfirst" :named("op"))
    set $P5007, $P5004
    goto if718_end1337
  if718_else1336:
.annotate 'line', 2146
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5006 = $P5005."new"($P101 :flat, "ordat" :named("op"))
    set $P5007, $P5006
  if718_end1337:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_282_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2151
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2152
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2153
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if719_else1338 
.annotate 'line', 2154
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 42
    $P5005 = $P5004."new"(0 :named("value"))
    $P5006 = $P5003."new"($P101 :flat, $P5005, "indexfrom" :named("op"))
    set $P5009, $P5006
    goto if719_end1339
  if719_else1338:
.annotate 'line', 2155
    nqp_get_sc_object $P5007, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5008 = $P5007."new"($P101 :flat, "indexfrom" :named("op"))
    set $P5009, $P5008
  if719_end1339:
    $P5010 = _lex_param_0."as_post"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_283_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2159
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2160
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2161
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if720_else1340 
.annotate 'line', 2162
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5004 = $P5003."new"($P101 :flat, "rindexfromend" :named("op"))
    set $P5007, $P5004
    goto if720_end1341
  if720_else1340:
.annotate 'line', 2163
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5006 = $P5005."new"($P101 :flat, "rindexfrom" :named("op"))
    set $P5007, $P5006
  if720_end1341:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_284_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2166
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$i_reg", $P102 
    .lex "$s_reg", $P103 
    .lex "$ops", $P104 
    .lex "$name", $P105 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
.annotate 'line', 2167
    $P5006 = _lex_param_1."list"()
    set $P101, $P5006
    set $N5001, $P101
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless721_end1343 
    box $P5007, "codepointfromname expects a single child"
    die $P5007
  unless721_end1343:
.annotate 'line', 2169
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback1344
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5009, $P5010
    set fb_tmp_211, $P5009
    repr_defined $I5002, fb_tmp_211
    unless $I5002 goto if722_else1345 
    set $P5011, fb_tmp_211["$REGALLOC"]
    set $P5013, $P5011
    goto if722_end1346
  if722_else1345:
    null $P5012
    set $P5013, $P5012
  if722_end1346:
    unless_null $P5013, vivi_7231347
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_7231347:
    unless_null $P5013, vivi_7241348
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_7241348:
    set $P5008, $P5013
  fallback1344:
    $P5016 = $P5008."fresh_i"()
    set $P102, $P5016
.annotate 'line', 2170
    find_dynamic_lex $P5017, "$*REGALLOC"
    unless_null $P5017, fallback1349
    nqp_get_sc_object $P5019, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5018, $P5019
    set fb_tmp_212, $P5018
    repr_defined $I5003, fb_tmp_212
    unless $I5003 goto if725_else1350 
    set $P5020, fb_tmp_212["$REGALLOC"]
    set $P5022, $P5020
    goto if725_end1351
  if725_else1350:
    null $P5021
    set $P5022, $P5021
  if725_end1351:
    unless_null $P5022, vivi_7261352
    nqp_get_sc_object $P5023, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5022, $P5023
  vivi_7261352:
    unless_null $P5022, vivi_7271353
    die "Contextual $*REGALLOC not found"
    box $P5024, "Contextual $*REGALLOC not found"
    set $P5022, $P5024
  vivi_7271353:
    set $P5017, $P5022
  fallback1349:
    $P5025 = $P5017."fresh_s"()
    set $P103, $P5025
.annotate 'line', 2171
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5027 = $P5026."new"()
    set $P104, $P5027
.annotate 'line', 2172
    set fb_tmp_213, _lex_param_1
    repr_defined $I5004, fb_tmp_213
    unless $I5004 goto if728_else1354 
    set $P5028, fb_tmp_213[0]
    set $P5030, $P5028
    goto if728_end1355
  if728_else1354:
    null $P5029
    set $P5030, $P5029
  if728_end1355:
    unless_null $P5030, vivi_7291356
    nqp_get_sc_object $P5031, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5030, $P5031
  vivi_7291356:
    $P5032 = _lex_param_0."as_post"($P5030)
    $P5033 = _lex_param_0."coerce"($P5032, "S")
    set $P105, $P5033
.annotate 'line', 2173
    $P104."push"($P105)
.annotate 'line', 2174
    $P104."push_pirop"("find_encoding", $P102, "'utf8'")
.annotate 'line', 2175
    $P104."push_pirop"("trans_encoding", $P103, $P105, $P102)
.annotate 'line', 2176
    $P104."push_pirop"("find_codepoint", $P102, $P103)
.annotate 'line', 2177
    $P104."result"($P102)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_285_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2279
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_214 
.annotate 'line', 2280
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_214, _lex_param_1
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if730_else1357 
    set $P5002, fb_tmp_214[0]
    set $P5004, $P5002
    goto if730_end1358
  if730_else1357:
    null $P5003
    set $P5004, $P5003
  if730_end1358:
    unless_null $P5004, vivi_7311359
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_7311359:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "key" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_286_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2282
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_215 
.annotate 'line', 2283
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_215, _lex_param_1
    repr_defined $I5001, fb_tmp_215
    unless $I5001 goto if732_else1360 
    set $P5002, fb_tmp_215[0]
    set $P5004, $P5002
    goto if732_end1361
  if732_else1360:
    null $P5003
    set $P5004, $P5003
  if732_end1361:
    unless_null $P5004, vivi_7331362
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_7331362:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "value" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_287_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2373
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_216 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if734_end1364 
.annotate 'line', 2374
    box $P5002, "getcodecuid requires one operand"
    die $P5002
  if734_end1364:
.annotate 'line', 2377
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_216, _lex_param_1
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if735_else1365 
    set $P5004, fb_tmp_216[0]
    set $P5006, $P5004
    goto if735_end1366
  if735_else1365:
    null $P5005
    set $P5006, $P5005
  if735_end1366:
    unless_null $P5006, vivi_7361367
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_7361367:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "get_subid" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_288_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2382
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if737_end1369 
.annotate 'line', 2383
    box $P5002, "forceouterctx requires two operands"
    die $P5002
  if737_end1369:
.annotate 'line', 2386
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_217, _lex_param_1
    repr_defined $I5002, fb_tmp_217
    unless $I5002 goto if738_else1370 
    set $P5004, fb_tmp_217[0]
    set $P5006, $P5004
    goto if738_end1371
  if738_else1370:
    null $P5005
    set $P5006, $P5005
  if738_end1371:
    unless_null $P5006, vivi_7391372
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_7391372:
    set fb_tmp_218, _lex_param_1
    repr_defined $I5003, fb_tmp_218
    unless $I5003 goto if740_else1373 
    set $P5008, fb_tmp_218[1]
    set $P5010, $P5008
    goto if740_end1374
  if740_else1373:
    null $P5009
    set $P5010, $P5009
  if740_end1374:
    unless_null $P5010, vivi_7411375
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_7411375:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "set_outer_ctx" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_289_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2393
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$code", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_219 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if742_end1377 
.annotate 'line', 2394
    box $P5004, "markcodestatic requires one operand"
    die $P5004
  if742_end1377:
.annotate 'line', 2397
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5006 = $P5005."new"()
    set $P101, $P5006
.annotate 'line', 2398
    set fb_tmp_219, _lex_param_1
    repr_defined $I5002, fb_tmp_219
    unless $I5002 goto if743_else1378 
    set $P5007, fb_tmp_219[0]
    set $P5009, $P5007
    goto if743_end1379
  if743_else1378:
    null $P5008
    set $P5009, $P5008
  if743_end1379:
    unless_null $P5009, vivi_7441380
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_7441380:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 2399
    $P101."push"($P102)
.annotate 'line', 2400
    $P101."push_pirop"("setprop", $P102, "'STATIC_CODE_REF'", $P102)
.annotate 'line', 2401
    $P101."result"($P102)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_290_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2404
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$code", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_220 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if745_end1382 
.annotate 'line', 2405
    box $P5004, "markcodestatic requires one operand"
    die $P5004
  if745_end1382:
.annotate 'line', 2408
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5006 = $P5005."new"()
    set $P101, $P5006
.annotate 'line', 2409
    set fb_tmp_220, _lex_param_1
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if746_else1383 
    set $P5007, fb_tmp_220[0]
    set $P5009, $P5007
    goto if746_end1384
  if746_else1383:
    null $P5008
    set $P5009, $P5008
  if746_end1384:
    unless_null $P5009, vivi_7471385
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_7471385:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 2410
    $P101."push"($P102)
.annotate 'line', 2411
    $P101."push_pirop"("setprop", $P102, "'COMPILER_STUB'", $P102)
.annotate 'line', 2412
    $P101."result"($P102)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_291_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2415
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_221 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if748_end1387 
.annotate 'line', 2416
    box $P5002, "getcodecuid requires one operand"
    die $P5002
  if748_end1387:
.annotate 'line', 2419
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2421
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_221, _lex_param_1
    repr_defined $I5002, fb_tmp_221
    unless $I5002 goto if749_else1388 
    set $P5005, fb_tmp_221[0]
    set $P5007, $P5005
    goto if749_end1389
  if749_else1388:
    null $P5006
    set $P5007, $P5006
  if749_end1389:
    unless_null $P5007, vivi_7501390
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_7501390:
    $P5009 = $P5004."new"($P5007, "callmethod" :named("op"), "get_lexinfo" :named("name"))
    $P5010 = $P5003."new"($P5009, "callmethod" :named("op"), "get_static_code" :named("name"))
    $P5011 = _lex_param_0."as_post"($P5010)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_292_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_222 
.annotate 'line', 2437
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 4
    set fb_tmp_222, _lex_param_1
    repr_defined $I5001, fb_tmp_222
    unless $I5001 goto if751_else1391 
    set $P5003, fb_tmp_222[0]
    set $P5005, $P5003
    goto if751_end1392
  if751_else1391:
    null $P5004
    set $P5005, $P5004
  if751_end1392:
    unless_null $P5005, vivi_7521393
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_7521393:
    $P5007 = $P5001."new"($P5005, "callmethod" :named("op"), "handle" :named("name"), $P5002 :named("returns"))
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_293_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2442
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_223 
.annotate 'line', 2443
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 4
    set fb_tmp_223, _lex_param_1
    repr_defined $I5001, fb_tmp_223
    unless $I5001 goto if753_else1394 
    set $P5003, fb_tmp_223[0]
    set $P5005, $P5003
    goto if753_end1395
  if753_else1394:
    null $P5004
    set $P5005, $P5004
  if753_end1395:
    unless_null $P5005, vivi_7541396
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_7541396:
    $P5007 = $P5001."new"($P5005, "callmethod" :named("op"), "description" :named("name"), $P5002 :named("returns"))
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_294_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2448
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
.annotate 'line', 2449
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 2
    set fb_tmp_224, _lex_param_1
    repr_defined $I5001, fb_tmp_224
    unless $I5001 goto if755_else1397 
    set $P5003, fb_tmp_224[0]
    set $P5005, $P5003
    goto if755_end1398
  if755_else1397:
    null $P5004
    set $P5005, $P5004
  if755_end1398:
    unless_null $P5005, vivi_7561399
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_7561399:
    set fb_tmp_225, _lex_param_1
    repr_defined $I5002, fb_tmp_225
    unless $I5002 goto if757_else1400 
    set $P5007, fb_tmp_225[1]
    set $P5009, $P5007
    goto if757_end1401
  if757_else1400:
    null $P5008
    set $P5009, $P5008
  if757_end1401:
    unless_null $P5009, vivi_7581402
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_7581402:
    $P5011 = $P5001."new"($P5005, $P5009, "callmethod" :named("op"), "slot_index_for" :named("name"), $P5002 :named("returns"))
    $P5012 = _lex_param_0."as_post"($P5011)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_295_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2454
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
.annotate 'line', 2455
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_226, _lex_param_1
    repr_defined $I5001, fb_tmp_226
    unless $I5001 goto if759_else1403 
    set $P5002, fb_tmp_226[0]
    set $P5004, $P5002
    goto if759_end1404
  if759_else1403:
    null $P5003
    set $P5004, $P5003
  if759_end1404:
    unless_null $P5004, vivi_7601405
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_7601405:
    set fb_tmp_227, _lex_param_1
    repr_defined $I5002, fb_tmp_227
    unless $I5002 goto if761_else1406 
    set $P5006, fb_tmp_227[1]
    set $P5008, $P5006
    goto if761_end1407
  if761_else1406:
    null $P5007
    set $P5008, $P5007
  if761_end1407:
    unless_null $P5008, vivi_7621408
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_7621408:
    $P5010 = $P5001."new"($P5004, $P5008, "callmethod" :named("op"), "set_description" :named("name"))
    $P5011 = _lex_param_0."as_post"($P5010)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_296_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2460
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_228 
.annotate 'line', 2461
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_228, _lex_param_1
    repr_defined $I5001, fb_tmp_228
    unless $I5001 goto if763_else1409 
    set $P5002, fb_tmp_228[0]
    set $P5004, $P5002
    goto if763_end1410
  if763_else1409:
    null $P5003
    set $P5004, $P5003
  if763_end1410:
    unless_null $P5004, vivi_7641411
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_7641411:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "elems" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_297_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2471
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2472
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2473
    $P101."push_pirop"("nqp_disable_sc_write_barrier")
.annotate 'line', 2474
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_298_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2477
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2478
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2479
    $P101."push_pirop"("nqp_enable_sc_write_barrier")
.annotate 'line', 2480
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_299_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2484
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2485
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2486
    $P101."push_pirop"("nqp_pop_compiling_sc")
.annotate 'line', 2487
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_300_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2497
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if765_end1413 
.annotate 'line', 2498
    box $P5002, "gethllsym requires two operands"
    die $P5002
  if765_end1413:
.annotate 'line', 2501
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 2503
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_229, _lex_param_1
    repr_defined $I5002, fb_tmp_229
    unless $I5002 goto if766_else1414 
    set $P5005, fb_tmp_229[0]
    set $P5007, $P5005
    goto if766_end1415
  if766_else1414:
    null $P5006
    set $P5007, $P5006
  if766_end1415:
    unless_null $P5007, vivi_7671416
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_7671416:
    $P5009 = $P5004."new"($P5007, "list_s" :named("op"))
    set fb_tmp_230, _lex_param_1
    repr_defined $I5003, fb_tmp_230
    unless $I5003 goto if768_else1417 
    set $P5010, fb_tmp_230[1]
    set $P5012, $P5010
    goto if768_end1418
  if768_else1417:
    null $P5011
    set $P5012, $P5011
  if768_end1418:
    unless_null $P5012, vivi_7691419
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_7691419:
    $P5014 = $P5003."new"($P5009, $P5012, "get_root_global__PPs" :named("pirop"))
    $P5015 = _lex_param_0."as_post"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_301_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2507
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 3
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if770_end1421 
.annotate 'line', 2508
    box $P5002, "bindhllsym requires three operands"
    die $P5002
  if770_end1421:
.annotate 'line', 2511
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 2513
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    set fb_tmp_231, _lex_param_1
    repr_defined $I5002, fb_tmp_231
    unless $I5002 goto if771_else1422 
    set $P5005, fb_tmp_231[0]
    set $P5007, $P5005
    goto if771_end1423
  if771_else1422:
    null $P5006
    set $P5007, $P5006
  if771_end1423:
    unless_null $P5007, vivi_7721424
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_7721424:
    $P5009 = $P5004."new"($P5007, "list_s" :named("op"))
    set fb_tmp_232, _lex_param_1
    repr_defined $I5003, fb_tmp_232
    unless $I5003 goto if773_else1425 
    set $P5010, fb_tmp_232[1]
    set $P5012, $P5010
    goto if773_end1426
  if773_else1425:
    null $P5011
    set $P5012, $P5011
  if773_end1426:
    unless_null $P5012, vivi_7741427
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_7741427:
    set fb_tmp_233, _lex_param_1
    repr_defined $I5004, fb_tmp_233
    unless $I5004 goto if775_else1428 
    set $P5014, fb_tmp_233[2]
    set $P5016, $P5014
    goto if775_end1429
  if775_else1428:
    null $P5015
    set $P5016, $P5015
  if775_end1429:
    unless_null $P5016, vivi_7761430
    nqp_get_sc_object $P5017, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5016, $P5017
  vivi_7761430:
    $P5018 = $P5003."new"($P5009, $P5012, $P5016, "set_root_global__2PsP" :named("pirop"))
    $P5019 = _lex_param_0."as_post"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_302_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2533
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if777_end1432 
.annotate 'line', 2534
    box $P5002, "getenvhash requires three operands"
    die $P5002
  if777_end1432:
.annotate 'line', 2537
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
.annotate 'line', 2539
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5005 = $P5004."new"("Env" :named("value"))
    $P5006 = $P5003."new"($P5005, "new__Ps" :named("pirop"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_303_1368096764.976") :anon :lex :outer("cuid_144_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2544
    .const 'Sub' $P5094 = 'cuid_304_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_305_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_307_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_308_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_309_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_87_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_88_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_89_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_90_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_91_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_92_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_93_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_94_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_95_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_96_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_97_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_98_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_99_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_100_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_101_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_102_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_103_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_104_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_105_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_106_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_107_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_108_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_109_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_110_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_111_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_112_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_113_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_114_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_115_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_116_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_117_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_118_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_119_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_120_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_121_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_122_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_123_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_124_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_125_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_126_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_127_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_128_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_129_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_130_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_131_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_132_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_133_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_134_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_135_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_136_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_137_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_138_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_139_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_140_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_141_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_142_1368096764.976' 
    capture_lex $P5094 
    .const 'Sub' $P5094 = 'cuid_143_1368096764.976' 
    capture_lex $P5094 
    .lex "RegAlloc", $P101 
    .lex "BlockInfo", $P102 
    .lex "@prim_to_reg", $P103 
    .lex "&type_to_register_type", $P104 
    .lex "@prim_to_lookup_name", $P105 
    .lex "&type_to_lookup_name", $P106 
    .lex "%hll_force_return_boxing", $P107 
    .lex "&want", $P108 
    .lex "%cclass_code", $P109 
    .lex "$?PACKAGE", $P110 
    .lex "$?CLASS", $P111 
    .local pmc fb_tmp_248 
    new $P5001, 'ResizablePMCArray'
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_304_1368096764.976' 
    capture_lex $P5002
    set $P104, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_305_1368096764.976' 
    capture_lex $P5004
    set $P106, $P5004
    new $P5005, 'Hash'
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_307_1368096764.976' 
    capture_lex $P5006
    set $P108, $P5006
    new $P5007, 'Hash'
    set $P109, $P5007
.annotate 'line', 2732
    get_who $P5008, $P110
    box $P5009, 10
    set $P5008["$serno"], $P5009

            $P0 = get_root_global ['parrot';'QAST'], 'Compiler'
            unless null $P0 goto have_qastcomp
            $P0 = find_lex '$?CLASS'
            set_root_global ['parrot';'QAST'], 'Compiler', $P0
            compreg 'QAST', $P0
          have_qastcomp:
        
.annotate 'line', 3886
    box $P5010, ".CCLASS_ANY"
    set $P109["."], $P5010
    box $P5011, ".CCLASS_NUMERIC"
    set $P109["d"], $P5011
    box $P5012, ".CCLASS_WHITESPACE"
    set $P109["s"], $P5012
    box $P5013, ".CCLASS_WORD"
    set $P109["w"], $P5013
    box $P5014, ".CCLASS_NEWLINE"
    set $P109["n"], $P5014
.annotate 'line', 2544
    .const 'Sub' $P5015 = 'cuid_308_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
    .const 'Sub' $P5017 = 'cuid_309_1368096764.976' 
    capture_lex $P5017
    $P5018 = $P5017()
    .const 'Sub' $P5027 = 'cuid_87_1368096764.976' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_88_1368096764.976' 
    capture_lex $P5028
    new $P5029, 'ResizablePMCArray'
    box $P5030, "P"
    push $P5029, $P5030
    box $P5031, "I"
    push $P5029, $P5031
    box $P5032, "N"
    push $P5029, $P5032
    box $P5033, "S"
    push $P5029, $P5033
    set $P103, $P5029
    .const 'Sub' $P5034 = 'cuid_89_1368096764.976' 
    capture_lex $P5034
    new $P5035, 'ResizablePMCArray'
    box $P5036, "obj"
    push $P5035, $P5036
    box $P5037, "int"
    push $P5035, $P5037
    box $P5038, "num"
    push $P5035, $P5038
    box $P5039, "str"
    push $P5035, $P5039
    set $P105, $P5035
    .const 'Sub' $P5040 = 'cuid_90_1368096764.976' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_91_1368096764.976' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_92_1368096764.976' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_93_1368096764.976' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_94_1368096764.976' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_95_1368096764.976' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_96_1368096764.976' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_97_1368096764.976' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_98_1368096764.976' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_99_1368096764.976' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_100_1368096764.976' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_101_1368096764.976' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_102_1368096764.976' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_103_1368096764.976' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_104_1368096764.976' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_105_1368096764.976' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_106_1368096764.976' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_107_1368096764.976' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_108_1368096764.976' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_109_1368096764.976' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_110_1368096764.976' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_111_1368096764.976' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_112_1368096764.976' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_113_1368096764.976' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_114_1368096764.976' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_115_1368096764.976' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_116_1368096764.976' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_117_1368096764.976' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_118_1368096764.976' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_119_1368096764.976' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_120_1368096764.976' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_121_1368096764.976' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_122_1368096764.976' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_123_1368096764.976' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_124_1368096764.976' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_125_1368096764.976' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_126_1368096764.976' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_127_1368096764.976' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_128_1368096764.976' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_129_1368096764.976' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_130_1368096764.976' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_131_1368096764.976' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_132_1368096764.976' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_133_1368096764.976' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_134_1368096764.976' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_135_1368096764.976' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_136_1368096764.976' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_137_1368096764.976' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_138_1368096764.976' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_139_1368096764.976' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_140_1368096764.976' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_141_1368096764.976' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_142_1368096764.976' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_143_1368096764.976' 
    capture_lex $P5093
    .return ($P5093) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_register_type" :subid("cuid_304_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2769
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_234 
    find_lex $P5001, "@prim_to_reg"
    set fb_tmp_234, $P5001
    repr_defined $I5001, fb_tmp_234
    unless $I5001 goto if778_else1433 
    repr_get_primitive_type_spec $I5002, _lex_param_0
    set $P5002, fb_tmp_234[$I5002]
    set $P5004, $P5002
    goto if778_end1434
  if778_else1433:
    null $P5003
    set $P5004, $P5003
  if778_end1434:
    unless_null $P5004, vivi_7791435
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_7791435:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_lookup_name" :subid("cuid_305_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2777
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_235 
    find_lex $P5001, "@prim_to_lookup_name"
    set fb_tmp_235, $P5001
    repr_defined $I5001, fb_tmp_235
    unless $I5001 goto if780_else1436 
    repr_get_primitive_type_spec $I5002, _lex_param_0
    set $P5002, fb_tmp_235[$I5002]
    set $P5004, $P5002
    goto if780_end1437
  if780_else1436:
    null $P5003
    set $P5004, $P5003
  if780_end1437:
    unless_null $P5004, vivi_7811438
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_7811438:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "want" :subid("cuid_307_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3249
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5012 = 'cuid_306_1368096764.976' 
    capture_lex $P5012 
    .lex "@possibles", $P101 
    .lex "$best", $P102 
    .lex "$node", _lex_param_0 
    .lex "$type", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 3250
    $P5004 = _lex_param_0."list"()
    repr_clone $P5003, $P5004
    set $P101, $P5003
.annotate 'line', 3251
    $P5005 = $P101."shift"()
    set $P102, $P5005
    set $P5006, $P101
    iter $P5008, $P101
  for_next1441:
    unless $P5008, for_done1443
    shift $P5010, $P5008
    shift $P5011, $P5008
  for_redo1442:
    .const 'Sub' $P5009 = 'cuid_306_1368096764.976' 
    capture_lex $P5009
    $P5006 = $P5009($P5010, $P5011)
    goto for_next1441
  for_done1443:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_306_1368096764.976") :anon :lex :outer("cuid_307_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3252
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$sel", _lex_param_0 
    .lex "$ast", _lex_param_1 
    set $S5001, _lex_param_0
    find_lex $P5001, "$type"
    set $S5002, $P5001
    index $I5002, $S5001, $S5002, 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    box $P5003, $I5001
    set $P5002, $P5003
    unless $I5001 goto if782_end1440 
.annotate 'line', 3253
    store_lex "$best", _lex_param_1
    set $P5002, _lex_param_1
  if782_end1440:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_308_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2547
    .const 'Sub' $P5012 = 'cuid_52_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_53_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_54_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_55_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_56_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_57_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_58_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_59_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_60_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_61_1368096764.976' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_62_1368096764.976' 
    capture_lex $P5012 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_52_1368096764.976' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_53_1368096764.976' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_54_1368096764.976' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_55_1368096764.976' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_56_1368096764.976' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_57_1368096764.976' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_58_1368096764.976' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_59_1368096764.976' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_60_1368096764.976' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_61_1368096764.976' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_62_1368096764.976' 
    capture_lex $P5011
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_52_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2553
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_11 :opt_flag 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$cur", _lex_param_1 
    if haz_param_11, default1446
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_1, $P5010
  default1446:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    unless _lex_param_1 goto if783_else1444 
.annotate 'line', 2556
    $P5004 = _lex_param_1."cur_p"()
    $P5005 = _lex_param_1."cur_s"()
    $P5006 = _lex_param_1."cur_i"()
    $P5007 = _lex_param_1."cur_n"()
    $P5008 = $P101."BUILD"($P5004, $P5005, $P5006, $P5007)
    goto if783_end1445
  if783_else1444:
.annotate 'line', 2557
    $P5009 = $P101."BUILD"(5000, 5000, 5000, 5000)
  if783_end1445:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "handler_allocator" :subid("cuid_53_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2561
    .param pmc _lex_param_0 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 2563
    $P101."BUILD"(10000, 10000, 10000, 10000)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_54_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2567
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$p", _lex_param_1 
    .lex "$s", _lex_param_2 
    .lex "$i", _lex_param_3 
    .lex "$n", _lex_param_4 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    set $I5001, _lex_param_1
    repr_bind_attr_int $P5001, $P5002, "$!cur_p", $I5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    set $I5002, _lex_param_2
    repr_bind_attr_int $P5003, $P5004, "$!cur_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    set $I5003, _lex_param_3
    repr_bind_attr_int $P5005, $P5006, "$!cur_i", $I5003
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    set $I5004, _lex_param_4
    repr_bind_attr_int $P5007, $P5008, "$!cur_n", $I5004
    .return ($I5004) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_p" :subid("cuid_55_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2574
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_p"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_p", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_p"
    set $S5002, $I5003
    concat $S5001, "$P", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_s" :subid("cuid_56_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2578
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_s"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_s"
    set $S5002, $I5003
    concat $S5001, "$S", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_i" :subid("cuid_57_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2582
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_i"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_i", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_i"
    set $S5002, $I5003
    concat $S5001, "$I", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_n" :subid("cuid_58_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2586
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_n"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_n", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_n"
    set $S5002, $I5003
    concat $S5001, "$N", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_p" :subid("cuid_59_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2591
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_p"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_s" :subid("cuid_60_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2592
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_s"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_i" :subid("cuid_61_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2593
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_i"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_n" :subid("cuid_62_1368096764.976") :anon :lex :outer("cuid_308_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2594
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_n"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_309_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2598
    .const 'Sub' $P5031 = 'cuid_63_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_64_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_65_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_66_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_67_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_68_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_69_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_70_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_71_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_72_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_73_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_74_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_75_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_76_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_77_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_78_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_79_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_80_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_81_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_82_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_83_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_84_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_85_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_86_1368096764.976' 
    capture_lex $P5031 
    .lex "%longnames", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    new $P5001, 'Hash'
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_63_1368096764.976' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_64_1368096764.976' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_65_1368096764.976' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_66_1368096764.976' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_67_1368096764.976' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_68_1368096764.976' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_69_1368096764.976' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_70_1368096764.976' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_71_1368096764.976' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_72_1368096764.976' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_73_1368096764.976' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_74_1368096764.976' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_75_1368096764.976' 
    capture_lex $P5014
    new $P5015, 'Hash'
    box $P5016, "pmc"
    set $P5015["P"], $P5016
    box $P5017, "int"
    set $P5015["I"], $P5017
    box $P5018, "num"
    set $P5015["N"], $P5018
    box $P5019, "string"
    set $P5015["S"], $P5019
    set $P101, $P5015
    .const 'Sub' $P5020 = 'cuid_76_1368096764.976' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_77_1368096764.976' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_78_1368096764.976' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_79_1368096764.976' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_80_1368096764.976' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_81_1368096764.976' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_82_1368096764.976' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_83_1368096764.976' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_84_1368096764.976' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_85_1368096764.976' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_86_1368096764.976' 
    capture_lex $P5030
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_63_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2615
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$qast", _lex_param_1 
    .lex "$outer", _lex_param_2 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 2617
    $P101."BUILD"(_lex_param_1, _lex_param_2)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_64_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2621
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$qast", _lex_param_1 
    .lex "$outer", _lex_param_2 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_bind_attr_obj $P5001, $P5002, "$!qast", _lex_param_1
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_bind_attr_obj $P5003, $P5004, "$!outer", _lex_param_2
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5007, 'ResizablePMCArray'
    repr_bind_attr_obj $P5005, $P5006, "@!params", $P5007
    nqp_decontainerize $P5008, _lex_param_0
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5010, 'ResizablePMCArray'
    repr_bind_attr_obj $P5008, $P5009, "@!locals", $P5010
    nqp_decontainerize $P5011, _lex_param_0
    nqp_get_sc_object $P5012, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5013, 'ResizablePMCArray'
    repr_bind_attr_obj $P5011, $P5012, "@!lexicals", $P5013
    nqp_decontainerize $P5014, _lex_param_0
    nqp_get_sc_object $P5015, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5016, 'Hash'
    repr_bind_attr_obj $P5014, $P5015, "%!local_types", $P5016
    nqp_decontainerize $P5017, _lex_param_0
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5019, 'Hash'
    repr_bind_attr_obj $P5017, $P5018, "%!lexical_types", $P5019
    nqp_decontainerize $P5020, _lex_param_0
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5022, 'Hash'
    repr_bind_attr_obj $P5020, $P5021, "%!lexical_regs", $P5022
    nqp_decontainerize $P5023, _lex_param_0
    nqp_get_sc_object $P5024, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5025, 'Hash'
    repr_bind_attr_obj $P5023, $P5024, "%!reg_types", $P5025
    nqp_decontainerize $P5026, _lex_param_0
    nqp_get_sc_object $P5027, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    new $P5028, 'ResizablePMCArray'
    repr_bind_attr_obj $P5026, $P5027, "@!loadlibs", $P5028
    nqp_decontainerize $P5029, _lex_param_0
    nqp_get_sc_object $P5030, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_bind_attr_int $P5029, $P5030, "$!cur_lex_p", 100
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_bind_attr_int $P5031, $P5032, "$!cur_lex_s", 100
    nqp_decontainerize $P5033, _lex_param_0
    nqp_get_sc_object $P5034, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_bind_attr_int $P5033, $P5034, "$!cur_lex_i", 100
    nqp_decontainerize $P5035, _lex_param_0
    nqp_get_sc_object $P5036, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_bind_attr_int $P5035, $P5036, "$!cur_lex_n", 100
    .return (100) 
.end
.HLL "nqp"
.namespace []
.sub "add_param" :subid("cuid_65_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2638
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5012 = 'cuid_310_1368096764.976' 
    capture_lex $P5012 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2639
    $P5001 = _lex_param_1."scope"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "local"
    unless $I5001 goto if784_else1447 
.annotate 'line', 2640
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."register_local"(_lex_param_1)
    goto if784_end1448
  if784_else1447:
    .const 'Sub' $P5004 = 'cuid_310_1368096764.976' 
    capture_lex $P5004
    $P5005 = $P5004()
  if784_end1448:
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!params"
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!params"
    set $N5001, $P5011
    set $I5002, $N5001
    set $P5008[$I5002], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_310_1368096764.976") :anon :lex :outer("cuid_65_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2642
    .lex "$reg", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5001, $P5002, $P5004, "$!param_idx"
    set $S5002, $I5001
    concat $S5001, "_lex_param_", $S5002
    box $P5005, $S5001
    set $P101, $P5005
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5002, $P5009, $P5011, "$!param_idx"
    set $N5002, $I5002
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5003, $N5001
    repr_bind_attr_int $P5006, $P5008, "$!param_idx", $I5003
.annotate 'line', 2645
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$var"
    $P5015 = $P5012."register_lexical"($P5014, $P101)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "add_lexical" :subid("cuid_66_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2650
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("is_static") :optional 
    .param int haz_param_12 :opt_flag 
    .param pmc _lex_param_3 :named("is_cont") :optional 
    .param int haz_param_13 :opt_flag 
    .param pmc _lex_param_4 :named("is_state") :optional 
    .param int haz_param_14 :opt_flag 
    .const 'Sub' $P5015 = 'cuid_311_1368096764.976' 
    capture_lex $P5015 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .lex "$is_static", _lex_param_2 
    .lex "$is_cont", _lex_param_3 
    .lex "$is_state", _lex_param_4 
    if haz_param_12, default1469
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5012
  default1469:
    if haz_param_13, default1470
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_3, $P5013
  default1470:
    if haz_param_14, default1471
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_4, $P5014
  default1471:
.annotate 'line', 2651
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."register_lexical"(_lex_param_1)
    set $P5002, _lex_param_2
    if _lex_param_2 goto unless787_end1454 
    set $P5002, _lex_param_3
  unless787_end1454:
    set $P5003, $P5002
    if $P5002 goto unless786_end1452 
    set $P5003, _lex_param_4
  unless786_end1452:
    unless $P5003 goto if785_end1450 
    .const 'Sub' $P5004 = 'cuid_311_1368096764.976' 
    capture_lex $P5004
    $P5005 = $P5004()
  if785_end1450:
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!lexicals"
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!lexicals"
    set $N5001, $P5011
    set $I5001, $N5001
    set $P5008[$I5001], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_311_1368096764.976") :anon :lex :outer("cuid_66_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2652
    .lex "%blv", $P101 
    .lex "$flags", $P102 
    .local pmc fb_tmp_236 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_237 
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*BLOCK_LEX_VALUES"
    unless_null $P5003, fallback1455
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_236, pkg_viv_tmp_4
    repr_defined $I5001, fb_tmp_236
    unless $I5001 goto if788_else1456 
    set $P5006, fb_tmp_236["%BLOCK_LEX_VALUES"]
    set $P5008, $P5006
    goto if788_end1457
  if788_else1456:
    null $P5007
    set $P5008, $P5007
  if788_end1457:
    unless_null $P5008, vivi_7891458
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%BLOCK_LEX_VALUES"], $P5009
    set $P5008, $P5009
  vivi_7891458:
    unless_null $P5008, vivi_7901459
    die "Contextual %*BLOCK_LEX_VALUES not found"
    box $P5010, "Contextual %*BLOCK_LEX_VALUES not found"
    set $P5008, $P5010
  vivi_7901459:
    set $P5003, $P5008
  fallback1455:
    set $P101, $P5003
.annotate 'line', 2654
    find_lex $P5012, "self"
    nqp_decontainerize $P5011, $P5012
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5014, $P5011, $P5013, "$!qast"
    $P5015 = $P5014."cuid"()
    set $S5001, $P5015
    exists $I5002, $P101[$S5001]
    if $I5002 goto unless791_end1461 
.annotate 'line', 2655
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5019, $P5016, $P5018, "$!qast"
    $P5020 = $P5019."cuid"()
    set $S5002, $P5020
    new $P5021, 'ResizablePMCArray'
    set $P101[$S5002], $P5021
  unless791_end1461:
    find_lex $P5022, "$is_static"
    unless $P5022 goto if792_else1462 
    set $I5004, 0
    goto if792_end1463
  if792_else1462:
    find_lex $P5023, "$is_cont"
    unless $P5023 goto if793_else1464 
    set $I5003, 1
    goto if793_end1465
  if793_else1464:
    set $I5003, 2
  if793_end1465:
    set $I5004, $I5003
  if792_end1463:
    box $P5024, $I5004
    set $P102, $P5024
    set fb_tmp_237, $P101
    repr_defined $I5005, fb_tmp_237
    unless $I5005 goto if794_else1466 
.annotate 'line', 2659
    find_lex $P5027, "self"
    nqp_decontainerize $P5026, $P5027
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5029, $P5026, $P5028, "$!qast"
    $P5030 = $P5029."cuid"()
    set $S5003, $P5030
    set $P5025, fb_tmp_237[$S5003]
    set $P5032, $P5025
    goto if794_end1467
  if794_else1466:
    null $P5031
    set $P5032, $P5031
  if794_end1467:
    unless_null $P5032, vivi_7951468
    nqp_get_sc_object $P5033, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5032, $P5033
  vivi_7951468:
    new $P5034, 'ResizablePMCArray'
    find_lex $P5035, "$var"
    $P5036 = $P5035."name"()
    push $P5034, $P5036
    find_lex $P5037, "$var"
    $P5038 = $P5037."value"()
    push $P5034, $P5038
    push $P5034, $P102
    push $P5032, $P5034
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "add_local" :subid("cuid_67_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2664
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2665
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."register_local"(_lex_param_1)
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!locals"
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!locals"
    set $N5001, $P5007
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "register_lexical" :subid("cuid_68_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2669
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_15 :opt_flag 
    .lex "$name", $P101 
    .lex "$type", $P102 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .lex "$reg", _lex_param_2 
    .local pmc fb_tmp_238 
    if haz_param_15, default1479
    nqp_get_sc_object $P5029, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5029
  default1479:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 2670
    $P5003 = _lex_param_1."name"()
    set $P101, $P5003
.annotate 'line', 2671
    $P5004 = _lex_param_1."returns"()
    $P5005 = "&type_to_register_type"($P5004)
    set $P102, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "%!lexical_types"
    set $S5001, $P101
    exists $I5001, $P5008[$S5001]
    unless $I5001 goto if796_end1473 
.annotate 'line', 2672
    set $S5004, $P101
    concat $S5003, "Lexical '", $S5004
    concat $S5002, $S5003, "' already declared"
    box $P5009, $S5002
    die $P5009
  if796_end1473:
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5012, $P5010, $P5011, "%!lexical_types"
    set $S5005, $P101
    set $P5012[$S5005], $P102
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5015, $P5013, $P5014, "%!lexical_regs"
    set $S5006, $P101
    unless _lex_param_2 goto if797_else1474 
    set $P5018, _lex_param_2
    goto if797_end1475
  if797_else1474:
.annotate 'line', 2676
    nqp_decontainerize $P5016, _lex_param_0
    set $S5009, $P102
    downcase $S5008, $S5009
    concat $S5007, "fresh_lex_", $S5008
    $P5017 = $P5016.$S5007()
    set $P5018, $P5017
  if797_end1475:
    set $P5015[$S5006], $P5018
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5021, $P5019, $P5020, "%!reg_types"
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5024, $P5022, $P5023, "%!lexical_regs"
    set fb_tmp_238, $P5024
    repr_defined $I5002, fb_tmp_238
    unless $I5002 goto if798_else1476 
    set $S5010, $P101
    set $P5025, fb_tmp_238[$S5010]
    set $P5027, $P5025
    goto if798_end1477
  if798_else1476:
    null $P5026
    set $P5027, $P5026
  if798_end1477:
    unless_null $P5027, vivi_7991478
    nqp_get_sc_object $P5028, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5027, $P5028
  vivi_7991478:
    set $S5011, $P5027
    set $P5021[$S5011], $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "register_local" :subid("cuid_69_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2680
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .local pmc fb_tmp_239 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2681
    $P5002 = _lex_param_1."name"()
    set $P101, $P5002
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!local_types"
    set $S5001, $P101
    exists $I5001, $P5005[$S5001]
    unless $I5001 goto if800_end1481 
.annotate 'line', 2682
    set $S5004, $P101
    concat $S5003, "Local '", $S5004
    concat $S5002, $S5003, "' already declared"
    box $P5006, $S5002
    die $P5006
  if800_end1481:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5009, $P5007, $P5008, "%!local_types"
    set $S5005, $P101
.annotate 'line', 2685
    $P5010 = _lex_param_1."returns"()
    $P5011 = "&type_to_register_type"($P5010)
    set $P5009[$S5005], $P5011
    nqp_decontainerize $P5012, _lex_param_0
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5014, $P5012, $P5013, "%!reg_types"
    set $S5006, $P101
    nqp_decontainerize $P5015, _lex_param_0
    nqp_get_sc_object $P5016, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5017, $P5015, $P5016, "%!local_types"
    set fb_tmp_239, $P5017
    repr_defined $I5002, fb_tmp_239
    unless $I5002 goto if801_else1482 
    set $S5007, $P101
    set $P5018, fb_tmp_239[$S5007]
    set $P5020, $P5018
    goto if801_end1483
  if801_else1482:
    null $P5019
    set $P5020, $P5019
  if801_end1483:
    unless_null $P5020, vivi_8021484
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_8021484:
    set $P5014[$S5006], $P5020
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "qast" :subid("cuid_70_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2689
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "$!qast"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "outer" :subid("cuid_71_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2690
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "$!outer"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "params" :subid("cuid_72_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2691
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!params"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "lexicals" :subid("cuid_73_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2692
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!lexicals"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "locals" :subid("cuid_74_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2693
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!locals"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "lex_reg" :subid("cuid_75_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2695
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_240 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!lexical_regs"
    set fb_tmp_240, $P5003
    repr_defined $I5001, fb_tmp_240
    unless $I5001 goto if803_else1485 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_240[$S5001]
    set $P5006, $P5004
    goto if803_end1486
  if803_else1485:
    null $P5005
    set $P5006, $P5005
  if803_end1486:
    unless_null $P5006, vivi_8041487
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_8041487:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "local_type" :subid("cuid_76_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2698
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_241 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!local_types"
    set fb_tmp_241, $P5003
    repr_defined $I5001, fb_tmp_241
    unless $I5001 goto if805_else1488 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_241[$S5001]
    set $P5006, $P5004
    goto if805_end1489
  if805_else1488:
    null $P5005
    set $P5006, $P5005
  if805_end1489:
    unless_null $P5006, vivi_8061490
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_8061490:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "local_type_long" :subid("cuid_77_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2699
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    find_lex $P5001, "%longnames"
    set fb_tmp_242, $P5001
    repr_defined $I5001, fb_tmp_242
    unless $I5001 goto if807_else1491 
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!local_types"
    set fb_tmp_243, $P5005
    repr_defined $I5002, fb_tmp_243
    unless $I5002 goto if808_else1493 
    set $S5001, _lex_param_1
    set $P5006, fb_tmp_243[$S5001]
    set $P5008, $P5006
    goto if808_end1494
  if808_else1493:
    null $P5007
    set $P5008, $P5007
  if808_end1494:
    unless_null $P5008, vivi_8091495
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_8091495:
    set $S5002, $P5008
    set $P5002, fb_tmp_242[$S5002]
    set $P5011, $P5002
    goto if807_end1492
  if807_else1491:
    null $P5010
    set $P5011, $P5010
  if807_end1492:
    unless_null $P5011, vivi_8101496
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_8101496:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_type" :subid("cuid_78_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2700
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_244 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!lexical_types"
    set fb_tmp_244, $P5003
    repr_defined $I5001, fb_tmp_244
    unless $I5001 goto if811_else1497 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_244[$S5001]
    set $P5006, $P5004
    goto if811_end1498
  if811_else1497:
    null $P5005
    set $P5006, $P5005
  if811_end1498:
    unless_null $P5006, vivi_8121499
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_8121499:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_type_long" :subid("cuid_79_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2701
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    find_lex $P5001, "%longnames"
    set fb_tmp_245, $P5001
    repr_defined $I5001, fb_tmp_245
    unless $I5001 goto if813_else1500 
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!lexical_types"
    set fb_tmp_246, $P5005
    repr_defined $I5002, fb_tmp_246
    unless $I5002 goto if814_else1502 
    set $S5001, _lex_param_1
    set $P5006, fb_tmp_246[$S5001]
    set $P5008, $P5006
    goto if814_end1503
  if814_else1502:
    null $P5007
    set $P5008, $P5007
  if814_end1503:
    unless_null $P5008, vivi_8151504
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_8151504:
    set $S5002, $P5008
    set $P5002, fb_tmp_245[$S5002]
    set $P5011, $P5002
    goto if813_end1501
  if813_else1500:
    null $P5010
    set $P5011, $P5010
  if813_end1501:
    unless_null $P5011, vivi_8161505
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_8161505:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "reg_type" :subid("cuid_80_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2702
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_247 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!reg_types"
    set fb_tmp_247, $P5003
    repr_defined $I5001, fb_tmp_247
    unless $I5001 goto if817_else1506 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_247[$S5001]
    set $P5006, $P5004
    goto if817_end1507
  if817_else1506:
    null $P5005
    set $P5006, $P5005
  if817_end1507:
    unless_null $P5006, vivi_8181508
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_8181508:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "add_loadlibs" :subid("cuid_81_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2704
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5006 = 'cuid_312_1368096764.976' 
    capture_lex $P5006 
    .lex "self", _lex_param_0 
    .lex "@libs", _lex_param_1 
    set $P5001, _lex_param_1
    iter $P5003, _lex_param_1
  for_next1509:
    unless $P5003, for_done1511
    shift $P5005, $P5003
  for_redo1510:
    .const 'Sub' $P5004 = 'cuid_312_1368096764.976' 
    capture_lex $P5004
    $P5001 = $P5004($P5005)
    goto for_next1509
  for_done1511:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_312_1368096764.976") :anon :lex :outer("cuid_81_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2705
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5004, $P5001, $P5003, "@!loadlibs"
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5008, $P5005, $P5007, "@!loadlibs"
    set $N5001, $P5008
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_0
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "loadlibs" :subid("cuid_82_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2709
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!loadlibs"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_p" :subid("cuid_83_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2713
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_p"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_p", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_p"
    set $S5002, $I5003
    concat $S5001, "$P", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_s" :subid("cuid_84_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2717
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_s"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_s"
    set $S5002, $I5003
    concat $S5001, "$S", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_i" :subid("cuid_85_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2721
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_i"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_i", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_i"
    set $S5002, $I5003
    concat $S5001, "$I", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_n" :subid("cuid_86_1368096764.976") :anon :lex :outer("cuid_309_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2725
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_n"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_n", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_n"
    set $S5002, $I5003
    concat $S5001, "$N", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "source_for_node" :subid("cuid_87_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2744
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$source", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2745
    $P5002 = _lex_param_1."node"()
    unless $P5002 goto if822_else1516 
.annotate 'line', 2746
    $P5003 = _lex_param_1."node"()
    $P5004 = $P5003."Str"()
    set $S5002, $P5004
    escape $S5001, $S5002
    set $S5003, $S5001
    goto if822_end1517
  if822_else1516:
    set $S5003, ""
  if822_end1517:
    box $P5005, $S5003
    set $P101, $P5005
    set $S5004, $P101
    length $I5002, $S5004
    set $N5001, $I5002
    set $N5002, 103
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if823_end1519 
.annotate 'line', 2748
    set $S5007, $P101
    substr $S5006, $S5007, 0, 100
    concat $S5005, $S5006, "..."
    box $P5006, $S5005
    set $P101, $P5006
  if823_end1519:
    set $S5008, $P101
    length $I5003, $S5008
    unless $I5003 goto if824_end1521 
.annotate 'line', 2751
    set $S5011, $P101
    concat $S5010, " (source text: \"", $S5011
    concat $S5009, $S5010, "\")"
    box $P5007, $S5009
    set $P101, $P5007
  if824_end1521:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "post" :subid("cuid_88_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2757
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$source", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 115
    type_check $I5001, _lex_param_1, $P5001
    if $I5001 goto unless825_end1523 
.annotate 'line', 2759
    nqp_get_sc_object $P5002, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    type_check $I5002, _lex_param_1, $P5002
    if $I5002 goto unless826_end1525 
.annotate 'line', 2760
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    $P5004 = $P5003."new"(_lex_param_1)
    set _lex_param_1, $P5004
  unless826_end1525:
.annotate 'line', 2761
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 115
    $P5006 = $P5005."new"(_lex_param_1)
    set _lex_param_1, $P5006
  unless825_end1523:
.annotate 'line', 2765
    nqp_decontainerize $P5007, _lex_param_0
    $P5008 = $P5007."as_post"(_lex_param_1)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_register_type" :subid("cuid_89_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2772
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$type", _lex_param_1 
.annotate 'line', 2773
    $P5001 = "&type_to_register_type"(_lex_param_1)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "force_return_boxing_for_hll" :subid("cuid_90_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2782
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    find_lex $P5001, "%hll_force_return_boxing"
    set $S5001, _lex_param_1
    box $P5002, 1
    set $P5001[$S5001], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "unique" :subid("cuid_91_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2786
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_16 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$prefix", _lex_param_1 
    .local pmc tmp_2 
    .local pmc fb_tmp_249 
    if haz_param_16, default1529
    box $P5001, ""
    set _lex_param_1, $P5001
  default1529:
    set $S5002, _lex_param_1
    find_lex $P5002, "$?PACKAGE"
    get_who $P5001, $P5002
    set fb_tmp_249, $P5001
    repr_defined $I5001, fb_tmp_249
    unless $I5001 goto if827_else1526 
    set $P5003, fb_tmp_249["$serno"]
    set $P5005, $P5003
    goto if827_end1527
  if827_else1526:
    null $P5004
    set $P5005, $P5004
  if827_end1527:
    unless_null $P5005, vivi_8281528
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_8281528:
    set tmp_2, $P5005
    find_lex $P5008, "$?PACKAGE"
    get_who $P5007, $P5008
    set $N5002, tmp_2
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5009, $N5001
    set $P5007["$serno"], $P5009
    set $S5003, tmp_2
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "escape" :subid("cuid_92_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2787
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$esc", $P101 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    set $S5002, _lex_param_1
    escape $S5001, $S5002
    box $P5002, $S5001
    set $P101, $P5002
    set $S5003, $P101
    index $I5002, $S5003, utf8:"\\x", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if829_else1530 
    set $S5006, $P101
    concat $S5005, "utf8:\"", $S5006
    concat $S5004, $S5005, "\""
    set $S5015, $S5004
    goto if829_end1531
  if829_else1530:
    set $S5007, $P101
    index $I5004, $S5007, unicode:"\\u", 0
    set $N5003, $I5004
    set $N5004, 0
    isge $I5003, $N5003, $N5004
    unless $I5003 goto if830_else1532 
    set $S5010, $P101
    concat $S5009, "unicode:\"", $S5010
    concat $S5008, $S5009, "\""
    set $S5014, $S5008
    goto if830_end1533
  if830_else1532:
    set $S5013, $P101
    concat $S5012, "\"", $S5013
    concat $S5011, $S5012, "\""
    set $S5014, $S5011
  if830_end1533:
    set $S5015, $S5014
  if829_end1531:
    .return ($S5015) 
.end
.HLL "nqp"
.namespace []
.sub "rxescape" :subid("cuid_93_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2795
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    set $S5004, _lex_param_1
    escape $S5003, $S5004
    concat $S5002, "ucs4:\"", $S5003
    concat $S5001, $S5002, "\""
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_94_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2797
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_17 :opt_flag 
    .lex "$*WANT", $P101 
    .lex "CURRENT_DISPATCH_CAPTURE", $P102 
    .lex "&*CURRENT_DISPATCHER", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc dispatch_cap_1 
    .local pmc dispatch_cap_2 
    if haz_param_17, default1540
    nqp_get_sc_object $P5029, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5029
  default1540:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    getinterp $P5002
    set $P5002, $P5002['context']
    set $P102, $P5002
    getinterp $P5004
    set $P5004, $P5004['sub']
    get_sub_code_object $P5003, $P5004
    set $P103, $P5003
    set $P101, _lex_param_2
    unless _lex_param_2 goto if831_else1534 
.annotate 'line', 2799
    nqp_get_sc_object $P5005, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 66
    type_check $I5001, _lex_param_1, $P5005
    unless $I5001 goto if832_else1536 
.annotate 'line', 2800
.annotate 'line', 2801
    nqp_decontainerize $P5006, _lex_param_0
    nqp_decontainerize $P5007, _lex_param_0
    $P5008 = "&want"(_lex_param_1, _lex_param_2)
    $P5009 = $P5007."as_post"($P5008)
    $P5010 = $P5006."coerce"($P5009, _lex_param_2)
    set $P5020, $P5010
    goto if832_end1537
  if832_else1536:
.annotate 'line', 2803
.annotate 'line', 2804
    nqp_decontainerize $P5011, _lex_param_0
    set dispatch_cap_1, $P102
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 5
    repr_get_attr_obj $P5017, $P103, $P5016, "$!dispatch_cache"
    multi_cache_find $P5015, $P5017, dispatch_cap_1
    unless_null $P5015, vivi_8331538
    $P5018 = $P103."dispatch"(dispatch_cap_1)
    set $P5015, $P5018
  vivi_8331538:
    deconstruct_capture dispatch_cap_1, $P5012, $P5013
    $P5014 = $P5015($P5012 :flat, $P5013 :flat :named)
    $P5019 = $P5011."coerce"($P5014, _lex_param_2)
    set $P5020, $P5019
  if832_end1537:
    set $P5028, $P5020
    goto if831_end1535
  if831_else1534:
.annotate 'line', 2807
    set dispatch_cap_2, $P102
    nqp_get_sc_object $P5025, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 5
    repr_get_attr_obj $P5026, $P103, $P5025, "$!dispatch_cache"
    multi_cache_find $P5024, $P5026, dispatch_cap_2
    unless_null $P5024, vivi_8341539
    $P5027 = $P103."dispatch"(dispatch_cap_2)
    set $P5024, $P5027
  vivi_8341539:
    deconstruct_capture dispatch_cap_2, $P5021, $P5022
    $P5023 = $P5024($P5021 :flat, $P5022 :flat :named)
    set $P5028, $P5023
  if831_end1535:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_95_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2812
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_18 :opt_flag 
    .const 'Sub' $P5054 = 'cuid_314_1368096764.976' 
    capture_lex $P5054 
    .const 'Sub' $P5054 = 'cuid_316_1368096764.976' 
    capture_lex $P5054 
    .const 'Sub' $P5054 = 'cuid_317_1368096764.976' 
    capture_lex $P5054 
    .lex "$*HLL", $P101 
    .lex "%*BLOCK_LEX_VALUES", $P102 
    .lex "$*QAST_BLOCK_NO_CLOSE", $P103 
    .lex "$block_post", $P104 
    .lex "$comp_mode", $P105 
    .lex "@pre_des", $P106 
    .lex "@post_des", $P107 
    .lex "self", _lex_param_0 
    .lex "$cu", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_252 
    .local pmc fb_tmp_253 
    .local pmc pkg_viv_tmp_6 
    if haz_param_18, default1581
    nqp_get_sc_object $P5053, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5053
  default1581:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    box $P5008, ""
    set $P101, $P5008
.annotate 'line', 2815
    $P5009 = _lex_param_1."hll"()
    unless $P5009 goto if835_end1542 
.annotate 'line', 2816
    $P5010 = _lex_param_1."hll"()
    set $P101, $P5010
  if835_end1542:
    $P5011 = _lex_param_1."list"()
    set $N5001, $P5011
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    set $I5005, $I5001
    if $I5001 goto unless837_end1546 
    set fb_tmp_250, _lex_param_1
    repr_defined $I5004, fb_tmp_250
    unless $I5004 goto if838_else1547 
    set $P5012, fb_tmp_250[0]
    set $P5014, $P5012
    goto if838_end1548
  if838_else1547:
    null $P5013
    set $P5014, $P5013
  if838_end1548:
    unless_null $P5014, vivi_8391549
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_8391549:
    nqp_get_sc_object $P5016, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    type_check $I5003, $P5014, $P5016
    not $I5002, $I5003
    set $I5005, $I5002
  unless837_end1546:
    unless $I5005 goto if836_end1544 
.annotate 'line', 2820
    box $P5017, "QAST::CompUnit should have one child that is a QAST::Block"
    die $P5017
  if836_end1544:
    box $P5025, 1
    set $P103, $P5025
.annotate 'line', 2831
    nqp_decontainerize $P5026, _lex_param_0
    set fb_tmp_252, _lex_param_1
    repr_defined $I5007, fb_tmp_252
    unless $I5007 goto if843_else1555 
    set $P5027, fb_tmp_252[0]
    set $P5029, $P5027
    goto if843_end1556
  if843_else1555:
    null $P5028
    set $P5029, $P5028
  if843_end1556:
    unless_null $P5029, vivi_8441557
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_8441557:
    $P5031 = $P5026."as_post"($P5029)
    set $P104, $P5031
.annotate 'line', 2836
    $P5032 = _lex_param_1."compilation_mode"()
    set $P105, $P5032
.annotate 'line', 2837
    $P5033 = _lex_param_1."pre_deserialize"()
    set $P106, $P5033
.annotate 'line', 2838
    $P5034 = _lex_param_1."post_deserialize"()
    set $P107, $P5034
.annotate 'line', 2839
    nqp_decontainerize $P5035, _lex_param_0
    unless_null $P102, fallback1558
    nqp_get_sc_object $P5037, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_6, $P5036
    set fb_tmp_253, pkg_viv_tmp_6
    repr_defined $I5008, fb_tmp_253
    unless $I5008 goto if845_else1559 
    set $P5038, fb_tmp_253["%BLOCK_LEX_VALUES"]
    set $P5040, $P5038
    goto if845_end1560
  if845_else1559:
    null $P5039
    set $P5040, $P5039
  if845_end1560:
    unless_null $P5040, vivi_8461561
    new $P5041, 'Hash'
    set pkg_viv_tmp_6["%BLOCK_LEX_VALUES"], $P5041
    set $P5040, $P5041
  vivi_8461561:
    unless_null $P5040, vivi_8471562
    die "Contextual %*BLOCK_LEX_VALUES not found"
    box $P5042, "Contextual %*BLOCK_LEX_VALUES not found"
    set $P5040, $P5042
  vivi_8471562:
    set $P102, $P5040
  fallback1558:
    $P5035."block_lex_values_to_post_des"($P107, $P102)
    set $P5043, $P105
    if $P105 goto unless850_end1568 
    set $P5043, $P106
  unless850_end1568:
    set $P5044, $P5043
    if $P5043 goto unless849_end1566 
    set $P5044, $P107
  unless849_end1566:
    unless $P5044 goto if848_end1564 
    .const 'Sub' $P5045 = 'cuid_314_1368096764.976' 
    capture_lex $P5045
    $P5046 = $P5045()
  if848_end1564:
.annotate 'line', 2868
    $P5047 = _lex_param_1."load"()
    defined $I5009, $P5047
    unless $I5009 goto if852_end1578 
    .const 'Sub' $P5048 = 'cuid_316_1368096764.976' 
    capture_lex $P5048
    $P5049 = $P5048()
  if852_end1578:
.annotate 'line', 2875
    $P5050 = _lex_param_1."main"()
    defined $I5010, $P5050
    unless $I5010 goto if853_end1580 
    .const 'Sub' $P5051 = 'cuid_317_1368096764.976' 
    capture_lex $P5051
    $P5052 = $P5051()
  if853_end1580:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_314_1368096764.976") :anon :lex :outer("cuid_95_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2840
    .const 'Sub' $P5033 = 'cuid_313_1368096764.976' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_315_1368096764.976' 
    capture_lex $P5033 
    .lex "$block", $P101 
    .lex "$sc_post", $P102 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 2843
    nqp_get_sc_object $P5003, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    $P5004 = $P5003."new"("raw" :named("blocktype"))
    set $P101, $P5004
    find_lex $P5008, "@pre_des"
    set $P5005, $P5008
    iter $P5007, $P5008
  for_next1569:
    unless $P5007, for_done1571
    shift $P5010, $P5007
  for_redo1570:
    .const 'Sub' $P5009 = 'cuid_313_1368096764.976' 
    capture_lex $P5009
    $P5005 = $P5009($P5010)
    goto for_next1569
  for_done1571:
    find_lex $P5011, "$comp_mode"
    unless $P5011 goto if851_end1573 
.annotate 'line', 2851
.annotate 'line', 2852
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$cu"
    $P5015 = $P5014."sc"()
    find_lex $P5016, "$cu"
    $P5017 = $P5016."code_ref_blocks"()
.annotate 'line', 2853
    find_lex $P5018, "$cu"
    $P5019 = $P5018."repo_conflict_resolver"()
    $P5020 = $P5012."deserialization_code"($P5015, $P5017, $P5019)
    $P5021 = $P101."push"($P5020)
  if851_end1573:
    find_lex $P5025, "@post_des"
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next1574:
    unless $P5024, for_done1576
    shift $P5027, $P5024
  for_redo1575:
    .const 'Sub' $P5026 = 'cuid_315_1368096764.976' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next1574
  for_done1576:
.annotate 'line', 2862
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    $P5030 = $P5028."as_post"($P101)
    set $P102, $P5030
.annotate 'line', 2863
    $P102."pirflags"(":load :init")
.annotate 'line', 2864
    find_lex $P5031, "$block_post"
    $P5032 = $P5031."push"($P102)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_313_1368096764.976") :anon :lex :outer("cuid_314_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2846
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2847
    find_lex $P5001, "$block"
    nqp_get_sc_object $P5002, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 99
    $P5003 = $P5002."new"(_lex_param_0)
    $P5004 = $P5001."push"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_315_1368096764.976") :anon :lex :outer("cuid_314_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2857
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2858
    find_lex $P5001, "$block"
    nqp_get_sc_object $P5002, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 99
    $P5003 = $P5002."new"(_lex_param_0)
    $P5004 = $P5001."push"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_316_1368096764.976") :anon :lex :outer("cuid_95_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2868
    .lex "$load_post", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2869
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    find_lex $P5005, "$cu"
    $P5006 = $P5005."load"()
    $P5007 = $P5004."new"($P5006, "raw" :named("blocktype"))
    $P5008 = $P5002."as_post"($P5007)
    set $P101, $P5008
.annotate 'line', 2870
    $P101."pirflags"(":load")
.annotate 'line', 2871
    find_lex $P5009, "$block_post"
    $P5010 = $P5009."push"($P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_317_1368096764.976") :anon :lex :outer("cuid_95_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2875
    .lex "$main_post", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2876
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    find_lex $P5005, "$cu"
    $P5006 = $P5005."main"()
    $P5007 = $P5004."new"($P5006, "raw" :named("blocktype"))
    $P5008 = $P5002."as_post"($P5007)
    set $P101, $P5008
.annotate 'line', 2877
    $P101."pirflags"(":main")
.annotate 'line', 2878
    find_lex $P5009, "$block_post"
    $P5010 = $P5009."push"($P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "deserialization_code" :subid("cuid_96_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2884
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sh", $P101 
    .lex "$serialized", $P102 
    .lex "$sh_ast", $P103 
    .lex "$sh_elems", $P104 
    .lex "$i", $P105 
    .lex "$cr_past", $P106 
    .lex "self", _lex_param_0 
    .lex "$sc", _lex_param_1 
    .lex "@code_ref_blocks", _lex_param_2 
    .lex "$repo_conf_res", _lex_param_3 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    new $P5007, 'ResizableStringArray'
    set $P101, $P5007
    nqp_serialize_sc $S5001, _lex_param_1, $P101
    box $P5008, $S5001
    set $P102, $P5008
    nqp_pop_compiling_sc 
.annotate 'line', 2893
    nqp_get_sc_object $P5009, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5010 = $P5009."new"("list_s" :named("op"))
    set $P103, $P5010
    elements $I5001, $P101
    box $P5011, $I5001
    set $P104, $P5011
    box $P5012, 0
    set $P105, $P5012
  while854_test1582:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5028, $I5002
    set $P5027, $P5028
    unless $I5002 goto while854_done1586 
  while854_redo1584:
.annotate 'line', 2896
.annotate 'line', 2897
    set fb_tmp_254, $P101
    repr_defined $I5004, fb_tmp_254
    unless $I5004 goto if856_else1589 
    set $I5005, $P105
    set $P5013, fb_tmp_254[$I5005]
    set $P5015, $P5013
    goto if856_end1590
  if856_else1589:
    null $P5014
    set $P5015, $P5014
  if856_end1590:
    unless_null $P5015, vivi_8571591
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_8571591:
    set $S5002, $P5015
    isnull $I5003, $S5002
    unless $I5003 goto if855_else1587 
.annotate 'line', 2898
    nqp_get_sc_object $P5017, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5018 = $P5017."new"("null_s" :named("op"))
    set $P5025, $P5018
    goto if855_end1588
  if855_else1587:
.annotate 'line', 2899
    nqp_get_sc_object $P5019, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    set fb_tmp_255, $P101
    repr_defined $I5006, fb_tmp_255
    unless $I5006 goto if858_else1592 
    set $I5007, $P105
    set $P5020, fb_tmp_255[$I5007]
    set $P5022, $P5020
    goto if858_end1593
  if858_else1592:
    null $P5021
    set $P5022, $P5021
  if858_end1593:
    unless_null $P5022, vivi_8591594
    nqp_get_sc_object $P5023, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5022, $P5023
  vivi_8591594:
    $P5024 = $P5019."new"($P5022 :named("value"))
    set $P5025, $P5024
  if855_end1588:
    $P103."push"($P5025)
    set $N5004, $P105
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5026, $N5003
    set $P105, $P5026
    set $P5027, $P105
    goto while854_test1582 
  while854_done1586:
.annotate 'line', 2904
    nqp_get_sc_object $P5029, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5030 = $P5029."new"(_lex_param_2 :flat, "list_b" :named("op"))
    set $P106, $P5030
    unless _lex_param_3 goto if860_else1595 
.annotate 'line', 2907
.annotate 'line', 2908
    nqp_get_sc_object $P5031, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5032 = $P5031."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5033 = _lex_param_3."push"($P5032)
    goto if860_end1596
  if860_else1595:
.annotate 'line', 2910
.annotate 'line', 2911
    nqp_get_sc_object $P5034, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2913
    nqp_get_sc_object $P5035, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5036 = $P5035."new"("Repossession conflicts occurred during deserialization" :named("value"))
    $P5037 = $P5034."new"($P5036, "die_s" :named("op"))
    set _lex_param_3, $P5037
  if860_end1596:
.annotate 'line', 2918
    nqp_get_sc_object $P5038, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 99
.annotate 'line', 2919
    nqp_get_sc_object $P5039, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2921
    nqp_get_sc_object $P5040, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5041 = $P5040."new"("cur_sc" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2922
    nqp_get_sc_object $P5042, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    nqp_get_sc_object $P5043, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5044 = _lex_param_1."handle"()
    $P5045 = $P5043."new"($P5044 :named("value"))
    $P5046 = $P5042."new"($P5045, "createsc" :named("op"))
    $P5047 = $P5039."new"($P5041, $P5046, "bind" :named("op"))
.annotate 'line', 2924
    nqp_get_sc_object $P5048, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2926
    nqp_get_sc_object $P5049, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5050 = $P5049."new"("cur_sc" :named("name"), "local" :named("scope"))
.annotate 'line', 2927
    nqp_get_sc_object $P5051, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5052 = _lex_param_1."description"()
    $P5053 = $P5051."new"($P5052 :named("value"))
    $P5054 = $P5048."new"($P5050, $P5053, "scsetdesc" :named("op"))
.annotate 'line', 2929
    nqp_get_sc_object $P5055, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2931
    nqp_get_sc_object $P5056, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5057 = $P5056."new"("conflicts" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2932
    nqp_get_sc_object $P5058, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5059 = $P5058."new"("list" :named("op"))
    $P5060 = $P5055."new"($P5057, $P5059, "bind" :named("op"))
.annotate 'line', 2934
    nqp_get_sc_object $P5061, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2936
    nqp_get_sc_object $P5062, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    $P5063 = $P5062."new"($P102 :named("value"))
.annotate 'line', 2937
    nqp_get_sc_object $P5064, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5065 = $P5064."new"("cur_sc" :named("name"), "local" :named("scope"))
.annotate 'line', 2939
    nqp_get_sc_object $P5066, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 104
    $P5067 = $P5066."new"($P106, "immediate" :named("blocktype"))
.annotate 'line', 2940
    nqp_get_sc_object $P5068, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5069 = $P5068."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5070 = $P5061."new"($P5063, $P5065, $P103, $P5067, $P5069, "deserialize" :named("op"))
.annotate 'line', 2942
    nqp_get_sc_object $P5071, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2944
    nqp_get_sc_object $P5072, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5073 = $P5072."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5074 = $P5071."new"($P5073, _lex_param_3, "if" :named("op"))
    $P5075 = $P5038."new"($P5047, $P5054, $P5060, $P5070, $P5074)
    .return ($P5075) 
.end
.HLL "nqp"
.namespace []
.sub "block_lex_values_to_post_des" :subid("cuid_97_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2950
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5006 = 'cuid_319_1368096764.976' 
    capture_lex $P5006 
    .lex "self", _lex_param_0 
    .lex "@post_des", _lex_param_1 
    .lex "%blv", _lex_param_2 
    set $P5001, _lex_param_2
    iter $P5003, _lex_param_2
  for_next1609:
    unless $P5003, for_done1611
    shift $P5005, $P5003
  for_redo1610:
    .const 'Sub' $P5004 = 'cuid_319_1368096764.976' 
    capture_lex $P5004
    $P5001 = $P5004($P5005)
    goto for_next1609
  for_done1611:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_319_1368096764.976") :anon :lex :outer("cuid_97_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2951
    .param pmc _lex_param_0 
    .const 'Sub' $P5023 = 'cuid_318_1368096764.976' 
    capture_lex $P5023 
    .lex "$cuid", $P101 
    .lex "$names", $P102 
    .lex "$values", $P103 
    .lex "$flags", $P104 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
.annotate 'line', 2952
    $P5005 = _lex_param_0."key"()
    set $P101, $P5005
.annotate 'line', 2953
    nqp_get_sc_object $P5006, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5007 = $P5006."new"("list_s" :named("op"))
    set $P102, $P5007
.annotate 'line', 2954
    nqp_get_sc_object $P5008, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5009 = $P5008."new"("list" :named("op"))
    set $P103, $P5009
.annotate 'line', 2955
    nqp_get_sc_object $P5010, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5011 = $P5010."new"("list_i" :named("op"))
    set $P104, $P5011
.annotate 'line', 2956
    $P5015 = _lex_param_0."value"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next1606:
    unless $P5014, for_done1608
    shift $P5017, $P5014
  for_redo1607:
    .const 'Sub' $P5016 = 'cuid_318_1368096764.976' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next1606
  for_done1608:
    find_lex $P5018, "@post_des"
.annotate 'line', 2961
    nqp_get_sc_object $P5019, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 2963
    nqp_get_sc_object $P5020, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 90
    set $S5003, $P101
    concat $S5002, "    .const \"LexInfo\" %r = \"", $S5003
    concat $S5001, $S5002, "\""
    $P5021 = $P5020."new"($S5001 :named("pir"))
    $P5022 = $P5019."new"($P5021, $P102, $P103, $P104, "callmethod" :named("op"), "setup_static_lexpad" :named("name"))
    push $P5018, $P5022
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_318_1368096764.976") :anon :lex :outer("cuid_319_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2956
    .param pmc _lex_param_0 
    .lex "@lex", _lex_param_0 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc fb_tmp_258 
.annotate 'line', 2957
    find_lex $P5001, "$names"
    nqp_get_sc_object $P5002, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 52
    set fb_tmp_256, _lex_param_0
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if861_else1597 
    set $P5003, fb_tmp_256[0]
    set $P5005, $P5003
    goto if861_end1598
  if861_else1597:
    null $P5004
    set $P5005, $P5004
  if861_end1598:
    unless_null $P5005, vivi_8621599
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5005, $P5006
  vivi_8621599:
    $P5007 = $P5002."new"($P5005 :named("value"))
    $P5001."push"($P5007)
.annotate 'line', 2958
    find_lex $P5008, "$values"
    nqp_get_sc_object $P5009, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 61
    set fb_tmp_257, _lex_param_0
    repr_defined $I5002, fb_tmp_257
    unless $I5002 goto if863_else1600 
    set $P5010, fb_tmp_257[1]
    set $P5012, $P5010
    goto if863_end1601
  if863_else1600:
    null $P5011
    set $P5012, $P5011
  if863_end1601:
    unless_null $P5012, vivi_8641602
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_8641602:
    $P5014 = $P5009."new"($P5012 :named("value"))
    $P5008."push"($P5014)
.annotate 'line', 2959
    find_lex $P5015, "$flags"
    nqp_get_sc_object $P5016, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 42
    set fb_tmp_258, _lex_param_0
    repr_defined $I5003, fb_tmp_258
    unless $I5003 goto if865_else1603 
    set $P5017, fb_tmp_258[2]
    set $P5019, $P5017
    goto if865_end1604
  if865_else1603:
    null $P5018
    set $P5019, $P5018
  if865_end1604:
    unless_null $P5019, vivi_8661605
    nqp_get_sc_object $P5020, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5019, $P5020
  vivi_8661605:
    $P5021 = $P5016."new"($P5019 :named("value"))
    $P5022 = $P5015."push"($P5021)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_98_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2971
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_19 :opt_flag 
    .const 'Sub' $P5028 = 'cuid_323_1368096764.976' 
    capture_lex $P5028 
    .const 'Sub' $P5028 = 'cuid_339_1368096764.976' 
    capture_lex $P5028 
    .const 'Sub' $P5028 = 'cuid_340_1368096764.976' 
    capture_lex $P5028 
    .lex "$sub", $P101 
    .lex "$ops", $P102 
    .lex "$blocktype", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_267 
    if haz_param_19, default1779
    nqp_get_sc_object $P5027, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5027
  default1779:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_1612
    .lex "RETURN", $P104
    .const 'Sub' $P5004 = 'cuid_323_1368096764.976' 
    capture_lex $P5004
    $P5005 = $P5004()
    new $P5014, 'ExceptionHandler'
    set_label $P5014, catch_handler_9241734
    $P5014.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5014
    find_dynamic_lex $P5006, "$*BLOCK"
    unless_null $P5006, fallback1728
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5007, $P5008
    set fb_tmp_267, $P5007
    repr_defined $I5002, fb_tmp_267
    unless $I5002 goto if920_else1729 
    set $P5009, fb_tmp_267["$BLOCK"]
    set $P5011, $P5009
    goto if920_end1730
  if920_else1729:
    null $P5010
    set $P5011, $P5010
  if920_end1730:
    unless_null $P5011, vivi_9211731
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_9211731:
    unless_null $P5011, vivi_9221732
    die "Contextual $*BLOCK not found"
    box $P5013, "Contextual $*BLOCK not found"
    set $P5011, $P5013
  vivi_9221732:
    set $P5006, $P5011
  fallback1728:
    set $P5015, $P5006
    pop_eh 
    goto skip_handler_9231733
  catch_handler_9241734:
    .get_results ($P5014) 
    set $I10001, 1
    set $P5014["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5014
    pop_upto_eh $P5014
    pop_eh 
    set $P5015, $P10001
    goto skip_handler_9231733
  skip_handler_9231733:
    nqp_get_sc_object $P5016, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    type_check $I5001, $P5015, $P5016
    if $I5001 goto unless919_end1727 
.annotate 'line', 3155
    $P5017 = "RETURN"($P101)
  unless919_end1727:
.annotate 'line', 3161
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5019 = $P5018."new"()
    set $P102, $P5019
.annotate 'line', 3162
    $P102."push"($P101)
.annotate 'line', 3163
    $P5020 = _lex_param_1."blocktype"()
    set $P103, $P5020
    set $S5001, $P103
    iseq $I5003, $S5001, "immediate"
    unless $I5003 goto if925_else1735 
    .const 'Sub' $P5021 = 'cuid_339_1368096764.976' 
    capture_lex $P5021
    $P5022 = $P5021()
    goto if925_end1736
  if925_else1735:
    set $S5002, $P103
    iseq $I5004, $S5002, "declaration"
    set $I5006, $I5004
    if $I5004 goto unless944_end1766 
    set $S5003, $P103
    iseq $I5005, $S5003, ""
    set $I5006, $I5005
  unless944_end1766:
    box $P5026, $I5006
    set $P5025, $P5026
    unless $I5006 goto if943_end1764 
    .const 'Sub' $P5023 = 'cuid_340_1368096764.976' 
    capture_lex $P5023
    $P5024 = $P5023()
    set $P5025, $P5024
  if943_end1764:
  if925_end1736:
    goto lexotic_1613
  lexotic_1612:
    .get_results ($P102)
  lexotic_1613:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_323_1368096764.976") :anon :lex :outer("cuid_98_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2974
    .const 'Sub' $P5133 = 'cuid_321_1368096764.976' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_325_1368096764.976' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_332_1368096764.976' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_333_1368096764.976' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_334_1368096764.976' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_335_1368096764.976' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_337_1368096764.976' 
    capture_lex $P5133 
    .lex "$*REGALLOC", $P101 
    .lex "$*BLOCKRA", $P102 
    .lex "$*BINDVAL", $P103 
    .lex "$outer", $P104 
    .lex "$block", $P105 
    .lex "@inners", $P106 
    .lex "$stmts", $P107 
    .lex "$decls", $P108 
    .lex "$opts", $P109 
    .lex "%lex_params", $P110 
    .lex "$cap_lex_reg", $P111 
    .lex "$hll", $P112 
    .lex "@loadlibs", $P113 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_266 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    new $P5010, 'Hash'
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P112, $P5012
    new $P5013, 'ResizablePMCArray'
    set $P113, $P5013
.annotate 'line', 2976
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    $P5015 = $P5014."new"()
    set $P101, $P5015
    unless_null $P101, fallback1614
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5016, $P5017
    set fb_tmp_259, $P5016
    repr_defined $I5001, fb_tmp_259
    unless $I5001 goto if867_else1615 
    set $P5018, fb_tmp_259["$REGALLOC"]
    set $P5020, $P5018
    goto if867_end1616
  if867_else1615:
    null $P5019
    set $P5020, $P5019
  if867_end1616:
    unless_null $P5020, vivi_8681617
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_8681617:
    unless_null $P5020, vivi_8691618
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_8691618:
    set $P101, $P5020
  fallback1614:
    set $P102, $P101
    box $P5023, 0
    set $P103, $P5023
    new $P5032, 'ExceptionHandler'
    set_label $P5032, catch_handler_8741625
    $P5032.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5032
    find_dynamic_lex $P5024, "$*BLOCK"
    unless_null $P5024, fallback1619
    nqp_get_sc_object $P5026, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5025, $P5026
    set fb_tmp_260, $P5025
    repr_defined $I5002, fb_tmp_260
    unless $I5002 goto if870_else1620 
    set $P5027, fb_tmp_260["$BLOCK"]
    set $P5029, $P5027
    goto if870_end1621
  if870_else1620:
    null $P5028
    set $P5029, $P5028
  if870_end1621:
    unless_null $P5029, vivi_8711622
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_8711622:
    unless_null $P5029, vivi_8721623
    die "Contextual $*BLOCK not found"
    box $P5031, "Contextual $*BLOCK not found"
    set $P5029, $P5031
  vivi_8721623:
    set $P5024, $P5029
  fallback1619:
    set $P5033, $P5024
    pop_eh 
    goto skip_handler_8731624
  catch_handler_8741625:
    .get_results ($P5032) 
    set $I10001, 1
    set $P5032["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5032
    pop_upto_eh $P5032
    pop_eh 
    set $P5033, $P10001
    goto skip_handler_8731624
  skip_handler_8731624:
    set $P104, $P5033
.annotate 'line', 2980
    nqp_get_sc_object $P5034, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    find_lex $P5035, "$node"
    $P5036 = $P5034."new"($P5035, $P104)
    set $P105, $P5036
    .const 'Sub' $P5037 = 'cuid_321_1368096764.976' 
    capture_lex $P5037
    $P5038 = $P5037()
.annotate 'line', 3003
    nqp_get_sc_object $P5039, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5040 = $P5039."new"()
    set $P108, $P5040
.annotate 'line', 3004
    nqp_get_sc_object $P5041, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5042 = $P5041."new"()
    set $P109, $P5042
.annotate 'line', 3005
    find_lex $P5043, "$node"
    $P5044 = $P5043."node"()
    unless $P5044 goto if883_end1638 
    find_lex $P5045, "$node"
    $P5046 = $P5045."node"()
    $P5047 = $P108."node"($P5046)
  if883_end1638:
.annotate 'line', 3007
    find_lex $P5048, "$node"
    $P5049 = $P5048."custom_args"()
    unless $P5049 goto if884_else1639 
.annotate 'line', 3008
    $P5050 = $P108."push_pirop"(".param pmc CALL_SIG :call_sig")
    goto if884_end1640
  if884_else1639:
    .const 'Sub' $P5051 = 'cuid_325_1368096764.976' 
    capture_lex $P5051
    $P5052 = $P5051()
  if884_end1640:
.annotate 'line', 3089
    unless_null $P101, fallback1680
    nqp_get_sc_object $P5054, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5053, $P5054
    set fb_tmp_263, $P5053
    repr_defined $I5003, fb_tmp_263
    unless $I5003 goto if898_else1681 
    set $P5055, fb_tmp_263["$REGALLOC"]
    set $P5057, $P5055
    goto if898_end1682
  if898_else1681:
    null $P5056
    set $P5057, $P5056
  if898_end1682:
    unless_null $P5057, vivi_8991683
    nqp_get_sc_object $P5058, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5057, $P5058
  vivi_8991683:
    unless_null $P5057, vivi_9001684
    die "Contextual $*REGALLOC not found"
    box $P5059, "Contextual $*REGALLOC not found"
    set $P5057, $P5059
  vivi_9001684:
    set $P101, $P5057
  fallback1680:
    $P5060 = $P101."fresh_p"()
    set $P111, $P5060
    set $P5061, $P106
    iter $P5063, $P106
  for_next1685:
    unless $P5063, for_done1687
    shift $P5065, $P5063
  for_redo1686:
    .const 'Sub' $P5064 = 'cuid_332_1368096764.976' 
    capture_lex $P5064
    $P5061 = $P5064($P5065)
    goto for_next1685
  for_done1687:
.annotate 'line', 3096
    $P5069 = $P105."lexicals"()
    set $P5066, $P5069
    iter $P5068, $P5069
  for_next1688:
    unless $P5068, for_done1690
    shift $P5071, $P5068
  for_redo1689:
    .const 'Sub' $P5070 = 'cuid_333_1368096764.976' 
    capture_lex $P5070
    $P5066 = $P5070($P5071)
    goto for_next1688
  for_done1690:
    set $P5072, $P110
    iter $P5074, $P110
  for_next1691:
    unless $P5074, for_done1693
    shift $P5076, $P5074
  for_redo1692:
    .const 'Sub' $P5075 = 'cuid_334_1368096764.976' 
    capture_lex $P5075
    $P5072 = $P5075($P5076)
    goto for_next1691
  for_done1693:
.annotate 'line', 3102
    $P5080 = $P105."locals"()
    set $P5077, $P5080
    iter $P5079, $P5080
  for_next1694:
    unless $P5079, for_done1696
    shift $P5082, $P5079
  for_redo1695:
    .const 'Sub' $P5081 = 'cuid_335_1368096764.976' 
    capture_lex $P5081
    $P5077 = $P5081($P5082)
    goto for_next1694
  for_done1696:
.annotate 'line', 3107
    $P108."push"($P109)
.annotate 'line', 3110
    nqp_get_sc_object $P5083, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    $P5084 = $P5083."new"()
    store_lex "$sub", $P5084
    box $P5085, ""
    set $P112, $P5085
    new $P5094, 'ExceptionHandler'
    set_label $P5094, catch_handler_9051703
    $P5094.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5094
    find_dynamic_lex $P5086, "$*HLL"
    unless_null $P5086, fallback1697
    nqp_get_sc_object $P5088, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5087, $P5088
    set fb_tmp_264, $P5087
    repr_defined $I5004, fb_tmp_264
    unless $I5004 goto if901_else1698 
    set $P5089, fb_tmp_264["$HLL"]
    set $P5091, $P5089
    goto if901_end1699
  if901_else1698:
    null $P5090
    set $P5091, $P5090
  if901_end1699:
    unless_null $P5091, vivi_9021700
    nqp_get_sc_object $P5092, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5091, $P5092
  vivi_9021700:
    unless_null $P5091, vivi_9031701
    die "Contextual $*HLL not found"
    box $P5093, "Contextual $*HLL not found"
    set $P5091, $P5093
  vivi_9031701:
    set $P5086, $P5091
  fallback1697:
    set $P112, $P5086
    set $P5095, $P112
    pop_eh 
    goto skip_handler_9041702
  catch_handler_9051703:
    .get_results ($P5094) 
    set $I10001, 1
    set $P5094["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5094
    pop_upto_eh $P5094
    pop_eh 
    set $P5095, $P10001
    goto skip_handler_9041702
  skip_handler_9041702:
    unless $P112 goto if906_end1705 
.annotate 'line', 3113
.annotate 'line', 3114
    find_lex $P5096, "$sub"
    $P5097 = $P5096."hll"($P112)
  if906_end1705:
.annotate 'line', 3118
    find_lex $P5098, "$sub"
    $P5098."push"($P108)
    .const 'Sub' $P5099 = 'cuid_337_1368096764.976' 
    capture_lex $P5099
    $P5100 = $P5099()
.annotate 'line', 3135
    find_lex $P5101, "$sub"
    find_lex $P5102, "$node"
    $P5103 = $P5102."cuid"()
    $P5101."subid"($P5103)
.annotate 'line', 3136
    $P5104 = $P105."outer"()
    nqp_get_sc_object $P5105, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    type_check $I5005, $P5104, $P5105
    unless $I5005 goto if913_else1715 
.annotate 'line', 3137
    find_lex $P5106, "$sub"
    find_lex $P5108, "self"
    nqp_decontainerize $P5107, $P5108
    $P5109 = $P105."outer"()
    $P5110 = $P5109."qast"()
    $P5111 = $P5110."cuid"()
    $P5112 = $P5107."escape"($P5111)
    set $S5003, $P5112
    concat $S5002, ":anon :lex :outer(", $S5003
    concat $S5001, $S5002, ")"
    $P5113 = $P5106."pirflags"($S5001)
    goto if913_end1716
  if913_else1715:
.annotate 'line', 3139
.annotate 'line', 3140
    find_lex $P5114, "$sub"
    $P5115 = $P5114."pirflags"(":anon :lex")
  if913_end1716:
.annotate 'line', 3142
    find_lex $P5116, "$sub"
    find_lex $P5117, "$node"
    $P5118 = $P5117."name"()
    $P5116."name"($P5118)
.annotate 'line', 3145
    $P5119 = $P105."loadlibs"()
    set $P113, $P5119
    unless $P113 goto if914_end1718 
.annotate 'line', 3146
    find_lex $P5120, "$sub"
    $P5121 = $P5120."loadlibs"($P113)
  if914_end1718:
    find_dynamic_lex $P5122, "$*QAST_BLOCK_NO_CLOSE"
    unless_null $P5122, fallback1721
    nqp_get_sc_object $P5124, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5123, $P5124
    set fb_tmp_266, $P5123
    repr_defined $I5006, fb_tmp_266
    unless $I5006 goto if916_else1722 
    set $P5125, fb_tmp_266["$QAST_BLOCK_NO_CLOSE"]
    set $P5127, $P5125
    goto if916_end1723
  if916_else1722:
    null $P5126
    set $P5127, $P5126
  if916_end1723:
    unless_null $P5127, vivi_9171724
    nqp_get_sc_object $P5128, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5127, $P5128
  vivi_9171724:
    unless_null $P5127, vivi_9181725
    die "Contextual $*QAST_BLOCK_NO_CLOSE not found"
    box $P5129, "Contextual $*QAST_BLOCK_NO_CLOSE not found"
    set $P5127, $P5129
  vivi_9181725:
    set $P5122, $P5127
  fallback1721:
    set $P5132, $P5122
    if $P5122 goto unless915_end1720 
.annotate 'line', 3149
.annotate 'line', 3150
    find_lex $P5130, "$sub"
    $P5131 = $P5130."close_sub"()
    set $P5132, $P5131
  unless915_end1720:
    .return ($P5132) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_321_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2985
    .const 'Sub' $P5031 = 'cuid_320_1368096764.976' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_322_1368096764.976' 
    capture_lex $P5031 
    .lex "$*BLOCK", $P101 
    .lex "@*INNERS", $P102 
    .lex "$*HAVE_IMM_ARG", $P103 
    .lex "$*QAST_BLOCK_NO_CLOSE", $P104 
    .lex "$*WANT", $P105 
    .lex "$err", $P106 
    .local pmc fb_tmp_261 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    find_lex $P5007, "$block"
    set $P101, $P5007
    find_lex $P5008, "@inners"
    set $P102, $P5008
    box $P5009, 0
    set $P103, $P5009
    box $P5010, 0
    set $P104, $P5010
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_8811634
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 2992
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_8791632
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2993
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    find_lex $P5020, "$node"
    $P5021 = $P5020."list"()
    $P5022 = $P5018."compile_all_the_stmts"($P5021)
    store_lex "$stmts", $P5022
    nqp_get_sc_object $P5023, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_8781631
  catch_handler_8791632:
    .get_results ($P5024) 
    .const 'Sub' $P10001 = 'cuid_320_1368096764.976' 
    capture_lex $P10001
    $P10001($P5024)
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10002
    goto skip_handler_8781631
  skip_handler_8781631:
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_8801633
  catch_handler_8811634:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_8801633
  skip_handler_8801633:
    set $P5030, $P106
    unless $P106 goto if882_end1636 
    .const 'Sub' $P5028 = 'cuid_322_1368096764.976' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if882_end1636:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_320_1368096764.976") :anon :lex :outer("cuid_321_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2994
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    store_lex "$err", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_322_1368096764.976") :anon :lex :outer("cuid_321_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2996
    .lex "$source", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 2997
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5002."source_for_node"($P5004)
    set $P101, $P5005
.annotate 'line', 2998
    find_lex $P5006, "$node"
    $P5007 = $P5006."name"()
    set $S5003, $P5007
    concat $S5002, "Error while compiling block ", $S5003
    set $S5006, $P101
    concat $S5005, $S5006, ": "
    find_lex $P5008, "$err"
    set $S5007, $P5008
    concat $S5004, $S5005, $S5007
    concat $S5001, $S5002, $S5004
    box $P5009, $S5001
    die $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_325_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3010
    .const 'Sub' $P5030 = 'cuid_324_1368096764.976' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_326_1368096764.976' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_327_1368096764.976' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_329_1368096764.976' 
    capture_lex $P5030 
    .lex "@pos_params", $P101 
    .lex "@named_params", $P102 
    .lex "$slurpy_pos", $P103 
    .lex "$slurpy_named", $P104 
    .lex "@sorted_params", $P105 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
.annotate 'line', 3015
    find_lex $P5009, "$block"
    $P5010 = $P5009."params"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next1649:
    unless $P5008, for_done1651
    shift $P5012, $P5008
  for_redo1650:
    .const 'Sub' $P5011 = 'cuid_324_1368096764.976' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next1649
  for_done1651:
    set $P5013, $P101
    iter $P5015, $P101
    new $P5017, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5017, for_handlers1652
    push_eh $P5017
  for_next1653:
    unless $P5015, for_done1655
    shift $P5018, $P5015
  for_redo1654:
    .const 'Sub' $P5016 = 'cuid_326_1368096764.976' 
    capture_lex $P5016
    $P5013 = $P5016($P5018)
    goto for_next1653
  for_handlers1652:
    .get_results ($P5017)
    pop_upto_eh $P5017
    getattribute $P5017, $P5017, 'type'
    eq $P5017, .CONTROL_LOOP_NEXT, for_next1653
    eq $P5017, .CONTROL_LOOP_REDO, for_redo1654
  for_done1655:
    pop_eh 
    unless $P103 goto if889_end1657 
    push $P105, $P103
  if889_end1657:
    set $P5019, $P102
    iter $P5021, $P102
    new $P5023, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5023, for_handlers1658
    push_eh $P5023
  for_next1659:
    unless $P5021, for_done1661
    shift $P5024, $P5021
  for_redo1660:
    .const 'Sub' $P5022 = 'cuid_327_1368096764.976' 
    capture_lex $P5022
    $P5019 = $P5022($P5024)
    goto for_next1659
  for_handlers1658:
    .get_results ($P5023)
    pop_upto_eh $P5023
    getattribute $P5023, $P5023, 'type'
    eq $P5023, .CONTROL_LOOP_NEXT, for_next1659
    eq $P5023, .CONTROL_LOOP_REDO, for_redo1660
  for_done1661:
    pop_eh 
    unless $P104 goto if890_end1663 
    push $P105, $P104
  if890_end1663:
    set $P5025, $P105
    iter $P5027, $P105
  for_next1677:
    unless $P5027, for_done1679
    shift $P5029, $P5027
  for_redo1678:
    .const 'Sub' $P5028 = 'cuid_329_1368096764.976' 
    capture_lex $P5028
    $P5025 = $P5028($P5029)
    goto for_next1677
  for_done1679:
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_324_1368096764.976") :anon :lex :outer("cuid_325_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3015
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3016
    $P5001 = _lex_param_0."slurpy"()
    set $P5003, $P5001
    unless $P5001 goto if886_end1644 
    $P5002 = _lex_param_0."named"()
    set $P5003, $P5002
  if886_end1644:
    unless $P5003 goto if885_else1641 
    store_lex "$slurpy_named", _lex_param_0
    set $P5010, _lex_param_0
    goto if885_end1642
  if885_else1641:
.annotate 'line', 3019
    $P5004 = _lex_param_0."slurpy"()
    unless $P5004 goto if887_else1645 
    store_lex "$slurpy_pos", _lex_param_0
    set $P5009, _lex_param_0
    goto if887_end1646
  if887_else1645:
.annotate 'line', 3022
    $P5005 = _lex_param_0."named"()
    unless $P5005 goto if888_else1647 
    find_lex $P5006, "@named_params"
    push $P5006, _lex_param_0
    set $P5008, $P5006
    goto if888_end1648
  if888_else1647:
.annotate 'line', 3025
    find_lex $P5007, "@pos_params"
    push $P5007, _lex_param_0
    set $P5008, $P5007
  if888_end1648:
    set $P5009, $P5008
  if887_end1646:
    set $P5010, $P5009
  if885_end1642:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_326_1368096764.976") :anon :lex :outer("cuid_325_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@sorted_params"
    push $P5001, _lex_param_0
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_327_1368096764.976") :anon :lex :outer("cuid_325_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@sorted_params"
    push $P5001, _lex_param_0
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_329_1368096764.976") :anon :lex :outer("cuid_325_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3034
    .param pmc _lex_param_0 
    .const 'Sub' $P5033 = 'cuid_328_1368096764.976' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_331_1368096764.976' 
    capture_lex $P5033 
    .lex "@param", $P101 
    .lex "$reg_type", $P102 
    .lex "$_", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    box $P5004, ".param"
    push $P5003, $P5004
    set $P101, $P5003
.annotate 'line', 3038
    $P5005 = _lex_param_0."scope"()
    set $S5001, $P5005
    iseq $I5001, $S5001, "local"
    unless $I5001 goto if891_else1664 
.annotate 'line', 3039
    find_lex $P5006, "$block"
    $P5007 = _lex_param_0."name"()
    $P5008 = $P5006."local_type_long"($P5007)
    push $P101, $P5008
.annotate 'line', 3040
    $P5009 = _lex_param_0."name"()
    push $P101, $P5009
.annotate 'line', 3041
    find_lex $P5010, "$block"
    $P5011 = _lex_param_0."name"()
    $P5012 = $P5010."local_type"($P5011)
    set $P102, $P5012
    goto if891_end1665
  if891_else1664:
    .const 'Sub' $P5013 = 'cuid_328_1368096764.976' 
    capture_lex $P5013
    $P5014 = $P5013()
  if891_end1665:
.annotate 'line', 3051
    $P5015 = _lex_param_0."slurpy"()
    unless $P5015 goto if892_else1666 
    box $P5016, ":slurpy"
    push $P101, $P5016
.annotate 'line', 3053
    $P5017 = _lex_param_0."named"()
    set $P5019, $P5017
    unless $P5017 goto if893_end1669 
    box $P5018, ":named"
    push $P101, $P5018
    set $P5019, $P101
  if893_end1669:
    goto if892_end1667
  if892_else1666:
.annotate 'line', 3057
    $P5020 = _lex_param_0."named"()
    set $P5026, $P5020
    unless $P5020 goto if894_end1671 
.annotate 'line', 3058
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = _lex_param_0."named"()
    $P5024 = $P5021."escape"($P5023)
    set $S5004, $P5024
    concat $S5003, ":named(", $S5004
    concat $S5002, $S5003, ")"
    box $P5025, $S5002
    push $P101, $P5025
    set $P5026, $P101
  if894_end1671:
  if892_end1667:
.annotate 'line', 3061
    $P5027 = _lex_param_0."default"()
    unless $P5027 goto if895_else1672 
    .const 'Sub' $P5028 = 'cuid_331_1368096764.976' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5032, $P5029
    goto if895_end1673
  if895_else1672:
.annotate 'line', 3082
.annotate 'line', 3083
    find_lex $P5030, "$decls"
    join $S5005, " ", $P101
    $P5031 = $P5030."push_pirop"($S5005)
    set $P5032, $P5031
  if895_end1673:
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_328_1368096764.976") :anon :lex :outer("cuid_329_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3043
    .lex "$reg", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3044
    find_lex $P5002, "$block"
    find_lex $P5003, "$_"
    $P5004 = $P5003."name"()
    $P5005 = $P5002."lex_reg"($P5004)
    set $P101, $P5005
    find_lex $P5006, "@param"
.annotate 'line', 3045
    find_lex $P5007, "$block"
    find_lex $P5008, "$_"
    $P5009 = $P5008."name"()
    $P5010 = $P5007."lexical_type_long"($P5009)
    push $P5006, $P5010
    find_lex $P5011, "@param"
    push $P5011, $P101
    find_lex $P5012, "%lex_params"
.annotate 'line', 3047
    find_lex $P5013, "$_"
    $P5014 = $P5013."name"()
    set $S5001, $P5014
    set $P5012[$S5001], $P101
.annotate 'line', 3048
    find_lex $P5015, "$block"
    find_lex $P5016, "$_"
    $P5017 = $P5016."name"()
    $P5018 = $P5015."lexical_type"($P5017)
    store_lex "$reg_type", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_331_1368096764.976") :anon :lex :outer("cuid_329_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3061
    .const 'Sub' $P5026 = 'cuid_330_1368096764.976' 
    capture_lex $P5026 
    .lex "$o_flag", $P101 
    .lex "$lbl", $P102 
    .lex "$def", $P103 
    .local pmc fb_tmp_262 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    find_lex $P5004, "@param"
    box $P5005, ":optional"
    push $P5004, $P5005
.annotate 'line', 3064
    find_lex $P5006, "$decls"
    find_lex $P5007, "@param"
    join $S5001, " ", $P5007
    $P5006."push_pirop"($S5001)
.annotate 'line', 3067
    nqp_get_sc_object $P5008, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 12
    $P5009 = $P5008."unique"("haz_param")
    set $P101, $P5009
.annotate 'line', 3068
    find_lex $P5010, "$decls"
    set $S5004, $P101
    concat $S5003, ".param int ", $S5004
    concat $S5002, $S5003, " :opt_flag"
    $P5010."push_pirop"($S5002)
.annotate 'line', 3071
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5012 = $P5011."new"("default" :named("name"))
    set $P102, $P5012
    .const 'Sub' $P5013 = 'cuid_330_1368096764.976' 
    capture_lex $P5013
    $P5014 = $P5013()
.annotate 'line', 3077
    find_lex $P5015, "$opts"
    $P5015."push_pirop"("if", $P101, $P102)
.annotate 'line', 3078
    find_lex $P5016, "$opts"
    $P5016."push"($P103)
.annotate 'line', 3079
    find_lex $P5017, "$opts"
    find_lex $P5018, "@param"
    set fb_tmp_262, $P5018
    repr_defined $I5001, fb_tmp_262
    unless $I5001 goto if896_else1674 
    set $P5019, fb_tmp_262[2]
    set $P5021, $P5019
    goto if896_end1675
  if896_else1674:
    null $P5020
    set $P5021, $P5020
  if896_end1675:
    unless_null $P5021, vivi_8971676
    nqp_get_sc_object $P5022, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5021, $P5022
  vivi_8971676:
    $P5023 = $P103."result"()
    $P5017."push_pirop"("set", $P5021, $P5023)
.annotate 'line', 3080
    find_lex $P5024, "$opts"
    $P5025 = $P5024."push"($P102)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_330_1368096764.976") :anon :lex :outer("cuid_331_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3073
    .lex "$*BLOCK", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_lex $P5002, "$block"
    set $P101, $P5002
.annotate 'line', 3075
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$_"
    $P5006 = $P5005."default"()
    find_lex $P5007, "$reg_type"
    $P5008 = $P5003."as_post"($P5006, $P5007 :named("want"))
    store_lex "$def", $P5008
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_332_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3090
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3091
    find_lex $P5001, "$decls"
    find_lex $P5002, "$cap_lex_reg"
    set $S5005, $P5002
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    set $S5006, _lex_param_0
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5001."push_pirop"($S5001)
.annotate 'line', 3092
    find_lex $P5003, "$decls"
    find_lex $P5004, "$cap_lex_reg"
    set $S5008, $P5004
    concat $S5007, "capture_lex ", $S5008
    $P5005 = $P5003."push_pirop"($S5007)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_333_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3096
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3097
    find_lex $P5001, "$decls"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = _lex_param_0."name"()
    $P5005 = $P5002."escape"($P5004)
    set $S5004, $P5005
    concat $S5003, ".lex ", $S5004
    concat $S5002, $S5003, ", "
    find_lex $P5006, "$block"
    $P5007 = _lex_param_0."name"()
    $P5008 = $P5006."lex_reg"($P5007)
    set $S5005, $P5008
    concat $S5001, $S5002, $S5005
    $P5009 = $P5001."push_pirop"($S5001)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_334_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3099
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3100
    find_lex $P5001, "$decls"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = _lex_param_0."key"()
    $P5005 = $P5002."escape"($P5004)
    set $S5004, $P5005
    concat $S5003, ".lex ", $S5004
    concat $S5002, $S5003, ", "
    $P5006 = _lex_param_0."value"()
    set $S5005, $P5006
    concat $S5001, $S5002, $S5005
    $P5007 = $P5001."push_pirop"($S5001)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_335_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3102
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3103
    find_lex $P5001, "$decls"
    find_lex $P5002, "$block"
    $P5003 = _lex_param_0."name"()
    $P5004 = $P5002."local_type_long"($P5003)
    set $S5004, $P5004
    concat $S5003, ".local ", $S5004
    concat $S5002, $S5003, " "
    $P5005 = _lex_param_0."name"()
    set $S5005, $P5005
    concat $S5001, $S5002, $S5005
    $P5006 = $P5001."push_pirop"($S5001)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_337_1368096764.976") :anon :lex :outer("cuid_323_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3119
    .const 'Sub' $P5029 = 'cuid_336_1368096764.976' 
    capture_lex $P5029 
    .lex "$*BLOCK", $P101 
    .lex "$ret_type", $P102 
    .local pmc fb_tmp_265 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    find_lex $P5003, "$block"
    set $P101, $P5003
    box $P5004, "P"
    set $P102, $P5004
    new $P5010, 'ExceptionHandler'
    set_label $P5010, catch_handler_9081707
    $P5010.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5010
.annotate 'line', 3122
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    find_lex $P5007, "$stmts"
    $P5008 = $P5007."result"()
    $P5009 = $P5005."infer_type"($P5008)
    set $P102, $P5009
    set $P5011, $P102
    pop_eh 
    goto skip_handler_9071706
  catch_handler_9081707:
    .get_results ($P5010) 
    set $I10001, 1
    set $P5010["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5010
    pop_upto_eh $P5010
    pop_eh 
    set $P5011, $P10001
    goto skip_handler_9071706
  skip_handler_9071706:
    set $S5001, $P102
    isne $I5001, $S5001, "P"
    box $P5019, $I5001
    set $P5018, $P5019
    unless $I5001 goto if910_end1711 
    find_lex $P5012, "%hll_force_return_boxing"
    set fb_tmp_265, $P5012
    repr_defined $I5002, fb_tmp_265
    unless $I5002 goto if911_else1712 
    find_lex $P5014, "$hll"
    set $S5002, $P5014
    set $P5013, fb_tmp_265[$S5002]
    set $P5016, $P5013
    goto if911_end1713
  if911_else1712:
    null $P5015
    set $P5016, $P5015
  if911_end1713:
    unless_null $P5016, vivi_9121714
    nqp_get_sc_object $P5017, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5016, $P5017
  vivi_9121714:
    set $P5018, $P5016
  if910_end1711:
    unless $P5018 goto if909_else1708 
    .const 'Sub' $P5020 = 'cuid_336_1368096764.976' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5028, $P5021
    goto if909_end1709
  if909_else1708:
.annotate 'line', 3128
.annotate 'line', 3129
    find_lex $P5022, "$sub"
    find_lex $P5023, "$stmts"
    $P5022."push"($P5023)
.annotate 'line', 3130
    find_lex $P5024, "$sub"
    find_lex $P5025, "$stmts"
    $P5026 = $P5025."result"()
    set $S5005, $P5026
    concat $S5004, ".return (", $S5005
    concat $S5003, $S5004, ")"
    $P5027 = $P5024."push_pirop"($S5003)
    set $P5028, $P5027
  if909_end1709:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_336_1368096764.976") :anon :lex :outer("cuid_337_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3123
    .lex "$boxed", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3124
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$stmts"
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 3125
    find_lex $P5006, "$sub"
    $P5006."push"($P101)
.annotate 'line', 3126
    find_lex $P5007, "$sub"
    $P5008 = $P101."result"()
    set $S5003, $P5008
    concat $S5002, ".return (", $S5003
    concat $S5001, $S5002, ")"
    $P5009 = $P5007."push_pirop"($S5001)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_339_1368096764.976") :anon :lex :outer("cuid_98_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3164
    .const 'Sub' $P5061 = 'cuid_338_1368096764.976' 
    capture_lex $P5061 
    .lex "$breg", $P101 
    .lex "$rtype", $P102 
    .lex "$rreg", $P103 
    .lex "$im_arg", $P104 
    .local pmc fb_tmp_268 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
    .local pmc fb_tmp_271 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_9301743
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 3166
    find_dynamic_lex $P5005, "@*INNERS"
    unless_null $P5005, fallback1737
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_8, $P5006
    set fb_tmp_268, pkg_viv_tmp_8
    repr_defined $I5001, fb_tmp_268
    unless $I5001 goto if926_else1738 
    set $P5008, fb_tmp_268["@INNERS"]
    set $P5010, $P5008
    goto if926_end1739
  if926_else1738:
    null $P5009
    set $P5010, $P5009
  if926_end1739:
    unless_null $P5010, vivi_9271740
    new $P5011, 'ResizablePMCArray'
    set pkg_viv_tmp_8["@INNERS"], $P5011
    set $P5010, $P5011
  vivi_9271740:
    unless_null $P5010, vivi_9281741
    die "Contextual @*INNERS not found"
    box $P5012, "Contextual @*INNERS not found"
    set $P5010, $P5012
  vivi_9281741:
    set $P5005, $P5010
  fallback1737:
    find_lex $P5013, "$node"
    $P5014 = $P5013."cuid"()
    $P5015 = $P5005."push"($P5014)
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_9291742
  catch_handler_9301743:
    .get_results ($P5016) 
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10001
    goto skip_handler_9291742
  skip_handler_9291742:
.annotate 'line', 3167
    find_dynamic_lex $P5018, "$*REGALLOC"
    unless_null $P5018, fallback1744
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5019, $P5020
    set fb_tmp_269, $P5019
    repr_defined $I5002, fb_tmp_269
    unless $I5002 goto if931_else1745 
    set $P5021, fb_tmp_269["$REGALLOC"]
    set $P5023, $P5021
    goto if931_end1746
  if931_else1745:
    null $P5022
    set $P5023, $P5022
  if931_end1746:
    unless_null $P5023, vivi_9321747
    nqp_get_sc_object $P5024, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5023, $P5024
  vivi_9321747:
    unless_null $P5023, vivi_9331748
    die "Contextual $*REGALLOC not found"
    box $P5025, "Contextual $*REGALLOC not found"
    set $P5023, $P5025
  vivi_9331748:
    set $P5018, $P5023
  fallback1744:
    $P5026 = $P5018."fresh_p"()
    set $P101, $P5026
.annotate 'line', 3168
    find_lex $P5027, "$ops"
    set $S5005, $P101
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    find_lex $P5028, "$node"
    $P5029 = $P5028."cuid"()
    set $S5006, $P5029
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5027."push_pirop"($S5001)
.annotate 'line', 3169
    find_lex $P5030, "$ops"
    $P5030."push_pirop"("capture_lex", $P101)
.annotate 'line', 3172
    find_lex $P5031, "$node"
    $P5032 = $P5031."returns"()
    $P5033 = "&type_to_register_type"($P5032)
    set $S5008, $P5033
    downcase $S5007, $S5008
    box $P5034, $S5007
    set $P102, $P5034
.annotate 'line', 3173
    find_dynamic_lex $P5035, "$*REGALLOC"
    unless_null $P5035, fallback1749
    nqp_get_sc_object $P5037, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5036, $P5037
    set fb_tmp_270, $P5036
    repr_defined $I5003, fb_tmp_270
    unless $I5003 goto if934_else1750 
    set $P5038, fb_tmp_270["$REGALLOC"]
    set $P5040, $P5038
    goto if934_end1751
  if934_else1750:
    null $P5039
    set $P5040, $P5039
  if934_end1751:
    unless_null $P5040, vivi_9351752
    nqp_get_sc_object $P5041, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5040, $P5041
  vivi_9351752:
    unless_null $P5040, vivi_9361753
    die "Contextual $*REGALLOC not found"
    box $P5042, "Contextual $*REGALLOC not found"
    set $P5040, $P5042
  vivi_9361753:
    set $P5035, $P5040
  fallback1749:
    set $S5010, $P102
    concat $S5009, "fresh_", $S5010
    $P5043 = $P5035.$S5009()
    set $P103, $P5043
    box $P5044, 0
    set $P104, $P5044
    new $P5053, 'ExceptionHandler'
    set_label $P5053, catch_handler_9411760
    $P5053.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5053
    find_dynamic_lex $P5045, "$*HAVE_IMM_ARG"
    unless_null $P5045, fallback1754
    nqp_get_sc_object $P5047, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5046, $P5047
    set fb_tmp_271, $P5046
    repr_defined $I5004, fb_tmp_271
    unless $I5004 goto if937_else1755 
    set $P5048, fb_tmp_271["$HAVE_IMM_ARG"]
    set $P5050, $P5048
    goto if937_end1756
  if937_else1755:
    null $P5049
    set $P5050, $P5049
  if937_end1756:
    unless_null $P5050, vivi_9381757
    nqp_get_sc_object $P5051, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5050, $P5051
  vivi_9381757:
    unless_null $P5050, vivi_9391758
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5052, "Contextual $*HAVE_IMM_ARG not found"
    set $P5050, $P5052
  vivi_9391758:
    set $P5045, $P5050
  fallback1754:
    set $P104, $P5045
    set $P5054, $P104
    pop_eh 
    goto skip_handler_9401759
  catch_handler_9411760:
    .get_results ($P5053) 
    set $I10001, 1
    set $P5053["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5053
    pop_upto_eh $P5053
    pop_eh 
    set $P5054, $P10001
    goto skip_handler_9401759
  skip_handler_9401759:
    unless $P104 goto if942_else1761 
.annotate 'line', 3179
    .const 'Sub' $P5056 = 'cuid_338_1368096764.976' 
    capture_lex $P5056
    newclosure $P5055, $P5056
    store_dynamic_lex "$*IMM_ARG", $P5055
    goto if942_end1762
  if942_else1761:
.annotate 'line', 3184
.annotate 'line', 3185
    find_lex $P5057, "$ops"
    $P5058 = $P5057."push_pirop"("call", $P101, $P103 :named("result"))
  if942_end1762:
.annotate 'line', 3187
    find_lex $P5059, "$ops"
    $P5060 = $P5059."result"($P103)
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_338_1368096764.976") :anon :lex :outer("cuid_339_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3180
    .param pmc _lex_param_0 
    .lex "$arg", _lex_param_0 
.annotate 'line', 3181
    find_lex $P5001, "$ops"
    find_lex $P5002, "$breg"
    find_lex $P5003, "$rreg"
    $P5004 = $P5001."push_pirop"("call", $P5002, _lex_param_0, $P5003 :named("result"))
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_340_1368096764.976") :anon :lex :outer("cuid_98_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3189
    .lex "$breg", $P101 
    .local pmc fb_tmp_272 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_273 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5013, 'ExceptionHandler'
    set_label $P5013, catch_handler_9491773
    $P5013.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5013
.annotate 'line', 3191
    find_dynamic_lex $P5002, "@*INNERS"
    unless_null $P5002, fallback1767
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set pkg_viv_tmp_9, $P5003
    set fb_tmp_272, pkg_viv_tmp_9
    repr_defined $I5001, fb_tmp_272
    unless $I5001 goto if945_else1768 
    set $P5005, fb_tmp_272["@INNERS"]
    set $P5007, $P5005
    goto if945_end1769
  if945_else1768:
    null $P5006
    set $P5007, $P5006
  if945_end1769:
    unless_null $P5007, vivi_9461770
    new $P5008, 'ResizablePMCArray'
    set pkg_viv_tmp_9["@INNERS"], $P5008
    set $P5007, $P5008
  vivi_9461770:
    unless_null $P5007, vivi_9471771
    die "Contextual @*INNERS not found"
    box $P5009, "Contextual @*INNERS not found"
    set $P5007, $P5009
  vivi_9471771:
    set $P5002, $P5007
  fallback1767:
    find_lex $P5010, "$node"
    $P5011 = $P5010."cuid"()
    $P5012 = $P5002."push"($P5011)
    set $P5014, $P5012
    pop_eh 
    goto skip_handler_9481772
  catch_handler_9491773:
    .get_results ($P5013) 
    set $I10001, 1
    set $P5013["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5013
    pop_upto_eh $P5013
    pop_eh 
    set $P5014, $P10001
    goto skip_handler_9481772
  skip_handler_9481772:
.annotate 'line', 3192
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback1774
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5016, $P5017
    set fb_tmp_273, $P5016
    repr_defined $I5002, fb_tmp_273
    unless $I5002 goto if950_else1775 
    set $P5018, fb_tmp_273["$REGALLOC"]
    set $P5020, $P5018
    goto if950_end1776
  if950_else1775:
    null $P5019
    set $P5020, $P5019
  if950_end1776:
    unless_null $P5020, vivi_9511777
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_9511777:
    unless_null $P5020, vivi_9521778
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_9521778:
    set $P5015, $P5020
  fallback1774:
    $P5023 = $P5015."fresh_p"()
    set $P101, $P5023
.annotate 'line', 3193
    find_lex $P5024, "$ops"
    set $S5005, $P101
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    find_lex $P5025, "$node"
    $P5026 = $P5025."cuid"()
    set $S5006, $P5026
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5024."push_pirop"($S5001)
.annotate 'line', 3194
    find_lex $P5027, "$ops"
    $P5027."push_pirop"("capture_lex", $P101)
.annotate 'line', 3195
    find_lex $P5028, "$ops"
    $P5029 = $P5028."result"($P101)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_99_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3200
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_20 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_20, default1780
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5006
  default1780:
.annotate 'line', 3201
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = _lex_param_1."list"()
    $P5003 = _lex_param_1."resultchild"()
    $P5004 = _lex_param_1."node"()
    $P5005 = $P5001."compile_all_the_stmts"($P5002, $P5003, $P5004 :named("node"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_100_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3204
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_21 :opt_flag 
    .const 'Sub' $P5013 = 'cuid_341_1368096764.976' 
    capture_lex $P5013 
    .lex "$orig_reg", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_274 
    if haz_param_21, default1786
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5012
  default1786:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1781
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_274, $P5003
    repr_defined $I5001, fb_tmp_274
    unless $I5001 goto if953_else1782 
    set $P5005, fb_tmp_274["$REGALLOC"]
    set $P5007, $P5005
    goto if953_end1783
  if953_else1782:
    null $P5006
    set $P5007, $P5006
  if953_end1783:
    unless_null $P5007, vivi_9541784
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_9541784:
    unless_null $P5007, vivi_9551785
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_9551785:
    set $P5002, $P5007
  fallback1781:
    set $P101, $P5002
    .const 'Sub' $P5010 = 'cuid_341_1368096764.976' 
    capture_lex $P5010
    $P5011 = $P5010()
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_341_1368096764.976") :anon :lex :outer("cuid_100_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3206
    .lex "$*REGALLOC", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3207
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    find_lex $P5003, "$orig_reg"
    $P5004 = $P5002."new"($P5003)
    set $P101, $P5004
.annotate 'line', 3208
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    find_lex $P5007, "$node"
    $P5008 = $P5007."list"()
    find_lex $P5009, "$node"
    $P5010 = $P5009."resultchild"()
    find_lex $P5011, "$node"
    $P5012 = $P5011."node"()
    $P5013 = $P5005."compile_all_the_stmts"($P5008, $P5010, $P5012 :named("node"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "compile_all_the_stmts" :subid("cuid_101_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3212
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_22 :opt_flag 
    .param pmc _lex_param_3 :named("node") :optional 
    .param int haz_param_23 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_342_1368096764.976' 
    capture_lex $P5024 
    .lex "$last", $P101 
    .lex "$ops", $P102 
    .lex "$i", $I101 
    .lex "$n", $I102 
    .lex "$all_void", $P103 
    .lex "self", _lex_param_0 
    .lex "@stmts", _lex_param_1 
    .lex "$resultchild", _lex_param_2 
    .lex "$node", _lex_param_3 
    .local pmc fb_tmp_275 
    if haz_param_22, default1811
    nqp_get_sc_object $P5022, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5022
  default1811:
    if haz_param_23, default1812
    nqp_get_sc_object $P5023, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_3, $P5023
  default1812:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    set $I101, 0
    set $I102, 0
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3214
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5005 = $P5004."new"()
    set $P102, $P5005
    unless _lex_param_3 goto if956_end1788 
.annotate 'line', 3215
    $P5006 = $P102."node"(_lex_param_3)
  if956_end1788:
    set $I101, 0
    set $N5001, _lex_param_1
    set $I5001, $N5001
    set $I102, $I5001
    find_dynamic_lex $P5007, "$*WANT"
    unless_null $P5007, fallback1789
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set fb_tmp_275, $P5008
    repr_defined $I5003, fb_tmp_275
    unless $I5003 goto if957_else1790 
    set $P5010, fb_tmp_275["$WANT"]
    set $P5012, $P5010
    goto if957_end1791
  if957_else1790:
    null $P5011
    set $P5012, $P5011
  if957_end1791:
    unless_null $P5012, vivi_9581792
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_9581792:
    unless_null $P5012, vivi_9591793
    die "Contextual $*WANT not found"
    box $P5014, "Contextual $*WANT not found"
    set $P5012, $P5014
  vivi_9591793:
    set $P5007, $P5012
  fallback1789:
    set $S5001, $P5007
    iseq $I5002, $S5001, "v"
    box $P5015, $I5002
    set $P103, $P5015
    defined $I5004, _lex_param_2
    if $I5004 goto unless960_end1795 
.annotate 'line', 3219
    set $N5003, $I102
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    box $P5016, $N5002
    set _lex_param_2, $P5016
  unless960_end1795:
    set $P5017, _lex_param_1
    iter $P5019, _lex_param_1
  for_next1808:
    unless $P5019, for_done1810
    shift $P5021, $P5019
  for_redo1809:
    .const 'Sub' $P5020 = 'cuid_342_1368096764.976' 
    capture_lex $P5020
    $P5017 = $P5020($P5021)
    goto for_next1808
  for_done1810:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_342_1368096764.976") :anon :lex :outer("cuid_101_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3222
    .param pmc _lex_param_0 
    .lex "$void", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_lex $P5002, "$all_void"
    set $P5004, $P5002
    if $P5002 goto unless961_end1797 
    find_lex $I5002, "$i"
    set $N5001, $I5002
    find_lex $P5003, "$resultchild"
    set $N5002, $P5003
    isne $I5001, $N5001, $N5002
    box $P5005, $I5001
    set $P5004, $P5005
  unless961_end1797:
    set $P101, $P5004
    unless $P101 goto if962_else1798 
.annotate 'line', 3224
    nqp_get_sc_object $P5006, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 66
    type_check $I5003, _lex_param_0, $P5006
    unless $I5003 goto if963_end1801 
.annotate 'line', 3225
.annotate 'line', 3226
    $P5007 = "&want"(_lex_param_0, "v")
    set _lex_param_0, $P5007
  if963_end1801:
.annotate 'line', 3228
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."as_post"(_lex_param_0, "v" :named("want"))
    store_lex "$last", $P5010
    goto if962_end1799
  if962_else1798:
.annotate 'line', 3230
.annotate 'line', 3231
    find_lex $P5012, "self"
    nqp_decontainerize $P5011, $P5012
    $P5013 = $P5011."as_post"(_lex_param_0)
    store_lex "$last", $P5013
  if962_end1799:
    set $P5015, $P101
    unless $P101 goto if965_end1805 
    nqp_get_sc_object $P5014, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    type_check $I5004, _lex_param_0, $P5014
    box $P5016, $I5004
    set $P5015, $P5016
  if965_end1805:
    if $P5015 goto unless964_end1803 
.annotate 'line', 3233
    find_lex $P5017, "$ops"
    find_lex $P5018, "$last"
    $P5019 = $P5017."push"($P5018)
  unless964_end1803:
    find_lex $P5020, "$resultchild"
    set $N5003, $P5020
    find_lex $I5006, "$i"
    set $N5004, $I5006
    iseq $I5005, $N5003, $N5004
    unless $I5005 goto if966_end1807 
.annotate 'line', 3235
.annotate 'line', 3236
    find_lex $P5021, "$ops"
    find_lex $P5022, "$last"
    $P5023 = $P5022."result"()
    $P5024 = $P5021."result"($P5023)
  if966_end1807:
    find_lex $I5007, "$i"
    set $N5006, $I5007
    set $N5007, 1
    add $N5005, $N5006, $N5007
    set $I5008, $N5005
    store_lex "$i", $I5008
    .return ($I5008) 
.end
.HLL "nqp"
.namespace []
.sub "apply_context" :subid("cuid_102_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3243
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$type", _lex_param_2 
    nqp_get_sc_object $P5001, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 66
    type_check $I5001, _lex_param_1, $P5001
    unless $I5001 goto if967_else1813 
.annotate 'line', 3245
    $P5002 = "&want"(_lex_param_1, _lex_param_2)
    set $P5003, $P5002
    goto if967_end1814
  if967_else1813:
    set $P5003, _lex_param_1
  if967_end1814:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_103_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3260
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_24 :opt_flag 
    .const 'Sub' $P5026 = 'cuid_343_1368096764.976' 
    capture_lex $P5026 
    .const 'Sub' $P5026 = 'cuid_344_1368096764.976' 
    capture_lex $P5026 
    .lex "$hll", $P101 
    .lex "$result", $P102 
    .lex "$err", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_276 
    if haz_param_24, default1828
    nqp_get_sc_object $P5025, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5025
  default1828:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    box $P5004, ""
    set $P101, $P5004
    new $P5013, 'ExceptionHandler'
    set_label $P5013, catch_handler_9721821
    $P5013.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5013
    find_dynamic_lex $P5005, "$*HLL"
    unless_null $P5005, fallback1815
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set fb_tmp_276, $P5006
    repr_defined $I5001, fb_tmp_276
    unless $I5001 goto if968_else1816 
    set $P5008, fb_tmp_276["$HLL"]
    set $P5010, $P5008
    goto if968_end1817
  if968_else1816:
    null $P5009
    set $P5010, $P5009
  if968_end1817:
    unless_null $P5010, vivi_9691818
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_9691818:
    unless_null $P5010, vivi_9701819
    die "Contextual $*HLL not found"
    box $P5012, "Contextual $*HLL not found"
    set $P5010, $P5012
  vivi_9701819:
    set $P5005, $P5010
  fallback1815:
    set $P101, $P5005
    set $P5014, $P101
    pop_eh 
    goto skip_handler_9711820
  catch_handler_9721821:
    .get_results ($P5013) 
    set $I10001, 1
    set $P5013["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5013
    pop_upto_eh $P5013
    pop_eh 
    set $P5014, $P10001
    goto skip_handler_9711820
  skip_handler_9711820:
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_9761825
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
.annotate 'line', 3265
    new $P5019, 'ExceptionHandler'
    set_label $P5019, catch_handler_9741823
    $P5019.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5019
.annotate 'line', 3266
    nqp_get_sc_object $P5015, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5015."compile_op"($P5016, $P101, _lex_param_1)
    set $P102, $P5017
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5018
    pop_eh 
    goto skip_handler_9731822
  catch_handler_9741823:
    .get_results ($P5019) 
    .const 'Sub' $P10001 = 'cuid_343_1368096764.976' 
    capture_lex $P10001
    $P10001($P5019)
    set $I10001, 1
    set $P5019["handled"], $I10001
    nqp_get_sc_object $P10002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5019
    pop_upto_eh $P5019
    pop_eh 
    set $P5020, $P10002
    goto skip_handler_9731822
  skip_handler_9731822:
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_9751824
  catch_handler_9761825:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_9751824
  skip_handler_9751824:
    unless $P103 goto if977_end1827 
    .const 'Sub' $P5023 = 'cuid_344_1368096764.976' 
    capture_lex $P5023
    $P5024 = $P5023()
  if977_end1827:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_343_1368096764.976") :anon :lex :outer("cuid_103_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3267
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    store_lex "$err", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_344_1368096764.976") :anon :lex :outer("cuid_103_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3269
    .lex "$source", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3270
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5002."source_for_node"($P5004)
    set $P101, $P5005
.annotate 'line', 3271
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5003, $P5007
    concat $S5002, "Error while compiling op ", $S5003
    set $S5006, $P101
    concat $S5005, $S5006, ": "
    find_lex $P5008, "$err"
    set $S5007, $P5008
    concat $S5004, $S5005, $S5007
    concat $S5001, $S5002, $S5004
    box $P5009, $S5001
    die $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_104_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3276
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_25 :opt_flag 
    .const 'Sub' $P5037 = 'cuid_346_1368096764.976' 
    capture_lex $P5037 
    .const 'Sub' $P5037 = 'cuid_347_1368096764.976' 
    capture_lex $P5037 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_278 
    if haz_param_25, default1857
    nqp_get_sc_object $P5036, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5036
  default1857:
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_1829
    .lex "RETURN", $P101
.annotate 'line', 3277
    $P5001 = _lex_param_1."supports"("parrot")
    unless $P5001 goto if978_else1831 
.annotate 'line', 3278
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_1."alternative"("parrot")
    $P5004 = $P5002."as_post"($P5003)
    $P5005 = "RETURN"($P5004)
    set $P5035, $P5005
    goto if978_end1832
  if978_else1831:
.annotate 'line', 3280
    $P5006 = _lex_param_1."supports"("pirop")
    unless $P5006 goto if979_else1833 
.annotate 'line', 3281
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    nqp_decontainerize $P5008, _lex_param_0
    $P5009 = _lex_param_1."alternative"("pirop")
    $P5010 = _lex_param_1."list"()
    $P5011 = $P5007."compile_pirop"($P5008, $P5009, $P5010)
    set $P5034, $P5011
    goto if979_end1834
  if979_else1833:
.annotate 'line', 3283
    $P5012 = _lex_param_1."supports"("pir")
    unless $P5012 goto if980_else1835 
    .const 'Sub' $P5013 = 'cuid_346_1368096764.976' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5033, $P5014
    goto if980_end1836
  if980_else1835:
.annotate 'line', 3297
    $P5015 = _lex_param_1."supports"("pirconst")
    unless $P5015 goto if986_else1846 
    .const 'Sub' $P5016 = 'cuid_347_1368096764.976' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5032, $P5017
    goto if986_end1847
  if986_else1846:
.annotate 'line', 3304
    $P5018 = _lex_param_1."supports"("loadlibs")
    unless $P5018 goto if988_else1850 
.annotate 'line', 3305
    find_dynamic_lex $P5019, "$*BLOCK"
    unless_null $P5019, fallback1852
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set fb_tmp_278, $P5020
    repr_defined $I5001, fb_tmp_278
    unless $I5001 goto if989_else1853 
    set $P5022, fb_tmp_278["$BLOCK"]
    set $P5024, $P5022
    goto if989_end1854
  if989_else1853:
    null $P5023
    set $P5024, $P5023
  if989_end1854:
    unless_null $P5024, vivi_9901855
    nqp_get_sc_object $P5025, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5024, $P5025
  vivi_9901855:
    unless_null $P5024, vivi_9911856
    die "Contextual $*BLOCK not found"
    box $P5026, "Contextual $*BLOCK not found"
    set $P5024, $P5026
  vivi_9911856:
    set $P5019, $P5024
  fallback1852:
    $P5027 = _lex_param_1."alternative"("loadlibs")
    $P5019."add_loadlibs"($P5027)
.annotate 'line', 3306
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5029 = $P5028."new"()
    set $P5031, $P5029
    goto if988_end1851
  if988_else1850:
.annotate 'line', 3308
    box $P5030, "To compile on the Parrot backend, QAST::VM must have an alternative 'parrot', 'pirop', 'pir', 'pircosnt' or 'loadlibs'"
    die $P5030
    set $P5031, $P5030
  if988_end1851:
    set $P5032, $P5031
  if986_end1847:
    set $P5033, $P5032
  if980_end1836:
    set $P5034, $P5033
  if979_end1834:
    set $P5035, $P5034
  if978_end1832:
    goto lexotic_1830
  lexotic_1829:
    .get_results ($P5035)
  lexotic_1830:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_346_1368096764.976") :anon :lex :outer("cuid_104_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3283
    .const 'Sub' $P5016 = 'cuid_345_1368096764.976' 
    capture_lex $P5016 
    .lex "$ops", $P101 
    .lex "$pir", $P102 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 3284
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3285
    find_lex $P5005, "$node"
    $P5006 = $P5005."node"()
    unless $P5006 goto if981_end1838 
    find_lex $P5007, "$node"
    $P5008 = $P5007."node"()
    $P5009 = $P101."node"($P5008)
  if981_end1838:
.annotate 'line', 3286
    find_lex $P5010, "$node"
    $P5011 = $P5010."alternative"("pir")
    set $P102, $P5011
    set $S5001, $P102
    index $I5002, $S5001, "%r", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if982_else1839 
    .const 'Sub' $P5012 = 'cuid_345_1368096764.976' 
    capture_lex $P5012
    $P5013 = $P5012()
    goto if982_end1840
  if982_else1839:
.annotate 'line', 3292
.annotate 'line', 3293
    $P5014 = $P101."push_pirop"("inline", $P102)
  if982_end1840:
    $P5015 = "RETURN"($P101)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_345_1368096764.976") :anon :lex :outer("cuid_346_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3287
    .lex "$reg", $P101 
    .local pmc fb_tmp_277 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3288
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1841
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_277, $P5003
    repr_defined $I5001, fb_tmp_277
    unless $I5001 goto if983_else1842 
    set $P5005, fb_tmp_277["$REGALLOC"]
    set $P5007, $P5005
    goto if983_end1843
  if983_else1842:
    null $P5006
    set $P5007, $P5006
  if983_end1843:
    unless_null $P5007, vivi_9841844
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_9841844:
    unless_null $P5007, vivi_9851845
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_9851845:
    set $P5002, $P5007
  fallback1841:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 3289
    find_lex $P5011, "$ops"
    find_lex $P5012, "$pir"
    $P5011."push_pirop"("inline", $P5012, $P101 :named("result"))
.annotate 'line', 3290
    find_lex $P5013, "$ops"
    $P5014 = $P5013."result"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_347_1368096764.976") :anon :lex :outer("cuid_104_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3297
    .lex "$ops", $P101 
    .lex "$name", $P102 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 3298
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3299
    find_lex $P5005, "$node"
    $P5006 = $P5005."node"()
    unless $P5006 goto if987_end1849 
    find_lex $P5007, "$node"
    $P5008 = $P5007."node"()
    $P5009 = $P101."node"($P5008)
  if987_end1849:
.annotate 'line', 3300
    find_lex $P5010, "$node"
    $P5011 = $P5010."alternative"("pirconst")
    set $P102, $P5011
.annotate 'line', 3301
    set $S5002, $P102
    concat $S5001, ".", $S5002
    $P101."result"($S5001)
    $P5012 = "RETURN"($P101)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_105_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3313
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_26 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_26, default1858
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5003
  default1858:
.annotate 'line', 3314
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."compile_var"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_106_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3317
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_27 :opt_flag 
    .const 'Sub' $P5020 = 'cuid_349_1368096764.976' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_350_1368096764.976' 
    capture_lex $P5020 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_279 
    if haz_param_27, default1878
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5019
  default1878:
    find_dynamic_lex $P5001, "$*BINDVAL"
    unless_null $P5001, fallback1861
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set fb_tmp_279, $P5002
    repr_defined $I5001, fb_tmp_279
    unless $I5001 goto if993_else1862 
    set $P5004, fb_tmp_279["$BINDVAL"]
    set $P5006, $P5004
    goto if993_end1863
  if993_else1862:
    null $P5005
    set $P5006, $P5005
  if993_end1863:
    unless_null $P5006, vivi_9941864
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_9941864:
    unless_null $P5006, vivi_9951865
    die "Contextual $*BINDVAL not found"
    box $P5008, "Contextual $*BINDVAL not found"
    set $P5006, $P5008
  vivi_9951865:
    set $P5001, $P5006
  fallback1861:
    unless $P5001 goto if992_else1859 
.annotate 'line', 3318
.annotate 'line', 3319
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."compile_var"(_lex_param_1)
    set $P5018, $P5010
    goto if992_end1860
  if992_else1859:
.annotate 'line', 3321
    $P5011 = _lex_param_1."scope"()
    set $S5001, $P5011
    isne $I5002, $S5001, "positional"
    set $I5004, $I5002
    unless $I5002 goto if997_end1869 
    $P5012 = _lex_param_1."scope"()
    set $S5002, $P5012
    isne $I5003, $S5002, "associative"
    set $I5004, $I5003
  if997_end1869:
    unless $I5004 goto if996_else1866 
    .const 'Sub' $P5013 = 'cuid_349_1368096764.976' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5017, $P5014
    goto if996_end1867
  if996_else1866:
    .const 'Sub' $P5015 = 'cuid_350_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5017, $P5016
  if996_end1867:
    set $P5018, $P5017
  if992_end1860:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_349_1368096764.976") :anon :lex :outer("cuid_106_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3321
    .const 'Sub' $P5017 = 'cuid_348_1368096764.976' 
    capture_lex $P5017 
    .lex "$post", $P101 
    .lex "$lbl", $P102 
    .lex "$result", $P103 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3322
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5004."compile_var"($P5006)
    set $P101, $P5007
.annotate 'line', 3323
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    $P5009 = $P5008."new"("fallback" :named("name"))
    set $P102, $P5009
.annotate 'line', 3324
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5011 = $P5010."new"($P101 :named("result"))
    set $P103, $P5011
.annotate 'line', 3325
    $P103."push"($P101)
.annotate 'line', 3326
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    $P5014 = $P5012."infer_type"($P101)
    set $S5002, $P5014
    downcase $S5001, $S5002
    iseq $I5001, $S5001, "p"
    unless $I5001 goto if998_end1871 
    .const 'Sub' $P5015 = 'cuid_348_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
  if998_end1871:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_348_1368096764.976") :anon :lex :outer("cuid_349_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3326
    .lex "$fbpost", $P101 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3327
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."fallback"()
    $P5006 = $P5002."as_post"($P5005, "P" :named("want"))
    set $P101, $P5006
.annotate 'line', 3328
    find_lex $P5007, "$result"
    find_lex $P5008, "$post"
    find_lex $P5009, "$lbl"
    $P5007."push_pirop"("unless_null", $P5008, $P5009)
.annotate 'line', 3329
    find_lex $P5010, "$result"
    $P5010."push"($P101)
.annotate 'line', 3330
    find_lex $P5011, "$result"
    find_lex $P5012, "$post"
    $P5011."push_pirop"("set", $P5012, $P101)
.annotate 'line', 3331
    find_lex $P5013, "$result"
    find_lex $P5014, "$lbl"
    $P5015 = $P5013."push"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_350_1368096764.976") :anon :lex :outer("cuid_106_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3335
    .lex "$fb_temp", $P101 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3336
    find_lex $P5002, "$node"
    $P5003 = $P5002."unique"("fb_tmp")
    set $P101, $P5003
.annotate 'line', 3337
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 3339
    nqp_get_sc_object $P5007, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 3341
    nqp_get_sc_object $P5008, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 3343
    nqp_get_sc_object $P5009, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
.annotate 'line', 3345
    nqp_get_sc_object $P5010, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5011 = $P5010."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5012, "$node"
    set fb_tmp_280, $P5012
    repr_defined $I5001, fb_tmp_280
    unless $I5001 goto if999_else1872 
    set $P5013, fb_tmp_280[0]
    set $P5015, $P5013
    goto if999_end1873
  if999_else1872:
    null $P5014
    set $P5015, $P5014
  if999_end1873:
    unless_null $P5015, vivi_10001874
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_10001874:
    $P5017 = $P5009."new"($P5011, $P5015, "bind" :named("op"))
    $P5018 = $P5008."new"($P5017, "isconcrete" :named("op"))
.annotate 'line', 3349
    nqp_get_sc_object $P5019, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
.annotate 'line', 3350
    find_lex $P5020, "$node"
    $P5021 = $P5020."scope"()
.annotate 'line', 3351
    nqp_get_sc_object $P5022, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 71
    $P5023 = $P5022."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5024, "$node"
    set fb_tmp_281, $P5024
    repr_defined $I5002, fb_tmp_281
    unless $I5002 goto if1001_else1875 
    set $P5025, fb_tmp_281[1]
    set $P5027, $P5025
    goto if1001_end1876
  if1001_else1875:
    null $P5026
    set $P5027, $P5026
  if1001_end1876:
    unless_null $P5027, vivi_10021877
    nqp_get_sc_object $P5028, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5027, $P5028
  vivi_10021877:
    $P5029 = $P5019."new"($P5023, $P5027, $P5021 :named("scope"))
.annotate 'line', 3354
    nqp_get_sc_object $P5030, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5031 = $P5030."new"("null" :named("op"))
    $P5032 = $P5007."new"($P5018, $P5029, $P5031, "if" :named("op"))
.annotate 'line', 3356
    find_lex $P5033, "$node"
    $P5034 = $P5033."fallback"()
    $P5035 = $P5006."new"($P5032, $P5034, "ifnull" :named("op"))
    $P5036 = $P5004."as_post"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "compile_var" :subid("cuid_107_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3361
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5155 = 'cuid_352_1368096764.976' 
    capture_lex $P5155 
    .const 'Sub' $P5155 = 'cuid_354_1368096764.976' 
    capture_lex $P5155 
    .const 'Sub' $P5155 = 'cuid_357_1368096764.976' 
    capture_lex $P5155 
    .const 'Sub' $P5155 = 'cuid_366_1368096764.976' 
    capture_lex $P5155 
    .lex "$scope", $P101 
    .lex "$decl", $P102 
    .lex "$name", $P103 
    .lex "$ops", $P104 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    .local pmc fb_tmp_313 
    .local pmc fb_tmp_314 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
.annotate 'line', 3362
    $P5005 = _lex_param_1."scope"()
    set $P101, $P5005
.annotate 'line', 3363
    $P5006 = _lex_param_1."decl"()
    set $P102, $P5006
    unless $P102 goto if1003_end1880 
.annotate 'line', 3367
    set $S5001, $P102
    iseq $I5001, $S5001, "param"
    unless $I5001 goto if1004_else1881 
.annotate 'line', 3370
    set $S5002, $P101
    iseq $I5002, $S5002, "local"
    set $I5004, $I5002
    if $I5002 goto unless1006_end1886 
    set $S5003, $P101
    iseq $I5003, $S5003, "lexical"
    set $I5004, $I5003
  unless1006_end1886:
    unless $I5004 goto if1005_else1883 
.annotate 'line', 3371
.annotate 'line', 3372
    find_dynamic_lex $P5007, "$*BLOCK"
    unless_null $P5007, fallback1887
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set fb_tmp_282, $P5008
    repr_defined $I5005, fb_tmp_282
    unless $I5005 goto if1007_else1888 
    set $P5010, fb_tmp_282["$BLOCK"]
    set $P5012, $P5010
    goto if1007_end1889
  if1007_else1888:
    null $P5011
    set $P5012, $P5011
  if1007_end1889:
    unless_null $P5012, vivi_10081890
    nqp_get_sc_object $P5013, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5012, $P5013
  vivi_10081890:
    unless_null $P5012, vivi_10091891
    die "Contextual $*BLOCK not found"
    box $P5014, "Contextual $*BLOCK not found"
    set $P5012, $P5014
  vivi_10091891:
    set $P5007, $P5012
  fallback1887:
    $P5015 = $P5007."add_param"(_lex_param_1)
    set $P5017, $P5015
    goto if1005_end1884
  if1005_else1883:
.annotate 'line', 3374
    set $S5006, $P101
    concat $S5005, "Parameter cannot have scope '", $S5006
    concat $S5004, $S5005, "'; use 'local' or 'lexical'"
    box $P5016, $S5004
    die $P5016
    set $P5017, $P5016
  if1005_end1884:
    set $P5074, $P5017
    goto if1004_end1882
  if1004_else1881:
    set $S5007, $P102
    iseq $I5006, $S5007, "var"
    unless $I5006 goto if1010_else1892 
.annotate 'line', 3378
    set $S5008, $P101
    iseq $I5007, $S5008, "local"
    unless $I5007 goto if1011_else1894 
.annotate 'line', 3379
.annotate 'line', 3380
    find_dynamic_lex $P5018, "$*BLOCK"
    unless_null $P5018, fallback1896
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5019, $P5020
    set fb_tmp_283, $P5019
    repr_defined $I5008, fb_tmp_283
    unless $I5008 goto if1012_else1897 
    set $P5021, fb_tmp_283["$BLOCK"]
    set $P5023, $P5021
    goto if1012_end1898
  if1012_else1897:
    null $P5022
    set $P5023, $P5022
  if1012_end1898:
    unless_null $P5023, vivi_10131899
    nqp_get_sc_object $P5024, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5023, $P5024
  vivi_10131899:
    unless_null $P5023, vivi_10141900
    die "Contextual $*BLOCK not found"
    box $P5025, "Contextual $*BLOCK not found"
    set $P5023, $P5025
  vivi_10141900:
    set $P5018, $P5023
  fallback1896:
    $P5026 = $P5018."add_local"(_lex_param_1)
    set $P5038, $P5026
    goto if1011_end1895
  if1011_else1894:
    set $S5009, $P101
    iseq $I5009, $S5009, "lexical"
    unless $I5009 goto if1015_else1901 
.annotate 'line', 3382
.annotate 'line', 3383
    find_dynamic_lex $P5027, "$*BLOCK"
    unless_null $P5027, fallback1903
    nqp_get_sc_object $P5029, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5028, $P5029
    set fb_tmp_284, $P5028
    repr_defined $I5010, fb_tmp_284
    unless $I5010 goto if1016_else1904 
    set $P5030, fb_tmp_284["$BLOCK"]
    set $P5032, $P5030
    goto if1016_end1905
  if1016_else1904:
    null $P5031
    set $P5032, $P5031
  if1016_end1905:
    unless_null $P5032, vivi_10171906
    nqp_get_sc_object $P5033, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5032, $P5033
  vivi_10171906:
    unless_null $P5032, vivi_10181907
    die "Contextual $*BLOCK not found"
    box $P5034, "Contextual $*BLOCK not found"
    set $P5032, $P5034
  vivi_10181907:
    set $P5027, $P5032
  fallback1903:
    $P5035 = $P5027."add_lexical"(_lex_param_1)
    set $P5037, $P5035
    goto if1015_end1902
  if1015_else1901:
.annotate 'line', 3385
    set $S5012, $P101
    concat $S5011, "Cannot declare variable with scope '", $S5012
    concat $S5010, $S5011, "'; use 'local' or 'lexical'"
    box $P5036, $S5010
    die $P5036
    set $P5037, $P5036
  if1015_end1902:
    set $P5038, $P5037
  if1011_end1895:
    set $P5073, $P5038
    goto if1010_end1893
  if1010_else1892:
    set $S5013, $P102
    iseq $I5011, $S5013, "static"
    unless $I5011 goto if1019_else1908 
.annotate 'line', 3389
    set $S5014, $P101
    isne $I5012, $S5014, "lexical"
    unless $I5012 goto if1020_end1911 
.annotate 'line', 3390
    box $P5039, "Can only use 'static' decl with scope 'lexical'"
    die $P5039
  if1020_end1911:
.annotate 'line', 3393
    find_dynamic_lex $P5040, "$*BLOCK"
    unless_null $P5040, fallback1912
    nqp_get_sc_object $P5042, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5041, $P5042
    set fb_tmp_285, $P5041
    repr_defined $I5013, fb_tmp_285
    unless $I5013 goto if1021_else1913 
    set $P5043, fb_tmp_285["$BLOCK"]
    set $P5045, $P5043
    goto if1021_end1914
  if1021_else1913:
    null $P5044
    set $P5045, $P5044
  if1021_end1914:
    unless_null $P5045, vivi_10221915
    nqp_get_sc_object $P5046, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5045, $P5046
  vivi_10221915:
    unless_null $P5045, vivi_10231916
    die "Contextual $*BLOCK not found"
    box $P5047, "Contextual $*BLOCK not found"
    set $P5045, $P5047
  vivi_10231916:
    set $P5040, $P5045
  fallback1912:
    $P5048 = $P5040."add_lexical"(_lex_param_1, 1 :named("is_static"))
    set $P5072, $P5048
    goto if1019_end1909
  if1019_else1908:
    set $S5015, $P102
    iseq $I5014, $S5015, "contvar"
    unless $I5014 goto if1024_else1917 
.annotate 'line', 3395
    set $S5016, $P101
    isne $I5015, $S5016, "lexical"
    unless $I5015 goto if1025_end1920 
.annotate 'line', 3396
    box $P5049, "Can only use 'contvar' decl with scope 'lexical'"
    die $P5049
  if1025_end1920:
.annotate 'line', 3399
    find_dynamic_lex $P5050, "$*BLOCK"
    unless_null $P5050, fallback1921
    nqp_get_sc_object $P5052, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5051, $P5052
    set fb_tmp_286, $P5051
    repr_defined $I5016, fb_tmp_286
    unless $I5016 goto if1026_else1922 
    set $P5053, fb_tmp_286["$BLOCK"]
    set $P5055, $P5053
    goto if1026_end1923
  if1026_else1922:
    null $P5054
    set $P5055, $P5054
  if1026_end1923:
    unless_null $P5055, vivi_10271924
    nqp_get_sc_object $P5056, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5055, $P5056
  vivi_10271924:
    unless_null $P5055, vivi_10281925
    die "Contextual $*BLOCK not found"
    box $P5057, "Contextual $*BLOCK not found"
    set $P5055, $P5057
  vivi_10281925:
    set $P5050, $P5055
  fallback1921:
    $P5058 = $P5050."add_lexical"(_lex_param_1, 1 :named("is_cont"))
    set $P5071, $P5058
    goto if1024_end1918
  if1024_else1917:
    set $S5017, $P102
    iseq $I5017, $S5017, "statevar"
    unless $I5017 goto if1029_else1926 
.annotate 'line', 3401
    set $S5018, $P101
    isne $I5018, $S5018, "lexical"
    unless $I5018 goto if1030_end1929 
.annotate 'line', 3402
    box $P5059, "Can only use 'statevar' decl with scope 'lexical'"
    die $P5059
  if1030_end1929:
.annotate 'line', 3405
    find_dynamic_lex $P5060, "$*BLOCK"
    unless_null $P5060, fallback1930
    nqp_get_sc_object $P5062, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5061, $P5062
    set fb_tmp_287, $P5061
    repr_defined $I5019, fb_tmp_287
    unless $I5019 goto if1031_else1931 
    set $P5063, fb_tmp_287["$BLOCK"]
    set $P5065, $P5063
    goto if1031_end1932
  if1031_else1931:
    null $P5064
    set $P5065, $P5064
  if1031_end1932:
    unless_null $P5065, vivi_10321933
    nqp_get_sc_object $P5066, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5065, $P5066
  vivi_10321933:
    unless_null $P5065, vivi_10331934
    die "Contextual $*BLOCK not found"
    box $P5067, "Contextual $*BLOCK not found"
    set $P5065, $P5067
  vivi_10331934:
    set $P5060, $P5065
  fallback1930:
    $P5068 = $P5060."add_lexical"(_lex_param_1, 1 :named("is_state"))
    set $P5070, $P5068
    goto if1029_end1927
  if1029_else1926:
.annotate 'line', 3407
    set $S5021, $P102
    concat $S5020, "Don't understand declaration type '", $S5021
    concat $S5019, $S5020, "'"
    box $P5069, $S5019
    die $P5069
    set $P5070, $P5069
  if1029_end1927:
    set $P5071, $P5070
  if1024_end1918:
    set $P5072, $P5071
  if1019_end1909:
    set $P5073, $P5072
  if1010_end1893:
    set $P5074, $P5073
  if1004_end1882:
  if1003_end1880:
.annotate 'line', 3414
    $P5075 = _lex_param_1."name"()
    set $P103, $P5075
    set $S5022, $P101
    iseq $I5020, $S5022, ""
    unless $I5020 goto if1034_end1936 
    .const 'Sub' $P5076 = 'cuid_352_1368096764.976' 
    capture_lex $P5076
    $P5077 = $P5076()
  if1034_end1936:
.annotate 'line', 3433
    nqp_get_sc_object $P5078, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5079 = $P5078."new"()
    set $P104, $P5079
.annotate 'line', 3434
    $P5080 = _lex_param_1."node"()
    unless $P5080 goto if1043_end1955 
    $P5081 = _lex_param_1."node"()
    $P5082 = $P104."node"($P5081)
  if1043_end1955:
    set $S5023, $P101
    iseq $I5021, $S5023, "local"
    unless $I5021 goto if1044_else1956 
.annotate 'line', 3435
.annotate 'line', 3436
    find_dynamic_lex $P5083, "$*BLOCK"
    unless_null $P5083, fallback1960
    nqp_get_sc_object $P5085, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5084, $P5085
    set fb_tmp_290, $P5084
    repr_defined $I5022, fb_tmp_290
    unless $I5022 goto if1046_else1961 
    set $P5086, fb_tmp_290["$BLOCK"]
    set $P5088, $P5086
    goto if1046_end1962
  if1046_else1961:
    null $P5087
    set $P5088, $P5087
  if1046_end1962:
    unless_null $P5088, vivi_10471963
    nqp_get_sc_object $P5089, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5088, $P5089
  vivi_10471963:
    unless_null $P5088, vivi_10481964
    die "Contextual $*BLOCK not found"
    box $P5090, "Contextual $*BLOCK not found"
    set $P5088, $P5090
  vivi_10481964:
    set $P5083, $P5088
  fallback1960:
    $P5091 = $P5083."local_type"($P103)
    unless $P5091 goto if1045_else1958 
    .const 'Sub' $P5092 = 'cuid_354_1368096764.976' 
    capture_lex $P5092
    $P5093 = $P5092($P5091)
    set $P5095, $P5093
    goto if1045_end1959
  if1045_else1958:
.annotate 'line', 3444
    set $S5026, $P103
    concat $S5025, "Cannot reference undeclared local '", $S5026
    concat $S5024, $S5025, "'"
    box $P5094, $S5024
    die $P5094
    set $P5095, $P5094
  if1045_end1959:
    goto if1044_end1957
  if1044_else1956:
    set $S5027, $P101
    iseq $I5023, $S5027, "lexical"
    set $I5025, $I5023
    if $I5023 goto unless1057_end1980 
    set $S5028, $P101
    iseq $I5024, $S5028, "contextual"
    set $I5025, $I5024
  unless1057_end1980:
    unless $I5025 goto if1056_else1977 
    .const 'Sub' $P5096 = 'cuid_357_1368096764.976' 
    capture_lex $P5096
    $P5097 = $P5096()
    set $P5154, $P5097
    goto if1056_end1978
  if1056_else1977:
    set $S5029, $P101
    iseq $I5026, $S5029, "attribute"
    unless $I5026 goto if1104_else2063 
    .const 'Sub' $P5098 = 'cuid_366_1368096764.976' 
    capture_lex $P5098
    $P5099 = $P5098()
    set $P5153, $P5099
    goto if1104_end2064
  if1104_else2063:
    set $S5030, $P101
    iseq $I5027, $S5030, "positional"
    unless $I5027 goto if1120_else2090 
.annotate 'line', 3538
.annotate 'line', 3539
    nqp_decontainerize $P5100, _lex_param_0
    find_dynamic_lex $P5101, "$*BINDVAL"
    unless_null $P5101, fallback2094
    nqp_get_sc_object $P5103, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5102, $P5103
    set fb_tmp_311, $P5102
    repr_defined $I5028, fb_tmp_311
    unless $I5028 goto if1122_else2095 
    set $P5104, fb_tmp_311["$BINDVAL"]
    set $P5106, $P5104
    goto if1122_end2096
  if1122_else2095:
    null $P5105
    set $P5106, $P5105
  if1122_end2096:
    unless_null $P5106, vivi_11232097
    nqp_get_sc_object $P5107, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5106, $P5107
  vivi_11232097:
    unless_null $P5106, vivi_11242098
    die "Contextual $*BINDVAL not found"
    box $P5108, "Contextual $*BINDVAL not found"
    set $P5106, $P5108
  vivi_11242098:
    set $P5101, $P5106
  fallback2094:
    unless $P5101 goto if1121_else2092 
.annotate 'line', 3540
    nqp_get_sc_object $P5109, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5110 = _lex_param_1."list"()
    find_dynamic_lex $P5111, "$*BINDVAL"
    unless_null $P5111, fallback2099
    nqp_get_sc_object $P5113, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5112, $P5113
    set fb_tmp_312, $P5112
    repr_defined $I5029, fb_tmp_312
    unless $I5029 goto if1125_else2100 
    set $P5114, fb_tmp_312["$BINDVAL"]
    set $P5116, $P5114
    goto if1125_end2101
  if1125_else2100:
    null $P5115
    set $P5116, $P5115
  if1125_end2101:
    unless_null $P5116, vivi_11262102
    nqp_get_sc_object $P5117, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5116, $P5117
  vivi_11262102:
    unless_null $P5116, vivi_11272103
    die "Contextual $*BINDVAL not found"
    box $P5118, "Contextual $*BINDVAL not found"
    set $P5116, $P5118
  vivi_11272103:
    set $P5111, $P5116
  fallback2099:
    $P5119 = $P5109."new"($P5110 :flat, $P5111, "positional_bind" :named("op"))
    set $P5123, $P5119
    goto if1121_end2093
  if1121_else2092:
.annotate 'line', 3541
    nqp_get_sc_object $P5120, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5121 = _lex_param_1."list"()
    $P5122 = $P5120."new"($P5121 :flat, "positional_get" :named("op"))
    set $P5123, $P5122
  if1121_end2093:
    $P5124 = $P5100."as_post_clear_bindval"($P5123)
    set $P104, $P5124
    set $P5152, $P104
    goto if1120_end2091
  if1120_else2090:
    set $S5031, $P101
    iseq $I5030, $S5031, "associative"
    unless $I5030 goto if1128_else2104 
.annotate 'line', 3543
.annotate 'line', 3544
    nqp_decontainerize $P5125, _lex_param_0
    find_dynamic_lex $P5126, "$*BINDVAL"
    unless_null $P5126, fallback2108
    nqp_get_sc_object $P5128, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5127, $P5128
    set fb_tmp_313, $P5127
    repr_defined $I5031, fb_tmp_313
    unless $I5031 goto if1130_else2109 
    set $P5129, fb_tmp_313["$BINDVAL"]
    set $P5131, $P5129
    goto if1130_end2110
  if1130_else2109:
    null $P5130
    set $P5131, $P5130
  if1130_end2110:
    unless_null $P5131, vivi_11312111
    nqp_get_sc_object $P5132, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5131, $P5132
  vivi_11312111:
    unless_null $P5131, vivi_11322112
    die "Contextual $*BINDVAL not found"
    box $P5133, "Contextual $*BINDVAL not found"
    set $P5131, $P5133
  vivi_11322112:
    set $P5126, $P5131
  fallback2108:
    unless $P5126 goto if1129_else2106 
.annotate 'line', 3545
    nqp_get_sc_object $P5134, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5135 = _lex_param_1."list"()
    find_dynamic_lex $P5136, "$*BINDVAL"
    unless_null $P5136, fallback2113
    nqp_get_sc_object $P5138, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5137, $P5138
    set fb_tmp_314, $P5137
    repr_defined $I5032, fb_tmp_314
    unless $I5032 goto if1133_else2114 
    set $P5139, fb_tmp_314["$BINDVAL"]
    set $P5141, $P5139
    goto if1133_end2115
  if1133_else2114:
    null $P5140
    set $P5141, $P5140
  if1133_end2115:
    unless_null $P5141, vivi_11342116
    nqp_get_sc_object $P5142, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5141, $P5142
  vivi_11342116:
    unless_null $P5141, vivi_11352117
    die "Contextual $*BINDVAL not found"
    box $P5143, "Contextual $*BINDVAL not found"
    set $P5141, $P5143
  vivi_11352117:
    set $P5136, $P5141
  fallback2113:
    $P5144 = $P5134."new"($P5135 :flat, $P5136, "associative_bind" :named("op"))
    set $P5148, $P5144
    goto if1129_end2107
  if1129_else2106:
.annotate 'line', 3546
    nqp_get_sc_object $P5145, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466", 83
    $P5146 = _lex_param_1."list"()
    $P5147 = $P5145."new"($P5146 :flat, "associative_get" :named("op"))
    set $P5148, $P5147
  if1129_end2107:
    $P5149 = $P5125."as_post_clear_bindval"($P5148)
    set $P104, $P5149
    set $P5151, $P104
    goto if1128_end2105
  if1128_else2104:
.annotate 'line', 3548
    set $S5034, $P101
    concat $S5033, "QAST::Var with scope '", $S5034
    concat $S5032, $S5033, "' NYI"
    box $P5150, $S5032
    die $P5150
    set $P5151, $P5150
  if1128_end2105:
    set $P5152, $P5151
  if1120_end2091:
    set $P5153, $P5152
  if1104_end2064:
    set $P5154, $P5153
  if1056_end1978:
  if1044_end1957:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_352_1368096764.976") :anon :lex :outer("cuid_107_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3415
    .const 'Sub' $P5020 = 'cuid_351_1368096764.976' 
    capture_lex $P5020 
    .lex "$cur_block", $P101 
    .local pmc fb_tmp_288 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1937
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_288, $P5003
    repr_defined $I5001, fb_tmp_288
    unless $I5001 goto if1035_else1938 
    set $P5005, fb_tmp_288["$BLOCK"]
    set $P5007, $P5005
    goto if1035_end1939
  if1035_else1938:
    null $P5006
    set $P5007, $P5006
  if1035_end1939:
    unless_null $P5007, vivi_10361940
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_10361940:
    unless_null $P5007, vivi_10371941
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10371941:
    set $P5002, $P5007
  fallback1937:
    set $P101, $P5002
  while1038_test1942:
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    type_check $I5002, $P101, $P5010
    box $P5014, $I5002
    set $P5013, $P5014
    unless $I5002 goto while1038_done1946 
  while1038_redo1944:
    .const 'Sub' $P5011 = 'cuid_351_1368096764.976' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5013, $P5012
    goto while1038_test1942 
  while1038_done1946:
    find_lex $P5015, "$scope"
    set $S5001, $P5015
    iseq $I5003, $S5001, ""
    box $P5019, $I5003
    set $P5018, $P5019
    unless $I5003 goto if1042_end1953 
.annotate 'line', 3427
    find_lex $P5016, "$name"
    set $S5004, $P5016
    concat $S5003, "No scope specified or locatable in the symbol table for '", $S5004
    concat $S5002, $S5003, "'"
    box $P5017, $S5002
    die $P5017
    set $P5018, $P5017
  if1042_end1953:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_351_1368096764.976") :anon :lex :outer("cuid_352_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3417
    .lex "%sym", $P101 
    .local pmc fb_tmp_289 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3418
    find_lex $P5002, "$cur_block"
    $P5003 = $P5002."qast"()
    find_lex $P5004, "$name"
    $P5005 = $P5003."symbol"($P5004)
    set $P101, $P5005
    unless $P101 goto if1039_else1947 
.annotate 'line', 3419
    set fb_tmp_289, $P101
    repr_defined $I5001, fb_tmp_289
    unless $I5001 goto if1040_else1949 
    set $P5006, fb_tmp_289["scope"]
    set $P5008, $P5006
    goto if1040_end1950
  if1040_else1949:
    null $P5007
    set $P5008, $P5007
  if1040_end1950:
    unless_null $P5008, vivi_10411951
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_10411951:
    store_lex "$scope", $P5008
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    store_lex "$cur_block", $P5010
    set $P5013, $P5010
    goto if1039_end1948
  if1039_else1947:
.annotate 'line', 3423
.annotate 'line', 3424
    find_lex $P5011, "$cur_block"
    $P5012 = $P5011."outer"()
    store_lex "$cur_block", $P5012
    set $P5013, $P5012
  if1039_end1948:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_354_1368096764.976") :anon :lex :outer("cuid_107_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3436
    .param pmc _lex_param_0 
    .const 'Sub' $P5014 = 'cuid_353_1368096764.976' 
    capture_lex $P5014 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_291 
    find_dynamic_lex $P5001, "$*BINDVAL"
    unless_null $P5001, fallback1967
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set fb_tmp_291, $P5002
    repr_defined $I5001, fb_tmp_291
    unless $I5001 goto if1050_else1968 
    set $P5004, fb_tmp_291["$BINDVAL"]
    set $P5006, $P5004
    goto if1050_end1969
  if1050_else1968:
    null $P5005
    set $P5006, $P5005
  if1050_end1969:
    unless_null $P5006, vivi_10511970
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_10511970:
    unless_null $P5006, vivi_10521971
    die "Contextual $*BINDVAL not found"
    box $P5008, "Contextual $*BINDVAL not found"
    set $P5006, $P5008
  vivi_10521971:
    set $P5001, $P5006
  fallback1967:
    unless $P5001 goto if1049_end1966 
    .const 'Sub' $P5009 = 'cuid_353_1368096764.976' 
    capture_lex $P5009
    $P5010 = $P5009()
  if1049_end1966:
.annotate 'line', 3442
    find_lex $P5011, "$ops"
    find_lex $P5012, "$name"
    $P5013 = $P5011."result"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_353_1368096764.976") :anon :lex :outer("cuid_354_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3437
    .lex "$valpost", $P101 
    .local pmc fb_tmp_292 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3438
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1972
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_292, $P5005
    repr_defined $I5001, fb_tmp_292
    unless $I5001 goto if1053_else1973 
    set $P5007, fb_tmp_292["$BINDVAL"]
    set $P5009, $P5007
    goto if1053_end1974
  if1053_else1973:
    null $P5008
    set $P5009, $P5008
  if1053_end1974:
    unless_null $P5009, vivi_10541975
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_10541975:
    unless_null $P5009, vivi_10551976
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10551976:
    set $P5004, $P5009
  fallback1972:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3439
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3440
    find_lex $P5015, "$ops"
    find_lex $P5016, "$name"
    $P5017 = $P101."result"()
    $P5018 = $P5015."push_pirop"("set", $P5016, $P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_357_1368096764.976") :anon :lex :outer("cuid_107_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3448
    .const 'Sub' $P5028 = 'cuid_356_1368096764.976' 
    capture_lex $P5028 
    .const 'Sub' $P5028 = 'cuid_360_1368096764.976' 
    capture_lex $P5028 
    .lex "%sym", $P101 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3451
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1981
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_293, $P5003
    repr_defined $I5001, fb_tmp_293
    unless $I5001 goto if1058_else1982 
    set $P5005, fb_tmp_293["$BLOCK"]
    set $P5007, $P5005
    goto if1058_end1983
  if1058_else1982:
    null $P5006
    set $P5007, $P5006
  if1058_end1983:
    unless_null $P5007, vivi_10591984
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_10591984:
    unless_null $P5007, vivi_10601985
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10601985:
    set $P5002, $P5007
  fallback1981:
    $P5010 = $P5002."qast"()
    find_lex $P5011, "$name"
    $P5012 = $P5010."symbol"($P5011)
    set $P101, $P5012
.annotate 'line', 3452
    find_dynamic_lex $P5013, "$*BLOCK"
    unless_null $P5013, fallback1988
    nqp_get_sc_object $P5015, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5014, $P5015
    set fb_tmp_294, $P5014
    repr_defined $I5002, fb_tmp_294
    unless $I5002 goto if1062_else1989 
    set $P5016, fb_tmp_294["$BLOCK"]
    set $P5018, $P5016
    goto if1062_end1990
  if1062_else1989:
    null $P5017
    set $P5018, $P5017
  if1062_end1990:
    unless_null $P5018, vivi_10631991
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5018, $P5019
  vivi_10631991:
    unless_null $P5018, vivi_10641992
    die "Contextual $*BLOCK not found"
    box $P5020, "Contextual $*BLOCK not found"
    set $P5018, $P5020
  vivi_10641992:
    set $P5013, $P5018
  fallback1988:
    find_lex $P5021, "$name"
    $P5022 = $P5013."lexical_type"($P5021)
    unless $P5022 goto if1061_else1986 
    .const 'Sub' $P5023 = 'cuid_356_1368096764.976' 
    capture_lex $P5023
    $P5024 = $P5023($P5022)
    set $P5027, $P5024
    goto if1061_end1987
  if1061_else1986:
    .const 'Sub' $P5025 = 'cuid_360_1368096764.976' 
    capture_lex $P5025
    $P5026 = $P5025()
    set $P5027, $P5026
  if1061_end1987:
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_356_1368096764.976") :anon :lex :outer("cuid_357_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3452
    .param pmc _lex_param_0 
    .const 'Sub' $P5024 = 'cuid_355_1368096764.976' 
    capture_lex $P5024 
    .lex "$reg", $P101 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3453
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1993
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_295, $P5003
    repr_defined $I5001, fb_tmp_295
    unless $I5001 goto if1065_else1994 
    set $P5005, fb_tmp_295["$BLOCK"]
    set $P5007, $P5005
    goto if1065_end1995
  if1065_else1994:
    null $P5006
    set $P5007, $P5006
  if1065_end1995:
    unless_null $P5007, vivi_10661996
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_10661996:
    unless_null $P5007, vivi_10671997
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10671997:
    set $P5002, $P5007
  fallback1993:
    find_lex $P5010, "$name"
    $P5011 = $P5002."lex_reg"($P5010)
    set $P101, $P5011
    find_dynamic_lex $P5012, "$*BINDVAL"
    unless_null $P5012, fallback2000
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5013, $P5014
    set fb_tmp_296, $P5013
    repr_defined $I5002, fb_tmp_296
    unless $I5002 goto if1069_else2001 
    set $P5015, fb_tmp_296["$BINDVAL"]
    set $P5017, $P5015
    goto if1069_end2002
  if1069_else2001:
    null $P5016
    set $P5017, $P5016
  if1069_end2002:
    unless_null $P5017, vivi_10702003
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_10702003:
    unless_null $P5017, vivi_10712004
    die "Contextual $*BINDVAL not found"
    box $P5019, "Contextual $*BINDVAL not found"
    set $P5017, $P5019
  vivi_10712004:
    set $P5012, $P5017
  fallback2000:
    unless $P5012 goto if1068_end1999 
    .const 'Sub' $P5020 = 'cuid_355_1368096764.976' 
    capture_lex $P5020
    $P5021 = $P5020()
  if1068_end1999:
.annotate 'line', 3459
    find_lex $P5022, "$ops"
    $P5023 = $P5022."result"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_355_1368096764.976") :anon :lex :outer("cuid_356_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3454
    .lex "$valpost", $P101 
    .local pmc fb_tmp_297 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3455
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback2005
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_297, $P5005
    repr_defined $I5001, fb_tmp_297
    unless $I5001 goto if1072_else2006 
    set $P5007, fb_tmp_297["$BINDVAL"]
    set $P5009, $P5007
    goto if1072_end2007
  if1072_else2006:
    null $P5008
    set $P5009, $P5008
  if1072_end2007:
    unless_null $P5009, vivi_10732008
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_10732008:
    unless_null $P5009, vivi_10742009
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10742009:
    set $P5004, $P5009
  fallback2005:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3456
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3457
    find_lex $P5015, "$ops"
    find_lex $P5016, "$reg"
    $P5017 = $P101."result"()
    $P5018 = $P5015."push_pirop"("set", $P5016, $P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_360_1368096764.976") :anon :lex :outer("cuid_357_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3461
    .const 'Sub' $P5035 = 'cuid_359_1368096764.976' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_361_1368096764.976' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_362_1368096764.976' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_363_1368096764.976' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_364_1368096764.976' 
    capture_lex $P5035 
    .lex "$type", $P101 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_303 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3463
    find_lex $P5002, "$node"
    $P5003 = $P5002."returns"()
    $P5004 = "&type_to_register_type"($P5003)
    set $P101, $P5004
    set $S5001, $P101
    iseq $I5001, $S5001, "P"
    unless $I5001 goto if1075_end2011 
    .const 'Sub' $P5005 = 'cuid_359_1368096764.976' 
    capture_lex $P5005
    $P5006 = $P5005()
  if1075_end2011:
    find_lex $P5007, "$scope"
    set $S5002, $P5007
    iseq $I5002, $S5002, "lexical"
    unless $I5002 goto if1083_else2027 
.annotate 'line', 3480
    find_dynamic_lex $P5008, "$*BINDVAL"
    unless_null $P5008, fallback2031
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5009, $P5010
    set fb_tmp_300, $P5009
    repr_defined $I5003, fb_tmp_300
    unless $I5003 goto if1085_else2032 
    set $P5011, fb_tmp_300["$BINDVAL"]
    set $P5013, $P5011
    goto if1085_end2033
  if1085_else2032:
    null $P5012
    set $P5013, $P5012
  if1085_end2033:
    unless_null $P5013, vivi_10862034
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_10862034:
    unless_null $P5013, vivi_10872035
    die "Contextual $*BINDVAL not found"
    box $P5015, "Contextual $*BINDVAL not found"
    set $P5013, $P5015
  vivi_10872035:
    set $P5008, $P5013
  fallback2031:
    unless $P5008 goto if1084_else2029 
    .const 'Sub' $P5016 = 'cuid_361_1368096764.976' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5020, $P5017
    goto if1084_end2030
  if1084_else2029:
    .const 'Sub' $P5018 = 'cuid_362_1368096764.976' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5020, $P5019
  if1084_end2030:
    set $P5034, $P5020
    goto if1083_end2028
  if1083_else2027:
.annotate 'line', 3493
    find_dynamic_lex $P5021, "$*BINDVAL"
    unless_null $P5021, fallback2048
    nqp_get_sc_object $P5023, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5022, $P5023
    set fb_tmp_303, $P5022
    repr_defined $I5004, fb_tmp_303
    unless $I5004 goto if1095_else2049 
    set $P5024, fb_tmp_303["$BINDVAL"]
    set $P5026, $P5024
    goto if1095_end2050
  if1095_else2049:
    null $P5025
    set $P5026, $P5025
  if1095_end2050:
    unless_null $P5026, vivi_10962051
    nqp_get_sc_object $P5027, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5026, $P5027
  vivi_10962051:
    unless_null $P5026, vivi_10972052
    die "Contextual $*BINDVAL not found"
    box $P5028, "Contextual $*BINDVAL not found"
    set $P5026, $P5028
  vivi_10972052:
    set $P5021, $P5026
  fallback2048:
    unless $P5021 goto if1094_else2046 
    .const 'Sub' $P5029 = 'cuid_363_1368096764.976' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5033, $P5030
    goto if1094_end2047
  if1094_else2046:
    .const 'Sub' $P5031 = 'cuid_364_1368096764.976' 
    capture_lex $P5031
    $P5032 = $P5031()
    set $P5033, $P5032
  if1094_end2047:
    set $P5034, $P5033
  if1083_end2028:
    .return ($P5034) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_359_1368096764.976") :anon :lex :outer("cuid_360_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3464
    .const 'Sub' $P5015 = 'cuid_358_1368096764.976' 
    capture_lex $P5015 
    .lex "$cur_block", $P101 
    .local pmc fb_tmp_298 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback2012
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_298, $P5003
    repr_defined $I5001, fb_tmp_298
    unless $I5001 goto if1076_else2013 
    set $P5005, fb_tmp_298["$BLOCK"]
    set $P5007, $P5005
    goto if1076_end2014
  if1076_else2013:
    null $P5006
    set $P5007, $P5006
  if1076_end2014:
    unless_null $P5007, vivi_10772015
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_10772015:
    unless_null $P5007, vivi_10782016
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10782016:
    set $P5002, $P5007
  fallback2012:
    set $P101, $P5002
  while1079_test2017:
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    type_check $I5002, $P101, $P5010
    box $P5014, $I5002
    set $P5013, $P5014
    unless $I5002 goto while1079_done2021 
  while1079_redo2019:
    .const 'Sub' $P5011 = 'cuid_358_1368096764.976' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5013, $P5012
    goto while1079_test2017 
  while1079_done2021:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_358_1368096764.976") :anon :lex :outer("cuid_359_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3467
    .lex "%sym", $P101 
    .local pmc fb_tmp_299 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3468
    find_lex $P5002, "$cur_block"
    $P5003 = $P5002."qast"()
    find_lex $P5004, "$name"
    $P5005 = $P5003."symbol"($P5004)
    set $P101, $P5005
    unless $P101 goto if1080_else2022 
.annotate 'line', 3469
.annotate 'line', 3470
    set fb_tmp_299, $P101
    repr_defined $I5001, fb_tmp_299
    unless $I5001 goto if1081_else2024 
    set $P5006, fb_tmp_299["type"]
    set $P5008, $P5006
    goto if1081_end2025
  if1081_else2024:
    null $P5007
    set $P5008, $P5007
  if1081_end2025:
    unless_null $P5008, vivi_10822026
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_10822026:
    $P5010 = "&type_to_register_type"($P5008)
    store_lex "$type", $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    store_lex "$cur_block", $P5011
    set $P5014, $P5011
    goto if1080_end2023
  if1080_else2022:
.annotate 'line', 3473
.annotate 'line', 3474
    find_lex $P5012, "$cur_block"
    $P5013 = $P5012."outer"()
    store_lex "$cur_block", $P5013
    set $P5014, $P5013
  if1080_end2023:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_361_1368096764.976") :anon :lex :outer("cuid_360_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3481
    .lex "$valpost", $P101 
    .local pmc fb_tmp_301 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3482
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback2036
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_301, $P5005
    repr_defined $I5001, fb_tmp_301
    unless $I5001 goto if1088_else2037 
    set $P5007, fb_tmp_301["$BINDVAL"]
    set $P5009, $P5007
    goto if1088_end2038
  if1088_else2037:
    null $P5008
    set $P5009, $P5008
  if1088_end2038:
    unless_null $P5009, vivi_10892039
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_10892039:
    unless_null $P5009, vivi_10902040
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10902040:
    set $P5004, $P5009
  fallback2036:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3483
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3484
    find_lex $P5015, "$ops"
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    find_lex $P5018, "$node"
    $P5019 = $P5018."name"()
    $P5020 = $P5016."escape"($P5019)
    $P5021 = $P101."result"()
    $P5015."push_pirop"("store_lex", $P5020, $P5021)
.annotate 'line', 3485
    find_lex $P5022, "$ops"
    $P5023 = $P101."result"()
    $P5024 = $P5022."result"($P5023)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_362_1368096764.976") :anon :lex :outer("cuid_360_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3487
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3488
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback2041
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_302, $P5004
    repr_defined $I5001, fb_tmp_302
    unless $I5001 goto if1091_else2042 
    set $P5006, fb_tmp_302["$REGALLOC"]
    set $P5008, $P5006
    goto if1091_end2043
  if1091_else2042:
    null $P5007
    set $P5008, $P5007
  if1091_end2043:
    unless_null $P5008, vivi_10922044
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_10922044:
    unless_null $P5008, vivi_10932045
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_10932045:
    set $P5003, $P5008
  fallback2041:
    find_lex $P5002, "$type"
    set $S5003, $P5002
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 3489
    find_lex $P5012, "$ops"
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    find_lex $P5015, "$node"
    $P5016 = $P5015."name"()
    $P5017 = $P5013."escape"($P5016)
    $P5012."push_pirop"("find_lex", $P101, $P5017)
.annotate 'line', 3490
    find_lex $P5018, "$ops"
    $P5019 = $P5018."result"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_363_1368096764.976") :anon :lex :outer("cuid_360_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3494
    .lex "$valpost", $P101 
    .local pmc fb_tmp_304 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3495
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback2053
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_304, $P5005
    repr_defined $I5001, fb_tmp_304
    unless $I5001 goto if1098_else2054 
    set $P5007, fb_tmp_304["$BINDVAL"]
    set $P5009, $P5007
    goto if1098_end2055
  if1098_else2054:
    null $P5008
    set $P5009, $P5008
  if1098_end2055:
    unless_null $P5009, vivi_10992056
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_10992056:
    unless_null $P5009, vivi_11002057
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_11002057:
    set $P5004, $P5009
  fallback2053:
    $P5012 = $P5002."as_post_clear_bindval"($P5004, "P" :named("want"))
    set $P101, $P5012
.annotate 'line', 3496
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3497
    find_lex $P5014, "$ops"
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$name"
    $P5018 = $P5015."escape"($P5017)
    $P5019 = $P101."result"()
    $P5014."push_pirop"("store_dynamic_lex", $P5018, $P5019)
.annotate 'line', 3498
    find_lex $P5020, "$ops"
    $P5021 = $P101."result"()
    $P5022 = $P5020."result"($P5021)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_364_1368096764.976") :anon :lex :outer("cuid_360_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3500
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_305 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3501
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback2058
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5003, $P5004
    set fb_tmp_305, $P5003
    repr_defined $I5001, fb_tmp_305
    unless $I5001 goto if1101_else2059 
    set $P5005, fb_tmp_305["$REGALLOC"]
    set $P5007, $P5005
    goto if1101_end2060
  if1101_else2059:
    null $P5006
    set $P5007, $P5006
  if1101_end2060:
    unless_null $P5007, vivi_11022061
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5008
  vivi_11022061:
    unless_null $P5007, vivi_11032062
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_11032062:
    set $P5002, $P5007
  fallback2058:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 3502
    find_lex $P5011, "$ops"
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$name"
    $P5015 = $P5012."escape"($P5014)
    $P5011."push_pirop"("find_dynamic_lex", $P101, $P5015)
.annotate 'line', 3503
    find_lex $P5016, "$ops"
    $P5017 = $P5016."result"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_366_1368096764.976") :anon :lex :outer("cuid_107_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3508
    .const 'Sub' $P5044 = 'cuid_365_1368096764.976' 
    capture_lex $P5044 
    .const 'Sub' $P5044 = 'cuid_367_1368096764.976' 
    capture_lex $P5044 
    .lex "@args", $P101 
    .lex "$obj", $P102 
    .lex "$han", $P103 
    .lex "$type", $P104 
    .lex "$op_type", $P105 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
.annotate 'line', 3510
    find_lex $P5006, "$node"
    $P5007 = $P5006."list"()
    set $P101, $P5007
    set $N5001, $P101
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if1105_end2066 
.annotate 'line', 3511
    box $P5008, "An attribute lookup needs an object and a class handle"
    die $P5008
  if1105_end2066:
.annotate 'line', 3516
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    set fb_tmp_306, $P101
    repr_defined $I5002, fb_tmp_306
    unless $I5002 goto if1106_else2067 
    set $P5011, fb_tmp_306[0]
    set $P5013, $P5011
    goto if1106_end2068
  if1106_else2067:
    null $P5012
    set $P5013, $P5012
  if1106_end2068:
    unless_null $P5013, vivi_11072069
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_11072069:
    $P5015 = $P5009."as_post_clear_bindval"($P5013, "P" :named("want"))
    set $P102, $P5015
.annotate 'line', 3517
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    set fb_tmp_307, $P101
    repr_defined $I5003, fb_tmp_307
    unless $I5003 goto if1108_else2070 
    set $P5018, fb_tmp_307[1]
    set $P5020, $P5018
    goto if1108_end2071
  if1108_else2070:
    null $P5019
    set $P5020, $P5019
  if1108_end2071:
    unless_null $P5020, vivi_11092072
    nqp_get_sc_object $P5021, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5020, $P5021
  vivi_11092072:
    $P5022 = $P5016."as_post_clear_bindval"($P5020, "P" :named("want"))
    set $P103, $P5022
.annotate 'line', 3518
    find_lex $P5023, "$ops"
    $P5023."push"($P102)
.annotate 'line', 3519
    find_lex $P5024, "$ops"
    $P5024."push"($P103)
.annotate 'line', 3522
    find_lex $P5025, "$node"
    $P5026 = $P5025."returns"()
    $P5027 = "&type_to_register_type"($P5026)
    set $P104, $P5027
.annotate 'line', 3523
    find_lex $P5028, "$node"
    $P5029 = $P5028."returns"()
    $P5030 = "&type_to_lookup_name"($P5029)
    set $P105, $P5030
    find_dynamic_lex $P5031, "$*BINDVAL"
    unless_null $P5031, fallback2075
    nqp_get_sc_object $P5033, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5032, $P5033
    set fb_tmp_308, $P5032
    repr_defined $I5004, fb_tmp_308
    unless $I5004 goto if1111_else2076 
    set $P5034, fb_tmp_308["$BINDVAL"]
    set $P5036, $P5034
    goto if1111_end2077
  if1111_else2076:
    null $P5035
    set $P5036, $P5035
  if1111_end2077:
    unless_null $P5036, vivi_11122078
    nqp_get_sc_object $P5037, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5036, $P5037
  vivi_11122078:
    unless_null $P5036, vivi_11132079
    die "Contextual $*BINDVAL not found"
    box $P5038, "Contextual $*BINDVAL not found"
    set $P5036, $P5038
  vivi_11132079:
    set $P5031, $P5036
  fallback2075:
    unless $P5031 goto if1110_else2073 
    .const 'Sub' $P5039 = 'cuid_365_1368096764.976' 
    capture_lex $P5039
    $P5040 = $P5039()
    set $P5043, $P5040
    goto if1110_end2074
  if1110_else2073:
    .const 'Sub' $P5041 = 'cuid_367_1368096764.976' 
    capture_lex $P5041
    $P5042 = $P5041()
    set $P5043, $P5042
  if1110_end2074:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_365_1368096764.976") :anon :lex :outer("cuid_366_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3524
    .lex "$valpost", $P101 
    .local pmc fb_tmp_309 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3525
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback2080
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set fb_tmp_309, $P5005
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if1114_else2081 
    set $P5007, fb_tmp_309["$BINDVAL"]
    set $P5009, $P5007
    goto if1114_end2082
  if1114_else2081:
    null $P5008
    set $P5009, $P5008
  if1114_end2082:
    unless_null $P5009, vivi_11152083
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_11152083:
    unless_null $P5009, vivi_11162084
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_11162084:
    set $P5004, $P5009
  fallback2080:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3526
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3527
    find_lex $P5015, "$ops"
    find_lex $P5016, "$op_type"
    set $S5004, $P5016
    concat $S5003, "repr_bind_attr_", $S5004
    find_lex $P5017, "$obj"
    $P5018 = $P5017."result"()
    find_lex $P5019, "$han"
    $P5020 = $P5019."result"()
.annotate 'line', 3528
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    find_lex $P5023, "$name"
    $P5024 = $P5021."escape"($P5023)
    $P5025 = $P101."result"()
    $P5015."push_pirop"($S5003, $P5018, $P5020, $P5024, $P5025)
.annotate 'line', 3529
    find_lex $P5026, "$ops"
    $P5027 = $P101."result"()
    $P5028 = $P5026."result"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_367_1368096764.976") :anon :lex :outer("cuid_366_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3531
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_310 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3532
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback2085
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_310, $P5004
    repr_defined $I5001, fb_tmp_310
    unless $I5001 goto if1117_else2086 
    set $P5006, fb_tmp_310["$REGALLOC"]
    set $P5008, $P5006
    goto if1117_end2087
  if1117_else2086:
    null $P5007
    set $P5008, $P5007
  if1117_end2087:
    unless_null $P5008, vivi_11182088
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_11182088:
    unless_null $P5008, vivi_11192089
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_11192089:
    set $P5003, $P5008
  fallback2085:
    find_lex $P5002, "$type"
    set $S5003, $P5002
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 3533
    find_lex $P5012, "$ops"
    find_lex $P5013, "$op_type"
    set $S5005, $P5013
    concat $S5004, "repr_get_attr_", $S5005
    find_lex $P5014, "$obj"
    $P5015 = $P5014."result"()
    find_lex $P5016, "$han"
    $P5017 = $P5016."result"()
.annotate 'line', 3534
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    find_lex $P5020, "$name"
    $P5021 = $P5018."escape"($P5020)
    $P5012."push_pirop"($S5004, $P101, $P5015, $P5017, $P5021)
.annotate 'line', 3535
    find_lex $P5022, "$ops"
    $P5023 = $P5022."result"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "as_post_clear_bindval" :subid("cuid_108_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3555
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_28 :opt_flag 
    .lex "$*BINDVAL", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_28, default2120
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5008
  default2120:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    unless _lex_param_2 goto if1136_else2118 
.annotate 'line', 3557
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = $P5003."as_post"(_lex_param_1, _lex_param_2 :named("want"))
    set $P5007, $P5004
    goto if1136_end2119
  if1136_else2118:
    nqp_decontainerize $P5005, _lex_param_0
    $P5006 = $P5005."as_post"(_lex_param_1)
    set $P5007, $P5006
  if1136_end2119:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_109_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3560
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_29 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_315 
    if haz_param_29, default2124
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5007
  default2124:
.annotate 'line', 3562
    nqp_decontainerize $P5001, _lex_param_0
    set fb_tmp_315, _lex_param_1
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if1137_else2121 
    set $P5002, fb_tmp_315[0]
    set $P5004, $P5002
    goto if1137_end2122
  if1137_else2121:
    null $P5003
    set $P5004, $P5003
  if1137_end2122:
    unless_null $P5004, vivi_11382123
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5004, $P5005
  vivi_11382123:
    $P5006 = $P5001."as_post"($P5004)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_110_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3565
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_30 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_30, default2125
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5004
  default2125:
.annotate 'line', 3566
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5002 = _lex_param_1."value"()
    set $S5001, $P5002
    $P5003 = $P5001."new"($S5001 :named("result"))
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_111_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3569
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_31 :opt_flag 
    .lex "$val", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_31, default2130
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5007
  default2130:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3570
    $P5002 = _lex_param_1."value"()
    set $S5001, $P5002
    box $P5003, $S5001
    set $P101, $P5003
    set $S5002, $P101
    index $I5002, $S5002, ".", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    set $I5005, $I5001
    if $I5001 goto unless1140_end2129 
    set $S5003, $P101
    index $I5004, $S5003, "e", 0
    set $N5003, $I5004
    set $N5004, 0
    isgt $I5003, $N5003, $N5004
    set $I5005, $I5003
  unless1140_end2129:
    if $I5005 goto unless1139_end2127 
    set $S5005, $P101
    concat $S5004, $S5005, ".0"
    box $P5004, $S5004
    set $P101, $P5004
  unless1139_end2127:
.annotate 'line', 3573
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5006 = $P5005."new"($P101 :named("result"))
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_112_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3576
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_32 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_32, default2131
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5006
  default2131:
.annotate 'line', 3577
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_1."value"()
    $P5004 = $P5002."escape"($P5003)
    $P5005 = $P5001."new"($P5004 :named("result"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_113_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3580
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_33 :opt_flag 
    .lex "$cuid", $P101 
    .lex "$reg", $P102 
    .lex "$ops", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_316 
    if haz_param_33, default2137
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5019
  default2137:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3581
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = _lex_param_1."value"()
    $P5006 = $P5005."cuid"()
    $P5007 = $P5004."escape"($P5006)
    set $P101, $P5007
.annotate 'line', 3582
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback2132
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5009, $P5010
    set fb_tmp_316, $P5009
    repr_defined $I5001, fb_tmp_316
    unless $I5001 goto if1141_else2133 
    set $P5011, fb_tmp_316["$REGALLOC"]
    set $P5013, $P5011
    goto if1141_end2134
  if1141_else2133:
    null $P5012
    set $P5013, $P5012
  if1141_end2134:
    unless_null $P5013, vivi_11422135
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_11422135:
    unless_null $P5013, vivi_11432136
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_11432136:
    set $P5008, $P5013
  fallback2132:
    $P5016 = $P5008."fresh_p"()
    set $P102, $P5016
.annotate 'line', 3583
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5018 = $P5017."new"($P102 :named("result"))
    set $P103, $P5018
.annotate 'line', 3584
    set $S5004, $P102
    concat $S5003, ".const 'Sub' ", $S5004
    concat $S5002, $S5003, " = "
    set $S5005, $P101
    concat $S5001, $S5002, $S5005
    $P103."push_pirop"($S5001)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_114_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3588
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_34 :opt_flag 
    .lex "$val", $P101 
    .lex "$sc", $P102 
    .lex "$handle", $P103 
    .lex "$idx", $P104 
    .lex "$reg", $P105 
    .lex "$ops", $P106 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_317 
    if haz_param_34, default2143
    nqp_get_sc_object $P5024, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5024
  default2143:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
.annotate 'line', 3589
    $P5007 = _lex_param_1."value"()
    set $P101, $P5007
    nqp_get_sc_for_object $P5008, $P101
    set $P102, $P5008
    $S5001 = $P102."handle"()
    box $P5009, $S5001
    set $P103, $P5009
    $I5001 = $P102."slot_index_for"($P101)
    box $P5010, $I5001
    set $P104, $P5010
.annotate 'line', 3593
    find_dynamic_lex $P5011, "$*REGALLOC"
    unless_null $P5011, fallback2138
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5012, $P5013
    set fb_tmp_317, $P5012
    repr_defined $I5002, fb_tmp_317
    unless $I5002 goto if1144_else2139 
    set $P5014, fb_tmp_317["$REGALLOC"]
    set $P5016, $P5014
    goto if1144_end2140
  if1144_else2139:
    null $P5015
    set $P5016, $P5015
  if1144_end2140:
    unless_null $P5016, vivi_11452141
    nqp_get_sc_object $P5017, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5016, $P5017
  vivi_11452141:
    unless_null $P5016, vivi_11462142
    die "Contextual $*REGALLOC not found"
    box $P5018, "Contextual $*REGALLOC not found"
    set $P5016, $P5018
  vivi_11462142:
    set $P5011, $P5016
  fallback2138:
    $P5019 = $P5011."fresh_p"()
    set $P105, $P5019
.annotate 'line', 3594
    nqp_get_sc_object $P5020, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5021 = $P5020."new"($P105 :named("result"))
    set $P106, $P5021
.annotate 'line', 3595
    nqp_decontainerize $P5022, _lex_param_0
    $P5023 = $P5022."escape"($P103)
    set $S5002, $P104
    $P106."push_pirop"("nqp_get_sc_object", $P105, $P5023, $S5002)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "coerce" :subid("cuid_115_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3599
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5025 = 'cuid_368_1368096764.976' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_369_1368096764.976' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_370_1368096764.976' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_371_1368096764.976' 
    capture_lex $P5025 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "$post", _lex_param_1 
    .lex "$desired", _lex_param_2 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_2144
    .lex "RETURN", $P102
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "v"
    unless $I5001 goto if1147_end2147 
    $P5002 = "RETURN"(_lex_param_1)
  if1147_end2147:
.annotate 'line', 3601
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = _lex_param_1."result"()
    $P5005 = $P5003."infer_type"($P5004)
    set $P101, $P5005
    set $S5002, $P101
    set $S5003, _lex_param_2
    iseq $I5002, $S5002, $S5003
    unless $I5002 goto if1148_else2148 
.annotate 'line', 3602
    $P5006 = "RETURN"(_lex_param_1)
    set $P5024, $P5006
    goto if1148_end2149
  if1148_else2148:
    set $S5005, $P101
    downcase $S5004, $S5005
    set $S5006, _lex_param_2
    iseq $I5003, $S5004, $S5006
    unless $I5003 goto if1149_else2150 
.annotate 'line', 3606
    $P5007 = "RETURN"(_lex_param_1)
    set $P5023, $P5007
    goto if1149_end2151
  if1149_else2150:
    set $S5007, $P101
    iseq $I5004, $S5007, "p"
    set $I5006, $I5004
    unless $I5004 goto if1151_end2155 
    set $S5008, _lex_param_2
    iseq $I5005, $S5008, "P"
    set $I5006, $I5005
  if1151_end2155:
    unless $I5006 goto if1150_else2152 
.annotate 'line', 3611
    $P5008 = "RETURN"(_lex_param_1)
    set $P5022, $P5008
    goto if1150_end2153
  if1150_else2152:
    set $S5009, $P101
    set $S5011, _lex_param_2
    downcase $S5010, $S5011
    iseq $I5007, $S5009, $S5010
    unless $I5007 goto if1152_else2156 
    .const 'Sub' $P5009 = 'cuid_368_1368096764.976' 
    capture_lex $P5009
    $P5010 = $P5009()
    set $P5021, $P5010
    goto if1152_end2157
  if1152_else2156:
    set $S5012, _lex_param_2
    iseq $I5008, $S5012, "P"
    set $I5010, $I5008
    if $I5008 goto unless1157_end2166 
    set $S5013, _lex_param_2
    iseq $I5009, $S5013, "p"
    set $I5010, $I5009
  unless1157_end2166:
    unless $I5010 goto if1156_else2163 
    .const 'Sub' $P5011 = 'cuid_369_1368096764.976' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5020, $P5012
    goto if1156_end2164
  if1156_else2163:
    set $S5014, $P101
    iseq $I5011, $S5014, "P"
    set $I5013, $I5011
    if $I5011 goto unless1164_end2177 
    set $S5015, $P101
    iseq $I5012, $S5015, "p"
    set $I5013, $I5012
  unless1164_end2177:
    unless $I5013 goto if1163_else2174 
    .const 'Sub' $P5013 = 'cuid_370_1368096764.976' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5019, $P5014
    goto if1163_end2175
  if1163_else2174:
    set $S5016, $P101
    index $I5015, "IiNnSs", $S5016, 0
    set $N5001, $I5015
    set $N5002, 0
    isge $I5014, $N5001, $N5002
    set $I5018, $I5014
    unless $I5014 goto if1171_end2188 
    set $S5017, _lex_param_2
    index $I5017, "IiNnSs", $S5017, 0
    set $N5003, $I5017
    set $N5004, 0
    isge $I5016, $N5003, $N5004
    set $I5018, $I5016
  if1171_end2188:
    unless $I5018 goto if1170_else2185 
    .const 'Sub' $P5015 = 'cuid_371_1368096764.976' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5018, $P5016
    goto if1170_end2186
  if1170_else2185:
.annotate 'line', 3644
    set $S5022, $P101
    concat $S5021, "Coercion from '", $S5022
    concat $S5020, $S5021, "' to '"
    set $S5023, _lex_param_2
    concat $S5019, $S5020, $S5023
    concat $S5018, $S5019, "' NYI"
    box $P5017, $S5018
    die $P5017
    set $P5018, $P5017
  if1170_end2186:
    set $P5019, $P5018
  if1163_end2175:
    set $P5020, $P5019
  if1156_end2164:
    set $P5021, $P5020
  if1152_end2157:
    set $P5022, $P5021
  if1150_end2153:
    set $P5023, $P5022
  if1149_end2151:
    set $P5024, $P5023
  if1148_end2149:
    goto lexotic_2145
  lexotic_2144:
    .get_results ($P5024)
  lexotic_2145:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_368_1368096764.976") :anon :lex :outer("cuid_115_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3615
    .lex "$ops", $P101 
    .lex "$reg", $P102 
    .local pmc fb_tmp_318 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 3617
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3618
    find_dynamic_lex $P5006, "$*REGALLOC"
    unless_null $P5006, fallback2158
    nqp_get_sc_object $P5008, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5007, $P5008
    set fb_tmp_318, $P5007
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if1153_else2159 
    set $P5009, fb_tmp_318["$REGALLOC"]
    set $P5011, $P5009
    goto if1153_end2160
  if1153_else2159:
    null $P5010
    set $P5011, $P5010
  if1153_end2160:
    unless_null $P5011, vivi_11542161
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_11542161:
    unless_null $P5011, vivi_11552162
    die "Contextual $*REGALLOC not found"
    box $P5013, "Contextual $*REGALLOC not found"
    set $P5011, $P5013
  vivi_11552162:
    set $P5006, $P5011
  fallback2158:
    find_lex $P5005, "$result"
    set $S5002, $P5005
    concat $S5001, "fresh_", $S5002
    $P5014 = $P5006.$S5001()
    set $P102, $P5014
.annotate 'line', 3619
    find_lex $P5015, "$post"
    $P101."push"($P5015)
.annotate 'line', 3620
    find_lex $P5016, "$post"
    $P101."push_pirop"("set", $P102, $P5016)
.annotate 'line', 3621
    $P101."result"($P102)
    $P5017 = "RETURN"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_369_1368096764.976") :anon :lex :outer("cuid_115_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3624
    .lex "$hll", $P101 
    .local pmc fb_tmp_319 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_11622173
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*HLL"
    unless_null $P5003, fallback2167
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_319, $P5004
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if1158_else2168 
    set $P5006, fb_tmp_319["$HLL"]
    set $P5008, $P5006
    goto if1158_end2169
  if1158_else2168:
    null $P5007
    set $P5008, $P5007
  if1158_end2169:
    unless_null $P5008, vivi_11592170
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_11592170:
    unless_null $P5008, vivi_11602171
    die "Contextual $*HLL not found"
    box $P5010, "Contextual $*HLL not found"
    set $P5008, $P5010
  vivi_11602171:
    set $P5003, $P5008
  fallback2167:
    set $P101, $P5003
    set $P5012, $P101
    pop_eh 
    goto skip_handler_11612172
  catch_handler_11622173:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_11612172
  skip_handler_11612172:
.annotate 'line', 3627
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    find_lex $P5016, "$result"
    set $S5002, $P5016
    downcase $S5001, $S5002
    find_lex $P5017, "$post"
    $P5018 = $P5013."box"($P5014, $P101, $S5001, $P5017)
    $P5019 = "RETURN"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_370_1368096764.976") :anon :lex :outer("cuid_115_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3629
    .lex "$hll", $P101 
    .local pmc fb_tmp_320 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_11692184
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*HLL"
    unless_null $P5003, fallback2178
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set fb_tmp_320, $P5004
    repr_defined $I5001, fb_tmp_320
    unless $I5001 goto if1165_else2179 
    set $P5006, fb_tmp_320["$HLL"]
    set $P5008, $P5006
    goto if1165_end2180
  if1165_else2179:
    null $P5007
    set $P5008, $P5007
  if1165_end2180:
    unless_null $P5008, vivi_11662181
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5008, $P5009
  vivi_11662181:
    unless_null $P5008, vivi_11672182
    die "Contextual $*HLL not found"
    box $P5010, "Contextual $*HLL not found"
    set $P5008, $P5010
  vivi_11672182:
    set $P5003, $P5008
  fallback2178:
    set $P101, $P5003
    set $P5012, $P101
    pop_eh 
    goto skip_handler_11682183
  catch_handler_11692184:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_11682183
  skip_handler_11682183:
.annotate 'line', 3632
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    find_lex $P5016, "$desired"
    set $S5002, $P5016
    downcase $S5001, $S5002
    find_lex $P5017, "$post"
    $P5018 = $P5013."unbox"($P5014, $P101, $S5001, $P5017)
    $P5019 = "RETURN"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_371_1368096764.976") :anon :lex :outer("cuid_115_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3634
    .lex "$ops", $P101 
    .lex "$rtype", $P102 
    .lex "$reg", $P103 
    .local pmc fb_tmp_321 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3636
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5005 = $P5004."new"()
    set $P101, $P5005
    find_lex $P5006, "$desired"
    set $S5002, $P5006
    downcase $S5001, $S5002
    box $P5007, $S5001
    set $P102, $P5007
.annotate 'line', 3638
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback2189
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5009, $P5010
    set fb_tmp_321, $P5009
    repr_defined $I5001, fb_tmp_321
    unless $I5001 goto if1172_else2190 
    set $P5011, fb_tmp_321["$REGALLOC"]
    set $P5013, $P5011
    goto if1172_end2191
  if1172_else2190:
    null $P5012
    set $P5013, $P5012
  if1172_end2191:
    unless_null $P5013, vivi_11732192
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_11732192:
    unless_null $P5013, vivi_11742193
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_11742193:
    set $P5008, $P5013
  fallback2189:
    set $S5004, $P102
    concat $S5003, "fresh_", $S5004
    $P5016 = $P5008.$S5003()
    set $P103, $P5016
.annotate 'line', 3639
    find_lex $P5017, "$post"
    $P101."push"($P5017)
.annotate 'line', 3640
    find_lex $P5018, "$post"
    $P101."push_pirop"("set", $P103, $P5018)
.annotate 'line', 3641
    $P101."result"($P103)
    $P5019 = "RETURN"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "infer_type" :subid("cuid_116_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3649
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5026 = 'cuid_372_1368096764.976' 
    capture_lex $P5026 
    .lex "self", _lex_param_0 
    .lex "$inferee", _lex_param_1 
    .local pmc fb_tmp_322 
    set $S5002, _lex_param_1
    substr $S5001, $S5002, 0, 1
    iseq $I5001, $S5001, "$"
    unless $I5001 goto if1175_else2194 
.annotate 'line', 3650
    set $S5004, _lex_param_1
    substr $S5003, $S5004, 1, 1
    box $P5025, $S5003
    set $P5024, $P5025
    goto if1175_end2195
  if1175_else2194:
.annotate 'line', 3653
    find_dynamic_lex $P5001, "$*BLOCK"
    unless_null $P5001, fallback2198
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set fb_tmp_322, $P5002
    repr_defined $I5002, fb_tmp_322
    unless $I5002 goto if1177_else2199 
    set $P5004, fb_tmp_322["$BLOCK"]
    set $P5006, $P5004
    goto if1177_end2200
  if1177_else2199:
    null $P5005
    set $P5006, $P5005
  if1177_end2200:
    unless_null $P5006, vivi_11782201
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5006, $P5007
  vivi_11782201:
    unless_null $P5006, vivi_11792202
    die "Contextual $*BLOCK not found"
    box $P5008, "Contextual $*BLOCK not found"
    set $P5006, $P5008
  vivi_11792202:
    set $P5001, $P5006
  fallback2198:
    $P5009 = $P5001."reg_type"(_lex_param_1)
    unless $P5009 goto if1176_else2196 
    .const 'Sub' $P5010 = 'cuid_372_1368096764.976' 
    capture_lex $P5010
    $P5011 = $P5010($P5009)
    set $P5023, $P5011
    goto if1176_end2197
  if1176_else2196:
    set $S5006, _lex_param_1
    substr $S5005, $S5006, 0, 1
    iseq $I5003, $S5005, "\""
    set $I5005, $I5003
    if $I5003 goto unless1183_end2210 
    set $S5008, _lex_param_1
    substr $S5007, $S5008, 0, 6
    iseq $I5004, $S5007, "utf8:\""
    set $I5005, $I5004
  unless1183_end2210:
    set $I5007, $I5005
    if $I5005 goto unless1182_end2208 
    set $S5010, _lex_param_1
    substr $S5009, $S5010, 0, 6
    iseq $I5006, $S5009, "ucs4:\""
    set $I5007, $I5006
  unless1182_end2208:
    set $I5009, $I5007
    if $I5007 goto unless1181_end2206 
    set $S5012, _lex_param_1
    substr $S5011, $S5012, 0, 9
    iseq $I5008, $S5011, "unicode:\""
    set $I5009, $I5008
  unless1181_end2206:
    unless $I5009 goto if1180_else2203 
.annotate 'line', 3659

    box $P5022, "s"
    set $P5021, $P5022
    goto if1180_end2204
  if1180_else2203:
    set $S5014, _lex_param_1
    substr $S5013, $S5014, 0, 6
    iseq $I5010, $S5013, ".const"
    unless $I5010 goto if1184_else2211 
.annotate 'line', 3662

    box $P5020, "P"
    set $P5019, $P5020
    goto if1184_end2212
  if1184_else2211:
    set $S5016, _lex_param_1
    substr $S5015, $S5016, 0, 1
    iseq $I5011, $S5015, "."
    unless $I5011 goto if1185_else2213 
.annotate 'line', 3665

    box $P5018, "i"
    set $P5017, $P5018
    goto if1185_end2214
  if1185_else2213:
    set $S5017, _lex_param_1
    index $I5013, $S5017, ".", 0
    set $N5001, $I5013
    set $N5002, 0
    isgt $I5012, $N5001, $N5002
    unless $I5012 goto if1186_else2215 
.annotate 'line', 3668

    box $P5016, "n"
    set $P5015, $P5016
    goto if1186_end2216
  if1186_else2215:
    set $N5003, _lex_param_1
    set $S5018, $N5003
    set $S5019, _lex_param_1
    iseq $I5014, $S5018, $S5019
    unless $I5014 goto if1187_else2217 
.annotate 'line', 3671

    box $P5014, "i"
    set $P5013, $P5014
    goto if1187_end2218
  if1187_else2217:
.annotate 'line', 3674
    set $S5022, _lex_param_1
    concat $S5021, "Cannot infer type from '", $S5022
    concat $S5020, $S5021, "'"
    box $P5012, $S5020
    die $P5012
    set $P5013, $P5012
  if1187_end2218:
    set $P5015, $P5013
  if1186_end2216:
    set $P5017, $P5015
  if1185_end2214:
    set $P5019, $P5017
  if1184_end2212:
    set $P5021, $P5019
  if1180_end2204:
    set $P5023, $P5021
  if1176_end2197:
    set $P5024, $P5023
  if1175_end2195:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_372_1368096764.976") :anon :lex :outer("cuid_116_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3653
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    set $S5002, _lex_param_0
    downcase $S5001, $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_117_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3679
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_35 :opt_flag 
    .const 'Sub' $P5484 = 'cuid_373_1368096764.976' 
    capture_lex $P5484 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "%*REG", $P103 
    .lex "$reglist", $P104 
    .lex "$startlabel", $P105 
    .lex "$donelabel", $P106 
    .lex "$restartlabel", $P107 
    .lex "$faillabel", $P108 
    .lex "$jumplabel", $P109 
    .lex "$cutlabel", $P110 
    .lex "$cstacklabel", $P111 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_323 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_325 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_326 
    .local pmc fb_tmp_327 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_328 
    .local pmc fb_tmp_329 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_334 
    .local pmc fb_tmp_335 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_336 
    .local pmc fb_tmp_337 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    .local pmc pkg_viv_tmp_21 
    .local pmc fb_tmp_344 
    .local pmc fb_tmp_345 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_347 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_348 
    .local pmc fb_tmp_349 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_350 
    .local pmc fb_tmp_351 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_357 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_362 
    .local pmc fb_tmp_363 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc pkg_viv_tmp_32 
    .local pmc fb_tmp_366 
    .local pmc fb_tmp_367 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_373 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc pkg_viv_tmp_42 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc pkg_viv_tmp_51 
    if haz_param_35, default2553
    nqp_get_sc_object $P5483, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5483
  default2553:
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    new $P5003, 'Hash'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P111, $P5011
.annotate 'line', 3680
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."post_new"("Ops")
    set $P101, $P5013
.annotate 'line', 3681
    $P5014 = _lex_param_1."node"()
    unless $P5014 goto if1188_end2220 
    $P5015 = _lex_param_1."node"()
    $P5016 = $P101."node"($P5015)
  if1188_end2220:
.annotate 'line', 3682
    nqp_decontainerize $P5017, _lex_param_0
    $P5018 = $P5017."unique"("rx")
    set $S5002, $P5018
    concat $S5001, $S5002, "_"
    box $P5019, $S5001
    set $P102, $P5019
    split $P5027, " ", "start pmc tgt string pos int off int eos int rep int cur pmc curclass pmc bstack pmc cstack pmc"
    set $P104, $P5027
  while1192_test2226:
    set $P5030, $P104
    unless $P104 goto while1192_done2230 
  while1192_redo2228:
    .const 'Sub' $P5028 = 'cuid_373_1368096764.976' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
    goto while1192_test2226 
  while1192_done2230:
.annotate 'line', 3694
    nqp_decontainerize $P5031, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "start"
    $P5032 = $P5031."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5032
.annotate 'line', 3695
    nqp_decontainerize $P5033, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "done"
    $P5034 = $P5033."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5034
.annotate 'line', 3696
    nqp_decontainerize $P5035, _lex_param_0
    set $S5008, $P102
    concat $S5007, $S5008, "restart"
    $P5036 = $P5035."post_new"("Label", $S5007 :named("name"))
    set $P107, $P5036
.annotate 'line', 3697
    nqp_decontainerize $P5037, _lex_param_0
    set $S5010, $P102
    concat $S5009, $S5010, "fail"
    $P5038 = $P5037."post_new"("Label", $S5009 :named("name"))
    set $P108, $P5038
.annotate 'line', 3698
    nqp_decontainerize $P5039, _lex_param_0
    set $S5012, $P102
    concat $S5011, $S5012, "jump"
    $P5040 = $P5039."post_new"("Label", $S5011 :named("name"))
    set $P109, $P5040
.annotate 'line', 3699
    nqp_decontainerize $P5041, _lex_param_0
    set $S5014, $P102
    concat $S5013, $S5014, "cut"
    $P5042 = $P5041."post_new"("Label", $S5013 :named("name"))
    set $P110, $P5042
.annotate 'line', 3700
    nqp_decontainerize $P5043, _lex_param_0
    set $S5016, $P102
    concat $S5015, $S5016, "cstack_done"
    $P5044 = $P5043."post_new"("Label", $S5015 :named("name"))
    set $P111, $P5044
    unless_null $P103, fallback2236
    nqp_get_sc_object $P5046, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_12, $P5045
    set fb_tmp_325, pkg_viv_tmp_12
    repr_defined $I5002, fb_tmp_325
    unless $I5002 goto if1196_else2237 
    set $P5047, fb_tmp_325["%REG"]
    set $P5049, $P5047
    goto if1196_end2238
  if1196_else2237:
    null $P5048
    set $P5049, $P5048
  if1196_end2238:
    unless_null $P5049, vivi_11972239
    new $P5050, 'Hash'
    set pkg_viv_tmp_12["%REG"], $P5050
    set $P5049, $P5050
  vivi_11972239:
    unless_null $P5049, vivi_11982240
    die "Contextual %*REG not found"
    box $P5051, "Contextual %*REG not found"
    set $P5049, $P5051
  vivi_11982240:
    set $P103, $P5049
  fallback2236:
    set $P103["fail"], $P108
.annotate 'line', 3704
    unless_null $P103, fallback2243
    nqp_get_sc_object $P5053, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5052, $P5053
    set pkg_viv_tmp_13, $P5052
    set fb_tmp_327, pkg_viv_tmp_13
    repr_defined $I5004, fb_tmp_327
    unless $I5004 goto if1200_else2244 
    set $P5054, fb_tmp_327["%REG"]
    set $P5056, $P5054
    goto if1200_end2245
  if1200_else2244:
    null $P5055
    set $P5056, $P5055
  if1200_end2245:
    unless_null $P5056, vivi_12012246
    new $P5057, 'Hash'
    set pkg_viv_tmp_13["%REG"], $P5057
    set $P5056, $P5057
  vivi_12012246:
    unless_null $P5056, vivi_12022247
    die "Contextual %*REG not found"
    box $P5058, "Contextual %*REG not found"
    set $P5056, $P5058
  vivi_12022247:
    set $P103, $P5056
  fallback2243:
    set fb_tmp_326, $P103
    repr_defined $I5003, fb_tmp_326
    unless $I5003 goto if1199_else2241 
    set $P5059, fb_tmp_326["start"]
    set $P5061, $P5059
    goto if1199_end2242
  if1199_else2241:
    null $P5060
    set $P5061, $P5060
  if1199_end2242:
    unless_null $P5061, vivi_12032248
    nqp_get_sc_object $P5062, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5061, $P5062
  vivi_12032248:
    $P101."push_pirop"("callmethod", "\"!cursor_start_all\"", "self", $P5061 :named("result"))
.annotate 'line', 3705
    unless_null $P103, fallback2251
    nqp_get_sc_object $P5064, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_14, $P5063
    set fb_tmp_329, pkg_viv_tmp_14
    repr_defined $I5006, fb_tmp_329
    unless $I5006 goto if1205_else2252 
    set $P5065, fb_tmp_329["%REG"]
    set $P5067, $P5065
    goto if1205_end2253
  if1205_else2252:
    null $P5066
    set $P5067, $P5066
  if1205_end2253:
    unless_null $P5067, vivi_12062254
    new $P5068, 'Hash'
    set pkg_viv_tmp_14["%REG"], $P5068
    set $P5067, $P5068
  vivi_12062254:
    unless_null $P5067, vivi_12072255
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_12072255:
    set $P103, $P5067
  fallback2251:
    set fb_tmp_328, $P103
    repr_defined $I5005, fb_tmp_328
    unless $I5005 goto if1204_else2249 
    set $P5070, fb_tmp_328["cur"]
    set $P5072, $P5070
    goto if1204_end2250
  if1204_else2249:
    null $P5071
    set $P5072, $P5071
  if1204_end2250:
    unless_null $P5072, vivi_12082256
    nqp_get_sc_object $P5073, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5072, $P5073
  vivi_12082256:
    unless_null $P103, fallback2259
    nqp_get_sc_object $P5075, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_15, $P5074
    set fb_tmp_331, pkg_viv_tmp_15
    repr_defined $I5008, fb_tmp_331
    unless $I5008 goto if1210_else2260 
    set $P5076, fb_tmp_331["%REG"]
    set $P5078, $P5076
    goto if1210_end2261
  if1210_else2260:
    null $P5077
    set $P5078, $P5077
  if1210_end2261:
    unless_null $P5078, vivi_12112262
    new $P5079, 'Hash'
    set pkg_viv_tmp_15["%REG"], $P5079
    set $P5078, $P5079
  vivi_12112262:
    unless_null $P5078, vivi_12122263
    die "Contextual %*REG not found"
    box $P5080, "Contextual %*REG not found"
    set $P5078, $P5080
  vivi_12122263:
    set $P103, $P5078
  fallback2259:
    set fb_tmp_330, $P103
    repr_defined $I5007, fb_tmp_330
    unless $I5007 goto if1209_else2257 
    set $P5081, fb_tmp_330["start"]
    set $P5083, $P5081
    goto if1209_end2258
  if1209_else2257:
    null $P5082
    set $P5083, $P5082
  if1209_end2258:
    unless_null $P5083, vivi_12132264
    nqp_get_sc_object $P5084, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5083, $P5084
  vivi_12132264:
    set $S5018, $P5083
    concat $S5017, $S5018, "[0]"
    $P101."push_pirop"("set", $P5072, $S5017)
.annotate 'line', 3706
    unless_null $P103, fallback2267
    nqp_get_sc_object $P5086, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5085, $P5086
    set pkg_viv_tmp_16, $P5085
    set fb_tmp_333, pkg_viv_tmp_16
    repr_defined $I5010, fb_tmp_333
    unless $I5010 goto if1215_else2268 
    set $P5087, fb_tmp_333["%REG"]
    set $P5089, $P5087
    goto if1215_end2269
  if1215_else2268:
    null $P5088
    set $P5089, $P5088
  if1215_end2269:
    unless_null $P5089, vivi_12162270
    new $P5090, 'Hash'
    set pkg_viv_tmp_16["%REG"], $P5090
    set $P5089, $P5090
  vivi_12162270:
    unless_null $P5089, vivi_12172271
    die "Contextual %*REG not found"
    box $P5091, "Contextual %*REG not found"
    set $P5089, $P5091
  vivi_12172271:
    set $P103, $P5089
  fallback2267:
    set fb_tmp_332, $P103
    repr_defined $I5009, fb_tmp_332
    unless $I5009 goto if1214_else2265 
    set $P5092, fb_tmp_332["tgt"]
    set $P5094, $P5092
    goto if1214_end2266
  if1214_else2265:
    null $P5093
    set $P5094, $P5093
  if1214_end2266:
    unless_null $P5094, vivi_12182272
    nqp_get_sc_object $P5095, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5094, $P5095
  vivi_12182272:
    unless_null $P103, fallback2275
    nqp_get_sc_object $P5097, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5096, $P5097
    set pkg_viv_tmp_17, $P5096
    set fb_tmp_335, pkg_viv_tmp_17
    repr_defined $I5012, fb_tmp_335
    unless $I5012 goto if1220_else2276 
    set $P5098, fb_tmp_335["%REG"]
    set $P5100, $P5098
    goto if1220_end2277
  if1220_else2276:
    null $P5099
    set $P5100, $P5099
  if1220_end2277:
    unless_null $P5100, vivi_12212278
    new $P5101, 'Hash'
    set pkg_viv_tmp_17["%REG"], $P5101
    set $P5100, $P5101
  vivi_12212278:
    unless_null $P5100, vivi_12222279
    die "Contextual %*REG not found"
    box $P5102, "Contextual %*REG not found"
    set $P5100, $P5102
  vivi_12222279:
    set $P103, $P5100
  fallback2275:
    set fb_tmp_334, $P103
    repr_defined $I5011, fb_tmp_334
    unless $I5011 goto if1219_else2273 
    set $P5103, fb_tmp_334["start"]
    set $P5105, $P5103
    goto if1219_end2274
  if1219_else2273:
    null $P5104
    set $P5105, $P5104
  if1219_end2274:
    unless_null $P5105, vivi_12232280
    nqp_get_sc_object $P5106, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5105, $P5106
  vivi_12232280:
    set $S5020, $P5105
    concat $S5019, $S5020, "[1]"
    $P101."push_pirop"("set", $P5094, $S5019)
.annotate 'line', 3707
    unless_null $P103, fallback2283
    nqp_get_sc_object $P5108, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5107, $P5108
    set pkg_viv_tmp_18, $P5107
    set fb_tmp_337, pkg_viv_tmp_18
    repr_defined $I5014, fb_tmp_337
    unless $I5014 goto if1225_else2284 
    set $P5109, fb_tmp_337["%REG"]
    set $P5111, $P5109
    goto if1225_end2285
  if1225_else2284:
    null $P5110
    set $P5111, $P5110
  if1225_end2285:
    unless_null $P5111, vivi_12262286
    new $P5112, 'Hash'
    set pkg_viv_tmp_18["%REG"], $P5112
    set $P5111, $P5112
  vivi_12262286:
    unless_null $P5111, vivi_12272287
    die "Contextual %*REG not found"
    box $P5113, "Contextual %*REG not found"
    set $P5111, $P5113
  vivi_12272287:
    set $P103, $P5111
  fallback2283:
    set fb_tmp_336, $P103
    repr_defined $I5013, fb_tmp_336
    unless $I5013 goto if1224_else2281 
    set $P5114, fb_tmp_336["pos"]
    set $P5116, $P5114
    goto if1224_end2282
  if1224_else2281:
    null $P5115
    set $P5116, $P5115
  if1224_end2282:
    unless_null $P5116, vivi_12282288
    nqp_get_sc_object $P5117, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5116, $P5117
  vivi_12282288:
    unless_null $P103, fallback2291
    nqp_get_sc_object $P5119, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5118, $P5119
    set pkg_viv_tmp_19, $P5118
    set fb_tmp_339, pkg_viv_tmp_19
    repr_defined $I5016, fb_tmp_339
    unless $I5016 goto if1230_else2292 
    set $P5120, fb_tmp_339["%REG"]
    set $P5122, $P5120
    goto if1230_end2293
  if1230_else2292:
    null $P5121
    set $P5122, $P5121
  if1230_end2293:
    unless_null $P5122, vivi_12312294
    new $P5123, 'Hash'
    set pkg_viv_tmp_19["%REG"], $P5123
    set $P5122, $P5123
  vivi_12312294:
    unless_null $P5122, vivi_12322295
    die "Contextual %*REG not found"
    box $P5124, "Contextual %*REG not found"
    set $P5122, $P5124
  vivi_12322295:
    set $P103, $P5122
  fallback2291:
    set fb_tmp_338, $P103
    repr_defined $I5015, fb_tmp_338
    unless $I5015 goto if1229_else2289 
    set $P5125, fb_tmp_338["start"]
    set $P5127, $P5125
    goto if1229_end2290
  if1229_else2289:
    null $P5126
    set $P5127, $P5126
  if1229_end2290:
    unless_null $P5127, vivi_12332296
    nqp_get_sc_object $P5128, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5127, $P5128
  vivi_12332296:
    set $S5022, $P5127
    concat $S5021, $S5022, "[2]"
    $P101."push_pirop"("set", $P5116, $S5021)
.annotate 'line', 3708
    unless_null $P103, fallback2299
    nqp_get_sc_object $P5130, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5129, $P5130
    set pkg_viv_tmp_20, $P5129
    set fb_tmp_341, pkg_viv_tmp_20
    repr_defined $I5018, fb_tmp_341
    unless $I5018 goto if1235_else2300 
    set $P5131, fb_tmp_341["%REG"]
    set $P5133, $P5131
    goto if1235_end2301
  if1235_else2300:
    null $P5132
    set $P5133, $P5132
  if1235_end2301:
    unless_null $P5133, vivi_12362302
    new $P5134, 'Hash'
    set pkg_viv_tmp_20["%REG"], $P5134
    set $P5133, $P5134
  vivi_12362302:
    unless_null $P5133, vivi_12372303
    die "Contextual %*REG not found"
    box $P5135, "Contextual %*REG not found"
    set $P5133, $P5135
  vivi_12372303:
    set $P103, $P5133
  fallback2299:
    set fb_tmp_340, $P103
    repr_defined $I5017, fb_tmp_340
    unless $I5017 goto if1234_else2297 
    set $P5136, fb_tmp_340["curclass"]
    set $P5138, $P5136
    goto if1234_end2298
  if1234_else2297:
    null $P5137
    set $P5138, $P5137
  if1234_end2298:
    unless_null $P5138, vivi_12382304
    nqp_get_sc_object $P5139, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5138, $P5139
  vivi_12382304:
    unless_null $P103, fallback2307
    nqp_get_sc_object $P5141, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5140, $P5141
    set pkg_viv_tmp_21, $P5140
    set fb_tmp_343, pkg_viv_tmp_21
    repr_defined $I5020, fb_tmp_343
    unless $I5020 goto if1240_else2308 
    set $P5142, fb_tmp_343["%REG"]
    set $P5144, $P5142
    goto if1240_end2309
  if1240_else2308:
    null $P5143
    set $P5144, $P5143
  if1240_end2309:
    unless_null $P5144, vivi_12412310
    new $P5145, 'Hash'
    set pkg_viv_tmp_21["%REG"], $P5145
    set $P5144, $P5145
  vivi_12412310:
    unless_null $P5144, vivi_12422311
    die "Contextual %*REG not found"
    box $P5146, "Contextual %*REG not found"
    set $P5144, $P5146
  vivi_12422311:
    set $P103, $P5144
  fallback2307:
    set fb_tmp_342, $P103
    repr_defined $I5019, fb_tmp_342
    unless $I5019 goto if1239_else2305 
    set $P5147, fb_tmp_342["start"]
    set $P5149, $P5147
    goto if1239_end2306
  if1239_else2305:
    null $P5148
    set $P5149, $P5148
  if1239_end2306:
    unless_null $P5149, vivi_12432312
    nqp_get_sc_object $P5150, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5149, $P5150
  vivi_12432312:
    set $S5024, $P5149
    concat $S5023, $S5024, "[3]"
    $P101."push_pirop"("set", $P5138, $S5023)
.annotate 'line', 3709
    unless_null $P103, fallback2315
    nqp_get_sc_object $P5152, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5151, $P5152
    set pkg_viv_tmp_22, $P5151
    set fb_tmp_345, pkg_viv_tmp_22
    repr_defined $I5022, fb_tmp_345
    unless $I5022 goto if1245_else2316 
    set $P5153, fb_tmp_345["%REG"]
    set $P5155, $P5153
    goto if1245_end2317
  if1245_else2316:
    null $P5154
    set $P5155, $P5154
  if1245_end2317:
    unless_null $P5155, vivi_12462318
    new $P5156, 'Hash'
    set pkg_viv_tmp_22["%REG"], $P5156
    set $P5155, $P5156
  vivi_12462318:
    unless_null $P5155, vivi_12472319
    die "Contextual %*REG not found"
    box $P5157, "Contextual %*REG not found"
    set $P5155, $P5157
  vivi_12472319:
    set $P103, $P5155
  fallback2315:
    set fb_tmp_344, $P103
    repr_defined $I5021, fb_tmp_344
    unless $I5021 goto if1244_else2313 
    set $P5158, fb_tmp_344["bstack"]
    set $P5160, $P5158
    goto if1244_end2314
  if1244_else2313:
    null $P5159
    set $P5160, $P5159
  if1244_end2314:
    unless_null $P5160, vivi_12482320
    nqp_get_sc_object $P5161, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5160, $P5161
  vivi_12482320:
    unless_null $P103, fallback2323
    nqp_get_sc_object $P5163, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5162, $P5163
    set pkg_viv_tmp_23, $P5162
    set fb_tmp_347, pkg_viv_tmp_23
    repr_defined $I5024, fb_tmp_347
    unless $I5024 goto if1250_else2324 
    set $P5164, fb_tmp_347["%REG"]
    set $P5166, $P5164
    goto if1250_end2325
  if1250_else2324:
    null $P5165
    set $P5166, $P5165
  if1250_end2325:
    unless_null $P5166, vivi_12512326
    new $P5167, 'Hash'
    set pkg_viv_tmp_23["%REG"], $P5167
    set $P5166, $P5167
  vivi_12512326:
    unless_null $P5166, vivi_12522327
    die "Contextual %*REG not found"
    box $P5168, "Contextual %*REG not found"
    set $P5166, $P5168
  vivi_12522327:
    set $P103, $P5166
  fallback2323:
    set fb_tmp_346, $P103
    repr_defined $I5023, fb_tmp_346
    unless $I5023 goto if1249_else2321 
    set $P5169, fb_tmp_346["start"]
    set $P5171, $P5169
    goto if1249_end2322
  if1249_else2321:
    null $P5170
    set $P5171, $P5170
  if1249_end2322:
    unless_null $P5171, vivi_12532328
    nqp_get_sc_object $P5172, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5171, $P5172
  vivi_12532328:
    set $S5026, $P5171
    concat $S5025, $S5026, "[4]"
    $P101."push_pirop"("set", $P5160, $S5025)
.annotate 'line', 3710
    unless_null $P103, fallback2331
    nqp_get_sc_object $P5174, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5173, $P5174
    set pkg_viv_tmp_24, $P5173
    set fb_tmp_349, pkg_viv_tmp_24
    repr_defined $I5026, fb_tmp_349
    unless $I5026 goto if1255_else2332 
    set $P5175, fb_tmp_349["%REG"]
    set $P5177, $P5175
    goto if1255_end2333
  if1255_else2332:
    null $P5176
    set $P5177, $P5176
  if1255_end2333:
    unless_null $P5177, vivi_12562334
    new $P5178, 'Hash'
    set pkg_viv_tmp_24["%REG"], $P5178
    set $P5177, $P5178
  vivi_12562334:
    unless_null $P5177, vivi_12572335
    die "Contextual %*REG not found"
    box $P5179, "Contextual %*REG not found"
    set $P5177, $P5179
  vivi_12572335:
    set $P103, $P5177
  fallback2331:
    set fb_tmp_348, $P103
    repr_defined $I5025, fb_tmp_348
    unless $I5025 goto if1254_else2329 
    set $P5180, fb_tmp_348["start"]
    set $P5182, $P5180
    goto if1254_end2330
  if1254_else2329:
    null $P5181
    set $P5182, $P5181
  if1254_end2330:
    unless_null $P5182, vivi_12582336
    nqp_get_sc_object $P5183, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5182, $P5183
  vivi_12582336:
    set $S5028, $P5182
    concat $S5027, $S5028, "[5]"
    $P101."push_pirop"("set", "$I19", $S5027)
.annotate 'line', 3711
    unless_null $P103, fallback2339
    nqp_get_sc_object $P5185, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5184, $P5185
    set pkg_viv_tmp_25, $P5184
    set fb_tmp_351, pkg_viv_tmp_25
    repr_defined $I5028, fb_tmp_351
    unless $I5028 goto if1260_else2340 
    set $P5186, fb_tmp_351["%REG"]
    set $P5188, $P5186
    goto if1260_end2341
  if1260_else2340:
    null $P5187
    set $P5188, $P5187
  if1260_end2341:
    unless_null $P5188, vivi_12612342
    new $P5189, 'Hash'
    set pkg_viv_tmp_25["%REG"], $P5189
    set $P5188, $P5189
  vivi_12612342:
    unless_null $P5188, vivi_12622343
    die "Contextual %*REG not found"
    box $P5190, "Contextual %*REG not found"
    set $P5188, $P5190
  vivi_12622343:
    set $P103, $P5188
  fallback2339:
    set fb_tmp_350, $P103
    repr_defined $I5027, fb_tmp_350
    unless $I5027 goto if1259_else2337 
    set $P5191, fb_tmp_350["cur"]
    set $P5193, $P5191
    goto if1259_end2338
  if1259_else2337:
    null $P5192
    set $P5193, $P5192
  if1259_end2338:
    unless_null $P5193, vivi_12632344
    nqp_get_sc_object $P5194, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5193, $P5194
  vivi_12632344:
    $P101."push_pirop"("store_lex", utf8:"unicode:\"$\\x{a2}\"", $P5193)
.annotate 'line', 3712
    unless_null $P103, fallback2347
    nqp_get_sc_object $P5196, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5195, $P5196
    set pkg_viv_tmp_26, $P5195
    set fb_tmp_353, pkg_viv_tmp_26
    repr_defined $I5030, fb_tmp_353
    unless $I5030 goto if1265_else2348 
    set $P5197, fb_tmp_353["%REG"]
    set $P5199, $P5197
    goto if1265_end2349
  if1265_else2348:
    null $P5198
    set $P5199, $P5198
  if1265_end2349:
    unless_null $P5199, vivi_12662350
    new $P5200, 'Hash'
    set pkg_viv_tmp_26["%REG"], $P5200
    set $P5199, $P5200
  vivi_12662350:
    unless_null $P5199, vivi_12672351
    die "Contextual %*REG not found"
    box $P5201, "Contextual %*REG not found"
    set $P5199, $P5201
  vivi_12672351:
    set $P103, $P5199
  fallback2347:
    set fb_tmp_352, $P103
    repr_defined $I5029, fb_tmp_352
    unless $I5029 goto if1264_else2345 
    set $P5202, fb_tmp_352["eos"]
    set $P5204, $P5202
    goto if1264_end2346
  if1264_else2345:
    null $P5203
    set $P5204, $P5203
  if1264_end2346:
    unless_null $P5204, vivi_12682352
    nqp_get_sc_object $P5205, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5204, $P5205
  vivi_12682352:
    unless_null $P103, fallback2355
    nqp_get_sc_object $P5207, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5206, $P5207
    set pkg_viv_tmp_27, $P5206
    set fb_tmp_355, pkg_viv_tmp_27
    repr_defined $I5032, fb_tmp_355
    unless $I5032 goto if1270_else2356 
    set $P5208, fb_tmp_355["%REG"]
    set $P5210, $P5208
    goto if1270_end2357
  if1270_else2356:
    null $P5209
    set $P5210, $P5209
  if1270_end2357:
    unless_null $P5210, vivi_12712358
    new $P5211, 'Hash'
    set pkg_viv_tmp_27["%REG"], $P5211
    set $P5210, $P5211
  vivi_12712358:
    unless_null $P5210, vivi_12722359
    die "Contextual %*REG not found"
    box $P5212, "Contextual %*REG not found"
    set $P5210, $P5212
  vivi_12722359:
    set $P103, $P5210
  fallback2355:
    set fb_tmp_354, $P103
    repr_defined $I5031, fb_tmp_354
    unless $I5031 goto if1269_else2353 
    set $P5213, fb_tmp_354["tgt"]
    set $P5215, $P5213
    goto if1269_end2354
  if1269_else2353:
    null $P5214
    set $P5215, $P5214
  if1269_end2354:
    unless_null $P5215, vivi_12732360
    nqp_get_sc_object $P5216, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5215, $P5216
  vivi_12732360:
    $P101."push_pirop"("length", $P5204, $P5215)
.annotate 'line', 3713
    $P101."push_pirop"("eq", "$I19", 1, $P107)
.annotate 'line', 3714
    unless_null $P103, fallback2363
    nqp_get_sc_object $P5218, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5217, $P5218
    set pkg_viv_tmp_28, $P5217
    set fb_tmp_357, pkg_viv_tmp_28
    repr_defined $I5034, fb_tmp_357
    unless $I5034 goto if1275_else2364 
    set $P5219, fb_tmp_357["%REG"]
    set $P5221, $P5219
    goto if1275_end2365
  if1275_else2364:
    null $P5220
    set $P5221, $P5220
  if1275_end2365:
    unless_null $P5221, vivi_12762366
    new $P5222, 'Hash'
    set pkg_viv_tmp_28["%REG"], $P5222
    set $P5221, $P5222
  vivi_12762366:
    unless_null $P5221, vivi_12772367
    die "Contextual %*REG not found"
    box $P5223, "Contextual %*REG not found"
    set $P5221, $P5223
  vivi_12772367:
    set $P103, $P5221
  fallback2363:
    set fb_tmp_356, $P103
    repr_defined $I5033, fb_tmp_356
    unless $I5033 goto if1274_else2361 
    set $P5224, fb_tmp_356["pos"]
    set $P5226, $P5224
    goto if1274_end2362
  if1274_else2361:
    null $P5225
    set $P5226, $P5225
  if1274_end2362:
    unless_null $P5226, vivi_12782368
    nqp_get_sc_object $P5227, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5226, $P5227
  vivi_12782368:
    unless_null $P103, fallback2371
    nqp_get_sc_object $P5229, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5228, $P5229
    set pkg_viv_tmp_29, $P5228
    set fb_tmp_359, pkg_viv_tmp_29
    repr_defined $I5036, fb_tmp_359
    unless $I5036 goto if1280_else2372 
    set $P5230, fb_tmp_359["%REG"]
    set $P5232, $P5230
    goto if1280_end2373
  if1280_else2372:
    null $P5231
    set $P5232, $P5231
  if1280_end2373:
    unless_null $P5232, vivi_12812374
    new $P5233, 'Hash'
    set pkg_viv_tmp_29["%REG"], $P5233
    set $P5232, $P5233
  vivi_12812374:
    unless_null $P5232, vivi_12822375
    die "Contextual %*REG not found"
    box $P5234, "Contextual %*REG not found"
    set $P5232, $P5234
  vivi_12822375:
    set $P103, $P5232
  fallback2371:
    set fb_tmp_358, $P103
    repr_defined $I5035, fb_tmp_358
    unless $I5035 goto if1279_else2369 
    set $P5235, fb_tmp_358["eos"]
    set $P5237, $P5235
    goto if1279_end2370
  if1279_else2369:
    null $P5236
    set $P5237, $P5236
  if1279_end2370:
    unless_null $P5237, vivi_12832376
    nqp_get_sc_object $P5238, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5237, $P5238
  vivi_12832376:
    unless_null $P103, fallback2379
    nqp_get_sc_object $P5240, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5239, $P5240
    set pkg_viv_tmp_30, $P5239
    set fb_tmp_361, pkg_viv_tmp_30
    repr_defined $I5038, fb_tmp_361
    unless $I5038 goto if1285_else2380 
    set $P5241, fb_tmp_361["%REG"]
    set $P5243, $P5241
    goto if1285_end2381
  if1285_else2380:
    null $P5242
    set $P5243, $P5242
  if1285_end2381:
    unless_null $P5243, vivi_12862382
    new $P5244, 'Hash'
    set pkg_viv_tmp_30["%REG"], $P5244
    set $P5243, $P5244
  vivi_12862382:
    unless_null $P5243, vivi_12872383
    die "Contextual %*REG not found"
    box $P5245, "Contextual %*REG not found"
    set $P5243, $P5245
  vivi_12872383:
    set $P103, $P5243
  fallback2379:
    set fb_tmp_360, $P103
    repr_defined $I5037, fb_tmp_360
    unless $I5037 goto if1284_else2377 
    set $P5246, fb_tmp_360["fail"]
    set $P5248, $P5246
    goto if1284_end2378
  if1284_else2377:
    null $P5247
    set $P5248, $P5247
  if1284_end2378:
    unless_null $P5248, vivi_12882384
    nqp_get_sc_object $P5249, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5248, $P5249
  vivi_12882384:
    $P101."push_pirop"("gt", $P5226, $P5237, $P5248)
.annotate 'line', 3715
    nqp_decontainerize $P5250, _lex_param_0
    $P5251 = $P5250."regex_post"(_lex_param_1)
    $P101."push"($P5251)
.annotate 'line', 3716
    $P101."push"($P107)
.annotate 'line', 3717
    unless_null $P103, fallback2387
    nqp_get_sc_object $P5253, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5252, $P5253
    set pkg_viv_tmp_31, $P5252
    set fb_tmp_363, pkg_viv_tmp_31
    repr_defined $I5040, fb_tmp_363
    unless $I5040 goto if1290_else2388 
    set $P5254, fb_tmp_363["%REG"]
    set $P5256, $P5254
    goto if1290_end2389
  if1290_else2388:
    null $P5255
    set $P5256, $P5255
  if1290_end2389:
    unless_null $P5256, vivi_12912390
    new $P5257, 'Hash'
    set pkg_viv_tmp_31["%REG"], $P5257
    set $P5256, $P5257
  vivi_12912390:
    unless_null $P5256, vivi_12922391
    die "Contextual %*REG not found"
    box $P5258, "Contextual %*REG not found"
    set $P5256, $P5258
  vivi_12922391:
    set $P103, $P5256
  fallback2387:
    set fb_tmp_362, $P103
    repr_defined $I5039, fb_tmp_362
    unless $I5039 goto if1289_else2385 
    set $P5259, fb_tmp_362["cstack"]
    set $P5261, $P5259
    goto if1289_end2386
  if1289_else2385:
    null $P5260
    set $P5261, $P5260
  if1289_end2386:
    unless_null $P5261, vivi_12932392
    nqp_get_sc_object $P5262, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5261, $P5262
  vivi_12932392:
    unless_null $P103, fallback2395
    nqp_get_sc_object $P5264, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5263, $P5264
    set pkg_viv_tmp_32, $P5263
    set fb_tmp_365, pkg_viv_tmp_32
    repr_defined $I5042, fb_tmp_365
    unless $I5042 goto if1295_else2396 
    set $P5265, fb_tmp_365["%REG"]
    set $P5267, $P5265
    goto if1295_end2397
  if1295_else2396:
    null $P5266
    set $P5267, $P5266
  if1295_end2397:
    unless_null $P5267, vivi_12962398
    new $P5268, 'Hash'
    set pkg_viv_tmp_32["%REG"], $P5268
    set $P5267, $P5268
  vivi_12962398:
    unless_null $P5267, vivi_12972399
    die "Contextual %*REG not found"
    box $P5269, "Contextual %*REG not found"
    set $P5267, $P5269
  vivi_12972399:
    set $P103, $P5267
  fallback2395:
    set fb_tmp_364, $P103
    repr_defined $I5041, fb_tmp_364
    unless $I5041 goto if1294_else2393 
    set $P5270, fb_tmp_364["cur"]
    set $P5272, $P5270
    goto if1294_end2394
  if1294_else2393:
    null $P5271
    set $P5272, $P5271
  if1294_end2394:
    unless_null $P5272, vivi_12982400
    nqp_get_sc_object $P5273, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5272, $P5273
  vivi_12982400:
    unless_null $P103, fallback2403
    nqp_get_sc_object $P5275, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5274, $P5275
    set pkg_viv_tmp_33, $P5274
    set fb_tmp_367, pkg_viv_tmp_33
    repr_defined $I5044, fb_tmp_367
    unless $I5044 goto if1300_else2404 
    set $P5276, fb_tmp_367["%REG"]
    set $P5278, $P5276
    goto if1300_end2405
  if1300_else2404:
    null $P5277
    set $P5278, $P5277
  if1300_end2405:
    unless_null $P5278, vivi_13012406
    new $P5279, 'Hash'
    set pkg_viv_tmp_33["%REG"], $P5279
    set $P5278, $P5279
  vivi_13012406:
    unless_null $P5278, vivi_13022407
    die "Contextual %*REG not found"
    box $P5280, "Contextual %*REG not found"
    set $P5278, $P5280
  vivi_13022407:
    set $P103, $P5278
  fallback2403:
    set fb_tmp_366, $P103
    repr_defined $I5043, fb_tmp_366
    unless $I5043 goto if1299_else2401 
    set $P5281, fb_tmp_366["curclass"]
    set $P5283, $P5281
    goto if1299_end2402
  if1299_else2401:
    null $P5282
    set $P5283, $P5282
  if1299_end2402:
    unless_null $P5283, vivi_13032408
    nqp_get_sc_object $P5284, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5283, $P5284
  vivi_13032408:
    $P101."push_pirop"("repr_get_attr_obj", $P5261, $P5272, $P5283, "\"$!cstack\"")
.annotate 'line', 3718
    $P101."push"($P108)
.annotate 'line', 3719
    unless_null $P103, fallback2411
    nqp_get_sc_object $P5286, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5285, $P5286
    set pkg_viv_tmp_34, $P5285
    set fb_tmp_369, pkg_viv_tmp_34
    repr_defined $I5046, fb_tmp_369
    unless $I5046 goto if1305_else2412 
    set $P5287, fb_tmp_369["%REG"]
    set $P5289, $P5287
    goto if1305_end2413
  if1305_else2412:
    null $P5288
    set $P5289, $P5288
  if1305_end2413:
    unless_null $P5289, vivi_13062414
    new $P5290, 'Hash'
    set pkg_viv_tmp_34["%REG"], $P5290
    set $P5289, $P5290
  vivi_13062414:
    unless_null $P5289, vivi_13072415
    die "Contextual %*REG not found"
    box $P5291, "Contextual %*REG not found"
    set $P5289, $P5291
  vivi_13072415:
    set $P103, $P5289
  fallback2411:
    set fb_tmp_368, $P103
    repr_defined $I5045, fb_tmp_368
    unless $I5045 goto if1304_else2409 
    set $P5292, fb_tmp_368["bstack"]
    set $P5294, $P5292
    goto if1304_end2410
  if1304_else2409:
    null $P5293
    set $P5294, $P5293
  if1304_end2410:
    unless_null $P5294, vivi_13082416
    nqp_get_sc_object $P5295, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5294, $P5295
  vivi_13082416:
    $P101."push_pirop"("unless", $P5294, $P106)
.annotate 'line', 3720
    unless_null $P103, fallback2419
    nqp_get_sc_object $P5297, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5296, $P5297
    set pkg_viv_tmp_35, $P5296
    set fb_tmp_371, pkg_viv_tmp_35
    repr_defined $I5048, fb_tmp_371
    unless $I5048 goto if1310_else2420 
    set $P5298, fb_tmp_371["%REG"]
    set $P5300, $P5298
    goto if1310_end2421
  if1310_else2420:
    null $P5299
    set $P5300, $P5299
  if1310_end2421:
    unless_null $P5300, vivi_13112422
    new $P5301, 'Hash'
    set pkg_viv_tmp_35["%REG"], $P5301
    set $P5300, $P5301
  vivi_13112422:
    unless_null $P5300, vivi_13122423
    die "Contextual %*REG not found"
    box $P5302, "Contextual %*REG not found"
    set $P5300, $P5302
  vivi_13122423:
    set $P103, $P5300
  fallback2419:
    set fb_tmp_370, $P103
    repr_defined $I5047, fb_tmp_370
    unless $I5047 goto if1309_else2417 
    set $P5303, fb_tmp_370["bstack"]
    set $P5305, $P5303
    goto if1309_end2418
  if1309_else2417:
    null $P5304
    set $P5305, $P5304
  if1309_end2418:
    unless_null $P5305, vivi_13132424
    nqp_get_sc_object $P5306, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5305, $P5306
  vivi_13132424:
    $P101."push_pirop"("pop", "$I19", $P5305)
.annotate 'line', 3721
    unless_null $P103, fallback2427
    nqp_get_sc_object $P5308, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5307, $P5308
    set pkg_viv_tmp_36, $P5307
    set fb_tmp_373, pkg_viv_tmp_36
    repr_defined $I5050, fb_tmp_373
    unless $I5050 goto if1315_else2428 
    set $P5309, fb_tmp_373["%REG"]
    set $P5311, $P5309
    goto if1315_end2429
  if1315_else2428:
    null $P5310
    set $P5311, $P5310
  if1315_end2429:
    unless_null $P5311, vivi_13162430
    new $P5312, 'Hash'
    set pkg_viv_tmp_36["%REG"], $P5312
    set $P5311, $P5312
  vivi_13162430:
    unless_null $P5311, vivi_13172431
    die "Contextual %*REG not found"
    box $P5313, "Contextual %*REG not found"
    set $P5311, $P5313
  vivi_13172431:
    set $P103, $P5311
  fallback2427:
    set fb_tmp_372, $P103
    repr_defined $I5049, fb_tmp_372
    unless $I5049 goto if1314_else2425 
    set $P5314, fb_tmp_372["cstack"]
    set $P5316, $P5314
    goto if1314_end2426
  if1314_else2425:
    null $P5315
    set $P5316, $P5315
  if1314_end2426:
    unless_null $P5316, vivi_13182432
    nqp_get_sc_object $P5317, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5316, $P5317
  vivi_13182432:
    $P101."push_pirop"("if_null", $P5316, $P111)
.annotate 'line', 3722
    unless_null $P103, fallback2435
    nqp_get_sc_object $P5319, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5318, $P5319
    set pkg_viv_tmp_37, $P5318
    set fb_tmp_375, pkg_viv_tmp_37
    repr_defined $I5052, fb_tmp_375
    unless $I5052 goto if1320_else2436 
    set $P5320, fb_tmp_375["%REG"]
    set $P5322, $P5320
    goto if1320_end2437
  if1320_else2436:
    null $P5321
    set $P5322, $P5321
  if1320_end2437:
    unless_null $P5322, vivi_13212438
    new $P5323, 'Hash'
    set pkg_viv_tmp_37["%REG"], $P5323
    set $P5322, $P5323
  vivi_13212438:
    unless_null $P5322, vivi_13222439
    die "Contextual %*REG not found"
    box $P5324, "Contextual %*REG not found"
    set $P5322, $P5324
  vivi_13222439:
    set $P103, $P5322
  fallback2435:
    set fb_tmp_374, $P103
    repr_defined $I5051, fb_tmp_374
    unless $I5051 goto if1319_else2433 
    set $P5325, fb_tmp_374["cstack"]
    set $P5327, $P5325
    goto if1319_end2434
  if1319_else2433:
    null $P5326
    set $P5327, $P5326
  if1319_end2434:
    unless_null $P5327, vivi_13232440
    nqp_get_sc_object $P5328, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5327, $P5328
  vivi_13232440:
    $P101."push_pirop"("unless", $P5327, $P111)
.annotate 'line', 3723
    $P101."push_pirop"("dec", "$I19")
.annotate 'line', 3724
    unless_null $P103, fallback2443
    nqp_get_sc_object $P5330, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5329, $P5330
    set pkg_viv_tmp_38, $P5329
    set fb_tmp_377, pkg_viv_tmp_38
    repr_defined $I5054, fb_tmp_377
    unless $I5054 goto if1325_else2444 
    set $P5331, fb_tmp_377["%REG"]
    set $P5333, $P5331
    goto if1325_end2445
  if1325_else2444:
    null $P5332
    set $P5333, $P5332
  if1325_end2445:
    unless_null $P5333, vivi_13262446
    new $P5334, 'Hash'
    set pkg_viv_tmp_38["%REG"], $P5334
    set $P5333, $P5334
  vivi_13262446:
    unless_null $P5333, vivi_13272447
    die "Contextual %*REG not found"
    box $P5335, "Contextual %*REG not found"
    set $P5333, $P5335
  vivi_13272447:
    set $P103, $P5333
  fallback2443:
    set fb_tmp_376, $P103
    repr_defined $I5053, fb_tmp_376
    unless $I5053 goto if1324_else2441 
    set $P5336, fb_tmp_376["cstack"]
    set $P5338, $P5336
    goto if1324_end2442
  if1324_else2441:
    null $P5337
    set $P5338, $P5337
  if1324_end2442:
    unless_null $P5338, vivi_13282448
    nqp_get_sc_object $P5339, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5338, $P5339
  vivi_13282448:
    set $S5030, $P5338
    concat $S5029, $S5030, "[$I19]"
    $P101."push_pirop"("set", "$P11", $S5029)
.annotate 'line', 3725
    $P101."push"($P111)
.annotate 'line', 3726
    unless_null $P103, fallback2451
    nqp_get_sc_object $P5341, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5340, $P5341
    set pkg_viv_tmp_39, $P5340
    set fb_tmp_379, pkg_viv_tmp_39
    repr_defined $I5056, fb_tmp_379
    unless $I5056 goto if1330_else2452 
    set $P5342, fb_tmp_379["%REG"]
    set $P5344, $P5342
    goto if1330_end2453
  if1330_else2452:
    null $P5343
    set $P5344, $P5343
  if1330_end2453:
    unless_null $P5344, vivi_13312454
    new $P5345, 'Hash'
    set pkg_viv_tmp_39["%REG"], $P5345
    set $P5344, $P5345
  vivi_13312454:
    unless_null $P5344, vivi_13322455
    die "Contextual %*REG not found"
    box $P5346, "Contextual %*REG not found"
    set $P5344, $P5346
  vivi_13322455:
    set $P103, $P5344
  fallback2451:
    set fb_tmp_378, $P103
    repr_defined $I5055, fb_tmp_378
    unless $I5055 goto if1329_else2449 
    set $P5347, fb_tmp_378["rep"]
    set $P5349, $P5347
    goto if1329_end2450
  if1329_else2449:
    null $P5348
    set $P5349, $P5348
  if1329_end2450:
    unless_null $P5349, vivi_13332456
    nqp_get_sc_object $P5350, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5349, $P5350
  vivi_13332456:
    unless_null $P103, fallback2459
    nqp_get_sc_object $P5352, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5351, $P5352
    set pkg_viv_tmp_40, $P5351
    set fb_tmp_381, pkg_viv_tmp_40
    repr_defined $I5058, fb_tmp_381
    unless $I5058 goto if1335_else2460 
    set $P5353, fb_tmp_381["%REG"]
    set $P5355, $P5353
    goto if1335_end2461
  if1335_else2460:
    null $P5354
    set $P5355, $P5354
  if1335_end2461:
    unless_null $P5355, vivi_13362462
    new $P5356, 'Hash'
    set pkg_viv_tmp_40["%REG"], $P5356
    set $P5355, $P5356
  vivi_13362462:
    unless_null $P5355, vivi_13372463
    die "Contextual %*REG not found"
    box $P5357, "Contextual %*REG not found"
    set $P5355, $P5357
  vivi_13372463:
    set $P103, $P5355
  fallback2459:
    set fb_tmp_380, $P103
    repr_defined $I5057, fb_tmp_380
    unless $I5057 goto if1334_else2457 
    set $P5358, fb_tmp_380["bstack"]
    set $P5360, $P5358
    goto if1334_end2458
  if1334_else2457:
    null $P5359
    set $P5360, $P5359
  if1334_end2458:
    unless_null $P5360, vivi_13382464
    nqp_get_sc_object $P5361, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5360, $P5361
  vivi_13382464:
    $P101."push_pirop"("pop", $P5349, $P5360)
.annotate 'line', 3727
    unless_null $P103, fallback2467
    nqp_get_sc_object $P5363, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5362, $P5363
    set pkg_viv_tmp_41, $P5362
    set fb_tmp_383, pkg_viv_tmp_41
    repr_defined $I5060, fb_tmp_383
    unless $I5060 goto if1340_else2468 
    set $P5364, fb_tmp_383["%REG"]
    set $P5366, $P5364
    goto if1340_end2469
  if1340_else2468:
    null $P5365
    set $P5366, $P5365
  if1340_end2469:
    unless_null $P5366, vivi_13412470
    new $P5367, 'Hash'
    set pkg_viv_tmp_41["%REG"], $P5367
    set $P5366, $P5367
  vivi_13412470:
    unless_null $P5366, vivi_13422471
    die "Contextual %*REG not found"
    box $P5368, "Contextual %*REG not found"
    set $P5366, $P5368
  vivi_13422471:
    set $P103, $P5366
  fallback2467:
    set fb_tmp_382, $P103
    repr_defined $I5059, fb_tmp_382
    unless $I5059 goto if1339_else2465 
    set $P5369, fb_tmp_382["pos"]
    set $P5371, $P5369
    goto if1339_end2466
  if1339_else2465:
    null $P5370
    set $P5371, $P5370
  if1339_end2466:
    unless_null $P5371, vivi_13432472
    nqp_get_sc_object $P5372, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5371, $P5372
  vivi_13432472:
    unless_null $P103, fallback2475
    nqp_get_sc_object $P5374, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5373, $P5374
    set pkg_viv_tmp_42, $P5373
    set fb_tmp_385, pkg_viv_tmp_42
    repr_defined $I5062, fb_tmp_385
    unless $I5062 goto if1345_else2476 
    set $P5375, fb_tmp_385["%REG"]
    set $P5377, $P5375
    goto if1345_end2477
  if1345_else2476:
    null $P5376
    set $P5377, $P5376
  if1345_end2477:
    unless_null $P5377, vivi_13462478
    new $P5378, 'Hash'
    set pkg_viv_tmp_42["%REG"], $P5378
    set $P5377, $P5378
  vivi_13462478:
    unless_null $P5377, vivi_13472479
    die "Contextual %*REG not found"
    box $P5379, "Contextual %*REG not found"
    set $P5377, $P5379
  vivi_13472479:
    set $P103, $P5377
  fallback2475:
    set fb_tmp_384, $P103
    repr_defined $I5061, fb_tmp_384
    unless $I5061 goto if1344_else2473 
    set $P5380, fb_tmp_384["bstack"]
    set $P5382, $P5380
    goto if1344_end2474
  if1344_else2473:
    null $P5381
    set $P5382, $P5381
  if1344_end2474:
    unless_null $P5382, vivi_13482480
    nqp_get_sc_object $P5383, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5382, $P5383
  vivi_13482480:
    $P101."push_pirop"("pop", $P5371, $P5382)
.annotate 'line', 3728
    unless_null $P103, fallback2483
    nqp_get_sc_object $P5385, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5384, $P5385
    set pkg_viv_tmp_43, $P5384
    set fb_tmp_387, pkg_viv_tmp_43
    repr_defined $I5064, fb_tmp_387
    unless $I5064 goto if1350_else2484 
    set $P5386, fb_tmp_387["%REG"]
    set $P5388, $P5386
    goto if1350_end2485
  if1350_else2484:
    null $P5387
    set $P5388, $P5387
  if1350_end2485:
    unless_null $P5388, vivi_13512486
    new $P5389, 'Hash'
    set pkg_viv_tmp_43["%REG"], $P5389
    set $P5388, $P5389
  vivi_13512486:
    unless_null $P5388, vivi_13522487
    die "Contextual %*REG not found"
    box $P5390, "Contextual %*REG not found"
    set $P5388, $P5390
  vivi_13522487:
    set $P103, $P5388
  fallback2483:
    set fb_tmp_386, $P103
    repr_defined $I5063, fb_tmp_386
    unless $I5063 goto if1349_else2481 
    set $P5391, fb_tmp_386["bstack"]
    set $P5393, $P5391
    goto if1349_end2482
  if1349_else2481:
    null $P5392
    set $P5393, $P5392
  if1349_end2482:
    unless_null $P5393, vivi_13532488
    nqp_get_sc_object $P5394, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5393, $P5394
  vivi_13532488:
    $P101."push_pirop"("pop", "$I19", $P5393)
.annotate 'line', 3729
    unless_null $P103, fallback2491
    nqp_get_sc_object $P5396, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5395, $P5396
    set pkg_viv_tmp_44, $P5395
    set fb_tmp_389, pkg_viv_tmp_44
    repr_defined $I5066, fb_tmp_389
    unless $I5066 goto if1355_else2492 
    set $P5397, fb_tmp_389["%REG"]
    set $P5399, $P5397
    goto if1355_end2493
  if1355_else2492:
    null $P5398
    set $P5399, $P5398
  if1355_end2493:
    unless_null $P5399, vivi_13562494
    new $P5400, 'Hash'
    set pkg_viv_tmp_44["%REG"], $P5400
    set $P5399, $P5400
  vivi_13562494:
    unless_null $P5399, vivi_13572495
    die "Contextual %*REG not found"
    box $P5401, "Contextual %*REG not found"
    set $P5399, $P5401
  vivi_13572495:
    set $P103, $P5399
  fallback2491:
    set fb_tmp_388, $P103
    repr_defined $I5065, fb_tmp_388
    unless $I5065 goto if1354_else2489 
    set $P5402, fb_tmp_388["pos"]
    set $P5404, $P5402
    goto if1354_end2490
  if1354_else2489:
    null $P5403
    set $P5404, $P5403
  if1354_end2490:
    unless_null $P5404, vivi_13582496
    nqp_get_sc_object $P5405, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5404, $P5405
  vivi_13582496:
    $P101."push_pirop"("lt", $P5404, -1, $P106)
.annotate 'line', 3730
    unless_null $P103, fallback2499
    nqp_get_sc_object $P5407, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5406, $P5407
    set pkg_viv_tmp_45, $P5406
    set fb_tmp_391, pkg_viv_tmp_45
    repr_defined $I5068, fb_tmp_391
    unless $I5068 goto if1360_else2500 
    set $P5408, fb_tmp_391["%REG"]
    set $P5410, $P5408
    goto if1360_end2501
  if1360_else2500:
    null $P5409
    set $P5410, $P5409
  if1360_end2501:
    unless_null $P5410, vivi_13612502
    new $P5411, 'Hash'
    set pkg_viv_tmp_45["%REG"], $P5411
    set $P5410, $P5411
  vivi_13612502:
    unless_null $P5410, vivi_13622503
    die "Contextual %*REG not found"
    box $P5412, "Contextual %*REG not found"
    set $P5410, $P5412
  vivi_13622503:
    set $P103, $P5410
  fallback2499:
    set fb_tmp_390, $P103
    repr_defined $I5067, fb_tmp_390
    unless $I5067 goto if1359_else2497 
    set $P5413, fb_tmp_390["pos"]
    set $P5415, $P5413
    goto if1359_end2498
  if1359_else2497:
    null $P5414
    set $P5415, $P5414
  if1359_end2498:
    unless_null $P5415, vivi_13632504
    nqp_get_sc_object $P5416, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5415, $P5416
  vivi_13632504:
    $P101."push_pirop"("lt", $P5415, 0, $P108)
.annotate 'line', 3731
    $P101."push_pirop"("eq", "$I19", 0, $P108)
.annotate 'line', 3733
    unless_null $P103, fallback2507
    nqp_get_sc_object $P5418, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5417, $P5418
    set pkg_viv_tmp_46, $P5417
    set fb_tmp_393, pkg_viv_tmp_46
    repr_defined $I5070, fb_tmp_393
    unless $I5070 goto if1365_else2508 
    set $P5419, fb_tmp_393["%REG"]
    set $P5421, $P5419
    goto if1365_end2509
  if1365_else2508:
    null $P5420
    set $P5421, $P5420
  if1365_end2509:
    unless_null $P5421, vivi_13662510
    new $P5422, 'Hash'
    set pkg_viv_tmp_46["%REG"], $P5422
    set $P5421, $P5422
  vivi_13662510:
    unless_null $P5421, vivi_13672511
    die "Contextual %*REG not found"
    box $P5423, "Contextual %*REG not found"
    set $P5421, $P5423
  vivi_13672511:
    set $P103, $P5421
  fallback2507:
    set fb_tmp_392, $P103
    repr_defined $I5069, fb_tmp_392
    unless $I5069 goto if1364_else2505 
    set $P5424, fb_tmp_392["cstack"]
    set $P5426, $P5424
    goto if1364_end2506
  if1364_else2505:
    null $P5425
    set $P5426, $P5425
  if1364_end2506:
    unless_null $P5426, vivi_13682512
    nqp_get_sc_object $P5427, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5426, $P5427
  vivi_13682512:
    $P101."push_pirop"("nqp_islist", "$I20", $P5426)
.annotate 'line', 3734
    $P101."push_pirop"("unless", "$I20", $P109)
.annotate 'line', 3735
    unless_null $P103, fallback2515
    nqp_get_sc_object $P5429, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5428, $P5429
    set pkg_viv_tmp_47, $P5428
    set fb_tmp_395, pkg_viv_tmp_47
    repr_defined $I5072, fb_tmp_395
    unless $I5072 goto if1370_else2516 
    set $P5430, fb_tmp_395["%REG"]
    set $P5432, $P5430
    goto if1370_end2517
  if1370_else2516:
    null $P5431
    set $P5432, $P5431
  if1370_end2517:
    unless_null $P5432, vivi_13712518
    new $P5433, 'Hash'
    set pkg_viv_tmp_47["%REG"], $P5433
    set $P5432, $P5433
  vivi_13712518:
    unless_null $P5432, vivi_13722519
    die "Contextual %*REG not found"
    box $P5434, "Contextual %*REG not found"
    set $P5432, $P5434
  vivi_13722519:
    set $P103, $P5432
  fallback2515:
    set fb_tmp_394, $P103
    repr_defined $I5071, fb_tmp_394
    unless $I5071 goto if1369_else2513 
    set $P5435, fb_tmp_394["bstack"]
    set $P5437, $P5435
    goto if1369_end2514
  if1369_else2513:
    null $P5436
    set $P5437, $P5436
  if1369_end2514:
    unless_null $P5437, vivi_13732520
    nqp_get_sc_object $P5438, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5437, $P5438
  vivi_13732520:
    $P101."push_pirop"("elements", "$I18", $P5437)
.annotate 'line', 3736
    $P101."push_pirop"("le", "$I18", 0, $P110)
.annotate 'line', 3737
    $P101."push_pirop"("dec", "$I18")
.annotate 'line', 3738
    unless_null $P103, fallback2523
    nqp_get_sc_object $P5440, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5439, $P5440
    set pkg_viv_tmp_48, $P5439
    set fb_tmp_397, pkg_viv_tmp_48
    repr_defined $I5074, fb_tmp_397
    unless $I5074 goto if1375_else2524 
    set $P5441, fb_tmp_397["%REG"]
    set $P5443, $P5441
    goto if1375_end2525
  if1375_else2524:
    null $P5442
    set $P5443, $P5442
  if1375_end2525:
    unless_null $P5443, vivi_13762526
    new $P5444, 'Hash'
    set pkg_viv_tmp_48["%REG"], $P5444
    set $P5443, $P5444
  vivi_13762526:
    unless_null $P5443, vivi_13772527
    die "Contextual %*REG not found"
    box $P5445, "Contextual %*REG not found"
    set $P5443, $P5445
  vivi_13772527:
    set $P103, $P5443
  fallback2523:
    set fb_tmp_396, $P103
    repr_defined $I5073, fb_tmp_396
    unless $I5073 goto if1374_else2521 
    set $P5446, fb_tmp_396["bstack"]
    set $P5448, $P5446
    goto if1374_end2522
  if1374_else2521:
    null $P5447
    set $P5448, $P5447
  if1374_end2522:
    unless_null $P5448, vivi_13782528
    nqp_get_sc_object $P5449, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5448, $P5449
  vivi_13782528:
    set $S5032, $P5448
    concat $S5031, $S5032, "[$I18]"
    $P101."push_pirop"("set", "$I18", $S5031)
.annotate 'line', 3739
    $P101."push"($P110)
.annotate 'line', 3740
    unless_null $P103, fallback2531
    nqp_get_sc_object $P5451, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5450, $P5451
    set pkg_viv_tmp_49, $P5450
    set fb_tmp_399, pkg_viv_tmp_49
    repr_defined $I5076, fb_tmp_399
    unless $I5076 goto if1380_else2532 
    set $P5452, fb_tmp_399["%REG"]
    set $P5454, $P5452
    goto if1380_end2533
  if1380_else2532:
    null $P5453
    set $P5454, $P5453
  if1380_end2533:
    unless_null $P5454, vivi_13812534
    new $P5455, 'Hash'
    set pkg_viv_tmp_49["%REG"], $P5455
    set $P5454, $P5455
  vivi_13812534:
    unless_null $P5454, vivi_13822535
    die "Contextual %*REG not found"
    box $P5456, "Contextual %*REG not found"
    set $P5454, $P5456
  vivi_13822535:
    set $P103, $P5454
  fallback2531:
    set fb_tmp_398, $P103
    repr_defined $I5075, fb_tmp_398
    unless $I5075 goto if1379_else2529 
    set $P5457, fb_tmp_398["cstack"]
    set $P5459, $P5457
    goto if1379_end2530
  if1379_else2529:
    null $P5458
    set $P5459, $P5458
  if1379_end2530:
    unless_null $P5459, vivi_13832536
    nqp_get_sc_object $P5460, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5459, $P5460
  vivi_13832536:
    $P101."push_pirop"("assign", $P5459, "$I18")
.annotate 'line', 3741
    $P101."push"($P109)
.annotate 'line', 3742
    $P101."push_pirop"("jump", "$I19")
.annotate 'line', 3743
    $P101."push"($P106)
.annotate 'line', 3744
    unless_null $P103, fallback2539
    nqp_get_sc_object $P5462, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5461, $P5462
    set pkg_viv_tmp_50, $P5461
    set fb_tmp_401, pkg_viv_tmp_50
    repr_defined $I5078, fb_tmp_401
    unless $I5078 goto if1385_else2540 
    set $P5463, fb_tmp_401["%REG"]
    set $P5465, $P5463
    goto if1385_end2541
  if1385_else2540:
    null $P5464
    set $P5465, $P5464
  if1385_end2541:
    unless_null $P5465, vivi_13862542
    new $P5466, 'Hash'
    set pkg_viv_tmp_50["%REG"], $P5466
    set $P5465, $P5466
  vivi_13862542:
    unless_null $P5465, vivi_13872543
    die "Contextual %*REG not found"
    box $P5467, "Contextual %*REG not found"
    set $P5465, $P5467
  vivi_13872543:
    set $P103, $P5465
  fallback2539:
    set fb_tmp_400, $P103
    repr_defined $I5077, fb_tmp_400
    unless $I5077 goto if1384_else2537 
    set $P5468, fb_tmp_400["cur"]
    set $P5470, $P5468
    goto if1384_end2538
  if1384_else2537:
    null $P5469
    set $P5470, $P5469
  if1384_end2538:
    unless_null $P5470, vivi_13882544
    nqp_get_sc_object $P5471, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5470, $P5471
  vivi_13882544:
    $P101."push_pirop"("callmethod", "\"!cursor_fail\"", $P5470)
.annotate 'line', 3746
    unless_null $P103, fallback2547
    nqp_get_sc_object $P5473, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5472, $P5473
    set pkg_viv_tmp_51, $P5472
    set fb_tmp_403, pkg_viv_tmp_51
    repr_defined $I5080, fb_tmp_403
    unless $I5080 goto if1390_else2548 
    set $P5474, fb_tmp_403["%REG"]
    set $P5476, $P5474
    goto if1390_end2549
  if1390_else2548:
    null $P5475
    set $P5476, $P5475
  if1390_end2549:
    unless_null $P5476, vivi_13912550
    new $P5477, 'Hash'
    set pkg_viv_tmp_51["%REG"], $P5477
    set $P5476, $P5477
  vivi_13912550:
    unless_null $P5476, vivi_13922551
    die "Contextual %*REG not found"
    box $P5478, "Contextual %*REG not found"
    set $P5476, $P5478
  vivi_13922551:
    set $P103, $P5476
  fallback2547:
    set fb_tmp_402, $P103
    repr_defined $I5079, fb_tmp_402
    unless $I5079 goto if1389_else2545 
    set $P5479, fb_tmp_402["cur"]
    set $P5481, $P5479
    goto if1389_end2546
  if1389_else2545:
    null $P5480
    set $P5481, $P5480
  if1389_end2546:
    unless_null $P5481, vivi_13932552
    nqp_get_sc_object $P5482, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5481, $P5482
  vivi_13932552:
    $P101."result"($P5481)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_373_1368096764.976") :anon :lex :outer("cuid_117_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3687
    .lex "$reg", $P101 
    .lex "$name", $P102 
    .local pmc fb_tmp_324 
    .local pmc pkg_viv_tmp_11 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    find_lex $P5004, "$reglist"
    shift $P5003, $P5004
    set $P101, $P5003
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2231
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_11, $P5006
    set fb_tmp_324, pkg_viv_tmp_11
    repr_defined $I5001, fb_tmp_324
    unless $I5001 goto if1193_else2232 
    set $P5008, fb_tmp_324["%REG"]
    set $P5010, $P5008
    goto if1193_end2233
  if1193_else2232:
    null $P5009
    set $P5010, $P5009
  if1193_end2233:
    unless_null $P5010, vivi_11942234
    new $P5011, 'Hash'
    set pkg_viv_tmp_11["%REG"], $P5011
    set $P5010, $P5011
  vivi_11942234:
    unless_null $P5010, vivi_11952235
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_11952235:
    set $P5005, $P5010
  fallback2231:
    set $S5001, $P101
    find_lex $P5013, "$prefix"
    set $S5003, $P5013
    set $S5004, $P101
    concat $S5002, $S5003, $S5004
    box $P5014, $S5002
    set $P5005[$S5001], $P5014
    set $P102, $P5014
.annotate 'line', 3690
    find_lex $P5015, "$ops"
    find_lex $P5017, "$reglist"
    shift $P5016, $P5017
    set $S5006, $P5016
    concat $S5005, ".local ", $S5006
    $P5018 = $P5015."push_pirop"($S5005, $P102)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "children" :subid("cuid_118_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3750
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_374_1368096764.976' 
    capture_lex $P5013 
    .lex "$posts", $P101 
    .lex "@results", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
.annotate 'line', 3751
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
    $P5008 = _lex_param_1."list"()
    set $P5005, $P5008
    iter $P5007, $P5008
  for_next2554:
    unless $P5007, for_done2556
    shift $P5010, $P5007
  for_redo2555:
    .const 'Sub' $P5009 = 'cuid_374_1368096764.976' 
    capture_lex $P5009
    $P5005 = $P5009($P5010)
    goto for_next2554
  for_done2556:
    new $P5011, 'ResizablePMCArray'
    push $P5011, $P101
    push $P5011, $P102
    new $P5012, 'ResizablePMCArray'
    push $P5011, $P5012
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1368096764.976") :anon :lex :outer("cuid_118_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3753
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3754
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."as_post"(_lex_param_0)
    set $P101, $P5004
.annotate 'line', 3755
    find_lex $P5005, "$posts"
    $P5005."push"($P101)
.annotate 'line', 3756
    find_lex $P5006, "@results"
    $P5007 = $P101."result"()
    $P5008 = $P5006."push"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "regex_post" :subid("cuid_119_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3761
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$rxtype", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3762
    $P5002 = _lex_param_1."rxtype"()
    set $P5003, $P5002
    if $P5002 goto unless1394_end2558 
    box $P5004, "concat"
    set $P5003, $P5004
  unless1394_end2558:
    set $P101, $P5003
.annotate 'line', 3763
    nqp_decontainerize $P5005, _lex_param_0
    set $S5001, $P101
    $P5006 = $P5005.$S5001(_lex_param_1)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "post_new" :subid("cuid_120_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3766
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy 
    .param pmc _lex_param_3 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$type", _lex_param_1 
    .lex "@args", _lex_param_2 
    .lex "%options", _lex_param_3 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
.annotate 'line', 3767
    find_lex $P5003, "$?PACKAGE"
    get_who $P5002, $P5003
    set fb_tmp_405, $P5002
    repr_defined $I5002, fb_tmp_405
    unless $I5002 goto if1396_else2561 
    set $P5004, fb_tmp_405["PIRT"]
    set $P5006, $P5004
    goto if1396_end2562
  if1396_else2561:
    null $P5005
    set $P5006, $P5005
  if1396_end2562:
    unless_null $P5006, vivi_13982564
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set $P5007, $P5008["PIRT"]
    unless_null $P5007, vivi_13972563
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5007, $P5010
  vivi_13972563:
    set $P5006, $P5007
  vivi_13982564:
    get_who $P5001, $P5006
    set fb_tmp_404, $P5001
    repr_defined $I5001, fb_tmp_404
    unless $I5001 goto if1395_else2559 
    set $S5001, _lex_param_1
    set $P5011, fb_tmp_404[$S5001]
    set $P5013, $P5011
    goto if1395_end2560
  if1395_else2559:
    null $P5012
    set $P5013, $P5012
  if1395_end2560:
    unless_null $P5013, vivi_13992565
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_13992565:
    $P5015 = $P5013."new"(_lex_param_2 :flat, _lex_param_3 :flat :named)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "alt" :subid("cuid_121_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3770
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5082 = 'cuid_375_1368096764.976' 
    capture_lex $P5082 
    .lex "$prefix", $P101 
    .lex "$endlabel", $P102 
    .lex "$label_list_ops", $P103 
    .lex "$ops", $P104 
    .lex "$altcount", $P105 
    .lex "$iter", $P106 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc pkg_viv_tmp_53 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc pkg_viv_tmp_54 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc pkg_viv_tmp_55 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    root_new $P107, ['parrot';'Continuation']
    set_label $P107, lexotic_2566
    .lex "RETURN", $P107
.annotate 'line', 3771
    $P5007 = _lex_param_1."name"()
    if $P5007 goto unless1400_end2569 
.annotate 'line', 3772
    nqp_decontainerize $P5008, _lex_param_0
    $P5009 = $P5008."altseq"(_lex_param_1)
    $P5010 = "RETURN"($P5009)
  unless1400_end2569:
.annotate 'line', 3777
    nqp_decontainerize $P5011, _lex_param_0
    $P5012 = $P5011."unique"("alt")
    set $S5002, $P5012
    concat $S5001, $S5002, "_"
    box $P5013, $S5001
    set $P101, $P5013
.annotate 'line', 3778
    nqp_decontainerize $P5014, _lex_param_0
    set $S5004, $P101
    concat $S5003, $S5004, "end"
    $P5015 = $P5014."post_new"("Label", $S5003 :named("name"))
    set $P102, $P5015
.annotate 'line', 3779
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5016."post_new"("Ops", "$P11" :named("result"))
    set $P103, $P5017
.annotate 'line', 3780
    $P103."push_pirop"("new", "$P11", "\"ResizableIntegerArray\"")
.annotate 'line', 3781
    nqp_decontainerize $P5018, _lex_param_0
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback2572
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_52, $P5020
    set fb_tmp_407, pkg_viv_tmp_52
    repr_defined $I5002, fb_tmp_407
    unless $I5002 goto if1402_else2573 
    set $P5022, fb_tmp_407["%REG"]
    set $P5024, $P5022
    goto if1402_end2574
  if1402_else2573:
    null $P5023
    set $P5024, $P5023
  if1402_end2574:
    unless_null $P5024, vivi_14032575
    new $P5025, 'Hash'
    set pkg_viv_tmp_52["%REG"], $P5025
    set $P5024, $P5025
  vivi_14032575:
    unless_null $P5024, vivi_14042576
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_14042576:
    set $P5019, $P5024
  fallback2572:
    set fb_tmp_406, $P5019
    repr_defined $I5001, fb_tmp_406
    unless $I5001 goto if1401_else2570 
    set $P5027, fb_tmp_406["cur"]
    set $P5029, $P5027
    goto if1401_end2571
  if1401_else2570:
    null $P5028
    set $P5029, $P5028
  if1401_end2571:
    unless_null $P5029, vivi_14052577
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_14052577:
    $P5031 = $P5018."post_new"("Ops", $P5029 :named("result"))
    set $P104, $P5031
.annotate 'line', 3782
    $P104."push"($P103)
.annotate 'line', 3783
    nqp_decontainerize $P5032, _lex_param_0
    $P5032."regex_mark"($P104, $P102, -1, 0)
.annotate 'line', 3784
    find_dynamic_lex $P5033, "%*REG"
    unless_null $P5033, fallback2580
    nqp_get_sc_object $P5035, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5034, $P5035
    set pkg_viv_tmp_53, $P5034
    set fb_tmp_409, pkg_viv_tmp_53
    repr_defined $I5004, fb_tmp_409
    unless $I5004 goto if1407_else2581 
    set $P5036, fb_tmp_409["%REG"]
    set $P5038, $P5036
    goto if1407_end2582
  if1407_else2581:
    null $P5037
    set $P5038, $P5037
  if1407_end2582:
    unless_null $P5038, vivi_14082583
    new $P5039, 'Hash'
    set pkg_viv_tmp_53["%REG"], $P5039
    set $P5038, $P5039
  vivi_14082583:
    unless_null $P5038, vivi_14092584
    die "Contextual %*REG not found"
    box $P5040, "Contextual %*REG not found"
    set $P5038, $P5040
  vivi_14092584:
    set $P5033, $P5038
  fallback2580:
    set fb_tmp_408, $P5033
    repr_defined $I5003, fb_tmp_408
    unless $I5003 goto if1406_else2578 
    set $P5041, fb_tmp_408["cur"]
    set $P5043, $P5041
    goto if1406_end2579
  if1406_else2578:
    null $P5042
    set $P5043, $P5042
  if1406_end2579:
    unless_null $P5043, vivi_14102585
    nqp_get_sc_object $P5044, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5043, $P5044
  vivi_14102585:
    find_dynamic_lex $P5045, "%*REG"
    unless_null $P5045, fallback2588
    nqp_get_sc_object $P5047, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_54, $P5046
    set fb_tmp_411, pkg_viv_tmp_54
    repr_defined $I5006, fb_tmp_411
    unless $I5006 goto if1412_else2589 
    set $P5048, fb_tmp_411["%REG"]
    set $P5050, $P5048
    goto if1412_end2590
  if1412_else2589:
    null $P5049
    set $P5050, $P5049
  if1412_end2590:
    unless_null $P5050, vivi_14132591
    new $P5051, 'Hash'
    set pkg_viv_tmp_54["%REG"], $P5051
    set $P5050, $P5051
  vivi_14132591:
    unless_null $P5050, vivi_14142592
    die "Contextual %*REG not found"
    box $P5052, "Contextual %*REG not found"
    set $P5050, $P5052
  vivi_14142592:
    set $P5045, $P5050
  fallback2588:
    set fb_tmp_410, $P5045
    repr_defined $I5005, fb_tmp_410
    unless $I5005 goto if1411_else2586 
    set $P5053, fb_tmp_410["pos"]
    set $P5055, $P5053
    goto if1411_end2587
  if1411_else2586:
    null $P5054
    set $P5055, $P5054
  if1411_end2587:
    unless_null $P5055, vivi_14152593
    nqp_get_sc_object $P5056, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5055, $P5056
  vivi_14152593:
.annotate 'line', 3785
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = _lex_param_1."name"()
    $P5059 = $P5057."escape"($P5058)
    $P5060 = $P103."result"()
    $P104."push_pirop"("callmethod", "\"!alt\"", $P5043, $P5055, $P5059, $P5060)
.annotate 'line', 3786
    find_dynamic_lex $P5061, "%*REG"
    unless_null $P5061, fallback2596
    nqp_get_sc_object $P5063, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_55, $P5062
    set fb_tmp_413, pkg_viv_tmp_55
    repr_defined $I5008, fb_tmp_413
    unless $I5008 goto if1417_else2597 
    set $P5064, fb_tmp_413["%REG"]
    set $P5066, $P5064
    goto if1417_end2598
  if1417_else2597:
    null $P5065
    set $P5066, $P5065
  if1417_end2598:
    unless_null $P5066, vivi_14182599
    new $P5067, 'Hash'
    set pkg_viv_tmp_55["%REG"], $P5067
    set $P5066, $P5067
  vivi_14182599:
    unless_null $P5066, vivi_14192600
    die "Contextual %*REG not found"
    box $P5068, "Contextual %*REG not found"
    set $P5066, $P5068
  vivi_14192600:
    set $P5061, $P5066
  fallback2596:
    set fb_tmp_412, $P5061
    repr_defined $I5007, fb_tmp_412
    unless $I5007 goto if1416_else2594 
    set $P5069, fb_tmp_412["fail"]
    set $P5071, $P5069
    goto if1416_end2595
  if1416_else2594:
    null $P5070
    set $P5071, $P5070
  if1416_end2595:
    unless_null $P5071, vivi_14202601
    nqp_get_sc_object $P5072, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5071, $P5072
  vivi_14202601:
    $P104."push_pirop"("goto", $P5071)
    box $P5073, 0
    set $P105, $P5073
.annotate 'line', 3790
    $P5075 = _lex_param_1."list"()
    iter $P5074, $P5075
    set $P106, $P5074
  while1421_test2602:
    set $P5078, $P106
    unless $P106 goto while1421_done2606 
  while1421_redo2604:
    .const 'Sub' $P5076 = 'cuid_375_1368096764.976' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
    goto while1421_test2602 
  while1421_done2606:
.annotate 'line', 3800
    $P104."push"($P102)
.annotate 'line', 3801
    $P5079 = _lex_param_1."backtrack"()
    set $S5005, $P5079
    iseq $I5009, $S5005, "r"
    unless $I5009 goto if1422_end2608 
    nqp_decontainerize $P5080, _lex_param_0
    $P5081 = $P5080."regex_commit"($P104, $P102)
  if1422_end2608:
    goto lexotic_2567
  lexotic_2566:
    .get_results ($P104)
  lexotic_2567:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1368096764.976") :anon :lex :outer("cuid_121_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3791
    .lex "$altlabel", $P101 
    .lex "$apost", $P102 
    .local pmc tmp_3 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 3792
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$prefix"
    set $S5002, $P5005
    find_lex $P5006, "$altcount"
    set $S5003, $P5006
    concat $S5001, $S5002, $S5003
    $P5007 = $P5003."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5007
.annotate 'line', 3793
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    find_lex $P5011, "$iter"
    shift $P5010, $P5011
    $P5012 = $P5008."regex_post"($P5010)
    set $P102, $P5012
.annotate 'line', 3794
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3795
    find_lex $P5014, "$ops"
    $P5014."push"($P102)
.annotate 'line', 3796
    find_lex $P5015, "$ops"
    find_lex $P5016, "$endlabel"
    $P5015."push_pirop"("goto", $P5016)
.annotate 'line', 3797
    find_lex $P5017, "$label_list_ops"
    find_lex $P5018, "$label_list_ops"
    $P5019 = $P5018."result"()
    $P5020 = $P101."result"()
    $P5017."push_pirop"("nqp_push_label", $P5019, $P5020)
    find_lex $P5021, "$altcount"
    set tmp_3, $P5021
    set $N5002, tmp_3
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5022, $N5001
    store_lex "$altcount", $P5022
    .return (tmp_3) 
.end
.HLL "nqp"
.namespace []
.sub "altseq" :subid("cuid_122_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3805
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$altcount", $P103 
    .lex "$iter", $P104 
    .lex "$endlabel", $P105 
    .lex "$altlabel", $P106 
    .lex "$apost", $P107 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc pkg_viv_tmp_56 
    .local pmc tmp_4 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    .local pmc pkg_viv_tmp_57 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
.annotate 'line', 3806
    nqp_decontainerize $P5008, _lex_param_0
    find_dynamic_lex $P5009, "%*REG"
    unless_null $P5009, fallback2611
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_56, $P5010
    set fb_tmp_415, pkg_viv_tmp_56
    repr_defined $I5002, fb_tmp_415
    unless $I5002 goto if1424_else2612 
    set $P5012, fb_tmp_415["%REG"]
    set $P5014, $P5012
    goto if1424_end2613
  if1424_else2612:
    null $P5013
    set $P5014, $P5013
  if1424_end2613:
    unless_null $P5014, vivi_14252614
    new $P5015, 'Hash'
    set pkg_viv_tmp_56["%REG"], $P5015
    set $P5014, $P5015
  vivi_14252614:
    unless_null $P5014, vivi_14262615
    die "Contextual %*REG not found"
    box $P5016, "Contextual %*REG not found"
    set $P5014, $P5016
  vivi_14262615:
    set $P5009, $P5014
  fallback2611:
    set fb_tmp_414, $P5009
    repr_defined $I5001, fb_tmp_414
    unless $I5001 goto if1423_else2609 
    set $P5017, fb_tmp_414["cur"]
    set $P5019, $P5017
    goto if1423_end2610
  if1423_else2609:
    null $P5018
    set $P5019, $P5018
  if1423_end2610:
    unless_null $P5019, vivi_14272616
    nqp_get_sc_object $P5020, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5019, $P5020
  vivi_14272616:
    $P5021 = $P5008."post_new"("Ops", $P5019 :named("result"))
    set $P101, $P5021
.annotate 'line', 3807
    nqp_decontainerize $P5022, _lex_param_0
    $P5023 = $P5022."unique"("alt")
    set $S5002, $P5023
    concat $S5001, $S5002, "_"
    box $P5024, $S5001
    set $P102, $P5024
    box $P5025, 0
    set $P103, $P5025
.annotate 'line', 3809
    $P5027 = _lex_param_1."list"()
    iter $P5026, $P5027
    set $P104, $P5026
.annotate 'line', 3810
    nqp_decontainerize $P5028, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "end"
    $P5029 = $P5028."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5029
.annotate 'line', 3811
    nqp_decontainerize $P5030, _lex_param_0
    set $S5006, $P102
    set $S5007, $P103
    concat $S5005, $S5006, $S5007
    $P5031 = $P5030."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5031
.annotate 'line', 3812
    nqp_decontainerize $P5032, _lex_param_0
    shift $P5033, $P104
    $P5034 = $P5032."regex_post"($P5033)
    set $P107, $P5034
  while1428_test2617:
    set $P5053, $P104
    unless $P104 goto while1428_done2621 
  while1428_redo2619:
.annotate 'line', 3813
.annotate 'line', 3814
    $P101."push"($P106)
    set tmp_4, $P103
    set $N5002, tmp_4
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5035, $N5001
    set $P103, $P5035
.annotate 'line', 3816
    nqp_decontainerize $P5035, _lex_param_0
    set $S5009, $P102
    set $S5010, $P103
    concat $S5008, $S5009, $S5010
    $P5036 = $P5035."post_new"("Label", $S5008 :named("name"))
    set $P106, $P5036
.annotate 'line', 3817
    nqp_decontainerize $P5037, _lex_param_0
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback2624
    nqp_get_sc_object $P5040, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_57, $P5039
    set fb_tmp_417, pkg_viv_tmp_57
    repr_defined $I5004, fb_tmp_417
    unless $I5004 goto if1430_else2625 
    set $P5041, fb_tmp_417["%REG"]
    set $P5043, $P5041
    goto if1430_end2626
  if1430_else2625:
    null $P5042
    set $P5043, $P5042
  if1430_end2626:
    unless_null $P5043, vivi_14312627
    new $P5044, 'Hash'
    set pkg_viv_tmp_57["%REG"], $P5044
    set $P5043, $P5044
  vivi_14312627:
    unless_null $P5043, vivi_14322628
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_14322628:
    set $P5038, $P5043
  fallback2624:
    set fb_tmp_416, $P5038
    repr_defined $I5003, fb_tmp_416
    unless $I5003 goto if1429_else2622 
    set $P5046, fb_tmp_416["pos"]
    set $P5048, $P5046
    goto if1429_end2623
  if1429_else2622:
    null $P5047
    set $P5048, $P5047
  if1429_end2623:
    unless_null $P5048, vivi_14332629
    nqp_get_sc_object $P5049, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5048, $P5049
  vivi_14332629:
    $P5037."regex_mark"($P101, $P106, $P5048, 0)
.annotate 'line', 3818
    $P101."push"($P107)
.annotate 'line', 3819
    $P101."push_pirop"("goto", $P105)
.annotate 'line', 3820
    nqp_decontainerize $P5050, _lex_param_0
    shift $P5051, $P104
    $P5052 = $P5050."regex_post"($P5051)
    set $P107, $P5052
    set $P5053, $P107
    goto while1428_test2617 
  while1428_done2621:
.annotate 'line', 3822
    $P101."push"($P106)
.annotate 'line', 3823
    $P101."push"($P107)
.annotate 'line', 3824
    $P101."push"($P105)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "anchor" :subid("cuid_123_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3828
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$subtype", $P102 
    .lex "$donelabel", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc pkg_viv_tmp_58 
    .local pmc fb_tmp_420 
    .local pmc fb_tmp_421 
    .local pmc pkg_viv_tmp_59 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc pkg_viv_tmp_60 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc pkg_viv_tmp_61 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    .local pmc pkg_viv_tmp_62 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc pkg_viv_tmp_63 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    .local pmc pkg_viv_tmp_64 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc pkg_viv_tmp_65 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc pkg_viv_tmp_66 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    .local pmc pkg_viv_tmp_67 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc pkg_viv_tmp_68 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc pkg_viv_tmp_69 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc pkg_viv_tmp_70 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc pkg_viv_tmp_71 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc pkg_viv_tmp_72 
    .local pmc fb_tmp_448 
    .local pmc fb_tmp_449 
    .local pmc pkg_viv_tmp_73 
    .local pmc fb_tmp_450 
    .local pmc fb_tmp_451 
    .local pmc pkg_viv_tmp_74 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc pkg_viv_tmp_75 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc pkg_viv_tmp_76 
    .local pmc fb_tmp_456 
    .local pmc fb_tmp_457 
    .local pmc pkg_viv_tmp_77 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
    .local pmc pkg_viv_tmp_78 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
    .local pmc pkg_viv_tmp_79 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
    .local pmc pkg_viv_tmp_80 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    .local pmc pkg_viv_tmp_81 
    .local pmc fb_tmp_466 
    .local pmc fb_tmp_467 
    .local pmc pkg_viv_tmp_82 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc pkg_viv_tmp_83 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc pkg_viv_tmp_84 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_473 
    .local pmc pkg_viv_tmp_85 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc pkg_viv_tmp_86 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc pkg_viv_tmp_87 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc pkg_viv_tmp_88 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc pkg_viv_tmp_89 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc pkg_viv_tmp_90 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc pkg_viv_tmp_91 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc pkg_viv_tmp_92 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc pkg_viv_tmp_93 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc pkg_viv_tmp_94 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    .local pmc pkg_viv_tmp_95 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc pkg_viv_tmp_96 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
    .local pmc pkg_viv_tmp_97 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3829
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2632
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_58, $P5006
    set fb_tmp_419, pkg_viv_tmp_58
    repr_defined $I5002, fb_tmp_419
    unless $I5002 goto if1435_else2633 
    set $P5008, fb_tmp_419["%REG"]
    set $P5010, $P5008
    goto if1435_end2634
  if1435_else2633:
    null $P5009
    set $P5010, $P5009
  if1435_end2634:
    unless_null $P5010, vivi_14362635
    new $P5011, 'Hash'
    set pkg_viv_tmp_58["%REG"], $P5011
    set $P5010, $P5011
  vivi_14362635:
    unless_null $P5010, vivi_14372636
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_14372636:
    set $P5005, $P5010
  fallback2632:
    set fb_tmp_418, $P5005
    repr_defined $I5001, fb_tmp_418
    unless $I5001 goto if1434_else2630 
    set $P5013, fb_tmp_418["cur"]
    set $P5015, $P5013
    goto if1434_end2631
  if1434_else2630:
    null $P5014
    set $P5015, $P5014
  if1434_end2631:
    unless_null $P5015, vivi_14382637
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_14382637:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3830
    $P5018 = _lex_param_1."subtype"()
    set $P102, $P5018
.annotate 'line', 3831
    nqp_decontainerize $P5019, _lex_param_0
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxanchor")
    set $S5002, $P5021
    concat $S5001, $S5002, "_done"
    $P5022 = $P5019."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5022
    set $S5003, $P102
    iseq $I5003, $S5003, "bos"
    unless $I5003 goto if1439_else2638 
.annotate 'line', 3832
.annotate 'line', 3833
    find_dynamic_lex $P5023, "%*REG"
    unless_null $P5023, fallback2642
    nqp_get_sc_object $P5025, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_59, $P5024
    set fb_tmp_421, pkg_viv_tmp_59
    repr_defined $I5005, fb_tmp_421
    unless $I5005 goto if1441_else2643 
    set $P5026, fb_tmp_421["%REG"]
    set $P5028, $P5026
    goto if1441_end2644
  if1441_else2643:
    null $P5027
    set $P5028, $P5027
  if1441_end2644:
    unless_null $P5028, vivi_14422645
    new $P5029, 'Hash'
    set pkg_viv_tmp_59["%REG"], $P5029
    set $P5028, $P5029
  vivi_14422645:
    unless_null $P5028, vivi_14432646
    die "Contextual %*REG not found"
    box $P5030, "Contextual %*REG not found"
    set $P5028, $P5030
  vivi_14432646:
    set $P5023, $P5028
  fallback2642:
    set fb_tmp_420, $P5023
    repr_defined $I5004, fb_tmp_420
    unless $I5004 goto if1440_else2640 
    set $P5031, fb_tmp_420["pos"]
    set $P5033, $P5031
    goto if1440_end2641
  if1440_else2640:
    null $P5032
    set $P5033, $P5032
  if1440_end2641:
    unless_null $P5033, vivi_14442647
    nqp_get_sc_object $P5034, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5033, $P5034
  vivi_14442647:
    find_dynamic_lex $P5035, "%*REG"
    unless_null $P5035, fallback2650
    nqp_get_sc_object $P5037, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_60, $P5036
    set fb_tmp_423, pkg_viv_tmp_60
    repr_defined $I5007, fb_tmp_423
    unless $I5007 goto if1446_else2651 
    set $P5038, fb_tmp_423["%REG"]
    set $P5040, $P5038
    goto if1446_end2652
  if1446_else2651:
    null $P5039
    set $P5040, $P5039
  if1446_end2652:
    unless_null $P5040, vivi_14472653
    new $P5041, 'Hash'
    set pkg_viv_tmp_60["%REG"], $P5041
    set $P5040, $P5041
  vivi_14472653:
    unless_null $P5040, vivi_14482654
    die "Contextual %*REG not found"
    box $P5042, "Contextual %*REG not found"
    set $P5040, $P5042
  vivi_14482654:
    set $P5035, $P5040
  fallback2650:
    set fb_tmp_422, $P5035
    repr_defined $I5006, fb_tmp_422
    unless $I5006 goto if1445_else2648 
    set $P5043, fb_tmp_422["fail"]
    set $P5045, $P5043
    goto if1445_end2649
  if1445_else2648:
    null $P5044
    set $P5045, $P5044
  if1445_end2649:
    unless_null $P5045, vivi_14492655
    nqp_get_sc_object $P5046, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5045, $P5046
  vivi_14492655:
    $P5047 = $P101."push_pirop"("ne", $P5033, 0, $P5045)
    goto if1439_end2639
  if1439_else2638:
    set $S5004, $P102
    iseq $I5008, $S5004, "eos"
    unless $I5008 goto if1450_else2656 
.annotate 'line', 3835
.annotate 'line', 3836
    find_dynamic_lex $P5048, "%*REG"
    unless_null $P5048, fallback2660
    nqp_get_sc_object $P5050, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5049, $P5050
    set pkg_viv_tmp_61, $P5049
    set fb_tmp_425, pkg_viv_tmp_61
    repr_defined $I5010, fb_tmp_425
    unless $I5010 goto if1452_else2661 
    set $P5051, fb_tmp_425["%REG"]
    set $P5053, $P5051
    goto if1452_end2662
  if1452_else2661:
    null $P5052
    set $P5053, $P5052
  if1452_end2662:
    unless_null $P5053, vivi_14532663
    new $P5054, 'Hash'
    set pkg_viv_tmp_61["%REG"], $P5054
    set $P5053, $P5054
  vivi_14532663:
    unless_null $P5053, vivi_14542664
    die "Contextual %*REG not found"
    box $P5055, "Contextual %*REG not found"
    set $P5053, $P5055
  vivi_14542664:
    set $P5048, $P5053
  fallback2660:
    set fb_tmp_424, $P5048
    repr_defined $I5009, fb_tmp_424
    unless $I5009 goto if1451_else2658 
    set $P5056, fb_tmp_424["pos"]
    set $P5058, $P5056
    goto if1451_end2659
  if1451_else2658:
    null $P5057
    set $P5058, $P5057
  if1451_end2659:
    unless_null $P5058, vivi_14552665
    nqp_get_sc_object $P5059, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5058, $P5059
  vivi_14552665:
    find_dynamic_lex $P5060, "%*REG"
    unless_null $P5060, fallback2668
    nqp_get_sc_object $P5062, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5061, $P5062
    set pkg_viv_tmp_62, $P5061
    set fb_tmp_427, pkg_viv_tmp_62
    repr_defined $I5012, fb_tmp_427
    unless $I5012 goto if1457_else2669 
    set $P5063, fb_tmp_427["%REG"]
    set $P5065, $P5063
    goto if1457_end2670
  if1457_else2669:
    null $P5064
    set $P5065, $P5064
  if1457_end2670:
    unless_null $P5065, vivi_14582671
    new $P5066, 'Hash'
    set pkg_viv_tmp_62["%REG"], $P5066
    set $P5065, $P5066
  vivi_14582671:
    unless_null $P5065, vivi_14592672
    die "Contextual %*REG not found"
    box $P5067, "Contextual %*REG not found"
    set $P5065, $P5067
  vivi_14592672:
    set $P5060, $P5065
  fallback2668:
    set fb_tmp_426, $P5060
    repr_defined $I5011, fb_tmp_426
    unless $I5011 goto if1456_else2666 
    set $P5068, fb_tmp_426["eos"]
    set $P5070, $P5068
    goto if1456_end2667
  if1456_else2666:
    null $P5069
    set $P5070, $P5069
  if1456_end2667:
    unless_null $P5070, vivi_14602673
    nqp_get_sc_object $P5071, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5070, $P5071
  vivi_14602673:
    find_dynamic_lex $P5072, "%*REG"
    unless_null $P5072, fallback2676
    nqp_get_sc_object $P5074, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_63, $P5073
    set fb_tmp_429, pkg_viv_tmp_63
    repr_defined $I5014, fb_tmp_429
    unless $I5014 goto if1462_else2677 
    set $P5075, fb_tmp_429["%REG"]
    set $P5077, $P5075
    goto if1462_end2678
  if1462_else2677:
    null $P5076
    set $P5077, $P5076
  if1462_end2678:
    unless_null $P5077, vivi_14632679
    new $P5078, 'Hash'
    set pkg_viv_tmp_63["%REG"], $P5078
    set $P5077, $P5078
  vivi_14632679:
    unless_null $P5077, vivi_14642680
    die "Contextual %*REG not found"
    box $P5079, "Contextual %*REG not found"
    set $P5077, $P5079
  vivi_14642680:
    set $P5072, $P5077
  fallback2676:
    set fb_tmp_428, $P5072
    repr_defined $I5013, fb_tmp_428
    unless $I5013 goto if1461_else2674 
    set $P5080, fb_tmp_428["fail"]
    set $P5082, $P5080
    goto if1461_end2675
  if1461_else2674:
    null $P5081
    set $P5082, $P5081
  if1461_end2675:
    unless_null $P5082, vivi_14652681
    nqp_get_sc_object $P5083, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5082, $P5083
  vivi_14652681:
    $P5084 = $P101."push_pirop"("lt", $P5058, $P5070, $P5082)
    set $P5504, $P5084
    goto if1450_end2657
  if1450_else2656:
    set $S5005, $P102
    iseq $I5015, $S5005, "lwb"
    unless $I5015 goto if1466_else2682 
.annotate 'line', 3838
.annotate 'line', 3839
    find_dynamic_lex $P5085, "%*REG"
    unless_null $P5085, fallback2686
    nqp_get_sc_object $P5087, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5086, $P5087
    set pkg_viv_tmp_64, $P5086
    set fb_tmp_431, pkg_viv_tmp_64
    repr_defined $I5017, fb_tmp_431
    unless $I5017 goto if1468_else2687 
    set $P5088, fb_tmp_431["%REG"]
    set $P5090, $P5088
    goto if1468_end2688
  if1468_else2687:
    null $P5089
    set $P5090, $P5089
  if1468_end2688:
    unless_null $P5090, vivi_14692689
    new $P5091, 'Hash'
    set pkg_viv_tmp_64["%REG"], $P5091
    set $P5090, $P5091
  vivi_14692689:
    unless_null $P5090, vivi_14702690
    die "Contextual %*REG not found"
    box $P5092, "Contextual %*REG not found"
    set $P5090, $P5092
  vivi_14702690:
    set $P5085, $P5090
  fallback2686:
    set fb_tmp_430, $P5085
    repr_defined $I5016, fb_tmp_430
    unless $I5016 goto if1467_else2684 
    set $P5093, fb_tmp_430["pos"]
    set $P5095, $P5093
    goto if1467_end2685
  if1467_else2684:
    null $P5094
    set $P5095, $P5094
  if1467_end2685:
    unless_null $P5095, vivi_14712691
    nqp_get_sc_object $P5096, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5095, $P5096
  vivi_14712691:
    find_dynamic_lex $P5097, "%*REG"
    unless_null $P5097, fallback2694
    nqp_get_sc_object $P5099, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_65, $P5098
    set fb_tmp_433, pkg_viv_tmp_65
    repr_defined $I5019, fb_tmp_433
    unless $I5019 goto if1473_else2695 
    set $P5100, fb_tmp_433["%REG"]
    set $P5102, $P5100
    goto if1473_end2696
  if1473_else2695:
    null $P5101
    set $P5102, $P5101
  if1473_end2696:
    unless_null $P5102, vivi_14742697
    new $P5103, 'Hash'
    set pkg_viv_tmp_65["%REG"], $P5103
    set $P5102, $P5103
  vivi_14742697:
    unless_null $P5102, vivi_14752698
    die "Contextual %*REG not found"
    box $P5104, "Contextual %*REG not found"
    set $P5102, $P5104
  vivi_14752698:
    set $P5097, $P5102
  fallback2694:
    set fb_tmp_432, $P5097
    repr_defined $I5018, fb_tmp_432
    unless $I5018 goto if1472_else2692 
    set $P5105, fb_tmp_432["eos"]
    set $P5107, $P5105
    goto if1472_end2693
  if1472_else2692:
    null $P5106
    set $P5107, $P5106
  if1472_end2693:
    unless_null $P5107, vivi_14762699
    nqp_get_sc_object $P5108, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5107, $P5108
  vivi_14762699:
    find_dynamic_lex $P5109, "%*REG"
    unless_null $P5109, fallback2702
    nqp_get_sc_object $P5111, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_66, $P5110
    set fb_tmp_435, pkg_viv_tmp_66
    repr_defined $I5021, fb_tmp_435
    unless $I5021 goto if1478_else2703 
    set $P5112, fb_tmp_435["%REG"]
    set $P5114, $P5112
    goto if1478_end2704
  if1478_else2703:
    null $P5113
    set $P5114, $P5113
  if1478_end2704:
    unless_null $P5114, vivi_14792705
    new $P5115, 'Hash'
    set pkg_viv_tmp_66["%REG"], $P5115
    set $P5114, $P5115
  vivi_14792705:
    unless_null $P5114, vivi_14802706
    die "Contextual %*REG not found"
    box $P5116, "Contextual %*REG not found"
    set $P5114, $P5116
  vivi_14802706:
    set $P5109, $P5114
  fallback2702:
    set fb_tmp_434, $P5109
    repr_defined $I5020, fb_tmp_434
    unless $I5020 goto if1477_else2700 
    set $P5117, fb_tmp_434["fail"]
    set $P5119, $P5117
    goto if1477_end2701
  if1477_else2700:
    null $P5118
    set $P5119, $P5118
  if1477_end2701:
    unless_null $P5119, vivi_14812707
    nqp_get_sc_object $P5120, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5119, $P5120
  vivi_14812707:
    $P101."push_pirop"("ge", $P5095, $P5107, $P5119)
.annotate 'line', 3840
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback2710
    nqp_get_sc_object $P5123, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_67, $P5122
    set fb_tmp_437, pkg_viv_tmp_67
    repr_defined $I5023, fb_tmp_437
    unless $I5023 goto if1483_else2711 
    set $P5124, fb_tmp_437["%REG"]
    set $P5126, $P5124
    goto if1483_end2712
  if1483_else2711:
    null $P5125
    set $P5126, $P5125
  if1483_end2712:
    unless_null $P5126, vivi_14842713
    new $P5127, 'Hash'
    set pkg_viv_tmp_67["%REG"], $P5127
    set $P5126, $P5127
  vivi_14842713:
    unless_null $P5126, vivi_14852714
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_14852714:
    set $P5121, $P5126
  fallback2710:
    set fb_tmp_436, $P5121
    repr_defined $I5022, fb_tmp_436
    unless $I5022 goto if1482_else2708 
    set $P5129, fb_tmp_436["tgt"]
    set $P5131, $P5129
    goto if1482_end2709
  if1482_else2708:
    null $P5130
    set $P5131, $P5130
  if1482_end2709:
    unless_null $P5131, vivi_14862715
    nqp_get_sc_object $P5132, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5131, $P5132
  vivi_14862715:
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback2718
    nqp_get_sc_object $P5135, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_68, $P5134
    set fb_tmp_439, pkg_viv_tmp_68
    repr_defined $I5025, fb_tmp_439
    unless $I5025 goto if1488_else2719 
    set $P5136, fb_tmp_439["%REG"]
    set $P5138, $P5136
    goto if1488_end2720
  if1488_else2719:
    null $P5137
    set $P5138, $P5137
  if1488_end2720:
    unless_null $P5138, vivi_14892721
    new $P5139, 'Hash'
    set pkg_viv_tmp_68["%REG"], $P5139
    set $P5138, $P5139
  vivi_14892721:
    unless_null $P5138, vivi_14902722
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_14902722:
    set $P5133, $P5138
  fallback2718:
    set fb_tmp_438, $P5133
    repr_defined $I5024, fb_tmp_438
    unless $I5024 goto if1487_else2716 
    set $P5141, fb_tmp_438["pos"]
    set $P5143, $P5141
    goto if1487_end2717
  if1487_else2716:
    null $P5142
    set $P5143, $P5142
  if1487_end2717:
    unless_null $P5143, vivi_14912723
    nqp_get_sc_object $P5144, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5143, $P5144
  vivi_14912723:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5131, $P5143)
.annotate 'line', 3841
    find_dynamic_lex $P5145, "%*REG"
    unless_null $P5145, fallback2726
    nqp_get_sc_object $P5147, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5146, $P5147
    set pkg_viv_tmp_69, $P5146
    set fb_tmp_441, pkg_viv_tmp_69
    repr_defined $I5027, fb_tmp_441
    unless $I5027 goto if1493_else2727 
    set $P5148, fb_tmp_441["%REG"]
    set $P5150, $P5148
    goto if1493_end2728
  if1493_else2727:
    null $P5149
    set $P5150, $P5149
  if1493_end2728:
    unless_null $P5150, vivi_14942729
    new $P5151, 'Hash'
    set pkg_viv_tmp_69["%REG"], $P5151
    set $P5150, $P5151
  vivi_14942729:
    unless_null $P5150, vivi_14952730
    die "Contextual %*REG not found"
    box $P5152, "Contextual %*REG not found"
    set $P5150, $P5152
  vivi_14952730:
    set $P5145, $P5150
  fallback2726:
    set fb_tmp_440, $P5145
    repr_defined $I5026, fb_tmp_440
    unless $I5026 goto if1492_else2724 
    set $P5153, fb_tmp_440["fail"]
    set $P5155, $P5153
    goto if1492_end2725
  if1492_else2724:
    null $P5154
    set $P5155, $P5154
  if1492_end2725:
    unless_null $P5155, vivi_14962731
    nqp_get_sc_object $P5156, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5155, $P5156
  vivi_14962731:
    $P101."push_pirop"("unless", "$I11", $P5155)
.annotate 'line', 3842
    find_dynamic_lex $P5157, "%*REG"
    unless_null $P5157, fallback2734
    nqp_get_sc_object $P5159, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5158, $P5159
    set pkg_viv_tmp_70, $P5158
    set fb_tmp_443, pkg_viv_tmp_70
    repr_defined $I5029, fb_tmp_443
    unless $I5029 goto if1498_else2735 
    set $P5160, fb_tmp_443["%REG"]
    set $P5162, $P5160
    goto if1498_end2736
  if1498_else2735:
    null $P5161
    set $P5162, $P5161
  if1498_end2736:
    unless_null $P5162, vivi_14992737
    new $P5163, 'Hash'
    set pkg_viv_tmp_70["%REG"], $P5163
    set $P5162, $P5163
  vivi_14992737:
    unless_null $P5162, vivi_15002738
    die "Contextual %*REG not found"
    box $P5164, "Contextual %*REG not found"
    set $P5162, $P5164
  vivi_15002738:
    set $P5157, $P5162
  fallback2734:
    set fb_tmp_442, $P5157
    repr_defined $I5028, fb_tmp_442
    unless $I5028 goto if1497_else2732 
    set $P5165, fb_tmp_442["pos"]
    set $P5167, $P5165
    goto if1497_end2733
  if1497_else2732:
    null $P5166
    set $P5167, $P5166
  if1497_end2733:
    unless_null $P5167, vivi_15012739
    nqp_get_sc_object $P5168, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5167, $P5168
  vivi_15012739:
    $P101."push_pirop"("sub", "$I11", $P5167, 1)
.annotate 'line', 3843
    find_dynamic_lex $P5169, "%*REG"
    unless_null $P5169, fallback2742
    nqp_get_sc_object $P5171, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5170, $P5171
    set pkg_viv_tmp_71, $P5170
    set fb_tmp_445, pkg_viv_tmp_71
    repr_defined $I5031, fb_tmp_445
    unless $I5031 goto if1503_else2743 
    set $P5172, fb_tmp_445["%REG"]
    set $P5174, $P5172
    goto if1503_end2744
  if1503_else2743:
    null $P5173
    set $P5174, $P5173
  if1503_end2744:
    unless_null $P5174, vivi_15042745
    new $P5175, 'Hash'
    set pkg_viv_tmp_71["%REG"], $P5175
    set $P5174, $P5175
  vivi_15042745:
    unless_null $P5174, vivi_15052746
    die "Contextual %*REG not found"
    box $P5176, "Contextual %*REG not found"
    set $P5174, $P5176
  vivi_15052746:
    set $P5169, $P5174
  fallback2742:
    set fb_tmp_444, $P5169
    repr_defined $I5030, fb_tmp_444
    unless $I5030 goto if1502_else2740 
    set $P5177, fb_tmp_444["tgt"]
    set $P5179, $P5177
    goto if1502_end2741
  if1502_else2740:
    null $P5178
    set $P5179, $P5178
  if1502_end2741:
    unless_null $P5179, vivi_15062747
    nqp_get_sc_object $P5180, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5179, $P5180
  vivi_15062747:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5179, "$I11")
.annotate 'line', 3844
    find_dynamic_lex $P5181, "%*REG"
    unless_null $P5181, fallback2750
    nqp_get_sc_object $P5183, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5182, $P5183
    set pkg_viv_tmp_72, $P5182
    set fb_tmp_447, pkg_viv_tmp_72
    repr_defined $I5033, fb_tmp_447
    unless $I5033 goto if1508_else2751 
    set $P5184, fb_tmp_447["%REG"]
    set $P5186, $P5184
    goto if1508_end2752
  if1508_else2751:
    null $P5185
    set $P5186, $P5185
  if1508_end2752:
    unless_null $P5186, vivi_15092753
    new $P5187, 'Hash'
    set pkg_viv_tmp_72["%REG"], $P5187
    set $P5186, $P5187
  vivi_15092753:
    unless_null $P5186, vivi_15102754
    die "Contextual %*REG not found"
    box $P5188, "Contextual %*REG not found"
    set $P5186, $P5188
  vivi_15102754:
    set $P5181, $P5186
  fallback2750:
    set fb_tmp_446, $P5181
    repr_defined $I5032, fb_tmp_446
    unless $I5032 goto if1507_else2748 
    set $P5189, fb_tmp_446["fail"]
    set $P5191, $P5189
    goto if1507_end2749
  if1507_else2748:
    null $P5190
    set $P5191, $P5190
  if1507_end2749:
    unless_null $P5191, vivi_15112755
    nqp_get_sc_object $P5192, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5191, $P5192
  vivi_15112755:
    $P5193 = $P101."push_pirop"("if", "$I11", $P5191)
    set $P5503, $P5193
    goto if1466_end2683
  if1466_else2682:
    set $S5006, $P102
    iseq $I5034, $S5006, "rwb"
    unless $I5034 goto if1512_else2756 
.annotate 'line', 3846
.annotate 'line', 3847
    find_dynamic_lex $P5194, "%*REG"
    unless_null $P5194, fallback2760
    nqp_get_sc_object $P5196, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5195, $P5196
    set pkg_viv_tmp_73, $P5195
    set fb_tmp_449, pkg_viv_tmp_73
    repr_defined $I5036, fb_tmp_449
    unless $I5036 goto if1514_else2761 
    set $P5197, fb_tmp_449["%REG"]
    set $P5199, $P5197
    goto if1514_end2762
  if1514_else2761:
    null $P5198
    set $P5199, $P5198
  if1514_end2762:
    unless_null $P5199, vivi_15152763
    new $P5200, 'Hash'
    set pkg_viv_tmp_73["%REG"], $P5200
    set $P5199, $P5200
  vivi_15152763:
    unless_null $P5199, vivi_15162764
    die "Contextual %*REG not found"
    box $P5201, "Contextual %*REG not found"
    set $P5199, $P5201
  vivi_15162764:
    set $P5194, $P5199
  fallback2760:
    set fb_tmp_448, $P5194
    repr_defined $I5035, fb_tmp_448
    unless $I5035 goto if1513_else2758 
    set $P5202, fb_tmp_448["pos"]
    set $P5204, $P5202
    goto if1513_end2759
  if1513_else2758:
    null $P5203
    set $P5204, $P5203
  if1513_end2759:
    unless_null $P5204, vivi_15172765
    nqp_get_sc_object $P5205, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5204, $P5205
  vivi_15172765:
    find_dynamic_lex $P5206, "%*REG"
    unless_null $P5206, fallback2768
    nqp_get_sc_object $P5208, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5207, $P5208
    set pkg_viv_tmp_74, $P5207
    set fb_tmp_451, pkg_viv_tmp_74
    repr_defined $I5038, fb_tmp_451
    unless $I5038 goto if1519_else2769 
    set $P5209, fb_tmp_451["%REG"]
    set $P5211, $P5209
    goto if1519_end2770
  if1519_else2769:
    null $P5210
    set $P5211, $P5210
  if1519_end2770:
    unless_null $P5211, vivi_15202771
    new $P5212, 'Hash'
    set pkg_viv_tmp_74["%REG"], $P5212
    set $P5211, $P5212
  vivi_15202771:
    unless_null $P5211, vivi_15212772
    die "Contextual %*REG not found"
    box $P5213, "Contextual %*REG not found"
    set $P5211, $P5213
  vivi_15212772:
    set $P5206, $P5211
  fallback2768:
    set fb_tmp_450, $P5206
    repr_defined $I5037, fb_tmp_450
    unless $I5037 goto if1518_else2766 
    set $P5214, fb_tmp_450["fail"]
    set $P5216, $P5214
    goto if1518_end2767
  if1518_else2766:
    null $P5215
    set $P5216, $P5215
  if1518_end2767:
    unless_null $P5216, vivi_15222773
    nqp_get_sc_object $P5217, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5216, $P5217
  vivi_15222773:
    $P101."push_pirop"("le", $P5204, 0, $P5216)
.annotate 'line', 3848
    find_dynamic_lex $P5218, "%*REG"
    unless_null $P5218, fallback2776
    nqp_get_sc_object $P5220, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5219, $P5220
    set pkg_viv_tmp_75, $P5219
    set fb_tmp_453, pkg_viv_tmp_75
    repr_defined $I5040, fb_tmp_453
    unless $I5040 goto if1524_else2777 
    set $P5221, fb_tmp_453["%REG"]
    set $P5223, $P5221
    goto if1524_end2778
  if1524_else2777:
    null $P5222
    set $P5223, $P5222
  if1524_end2778:
    unless_null $P5223, vivi_15252779
    new $P5224, 'Hash'
    set pkg_viv_tmp_75["%REG"], $P5224
    set $P5223, $P5224
  vivi_15252779:
    unless_null $P5223, vivi_15262780
    die "Contextual %*REG not found"
    box $P5225, "Contextual %*REG not found"
    set $P5223, $P5225
  vivi_15262780:
    set $P5218, $P5223
  fallback2776:
    set fb_tmp_452, $P5218
    repr_defined $I5039, fb_tmp_452
    unless $I5039 goto if1523_else2774 
    set $P5226, fb_tmp_452["tgt"]
    set $P5228, $P5226
    goto if1523_end2775
  if1523_else2774:
    null $P5227
    set $P5228, $P5227
  if1523_end2775:
    unless_null $P5228, vivi_15272781
    nqp_get_sc_object $P5229, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5228, $P5229
  vivi_15272781:
    find_dynamic_lex $P5230, "%*REG"
    unless_null $P5230, fallback2784
    nqp_get_sc_object $P5232, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5231, $P5232
    set pkg_viv_tmp_76, $P5231
    set fb_tmp_455, pkg_viv_tmp_76
    repr_defined $I5042, fb_tmp_455
    unless $I5042 goto if1529_else2785 
    set $P5233, fb_tmp_455["%REG"]
    set $P5235, $P5233
    goto if1529_end2786
  if1529_else2785:
    null $P5234
    set $P5235, $P5234
  if1529_end2786:
    unless_null $P5235, vivi_15302787
    new $P5236, 'Hash'
    set pkg_viv_tmp_76["%REG"], $P5236
    set $P5235, $P5236
  vivi_15302787:
    unless_null $P5235, vivi_15312788
    die "Contextual %*REG not found"
    box $P5237, "Contextual %*REG not found"
    set $P5235, $P5237
  vivi_15312788:
    set $P5230, $P5235
  fallback2784:
    set fb_tmp_454, $P5230
    repr_defined $I5041, fb_tmp_454
    unless $I5041 goto if1528_else2782 
    set $P5238, fb_tmp_454["pos"]
    set $P5240, $P5238
    goto if1528_end2783
  if1528_else2782:
    null $P5239
    set $P5240, $P5239
  if1528_end2783:
    unless_null $P5240, vivi_15322789
    nqp_get_sc_object $P5241, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5240, $P5241
  vivi_15322789:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5228, $P5240)
.annotate 'line', 3849
    find_dynamic_lex $P5242, "%*REG"
    unless_null $P5242, fallback2792
    nqp_get_sc_object $P5244, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5243, $P5244
    set pkg_viv_tmp_77, $P5243
    set fb_tmp_457, pkg_viv_tmp_77
    repr_defined $I5044, fb_tmp_457
    unless $I5044 goto if1534_else2793 
    set $P5245, fb_tmp_457["%REG"]
    set $P5247, $P5245
    goto if1534_end2794
  if1534_else2793:
    null $P5246
    set $P5247, $P5246
  if1534_end2794:
    unless_null $P5247, vivi_15352795
    new $P5248, 'Hash'
    set pkg_viv_tmp_77["%REG"], $P5248
    set $P5247, $P5248
  vivi_15352795:
    unless_null $P5247, vivi_15362796
    die "Contextual %*REG not found"
    box $P5249, "Contextual %*REG not found"
    set $P5247, $P5249
  vivi_15362796:
    set $P5242, $P5247
  fallback2792:
    set fb_tmp_456, $P5242
    repr_defined $I5043, fb_tmp_456
    unless $I5043 goto if1533_else2790 
    set $P5250, fb_tmp_456["fail"]
    set $P5252, $P5250
    goto if1533_end2791
  if1533_else2790:
    null $P5251
    set $P5252, $P5251
  if1533_end2791:
    unless_null $P5252, vivi_15372797
    nqp_get_sc_object $P5253, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5252, $P5253
  vivi_15372797:
    $P101."push_pirop"("if", "$I11", $P5252)
.annotate 'line', 3850
    find_dynamic_lex $P5254, "%*REG"
    unless_null $P5254, fallback2800
    nqp_get_sc_object $P5256, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5255, $P5256
    set pkg_viv_tmp_78, $P5255
    set fb_tmp_459, pkg_viv_tmp_78
    repr_defined $I5046, fb_tmp_459
    unless $I5046 goto if1539_else2801 
    set $P5257, fb_tmp_459["%REG"]
    set $P5259, $P5257
    goto if1539_end2802
  if1539_else2801:
    null $P5258
    set $P5259, $P5258
  if1539_end2802:
    unless_null $P5259, vivi_15402803
    new $P5260, 'Hash'
    set pkg_viv_tmp_78["%REG"], $P5260
    set $P5259, $P5260
  vivi_15402803:
    unless_null $P5259, vivi_15412804
    die "Contextual %*REG not found"
    box $P5261, "Contextual %*REG not found"
    set $P5259, $P5261
  vivi_15412804:
    set $P5254, $P5259
  fallback2800:
    set fb_tmp_458, $P5254
    repr_defined $I5045, fb_tmp_458
    unless $I5045 goto if1538_else2798 
    set $P5262, fb_tmp_458["pos"]
    set $P5264, $P5262
    goto if1538_end2799
  if1538_else2798:
    null $P5263
    set $P5264, $P5263
  if1538_end2799:
    unless_null $P5264, vivi_15422805
    nqp_get_sc_object $P5265, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5264, $P5265
  vivi_15422805:
    $P101."push_pirop"("sub", "$I11", $P5264, 1)
.annotate 'line', 3851
    find_dynamic_lex $P5266, "%*REG"
    unless_null $P5266, fallback2808
    nqp_get_sc_object $P5268, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5267, $P5268
    set pkg_viv_tmp_79, $P5267
    set fb_tmp_461, pkg_viv_tmp_79
    repr_defined $I5048, fb_tmp_461
    unless $I5048 goto if1544_else2809 
    set $P5269, fb_tmp_461["%REG"]
    set $P5271, $P5269
    goto if1544_end2810
  if1544_else2809:
    null $P5270
    set $P5271, $P5270
  if1544_end2810:
    unless_null $P5271, vivi_15452811
    new $P5272, 'Hash'
    set pkg_viv_tmp_79["%REG"], $P5272
    set $P5271, $P5272
  vivi_15452811:
    unless_null $P5271, vivi_15462812
    die "Contextual %*REG not found"
    box $P5273, "Contextual %*REG not found"
    set $P5271, $P5273
  vivi_15462812:
    set $P5266, $P5271
  fallback2808:
    set fb_tmp_460, $P5266
    repr_defined $I5047, fb_tmp_460
    unless $I5047 goto if1543_else2806 
    set $P5274, fb_tmp_460["tgt"]
    set $P5276, $P5274
    goto if1543_end2807
  if1543_else2806:
    null $P5275
    set $P5276, $P5275
  if1543_end2807:
    unless_null $P5276, vivi_15472813
    nqp_get_sc_object $P5277, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5276, $P5277
  vivi_15472813:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5276, "$I11")
.annotate 'line', 3852
    find_dynamic_lex $P5278, "%*REG"
    unless_null $P5278, fallback2816
    nqp_get_sc_object $P5280, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5279, $P5280
    set pkg_viv_tmp_80, $P5279
    set fb_tmp_463, pkg_viv_tmp_80
    repr_defined $I5050, fb_tmp_463
    unless $I5050 goto if1549_else2817 
    set $P5281, fb_tmp_463["%REG"]
    set $P5283, $P5281
    goto if1549_end2818
  if1549_else2817:
    null $P5282
    set $P5283, $P5282
  if1549_end2818:
    unless_null $P5283, vivi_15502819
    new $P5284, 'Hash'
    set pkg_viv_tmp_80["%REG"], $P5284
    set $P5283, $P5284
  vivi_15502819:
    unless_null $P5283, vivi_15512820
    die "Contextual %*REG not found"
    box $P5285, "Contextual %*REG not found"
    set $P5283, $P5285
  vivi_15512820:
    set $P5278, $P5283
  fallback2816:
    set fb_tmp_462, $P5278
    repr_defined $I5049, fb_tmp_462
    unless $I5049 goto if1548_else2814 
    set $P5286, fb_tmp_462["fail"]
    set $P5288, $P5286
    goto if1548_end2815
  if1548_else2814:
    null $P5287
    set $P5288, $P5287
  if1548_end2815:
    unless_null $P5288, vivi_15522821
    nqp_get_sc_object $P5289, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5288, $P5289
  vivi_15522821:
    $P5290 = $P101."push_pirop"("unless", "$I11", $P5288)
    set $P5502, $P5290
    goto if1512_end2757
  if1512_else2756:
    set $S5007, $P102
    iseq $I5051, $S5007, "bol"
    unless $I5051 goto if1553_else2822 
.annotate 'line', 3854
.annotate 'line', 3855
    find_dynamic_lex $P5291, "%*REG"
    unless_null $P5291, fallback2826
    nqp_get_sc_object $P5293, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5292, $P5293
    set pkg_viv_tmp_81, $P5292
    set fb_tmp_465, pkg_viv_tmp_81
    repr_defined $I5053, fb_tmp_465
    unless $I5053 goto if1555_else2827 
    set $P5294, fb_tmp_465["%REG"]
    set $P5296, $P5294
    goto if1555_end2828
  if1555_else2827:
    null $P5295
    set $P5296, $P5295
  if1555_end2828:
    unless_null $P5296, vivi_15562829
    new $P5297, 'Hash'
    set pkg_viv_tmp_81["%REG"], $P5297
    set $P5296, $P5297
  vivi_15562829:
    unless_null $P5296, vivi_15572830
    die "Contextual %*REG not found"
    box $P5298, "Contextual %*REG not found"
    set $P5296, $P5298
  vivi_15572830:
    set $P5291, $P5296
  fallback2826:
    set fb_tmp_464, $P5291
    repr_defined $I5052, fb_tmp_464
    unless $I5052 goto if1554_else2824 
    set $P5299, fb_tmp_464["pos"]
    set $P5301, $P5299
    goto if1554_end2825
  if1554_else2824:
    null $P5300
    set $P5301, $P5300
  if1554_end2825:
    unless_null $P5301, vivi_15582831
    nqp_get_sc_object $P5302, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5301, $P5302
  vivi_15582831:
    $P101."push_pirop"("eq", $P5301, 0, $P103)
.annotate 'line', 3856
    find_dynamic_lex $P5303, "%*REG"
    unless_null $P5303, fallback2834
    nqp_get_sc_object $P5305, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5304, $P5305
    set pkg_viv_tmp_82, $P5304
    set fb_tmp_467, pkg_viv_tmp_82
    repr_defined $I5055, fb_tmp_467
    unless $I5055 goto if1560_else2835 
    set $P5306, fb_tmp_467["%REG"]
    set $P5308, $P5306
    goto if1560_end2836
  if1560_else2835:
    null $P5307
    set $P5308, $P5307
  if1560_end2836:
    unless_null $P5308, vivi_15612837
    new $P5309, 'Hash'
    set pkg_viv_tmp_82["%REG"], $P5309
    set $P5308, $P5309
  vivi_15612837:
    unless_null $P5308, vivi_15622838
    die "Contextual %*REG not found"
    box $P5310, "Contextual %*REG not found"
    set $P5308, $P5310
  vivi_15622838:
    set $P5303, $P5308
  fallback2834:
    set fb_tmp_466, $P5303
    repr_defined $I5054, fb_tmp_466
    unless $I5054 goto if1559_else2832 
    set $P5311, fb_tmp_466["pos"]
    set $P5313, $P5311
    goto if1559_end2833
  if1559_else2832:
    null $P5312
    set $P5313, $P5312
  if1559_end2833:
    unless_null $P5313, vivi_15632839
    nqp_get_sc_object $P5314, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5313, $P5314
  vivi_15632839:
    find_dynamic_lex $P5315, "%*REG"
    unless_null $P5315, fallback2842
    nqp_get_sc_object $P5317, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5316, $P5317
    set pkg_viv_tmp_83, $P5316
    set fb_tmp_469, pkg_viv_tmp_83
    repr_defined $I5057, fb_tmp_469
    unless $I5057 goto if1565_else2843 
    set $P5318, fb_tmp_469["%REG"]
    set $P5320, $P5318
    goto if1565_end2844
  if1565_else2843:
    null $P5319
    set $P5320, $P5319
  if1565_end2844:
    unless_null $P5320, vivi_15662845
    new $P5321, 'Hash'
    set pkg_viv_tmp_83["%REG"], $P5321
    set $P5320, $P5321
  vivi_15662845:
    unless_null $P5320, vivi_15672846
    die "Contextual %*REG not found"
    box $P5322, "Contextual %*REG not found"
    set $P5320, $P5322
  vivi_15672846:
    set $P5315, $P5320
  fallback2842:
    set fb_tmp_468, $P5315
    repr_defined $I5056, fb_tmp_468
    unless $I5056 goto if1564_else2840 
    set $P5323, fb_tmp_468["eos"]
    set $P5325, $P5323
    goto if1564_end2841
  if1564_else2840:
    null $P5324
    set $P5325, $P5324
  if1564_end2841:
    unless_null $P5325, vivi_15682847
    nqp_get_sc_object $P5326, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5325, $P5326
  vivi_15682847:
    find_dynamic_lex $P5327, "%*REG"
    unless_null $P5327, fallback2850
    nqp_get_sc_object $P5329, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5328, $P5329
    set pkg_viv_tmp_84, $P5328
    set fb_tmp_471, pkg_viv_tmp_84
    repr_defined $I5059, fb_tmp_471
    unless $I5059 goto if1570_else2851 
    set $P5330, fb_tmp_471["%REG"]
    set $P5332, $P5330
    goto if1570_end2852
  if1570_else2851:
    null $P5331
    set $P5332, $P5331
  if1570_end2852:
    unless_null $P5332, vivi_15712853
    new $P5333, 'Hash'
    set pkg_viv_tmp_84["%REG"], $P5333
    set $P5332, $P5333
  vivi_15712853:
    unless_null $P5332, vivi_15722854
    die "Contextual %*REG not found"
    box $P5334, "Contextual %*REG not found"
    set $P5332, $P5334
  vivi_15722854:
    set $P5327, $P5332
  fallback2850:
    set fb_tmp_470, $P5327
    repr_defined $I5058, fb_tmp_470
    unless $I5058 goto if1569_else2848 
    set $P5335, fb_tmp_470["fail"]
    set $P5337, $P5335
    goto if1569_end2849
  if1569_else2848:
    null $P5336
    set $P5337, $P5336
  if1569_end2849:
    unless_null $P5337, vivi_15732855
    nqp_get_sc_object $P5338, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5337, $P5338
  vivi_15732855:
    $P101."push_pirop"("ge", $P5313, $P5325, $P5337)
.annotate 'line', 3857
    find_dynamic_lex $P5339, "%*REG"
    unless_null $P5339, fallback2858
    nqp_get_sc_object $P5341, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5340, $P5341
    set pkg_viv_tmp_85, $P5340
    set fb_tmp_473, pkg_viv_tmp_85
    repr_defined $I5061, fb_tmp_473
    unless $I5061 goto if1575_else2859 
    set $P5342, fb_tmp_473["%REG"]
    set $P5344, $P5342
    goto if1575_end2860
  if1575_else2859:
    null $P5343
    set $P5344, $P5343
  if1575_end2860:
    unless_null $P5344, vivi_15762861
    new $P5345, 'Hash'
    set pkg_viv_tmp_85["%REG"], $P5345
    set $P5344, $P5345
  vivi_15762861:
    unless_null $P5344, vivi_15772862
    die "Contextual %*REG not found"
    box $P5346, "Contextual %*REG not found"
    set $P5344, $P5346
  vivi_15772862:
    set $P5339, $P5344
  fallback2858:
    set fb_tmp_472, $P5339
    repr_defined $I5060, fb_tmp_472
    unless $I5060 goto if1574_else2856 
    set $P5347, fb_tmp_472["pos"]
    set $P5349, $P5347
    goto if1574_end2857
  if1574_else2856:
    null $P5348
    set $P5349, $P5348
  if1574_end2857:
    unless_null $P5349, vivi_15782863
    nqp_get_sc_object $P5350, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5349, $P5350
  vivi_15782863:
    $P101."push_pirop"("sub", "$I11", $P5349, 1)
.annotate 'line', 3858
    find_dynamic_lex $P5351, "%*REG"
    unless_null $P5351, fallback2866
    nqp_get_sc_object $P5353, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5352, $P5353
    set pkg_viv_tmp_86, $P5352
    set fb_tmp_475, pkg_viv_tmp_86
    repr_defined $I5063, fb_tmp_475
    unless $I5063 goto if1580_else2867 
    set $P5354, fb_tmp_475["%REG"]
    set $P5356, $P5354
    goto if1580_end2868
  if1580_else2867:
    null $P5355
    set $P5356, $P5355
  if1580_end2868:
    unless_null $P5356, vivi_15812869
    new $P5357, 'Hash'
    set pkg_viv_tmp_86["%REG"], $P5357
    set $P5356, $P5357
  vivi_15812869:
    unless_null $P5356, vivi_15822870
    die "Contextual %*REG not found"
    box $P5358, "Contextual %*REG not found"
    set $P5356, $P5358
  vivi_15822870:
    set $P5351, $P5356
  fallback2866:
    set fb_tmp_474, $P5351
    repr_defined $I5062, fb_tmp_474
    unless $I5062 goto if1579_else2864 
    set $P5359, fb_tmp_474["tgt"]
    set $P5361, $P5359
    goto if1579_end2865
  if1579_else2864:
    null $P5360
    set $P5361, $P5360
  if1579_end2865:
    unless_null $P5361, vivi_15832871
    nqp_get_sc_object $P5362, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5361, $P5362
  vivi_15832871:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5361, "$I11")
.annotate 'line', 3859
    find_dynamic_lex $P5363, "%*REG"
    unless_null $P5363, fallback2874
    nqp_get_sc_object $P5365, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5364, $P5365
    set pkg_viv_tmp_87, $P5364
    set fb_tmp_477, pkg_viv_tmp_87
    repr_defined $I5065, fb_tmp_477
    unless $I5065 goto if1585_else2875 
    set $P5366, fb_tmp_477["%REG"]
    set $P5368, $P5366
    goto if1585_end2876
  if1585_else2875:
    null $P5367
    set $P5368, $P5367
  if1585_end2876:
    unless_null $P5368, vivi_15862877
    new $P5369, 'Hash'
    set pkg_viv_tmp_87["%REG"], $P5369
    set $P5368, $P5369
  vivi_15862877:
    unless_null $P5368, vivi_15872878
    die "Contextual %*REG not found"
    box $P5370, "Contextual %*REG not found"
    set $P5368, $P5370
  vivi_15872878:
    set $P5363, $P5368
  fallback2874:
    set fb_tmp_476, $P5363
    repr_defined $I5064, fb_tmp_476
    unless $I5064 goto if1584_else2872 
    set $P5371, fb_tmp_476["fail"]
    set $P5373, $P5371
    goto if1584_end2873
  if1584_else2872:
    null $P5372
    set $P5373, $P5372
  if1584_end2873:
    unless_null $P5373, vivi_15882879
    nqp_get_sc_object $P5374, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5373, $P5374
  vivi_15882879:
    $P101."push_pirop"("unless", "$I11", $P5373)
.annotate 'line', 3860
    $P5375 = $P101."push"($P103)
    set $P5501, $P5375
    goto if1553_end2823
  if1553_else2822:
    set $S5008, $P102
    iseq $I5066, $S5008, "eol"
    unless $I5066 goto if1589_else2880 
.annotate 'line', 3862
.annotate 'line', 3863
    find_dynamic_lex $P5376, "%*REG"
    unless_null $P5376, fallback2884
    nqp_get_sc_object $P5378, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5377, $P5378
    set pkg_viv_tmp_88, $P5377
    set fb_tmp_479, pkg_viv_tmp_88
    repr_defined $I5068, fb_tmp_479
    unless $I5068 goto if1591_else2885 
    set $P5379, fb_tmp_479["%REG"]
    set $P5381, $P5379
    goto if1591_end2886
  if1591_else2885:
    null $P5380
    set $P5381, $P5380
  if1591_end2886:
    unless_null $P5381, vivi_15922887
    new $P5382, 'Hash'
    set pkg_viv_tmp_88["%REG"], $P5382
    set $P5381, $P5382
  vivi_15922887:
    unless_null $P5381, vivi_15932888
    die "Contextual %*REG not found"
    box $P5383, "Contextual %*REG not found"
    set $P5381, $P5383
  vivi_15932888:
    set $P5376, $P5381
  fallback2884:
    set fb_tmp_478, $P5376
    repr_defined $I5067, fb_tmp_478
    unless $I5067 goto if1590_else2882 
    set $P5384, fb_tmp_478["tgt"]
    set $P5386, $P5384
    goto if1590_end2883
  if1590_else2882:
    null $P5385
    set $P5386, $P5385
  if1590_end2883:
    unless_null $P5386, vivi_15942889
    nqp_get_sc_object $P5387, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5386, $P5387
  vivi_15942889:
    find_dynamic_lex $P5388, "%*REG"
    unless_null $P5388, fallback2892
    nqp_get_sc_object $P5390, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5389, $P5390
    set pkg_viv_tmp_89, $P5389
    set fb_tmp_481, pkg_viv_tmp_89
    repr_defined $I5070, fb_tmp_481
    unless $I5070 goto if1596_else2893 
    set $P5391, fb_tmp_481["%REG"]
    set $P5393, $P5391
    goto if1596_end2894
  if1596_else2893:
    null $P5392
    set $P5393, $P5392
  if1596_end2894:
    unless_null $P5393, vivi_15972895
    new $P5394, 'Hash'
    set pkg_viv_tmp_89["%REG"], $P5394
    set $P5393, $P5394
  vivi_15972895:
    unless_null $P5393, vivi_15982896
    die "Contextual %*REG not found"
    box $P5395, "Contextual %*REG not found"
    set $P5393, $P5395
  vivi_15982896:
    set $P5388, $P5393
  fallback2892:
    set fb_tmp_480, $P5388
    repr_defined $I5069, fb_tmp_480
    unless $I5069 goto if1595_else2890 
    set $P5396, fb_tmp_480["pos"]
    set $P5398, $P5396
    goto if1595_end2891
  if1595_else2890:
    null $P5397
    set $P5398, $P5397
  if1595_end2891:
    unless_null $P5398, vivi_15992897
    nqp_get_sc_object $P5399, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5398, $P5399
  vivi_15992897:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5386, $P5398)
.annotate 'line', 3864
    $P101."push_pirop"("if", "$I11", $P103)
.annotate 'line', 3865
    find_dynamic_lex $P5400, "%*REG"
    unless_null $P5400, fallback2900
    nqp_get_sc_object $P5402, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5401, $P5402
    set pkg_viv_tmp_90, $P5401
    set fb_tmp_483, pkg_viv_tmp_90
    repr_defined $I5072, fb_tmp_483
    unless $I5072 goto if1601_else2901 
    set $P5403, fb_tmp_483["%REG"]
    set $P5405, $P5403
    goto if1601_end2902
  if1601_else2901:
    null $P5404
    set $P5405, $P5404
  if1601_end2902:
    unless_null $P5405, vivi_16022903
    new $P5406, 'Hash'
    set pkg_viv_tmp_90["%REG"], $P5406
    set $P5405, $P5406
  vivi_16022903:
    unless_null $P5405, vivi_16032904
    die "Contextual %*REG not found"
    box $P5407, "Contextual %*REG not found"
    set $P5405, $P5407
  vivi_16032904:
    set $P5400, $P5405
  fallback2900:
    set fb_tmp_482, $P5400
    repr_defined $I5071, fb_tmp_482
    unless $I5071 goto if1600_else2898 
    set $P5408, fb_tmp_482["pos"]
    set $P5410, $P5408
    goto if1600_end2899
  if1600_else2898:
    null $P5409
    set $P5410, $P5409
  if1600_end2899:
    unless_null $P5410, vivi_16042905
    nqp_get_sc_object $P5411, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5410, $P5411
  vivi_16042905:
    find_dynamic_lex $P5412, "%*REG"
    unless_null $P5412, fallback2908
    nqp_get_sc_object $P5414, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5413, $P5414
    set pkg_viv_tmp_91, $P5413
    set fb_tmp_485, pkg_viv_tmp_91
    repr_defined $I5074, fb_tmp_485
    unless $I5074 goto if1606_else2909 
    set $P5415, fb_tmp_485["%REG"]
    set $P5417, $P5415
    goto if1606_end2910
  if1606_else2909:
    null $P5416
    set $P5417, $P5416
  if1606_end2910:
    unless_null $P5417, vivi_16072911
    new $P5418, 'Hash'
    set pkg_viv_tmp_91["%REG"], $P5418
    set $P5417, $P5418
  vivi_16072911:
    unless_null $P5417, vivi_16082912
    die "Contextual %*REG not found"
    box $P5419, "Contextual %*REG not found"
    set $P5417, $P5419
  vivi_16082912:
    set $P5412, $P5417
  fallback2908:
    set fb_tmp_484, $P5412
    repr_defined $I5073, fb_tmp_484
    unless $I5073 goto if1605_else2906 
    set $P5420, fb_tmp_484["eos"]
    set $P5422, $P5420
    goto if1605_end2907
  if1605_else2906:
    null $P5421
    set $P5422, $P5421
  if1605_end2907:
    unless_null $P5422, vivi_16092913
    nqp_get_sc_object $P5423, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5422, $P5423
  vivi_16092913:
    find_dynamic_lex $P5424, "%*REG"
    unless_null $P5424, fallback2916
    nqp_get_sc_object $P5426, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5425, $P5426
    set pkg_viv_tmp_92, $P5425
    set fb_tmp_487, pkg_viv_tmp_92
    repr_defined $I5076, fb_tmp_487
    unless $I5076 goto if1611_else2917 
    set $P5427, fb_tmp_487["%REG"]
    set $P5429, $P5427
    goto if1611_end2918
  if1611_else2917:
    null $P5428
    set $P5429, $P5428
  if1611_end2918:
    unless_null $P5429, vivi_16122919
    new $P5430, 'Hash'
    set pkg_viv_tmp_92["%REG"], $P5430
    set $P5429, $P5430
  vivi_16122919:
    unless_null $P5429, vivi_16132920
    die "Contextual %*REG not found"
    box $P5431, "Contextual %*REG not found"
    set $P5429, $P5431
  vivi_16132920:
    set $P5424, $P5429
  fallback2916:
    set fb_tmp_486, $P5424
    repr_defined $I5075, fb_tmp_486
    unless $I5075 goto if1610_else2914 
    set $P5432, fb_tmp_486["fail"]
    set $P5434, $P5432
    goto if1610_end2915
  if1610_else2914:
    null $P5433
    set $P5434, $P5433
  if1610_end2915:
    unless_null $P5434, vivi_16142921
    nqp_get_sc_object $P5435, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5434, $P5435
  vivi_16142921:
    $P101."push_pirop"("ne", $P5410, $P5422, $P5434)
.annotate 'line', 3866
    find_dynamic_lex $P5436, "%*REG"
    unless_null $P5436, fallback2924
    nqp_get_sc_object $P5438, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5437, $P5438
    set pkg_viv_tmp_93, $P5437
    set fb_tmp_489, pkg_viv_tmp_93
    repr_defined $I5078, fb_tmp_489
    unless $I5078 goto if1616_else2925 
    set $P5439, fb_tmp_489["%REG"]
    set $P5441, $P5439
    goto if1616_end2926
  if1616_else2925:
    null $P5440
    set $P5441, $P5440
  if1616_end2926:
    unless_null $P5441, vivi_16172927
    new $P5442, 'Hash'
    set pkg_viv_tmp_93["%REG"], $P5442
    set $P5441, $P5442
  vivi_16172927:
    unless_null $P5441, vivi_16182928
    die "Contextual %*REG not found"
    box $P5443, "Contextual %*REG not found"
    set $P5441, $P5443
  vivi_16182928:
    set $P5436, $P5441
  fallback2924:
    set fb_tmp_488, $P5436
    repr_defined $I5077, fb_tmp_488
    unless $I5077 goto if1615_else2922 
    set $P5444, fb_tmp_488["pos"]
    set $P5446, $P5444
    goto if1615_end2923
  if1615_else2922:
    null $P5445
    set $P5446, $P5445
  if1615_end2923:
    unless_null $P5446, vivi_16192929
    nqp_get_sc_object $P5447, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5446, $P5447
  vivi_16192929:
    $P101."push_pirop"("eq", $P5446, 0, $P103)
.annotate 'line', 3867
    find_dynamic_lex $P5448, "%*REG"
    unless_null $P5448, fallback2932
    nqp_get_sc_object $P5450, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5449, $P5450
    set pkg_viv_tmp_94, $P5449
    set fb_tmp_491, pkg_viv_tmp_94
    repr_defined $I5080, fb_tmp_491
    unless $I5080 goto if1621_else2933 
    set $P5451, fb_tmp_491["%REG"]
    set $P5453, $P5451
    goto if1621_end2934
  if1621_else2933:
    null $P5452
    set $P5453, $P5452
  if1621_end2934:
    unless_null $P5453, vivi_16222935
    new $P5454, 'Hash'
    set pkg_viv_tmp_94["%REG"], $P5454
    set $P5453, $P5454
  vivi_16222935:
    unless_null $P5453, vivi_16232936
    die "Contextual %*REG not found"
    box $P5455, "Contextual %*REG not found"
    set $P5453, $P5455
  vivi_16232936:
    set $P5448, $P5453
  fallback2932:
    set fb_tmp_490, $P5448
    repr_defined $I5079, fb_tmp_490
    unless $I5079 goto if1620_else2930 
    set $P5456, fb_tmp_490["pos"]
    set $P5458, $P5456
    goto if1620_end2931
  if1620_else2930:
    null $P5457
    set $P5458, $P5457
  if1620_end2931:
    unless_null $P5458, vivi_16242937
    nqp_get_sc_object $P5459, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5458, $P5459
  vivi_16242937:
    $P101."push_pirop"("sub", "$I11", $P5458, 1)
.annotate 'line', 3868
    find_dynamic_lex $P5460, "%*REG"
    unless_null $P5460, fallback2940
    nqp_get_sc_object $P5462, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5461, $P5462
    set pkg_viv_tmp_95, $P5461
    set fb_tmp_493, pkg_viv_tmp_95
    repr_defined $I5082, fb_tmp_493
    unless $I5082 goto if1626_else2941 
    set $P5463, fb_tmp_493["%REG"]
    set $P5465, $P5463
    goto if1626_end2942
  if1626_else2941:
    null $P5464
    set $P5465, $P5464
  if1626_end2942:
    unless_null $P5465, vivi_16272943
    new $P5466, 'Hash'
    set pkg_viv_tmp_95["%REG"], $P5466
    set $P5465, $P5466
  vivi_16272943:
    unless_null $P5465, vivi_16282944
    die "Contextual %*REG not found"
    box $P5467, "Contextual %*REG not found"
    set $P5465, $P5467
  vivi_16282944:
    set $P5460, $P5465
  fallback2940:
    set fb_tmp_492, $P5460
    repr_defined $I5081, fb_tmp_492
    unless $I5081 goto if1625_else2938 
    set $P5468, fb_tmp_492["tgt"]
    set $P5470, $P5468
    goto if1625_end2939
  if1625_else2938:
    null $P5469
    set $P5470, $P5469
  if1625_end2939:
    unless_null $P5470, vivi_16292945
    nqp_get_sc_object $P5471, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5470, $P5471
  vivi_16292945:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5470, "$I11")
.annotate 'line', 3869
    find_dynamic_lex $P5472, "%*REG"
    unless_null $P5472, fallback2948
    nqp_get_sc_object $P5474, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5473, $P5474
    set pkg_viv_tmp_96, $P5473
    set fb_tmp_495, pkg_viv_tmp_96
    repr_defined $I5084, fb_tmp_495
    unless $I5084 goto if1631_else2949 
    set $P5475, fb_tmp_495["%REG"]
    set $P5477, $P5475
    goto if1631_end2950
  if1631_else2949:
    null $P5476
    set $P5477, $P5476
  if1631_end2950:
    unless_null $P5477, vivi_16322951
    new $P5478, 'Hash'
    set pkg_viv_tmp_96["%REG"], $P5478
    set $P5477, $P5478
  vivi_16322951:
    unless_null $P5477, vivi_16332952
    die "Contextual %*REG not found"
    box $P5479, "Contextual %*REG not found"
    set $P5477, $P5479
  vivi_16332952:
    set $P5472, $P5477
  fallback2948:
    set fb_tmp_494, $P5472
    repr_defined $I5083, fb_tmp_494
    unless $I5083 goto if1630_else2946 
    set $P5480, fb_tmp_494["fail"]
    set $P5482, $P5480
    goto if1630_end2947
  if1630_else2946:
    null $P5481
    set $P5482, $P5481
  if1630_end2947:
    unless_null $P5482, vivi_16342953
    nqp_get_sc_object $P5483, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5482, $P5483
  vivi_16342953:
    $P101."push_pirop"("if", "$I11", $P5482)
.annotate 'line', 3870
    $P5484 = $P101."push"($P103)
    set $P5500, $P5484
    goto if1589_end2881
  if1589_else2880:
    set $S5009, $P102
    iseq $I5085, $S5009, "fail"
    box $P5499, $I5085
    set $P5498, $P5499
    unless $I5085 goto if1635_end2955 
.annotate 'line', 3872
.annotate 'line', 3873
    find_dynamic_lex $P5485, "%*REG"
    unless_null $P5485, fallback2958
    nqp_get_sc_object $P5487, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5486, $P5487
    set pkg_viv_tmp_97, $P5486
    set fb_tmp_497, pkg_viv_tmp_97
    repr_defined $I5087, fb_tmp_497
    unless $I5087 goto if1637_else2959 
    set $P5488, fb_tmp_497["%REG"]
    set $P5490, $P5488
    goto if1637_end2960
  if1637_else2959:
    null $P5489
    set $P5490, $P5489
  if1637_end2960:
    unless_null $P5490, vivi_16382961
    new $P5491, 'Hash'
    set pkg_viv_tmp_97["%REG"], $P5491
    set $P5490, $P5491
  vivi_16382961:
    unless_null $P5490, vivi_16392962
    die "Contextual %*REG not found"
    box $P5492, "Contextual %*REG not found"
    set $P5490, $P5492
  vivi_16392962:
    set $P5485, $P5490
  fallback2958:
    set fb_tmp_496, $P5485
    repr_defined $I5086, fb_tmp_496
    unless $I5086 goto if1636_else2956 
    set $P5493, fb_tmp_496["fail"]
    set $P5495, $P5493
    goto if1636_end2957
  if1636_else2956:
    null $P5494
    set $P5495, $P5494
  if1636_end2957:
    unless_null $P5495, vivi_16402963
    nqp_get_sc_object $P5496, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5495, $P5496
  vivi_16402963:
    $P5497 = $P101."push_pirop"("goto", $P5495)
    set $P5498, $P5497
  if1635_end2955:
    set $P5500, $P5498
  if1589_end2881:
    set $P5501, $P5500
  if1553_end2823:
    set $P5502, $P5501
  if1512_end2757:
    set $P5503, $P5502
  if1466_end2683:
    set $P5504, $P5503
  if1450_end2657:
  if1439_end2639:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "dba" :subid("cuid_124_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3879
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc pkg_viv_tmp_98 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    .local pmc pkg_viv_tmp_99 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    .local pmc pkg_viv_tmp_100 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3880
    nqp_decontainerize $P5002, _lex_param_0
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback2966
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_98, $P5004
    set fb_tmp_499, pkg_viv_tmp_98
    repr_defined $I5002, fb_tmp_499
    unless $I5002 goto if1642_else2967 
    set $P5006, fb_tmp_499["%REG"]
    set $P5008, $P5006
    goto if1642_end2968
  if1642_else2967:
    null $P5007
    set $P5008, $P5007
  if1642_end2968:
    unless_null $P5008, vivi_16432969
    new $P5009, 'Hash'
    set pkg_viv_tmp_98["%REG"], $P5009
    set $P5008, $P5009
  vivi_16432969:
    unless_null $P5008, vivi_16442970
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_16442970:
    set $P5003, $P5008
  fallback2966:
    set fb_tmp_498, $P5003
    repr_defined $I5001, fb_tmp_498
    unless $I5001 goto if1641_else2964 
    set $P5011, fb_tmp_498["cur"]
    set $P5013, $P5011
    goto if1641_end2965
  if1641_else2964:
    null $P5012
    set $P5013, $P5012
  if1641_end2965:
    unless_null $P5013, vivi_16452971
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_16452971:
    $P5015 = $P5002."post_new"("Ops", $P5013 :named("result"))
    set $P101, $P5015
.annotate 'line', 3881
    find_dynamic_lex $P5016, "%*REG"
    unless_null $P5016, fallback2974
    nqp_get_sc_object $P5018, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_99, $P5017
    set fb_tmp_501, pkg_viv_tmp_99
    repr_defined $I5004, fb_tmp_501
    unless $I5004 goto if1647_else2975 
    set $P5019, fb_tmp_501["%REG"]
    set $P5021, $P5019
    goto if1647_end2976
  if1647_else2975:
    null $P5020
    set $P5021, $P5020
  if1647_end2976:
    unless_null $P5021, vivi_16482977
    new $P5022, 'Hash'
    set pkg_viv_tmp_99["%REG"], $P5022
    set $P5021, $P5022
  vivi_16482977:
    unless_null $P5021, vivi_16492978
    die "Contextual %*REG not found"
    box $P5023, "Contextual %*REG not found"
    set $P5021, $P5023
  vivi_16492978:
    set $P5016, $P5021
  fallback2974:
    set fb_tmp_500, $P5016
    repr_defined $I5003, fb_tmp_500
    unless $I5003 goto if1646_else2972 
    set $P5024, fb_tmp_500["cur"]
    set $P5026, $P5024
    goto if1646_end2973
  if1646_else2972:
    null $P5025
    set $P5026, $P5025
  if1646_end2973:
    unless_null $P5026, vivi_16502979
    nqp_get_sc_object $P5027, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5026, $P5027
  vivi_16502979:
    find_dynamic_lex $P5028, "%*REG"
    unless_null $P5028, fallback2982
    nqp_get_sc_object $P5030, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_100, $P5029
    set fb_tmp_503, pkg_viv_tmp_100
    repr_defined $I5006, fb_tmp_503
    unless $I5006 goto if1652_else2983 
    set $P5031, fb_tmp_503["%REG"]
    set $P5033, $P5031
    goto if1652_end2984
  if1652_else2983:
    null $P5032
    set $P5033, $P5032
  if1652_end2984:
    unless_null $P5033, vivi_16532985
    new $P5034, 'Hash'
    set pkg_viv_tmp_100["%REG"], $P5034
    set $P5033, $P5034
  vivi_16532985:
    unless_null $P5033, vivi_16542986
    die "Contextual %*REG not found"
    box $P5035, "Contextual %*REG not found"
    set $P5033, $P5035
  vivi_16542986:
    set $P5028, $P5033
  fallback2982:
    set fb_tmp_502, $P5028
    repr_defined $I5005, fb_tmp_502
    unless $I5005 goto if1651_else2980 
    set $P5036, fb_tmp_502["pos"]
    set $P5038, $P5036
    goto if1651_end2981
  if1651_else2980:
    null $P5037
    set $P5038, $P5037
  if1651_end2981:
    unless_null $P5038, vivi_16552987
    nqp_get_sc_object $P5039, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5038, $P5039
  vivi_16552987:
    nqp_decontainerize $P5040, _lex_param_0
    $P5041 = _lex_param_1."name"()
    $P5042 = $P5040."escape"($P5041)
    $P101."push_pirop"("callmethod", "\"!dba\"", $P5026, $P5038, $P5042)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "cclass" :subid("cuid_125_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5076 = 'cuid_376_1368096764.976' 
    capture_lex $P5076 
    .lex "$ops", $P101 
    .lex "$subtype", $P102 
    .lex "$cclass", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc pkg_viv_tmp_101 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc pkg_viv_tmp_102 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_509 
    .local pmc pkg_viv_tmp_103 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc pkg_viv_tmp_104 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_526 
    .local pmc pkg_viv_tmp_111 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3895
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2990
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_101, $P5006
    set fb_tmp_505, pkg_viv_tmp_101
    repr_defined $I5002, fb_tmp_505
    unless $I5002 goto if1657_else2991 
    set $P5008, fb_tmp_505["%REG"]
    set $P5010, $P5008
    goto if1657_end2992
  if1657_else2991:
    null $P5009
    set $P5010, $P5009
  if1657_end2992:
    unless_null $P5010, vivi_16582993
    new $P5011, 'Hash'
    set pkg_viv_tmp_101["%REG"], $P5011
    set $P5010, $P5011
  vivi_16582993:
    unless_null $P5010, vivi_16592994
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_16592994:
    set $P5005, $P5010
  fallback2990:
    set fb_tmp_504, $P5005
    repr_defined $I5001, fb_tmp_504
    unless $I5001 goto if1656_else2988 
    set $P5013, fb_tmp_504["cur"]
    set $P5015, $P5013
    goto if1656_end2989
  if1656_else2988:
    null $P5014
    set $P5015, $P5014
  if1656_end2989:
    unless_null $P5015, vivi_16602995
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_16602995:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3896
    $P5018 = _lex_param_1."name"()
    set $P102, $P5018
.annotate 'line', 3897
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback2998
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_102, $P5020
    set fb_tmp_507, pkg_viv_tmp_102
    repr_defined $I5004, fb_tmp_507
    unless $I5004 goto if1662_else2999 
    set $P5022, fb_tmp_507["%REG"]
    set $P5024, $P5022
    goto if1662_end3000
  if1662_else2999:
    null $P5023
    set $P5024, $P5023
  if1662_end3000:
    unless_null $P5024, vivi_16633001
    new $P5025, 'Hash'
    set pkg_viv_tmp_102["%REG"], $P5025
    set $P5024, $P5025
  vivi_16633001:
    unless_null $P5024, vivi_16643002
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_16643002:
    set $P5019, $P5024
  fallback2998:
    set fb_tmp_506, $P5019
    repr_defined $I5003, fb_tmp_506
    unless $I5003 goto if1661_else2996 
    set $P5027, fb_tmp_506["pos"]
    set $P5029, $P5027
    goto if1661_end2997
  if1661_else2996:
    null $P5028
    set $P5029, $P5028
  if1661_end2997:
    unless_null $P5029, vivi_16653003
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_16653003:
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback3006
    nqp_get_sc_object $P5033, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_103, $P5032
    set fb_tmp_509, pkg_viv_tmp_103
    repr_defined $I5006, fb_tmp_509
    unless $I5006 goto if1667_else3007 
    set $P5034, fb_tmp_509["%REG"]
    set $P5036, $P5034
    goto if1667_end3008
  if1667_else3007:
    null $P5035
    set $P5036, $P5035
  if1667_end3008:
    unless_null $P5036, vivi_16683009
    new $P5037, 'Hash'
    set pkg_viv_tmp_103["%REG"], $P5037
    set $P5036, $P5037
  vivi_16683009:
    unless_null $P5036, vivi_16693010
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_16693010:
    set $P5031, $P5036
  fallback3006:
    set fb_tmp_508, $P5031
    repr_defined $I5005, fb_tmp_508
    unless $I5005 goto if1666_else3004 
    set $P5039, fb_tmp_508["eos"]
    set $P5041, $P5039
    goto if1666_end3005
  if1666_else3004:
    null $P5040
    set $P5041, $P5040
  if1666_end3005:
    unless_null $P5041, vivi_16703011
    nqp_get_sc_object $P5042, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5041, $P5042
  vivi_16703011:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback3014
    nqp_get_sc_object $P5045, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_104, $P5044
    set fb_tmp_511, pkg_viv_tmp_104
    repr_defined $I5008, fb_tmp_511
    unless $I5008 goto if1672_else3015 
    set $P5046, fb_tmp_511["%REG"]
    set $P5048, $P5046
    goto if1672_end3016
  if1672_else3015:
    null $P5047
    set $P5048, $P5047
  if1672_end3016:
    unless_null $P5048, vivi_16733017
    new $P5049, 'Hash'
    set pkg_viv_tmp_104["%REG"], $P5049
    set $P5048, $P5049
  vivi_16733017:
    unless_null $P5048, vivi_16743018
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_16743018:
    set $P5043, $P5048
  fallback3014:
    set fb_tmp_510, $P5043
    repr_defined $I5007, fb_tmp_510
    unless $I5007 goto if1671_else3012 
    set $P5051, fb_tmp_510["fail"]
    set $P5053, $P5051
    goto if1671_end3013
  if1671_else3012:
    null $P5052
    set $P5053, $P5052
  if1671_end3013:
    unless_null $P5053, vivi_16753019
    nqp_get_sc_object $P5054, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5053, $P5054
  vivi_16753019:
    $P101."push_pirop"("ge", $P5029, $P5041, $P5053)
    find_lex $P5055, "%cclass_code"
    set fb_tmp_512, $P5055
    repr_defined $I5009, fb_tmp_512
    unless $I5009 goto if1676_else3020 
    set $S5001, $P102
    set $P5056, fb_tmp_512[$S5001]
    set $P5058, $P5056
    goto if1676_end3021
  if1676_else3020:
    null $P5057
    set $P5058, $P5057
  if1676_end3021:
    unless_null $P5058, vivi_16773022
    nqp_get_sc_object $P5059, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5058, $P5059
  vivi_16773022:
    set $P103, $P5058
    if $P103 goto unless1678_end3024 
.annotate 'line', 3899
    nqp_decontainerize $P5060, _lex_param_0
    set $S5004, $P102
    concat $S5003, "Unrecognized subtype '", $S5004
    concat $S5002, $S5003, "' in QAST::Regex cclass"
    $P5061 = $P5060."panic"($S5002)
  unless1678_end3024:
    set $S5005, $P103
    isne $I5010, $S5005, ".CCLASS_ANY"
    unless $I5010 goto if1679_end3026 
    .const 'Sub' $P5062 = 'cuid_376_1368096764.976' 
    capture_lex $P5062
    $P5063 = $P5062()
  if1679_end3026:
.annotate 'line', 3911
    find_dynamic_lex $P5064, "%*REG"
    unless_null $P5064, fallback3081
    nqp_get_sc_object $P5066, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_111, $P5065
    set fb_tmp_526, pkg_viv_tmp_111
    repr_defined $I5012, fb_tmp_526
    unless $I5012 goto if1713_else3082 
    set $P5067, fb_tmp_526["%REG"]
    set $P5069, $P5067
    goto if1713_end3083
  if1713_else3082:
    null $P5068
    set $P5069, $P5068
  if1713_end3083:
    unless_null $P5069, vivi_17143084
    new $P5070, 'Hash'
    set pkg_viv_tmp_111["%REG"], $P5070
    set $P5069, $P5070
  vivi_17143084:
    unless_null $P5069, vivi_17153085
    die "Contextual %*REG not found"
    box $P5071, "Contextual %*REG not found"
    set $P5069, $P5071
  vivi_17153085:
    set $P5064, $P5069
  fallback3081:
    set fb_tmp_525, $P5064
    repr_defined $I5011, fb_tmp_525
    unless $I5011 goto if1712_else3079 
    set $P5072, fb_tmp_525["pos"]
    set $P5074, $P5072
    goto if1712_end3080
  if1712_else3079:
    null $P5073
    set $P5074, $P5073
  if1712_end3080:
    unless_null $P5074, vivi_17163086
    nqp_get_sc_object $P5075, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5074, $P5075
  vivi_17163086:
    $P101."push_pirop"("add", $P5074, 1)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1368096764.976") :anon :lex :outer("cuid_125_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3901
    .lex "$testop", $P101 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    .local pmc pkg_viv_tmp_105 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc pkg_viv_tmp_106 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc pkg_viv_tmp_107 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc pkg_viv_tmp_108 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc pkg_viv_tmp_109 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    .local pmc pkg_viv_tmp_110 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3902
    find_lex $P5002, "$node"
    $P5003 = $P5002."negate"()
    unless $P5003 goto if1680_else3027 
    set $S5001, "if"
    goto if1680_end3028
  if1680_else3027:
    set $S5001, "unless"
  if1680_end3028:
    box $P5004, $S5001
    set $P101, $P5004
.annotate 'line', 3903
    find_lex $P5005, "$ops"
    find_lex $P5006, "$cclass"
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3031
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_105, $P5008
    set fb_tmp_514, pkg_viv_tmp_105
    repr_defined $I5002, fb_tmp_514
    unless $I5002 goto if1682_else3032 
    set $P5010, fb_tmp_514["%REG"]
    set $P5012, $P5010
    goto if1682_end3033
  if1682_else3032:
    null $P5011
    set $P5012, $P5011
  if1682_end3033:
    unless_null $P5012, vivi_16833034
    new $P5013, 'Hash'
    set pkg_viv_tmp_105["%REG"], $P5013
    set $P5012, $P5013
  vivi_16833034:
    unless_null $P5012, vivi_16843035
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_16843035:
    set $P5007, $P5012
  fallback3031:
    set fb_tmp_513, $P5007
    repr_defined $I5001, fb_tmp_513
    unless $I5001 goto if1681_else3029 
    set $P5015, fb_tmp_513["tgt"]
    set $P5017, $P5015
    goto if1681_end3030
  if1681_else3029:
    null $P5016
    set $P5017, $P5016
  if1681_end3030:
    unless_null $P5017, vivi_16853036
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_16853036:
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback3039
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_106, $P5020
    set fb_tmp_516, pkg_viv_tmp_106
    repr_defined $I5004, fb_tmp_516
    unless $I5004 goto if1687_else3040 
    set $P5022, fb_tmp_516["%REG"]
    set $P5024, $P5022
    goto if1687_end3041
  if1687_else3040:
    null $P5023
    set $P5024, $P5023
  if1687_end3041:
    unless_null $P5024, vivi_16883042
    new $P5025, 'Hash'
    set pkg_viv_tmp_106["%REG"], $P5025
    set $P5024, $P5025
  vivi_16883042:
    unless_null $P5024, vivi_16893043
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_16893043:
    set $P5019, $P5024
  fallback3039:
    set fb_tmp_515, $P5019
    repr_defined $I5003, fb_tmp_515
    unless $I5003 goto if1686_else3037 
    set $P5027, fb_tmp_515["pos"]
    set $P5029, $P5027
    goto if1686_end3038
  if1686_else3037:
    null $P5028
    set $P5029, $P5028
  if1686_end3038:
    unless_null $P5029, vivi_16903044
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_16903044:
    $P5005."push_pirop"("is_cclass", "$I11", $P5006, $P5017, $P5029)
.annotate 'line', 3904
    find_lex $P5031, "$ops"
    find_dynamic_lex $P5032, "%*REG"
    unless_null $P5032, fallback3047
    nqp_get_sc_object $P5034, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5033, $P5034
    set pkg_viv_tmp_107, $P5033
    set fb_tmp_518, pkg_viv_tmp_107
    repr_defined $I5006, fb_tmp_518
    unless $I5006 goto if1692_else3048 
    set $P5035, fb_tmp_518["%REG"]
    set $P5037, $P5035
    goto if1692_end3049
  if1692_else3048:
    null $P5036
    set $P5037, $P5036
  if1692_end3049:
    unless_null $P5037, vivi_16933050
    new $P5038, 'Hash'
    set pkg_viv_tmp_107["%REG"], $P5038
    set $P5037, $P5038
  vivi_16933050:
    unless_null $P5037, vivi_16943051
    die "Contextual %*REG not found"
    box $P5039, "Contextual %*REG not found"
    set $P5037, $P5039
  vivi_16943051:
    set $P5032, $P5037
  fallback3047:
    set fb_tmp_517, $P5032
    repr_defined $I5005, fb_tmp_517
    unless $I5005 goto if1691_else3045 
    set $P5040, fb_tmp_517["fail"]
    set $P5042, $P5040
    goto if1691_end3046
  if1691_else3045:
    null $P5041
    set $P5042, $P5041
  if1691_end3046:
    unless_null $P5042, vivi_16953052
    nqp_get_sc_object $P5043, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5042, $P5043
  vivi_16953052:
    $P5031."push_pirop"($P101, "$I11", $P5042)
    find_lex $P5044, "$cclass"
    set $S5002, $P5044
    iseq $I5007, $S5002, ".CCLASS_NEWLINE"
    box $P5086, $I5007
    set $P5085, $P5086
    unless $I5007 goto if1696_end3054 
.annotate 'line', 3905
.annotate 'line', 3906
    find_lex $P5045, "$ops"
    find_dynamic_lex $P5046, "%*REG"
    unless_null $P5046, fallback3057
    nqp_get_sc_object $P5048, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_108, $P5047
    set fb_tmp_520, pkg_viv_tmp_108
    repr_defined $I5009, fb_tmp_520
    unless $I5009 goto if1698_else3058 
    set $P5049, fb_tmp_520["%REG"]
    set $P5051, $P5049
    goto if1698_end3059
  if1698_else3058:
    null $P5050
    set $P5051, $P5050
  if1698_end3059:
    unless_null $P5051, vivi_16993060
    new $P5052, 'Hash'
    set pkg_viv_tmp_108["%REG"], $P5052
    set $P5051, $P5052
  vivi_16993060:
    unless_null $P5051, vivi_17003061
    die "Contextual %*REG not found"
    box $P5053, "Contextual %*REG not found"
    set $P5051, $P5053
  vivi_17003061:
    set $P5046, $P5051
  fallback3057:
    set fb_tmp_519, $P5046
    repr_defined $I5008, fb_tmp_519
    unless $I5008 goto if1697_else3055 
    set $P5054, fb_tmp_519["tgt"]
    set $P5056, $P5054
    goto if1697_end3056
  if1697_else3055:
    null $P5055
    set $P5056, $P5055
  if1697_end3056:
    unless_null $P5056, vivi_17013062
    nqp_get_sc_object $P5057, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5056, $P5057
  vivi_17013062:
    find_dynamic_lex $P5058, "%*REG"
    unless_null $P5058, fallback3065
    nqp_get_sc_object $P5060, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5059, $P5060
    set pkg_viv_tmp_109, $P5059
    set fb_tmp_522, pkg_viv_tmp_109
    repr_defined $I5011, fb_tmp_522
    unless $I5011 goto if1703_else3066 
    set $P5061, fb_tmp_522["%REG"]
    set $P5063, $P5061
    goto if1703_end3067
  if1703_else3066:
    null $P5062
    set $P5063, $P5062
  if1703_end3067:
    unless_null $P5063, vivi_17043068
    new $P5064, 'Hash'
    set pkg_viv_tmp_109["%REG"], $P5064
    set $P5063, $P5064
  vivi_17043068:
    unless_null $P5063, vivi_17053069
    die "Contextual %*REG not found"
    box $P5065, "Contextual %*REG not found"
    set $P5063, $P5065
  vivi_17053069:
    set $P5058, $P5063
  fallback3065:
    set fb_tmp_521, $P5058
    repr_defined $I5010, fb_tmp_521
    unless $I5010 goto if1702_else3063 
    set $P5066, fb_tmp_521["pos"]
    set $P5068, $P5066
    goto if1702_end3064
  if1702_else3063:
    null $P5067
    set $P5068, $P5067
  if1702_end3064:
    unless_null $P5068, vivi_17063070
    nqp_get_sc_object $P5069, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5068, $P5069
  vivi_17063070:
    $P5045."push_pirop"("substr", "$S10", $P5056, $P5068, 2)
.annotate 'line', 3907
    find_lex $P5070, "$ops"
    $P5070."push_pirop"("iseq", "$I11", "$S10", "\"\\r\\n\"")
.annotate 'line', 3908
    find_lex $P5071, "$ops"
    find_dynamic_lex $P5072, "%*REG"
    unless_null $P5072, fallback3073
    nqp_get_sc_object $P5074, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_110, $P5073
    set fb_tmp_524, pkg_viv_tmp_110
    repr_defined $I5013, fb_tmp_524
    unless $I5013 goto if1708_else3074 
    set $P5075, fb_tmp_524["%REG"]
    set $P5077, $P5075
    goto if1708_end3075
  if1708_else3074:
    null $P5076
    set $P5077, $P5076
  if1708_end3075:
    unless_null $P5077, vivi_17093076
    new $P5078, 'Hash'
    set pkg_viv_tmp_110["%REG"], $P5078
    set $P5077, $P5078
  vivi_17093076:
    unless_null $P5077, vivi_17103077
    die "Contextual %*REG not found"
    box $P5079, "Contextual %*REG not found"
    set $P5077, $P5079
  vivi_17103077:
    set $P5072, $P5077
  fallback3073:
    set fb_tmp_523, $P5072
    repr_defined $I5012, fb_tmp_523
    unless $I5012 goto if1707_else3071 
    set $P5080, fb_tmp_523["pos"]
    set $P5082, $P5080
    goto if1707_end3072
  if1707_else3071:
    null $P5081
    set $P5082, $P5081
  if1707_end3072:
    unless_null $P5082, vivi_17113078
    nqp_get_sc_object $P5083, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5082, $P5083
  vivi_17113078:
    $P5084 = $P5071."push_pirop"("add", $P5082, "$I11")
    set $P5085, $P5084
  if1696_end3054:
    .return ($P5085) 
.end
.HLL "nqp"
.namespace []
.sub "concat" :subid("cuid_126_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3915
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_377_1368096764.976' 
    capture_lex $P5022 
    .lex "$ops", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc pkg_viv_tmp_112 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3916
    nqp_decontainerize $P5002, _lex_param_0
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback3089
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_112, $P5004
    set fb_tmp_528, pkg_viv_tmp_112
    repr_defined $I5002, fb_tmp_528
    unless $I5002 goto if1718_else3090 
    set $P5006, fb_tmp_528["%REG"]
    set $P5008, $P5006
    goto if1718_end3091
  if1718_else3090:
    null $P5007
    set $P5008, $P5007
  if1718_end3091:
    unless_null $P5008, vivi_17193092
    new $P5009, 'Hash'
    set pkg_viv_tmp_112["%REG"], $P5009
    set $P5008, $P5009
  vivi_17193092:
    unless_null $P5008, vivi_17203093
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_17203093:
    set $P5003, $P5008
  fallback3089:
    set fb_tmp_527, $P5003
    repr_defined $I5001, fb_tmp_527
    unless $I5001 goto if1717_else3087 
    set $P5011, fb_tmp_527["cur"]
    set $P5013, $P5011
    goto if1717_end3088
  if1717_else3087:
    null $P5012
    set $P5013, $P5012
  if1717_end3088:
    unless_null $P5013, vivi_17213094
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_17213094:
    $P5015 = $P5002."post_new"("Ops", $P5013 :named("result"))
    set $P101, $P5015
.annotate 'line', 3917
    $P5019 = _lex_param_1."list"()
    set $P5016, $P5019
    iter $P5018, $P5019
  for_next3095:
    unless $P5018, for_done3097
    shift $P5021, $P5018
  for_redo3096:
    .const 'Sub' $P5020 = 'cuid_377_1368096764.976' 
    capture_lex $P5020
    $P5016 = $P5020($P5021)
    goto for_next3095
  for_done3097:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1368096764.976") :anon :lex :outer("cuid_126_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3917
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$ops"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."regex_post"(_lex_param_0)
    $P5005 = $P5001."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "conj" :subid("cuid_127_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3921
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."conjseq"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "conjseq" :subid("cuid_128_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3923
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$conjlabel", $P103 
    .lex "$firstlabel", $P104 
    .lex "$iter", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc pkg_viv_tmp_113 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc pkg_viv_tmp_114 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    .local pmc pkg_viv_tmp_115 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc pkg_viv_tmp_116 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    .local pmc pkg_viv_tmp_117 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc pkg_viv_tmp_118 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc pkg_viv_tmp_119 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    .local pmc pkg_viv_tmp_120 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
.annotate 'line', 3924
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3100
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_113, $P5008
    set fb_tmp_530, pkg_viv_tmp_113
    repr_defined $I5002, fb_tmp_530
    unless $I5002 goto if1723_else3101 
    set $P5010, fb_tmp_530["%REG"]
    set $P5012, $P5010
    goto if1723_end3102
  if1723_else3101:
    null $P5011
    set $P5012, $P5011
  if1723_end3102:
    unless_null $P5012, vivi_17243103
    new $P5013, 'Hash'
    set pkg_viv_tmp_113["%REG"], $P5013
    set $P5012, $P5013
  vivi_17243103:
    unless_null $P5012, vivi_17253104
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_17253104:
    set $P5007, $P5012
  fallback3100:
    set fb_tmp_529, $P5007
    repr_defined $I5001, fb_tmp_529
    unless $I5001 goto if1722_else3098 
    set $P5015, fb_tmp_529["cur"]
    set $P5017, $P5015
    goto if1722_end3099
  if1722_else3098:
    null $P5016
    set $P5017, $P5016
  if1722_end3099:
    unless_null $P5017, vivi_17263105
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_17263105:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 3925
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxconj")
    set $S5002, $P5021
    concat $S5001, $S5002, "_"
    box $P5022, $S5001
    set $P102, $P5022
.annotate 'line', 3926
    nqp_decontainerize $P5023, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "fail"
    $P5024 = $P5023."post_new"("Label", $S5003 :named("name"))
    set $P103, $P5024
.annotate 'line', 3927
    nqp_decontainerize $P5025, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "first"
    $P5026 = $P5025."post_new"("Label", $S5005 :named("name"))
    set $P104, $P5026
.annotate 'line', 3928
    $P5028 = _lex_param_1."list"()
    iter $P5027, $P5028
    set $P105, $P5027
.annotate 'line', 3930
    nqp_decontainerize $P5029, _lex_param_0
    find_dynamic_lex $P5030, "%*REG"
    unless_null $P5030, fallback3108
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5031, $P5032
    set pkg_viv_tmp_114, $P5031
    set fb_tmp_532, pkg_viv_tmp_114
    repr_defined $I5004, fb_tmp_532
    unless $I5004 goto if1728_else3109 
    set $P5033, fb_tmp_532["%REG"]
    set $P5035, $P5033
    goto if1728_end3110
  if1728_else3109:
    null $P5034
    set $P5035, $P5034
  if1728_end3110:
    unless_null $P5035, vivi_17293111
    new $P5036, 'Hash'
    set pkg_viv_tmp_114["%REG"], $P5036
    set $P5035, $P5036
  vivi_17293111:
    unless_null $P5035, vivi_17303112
    die "Contextual %*REG not found"
    box $P5037, "Contextual %*REG not found"
    set $P5035, $P5037
  vivi_17303112:
    set $P5030, $P5035
  fallback3108:
    set fb_tmp_531, $P5030
    repr_defined $I5003, fb_tmp_531
    unless $I5003 goto if1727_else3106 
    set $P5038, fb_tmp_531["pos"]
    set $P5040, $P5038
    goto if1727_end3107
  if1727_else3106:
    null $P5039
    set $P5040, $P5039
  if1727_end3107:
    unless_null $P5040, vivi_17313113
    nqp_get_sc_object $P5041, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5040, $P5041
  vivi_17313113:
    $P5029."regex_mark"($P101, $P103, $P5040, 0)
.annotate 'line', 3931
    $P101."push_pirop"("goto", $P104)
.annotate 'line', 3932
    $P101."push"($P103)
.annotate 'line', 3933
    find_dynamic_lex $P5042, "%*REG"
    unless_null $P5042, fallback3116
    nqp_get_sc_object $P5044, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5043, $P5044
    set pkg_viv_tmp_115, $P5043
    set fb_tmp_534, pkg_viv_tmp_115
    repr_defined $I5006, fb_tmp_534
    unless $I5006 goto if1733_else3117 
    set $P5045, fb_tmp_534["%REG"]
    set $P5047, $P5045
    goto if1733_end3118
  if1733_else3117:
    null $P5046
    set $P5047, $P5046
  if1733_end3118:
    unless_null $P5047, vivi_17343119
    new $P5048, 'Hash'
    set pkg_viv_tmp_115["%REG"], $P5048
    set $P5047, $P5048
  vivi_17343119:
    unless_null $P5047, vivi_17353120
    die "Contextual %*REG not found"
    box $P5049, "Contextual %*REG not found"
    set $P5047, $P5049
  vivi_17353120:
    set $P5042, $P5047
  fallback3116:
    set fb_tmp_533, $P5042
    repr_defined $I5005, fb_tmp_533
    unless $I5005 goto if1732_else3114 
    set $P5050, fb_tmp_533["fail"]
    set $P5052, $P5050
    goto if1732_end3115
  if1732_else3114:
    null $P5051
    set $P5052, $P5051
  if1732_end3115:
    unless_null $P5052, vivi_17363121
    nqp_get_sc_object $P5053, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5052, $P5053
  vivi_17363121:
    $P101."push_pirop"("goto", $P5052)
.annotate 'line', 3935
    $P101."push"($P104)
.annotate 'line', 3936
    nqp_decontainerize $P5054, _lex_param_0
    shift $P5055, $P105
    $P5056 = $P5054."regex_post"($P5055)
    $P101."push"($P5056)
.annotate 'line', 3938
    nqp_decontainerize $P5057, _lex_param_0
    $P5057."regex_peek"($P101, $P103, "$I11")
.annotate 'line', 3939
    nqp_decontainerize $P5058, _lex_param_0
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback3124
    nqp_get_sc_object $P5061, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_116, $P5060
    set fb_tmp_536, pkg_viv_tmp_116
    repr_defined $I5008, fb_tmp_536
    unless $I5008 goto if1738_else3125 
    set $P5062, fb_tmp_536["%REG"]
    set $P5064, $P5062
    goto if1738_end3126
  if1738_else3125:
    null $P5063
    set $P5064, $P5063
  if1738_end3126:
    unless_null $P5064, vivi_17393127
    new $P5065, 'Hash'
    set pkg_viv_tmp_116["%REG"], $P5065
    set $P5064, $P5065
  vivi_17393127:
    unless_null $P5064, vivi_17403128
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_17403128:
    set $P5059, $P5064
  fallback3124:
    set fb_tmp_535, $P5059
    repr_defined $I5007, fb_tmp_535
    unless $I5007 goto if1737_else3122 
    set $P5067, fb_tmp_535["pos"]
    set $P5069, $P5067
    goto if1737_end3123
  if1737_else3122:
    null $P5068
    set $P5069, $P5068
  if1737_end3123:
    unless_null $P5069, vivi_17413129
    nqp_get_sc_object $P5070, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5069, $P5070
  vivi_17413129:
    $P5058."regex_mark"($P101, $P103, "$I11", $P5069)
  while1742_test3130:
    set $P5112, $P105
    unless $P105 goto while1742_done3134 
  while1742_redo3132:
.annotate 'line', 3941
.annotate 'line', 3942
    find_dynamic_lex $P5071, "%*REG"
    unless_null $P5071, fallback3137
    nqp_get_sc_object $P5073, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5072, $P5073
    set pkg_viv_tmp_117, $P5072
    set fb_tmp_538, pkg_viv_tmp_117
    repr_defined $I5010, fb_tmp_538
    unless $I5010 goto if1744_else3138 
    set $P5074, fb_tmp_538["%REG"]
    set $P5076, $P5074
    goto if1744_end3139
  if1744_else3138:
    null $P5075
    set $P5076, $P5075
  if1744_end3139:
    unless_null $P5076, vivi_17453140
    new $P5077, 'Hash'
    set pkg_viv_tmp_117["%REG"], $P5077
    set $P5076, $P5077
  vivi_17453140:
    unless_null $P5076, vivi_17463141
    die "Contextual %*REG not found"
    box $P5078, "Contextual %*REG not found"
    set $P5076, $P5078
  vivi_17463141:
    set $P5071, $P5076
  fallback3137:
    set fb_tmp_537, $P5071
    repr_defined $I5009, fb_tmp_537
    unless $I5009 goto if1743_else3135 
    set $P5079, fb_tmp_537["pos"]
    set $P5081, $P5079
    goto if1743_end3136
  if1743_else3135:
    null $P5080
    set $P5081, $P5080
  if1743_end3136:
    unless_null $P5081, vivi_17473142
    nqp_get_sc_object $P5082, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5081, $P5082
  vivi_17473142:
    $P101."push_pirop"("set", $P5081, "$I11")
.annotate 'line', 3943
    nqp_decontainerize $P5083, _lex_param_0
    shift $P5084, $P105
    $P5085 = $P5083."regex_post"($P5084)
    $P101."push"($P5085)
.annotate 'line', 3944
    nqp_decontainerize $P5086, _lex_param_0
    $P5086."regex_peek"($P101, $P103, "$I11", "$I12")
.annotate 'line', 3945
    find_dynamic_lex $P5087, "%*REG"
    unless_null $P5087, fallback3145
    nqp_get_sc_object $P5089, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5088, $P5089
    set pkg_viv_tmp_118, $P5088
    set fb_tmp_540, pkg_viv_tmp_118
    repr_defined $I5012, fb_tmp_540
    unless $I5012 goto if1749_else3146 
    set $P5090, fb_tmp_540["%REG"]
    set $P5092, $P5090
    goto if1749_end3147
  if1749_else3146:
    null $P5091
    set $P5092, $P5091
  if1749_end3147:
    unless_null $P5092, vivi_17503148
    new $P5093, 'Hash'
    set pkg_viv_tmp_118["%REG"], $P5093
    set $P5092, $P5093
  vivi_17503148:
    unless_null $P5092, vivi_17513149
    die "Contextual %*REG not found"
    box $P5094, "Contextual %*REG not found"
    set $P5092, $P5094
  vivi_17513149:
    set $P5087, $P5092
  fallback3145:
    set fb_tmp_539, $P5087
    repr_defined $I5011, fb_tmp_539
    unless $I5011 goto if1748_else3143 
    set $P5095, fb_tmp_539["pos"]
    set $P5097, $P5095
    goto if1748_end3144
  if1748_else3143:
    null $P5096
    set $P5097, $P5096
  if1748_end3144:
    unless_null $P5097, vivi_17523150
    nqp_get_sc_object $P5098, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5097, $P5098
  vivi_17523150:
    find_dynamic_lex $P5099, "%*REG"
    unless_null $P5099, fallback3153
    nqp_get_sc_object $P5101, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5100, $P5101
    set pkg_viv_tmp_119, $P5100
    set fb_tmp_542, pkg_viv_tmp_119
    repr_defined $I5014, fb_tmp_542
    unless $I5014 goto if1754_else3154 
    set $P5102, fb_tmp_542["%REG"]
    set $P5104, $P5102
    goto if1754_end3155
  if1754_else3154:
    null $P5103
    set $P5104, $P5103
  if1754_end3155:
    unless_null $P5104, vivi_17553156
    new $P5105, 'Hash'
    set pkg_viv_tmp_119["%REG"], $P5105
    set $P5104, $P5105
  vivi_17553156:
    unless_null $P5104, vivi_17563157
    die "Contextual %*REG not found"
    box $P5106, "Contextual %*REG not found"
    set $P5104, $P5106
  vivi_17563157:
    set $P5099, $P5104
  fallback3153:
    set fb_tmp_541, $P5099
    repr_defined $I5013, fb_tmp_541
    unless $I5013 goto if1753_else3151 
    set $P5107, fb_tmp_541["fail"]
    set $P5109, $P5107
    goto if1753_end3152
  if1753_else3151:
    null $P5108
    set $P5109, $P5108
  if1753_end3152:
    unless_null $P5109, vivi_17573158
    nqp_get_sc_object $P5110, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5109, $P5110
  vivi_17573158:
    $P5111 = $P101."push_pirop"("ne", $P5097, "$I12", $P5109)
    set $P5112, $P5111
    goto while1742_test3130 
  while1742_done3134:
.annotate 'line', 3947
    $P5113 = _lex_param_1."subtype"()
    set $S5007, $P5113
    iseq $I5015, $S5007, "zerowidth"
    unless $I5015 goto if1758_end3160 
    find_dynamic_lex $P5114, "%*REG"
    unless_null $P5114, fallback3163
    nqp_get_sc_object $P5116, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5115, $P5116
    set pkg_viv_tmp_120, $P5115
    set fb_tmp_544, pkg_viv_tmp_120
    repr_defined $I5017, fb_tmp_544
    unless $I5017 goto if1760_else3164 
    set $P5117, fb_tmp_544["%REG"]
    set $P5119, $P5117
    goto if1760_end3165
  if1760_else3164:
    null $P5118
    set $P5119, $P5118
  if1760_end3165:
    unless_null $P5119, vivi_17613166
    new $P5120, 'Hash'
    set pkg_viv_tmp_120["%REG"], $P5120
    set $P5119, $P5120
  vivi_17613166:
    unless_null $P5119, vivi_17623167
    die "Contextual %*REG not found"
    box $P5121, "Contextual %*REG not found"
    set $P5119, $P5121
  vivi_17623167:
    set $P5114, $P5119
  fallback3163:
    set fb_tmp_543, $P5114
    repr_defined $I5016, fb_tmp_543
    unless $I5016 goto if1759_else3161 
    set $P5122, fb_tmp_543["pos"]
    set $P5124, $P5122
    goto if1759_end3162
  if1759_else3161:
    null $P5123
    set $P5124, $P5123
  if1759_end3162:
    unless_null $P5124, vivi_17633168
    nqp_get_sc_object $P5125, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5124, $P5125
  vivi_17633168:
    $P5126 = $P101."push_pirop"("set", $P5124, "$I11")
  if1758_end3160:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "enumcharlist" :subid("cuid_129_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3951
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$charlist", $P102 
    .lex "$testop", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc pkg_viv_tmp_121 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc pkg_viv_tmp_122 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc pkg_viv_tmp_123 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc pkg_viv_tmp_124 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc pkg_viv_tmp_125 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc pkg_viv_tmp_126 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc pkg_viv_tmp_127 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc pkg_viv_tmp_128 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
.annotate 'line', 3952
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback3171
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_121, $P5006
    set fb_tmp_546, pkg_viv_tmp_121
    repr_defined $I5002, fb_tmp_546
    unless $I5002 goto if1765_else3172 
    set $P5008, fb_tmp_546["%REG"]
    set $P5010, $P5008
    goto if1765_end3173
  if1765_else3172:
    null $P5009
    set $P5010, $P5009
  if1765_end3173:
    unless_null $P5010, vivi_17663174
    new $P5011, 'Hash'
    set pkg_viv_tmp_121["%REG"], $P5011
    set $P5010, $P5011
  vivi_17663174:
    unless_null $P5010, vivi_17673175
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_17673175:
    set $P5005, $P5010
  fallback3171:
    set fb_tmp_545, $P5005
    repr_defined $I5001, fb_tmp_545
    unless $I5001 goto if1764_else3169 
    set $P5013, fb_tmp_545["cur"]
    set $P5015, $P5013
    goto if1764_end3170
  if1764_else3169:
    null $P5014
    set $P5015, $P5014
  if1764_end3170:
    unless_null $P5015, vivi_17683176
    nqp_get_sc_object $P5016, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5015, $P5016
  vivi_17683176:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3953
    nqp_decontainerize $P5018, _lex_param_0
    set fb_tmp_547, _lex_param_1
    repr_defined $I5003, fb_tmp_547
    unless $I5003 goto if1769_else3177 
    set $P5019, fb_tmp_547[0]
    set $P5021, $P5019
    goto if1769_end3178
  if1769_else3177:
    null $P5020
    set $P5021, $P5020
  if1769_end3178:
    unless_null $P5021, vivi_17703179
    nqp_get_sc_object $P5022, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5021, $P5022
  vivi_17703179:
    $P5023 = $P5018."rxescape"($P5021)
    set $P102, $P5023
.annotate 'line', 3954
    $P5024 = _lex_param_1."negate"()
    unless $P5024 goto if1771_else3180 
    set $S5001, "ge"
    goto if1771_end3181
  if1771_else3180:
    set $S5001, "lt"
  if1771_end3181:
    box $P5025, $S5001
    set $P103, $P5025
.annotate 'line', 3955
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3184
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_122, $P5027
    set fb_tmp_549, pkg_viv_tmp_122
    repr_defined $I5005, fb_tmp_549
    unless $I5005 goto if1773_else3185 
    set $P5029, fb_tmp_549["%REG"]
    set $P5031, $P5029
    goto if1773_end3186
  if1773_else3185:
    null $P5030
    set $P5031, $P5030
  if1773_end3186:
    unless_null $P5031, vivi_17743187
    new $P5032, 'Hash'
    set pkg_viv_tmp_122["%REG"], $P5032
    set $P5031, $P5032
  vivi_17743187:
    unless_null $P5031, vivi_17753188
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_17753188:
    set $P5026, $P5031
  fallback3184:
    set fb_tmp_548, $P5026
    repr_defined $I5004, fb_tmp_548
    unless $I5004 goto if1772_else3182 
    set $P5034, fb_tmp_548["pos"]
    set $P5036, $P5034
    goto if1772_end3183
  if1772_else3182:
    null $P5035
    set $P5036, $P5035
  if1772_end3183:
    unless_null $P5036, vivi_17763189
    nqp_get_sc_object $P5037, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5036, $P5037
  vivi_17763189:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3192
    nqp_get_sc_object $P5040, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_123, $P5039
    set fb_tmp_551, pkg_viv_tmp_123
    repr_defined $I5007, fb_tmp_551
    unless $I5007 goto if1778_else3193 
    set $P5041, fb_tmp_551["%REG"]
    set $P5043, $P5041
    goto if1778_end3194
  if1778_else3193:
    null $P5042
    set $P5043, $P5042
  if1778_end3194:
    unless_null $P5043, vivi_17793195
    new $P5044, 'Hash'
    set pkg_viv_tmp_123["%REG"], $P5044
    set $P5043, $P5044
  vivi_17793195:
    unless_null $P5043, vivi_17803196
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_17803196:
    set $P5038, $P5043
  fallback3192:
    set fb_tmp_550, $P5038
    repr_defined $I5006, fb_tmp_550
    unless $I5006 goto if1777_else3190 
    set $P5046, fb_tmp_550["eos"]
    set $P5048, $P5046
    goto if1777_end3191
  if1777_else3190:
    null $P5047
    set $P5048, $P5047
  if1777_end3191:
    unless_null $P5048, vivi_17813197
    nqp_get_sc_object $P5049, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5048, $P5049
  vivi_17813197:
    find_dynamic_lex $P5050, "%*REG"
    unless_null $P5050, fallback3200
    nqp_get_sc_object $P5052, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5051, $P5052
    set pkg_viv_tmp_124, $P5051
    set fb_tmp_553, pkg_viv_tmp_124
    repr_defined $I5009, fb_tmp_553
    unless $I5009 goto if1783_else3201 
    set $P5053, fb_tmp_553["%REG"]
    set $P5055, $P5053
    goto if1783_end3202
  if1783_else3201:
    null $P5054
    set $P5055, $P5054
  if1783_end3202:
    unless_null $P5055, vivi_17843203
    new $P5056, 'Hash'
    set pkg_viv_tmp_124["%REG"], $P5056
    set $P5055, $P5056
  vivi_17843203:
    unless_null $P5055, vivi_17853204
    die "Contextual %*REG not found"
    box $P5057, "Contextual %*REG not found"
    set $P5055, $P5057
  vivi_17853204:
    set $P5050, $P5055
  fallback3200:
    set fb_tmp_552, $P5050
    repr_defined $I5008, fb_tmp_552
    unless $I5008 goto if1782_else3198 
    set $P5058, fb_tmp_552["fail"]
    set $P5060, $P5058
    goto if1782_end3199
  if1782_else3198:
    null $P5059
    set $P5060, $P5059
  if1782_end3199:
    unless_null $P5060, vivi_17863205
    nqp_get_sc_object $P5061, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5060, $P5061
  vivi_17863205:
    $P101."push_pirop"("ge", $P5036, $P5048, $P5060)
.annotate 'line', 3956
    find_dynamic_lex $P5062, "%*REG"
    unless_null $P5062, fallback3208
    nqp_get_sc_object $P5064, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_125, $P5063
    set fb_tmp_555, pkg_viv_tmp_125
    repr_defined $I5011, fb_tmp_555
    unless $I5011 goto if1788_else3209 
    set $P5065, fb_tmp_555["%REG"]
    set $P5067, $P5065
    goto if1788_end3210
  if1788_else3209:
    null $P5066
    set $P5067, $P5066
  if1788_end3210:
    unless_null $P5067, vivi_17893211
    new $P5068, 'Hash'
    set pkg_viv_tmp_125["%REG"], $P5068
    set $P5067, $P5068
  vivi_17893211:
    unless_null $P5067, vivi_17903212
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_17903212:
    set $P5062, $P5067
  fallback3208:
    set fb_tmp_554, $P5062
    repr_defined $I5010, fb_tmp_554
    unless $I5010 goto if1787_else3206 
    set $P5070, fb_tmp_554["tgt"]
    set $P5072, $P5070
    goto if1787_end3207
  if1787_else3206:
    null $P5071
    set $P5072, $P5071
  if1787_end3207:
    unless_null $P5072, vivi_17913213
    nqp_get_sc_object $P5073, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5072, $P5073
  vivi_17913213:
    find_dynamic_lex $P5074, "%*REG"
    unless_null $P5074, fallback3216
    nqp_get_sc_object $P5076, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5075, $P5076
    set pkg_viv_tmp_126, $P5075
    set fb_tmp_557, pkg_viv_tmp_126
    repr_defined $I5013, fb_tmp_557
    unless $I5013 goto if1793_else3217 
    set $P5077, fb_tmp_557["%REG"]
    set $P5079, $P5077
    goto if1793_end3218
  if1793_else3217:
    null $P5078
    set $P5079, $P5078
  if1793_end3218:
    unless_null $P5079, vivi_17943219
    new $P5080, 'Hash'
    set pkg_viv_tmp_126["%REG"], $P5080
    set $P5079, $P5080
  vivi_17943219:
    unless_null $P5079, vivi_17953220
    die "Contextual %*REG not found"
    box $P5081, "Contextual %*REG not found"
    set $P5079, $P5081
  vivi_17953220:
    set $P5074, $P5079
  fallback3216:
    set fb_tmp_556, $P5074
    repr_defined $I5012, fb_tmp_556
    unless $I5012 goto if1792_else3214 
    set $P5082, fb_tmp_556["pos"]
    set $P5084, $P5082
    goto if1792_end3215
  if1792_else3214:
    null $P5083
    set $P5084, $P5083
  if1792_end3215:
    unless_null $P5084, vivi_17963221
    nqp_get_sc_object $P5085, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5084, $P5085
  vivi_17963221:
    $P101."push_pirop"("substr", "$S11", $P5072, $P5084, 1)
.annotate 'line', 3957
    $P101."push_pirop"("index", "$I11", $P102, "$S11")
.annotate 'line', 3958
    find_dynamic_lex $P5086, "%*REG"
    unless_null $P5086, fallback3224
    nqp_get_sc_object $P5088, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5087, $P5088
    set pkg_viv_tmp_127, $P5087
    set fb_tmp_559, pkg_viv_tmp_127
    repr_defined $I5015, fb_tmp_559
    unless $I5015 goto if1798_else3225 
    set $P5089, fb_tmp_559["%REG"]
    set $P5091, $P5089
    goto if1798_end3226
  if1798_else3225:
    null $P5090
    set $P5091, $P5090
  if1798_end3226:
    unless_null $P5091, vivi_17993227
    new $P5092, 'Hash'
    set pkg_viv_tmp_127["%REG"], $P5092
    set $P5091, $P5092
  vivi_17993227:
    unless_null $P5091, vivi_18003228
    die "Contextual %*REG not found"
    box $P5093, "Contextual %*REG not found"
    set $P5091, $P5093
  vivi_18003228:
    set $P5086, $P5091
  fallback3224:
    set fb_tmp_558, $P5086
    repr_defined $I5014, fb_tmp_558
    unless $I5014 goto if1797_else3222 
    set $P5094, fb_tmp_558["fail"]
    set $P5096, $P5094
    goto if1797_end3223
  if1797_else3222:
    null $P5095
    set $P5096, $P5095
  if1797_end3223:
    unless_null $P5096, vivi_18013229
    nqp_get_sc_object $P5097, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5096, $P5097
  vivi_18013229:
    $P101."push_pirop"($P103, "$I11", 0, $P5096)
.annotate 'line', 3959
    $P5098 = _lex_param_1."subtype"()
    set $S5002, $P5098
    iseq $I5016, $S5002, "zerowidth"
    if $I5016 goto unless1802_end3231 
    find_dynamic_lex $P5099, "%*REG"
    unless_null $P5099, fallback3234
    nqp_get_sc_object $P5101, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5100, $P5101
    set pkg_viv_tmp_128, $P5100
    set fb_tmp_561, pkg_viv_tmp_128
    repr_defined $I5018, fb_tmp_561
    unless $I5018 goto if1804_else3235 
    set $P5102, fb_tmp_561["%REG"]
    set $P5104, $P5102
    goto if1804_end3236
  if1804_else3235:
    null $P5103
    set $P5104, $P5103
  if1804_end3236:
    unless_null $P5104, vivi_18053237
    new $P5105, 'Hash'
    set pkg_viv_tmp_128["%REG"], $P5105
    set $P5104, $P5105
  vivi_18053237:
    unless_null $P5104, vivi_18063238
    die "Contextual %*REG not found"
    box $P5106, "Contextual %*REG not found"
    set $P5104, $P5106
  vivi_18063238:
    set $P5099, $P5104
  fallback3234:
    set fb_tmp_560, $P5099
    repr_defined $I5017, fb_tmp_560
    unless $I5017 goto if1803_else3232 
    set $P5107, fb_tmp_560["pos"]
    set $P5109, $P5107
    goto if1803_end3233
  if1803_else3232:
    null $P5108
    set $P5109, $P5108
  if1803_end3233:
    unless_null $P5109, vivi_18073239
    nqp_get_sc_object $P5110, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5109, $P5110
  vivi_18073239:
    $P5111 = $P101."push_pirop"("inc", $P5109)
  unless1802_end3231:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "literal" :subid("cuid_130_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3963
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$litconst", $P102 
    .lex "$litlen", $P103 
    .lex "$litpost", $P104 
    .lex "$cmpop", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc pkg_viv_tmp_129 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc pkg_viv_tmp_130 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc pkg_viv_tmp_131 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    .local pmc pkg_viv_tmp_132 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    .local pmc pkg_viv_tmp_133 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc pkg_viv_tmp_134 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    .local pmc pkg_viv_tmp_135 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
.annotate 'line', 3964
    nqp_decontainerize $P5006, _lex_param_0
    $P5007 = $P5006."post_new"("Ops")
    set $P101, $P5007
    set fb_tmp_562, _lex_param_1
    repr_defined $I5001, fb_tmp_562
    unless $I5001 goto if1808_else3240 
    set $P5008, fb_tmp_562[0]
    set $P5010, $P5008
    goto if1808_end3241
  if1808_else3240:
    null $P5009
    set $P5010, $P5009
  if1808_end3241:
    unless_null $P5010, vivi_18093242
    nqp_get_sc_object $P5011, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5010, $P5011
  vivi_18093242:
    set $P102, $P5010
.annotate 'line', 3967
    $P5012 = _lex_param_1."subtype"()
    set $S5001, $P5012
    iseq $I5002, $S5001, "ignorecase"
    unless $I5002 goto if1810_end3244 
    set $S5003, $P102
    downcase $S5002, $S5003
    box $P5013, $S5002
    set $P102, $P5013
  if1810_end3244:
    set $S5004, $P102
    length $I5003, $S5004
    box $P5014, $I5003
    set $P103, $P5014
.annotate 'line', 3969
    nqp_decontainerize $P5015, _lex_param_0
    $P5016 = $P5015."rxescape"($P102)
    set $P104, $P5016
.annotate 'line', 3970
    $P5017 = _lex_param_1."negate"()
    unless $P5017 goto if1811_else3245 
    set $S5005, "eq"
    goto if1811_end3246
  if1811_else3245:
    set $S5005, "ne"
  if1811_end3246:
    box $P5018, $S5005
    set $P105, $P5018
.annotate 'line', 3971
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback3249
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_129, $P5020
    set fb_tmp_564, pkg_viv_tmp_129
    repr_defined $I5005, fb_tmp_564
    unless $I5005 goto if1813_else3250 
    set $P5022, fb_tmp_564["%REG"]
    set $P5024, $P5022
    goto if1813_end3251
  if1813_else3250:
    null $P5023
    set $P5024, $P5023
  if1813_end3251:
    unless_null $P5024, vivi_18143252
    new $P5025, 'Hash'
    set pkg_viv_tmp_129["%REG"], $P5025
    set $P5024, $P5025
  vivi_18143252:
    unless_null $P5024, vivi_18153253
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_18153253:
    set $P5019, $P5024
  fallback3249:
    set fb_tmp_563, $P5019
    repr_defined $I5004, fb_tmp_563
    unless $I5004 goto if1812_else3247 
    set $P5027, fb_tmp_563["pos"]
    set $P5029, $P5027
    goto if1812_end3248
  if1812_else3247:
    null $P5028
    set $P5029, $P5028
  if1812_end3248:
    unless_null $P5029, vivi_18163254
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_18163254:
    $P101."push_pirop"("add", "$I11", $P5029, $P103)
.annotate 'line', 3972
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback3257
    nqp_get_sc_object $P5033, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_130, $P5032
    set fb_tmp_566, pkg_viv_tmp_130
    repr_defined $I5007, fb_tmp_566
    unless $I5007 goto if1818_else3258 
    set $P5034, fb_tmp_566["%REG"]
    set $P5036, $P5034
    goto if1818_end3259
  if1818_else3258:
    null $P5035
    set $P5036, $P5035
  if1818_end3259:
    unless_null $P5036, vivi_18193260
    new $P5037, 'Hash'
    set pkg_viv_tmp_130["%REG"], $P5037
    set $P5036, $P5037
  vivi_18193260:
    unless_null $P5036, vivi_18203261
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_18203261:
    set $P5031, $P5036
  fallback3257:
    set fb_tmp_565, $P5031
    repr_defined $I5006, fb_tmp_565
    unless $I5006 goto if1817_else3255 
    set $P5039, fb_tmp_565["eos"]
    set $P5041, $P5039
    goto if1817_end3256
  if1817_else3255:
    null $P5040
    set $P5041, $P5040
  if1817_end3256:
    unless_null $P5041, vivi_18213262
    nqp_get_sc_object $P5042, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5041, $P5042
  vivi_18213262:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback3265
    nqp_get_sc_object $P5045, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_131, $P5044
    set fb_tmp_568, pkg_viv_tmp_131
    repr_defined $I5009, fb_tmp_568
    unless $I5009 goto if1823_else3266 
    set $P5046, fb_tmp_568["%REG"]
    set $P5048, $P5046
    goto if1823_end3267
  if1823_else3266:
    null $P5047
    set $P5048, $P5047
  if1823_end3267:
    unless_null $P5048, vivi_18243268
    new $P5049, 'Hash'
    set pkg_viv_tmp_131["%REG"], $P5049
    set $P5048, $P5049
  vivi_18243268:
    unless_null $P5048, vivi_18253269
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_18253269:
    set $P5043, $P5048
  fallback3265:
    set fb_tmp_567, $P5043
    repr_defined $I5008, fb_tmp_567
    unless $I5008 goto if1822_else3263 
    set $P5051, fb_tmp_567["fail"]
    set $P5053, $P5051
    goto if1822_end3264
  if1822_else3263:
    null $P5052
    set $P5053, $P5052
  if1822_end3264:
    unless_null $P5053, vivi_18263270
    nqp_get_sc_object $P5054, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5053, $P5054
  vivi_18263270:
    $P101."push_pirop"("gt", "$I11", $P5041, $P5053)
.annotate 'line', 3973
    find_dynamic_lex $P5055, "%*REG"
    unless_null $P5055, fallback3273
    nqp_get_sc_object $P5057, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_132, $P5056
    set fb_tmp_570, pkg_viv_tmp_132
    repr_defined $I5011, fb_tmp_570
    unless $I5011 goto if1828_else3274 
    set $P5058, fb_tmp_570["%REG"]
    set $P5060, $P5058
    goto if1828_end3275
  if1828_else3274:
    null $P5059
    set $P5060, $P5059
  if1828_end3275:
    unless_null $P5060, vivi_18293276
    new $P5061, 'Hash'
    set pkg_viv_tmp_132["%REG"], $P5061
    set $P5060, $P5061
  vivi_18293276:
    unless_null $P5060, vivi_18303277
    die "Contextual %*REG not found"
    box $P5062, "Contextual %*REG not found"
    set $P5060, $P5062
  vivi_18303277:
    set $P5055, $P5060
  fallback3273:
    set fb_tmp_569, $P5055
    repr_defined $I5010, fb_tmp_569
    unless $I5010 goto if1827_else3271 
    set $P5063, fb_tmp_569["tgt"]
    set $P5065, $P5063
    goto if1827_end3272
  if1827_else3271:
    null $P5064
    set $P5065, $P5064
  if1827_end3272:
    unless_null $P5065, vivi_18313278
    nqp_get_sc_object $P5066, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5065, $P5066
  vivi_18313278:
    find_dynamic_lex $P5067, "%*REG"
    unless_null $P5067, fallback3281
    nqp_get_sc_object $P5069, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5068, $P5069
    set pkg_viv_tmp_133, $P5068
    set fb_tmp_572, pkg_viv_tmp_133
    repr_defined $I5013, fb_tmp_572
    unless $I5013 goto if1833_else3282 
    set $P5070, fb_tmp_572["%REG"]
    set $P5072, $P5070
    goto if1833_end3283
  if1833_else3282:
    null $P5071
    set $P5072, $P5071
  if1833_end3283:
    unless_null $P5072, vivi_18343284
    new $P5073, 'Hash'
    set pkg_viv_tmp_133["%REG"], $P5073
    set $P5072, $P5073
  vivi_18343284:
    unless_null $P5072, vivi_18353285
    die "Contextual %*REG not found"
    box $P5074, "Contextual %*REG not found"
    set $P5072, $P5074
  vivi_18353285:
    set $P5067, $P5072
  fallback3281:
    set fb_tmp_571, $P5067
    repr_defined $I5012, fb_tmp_571
    unless $I5012 goto if1832_else3279 
    set $P5075, fb_tmp_571["pos"]
    set $P5077, $P5075
    goto if1832_end3280
  if1832_else3279:
    null $P5076
    set $P5077, $P5076
  if1832_end3280:
    unless_null $P5077, vivi_18363286
    nqp_get_sc_object $P5078, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5077, $P5078
  vivi_18363286:
    $P101."push_pirop"("substr", "$S10", $P5065, $P5077, $P103)
.annotate 'line', 3975
    $P5079 = _lex_param_1."subtype"()
    set $S5006, $P5079
    iseq $I5014, $S5006, "ignorecase"
    unless $I5014 goto if1837_end3288 
.annotate 'line', 3974
    $P5080 = $P101."push_pirop"("downcase", "$S10", "$S10")
  if1837_end3288:
.annotate 'line', 3976
    find_dynamic_lex $P5081, "%*REG"
    unless_null $P5081, fallback3291
    nqp_get_sc_object $P5083, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5082, $P5083
    set pkg_viv_tmp_134, $P5082
    set fb_tmp_574, pkg_viv_tmp_134
    repr_defined $I5016, fb_tmp_574
    unless $I5016 goto if1839_else3292 
    set $P5084, fb_tmp_574["%REG"]
    set $P5086, $P5084
    goto if1839_end3293
  if1839_else3292:
    null $P5085
    set $P5086, $P5085
  if1839_end3293:
    unless_null $P5086, vivi_18403294
    new $P5087, 'Hash'
    set pkg_viv_tmp_134["%REG"], $P5087
    set $P5086, $P5087
  vivi_18403294:
    unless_null $P5086, vivi_18413295
    die "Contextual %*REG not found"
    box $P5088, "Contextual %*REG not found"
    set $P5086, $P5088
  vivi_18413295:
    set $P5081, $P5086
  fallback3291:
    set fb_tmp_573, $P5081
    repr_defined $I5015, fb_tmp_573
    unless $I5015 goto if1838_else3289 
    set $P5089, fb_tmp_573["fail"]
    set $P5091, $P5089
    goto if1838_end3290
  if1838_else3289:
    null $P5090
    set $P5091, $P5090
  if1838_end3290:
    unless_null $P5091, vivi_18423296
    nqp_get_sc_object $P5092, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5091, $P5092
  vivi_18423296:
    $P101."push_pirop"($P105, "$S10", $P104, $P5091)
.annotate 'line', 3977
    find_dynamic_lex $P5093, "%*REG"
    unless_null $P5093, fallback3299
    nqp_get_sc_object $P5095, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5094, $P5095
    set pkg_viv_tmp_135, $P5094
    set fb_tmp_576, pkg_viv_tmp_135
    repr_defined $I5018, fb_tmp_576
    unless $I5018 goto if1844_else3300 
    set $P5096, fb_tmp_576["%REG"]
    set $P5098, $P5096
    goto if1844_end3301
  if1844_else3300:
    null $P5097
    set $P5098, $P5097
  if1844_end3301:
    unless_null $P5098, vivi_18453302
    new $P5099, 'Hash'
    set pkg_viv_tmp_135["%REG"], $P5099
    set $P5098, $P5099
  vivi_18453302:
    unless_null $P5098, vivi_18463303
    die "Contextual %*REG not found"
    box $P5100, "Contextual %*REG not found"
    set $P5098, $P5100
  vivi_18463303:
    set $P5093, $P5098
  fallback3299:
    set fb_tmp_575, $P5093
    repr_defined $I5017, fb_tmp_575
    unless $I5017 goto if1843_else3297 
    set $P5101, fb_tmp_575["pos"]
    set $P5103, $P5101
    goto if1843_end3298
  if1843_else3297:
    null $P5102
    set $P5103, $P5102
  if1843_end3298:
    unless_null $P5103, vivi_18473304
    nqp_get_sc_object $P5104, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5103, $P5104
  vivi_18473304:
    $P101."push_pirop"("add", $P5103, $P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pass" :subid("cuid_131_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3981
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5064 = 'cuid_378_1368096764.976' 
    capture_lex $P5064 
    .const 'Sub' $P5064 = 'cuid_379_1368096764.976' 
    capture_lex $P5064 
    .lex "$ops", $P101 
    .lex "@backtrack", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc pkg_viv_tmp_136 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc pkg_viv_tmp_141 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc pkg_viv_tmp_142 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc pkg_viv_tmp_143 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
.annotate 'line', 3982
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3307
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_136, $P5005
    set fb_tmp_578, pkg_viv_tmp_136
    repr_defined $I5002, fb_tmp_578
    unless $I5002 goto if1849_else3308 
    set $P5007, fb_tmp_578["%REG"]
    set $P5009, $P5007
    goto if1849_end3309
  if1849_else3308:
    null $P5008
    set $P5009, $P5008
  if1849_end3309:
    unless_null $P5009, vivi_18503310
    new $P5010, 'Hash'
    set pkg_viv_tmp_136["%REG"], $P5010
    set $P5009, $P5010
  vivi_18503310:
    unless_null $P5009, vivi_18513311
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_18513311:
    set $P5004, $P5009
  fallback3307:
    set fb_tmp_577, $P5004
    repr_defined $I5001, fb_tmp_577
    unless $I5001 goto if1848_else3305 
    set $P5012, fb_tmp_577["cur"]
    set $P5014, $P5012
    goto if1848_end3306
  if1848_else3305:
    null $P5013
    set $P5014, $P5013
  if1848_end3306:
    unless_null $P5014, vivi_18523312
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_18523312:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 3984
    $P5017 = _lex_param_1."backtrack"()
    set $S5001, $P5017
    isne $I5003, $S5001, "r"
    unless $I5003 goto if1853_end3314 
    new $P5018, 'ResizablePMCArray'
    box $P5019, "'backtrack'=>1"
    push $P5018, $P5019
    set $P102, $P5018
  if1853_end3314:
.annotate 'line', 3985
    $P5020 = _lex_param_1."name"()
    unless $P5020 goto if1854_else3315 
    .const 'Sub' $P5021 = 'cuid_378_1368096764.976' 
    capture_lex $P5021
    $P5022 = $P5021()
    goto if1854_end3316
  if1854_else3315:
    $P5023 = _lex_param_1."list"()
    set $N5001, $P5023
    set $N5002, 1
    iseq $I5004, $N5001, $N5002
    unless $I5004 goto if1865_else3333 
    .const 'Sub' $P5024 = 'cuid_379_1368096764.976' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5051, $P5025
    goto if1865_end3334
  if1865_else3333:
.annotate 'line', 3994
.annotate 'line', 3995
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3356
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_141, $P5027
    set fb_tmp_589, pkg_viv_tmp_141
    repr_defined $I5006, fb_tmp_589
    unless $I5006 goto if1879_else3357 
    set $P5029, fb_tmp_589["%REG"]
    set $P5031, $P5029
    goto if1879_end3358
  if1879_else3357:
    null $P5030
    set $P5031, $P5030
  if1879_end3358:
    unless_null $P5031, vivi_18803359
    new $P5032, 'Hash'
    set pkg_viv_tmp_141["%REG"], $P5032
    set $P5031, $P5032
  vivi_18803359:
    unless_null $P5031, vivi_18813360
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_18813360:
    set $P5026, $P5031
  fallback3356:
    set fb_tmp_588, $P5026
    repr_defined $I5005, fb_tmp_588
    unless $I5005 goto if1878_else3354 
    set $P5034, fb_tmp_588["cur"]
    set $P5036, $P5034
    goto if1878_end3355
  if1878_else3354:
    null $P5035
    set $P5036, $P5035
  if1878_end3355:
    unless_null $P5036, vivi_18823361
    nqp_get_sc_object $P5037, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5036, $P5037
  vivi_18823361:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3364
    nqp_get_sc_object $P5040, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_142, $P5039
    set fb_tmp_591, pkg_viv_tmp_142
    repr_defined $I5008, fb_tmp_591
    unless $I5008 goto if1884_else3365 
    set $P5041, fb_tmp_591["%REG"]
    set $P5043, $P5041
    goto if1884_end3366
  if1884_else3365:
    null $P5042
    set $P5043, $P5042
  if1884_end3366:
    unless_null $P5043, vivi_18853367
    new $P5044, 'Hash'
    set pkg_viv_tmp_142["%REG"], $P5044
    set $P5043, $P5044
  vivi_18853367:
    unless_null $P5043, vivi_18863368
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_18863368:
    set $P5038, $P5043
  fallback3364:
    set fb_tmp_590, $P5038
    repr_defined $I5007, fb_tmp_590
    unless $I5007 goto if1883_else3362 
    set $P5046, fb_tmp_590["pos"]
    set $P5048, $P5046
    goto if1883_end3363
  if1883_else3362:
    null $P5047
    set $P5048, $P5047
  if1883_end3363:
    unless_null $P5048, vivi_18873369
    nqp_get_sc_object $P5049, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5048, $P5049
  vivi_18873369:
    $P5050 = $P101."push_pirop"("callmethod", "\"!cursor_pass\"", $P5036, $P5048, $P102 :flat)
    set $P5051, $P5050
  if1865_end3334:
  if1854_end3316:
.annotate 'line', 3997
    find_dynamic_lex $P5052, "%*REG"
    unless_null $P5052, fallback3372
    nqp_get_sc_object $P5054, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5053, $P5054
    set pkg_viv_tmp_143, $P5053
    set fb_tmp_593, pkg_viv_tmp_143
    repr_defined $I5010, fb_tmp_593
    unless $I5010 goto if1889_else3373 
    set $P5055, fb_tmp_593["%REG"]
    set $P5057, $P5055
    goto if1889_end3374
  if1889_else3373:
    null $P5056
    set $P5057, $P5056
  if1889_end3374:
    unless_null $P5057, vivi_18903375
    new $P5058, 'Hash'
    set pkg_viv_tmp_143["%REG"], $P5058
    set $P5057, $P5058
  vivi_18903375:
    unless_null $P5057, vivi_18913376
    die "Contextual %*REG not found"
    box $P5059, "Contextual %*REG not found"
    set $P5057, $P5059
  vivi_18913376:
    set $P5052, $P5057
  fallback3372:
    set fb_tmp_592, $P5052
    repr_defined $I5009, fb_tmp_592
    unless $I5009 goto if1888_else3370 
    set $P5060, fb_tmp_592["cur"]
    set $P5062, $P5060
    goto if1888_end3371
  if1888_else3370:
    null $P5061
    set $P5062, $P5061
  if1888_end3371:
    unless_null $P5062, vivi_18923377
    nqp_get_sc_object $P5063, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5062, $P5063
  vivi_18923377:
    $P101."push_pirop"("return", $P5062)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1368096764.976") :anon :lex :outer("cuid_131_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3985
    .lex "$name", $P101 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc pkg_viv_tmp_137 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc pkg_viv_tmp_138 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3986
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."escape"($P5005)
    set $P101, $P5006
.annotate 'line', 3987
    find_lex $P5007, "$ops"
    find_dynamic_lex $P5008, "%*REG"
    unless_null $P5008, fallback3319
    nqp_get_sc_object $P5010, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_137, $P5009
    set fb_tmp_580, pkg_viv_tmp_137
    repr_defined $I5002, fb_tmp_580
    unless $I5002 goto if1856_else3320 
    set $P5011, fb_tmp_580["%REG"]
    set $P5013, $P5011
    goto if1856_end3321
  if1856_else3320:
    null $P5012
    set $P5013, $P5012
  if1856_end3321:
    unless_null $P5013, vivi_18573322
    new $P5014, 'Hash'
    set pkg_viv_tmp_137["%REG"], $P5014
    set $P5013, $P5014
  vivi_18573322:
    unless_null $P5013, vivi_18583323
    die "Contextual %*REG not found"
    box $P5015, "Contextual %*REG not found"
    set $P5013, $P5015
  vivi_18583323:
    set $P5008, $P5013
  fallback3319:
    set fb_tmp_579, $P5008
    repr_defined $I5001, fb_tmp_579
    unless $I5001 goto if1855_else3317 
    set $P5016, fb_tmp_579["cur"]
    set $P5018, $P5016
    goto if1855_end3318
  if1855_else3317:
    null $P5017
    set $P5018, $P5017
  if1855_end3318:
    unless_null $P5018, vivi_18593324
    nqp_get_sc_object $P5019, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5018, $P5019
  vivi_18593324:
    find_dynamic_lex $P5020, "%*REG"
    unless_null $P5020, fallback3327
    nqp_get_sc_object $P5022, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_138, $P5021
    set fb_tmp_582, pkg_viv_tmp_138
    repr_defined $I5004, fb_tmp_582
    unless $I5004 goto if1861_else3328 
    set $P5023, fb_tmp_582["%REG"]
    set $P5025, $P5023
    goto if1861_end3329
  if1861_else3328:
    null $P5024
    set $P5025, $P5024
  if1861_end3329:
    unless_null $P5025, vivi_18623330
    new $P5026, 'Hash'
    set pkg_viv_tmp_138["%REG"], $P5026
    set $P5025, $P5026
  vivi_18623330:
    unless_null $P5025, vivi_18633331
    die "Contextual %*REG not found"
    box $P5027, "Contextual %*REG not found"
    set $P5025, $P5027
  vivi_18633331:
    set $P5020, $P5025
  fallback3327:
    set fb_tmp_581, $P5020
    repr_defined $I5003, fb_tmp_581
    unless $I5003 goto if1860_else3325 
    set $P5028, fb_tmp_581["pos"]
    set $P5030, $P5028
    goto if1860_end3326
  if1860_else3325:
    null $P5029
    set $P5030, $P5029
  if1860_end3326:
    unless_null $P5030, vivi_18643332
    nqp_get_sc_object $P5031, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5030, $P5031
  vivi_18643332:
    find_lex $P5032, "@backtrack"
    $P5033 = $P5007."push_pirop"("callmethod", "\"!cursor_pass\"", $P5018, $P5030, $P101, $P5032 :flat)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1368096764.976") :anon :lex :outer("cuid_131_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3989
    .lex "$dynname", $P101 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc pkg_viv_tmp_139 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc pkg_viv_tmp_140 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 3990
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    find_lex $P5006, "$node"
    set fb_tmp_583, $P5006
    repr_defined $I5001, fb_tmp_583
    unless $I5001 goto if1866_else3335 
    set $P5007, fb_tmp_583[0]
    set $P5009, $P5007
    goto if1866_end3336
  if1866_else3335:
    null $P5008
    set $P5009, $P5008
  if1866_end3336:
    unless_null $P5009, vivi_18673337
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5009, $P5010
  vivi_18673337:
    $P5011 = $P5004."as_post"($P5009)
    $P5012 = $P5002."coerce"($P5011, "S")
    set $P101, $P5012
.annotate 'line', 3991
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3992
    find_lex $P5014, "$ops"
    find_dynamic_lex $P5015, "%*REG"
    unless_null $P5015, fallback3340
    nqp_get_sc_object $P5017, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5016, $P5017
    set pkg_viv_tmp_139, $P5016
    set fb_tmp_585, pkg_viv_tmp_139
    repr_defined $I5003, fb_tmp_585
    unless $I5003 goto if1869_else3341 
    set $P5018, fb_tmp_585["%REG"]
    set $P5020, $P5018
    goto if1869_end3342
  if1869_else3341:
    null $P5019
    set $P5020, $P5019
  if1869_end3342:
    unless_null $P5020, vivi_18703343
    new $P5021, 'Hash'
    set pkg_viv_tmp_139["%REG"], $P5021
    set $P5020, $P5021
  vivi_18703343:
    unless_null $P5020, vivi_18713344
    die "Contextual %*REG not found"
    box $P5022, "Contextual %*REG not found"
    set $P5020, $P5022
  vivi_18713344:
    set $P5015, $P5020
  fallback3340:
    set fb_tmp_584, $P5015
    repr_defined $I5002, fb_tmp_584
    unless $I5002 goto if1868_else3338 
    set $P5023, fb_tmp_584["cur"]
    set $P5025, $P5023
    goto if1868_end3339
  if1868_else3338:
    null $P5024
    set $P5025, $P5024
  if1868_end3339:
    unless_null $P5025, vivi_18723345
    nqp_get_sc_object $P5026, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5025, $P5026
  vivi_18723345:
    find_dynamic_lex $P5027, "%*REG"
    unless_null $P5027, fallback3348
    nqp_get_sc_object $P5029, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5028, $P5029
    set pkg_viv_tmp_140, $P5028
    set fb_tmp_587, pkg_viv_tmp_140
    repr_defined $I5005, fb_tmp_587
    unless $I5005 goto if1874_else3349 
    set $P5030, fb_tmp_587["%REG"]
    set $P5032, $P5030
    goto if1874_end3350
  if1874_else3349:
    null $P5031
    set $P5032, $P5031
  if1874_end3350:
    unless_null $P5032, vivi_18753351
    new $P5033, 'Hash'
    set pkg_viv_tmp_140["%REG"], $P5033
    set $P5032, $P5033
  vivi_18753351:
    unless_null $P5032, vivi_18763352
    die "Contextual %*REG not found"
    box $P5034, "Contextual %*REG not found"
    set $P5032, $P5034
  vivi_18763352:
    set $P5027, $P5032
  fallback3348:
    set fb_tmp_586, $P5027
    repr_defined $I5004, fb_tmp_586
    unless $I5004 goto if1873_else3346 
    set $P5035, fb_tmp_586["pos"]
    set $P5037, $P5035
    goto if1873_end3347
  if1873_else3346:
    null $P5036
    set $P5037, $P5036
  if1873_end3347:
    unless_null $P5037, vivi_18773353
    nqp_get_sc_object $P5038, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5037, $P5038
  vivi_18773353:
    find_lex $P5039, "@backtrack"
    $P5040 = $P5014."push_pirop"("callmethod", "\"!cursor_pass\"", $P5025, $P5037, $P101, $P5039 :flat)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "qastnode" :subid("cuid_132_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4001
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$cpost", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc pkg_viv_tmp_144 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc pkg_viv_tmp_145 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc pkg_viv_tmp_146 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
    .local pmc pkg_viv_tmp_147 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
    .local pmc pkg_viv_tmp_148 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc pkg_viv_tmp_149 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 4002
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3380
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_144, $P5005
    set fb_tmp_595, pkg_viv_tmp_144
    repr_defined $I5002, fb_tmp_595
    unless $I5002 goto if1894_else3381 
    set $P5007, fb_tmp_595["%REG"]
    set $P5009, $P5007
    goto if1894_end3382
  if1894_else3381:
    null $P5008
    set $P5009, $P5008
  if1894_end3382:
    unless_null $P5009, vivi_18953383
    new $P5010, 'Hash'
    set pkg_viv_tmp_144["%REG"], $P5010
    set $P5009, $P5010
  vivi_18953383:
    unless_null $P5009, vivi_18963384
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_18963384:
    set $P5004, $P5009
  fallback3380:
    set fb_tmp_594, $P5004
    repr_defined $I5001, fb_tmp_594
    unless $I5001 goto if1893_else3378 
    set $P5012, fb_tmp_594["cur"]
    set $P5014, $P5012
    goto if1893_end3379
  if1893_else3378:
    null $P5013
    set $P5014, $P5013
  if1893_end3379:
    unless_null $P5014, vivi_18973385
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_18973385:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 4003
    find_dynamic_lex $P5017, "%*REG"
    unless_null $P5017, fallback3388
    nqp_get_sc_object $P5019, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_145, $P5018
    set fb_tmp_597, pkg_viv_tmp_145
    repr_defined $I5004, fb_tmp_597
    unless $I5004 goto if1899_else3389 
    set $P5020, fb_tmp_597["%REG"]
    set $P5022, $P5020
    goto if1899_end3390
  if1899_else3389:
    null $P5021
    set $P5022, $P5021
  if1899_end3390:
    unless_null $P5022, vivi_19003391
    new $P5023, 'Hash'
    set pkg_viv_tmp_145["%REG"], $P5023
    set $P5022, $P5023
  vivi_19003391:
    unless_null $P5022, vivi_19013392
    die "Contextual %*REG not found"
    box $P5024, "Contextual %*REG not found"
    set $P5022, $P5024
  vivi_19013392:
    set $P5017, $P5022
  fallback3388:
    set fb_tmp_596, $P5017
    repr_defined $I5003, fb_tmp_596
    unless $I5003 goto if1898_else3386 
    set $P5025, fb_tmp_596["cur"]
    set $P5027, $P5025
    goto if1898_end3387
  if1898_else3386:
    null $P5026
    set $P5027, $P5026
  if1898_end3387:
    unless_null $P5027, vivi_19023393
    nqp_get_sc_object $P5028, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5027, $P5028
  vivi_19023393:
    find_dynamic_lex $P5029, "%*REG"
    unless_null $P5029, fallback3396
    nqp_get_sc_object $P5031, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_146, $P5030
    set fb_tmp_599, pkg_viv_tmp_146
    repr_defined $I5006, fb_tmp_599
    unless $I5006 goto if1904_else3397 
    set $P5032, fb_tmp_599["%REG"]
    set $P5034, $P5032
    goto if1904_end3398
  if1904_else3397:
    null $P5033
    set $P5034, $P5033
  if1904_end3398:
    unless_null $P5034, vivi_19053399
    new $P5035, 'Hash'
    set pkg_viv_tmp_146["%REG"], $P5035
    set $P5034, $P5035
  vivi_19053399:
    unless_null $P5034, vivi_19063400
    die "Contextual %*REG not found"
    box $P5036, "Contextual %*REG not found"
    set $P5034, $P5036
  vivi_19063400:
    set $P5029, $P5034
  fallback3396:
    set fb_tmp_598, $P5029
    repr_defined $I5005, fb_tmp_598
    unless $I5005 goto if1903_else3394 
    set $P5037, fb_tmp_598["curclass"]
    set $P5039, $P5037
    goto if1903_end3395
  if1903_else3394:
    null $P5038
    set $P5039, $P5038
  if1903_end3395:
    unless_null $P5039, vivi_19073401
    nqp_get_sc_object $P5040, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5039, $P5040
  vivi_19073401:
    find_dynamic_lex $P5041, "%*REG"
    unless_null $P5041, fallback3404
    nqp_get_sc_object $P5043, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_147, $P5042
    set fb_tmp_601, pkg_viv_tmp_147
    repr_defined $I5008, fb_tmp_601
    unless $I5008 goto if1909_else3405 
    set $P5044, fb_tmp_601["%REG"]
    set $P5046, $P5044
    goto if1909_end3406
  if1909_else3405:
    null $P5045
    set $P5046, $P5045
  if1909_end3406:
    unless_null $P5046, vivi_19103407
    new $P5047, 'Hash'
    set pkg_viv_tmp_147["%REG"], $P5047
    set $P5046, $P5047
  vivi_19103407:
    unless_null $P5046, vivi_19113408
    die "Contextual %*REG not found"
    box $P5048, "Contextual %*REG not found"
    set $P5046, $P5048
  vivi_19113408:
    set $P5041, $P5046
  fallback3404:
    set fb_tmp_600, $P5041
    repr_defined $I5007, fb_tmp_600
    unless $I5007 goto if1908_else3402 
    set $P5049, fb_tmp_600["pos"]
    set $P5051, $P5049
    goto if1908_end3403
  if1908_else3402:
    null $P5050
    set $P5051, $P5050
  if1908_end3403:
    unless_null $P5051, vivi_19123409
    nqp_get_sc_object $P5052, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5051, $P5052
  vivi_19123409:
    $P101."push_pirop"("repr_bind_attr_int", $P5027, $P5039, "\"$!pos\"", $P5051)
.annotate 'line', 4004
    find_dynamic_lex $P5053, "%*REG"
    unless_null $P5053, fallback3412
    nqp_get_sc_object $P5055, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_148, $P5054
    set fb_tmp_603, pkg_viv_tmp_148
    repr_defined $I5010, fb_tmp_603
    unless $I5010 goto if1914_else3413 
    set $P5056, fb_tmp_603["%REG"]
    set $P5058, $P5056
    goto if1914_end3414
  if1914_else3413:
    null $P5057
    set $P5058, $P5057
  if1914_end3414:
    unless_null $P5058, vivi_19153415
    new $P5059, 'Hash'
    set pkg_viv_tmp_148["%REG"], $P5059
    set $P5058, $P5059
  vivi_19153415:
    unless_null $P5058, vivi_19163416
    die "Contextual %*REG not found"
    box $P5060, "Contextual %*REG not found"
    set $P5058, $P5060
  vivi_19163416:
    set $P5053, $P5058
  fallback3412:
    set fb_tmp_602, $P5053
    repr_defined $I5009, fb_tmp_602
    unless $I5009 goto if1913_else3410 
    set $P5061, fb_tmp_602["cur"]
    set $P5063, $P5061
    goto if1913_end3411
  if1913_else3410:
    null $P5062
    set $P5063, $P5062
  if1913_end3411:
    unless_null $P5063, vivi_19173417
    nqp_get_sc_object $P5064, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5063, $P5064
  vivi_19173417:
    $P101."push_pirop"("store_lex", utf8:"unicode:\"$\\x{a2}\"", $P5063)
.annotate 'line', 4005
    nqp_decontainerize $P5065, _lex_param_0
    nqp_decontainerize $P5066, _lex_param_0
    set fb_tmp_604, _lex_param_1
    repr_defined $I5011, fb_tmp_604
    unless $I5011 goto if1918_else3418 
    set $P5067, fb_tmp_604[0]
    set $P5069, $P5067
    goto if1918_end3419
  if1918_else3418:
    null $P5068
    set $P5069, $P5068
  if1918_end3419:
    unless_null $P5069, vivi_19193420
    nqp_get_sc_object $P5070, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5069, $P5070
  vivi_19193420:
    $P5071 = $P5066."as_post"($P5069)
    $P5072 = $P5065."coerce"($P5071, "P")
    set $P102, $P5072
.annotate 'line', 4006
    $P101."push"($P102)
.annotate 'line', 4007
    $P5073 = _lex_param_1."subtype"()
    set $S5001, $P5073
    iseq $I5012, $S5001, "zerowidth"
    unless $I5012 goto if1920_end3422 
.annotate 'line', 4008
    $P5074 = _lex_param_1."negate"()
    unless $P5074 goto if1921_else3423 
    set $S5002, "if"
    goto if1921_end3424
  if1921_else3423:
    set $S5002, "unless"
  if1921_end3424:
    find_dynamic_lex $P5075, "%*REG"
    unless_null $P5075, fallback3427
    nqp_get_sc_object $P5077, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5076, $P5077
    set pkg_viv_tmp_149, $P5076
    set fb_tmp_606, pkg_viv_tmp_149
    repr_defined $I5014, fb_tmp_606
    unless $I5014 goto if1923_else3428 
    set $P5078, fb_tmp_606["%REG"]
    set $P5080, $P5078
    goto if1923_end3429
  if1923_else3428:
    null $P5079
    set $P5080, $P5079
  if1923_end3429:
    unless_null $P5080, vivi_19243430
    new $P5081, 'Hash'
    set pkg_viv_tmp_149["%REG"], $P5081
    set $P5080, $P5081
  vivi_19243430:
    unless_null $P5080, vivi_19253431
    die "Contextual %*REG not found"
    box $P5082, "Contextual %*REG not found"
    set $P5080, $P5082
  vivi_19253431:
    set $P5075, $P5080
  fallback3427:
    set fb_tmp_605, $P5075
    repr_defined $I5013, fb_tmp_605
    unless $I5013 goto if1922_else3425 
    set $P5083, fb_tmp_605["fail"]
    set $P5085, $P5083
    goto if1922_end3426
  if1922_else3425:
    null $P5084
    set $P5085, $P5084
  if1922_end3426:
    unless_null $P5085, vivi_19263432
    nqp_get_sc_object $P5086, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5085, $P5086
  vivi_19263432:
    $P5087 = $P101."push_pirop"($S5002, $P102, $P5085)
  if1920_end3422:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "quant" :subid("cuid_133_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4013
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5170 = 'cuid_380_1368096764.976' 
    capture_lex $P5170 
    .lex "$ops", $P101 
    .lex "$backtrack", $P102 
    .lex "$sep", $P103 
    .lex "$prefix", $P104 
    .lex "$looplabel", $P105 
    .lex "$donelabel", $P106 
    .lex "$min", $P107 
    .lex "$max", $P108 
    .lex "$needrep", $P109 
    .lex "$needmark", $P110 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_607 
    .local pmc fb_tmp_608 
    .local pmc pkg_viv_tmp_150 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc pkg_viv_tmp_161 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc pkg_viv_tmp_162 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc pkg_viv_tmp_163 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc pkg_viv_tmp_164 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc pkg_viv_tmp_165 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc pkg_viv_tmp_166 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc pkg_viv_tmp_167 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc pkg_viv_tmp_168 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P110, $P5010
.annotate 'line', 4014
    nqp_decontainerize $P5011, _lex_param_0
    find_dynamic_lex $P5012, "%*REG"
    unless_null $P5012, fallback3435
    nqp_get_sc_object $P5014, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_150, $P5013
    set fb_tmp_608, pkg_viv_tmp_150
    repr_defined $I5002, fb_tmp_608
    unless $I5002 goto if1928_else3436 
    set $P5015, fb_tmp_608["%REG"]
    set $P5017, $P5015
    goto if1928_end3437
  if1928_else3436:
    null $P5016
    set $P5017, $P5016
  if1928_end3437:
    unless_null $P5017, vivi_19293438
    new $P5018, 'Hash'
    set pkg_viv_tmp_150["%REG"], $P5018
    set $P5017, $P5018
  vivi_19293438:
    unless_null $P5017, vivi_19303439
    die "Contextual %*REG not found"
    box $P5019, "Contextual %*REG not found"
    set $P5017, $P5019
  vivi_19303439:
    set $P5012, $P5017
  fallback3435:
    set fb_tmp_607, $P5012
    repr_defined $I5001, fb_tmp_607
    unless $I5001 goto if1927_else3433 
    set $P5020, fb_tmp_607["cur"]
    set $P5022, $P5020
    goto if1927_end3434
  if1927_else3433:
    null $P5021
    set $P5022, $P5021
  if1927_end3434:
    unless_null $P5022, vivi_19313440
    nqp_get_sc_object $P5023, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5022, $P5023
  vivi_19313440:
    $P5024 = $P5011."post_new"("Ops", $P5022 :named("result"))
    set $P101, $P5024
.annotate 'line', 4015
    $P5025 = _lex_param_1."backtrack"()
    set $P5026, $P5025
    if $P5025 goto unless1932_end3442 
    box $P5027, "g"
    set $P5026, $P5027
  unless1932_end3442:
    set $P102, $P5026
    set fb_tmp_609, _lex_param_1
    repr_defined $I5003, fb_tmp_609
    unless $I5003 goto if1933_else3443 
    set $P5028, fb_tmp_609[1]
    set $P5030, $P5028
    goto if1933_end3444
  if1933_else3443:
    null $P5029
    set $P5030, $P5029
  if1933_end3444:
    unless_null $P5030, vivi_19343445
    nqp_get_sc_object $P5031, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5030, $P5031
  vivi_19343445:
    set $P103, $P5030
.annotate 'line', 4017
    nqp_decontainerize $P5032, _lex_param_0
    set $S5002, $P102
    concat $S5001, "rxquant", $S5002
    $P5033 = $P5032."unique"($S5001)
    set $P104, $P5033
.annotate 'line', 4018
    nqp_decontainerize $P5034, _lex_param_0
    set $S5004, $P104
    concat $S5003, $S5004, "_loop"
    $P5035 = $P5034."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5035
.annotate 'line', 4019
    nqp_decontainerize $P5036, _lex_param_0
    set $S5006, $P104
    concat $S5005, $S5006, "_done"
    $P5037 = $P5036."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5037
.annotate 'line', 4020
    $P5038 = _lex_param_1."min"()
    set $P107, $P5038
.annotate 'line', 4021
    $P5039 = _lex_param_1."max"()
    set $P108, $P5039
    set $N5001, $P107
    set $N5002, 1
    isgt $I5004, $N5001, $N5002
    set $I5006, $I5004
    if $I5004 goto unless1935_end3447 
    set $N5003, $P108
    set $N5004, 1
    isgt $I5005, $N5003, $N5004
    set $I5006, $I5005
  unless1935_end3447:
    box $P5040, $I5006
    set $P109, $P5040
    set $P5041, $P109
    if $P109 goto unless1936_end3449 
    set $S5007, $P102
    iseq $I5007, $S5007, "r"
    box $P5042, $I5007
    set $P5041, $P5042
  unless1936_end3449:
    set $P110, $P5041
    set $N5005, $P107
    set $N5006, 0
    iseq $I5008, $N5005, $N5006
    set $I5010, $I5008
    unless $I5008 goto if1938_end3453 
    set $N5007, $P108
    set $N5008, 0
    iseq $I5009, $N5007, $N5008
    set $I5010, $I5009
  if1938_end3453:
    unless $I5010 goto if1937_else3450 
.annotate 'line', 4027
    nqp_get_sc_object $P5043, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    goto if1937_end3451
  if1937_else3450:
    set $S5008, $P102
    iseq $I5011, $S5008, "f"
    unless $I5011 goto if1939_else3454 
    .const 'Sub' $P5044 = 'cuid_380_1368096764.976' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5169, $P5045
    goto if1939_end3455
  if1939_else3454:
.annotate 'line', 4051
    set $N5009, $P107
    set $N5010, 0
    iseq $I5012, $N5009, $N5010
    unless $I5012 goto if1999_else3553 
.annotate 'line', 4052
    nqp_decontainerize $P5046, _lex_param_0
    find_dynamic_lex $P5047, "%*REG"
    unless_null $P5047, fallback3557
    nqp_get_sc_object $P5049, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5048, $P5049
    set pkg_viv_tmp_161, $P5048
    set fb_tmp_632, pkg_viv_tmp_161
    repr_defined $I5014, fb_tmp_632
    unless $I5014 goto if2001_else3558 
    set $P5050, fb_tmp_632["%REG"]
    set $P5052, $P5050
    goto if2001_end3559
  if2001_else3558:
    null $P5051
    set $P5052, $P5051
  if2001_end3559:
    unless_null $P5052, vivi_20023560
    new $P5053, 'Hash'
    set pkg_viv_tmp_161["%REG"], $P5053
    set $P5052, $P5053
  vivi_20023560:
    unless_null $P5052, vivi_20033561
    die "Contextual %*REG not found"
    box $P5054, "Contextual %*REG not found"
    set $P5052, $P5054
  vivi_20033561:
    set $P5047, $P5052
  fallback3557:
    set fb_tmp_631, $P5047
    repr_defined $I5013, fb_tmp_631
    unless $I5013 goto if2000_else3555 
    set $P5055, fb_tmp_631["pos"]
    set $P5057, $P5055
    goto if2000_end3556
  if2000_else3555:
    null $P5056
    set $P5057, $P5056
  if2000_end3556:
    unless_null $P5057, vivi_20043562
    nqp_get_sc_object $P5058, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5057, $P5058
  vivi_20043562:
    $P5059 = $P5046."regex_mark"($P101, $P106, $P5057, 0)
    goto if1999_end3554
  if1999_else3553:
    set $P5062, $P110
    unless $P110 goto if2005_end3564 
.annotate 'line', 4053
    nqp_decontainerize $P5060, _lex_param_0
    $P5061 = $P5060."regex_mark"($P101, $P106, -1, 0)
    set $P5062, $P5061
  if2005_end3564:
  if1999_end3554:
.annotate 'line', 4054
    $P101."push"($P105)
.annotate 'line', 4055
    nqp_decontainerize $P5063, _lex_param_0
    set fb_tmp_633, _lex_param_1
    repr_defined $I5015, fb_tmp_633
    unless $I5015 goto if2006_else3565 
    set $P5064, fb_tmp_633[0]
    set $P5066, $P5064
    goto if2006_end3566
  if2006_else3565:
    null $P5065
    set $P5066, $P5065
  if2006_end3566:
    unless_null $P5066, vivi_20073567
    nqp_get_sc_object $P5067, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5066, $P5067
  vivi_20073567:
    $P5068 = $P5063."regex_post"($P5066)
    $P101."push"($P5068)
    unless $P110 goto if2008_end3569 
.annotate 'line', 4056
.annotate 'line', 4057
    nqp_decontainerize $P5069, _lex_param_0
    find_dynamic_lex $P5070, "%*REG"
    unless_null $P5070, fallback3572
    nqp_get_sc_object $P5072, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5071, $P5072
    set pkg_viv_tmp_162, $P5071
    set fb_tmp_635, pkg_viv_tmp_162
    repr_defined $I5017, fb_tmp_635
    unless $I5017 goto if2010_else3573 
    set $P5073, fb_tmp_635["%REG"]
    set $P5075, $P5073
    goto if2010_end3574
  if2010_else3573:
    null $P5074
    set $P5075, $P5074
  if2010_end3574:
    unless_null $P5075, vivi_20113575
    new $P5076, 'Hash'
    set pkg_viv_tmp_162["%REG"], $P5076
    set $P5075, $P5076
  vivi_20113575:
    unless_null $P5075, vivi_20123576
    die "Contextual %*REG not found"
    box $P5077, "Contextual %*REG not found"
    set $P5075, $P5077
  vivi_20123576:
    set $P5070, $P5075
  fallback3572:
    set fb_tmp_634, $P5070
    repr_defined $I5016, fb_tmp_634
    unless $I5016 goto if2009_else3570 
    set $P5078, fb_tmp_634["rep"]
    set $P5080, $P5078
    goto if2009_end3571
  if2009_else3570:
    null $P5079
    set $P5080, $P5079
  if2009_end3571:
    unless_null $P5080, vivi_20133577
    nqp_get_sc_object $P5081, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5080, $P5081
  vivi_20133577:
    $P5069."regex_peek"($P101, $P106, "*", $P5080)
    set $S5009, $P102
    iseq $I5018, $S5009, "r"
    unless $I5018 goto if2014_end3579 
.annotate 'line', 4058
    nqp_decontainerize $P5082, _lex_param_0
    $P5083 = $P5082."regex_commit"($P101, $P106)
  if2014_end3579:
.annotate 'line', 4059
    find_dynamic_lex $P5084, "%*REG"
    unless_null $P5084, fallback3582
    nqp_get_sc_object $P5086, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5085, $P5086
    set pkg_viv_tmp_163, $P5085
    set fb_tmp_637, pkg_viv_tmp_163
    repr_defined $I5020, fb_tmp_637
    unless $I5020 goto if2016_else3583 
    set $P5087, fb_tmp_637["%REG"]
    set $P5089, $P5087
    goto if2016_end3584
  if2016_else3583:
    null $P5088
    set $P5089, $P5088
  if2016_end3584:
    unless_null $P5089, vivi_20173585
    new $P5090, 'Hash'
    set pkg_viv_tmp_163["%REG"], $P5090
    set $P5089, $P5090
  vivi_20173585:
    unless_null $P5089, vivi_20183586
    die "Contextual %*REG not found"
    box $P5091, "Contextual %*REG not found"
    set $P5089, $P5091
  vivi_20183586:
    set $P5084, $P5089
  fallback3582:
    set fb_tmp_636, $P5084
    repr_defined $I5019, fb_tmp_636
    unless $I5019 goto if2015_else3580 
    set $P5092, fb_tmp_636["rep"]
    set $P5094, $P5092
    goto if2015_end3581
  if2015_else3580:
    null $P5093
    set $P5094, $P5093
  if2015_end3581:
    unless_null $P5094, vivi_20193587
    nqp_get_sc_object $P5095, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5094, $P5095
  vivi_20193587:
    $P101."push_pirop"("inc", $P5094)
    set $N5011, $P108
    set $N5012, 1
    isgt $I5021, $N5011, $N5012
    box $P5111, $I5021
    set $P5110, $P5111
    unless $I5021 goto if2020_end3589 
.annotate 'line', 4060
    find_dynamic_lex $P5096, "%*REG"
    unless_null $P5096, fallback3592
    nqp_get_sc_object $P5098, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_164, $P5097
    set fb_tmp_639, pkg_viv_tmp_164
    repr_defined $I5023, fb_tmp_639
    unless $I5023 goto if2022_else3593 
    set $P5099, fb_tmp_639["%REG"]
    set $P5101, $P5099
    goto if2022_end3594
  if2022_else3593:
    null $P5100
    set $P5101, $P5100
  if2022_end3594:
    unless_null $P5101, vivi_20233595
    new $P5102, 'Hash'
    set pkg_viv_tmp_164["%REG"], $P5102
    set $P5101, $P5102
  vivi_20233595:
    unless_null $P5101, vivi_20243596
    die "Contextual %*REG not found"
    box $P5103, "Contextual %*REG not found"
    set $P5101, $P5103
  vivi_20243596:
    set $P5096, $P5101
  fallback3592:
    set fb_tmp_638, $P5096
    repr_defined $I5022, fb_tmp_638
    unless $I5022 goto if2021_else3590 
    set $P5104, fb_tmp_638["rep"]
    set $P5106, $P5104
    goto if2021_end3591
  if2021_else3590:
    null $P5105
    set $P5106, $P5105
  if2021_end3591:
    unless_null $P5106, vivi_20253597
    nqp_get_sc_object $P5107, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5106, $P5107
  vivi_20253597:
    $P5108 = _lex_param_1."max"()
    $P5109 = $P101."push_pirop"("ge", $P5106, $P5108, $P106)
    set $P5110, $P5109
  if2020_end3589:
  if2008_end3569:
    set $N5013, $P108
    set $N5014, 1
    iseq $I5024, $N5013, $N5014
    if $I5024 goto unless2026_end3599 
.annotate 'line', 4063
.annotate 'line', 4064
    nqp_decontainerize $P5112, _lex_param_0
    find_dynamic_lex $P5113, "%*REG"
    unless_null $P5113, fallback3602
    nqp_get_sc_object $P5115, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5114, $P5115
    set pkg_viv_tmp_165, $P5114
    set fb_tmp_641, pkg_viv_tmp_165
    repr_defined $I5026, fb_tmp_641
    unless $I5026 goto if2028_else3603 
    set $P5116, fb_tmp_641["%REG"]
    set $P5118, $P5116
    goto if2028_end3604
  if2028_else3603:
    null $P5117
    set $P5118, $P5117
  if2028_end3604:
    unless_null $P5118, vivi_20293605
    new $P5119, 'Hash'
    set pkg_viv_tmp_165["%REG"], $P5119
    set $P5118, $P5119
  vivi_20293605:
    unless_null $P5118, vivi_20303606
    die "Contextual %*REG not found"
    box $P5120, "Contextual %*REG not found"
    set $P5118, $P5120
  vivi_20303606:
    set $P5113, $P5118
  fallback3602:
    set fb_tmp_640, $P5113
    repr_defined $I5025, fb_tmp_640
    unless $I5025 goto if2027_else3600 
    set $P5121, fb_tmp_640["pos"]
    set $P5123, $P5121
    goto if2027_end3601
  if2027_else3600:
    null $P5122
    set $P5123, $P5122
  if2027_end3601:
    unless_null $P5123, vivi_20313607
    nqp_get_sc_object $P5124, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5123, $P5124
  vivi_20313607:
    find_dynamic_lex $P5125, "%*REG"
    unless_null $P5125, fallback3610
    nqp_get_sc_object $P5127, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5126, $P5127
    set pkg_viv_tmp_166, $P5126
    set fb_tmp_643, pkg_viv_tmp_166
    repr_defined $I5028, fb_tmp_643
    unless $I5028 goto if2033_else3611 
    set $P5128, fb_tmp_643["%REG"]
    set $P5130, $P5128
    goto if2033_end3612
  if2033_else3611:
    null $P5129
    set $P5130, $P5129
  if2033_end3612:
    unless_null $P5130, vivi_20343613
    new $P5131, 'Hash'
    set pkg_viv_tmp_166["%REG"], $P5131
    set $P5130, $P5131
  vivi_20343613:
    unless_null $P5130, vivi_20353614
    die "Contextual %*REG not found"
    box $P5132, "Contextual %*REG not found"
    set $P5130, $P5132
  vivi_20353614:
    set $P5125, $P5130
  fallback3610:
    set fb_tmp_642, $P5125
    repr_defined $I5027, fb_tmp_642
    unless $I5027 goto if2032_else3608 
    set $P5133, fb_tmp_642["rep"]
    set $P5135, $P5133
    goto if2032_end3609
  if2032_else3608:
    null $P5134
    set $P5135, $P5134
  if2032_end3609:
    unless_null $P5135, vivi_20363615
    nqp_get_sc_object $P5136, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5135, $P5136
  vivi_20363615:
    $P5112."regex_mark"($P101, $P106, $P5123, $P5135)
    unless $P103 goto if2037_end3617 
.annotate 'line', 4065
    nqp_decontainerize $P5137, _lex_param_0
    $P5138 = $P5137."regex_post"($P103)
    $P5139 = $P101."push"($P5138)
  if2037_end3617:
.annotate 'line', 4066
    $P5140 = $P101."push_pirop"("goto", $P105)
  unless2026_end3599:
.annotate 'line', 4068
    $P101."push"($P106)
    set $N5015, $P107
    set $N5016, 1
    isgt $I5029, $N5015, $N5016
    box $P5168, $I5029
    set $P5167, $P5168
    unless $I5029 goto if2038_end3619 
.annotate 'line', 4069
    find_dynamic_lex $P5141, "%*REG"
    unless_null $P5141, fallback3622
    nqp_get_sc_object $P5143, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5142, $P5143
    set pkg_viv_tmp_167, $P5142
    set fb_tmp_645, pkg_viv_tmp_167
    repr_defined $I5031, fb_tmp_645
    unless $I5031 goto if2040_else3623 
    set $P5144, fb_tmp_645["%REG"]
    set $P5146, $P5144
    goto if2040_end3624
  if2040_else3623:
    null $P5145
    set $P5146, $P5145
  if2040_end3624:
    unless_null $P5146, vivi_20413625
    new $P5147, 'Hash'
    set pkg_viv_tmp_167["%REG"], $P5147
    set $P5146, $P5147
  vivi_20413625:
    unless_null $P5146, vivi_20423626
    die "Contextual %*REG not found"
    box $P5148, "Contextual %*REG not found"
    set $P5146, $P5148
  vivi_20423626:
    set $P5141, $P5146
  fallback3622:
    set fb_tmp_644, $P5141
    repr_defined $I5030, fb_tmp_644
    unless $I5030 goto if2039_else3620 
    set $P5149, fb_tmp_644["rep"]
    set $P5151, $P5149
    goto if2039_end3621
  if2039_else3620:
    null $P5150
    set $P5151, $P5150
  if2039_end3621:
    unless_null $P5151, vivi_20433627
    nqp_get_sc_object $P5152, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5151, $P5152
  vivi_20433627:
    $P5153 = _lex_param_1."min"()
    set $N5017, $P5153
    find_dynamic_lex $P5154, "%*REG"
    unless_null $P5154, fallback3630
    nqp_get_sc_object $P5156, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5155, $P5156
    set pkg_viv_tmp_168, $P5155
    set fb_tmp_647, pkg_viv_tmp_168
    repr_defined $I5033, fb_tmp_647
    unless $I5033 goto if2045_else3631 
    set $P5157, fb_tmp_647["%REG"]
    set $P5159, $P5157
    goto if2045_end3632
  if2045_else3631:
    null $P5158
    set $P5159, $P5158
  if2045_end3632:
    unless_null $P5159, vivi_20463633
    new $P5160, 'Hash'
    set pkg_viv_tmp_168["%REG"], $P5160
    set $P5159, $P5160
  vivi_20463633:
    unless_null $P5159, vivi_20473634
    die "Contextual %*REG not found"
    box $P5161, "Contextual %*REG not found"
    set $P5159, $P5161
  vivi_20473634:
    set $P5154, $P5159
  fallback3630:
    set fb_tmp_646, $P5154
    repr_defined $I5032, fb_tmp_646
    unless $I5032 goto if2044_else3628 
    set $P5162, fb_tmp_646["fail"]
    set $P5164, $P5162
    goto if2044_end3629
  if2044_else3628:
    null $P5163
    set $P5164, $P5163
  if2044_end3629:
    unless_null $P5164, vivi_20483635
    nqp_get_sc_object $P5165, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5164, $P5165
  vivi_20483635:
    $P5166 = $P101."push_pirop"("lt", $P5151, $N5017, $P5164)
    set $P5167, $P5166
  if2038_end3619:
    set $P5169, $P5167
  if1939_end3455:
  if1937_end3451:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1368096764.976") :anon :lex :outer("cuid_133_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4030
    .lex "$seplabel", $P101 
    .lex "$ireg", $P102 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
    .local pmc pkg_viv_tmp_151 
    .local pmc fb_tmp_612 
    .local pmc fb_tmp_613 
    .local pmc pkg_viv_tmp_152 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    .local pmc pkg_viv_tmp_153 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    .local pmc pkg_viv_tmp_154 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc pkg_viv_tmp_155 
    .local pmc fb_tmp_621 
    .local pmc fb_tmp_622 
    .local pmc pkg_viv_tmp_156 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc pkg_viv_tmp_157 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    .local pmc pkg_viv_tmp_158 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
    .local pmc pkg_viv_tmp_159 
    .local pmc fb_tmp_629 
    .local pmc fb_tmp_630 
    .local pmc pkg_viv_tmp_160 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 4031
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$prefix"
    set $S5002, $P5005
    concat $S5001, $S5002, "_sep"
    $P5006 = $P5003."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5006
    box $P5007, "$I12"
    set $P102, $P5007
.annotate 'line', 4033
    find_lex $P5008, "$ops"
    find_dynamic_lex $P5009, "%*REG"
    unless_null $P5009, fallback3458
    nqp_get_sc_object $P5011, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_151, $P5010
    set fb_tmp_611, pkg_viv_tmp_151
    repr_defined $I5002, fb_tmp_611
    unless $I5002 goto if1941_else3459 
    set $P5012, fb_tmp_611["%REG"]
    set $P5014, $P5012
    goto if1941_end3460
  if1941_else3459:
    null $P5013
    set $P5014, $P5013
  if1941_end3460:
    unless_null $P5014, vivi_19423461
    new $P5015, 'Hash'
    set pkg_viv_tmp_151["%REG"], $P5015
    set $P5014, $P5015
  vivi_19423461:
    unless_null $P5014, vivi_19433462
    die "Contextual %*REG not found"
    box $P5016, "Contextual %*REG not found"
    set $P5014, $P5016
  vivi_19433462:
    set $P5009, $P5014
  fallback3458:
    set fb_tmp_610, $P5009
    repr_defined $I5001, fb_tmp_610
    unless $I5001 goto if1940_else3456 
    set $P5017, fb_tmp_610["rep"]
    set $P5019, $P5017
    goto if1940_end3457
  if1940_else3456:
    null $P5018
    set $P5019, $P5018
  if1940_end3457:
    unless_null $P5019, vivi_19443463
    nqp_get_sc_object $P5020, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5019, $P5020
  vivi_19443463:
    $P5008."push_pirop"("set", $P5019, 0)
    find_lex $P5021, "$min"
    set $N5001, $P5021
    set $N5002, 1
    islt $I5003, $N5001, $N5002
    unless $I5003 goto if1945_end3465 
.annotate 'line', 4034
.annotate 'line', 4035
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    find_lex $P5024, "$ops"
    find_lex $P5025, "$looplabel"
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3468
    nqp_get_sc_object $P5028, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_152, $P5027
    set fb_tmp_613, pkg_viv_tmp_152
    repr_defined $I5005, fb_tmp_613
    unless $I5005 goto if1947_else3469 
    set $P5029, fb_tmp_613["%REG"]
    set $P5031, $P5029
    goto if1947_end3470
  if1947_else3469:
    null $P5030
    set $P5031, $P5030
  if1947_end3470:
    unless_null $P5031, vivi_19483471
    new $P5032, 'Hash'
    set pkg_viv_tmp_152["%REG"], $P5032
    set $P5031, $P5032
  vivi_19483471:
    unless_null $P5031, vivi_19493472
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_19493472:
    set $P5026, $P5031
  fallback3468:
    set fb_tmp_612, $P5026
    repr_defined $I5004, fb_tmp_612
    unless $I5004 goto if1946_else3466 
    set $P5034, fb_tmp_612["pos"]
    set $P5036, $P5034
    goto if1946_end3467
  if1946_else3466:
    null $P5035
    set $P5036, $P5035
  if1946_end3467:
    unless_null $P5036, vivi_19503473
    nqp_get_sc_object $P5037, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5036, $P5037
  vivi_19503473:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3476
    nqp_get_sc_object $P5040, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_153, $P5039
    set fb_tmp_615, pkg_viv_tmp_153
    repr_defined $I5007, fb_tmp_615
    unless $I5007 goto if1952_else3477 
    set $P5041, fb_tmp_615["%REG"]
    set $P5043, $P5041
    goto if1952_end3478
  if1952_else3477:
    null $P5042
    set $P5043, $P5042
  if1952_end3478:
    unless_null $P5043, vivi_19533479
    new $P5044, 'Hash'
    set pkg_viv_tmp_153["%REG"], $P5044
    set $P5043, $P5044
  vivi_19533479:
    unless_null $P5043, vivi_19543480
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_19543480:
    set $P5038, $P5043
  fallback3476:
    set fb_tmp_614, $P5038
    repr_defined $I5006, fb_tmp_614
    unless $I5006 goto if1951_else3474 
    set $P5046, fb_tmp_614["rep"]
    set $P5048, $P5046
    goto if1951_end3475
  if1951_else3474:
    null $P5047
    set $P5048, $P5047
  if1951_end3475:
    unless_null $P5048, vivi_19553481
    nqp_get_sc_object $P5049, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5048, $P5049
  vivi_19553481:
    $P5022."regex_mark"($P5024, $P5025, $P5036, $P5048)
.annotate 'line', 4036
    find_lex $P5050, "$ops"
    find_lex $P5051, "$donelabel"
    $P5052 = $P5050."push_pirop"("goto", $P5051)
  if1945_end3465:
    find_lex $P5053, "$sep"
    unless $P5053 goto if1956_end3483 
.annotate 'line', 4038
    find_lex $P5054, "$ops"
    $P5055 = $P5054."push_pirop"("goto", $P101)
  if1956_end3483:
.annotate 'line', 4039
    find_lex $P5056, "$ops"
    find_lex $P5057, "$looplabel"
    $P5056."push"($P5057)
.annotate 'line', 4040
    find_lex $P5058, "$ops"
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback3486
    nqp_get_sc_object $P5061, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_154, $P5060
    set fb_tmp_617, pkg_viv_tmp_154
    repr_defined $I5009, fb_tmp_617
    unless $I5009 goto if1958_else3487 
    set $P5062, fb_tmp_617["%REG"]
    set $P5064, $P5062
    goto if1958_end3488
  if1958_else3487:
    null $P5063
    set $P5064, $P5063
  if1958_end3488:
    unless_null $P5064, vivi_19593489
    new $P5065, 'Hash'
    set pkg_viv_tmp_154["%REG"], $P5065
    set $P5064, $P5065
  vivi_19593489:
    unless_null $P5064, vivi_19603490
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_19603490:
    set $P5059, $P5064
  fallback3486:
    set fb_tmp_616, $P5059
    repr_defined $I5008, fb_tmp_616
    unless $I5008 goto if1957_else3484 
    set $P5067, fb_tmp_616["rep"]
    set $P5069, $P5067
    goto if1957_end3485
  if1957_else3484:
    null $P5068
    set $P5069, $P5068
  if1957_end3485:
    unless_null $P5069, vivi_19613491
    nqp_get_sc_object $P5070, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5069, $P5070
  vivi_19613491:
    $P5058."push_pirop"("set", $P102, $P5069)
    find_lex $P5071, "$sep"
    unless $P5071 goto if1962_end3493 
.annotate 'line', 4041
    find_lex $P5072, "$ops"
    find_lex $P5074, "self"
    nqp_decontainerize $P5073, $P5074
    find_lex $P5075, "$sep"
    $P5076 = $P5073."regex_post"($P5075)
    $P5077 = $P5072."push"($P5076)
  if1962_end3493:
    find_lex $P5078, "$sep"
    unless $P5078 goto if1963_end3495 
.annotate 'line', 4042
    find_lex $P5079, "$ops"
    $P5080 = $P5079."push"($P101)
  if1963_end3495:
.annotate 'line', 4043
    find_lex $P5081, "$ops"
    find_lex $P5083, "self"
    nqp_decontainerize $P5082, $P5083
    find_lex $P5084, "$node"
    set fb_tmp_618, $P5084
    repr_defined $I5010, fb_tmp_618
    unless $I5010 goto if1964_else3496 
    set $P5085, fb_tmp_618[0]
    set $P5087, $P5085
    goto if1964_end3497
  if1964_else3496:
    null $P5086
    set $P5087, $P5086
  if1964_end3497:
    unless_null $P5087, vivi_19653498
    nqp_get_sc_object $P5088, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5087, $P5088
  vivi_19653498:
    $P5089 = $P5082."regex_post"($P5087)
    $P5081."push"($P5089)
.annotate 'line', 4044
    find_lex $P5090, "$ops"
    find_dynamic_lex $P5091, "%*REG"
    unless_null $P5091, fallback3501
    nqp_get_sc_object $P5093, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_155, $P5092
    set fb_tmp_620, pkg_viv_tmp_155
    repr_defined $I5012, fb_tmp_620
    unless $I5012 goto if1967_else3502 
    set $P5094, fb_tmp_620["%REG"]
    set $P5096, $P5094
    goto if1967_end3503
  if1967_else3502:
    null $P5095
    set $P5096, $P5095
  if1967_end3503:
    unless_null $P5096, vivi_19683504
    new $P5097, 'Hash'
    set pkg_viv_tmp_155["%REG"], $P5097
    set $P5096, $P5097
  vivi_19683504:
    unless_null $P5096, vivi_19693505
    die "Contextual %*REG not found"
    box $P5098, "Contextual %*REG not found"
    set $P5096, $P5098
  vivi_19693505:
    set $P5091, $P5096
  fallback3501:
    set fb_tmp_619, $P5091
    repr_defined $I5011, fb_tmp_619
    unless $I5011 goto if1966_else3499 
    set $P5099, fb_tmp_619["rep"]
    set $P5101, $P5099
    goto if1966_end3500
  if1966_else3499:
    null $P5100
    set $P5101, $P5100
  if1966_end3500:
    unless_null $P5101, vivi_19703506
    nqp_get_sc_object $P5102, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5101, $P5102
  vivi_19703506:
    $P5090."push_pirop"("set", $P5101, $P102)
.annotate 'line', 4045
    find_lex $P5103, "$ops"
    find_dynamic_lex $P5104, "%*REG"
    unless_null $P5104, fallback3509
    nqp_get_sc_object $P5106, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5105, $P5106
    set pkg_viv_tmp_156, $P5105
    set fb_tmp_622, pkg_viv_tmp_156
    repr_defined $I5014, fb_tmp_622
    unless $I5014 goto if1972_else3510 
    set $P5107, fb_tmp_622["%REG"]
    set $P5109, $P5107
    goto if1972_end3511
  if1972_else3510:
    null $P5108
    set $P5109, $P5108
  if1972_end3511:
    unless_null $P5109, vivi_19733512
    new $P5110, 'Hash'
    set pkg_viv_tmp_156["%REG"], $P5110
    set $P5109, $P5110
  vivi_19733512:
    unless_null $P5109, vivi_19743513
    die "Contextual %*REG not found"
    box $P5111, "Contextual %*REG not found"
    set $P5109, $P5111
  vivi_19743513:
    set $P5104, $P5109
  fallback3509:
    set fb_tmp_621, $P5104
    repr_defined $I5013, fb_tmp_621
    unless $I5013 goto if1971_else3507 
    set $P5112, fb_tmp_621["rep"]
    set $P5114, $P5112
    goto if1971_end3508
  if1971_else3507:
    null $P5113
    set $P5114, $P5113
  if1971_end3508:
    unless_null $P5114, vivi_19753514
    nqp_get_sc_object $P5115, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5114, $P5115
  vivi_19753514:
    $P5103."push_pirop"("inc", $P5114)
    find_lex $P5116, "$min"
    set $N5003, $P5116
    set $N5004, 1
    isgt $I5015, $N5003, $N5004
    unless $I5015 goto if1976_end3516 
.annotate 'line', 4046
    find_lex $P5117, "$ops"
    find_dynamic_lex $P5118, "%*REG"
    unless_null $P5118, fallback3519
    nqp_get_sc_object $P5120, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5119, $P5120
    set pkg_viv_tmp_157, $P5119
    set fb_tmp_624, pkg_viv_tmp_157
    repr_defined $I5017, fb_tmp_624
    unless $I5017 goto if1978_else3520 
    set $P5121, fb_tmp_624["%REG"]
    set $P5123, $P5121
    goto if1978_end3521
  if1978_else3520:
    null $P5122
    set $P5123, $P5122
  if1978_end3521:
    unless_null $P5123, vivi_19793522
    new $P5124, 'Hash'
    set pkg_viv_tmp_157["%REG"], $P5124
    set $P5123, $P5124
  vivi_19793522:
    unless_null $P5123, vivi_19803523
    die "Contextual %*REG not found"
    box $P5125, "Contextual %*REG not found"
    set $P5123, $P5125
  vivi_19803523:
    set $P5118, $P5123
  fallback3519:
    set fb_tmp_623, $P5118
    repr_defined $I5016, fb_tmp_623
    unless $I5016 goto if1977_else3517 
    set $P5126, fb_tmp_623["rep"]
    set $P5128, $P5126
    goto if1977_end3518
  if1977_else3517:
    null $P5127
    set $P5128, $P5127
  if1977_end3518:
    unless_null $P5128, vivi_19813524
    nqp_get_sc_object $P5129, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5128, $P5129
  vivi_19813524:
    find_lex $P5130, "$min"
    find_lex $P5131, "$looplabel"
    $P5132 = $P5117."push_pirop"("lt", $P5128, $P5130, $P5131)
  if1976_end3516:
    find_lex $P5133, "$max"
    set $N5005, $P5133
    set $N5006, 1
    isgt $I5018, $N5005, $N5006
    unless $I5018 goto if1982_end3526 
.annotate 'line', 4047
    find_lex $P5134, "$ops"
    find_dynamic_lex $P5135, "%*REG"
    unless_null $P5135, fallback3529
    nqp_get_sc_object $P5137, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5136, $P5137
    set pkg_viv_tmp_158, $P5136
    set fb_tmp_626, pkg_viv_tmp_158
    repr_defined $I5020, fb_tmp_626
    unless $I5020 goto if1984_else3530 
    set $P5138, fb_tmp_626["%REG"]
    set $P5140, $P5138
    goto if1984_end3531
  if1984_else3530:
    null $P5139
    set $P5140, $P5139
  if1984_end3531:
    unless_null $P5140, vivi_19853532
    new $P5141, 'Hash'
    set pkg_viv_tmp_158["%REG"], $P5141
    set $P5140, $P5141
  vivi_19853532:
    unless_null $P5140, vivi_19863533
    die "Contextual %*REG not found"
    box $P5142, "Contextual %*REG not found"
    set $P5140, $P5142
  vivi_19863533:
    set $P5135, $P5140
  fallback3529:
    set fb_tmp_625, $P5135
    repr_defined $I5019, fb_tmp_625
    unless $I5019 goto if1983_else3527 
    set $P5143, fb_tmp_625["rep"]
    set $P5145, $P5143
    goto if1983_end3528
  if1983_else3527:
    null $P5144
    set $P5145, $P5144
  if1983_end3528:
    unless_null $P5145, vivi_19873534
    nqp_get_sc_object $P5146, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5145, $P5146
  vivi_19873534:
    find_lex $P5147, "$max"
    find_lex $P5148, "$donelabel"
    $P5149 = $P5134."push_pirop"("ge", $P5145, $P5147, $P5148)
  if1982_end3526:
    find_lex $P5150, "$max"
    set $N5007, $P5150
    set $N5008, 1
    isne $I5021, $N5007, $N5008
    unless $I5021 goto if1988_end3536 
.annotate 'line', 4048
    find_lex $P5152, "self"
    nqp_decontainerize $P5151, $P5152
    find_lex $P5153, "$ops"
    find_lex $P5154, "$looplabel"
    find_dynamic_lex $P5155, "%*REG"
    unless_null $P5155, fallback3539
    nqp_get_sc_object $P5157, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5156, $P5157
    set pkg_viv_tmp_159, $P5156
    set fb_tmp_628, pkg_viv_tmp_159
    repr_defined $I5023, fb_tmp_628
    unless $I5023 goto if1990_else3540 
    set $P5158, fb_tmp_628["%REG"]
    set $P5160, $P5158
    goto if1990_end3541
  if1990_else3540:
    null $P5159
    set $P5160, $P5159
  if1990_end3541:
    unless_null $P5160, vivi_19913542
    new $P5161, 'Hash'
    set pkg_viv_tmp_159["%REG"], $P5161
    set $P5160, $P5161
  vivi_19913542:
    unless_null $P5160, vivi_19923543
    die "Contextual %*REG not found"
    box $P5162, "Contextual %*REG not found"
    set $P5160, $P5162
  vivi_19923543:
    set $P5155, $P5160
  fallback3539:
    set fb_tmp_627, $P5155
    repr_defined $I5022, fb_tmp_627
    unless $I5022 goto if1989_else3537 
    set $P5163, fb_tmp_627["pos"]
    set $P5165, $P5163
    goto if1989_end3538
  if1989_else3537:
    null $P5164
    set $P5165, $P5164
  if1989_end3538:
    unless_null $P5165, vivi_19933544
    nqp_get_sc_object $P5166, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5165, $P5166
  vivi_19933544:
    find_dynamic_lex $P5167, "%*REG"
    unless_null $P5167, fallback3547
    nqp_get_sc_object $P5169, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5168, $P5169
    set pkg_viv_tmp_160, $P5168
    set fb_tmp_630, pkg_viv_tmp_160
    repr_defined $I5025, fb_tmp_630
    unless $I5025 goto if1995_else3548 
    set $P5170, fb_tmp_630["%REG"]
    set $P5172, $P5170
    goto if1995_end3549
  if1995_else3548:
    null $P5171
    set $P5172, $P5171
  if1995_end3549:
    unless_null $P5172, vivi_19963550
    new $P5173, 'Hash'
    set pkg_viv_tmp_160["%REG"], $P5173
    set $P5172, $P5173
  vivi_19963550:
    unless_null $P5172, vivi_19973551
    die "Contextual %*REG not found"
    box $P5174, "Contextual %*REG not found"
    set $P5172, $P5174
  vivi_19973551:
    set $P5167, $P5172
  fallback3547:
    set fb_tmp_629, $P5167
    repr_defined $I5024, fb_tmp_629
    unless $I5024 goto if1994_else3545 
    set $P5175, fb_tmp_629["rep"]
    set $P5177, $P5175
    goto if1994_end3546
  if1994_else3545:
    null $P5176
    set $P5177, $P5176
  if1994_end3546:
    unless_null $P5177, vivi_19983552
    nqp_get_sc_object $P5178, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5177, $P5178
  vivi_19983552:
    $P5179 = $P5151."regex_mark"($P5153, $P5154, $P5165, $P5177)
  if1988_end3536:
.annotate 'line', 4049
    find_lex $P5180, "$ops"
    find_lex $P5181, "$donelabel"
    $P5182 = $P5180."push"($P5181)
    .return ($P5182) 
.end
.HLL "nqp"
.namespace []
.sub "scan" :subid("cuid_134_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4075
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$looplabel", $P103 
    .lex "$scanlabel", $P104 
    .lex "$donelabel", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc pkg_viv_tmp_169 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc pkg_viv_tmp_170 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_653 
    .local pmc pkg_viv_tmp_171 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc pkg_viv_tmp_172 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc pkg_viv_tmp_173 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc pkg_viv_tmp_174 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc pkg_viv_tmp_175 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    .local pmc pkg_viv_tmp_176 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc pkg_viv_tmp_177 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc pkg_viv_tmp_178 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
.annotate 'line', 4076
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3638
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_169, $P5008
    set fb_tmp_649, pkg_viv_tmp_169
    repr_defined $I5002, fb_tmp_649
    unless $I5002 goto if2050_else3639 
    set $P5010, fb_tmp_649["%REG"]
    set $P5012, $P5010
    goto if2050_end3640
  if2050_else3639:
    null $P5011
    set $P5012, $P5011
  if2050_end3640:
    unless_null $P5012, vivi_20513641
    new $P5013, 'Hash'
    set pkg_viv_tmp_169["%REG"], $P5013
    set $P5012, $P5013
  vivi_20513641:
    unless_null $P5012, vivi_20523642
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_20523642:
    set $P5007, $P5012
  fallback3638:
    set fb_tmp_648, $P5007
    repr_defined $I5001, fb_tmp_648
    unless $I5001 goto if2049_else3636 
    set $P5015, fb_tmp_648["cur"]
    set $P5017, $P5015
    goto if2049_end3637
  if2049_else3636:
    null $P5016
    set $P5017, $P5016
  if2049_end3637:
    unless_null $P5017, vivi_20533643
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_20533643:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 4077
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxscan")
    set $P102, $P5021
.annotate 'line', 4078
    nqp_decontainerize $P5022, _lex_param_0
    set $S5002, $P102
    concat $S5001, $S5002, "_loop"
    $P5023 = $P5022."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5023
.annotate 'line', 4079
    nqp_decontainerize $P5024, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "_scan"
    $P5025 = $P5024."post_new"("Label", $S5003 :named("name"))
    set $P104, $P5025
.annotate 'line', 4080
    nqp_decontainerize $P5026, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "_done"
    $P5027 = $P5026."post_new"("Label", $S5005 :named("name"))
    set $P105, $P5027
.annotate 'line', 4081
    find_dynamic_lex $P5028, "%*REG"
    unless_null $P5028, fallback3646
    nqp_get_sc_object $P5030, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_170, $P5029
    set fb_tmp_651, pkg_viv_tmp_170
    repr_defined $I5004, fb_tmp_651
    unless $I5004 goto if2055_else3647 
    set $P5031, fb_tmp_651["%REG"]
    set $P5033, $P5031
    goto if2055_end3648
  if2055_else3647:
    null $P5032
    set $P5033, $P5032
  if2055_end3648:
    unless_null $P5033, vivi_20563649
    new $P5034, 'Hash'
    set pkg_viv_tmp_170["%REG"], $P5034
    set $P5033, $P5034
  vivi_20563649:
    unless_null $P5033, vivi_20573650
    die "Contextual %*REG not found"
    box $P5035, "Contextual %*REG not found"
    set $P5033, $P5035
  vivi_20573650:
    set $P5028, $P5033
  fallback3646:
    set fb_tmp_650, $P5028
    repr_defined $I5003, fb_tmp_650
    unless $I5003 goto if2054_else3644 
    set $P5036, fb_tmp_650["curclass"]
    set $P5038, $P5036
    goto if2054_end3645
  if2054_else3644:
    null $P5037
    set $P5038, $P5037
  if2054_end3645:
    unless_null $P5038, vivi_20583651
    nqp_get_sc_object $P5039, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5038, $P5039
  vivi_20583651:
    $P101."push_pirop"("repr_get_attr_int", "$I11", "self", $P5038, "\"$!from\"")
.annotate 'line', 4082
    $P101."push_pirop"("ne", "$I11", -1, $P105)
.annotate 'line', 4083
    $P101."push_pirop"("goto", $P104)
.annotate 'line', 4084
    $P101."push"($P103)
.annotate 'line', 4085
    find_dynamic_lex $P5040, "%*REG"
    unless_null $P5040, fallback3654
    nqp_get_sc_object $P5042, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5041, $P5042
    set pkg_viv_tmp_171, $P5041
    set fb_tmp_653, pkg_viv_tmp_171
    repr_defined $I5006, fb_tmp_653
    unless $I5006 goto if2060_else3655 
    set $P5043, fb_tmp_653["%REG"]
    set $P5045, $P5043
    goto if2060_end3656
  if2060_else3655:
    null $P5044
    set $P5045, $P5044
  if2060_end3656:
    unless_null $P5045, vivi_20613657
    new $P5046, 'Hash'
    set pkg_viv_tmp_171["%REG"], $P5046
    set $P5045, $P5046
  vivi_20613657:
    unless_null $P5045, vivi_20623658
    die "Contextual %*REG not found"
    box $P5047, "Contextual %*REG not found"
    set $P5045, $P5047
  vivi_20623658:
    set $P5040, $P5045
  fallback3654:
    set fb_tmp_652, $P5040
    repr_defined $I5005, fb_tmp_652
    unless $I5005 goto if2059_else3652 
    set $P5048, fb_tmp_652["pos"]
    set $P5050, $P5048
    goto if2059_end3653
  if2059_else3652:
    null $P5049
    set $P5050, $P5049
  if2059_end3653:
    unless_null $P5050, vivi_20633659
    nqp_get_sc_object $P5051, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5050, $P5051
  vivi_20633659:
    $P101."push_pirop"("inc", $P5050)
.annotate 'line', 4086
    find_dynamic_lex $P5052, "%*REG"
    unless_null $P5052, fallback3662
    nqp_get_sc_object $P5054, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5053, $P5054
    set pkg_viv_tmp_172, $P5053
    set fb_tmp_655, pkg_viv_tmp_172
    repr_defined $I5008, fb_tmp_655
    unless $I5008 goto if2065_else3663 
    set $P5055, fb_tmp_655["%REG"]
    set $P5057, $P5055
    goto if2065_end3664
  if2065_else3663:
    null $P5056
    set $P5057, $P5056
  if2065_end3664:
    unless_null $P5057, vivi_20663665
    new $P5058, 'Hash'
    set pkg_viv_tmp_172["%REG"], $P5058
    set $P5057, $P5058
  vivi_20663665:
    unless_null $P5057, vivi_20673666
    die "Contextual %*REG not found"
    box $P5059, "Contextual %*REG not found"
    set $P5057, $P5059
  vivi_20673666:
    set $P5052, $P5057
  fallback3662:
    set fb_tmp_654, $P5052
    repr_defined $I5007, fb_tmp_654
    unless $I5007 goto if2064_else3660 
    set $P5060, fb_tmp_654["pos"]
    set $P5062, $P5060
    goto if2064_end3661
  if2064_else3660:
    null $P5061
    set $P5062, $P5061
  if2064_end3661:
    unless_null $P5062, vivi_20683667
    nqp_get_sc_object $P5063, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5062, $P5063
  vivi_20683667:
    find_dynamic_lex $P5064, "%*REG"
    unless_null $P5064, fallback3670
    nqp_get_sc_object $P5066, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_173, $P5065
    set fb_tmp_657, pkg_viv_tmp_173
    repr_defined $I5010, fb_tmp_657
    unless $I5010 goto if2070_else3671 
    set $P5067, fb_tmp_657["%REG"]
    set $P5069, $P5067
    goto if2070_end3672
  if2070_else3671:
    null $P5068
    set $P5069, $P5068
  if2070_end3672:
    unless_null $P5069, vivi_20713673
    new $P5070, 'Hash'
    set pkg_viv_tmp_173["%REG"], $P5070
    set $P5069, $P5070
  vivi_20713673:
    unless_null $P5069, vivi_20723674
    die "Contextual %*REG not found"
    box $P5071, "Contextual %*REG not found"
    set $P5069, $P5071
  vivi_20723674:
    set $P5064, $P5069
  fallback3670:
    set fb_tmp_656, $P5064
    repr_defined $I5009, fb_tmp_656
    unless $I5009 goto if2069_else3668 
    set $P5072, fb_tmp_656["eos"]
    set $P5074, $P5072
    goto if2069_end3669
  if2069_else3668:
    null $P5073
    set $P5074, $P5073
  if2069_end3669:
    unless_null $P5074, vivi_20733675
    nqp_get_sc_object $P5075, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5074, $P5075
  vivi_20733675:
    find_dynamic_lex $P5076, "%*REG"
    unless_null $P5076, fallback3678
    nqp_get_sc_object $P5078, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5077, $P5078
    set pkg_viv_tmp_174, $P5077
    set fb_tmp_659, pkg_viv_tmp_174
    repr_defined $I5012, fb_tmp_659
    unless $I5012 goto if2075_else3679 
    set $P5079, fb_tmp_659["%REG"]
    set $P5081, $P5079
    goto if2075_end3680
  if2075_else3679:
    null $P5080
    set $P5081, $P5080
  if2075_end3680:
    unless_null $P5081, vivi_20763681
    new $P5082, 'Hash'
    set pkg_viv_tmp_174["%REG"], $P5082
    set $P5081, $P5082
  vivi_20763681:
    unless_null $P5081, vivi_20773682
    die "Contextual %*REG not found"
    box $P5083, "Contextual %*REG not found"
    set $P5081, $P5083
  vivi_20773682:
    set $P5076, $P5081
  fallback3678:
    set fb_tmp_658, $P5076
    repr_defined $I5011, fb_tmp_658
    unless $I5011 goto if2074_else3676 
    set $P5084, fb_tmp_658["fail"]
    set $P5086, $P5084
    goto if2074_end3677
  if2074_else3676:
    null $P5085
    set $P5086, $P5085
  if2074_end3677:
    unless_null $P5086, vivi_20783683
    nqp_get_sc_object $P5087, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5086, $P5087
  vivi_20783683:
    $P101."push_pirop"("gt", $P5062, $P5074, $P5086)
.annotate 'line', 4087
    find_dynamic_lex $P5088, "%*REG"
    unless_null $P5088, fallback3686
    nqp_get_sc_object $P5090, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_175, $P5089
    set fb_tmp_661, pkg_viv_tmp_175
    repr_defined $I5014, fb_tmp_661
    unless $I5014 goto if2080_else3687 
    set $P5091, fb_tmp_661["%REG"]
    set $P5093, $P5091
    goto if2080_end3688
  if2080_else3687:
    null $P5092
    set $P5093, $P5092
  if2080_end3688:
    unless_null $P5093, vivi_20813689
    new $P5094, 'Hash'
    set pkg_viv_tmp_175["%REG"], $P5094
    set $P5093, $P5094
  vivi_20813689:
    unless_null $P5093, vivi_20823690
    die "Contextual %*REG not found"
    box $P5095, "Contextual %*REG not found"
    set $P5093, $P5095
  vivi_20823690:
    set $P5088, $P5093
  fallback3686:
    set fb_tmp_660, $P5088
    repr_defined $I5013, fb_tmp_660
    unless $I5013 goto if2079_else3684 
    set $P5096, fb_tmp_660["cur"]
    set $P5098, $P5096
    goto if2079_end3685
  if2079_else3684:
    null $P5097
    set $P5098, $P5097
  if2079_end3685:
    unless_null $P5098, vivi_20833691
    nqp_get_sc_object $P5099, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5098, $P5099
  vivi_20833691:
    find_dynamic_lex $P5100, "%*REG"
    unless_null $P5100, fallback3694
    nqp_get_sc_object $P5102, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_176, $P5101
    set fb_tmp_663, pkg_viv_tmp_176
    repr_defined $I5016, fb_tmp_663
    unless $I5016 goto if2085_else3695 
    set $P5103, fb_tmp_663["%REG"]
    set $P5105, $P5103
    goto if2085_end3696
  if2085_else3695:
    null $P5104
    set $P5105, $P5104
  if2085_end3696:
    unless_null $P5105, vivi_20863697
    new $P5106, 'Hash'
    set pkg_viv_tmp_176["%REG"], $P5106
    set $P5105, $P5106
  vivi_20863697:
    unless_null $P5105, vivi_20873698
    die "Contextual %*REG not found"
    box $P5107, "Contextual %*REG not found"
    set $P5105, $P5107
  vivi_20873698:
    set $P5100, $P5105
  fallback3694:
    set fb_tmp_662, $P5100
    repr_defined $I5015, fb_tmp_662
    unless $I5015 goto if2084_else3692 
    set $P5108, fb_tmp_662["curclass"]
    set $P5110, $P5108
    goto if2084_end3693
  if2084_else3692:
    null $P5109
    set $P5110, $P5109
  if2084_end3693:
    unless_null $P5110, vivi_20883699
    nqp_get_sc_object $P5111, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5110, $P5111
  vivi_20883699:
    find_dynamic_lex $P5112, "%*REG"
    unless_null $P5112, fallback3702
    nqp_get_sc_object $P5114, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5113, $P5114
    set pkg_viv_tmp_177, $P5113
    set fb_tmp_665, pkg_viv_tmp_177
    repr_defined $I5018, fb_tmp_665
    unless $I5018 goto if2090_else3703 
    set $P5115, fb_tmp_665["%REG"]
    set $P5117, $P5115
    goto if2090_end3704
  if2090_else3703:
    null $P5116
    set $P5117, $P5116
  if2090_end3704:
    unless_null $P5117, vivi_20913705
    new $P5118, 'Hash'
    set pkg_viv_tmp_177["%REG"], $P5118
    set $P5117, $P5118
  vivi_20913705:
    unless_null $P5117, vivi_20923706
    die "Contextual %*REG not found"
    box $P5119, "Contextual %*REG not found"
    set $P5117, $P5119
  vivi_20923706:
    set $P5112, $P5117
  fallback3702:
    set fb_tmp_664, $P5112
    repr_defined $I5017, fb_tmp_664
    unless $I5017 goto if2089_else3700 
    set $P5120, fb_tmp_664["pos"]
    set $P5122, $P5120
    goto if2089_end3701
  if2089_else3700:
    null $P5121
    set $P5122, $P5121
  if2089_end3701:
    unless_null $P5122, vivi_20933707
    nqp_get_sc_object $P5123, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5122, $P5123
  vivi_20933707:
    $P101."push_pirop"("repr_bind_attr_int", $P5098, $P5110, "\"$!from\"", $P5122)
.annotate 'line', 4088
    $P101."push"($P104)
.annotate 'line', 4089
    nqp_decontainerize $P5124, _lex_param_0
    find_dynamic_lex $P5125, "%*REG"
    unless_null $P5125, fallback3710
    nqp_get_sc_object $P5127, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5126, $P5127
    set pkg_viv_tmp_178, $P5126
    set fb_tmp_667, pkg_viv_tmp_178
    repr_defined $I5020, fb_tmp_667
    unless $I5020 goto if2095_else3711 
    set $P5128, fb_tmp_667["%REG"]
    set $P5130, $P5128
    goto if2095_end3712
  if2095_else3711:
    null $P5129
    set $P5130, $P5129
  if2095_end3712:
    unless_null $P5130, vivi_20963713
    new $P5131, 'Hash'
    set pkg_viv_tmp_178["%REG"], $P5131
    set $P5130, $P5131
  vivi_20963713:
    unless_null $P5130, vivi_20973714
    die "Contextual %*REG not found"
    box $P5132, "Contextual %*REG not found"
    set $P5130, $P5132
  vivi_20973714:
    set $P5125, $P5130
  fallback3710:
    set fb_tmp_666, $P5125
    repr_defined $I5019, fb_tmp_666
    unless $I5019 goto if2094_else3708 
    set $P5133, fb_tmp_666["pos"]
    set $P5135, $P5133
    goto if2094_end3709
  if2094_else3708:
    null $P5134
    set $P5135, $P5134
  if2094_end3709:
    unless_null $P5135, vivi_20983715
    nqp_get_sc_object $P5136, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5135, $P5136
  vivi_20983715:
    $P5124."regex_mark"($P101, $P103, $P5135, 0)
.annotate 'line', 4090
    $P101."push"($P105)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "subcapture" :subid("cuid_135_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4094
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$donelabel", $P103 
    .lex "$faillabel", $P104 
    .lex "$name", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc pkg_viv_tmp_179 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc pkg_viv_tmp_180 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    .local pmc pkg_viv_tmp_181 
    .local pmc fb_tmp_675 
    .local pmc fb_tmp_676 
    .local pmc pkg_viv_tmp_182 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    .local pmc pkg_viv_tmp_183 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    .local pmc pkg_viv_tmp_184 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    .local pmc pkg_viv_tmp_185 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_684 
    .local pmc pkg_viv_tmp_186 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc pkg_viv_tmp_187 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    .local pmc pkg_viv_tmp_188 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P105, $P5005
.annotate 'line', 4095
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3718
    nqp_get_sc_object $P5009, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_179, $P5008
    set fb_tmp_669, pkg_viv_tmp_179
    repr_defined $I5002, fb_tmp_669
    unless $I5002 goto if2100_else3719 
    set $P5010, fb_tmp_669["%REG"]
    set $P5012, $P5010
    goto if2100_end3720
  if2100_else3719:
    null $P5011
    set $P5012, $P5011
  if2100_end3720:
    unless_null $P5012, vivi_21013721
    new $P5013, 'Hash'
    set pkg_viv_tmp_179["%REG"], $P5013
    set $P5012, $P5013
  vivi_21013721:
    unless_null $P5012, vivi_21023722
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_21023722:
    set $P5007, $P5012
  fallback3718:
    set fb_tmp_668, $P5007
    repr_defined $I5001, fb_tmp_668
    unless $I5001 goto if2099_else3716 
    set $P5015, fb_tmp_668["cur"]
    set $P5017, $P5015
    goto if2099_end3717
  if2099_else3716:
    null $P5016
    set $P5017, $P5016
  if2099_end3717:
    unless_null $P5017, vivi_21033723
    nqp_get_sc_object $P5018, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5017, $P5018
  vivi_21033723:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 4096
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxcap")
    set $P102, $P5021
.annotate 'line', 4097
    nqp_decontainerize $P5022, _lex_param_0
    set $S5002, $P102
    concat $S5001, $S5002, "_done"
    $P5023 = $P5022."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5023
.annotate 'line', 4098
    nqp_decontainerize $P5024, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "_fail"
    $P5025 = $P5024."post_new"("Label", $S5003 :named("name"))
    set $P104, $P5025
.annotate 'line', 4099
    nqp_decontainerize $P5026, _lex_param_0
    $P5027 = _lex_param_1."name"()
    $P5028 = $P5026."escape"($P5027)
    set $P105, $P5028
.annotate 'line', 4100
    nqp_decontainerize $P5029, _lex_param_0
    find_dynamic_lex $P5030, "%*REG"
    unless_null $P5030, fallback3726
    nqp_get_sc_object $P5032, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5031, $P5032
    set pkg_viv_tmp_180, $P5031
    set fb_tmp_671, pkg_viv_tmp_180
    repr_defined $I5004, fb_tmp_671
    unless $I5004 goto if2105_else3727 
    set $P5033, fb_tmp_671["%REG"]
    set $P5035, $P5033
    goto if2105_end3728
  if2105_else3727:
    null $P5034
    set $P5035, $P5034
  if2105_end3728:
    unless_null $P5035, vivi_21063729
    new $P5036, 'Hash'
    set pkg_viv_tmp_180["%REG"], $P5036
    set $P5035, $P5036
  vivi_21063729:
    unless_null $P5035, vivi_21073730
    die "Contextual %*REG not found"
    box $P5037, "Contextual %*REG not found"
    set $P5035, $P5037
  vivi_21073730:
    set $P5030, $P5035
  fallback3726:
    set fb_tmp_670, $P5030
    repr_defined $I5003, fb_tmp_670
    unless $I5003 goto if2104_else3724 
    set $P5038, fb_tmp_670["pos"]
    set $P5040, $P5038
    goto if2104_end3725
  if2104_else3724:
    null $P5039
    set $P5040, $P5039
  if2104_end3725:
    unless_null $P5040, vivi_21083731
    nqp_get_sc_object $P5041, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5040, $P5041
  vivi_21083731:
    $P5029."regex_mark"($P101, $P104, $P5040, 0)
.annotate 'line', 4101
    nqp_decontainerize $P5042, _lex_param_0
    set fb_tmp_672, _lex_param_1
    repr_defined $I5005, fb_tmp_672
    unless $I5005 goto if2109_else3732 
    set $P5043, fb_tmp_672[0]
    set $P5045, $P5043
    goto if2109_end3733
  if2109_else3732:
    null $P5044
    set $P5045, $P5044
  if2109_end3733:
    unless_null $P5045, vivi_21103734
    nqp_get_sc_object $P5046, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5045, $P5046
  vivi_21103734:
    $P5047 = $P5042."regex_post"($P5045)
    $P101."push"($P5047)
.annotate 'line', 4102
    nqp_decontainerize $P5048, _lex_param_0
    $P5048."regex_peek"($P101, $P104, "$I11")
.annotate 'line', 4103
    find_dynamic_lex $P5049, "%*REG"
    unless_null $P5049, fallback3737
    nqp_get_sc_object $P5051, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5050, $P5051
    set pkg_viv_tmp_181, $P5050
    set fb_tmp_674, pkg_viv_tmp_181
    repr_defined $I5007, fb_tmp_674
    unless $I5007 goto if2112_else3738 
    set $P5052, fb_tmp_674["%REG"]
    set $P5054, $P5052
    goto if2112_end3739
  if2112_else3738:
    null $P5053
    set $P5054, $P5053
  if2112_end3739:
    unless_null $P5054, vivi_21133740
    new $P5055, 'Hash'
    set pkg_viv_tmp_181["%REG"], $P5055
    set $P5054, $P5055
  vivi_21133740:
    unless_null $P5054, vivi_21143741
    die "Contextual %*REG not found"
    box $P5056, "Contextual %*REG not found"
    set $P5054, $P5056
  vivi_21143741:
    set $P5049, $P5054
  fallback3737:
    set fb_tmp_673, $P5049
    repr_defined $I5006, fb_tmp_673
    unless $I5006 goto if2111_else3735 
    set $P5057, fb_tmp_673["cur"]
    set $P5059, $P5057
    goto if2111_end3736
  if2111_else3735:
    null $P5058
    set $P5059, $P5058
  if2111_end3736:
    unless_null $P5059, vivi_21153742
    nqp_get_sc_object $P5060, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5059, $P5060
  vivi_21153742:
    find_dynamic_lex $P5061, "%*REG"
    unless_null $P5061, fallback3745
    nqp_get_sc_object $P5063, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_182, $P5062
    set fb_tmp_676, pkg_viv_tmp_182
    repr_defined $I5009, fb_tmp_676
    unless $I5009 goto if2117_else3746 
    set $P5064, fb_tmp_676["%REG"]
    set $P5066, $P5064
    goto if2117_end3747
  if2117_else3746:
    null $P5065
    set $P5066, $P5065
  if2117_end3747:
    unless_null $P5066, vivi_21183748
    new $P5067, 'Hash'
    set pkg_viv_tmp_182["%REG"], $P5067
    set $P5066, $P5067
  vivi_21183748:
    unless_null $P5066, vivi_21193749
    die "Contextual %*REG not found"
    box $P5068, "Contextual %*REG not found"
    set $P5066, $P5068
  vivi_21193749:
    set $P5061, $P5066
  fallback3745:
    set fb_tmp_675, $P5061
    repr_defined $I5008, fb_tmp_675
    unless $I5008 goto if2116_else3743 
    set $P5069, fb_tmp_675["curclass"]
    set $P5071, $P5069
    goto if2116_end3744
  if2116_else3743:
    null $P5070
    set $P5071, $P5070
  if2116_end3744:
    unless_null $P5071, vivi_21203750
    nqp_get_sc_object $P5072, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5071, $P5072
  vivi_21203750:
    find_dynamic_lex $P5073, "%*REG"
    unless_null $P5073, fallback3753
    nqp_get_sc_object $P5075, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_183, $P5074
    set fb_tmp_678, pkg_viv_tmp_183
    repr_defined $I5011, fb_tmp_678
    unless $I5011 goto if2122_else3754 
    set $P5076, fb_tmp_678["%REG"]
    set $P5078, $P5076
    goto if2122_end3755
  if2122_else3754:
    null $P5077
    set $P5078, $P5077
  if2122_end3755:
    unless_null $P5078, vivi_21233756
    new $P5079, 'Hash'
    set pkg_viv_tmp_183["%REG"], $P5079
    set $P5078, $P5079
  vivi_21233756:
    unless_null $P5078, vivi_21243757
    die "Contextual %*REG not found"
    box $P5080, "Contextual %*REG not found"
    set $P5078, $P5080
  vivi_21243757:
    set $P5073, $P5078
  fallback3753:
    set fb_tmp_677, $P5073
    repr_defined $I5010, fb_tmp_677
    unless $I5010 goto if2121_else3751 
    set $P5081, fb_tmp_677["pos"]
    set $P5083, $P5081
    goto if2121_end3752
  if2121_else3751:
    null $P5082
    set $P5083, $P5082
  if2121_end3752:
    unless_null $P5083, vivi_21253758
    nqp_get_sc_object $P5084, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5083, $P5084
  vivi_21253758:
    $P101."push_pirop"("repr_bind_attr_int", $P5059, $P5071, "\"$!pos\"", $P5083)
.annotate 'line', 4104
    find_dynamic_lex $P5085, "%*REG"
    unless_null $P5085, fallback3761
    nqp_get_sc_object $P5087, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5086, $P5087
    set pkg_viv_tmp_184, $P5086
    set fb_tmp_680, pkg_viv_tmp_184
    repr_defined $I5013, fb_tmp_680
    unless $I5013 goto if2127_else3762 
    set $P5088, fb_tmp_680["%REG"]
    set $P5090, $P5088
    goto if2127_end3763
  if2127_else3762:
    null $P5089
    set $P5090, $P5089
  if2127_end3763:
    unless_null $P5090, vivi_21283764
    new $P5091, 'Hash'
    set pkg_viv_tmp_184["%REG"], $P5091
    set $P5090, $P5091
  vivi_21283764:
    unless_null $P5090, vivi_21293765
    die "Contextual %*REG not found"
    box $P5092, "Contextual %*REG not found"
    set $P5090, $P5092
  vivi_21293765:
    set $P5085, $P5090
  fallback3761:
    set fb_tmp_679, $P5085
    repr_defined $I5012, fb_tmp_679
    unless $I5012 goto if2126_else3759 
    set $P5093, fb_tmp_679["cur"]
    set $P5095, $P5093
    goto if2126_end3760
  if2126_else3759:
    null $P5094
    set $P5095, $P5094
  if2126_end3760:
    unless_null $P5095, vivi_21303766
    nqp_get_sc_object $P5096, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5095, $P5096
  vivi_21303766:
    $P101."push_pirop"("callmethod", "\"!cursor_start_subcapture\"", $P5095, "$I11", "$P11" :named("result"))
.annotate 'line', 4105
    find_dynamic_lex $P5097, "%*REG"
    unless_null $P5097, fallback3769
    nqp_get_sc_object $P5099, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_185, $P5098
    set fb_tmp_682, pkg_viv_tmp_185
    repr_defined $I5015, fb_tmp_682
    unless $I5015 goto if2132_else3770 
    set $P5100, fb_tmp_682["%REG"]
    set $P5102, $P5100
    goto if2132_end3771
  if2132_else3770:
    null $P5101
    set $P5102, $P5101
  if2132_end3771:
    unless_null $P5102, vivi_21333772
    new $P5103, 'Hash'
    set pkg_viv_tmp_185["%REG"], $P5103
    set $P5102, $P5103
  vivi_21333772:
    unless_null $P5102, vivi_21343773
    die "Contextual %*REG not found"
    box $P5104, "Contextual %*REG not found"
    set $P5102, $P5104
  vivi_21343773:
    set $P5097, $P5102
  fallback3769:
    set fb_tmp_681, $P5097
    repr_defined $I5014, fb_tmp_681
    unless $I5014 goto if2131_else3767 
    set $P5105, fb_tmp_681["pos"]
    set $P5107, $P5105
    goto if2131_end3768
  if2131_else3767:
    null $P5106
    set $P5107, $P5106
  if2131_end3768:
    unless_null $P5107, vivi_21353774
    nqp_get_sc_object $P5108, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5107, $P5108
  vivi_21353774:
    $P101."push_pirop"("callmethod", "\"!cursor_pass\"", "$P11", $P5107)
.annotate 'line', 4106
    find_dynamic_lex $P5109, "%*REG"
    unless_null $P5109, fallback3777
    nqp_get_sc_object $P5111, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_186, $P5110
    set fb_tmp_684, pkg_viv_tmp_186
    repr_defined $I5017, fb_tmp_684
    unless $I5017 goto if2137_else3778 
    set $P5112, fb_tmp_684["%REG"]
    set $P5114, $P5112
    goto if2137_end3779
  if2137_else3778:
    null $P5113
    set $P5114, $P5113
  if2137_end3779:
    unless_null $P5114, vivi_21383780
    new $P5115, 'Hash'
    set pkg_viv_tmp_186["%REG"], $P5115
    set $P5114, $P5115
  vivi_21383780:
    unless_null $P5114, vivi_21393781
    die "Contextual %*REG not found"
    box $P5116, "Contextual %*REG not found"
    set $P5114, $P5116
  vivi_21393781:
    set $P5109, $P5114
  fallback3777:
    set fb_tmp_683, $P5109
    repr_defined $I5016, fb_tmp_683
    unless $I5016 goto if2136_else3775 
    set $P5117, fb_tmp_683["cur"]
    set $P5119, $P5117
    goto if2136_end3776
  if2136_else3775:
    null $P5118
    set $P5119, $P5118
  if2136_end3776:
    unless_null $P5119, vivi_21403782
    nqp_get_sc_object $P5120, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5119, $P5120
  vivi_21403782:
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback3785
    nqp_get_sc_object $P5123, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_187, $P5122
    set fb_tmp_686, pkg_viv_tmp_187
    repr_defined $I5019, fb_tmp_686
    unless $I5019 goto if2142_else3786 
    set $P5124, fb_tmp_686["%REG"]
    set $P5126, $P5124
    goto if2142_end3787
  if2142_else3786:
    null $P5125
    set $P5126, $P5125
  if2142_end3787:
    unless_null $P5126, vivi_21433788
    new $P5127, 'Hash'
    set pkg_viv_tmp_187["%REG"], $P5127
    set $P5126, $P5127
  vivi_21433788:
    unless_null $P5126, vivi_21443789
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_21443789:
    set $P5121, $P5126
  fallback3785:
    set fb_tmp_685, $P5121
    repr_defined $I5018, fb_tmp_685
    unless $I5018 goto if2141_else3783 
    set $P5129, fb_tmp_685["cstack"]
    set $P5131, $P5129
    goto if2141_end3784
  if2141_else3783:
    null $P5130
    set $P5131, $P5130
  if2141_end3784:
    unless_null $P5131, vivi_21453790
    nqp_get_sc_object $P5132, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5131, $P5132
  vivi_21453790:
    $P101."push_pirop"("callmethod", "\"!cursor_capture\"", $P5119, "$P11", $P105, $P5131 :named("result"))
.annotate 'line', 4108
    $P101."push_pirop"("goto", $P103)
.annotate 'line', 4109
    $P101."push"($P104)
.annotate 'line', 4110
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback3793
    nqp_get_sc_object $P5135, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_188, $P5134
    set fb_tmp_688, pkg_viv_tmp_188
    repr_defined $I5021, fb_tmp_688
    unless $I5021 goto if2147_else3794 
    set $P5136, fb_tmp_688["%REG"]
    set $P5138, $P5136
    goto if2147_end3795
  if2147_else3794:
    null $P5137
    set $P5138, $P5137
  if2147_end3795:
    unless_null $P5138, vivi_21483796
    new $P5139, 'Hash'
    set pkg_viv_tmp_188["%REG"], $P5139
    set $P5138, $P5139
  vivi_21483796:
    unless_null $P5138, vivi_21493797
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_21493797:
    set $P5133, $P5138
  fallback3793:
    set fb_tmp_687, $P5133
    repr_defined $I5020, fb_tmp_687
    unless $I5020 goto if2146_else3791 
    set $P5141, fb_tmp_687["fail"]
    set $P5143, $P5141
    goto if2146_end3792
  if2146_else3791:
    null $P5142
    set $P5143, $P5142
  if2146_end3792:
    unless_null $P5143, vivi_21503798
    nqp_get_sc_object $P5144, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5143, $P5144
  vivi_21503798:
    $P101."push_pirop"("goto", $P5143)
.annotate 'line', 4111
    $P101."push"($P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "subrule" :subid("cuid_136_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4115
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5181 = 'cuid_382_1368096764.976' 
    capture_lex $P5181 
    .lex "$ops", $P101 
    .lex "$name", $P102 
    .lex "$subtype", $P103 
    .lex "$cpn", $P104 
    .lex "@pargs", $P105 
    .lex "@nargs", $P106 
    .lex "$subpost", $P107 
    .lex "$testop", $P108 
    .lex "$captured", $P109 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    .local pmc pkg_viv_tmp_189 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc pkg_viv_tmp_190 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_698 
    .local pmc pkg_viv_tmp_191 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_700 
    .local pmc pkg_viv_tmp_192 
    .local pmc fb_tmp_701 
    .local pmc fb_tmp_702 
    .local pmc pkg_viv_tmp_193 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc pkg_viv_tmp_194 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc pkg_viv_tmp_195 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    .local pmc pkg_viv_tmp_208 
    .local pmc fb_tmp_733 
    .local pmc fb_tmp_734 
    .local pmc pkg_viv_tmp_209 
    .local pmc fb_tmp_735 
    .local pmc fb_tmp_736 
    .local pmc pkg_viv_tmp_210 
    .local pmc fb_tmp_737 
    .local pmc fb_tmp_738 
    .local pmc pkg_viv_tmp_211 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P109, $P5009
.annotate 'line', 4116
    nqp_decontainerize $P5010, _lex_param_0
    find_dynamic_lex $P5011, "%*REG"
    unless_null $P5011, fallback3801
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_189, $P5012
    set fb_tmp_690, pkg_viv_tmp_189
    repr_defined $I5002, fb_tmp_690
    unless $I5002 goto if2152_else3802 
    set $P5014, fb_tmp_690["%REG"]
    set $P5016, $P5014
    goto if2152_end3803
  if2152_else3802:
    null $P5015
    set $P5016, $P5015
  if2152_end3803:
    unless_null $P5016, vivi_21533804
    new $P5017, 'Hash'
    set pkg_viv_tmp_189["%REG"], $P5017
    set $P5016, $P5017
  vivi_21533804:
    unless_null $P5016, vivi_21543805
    die "Contextual %*REG not found"
    box $P5018, "Contextual %*REG not found"
    set $P5016, $P5018
  vivi_21543805:
    set $P5011, $P5016
  fallback3801:
    set fb_tmp_689, $P5011
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if2151_else3799 
    set $P5019, fb_tmp_689["cur"]
    set $P5021, $P5019
    goto if2151_end3800
  if2151_else3799:
    null $P5020
    set $P5021, $P5020
  if2151_end3800:
    unless_null $P5021, vivi_21553806
    nqp_get_sc_object $P5022, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5021, $P5022
  vivi_21553806:
    $P5023 = $P5010."post_new"("Ops", $P5021 :named("result"))
    set $P101, $P5023
.annotate 'line', 4117
    $P5024 = _lex_param_1."name"()
    defined $I5003, $P5024
    unless $I5003 goto if2156_else3807 
    nqp_decontainerize $P5025, _lex_param_0
    $P5026 = _lex_param_1."name"()
    $P5027 = $P5025."escape"($P5026)
    set $P5028, $P5027
    goto if2156_end3808
  if2156_else3807:
    box $P5029, ""
    set $P5028, $P5029
  if2156_end3808:
    set $P102, $P5028
.annotate 'line', 4118
    $P5030 = _lex_param_1."subtype"()
    set $P103, $P5030
.annotate 'line', 4119
    nqp_decontainerize $P5031, _lex_param_0
    set fb_tmp_691, _lex_param_1
    repr_defined $I5004, fb_tmp_691
    unless $I5004 goto if2157_else3809 
    set $P5032, fb_tmp_691[0]
    set $P5034, $P5032
    goto if2157_end3810
  if2157_else3809:
    null $P5033
    set $P5034, $P5033
  if2157_end3810:
    unless_null $P5034, vivi_21583811
    nqp_get_sc_object $P5035, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5034, $P5035
  vivi_21583811:
    $P5036 = $P5031."children"($P5034)
    set $P104, $P5036
    set fb_tmp_692, $P104
    repr_defined $I5006, fb_tmp_692
    unless $I5006 goto if2159_else3813 
    set $P5038, fb_tmp_692[1]
    set $P5040, $P5038
    goto if2159_end3814
  if2159_else3813:
    null $P5039
    set $P5040, $P5039
  if2159_end3814:
    unless_null $P5040, vivi_21603815
    nqp_get_sc_object $P5041, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5040, $P5041
  vivi_21603815:
    set $P5037, $P5040
    defined $I5005, $P5037
    if $I5005, defor3812
    new $P5042, 'ResizablePMCArray'
    set $P5037, $P5042
  defor3812:
    set $P105, $P5037
    set fb_tmp_693, $P104
    repr_defined $I5008, fb_tmp_693
    unless $I5008 goto if2161_else3817 
    set $P5044, fb_tmp_693[2]
    set $P5046, $P5044
    goto if2161_end3818
  if2161_else3817:
    null $P5045
    set $P5046, $P5045
  if2161_end3818:
    unless_null $P5046, vivi_21623819
    nqp_get_sc_object $P5047, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5046, $P5047
  vivi_21623819:
    set $P5043, $P5046
    defined $I5007, $P5043
    if $I5007, defor3816
    new $P5048, 'ResizablePMCArray'
    set $P5043, $P5048
  defor3816:
    set $P106, $P5043
    shift $P5049, $P105
    set $P107, $P5049
.annotate 'line', 4123
    $P5050 = _lex_param_1."negate"()
    unless $P5050 goto if2163_else3820 
    set $S5001, "ge"
    goto if2163_end3821
  if2163_else3820:
    set $S5001, "lt"
  if2163_end3821:
    box $P5051, $S5001
    set $P108, $P5051
    box $P5052, 0
    set $P109, $P5052
.annotate 'line', 4125
    set fb_tmp_694, $P104
    repr_defined $I5009, fb_tmp_694
    unless $I5009 goto if2164_else3822 
    set $P5053, fb_tmp_694[0]
    set $P5055, $P5053
    goto if2164_end3823
  if2164_else3822:
    null $P5054
    set $P5055, $P5054
  if2164_end3823:
    unless_null $P5055, vivi_21653824
    nqp_get_sc_object $P5056, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5055, $P5056
  vivi_21653824:
    $P101."push"($P5055)
.annotate 'line', 4126
    find_dynamic_lex $P5057, "%*REG"
    unless_null $P5057, fallback3827
    nqp_get_sc_object $P5059, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5058, $P5059
    set pkg_viv_tmp_190, $P5058
    set fb_tmp_696, pkg_viv_tmp_190
    repr_defined $I5011, fb_tmp_696
    unless $I5011 goto if2167_else3828 
    set $P5060, fb_tmp_696["%REG"]
    set $P5062, $P5060
    goto if2167_end3829
  if2167_else3828:
    null $P5061
    set $P5062, $P5061
  if2167_end3829:
    unless_null $P5062, vivi_21683830
    new $P5063, 'Hash'
    set pkg_viv_tmp_190["%REG"], $P5063
    set $P5062, $P5063
  vivi_21683830:
    unless_null $P5062, vivi_21693831
    die "Contextual %*REG not found"
    box $P5064, "Contextual %*REG not found"
    set $P5062, $P5064
  vivi_21693831:
    set $P5057, $P5062
  fallback3827:
    set fb_tmp_695, $P5057
    repr_defined $I5010, fb_tmp_695
    unless $I5010 goto if2166_else3825 
    set $P5065, fb_tmp_695["cur"]
    set $P5067, $P5065
    goto if2166_end3826
  if2166_else3825:
    null $P5066
    set $P5067, $P5066
  if2166_end3826:
    unless_null $P5067, vivi_21703832
    nqp_get_sc_object $P5068, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5067, $P5068
  vivi_21703832:
    find_dynamic_lex $P5069, "%*REG"
    unless_null $P5069, fallback3835
    nqp_get_sc_object $P5071, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5070, $P5071
    set pkg_viv_tmp_191, $P5070
    set fb_tmp_698, pkg_viv_tmp_191
    repr_defined $I5013, fb_tmp_698
    unless $I5013 goto if2172_else3836 
    set $P5072, fb_tmp_698["%REG"]
    set $P5074, $P5072
    goto if2172_end3837
  if2172_else3836:
    null $P5073
    set $P5074, $P5073
  if2172_end3837:
    unless_null $P5074, vivi_21733838
    new $P5075, 'Hash'
    set pkg_viv_tmp_191["%REG"], $P5075
    set $P5074, $P5075
  vivi_21733838:
    unless_null $P5074, vivi_21743839
    die "Contextual %*REG not found"
    box $P5076, "Contextual %*REG not found"
    set $P5074, $P5076
  vivi_21743839:
    set $P5069, $P5074
  fallback3835:
    set fb_tmp_697, $P5069
    repr_defined $I5012, fb_tmp_697
    unless $I5012 goto if2171_else3833 
    set $P5077, fb_tmp_697["curclass"]
    set $P5079, $P5077
    goto if2171_end3834
  if2171_else3833:
    null $P5078
    set $P5079, $P5078
  if2171_end3834:
    unless_null $P5079, vivi_21753840
    nqp_get_sc_object $P5080, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5079, $P5080
  vivi_21753840:
    find_dynamic_lex $P5081, "%*REG"
    unless_null $P5081, fallback3843
    nqp_get_sc_object $P5083, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5082, $P5083
    set pkg_viv_tmp_192, $P5082
    set fb_tmp_700, pkg_viv_tmp_192
    repr_defined $I5015, fb_tmp_700
    unless $I5015 goto if2177_else3844 
    set $P5084, fb_tmp_700["%REG"]
    set $P5086, $P5084
    goto if2177_end3845
  if2177_else3844:
    null $P5085
    set $P5086, $P5085
  if2177_end3845:
    unless_null $P5086, vivi_21783846
    new $P5087, 'Hash'
    set pkg_viv_tmp_192["%REG"], $P5087
    set $P5086, $P5087
  vivi_21783846:
    unless_null $P5086, vivi_21793847
    die "Contextual %*REG not found"
    box $P5088, "Contextual %*REG not found"
    set $P5086, $P5088
  vivi_21793847:
    set $P5081, $P5086
  fallback3843:
    set fb_tmp_699, $P5081
    repr_defined $I5014, fb_tmp_699
    unless $I5014 goto if2176_else3841 
    set $P5089, fb_tmp_699["pos"]
    set $P5091, $P5089
    goto if2176_end3842
  if2176_else3841:
    null $P5090
    set $P5091, $P5090
  if2176_end3842:
    unless_null $P5091, vivi_21803848
    nqp_get_sc_object $P5092, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5091, $P5092
  vivi_21803848:
    $P101."push_pirop"("repr_bind_attr_int", $P5067, $P5079, "\"$!pos\"", $P5091)
.annotate 'line', 4127
    find_dynamic_lex $P5093, "%*REG"
    unless_null $P5093, fallback3851
    nqp_get_sc_object $P5095, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5094, $P5095
    set pkg_viv_tmp_193, $P5094
    set fb_tmp_702, pkg_viv_tmp_193
    repr_defined $I5017, fb_tmp_702
    unless $I5017 goto if2182_else3852 
    set $P5096, fb_tmp_702["%REG"]
    set $P5098, $P5096
    goto if2182_end3853
  if2182_else3852:
    null $P5097
    set $P5098, $P5097
  if2182_end3853:
    unless_null $P5098, vivi_21833854
    new $P5099, 'Hash'
    set pkg_viv_tmp_193["%REG"], $P5099
    set $P5098, $P5099
  vivi_21833854:
    unless_null $P5098, vivi_21843855
    die "Contextual %*REG not found"
    box $P5100, "Contextual %*REG not found"
    set $P5098, $P5100
  vivi_21843855:
    set $P5093, $P5098
  fallback3851:
    set fb_tmp_701, $P5093
    repr_defined $I5016, fb_tmp_701
    unless $I5016 goto if2181_else3849 
    set $P5101, fb_tmp_701["cur"]
    set $P5103, $P5101
    goto if2181_end3850
  if2181_else3849:
    null $P5102
    set $P5103, $P5102
  if2181_end3850:
    unless_null $P5103, vivi_21853856
    nqp_get_sc_object $P5104, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5103, $P5104
  vivi_21853856:
    $P101."push_pirop"("callmethod", $P107, $P5103, $P105 :flat, $P106 :flat, "$P11" :named("result"))
.annotate 'line', 4128
    find_dynamic_lex $P5105, "%*REG"
    unless_null $P5105, fallback3859
    nqp_get_sc_object $P5107, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5106, $P5107
    set pkg_viv_tmp_194, $P5106
    set fb_tmp_704, pkg_viv_tmp_194
    repr_defined $I5019, fb_tmp_704
    unless $I5019 goto if2187_else3860 
    set $P5108, fb_tmp_704["%REG"]
    set $P5110, $P5108
    goto if2187_end3861
  if2187_else3860:
    null $P5109
    set $P5110, $P5109
  if2187_end3861:
    unless_null $P5110, vivi_21883862
    new $P5111, 'Hash'
    set pkg_viv_tmp_194["%REG"], $P5111
    set $P5110, $P5111
  vivi_21883862:
    unless_null $P5110, vivi_21893863
    die "Contextual %*REG not found"
    box $P5112, "Contextual %*REG not found"
    set $P5110, $P5112
  vivi_21893863:
    set $P5105, $P5110
  fallback3859:
    set fb_tmp_703, $P5105
    repr_defined $I5018, fb_tmp_703
    unless $I5018 goto if2186_else3857 
    set $P5113, fb_tmp_703["curclass"]
    set $P5115, $P5113
    goto if2186_end3858
  if2186_else3857:
    null $P5114
    set $P5115, $P5114
  if2186_end3858:
    unless_null $P5115, vivi_21903864
    nqp_get_sc_object $P5116, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5115, $P5116
  vivi_21903864:
    $P101."push_pirop"("repr_get_attr_int", "$I11", "$P11", $P5115, "\"$!pos\"")
.annotate 'line', 4129
    find_dynamic_lex $P5117, "%*REG"
    unless_null $P5117, fallback3867
    nqp_get_sc_object $P5119, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5118, $P5119
    set pkg_viv_tmp_195, $P5118
    set fb_tmp_706, pkg_viv_tmp_195
    repr_defined $I5021, fb_tmp_706
    unless $I5021 goto if2192_else3868 
    set $P5120, fb_tmp_706["%REG"]
    set $P5122, $P5120
    goto if2192_end3869
  if2192_else3868:
    null $P5121
    set $P5122, $P5121
  if2192_end3869:
    unless_null $P5122, vivi_21933870
    new $P5123, 'Hash'
    set pkg_viv_tmp_195["%REG"], $P5123
    set $P5122, $P5123
  vivi_21933870:
    unless_null $P5122, vivi_21943871
    die "Contextual %*REG not found"
    box $P5124, "Contextual %*REG not found"
    set $P5122, $P5124
  vivi_21943871:
    set $P5117, $P5122
  fallback3867:
    set fb_tmp_705, $P5117
    repr_defined $I5020, fb_tmp_705
    unless $I5020 goto if2191_else3865 
    set $P5125, fb_tmp_705["fail"]
    set $P5127, $P5125
    goto if2191_end3866
  if2191_else3865:
    null $P5126
    set $P5127, $P5126
  if2191_end3866:
    unless_null $P5127, vivi_21953872
    nqp_get_sc_object $P5128, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5127, $P5128
  vivi_21953872:
    $P101."push_pirop"($P108, "$I11", "0", $P5127)
    set $S5002, $P103
    isne $I5022, $S5002, "zerowidth"
    unless $I5022 goto if2196_end3874 
    .const 'Sub' $P5129 = 'cuid_382_1368096764.976' 
    capture_lex $P5129
    $P5130 = $P5129()
  if2196_end3874:
    isfalse $I5023, $P109
    set $I5025, $I5023
    unless $I5023 goto if2261_end3980 
    set $S5003, $P103
    iseq $I5024, $S5003, "capture"
    set $I5025, $I5024
  if2261_end3980:
    unless $I5025 goto if2260_end3978 
.annotate 'line', 4164
    find_dynamic_lex $P5131, "%*REG"
    unless_null $P5131, fallback3983
    nqp_get_sc_object $P5133, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5132, $P5133
    set pkg_viv_tmp_208, $P5132
    set fb_tmp_732, pkg_viv_tmp_208
    repr_defined $I5027, fb_tmp_732
    unless $I5027 goto if2263_else3984 
    set $P5134, fb_tmp_732["%REG"]
    set $P5136, $P5134
    goto if2263_end3985
  if2263_else3984:
    null $P5135
    set $P5136, $P5135
  if2263_end3985:
    unless_null $P5136, vivi_22643986
    new $P5137, 'Hash'
    set pkg_viv_tmp_208["%REG"], $P5137
    set $P5136, $P5137
  vivi_22643986:
    unless_null $P5136, vivi_22653987
    die "Contextual %*REG not found"
    box $P5138, "Contextual %*REG not found"
    set $P5136, $P5138
  vivi_22653987:
    set $P5131, $P5136
  fallback3983:
    set fb_tmp_731, $P5131
    repr_defined $I5026, fb_tmp_731
    unless $I5026 goto if2262_else3981 
    set $P5139, fb_tmp_731["cur"]
    set $P5141, $P5139
    goto if2262_end3982
  if2262_else3981:
    null $P5140
    set $P5141, $P5140
  if2262_end3982:
    unless_null $P5141, vivi_22663988
    nqp_get_sc_object $P5142, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5141, $P5142
  vivi_22663988:
    find_dynamic_lex $P5143, "%*REG"
    unless_null $P5143, fallback3991
    nqp_get_sc_object $P5145, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5144, $P5145
    set pkg_viv_tmp_209, $P5144
    set fb_tmp_734, pkg_viv_tmp_209
    repr_defined $I5029, fb_tmp_734
    unless $I5029 goto if2268_else3992 
    set $P5146, fb_tmp_734["%REG"]
    set $P5148, $P5146
    goto if2268_end3993
  if2268_else3992:
    null $P5147
    set $P5148, $P5147
  if2268_end3993:
    unless_null $P5148, vivi_22693994
    new $P5149, 'Hash'
    set pkg_viv_tmp_209["%REG"], $P5149
    set $P5148, $P5149
  vivi_22693994:
    unless_null $P5148, vivi_22703995
    die "Contextual %*REG not found"
    box $P5150, "Contextual %*REG not found"
    set $P5148, $P5150
  vivi_22703995:
    set $P5143, $P5148
  fallback3991:
    set fb_tmp_733, $P5143
    repr_defined $I5028, fb_tmp_733
    unless $I5028 goto if2267_else3989 
    set $P5151, fb_tmp_733["cstack"]
    set $P5153, $P5151
    goto if2267_end3990
  if2267_else3989:
    null $P5152
    set $P5153, $P5152
  if2267_end3990:
    unless_null $P5153, vivi_22713996
    nqp_get_sc_object $P5154, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5153, $P5154
  vivi_22713996:
    $P5155 = $P101."push_pirop"("callmethod", "\"!cursor_capture\"", $P5141, "$P11", $P102, $P5153 :named("result"))
  if2260_end3978:
    set $S5004, $P103
    iseq $I5030, $S5004, "zerowidth"
    if $I5030 goto unless2272_end3998 
.annotate 'line', 4167
    find_dynamic_lex $P5156, "%*REG"
    unless_null $P5156, fallback4001
    nqp_get_sc_object $P5158, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5157, $P5158
    set pkg_viv_tmp_210, $P5157
    set fb_tmp_736, pkg_viv_tmp_210
    repr_defined $I5032, fb_tmp_736
    unless $I5032 goto if2274_else4002 
    set $P5159, fb_tmp_736["%REG"]
    set $P5161, $P5159
    goto if2274_end4003
  if2274_else4002:
    null $P5160
    set $P5161, $P5160
  if2274_end4003:
    unless_null $P5161, vivi_22754004
    new $P5162, 'Hash'
    set pkg_viv_tmp_210["%REG"], $P5162
    set $P5161, $P5162
  vivi_22754004:
    unless_null $P5161, vivi_22764005
    die "Contextual %*REG not found"
    box $P5163, "Contextual %*REG not found"
    set $P5161, $P5163
  vivi_22764005:
    set $P5156, $P5161
  fallback4001:
    set fb_tmp_735, $P5156
    repr_defined $I5031, fb_tmp_735
    unless $I5031 goto if2273_else3999 
    set $P5164, fb_tmp_735["pos"]
    set $P5166, $P5164
    goto if2273_end4000
  if2273_else3999:
    null $P5165
    set $P5166, $P5165
  if2273_end4000:
    unless_null $P5166, vivi_22774006
    nqp_get_sc_object $P5167, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5166, $P5167
  vivi_22774006:
    find_dynamic_lex $P5168, "%*REG"
    unless_null $P5168, fallback4009
    nqp_get_sc_object $P5170, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5169, $P5170
    set pkg_viv_tmp_211, $P5169
    set fb_tmp_738, pkg_viv_tmp_211
    repr_defined $I5034, fb_tmp_738
    unless $I5034 goto if2279_else4010 
    set $P5171, fb_tmp_738["%REG"]
    set $P5173, $P5171
    goto if2279_end4011
  if2279_else4010:
    null $P5172
    set $P5173, $P5172
  if2279_end4011:
    unless_null $P5173, vivi_22804012
    new $P5174, 'Hash'
    set pkg_viv_tmp_211["%REG"], $P5174
    set $P5173, $P5174
  vivi_22804012:
    unless_null $P5173, vivi_22814013
    die "Contextual %*REG not found"
    box $P5175, "Contextual %*REG not found"
    set $P5173, $P5175
  vivi_22814013:
    set $P5168, $P5173
  fallback4009:
    set fb_tmp_737, $P5168
    repr_defined $I5033, fb_tmp_737
    unless $I5033 goto if2278_else4007 
    set $P5176, fb_tmp_737["curclass"]
    set $P5178, $P5176
    goto if2278_end4008
  if2278_else4007:
    null $P5177
    set $P5178, $P5177
  if2278_end4008:
    unless_null $P5178, vivi_22824014
    nqp_get_sc_object $P5179, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5178, $P5179
  vivi_22824014:
    $P5180 = $P101."push_pirop"("repr_get_attr_int", $P5166, "$P11", $P5178, "\"$!pos\"")
  unless2272_end3998:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1368096764.976") :anon :lex :outer("cuid_136_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4130
    .const 'Sub' $P5022 = 'cuid_381_1368096764.976' 
    capture_lex $P5022 
    .lex "$rxname", $P101 
    .lex "$passlabel", $P102 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 4131
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    $P5005 = $P5003."unique"("rxsubrule")
    set $P101, $P5005
.annotate 'line', 4132
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    set $S5002, $P101
    concat $S5001, $S5002, "_pass"
    $P5008 = $P5006."post_new"("Label", $S5001 :named("name"))
    set $P102, $P5008
.annotate 'line', 4133
    find_lex $P5009, "$node"
    $P5010 = $P5009."backtrack"()
    set $S5003, $P5010
    iseq $I5001, $S5003, "r"
    unless $I5001 goto if2197_else3875 
    find_lex $P5011, "$subtype"
    set $S5004, $P5011
    iseq $I5002, $S5004, "method"
    box $P5018, $I5002
    set $P5017, $P5018
    if $I5002 goto unless2198_end3878 
.annotate 'line', 4134
.annotate 'line', 4135
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$ops"
    $P5012."regex_mark"($P5014, $P102, -1, 0)
.annotate 'line', 4136
    find_lex $P5015, "$ops"
    $P5016 = $P5015."push"($P102)
    set $P5017, $P5016
  unless2198_end3878:
    set $P5021, $P5017
    goto if2197_end3876
  if2197_else3875:
    .const 'Sub' $P5019 = 'cuid_381_1368096764.976' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
  if2197_end3876:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1368096764.976") :anon :lex :outer("cuid_382_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4139
    .lex "$backlabel", $P101 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    .local pmc pkg_viv_tmp_196 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    .local pmc pkg_viv_tmp_197 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc pkg_viv_tmp_198 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc pkg_viv_tmp_199 
    .local pmc fb_tmp_715 
    .local pmc fb_tmp_716 
    .local pmc pkg_viv_tmp_200 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc pkg_viv_tmp_201 
    .local pmc fb_tmp_719 
    .local pmc fb_tmp_720 
    .local pmc pkg_viv_tmp_202 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc pkg_viv_tmp_203 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_724 
    .local pmc pkg_viv_tmp_204 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    .local pmc pkg_viv_tmp_205 
    .local pmc fb_tmp_727 
    .local pmc fb_tmp_728 
    .local pmc pkg_viv_tmp_206 
    .local pmc fb_tmp_729 
    .local pmc fb_tmp_730 
    .local pmc pkg_viv_tmp_207 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
.annotate 'line', 4140
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$rxname"
    set $S5002, $P5004
    concat $S5001, $S5002, "_back"
    $P5005 = $P5002."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5005
.annotate 'line', 4141
    find_lex $P5006, "$ops"
    find_lex $P5007, "$passlabel"
    $P5006."push_pirop"("goto", $P5007)
.annotate 'line', 4142
    find_lex $P5008, "$ops"
    $P5008."push"($P101)
.annotate 'line', 4143
    find_lex $P5009, "$ops"
    $P5009."push_pirop"("callmethod", "\"!cursor_next\"", "$P11", "$P11" :named("result"))
.annotate 'line', 4144
    find_lex $P5010, "$ops"
    find_dynamic_lex $P5011, "%*REG"
    unless_null $P5011, fallback3881
    nqp_get_sc_object $P5013, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_196, $P5012
    set fb_tmp_708, pkg_viv_tmp_196
    repr_defined $I5002, fb_tmp_708
    unless $I5002 goto if2200_else3882 
    set $P5014, fb_tmp_708["%REG"]
    set $P5016, $P5014
    goto if2200_end3883
  if2200_else3882:
    null $P5015
    set $P5016, $P5015
  if2200_end3883:
    unless_null $P5016, vivi_22013884
    new $P5017, 'Hash'
    set pkg_viv_tmp_196["%REG"], $P5017
    set $P5016, $P5017
  vivi_22013884:
    unless_null $P5016, vivi_22023885
    die "Contextual %*REG not found"
    box $P5018, "Contextual %*REG not found"
    set $P5016, $P5018
  vivi_22023885:
    set $P5011, $P5016
  fallback3881:
    set fb_tmp_707, $P5011
    repr_defined $I5001, fb_tmp_707
    unless $I5001 goto if2199_else3879 
    set $P5019, fb_tmp_707["curclass"]
    set $P5021, $P5019
    goto if2199_end3880
  if2199_else3879:
    null $P5020
    set $P5021, $P5020
  if2199_end3880:
    unless_null $P5021, vivi_22033886
    nqp_get_sc_object $P5022, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5021, $P5022
  vivi_22033886:
    $P5010."push_pirop"("repr_get_attr_int", "$I11", "$P11", $P5021, "\"$!pos\"")
.annotate 'line', 4145
    find_lex $P5023, "$ops"
    find_lex $P5024, "$testop"
    find_dynamic_lex $P5025, "%*REG"
    unless_null $P5025, fallback3889
    nqp_get_sc_object $P5027, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5026, $P5027
    set pkg_viv_tmp_197, $P5026
    set fb_tmp_710, pkg_viv_tmp_197
    repr_defined $I5004, fb_tmp_710
    unless $I5004 goto if2205_else3890 
    set $P5028, fb_tmp_710["%REG"]
    set $P5030, $P5028
    goto if2205_end3891
  if2205_else3890:
    null $P5029
    set $P5030, $P5029
  if2205_end3891:
    unless_null $P5030, vivi_22063892
    new $P5031, 'Hash'
    set pkg_viv_tmp_197["%REG"], $P5031
    set $P5030, $P5031
  vivi_22063892:
    unless_null $P5030, vivi_22073893
    die "Contextual %*REG not found"
    box $P5032, "Contextual %*REG not found"
    set $P5030, $P5032
  vivi_22073893:
    set $P5025, $P5030
  fallback3889:
    set fb_tmp_709, $P5025
    repr_defined $I5003, fb_tmp_709
    unless $I5003 goto if2204_else3887 
    set $P5033, fb_tmp_709["fail"]
    set $P5035, $P5033
    goto if2204_end3888
  if2204_else3887:
    null $P5034
    set $P5035, $P5034
  if2204_end3888:
    unless_null $P5035, vivi_22083894
    nqp_get_sc_object $P5036, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5035, $P5036
  vivi_22083894:
    $P5023."push_pirop"($P5024, "$I11", "0", $P5035)
.annotate 'line', 4146
    find_lex $P5037, "$ops"
    find_lex $P5038, "$passlabel"
    $P5037."push"($P5038)
    find_lex $P5039, "$subtype"
    set $S5003, $P5039
    iseq $I5005, $S5003, "capture"
    unless $I5005 goto if2209_else3895 
.annotate 'line', 4147
.annotate 'line', 4148
    find_lex $P5040, "$ops"
    find_dynamic_lex $P5041, "%*REG"
    unless_null $P5041, fallback3899
    nqp_get_sc_object $P5043, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_198, $P5042
    set fb_tmp_712, pkg_viv_tmp_198
    repr_defined $I5007, fb_tmp_712
    unless $I5007 goto if2211_else3900 
    set $P5044, fb_tmp_712["%REG"]
    set $P5046, $P5044
    goto if2211_end3901
  if2211_else3900:
    null $P5045
    set $P5046, $P5045
  if2211_end3901:
    unless_null $P5046, vivi_22123902
    new $P5047, 'Hash'
    set pkg_viv_tmp_198["%REG"], $P5047
    set $P5046, $P5047
  vivi_22123902:
    unless_null $P5046, vivi_22133903
    die "Contextual %*REG not found"
    box $P5048, "Contextual %*REG not found"
    set $P5046, $P5048
  vivi_22133903:
    set $P5041, $P5046
  fallback3899:
    set fb_tmp_711, $P5041
    repr_defined $I5006, fb_tmp_711
    unless $I5006 goto if2210_else3897 
    set $P5049, fb_tmp_711["cur"]
    set $P5051, $P5049
    goto if2210_end3898
  if2210_else3897:
    null $P5050
    set $P5051, $P5050
  if2210_end3898:
    unless_null $P5051, vivi_22143904
    nqp_get_sc_object $P5052, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5051, $P5052
  vivi_22143904:
    find_lex $P5053, "$name"
    find_dynamic_lex $P5054, "%*REG"
    unless_null $P5054, fallback3907
    nqp_get_sc_object $P5056, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5055, $P5056
    set pkg_viv_tmp_199, $P5055
    set fb_tmp_714, pkg_viv_tmp_199
    repr_defined $I5009, fb_tmp_714
    unless $I5009 goto if2216_else3908 
    set $P5057, fb_tmp_714["%REG"]
    set $P5059, $P5057
    goto if2216_end3909
  if2216_else3908:
    null $P5058
    set $P5059, $P5058
  if2216_end3909:
    unless_null $P5059, vivi_22173910
    new $P5060, 'Hash'
    set pkg_viv_tmp_199["%REG"], $P5060
    set $P5059, $P5060
  vivi_22173910:
    unless_null $P5059, vivi_22183911
    die "Contextual %*REG not found"
    box $P5061, "Contextual %*REG not found"
    set $P5059, $P5061
  vivi_22183911:
    set $P5054, $P5059
  fallback3907:
    set fb_tmp_713, $P5054
    repr_defined $I5008, fb_tmp_713
    unless $I5008 goto if2215_else3905 
    set $P5062, fb_tmp_713["cstack"]
    set $P5064, $P5062
    goto if2215_end3906
  if2215_else3905:
    null $P5063
    set $P5064, $P5063
  if2215_end3906:
    unless_null $P5064, vivi_22193912
    nqp_get_sc_object $P5065, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5064, $P5065
  vivi_22193912:
    $P5040."push_pirop"("callmethod", "\"!cursor_capture\"", $P5051, "$P11", $P5053, $P5064 :named("result"))
    box $P5066, 1
    store_lex "$captured", $P5066
    goto if2209_end3896
  if2209_else3895:
.annotate 'line', 4152
.annotate 'line', 4153
    find_lex $P5067, "$ops"
    find_dynamic_lex $P5068, "%*REG"
    unless_null $P5068, fallback3915
    nqp_get_sc_object $P5070, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5069, $P5070
    set pkg_viv_tmp_200, $P5069
    set fb_tmp_716, pkg_viv_tmp_200
    repr_defined $I5011, fb_tmp_716
    unless $I5011 goto if2221_else3916 
    set $P5071, fb_tmp_716["%REG"]
    set $P5073, $P5071
    goto if2221_end3917
  if2221_else3916:
    null $P5072
    set $P5073, $P5072
  if2221_end3917:
    unless_null $P5073, vivi_22223918
    new $P5074, 'Hash'
    set pkg_viv_tmp_200["%REG"], $P5074
    set $P5073, $P5074
  vivi_22223918:
    unless_null $P5073, vivi_22233919
    die "Contextual %*REG not found"
    box $P5075, "Contextual %*REG not found"
    set $P5073, $P5075
  vivi_22233919:
    set $P5068, $P5073
  fallback3915:
    set fb_tmp_715, $P5068
    repr_defined $I5010, fb_tmp_715
    unless $I5010 goto if2220_else3913 
    set $P5076, fb_tmp_715["cur"]
    set $P5078, $P5076
    goto if2220_end3914
  if2220_else3913:
    null $P5077
    set $P5078, $P5077
  if2220_end3914:
    unless_null $P5078, vivi_22243920
    nqp_get_sc_object $P5079, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5078, $P5079
  vivi_22243920:
    find_dynamic_lex $P5080, "%*REG"
    unless_null $P5080, fallback3923
    nqp_get_sc_object $P5082, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5081, $P5082
    set pkg_viv_tmp_201, $P5081
    set fb_tmp_718, pkg_viv_tmp_201
    repr_defined $I5013, fb_tmp_718
    unless $I5013 goto if2226_else3924 
    set $P5083, fb_tmp_718["%REG"]
    set $P5085, $P5083
    goto if2226_end3925
  if2226_else3924:
    null $P5084
    set $P5085, $P5084
  if2226_end3925:
    unless_null $P5085, vivi_22273926
    new $P5086, 'Hash'
    set pkg_viv_tmp_201["%REG"], $P5086
    set $P5085, $P5086
  vivi_22273926:
    unless_null $P5085, vivi_22283927
    die "Contextual %*REG not found"
    box $P5087, "Contextual %*REG not found"
    set $P5085, $P5087
  vivi_22283927:
    set $P5080, $P5085
  fallback3923:
    set fb_tmp_717, $P5080
    repr_defined $I5012, fb_tmp_717
    unless $I5012 goto if2225_else3921 
    set $P5088, fb_tmp_717["cstack"]
    set $P5090, $P5088
    goto if2225_end3922
  if2225_else3921:
    null $P5089
    set $P5090, $P5089
  if2225_end3922:
    unless_null $P5090, vivi_22293928
    nqp_get_sc_object $P5091, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5090, $P5091
  vivi_22293928:
    $P5092 = $P5067."push_pirop"("callmethod", "\"!cursor_push_cstack\"", $P5078, "$P11", $P5090 :named("result"))
  if2209_end3896:
.annotate 'line', 4156
    find_lex $P5093, "$ops"
    $P5093."push_pirop"("set_addr", "$I11", $P101)
.annotate 'line', 4157
    find_lex $P5094, "$ops"
    find_dynamic_lex $P5095, "%*REG"
    unless_null $P5095, fallback3931
    nqp_get_sc_object $P5097, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5096, $P5097
    set pkg_viv_tmp_202, $P5096
    set fb_tmp_720, pkg_viv_tmp_202
    repr_defined $I5015, fb_tmp_720
    unless $I5015 goto if2231_else3932 
    set $P5098, fb_tmp_720["%REG"]
    set $P5100, $P5098
    goto if2231_end3933
  if2231_else3932:
    null $P5099
    set $P5100, $P5099
  if2231_end3933:
    unless_null $P5100, vivi_22323934
    new $P5101, 'Hash'
    set pkg_viv_tmp_202["%REG"], $P5101
    set $P5100, $P5101
  vivi_22323934:
    unless_null $P5100, vivi_22333935
    die "Contextual %*REG not found"
    box $P5102, "Contextual %*REG not found"
    set $P5100, $P5102
  vivi_22333935:
    set $P5095, $P5100
  fallback3931:
    set fb_tmp_719, $P5095
    repr_defined $I5014, fb_tmp_719
    unless $I5014 goto if2230_else3929 
    set $P5103, fb_tmp_719["bstack"]
    set $P5105, $P5103
    goto if2230_end3930
  if2230_else3929:
    null $P5104
    set $P5105, $P5104
  if2230_end3930:
    unless_null $P5105, vivi_22343936
    nqp_get_sc_object $P5106, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5105, $P5106
  vivi_22343936:
    $P5094."push_pirop"("push", $P5105, "$I11")
.annotate 'line', 4158
    find_lex $P5107, "$ops"
    find_dynamic_lex $P5108, "%*REG"
    unless_null $P5108, fallback3939
    nqp_get_sc_object $P5110, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_203, $P5109
    set fb_tmp_722, pkg_viv_tmp_203
    repr_defined $I5017, fb_tmp_722
    unless $I5017 goto if2236_else3940 
    set $P5111, fb_tmp_722["%REG"]
    set $P5113, $P5111
    goto if2236_end3941
  if2236_else3940:
    null $P5112
    set $P5113, $P5112
  if2236_end3941:
    unless_null $P5113, vivi_22373942
    new $P5114, 'Hash'
    set pkg_viv_tmp_203["%REG"], $P5114
    set $P5113, $P5114
  vivi_22373942:
    unless_null $P5113, vivi_22383943
    die "Contextual %*REG not found"
    box $P5115, "Contextual %*REG not found"
    set $P5113, $P5115
  vivi_22383943:
    set $P5108, $P5113
  fallback3939:
    set fb_tmp_721, $P5108
    repr_defined $I5016, fb_tmp_721
    unless $I5016 goto if2235_else3937 
    set $P5116, fb_tmp_721["bstack"]
    set $P5118, $P5116
    goto if2235_end3938
  if2235_else3937:
    null $P5117
    set $P5118, $P5117
  if2235_end3938:
    unless_null $P5118, vivi_22393944
    nqp_get_sc_object $P5119, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5118, $P5119
  vivi_22393944:
    $P5107."push_pirop"("push", $P5118, 0)
.annotate 'line', 4159
    find_lex $P5120, "$ops"
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback3947
    nqp_get_sc_object $P5123, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_204, $P5122
    set fb_tmp_724, pkg_viv_tmp_204
    repr_defined $I5019, fb_tmp_724
    unless $I5019 goto if2241_else3948 
    set $P5124, fb_tmp_724["%REG"]
    set $P5126, $P5124
    goto if2241_end3949
  if2241_else3948:
    null $P5125
    set $P5126, $P5125
  if2241_end3949:
    unless_null $P5126, vivi_22423950
    new $P5127, 'Hash'
    set pkg_viv_tmp_204["%REG"], $P5127
    set $P5126, $P5127
  vivi_22423950:
    unless_null $P5126, vivi_22433951
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_22433951:
    set $P5121, $P5126
  fallback3947:
    set fb_tmp_723, $P5121
    repr_defined $I5018, fb_tmp_723
    unless $I5018 goto if2240_else3945 
    set $P5129, fb_tmp_723["bstack"]
    set $P5131, $P5129
    goto if2240_end3946
  if2240_else3945:
    null $P5130
    set $P5131, $P5130
  if2240_end3946:
    unless_null $P5131, vivi_22443952
    nqp_get_sc_object $P5132, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5131, $P5132
  vivi_22443952:
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback3955
    nqp_get_sc_object $P5135, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_205, $P5134
    set fb_tmp_726, pkg_viv_tmp_205
    repr_defined $I5021, fb_tmp_726
    unless $I5021 goto if2246_else3956 
    set $P5136, fb_tmp_726["%REG"]
    set $P5138, $P5136
    goto if2246_end3957
  if2246_else3956:
    null $P5137
    set $P5138, $P5137
  if2246_end3957:
    unless_null $P5138, vivi_22473958
    new $P5139, 'Hash'
    set pkg_viv_tmp_205["%REG"], $P5139
    set $P5138, $P5139
  vivi_22473958:
    unless_null $P5138, vivi_22483959
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_22483959:
    set $P5133, $P5138
  fallback3955:
    set fb_tmp_725, $P5133
    repr_defined $I5020, fb_tmp_725
    unless $I5020 goto if2245_else3953 
    set $P5141, fb_tmp_725["pos"]
    set $P5143, $P5141
    goto if2245_end3954
  if2245_else3953:
    null $P5142
    set $P5143, $P5142
  if2245_end3954:
    unless_null $P5143, vivi_22493960
    nqp_get_sc_object $P5144, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5143, $P5144
  vivi_22493960:
    $P5120."push_pirop"("push", $P5131, $P5143)
.annotate 'line', 4160
    find_lex $P5145, "$ops"
    find_dynamic_lex $P5146, "%*REG"
    unless_null $P5146, fallback3963
    nqp_get_sc_object $P5148, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5147, $P5148
    set pkg_viv_tmp_206, $P5147
    set fb_tmp_728, pkg_viv_tmp_206
    repr_defined $I5023, fb_tmp_728
    unless $I5023 goto if2251_else3964 
    set $P5149, fb_tmp_728["%REG"]
    set $P5151, $P5149
    goto if2251_end3965
  if2251_else3964:
    null $P5150
    set $P5151, $P5150
  if2251_end3965:
    unless_null $P5151, vivi_22523966
    new $P5152, 'Hash'
    set pkg_viv_tmp_206["%REG"], $P5152
    set $P5151, $P5152
  vivi_22523966:
    unless_null $P5151, vivi_22533967
    die "Contextual %*REG not found"
    box $P5153, "Contextual %*REG not found"
    set $P5151, $P5153
  vivi_22533967:
    set $P5146, $P5151
  fallback3963:
    set fb_tmp_727, $P5146
    repr_defined $I5022, fb_tmp_727
    unless $I5022 goto if2250_else3961 
    set $P5154, fb_tmp_727["cstack"]
    set $P5156, $P5154
    goto if2250_end3962
  if2250_else3961:
    null $P5155
    set $P5156, $P5155
  if2250_end3962:
    unless_null $P5156, vivi_22543968
    nqp_get_sc_object $P5157, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5156, $P5157
  vivi_22543968:
    $P5145."push_pirop"("elements", "$I11", $P5156)
.annotate 'line', 4161
    find_lex $P5158, "$ops"
    find_dynamic_lex $P5159, "%*REG"
    unless_null $P5159, fallback3971
    nqp_get_sc_object $P5161, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5160, $P5161
    set pkg_viv_tmp_207, $P5160
    set fb_tmp_730, pkg_viv_tmp_207
    repr_defined $I5025, fb_tmp_730
    unless $I5025 goto if2256_else3972 
    set $P5162, fb_tmp_730["%REG"]
    set $P5164, $P5162
    goto if2256_end3973
  if2256_else3972:
    null $P5163
    set $P5164, $P5163
  if2256_end3973:
    unless_null $P5164, vivi_22573974
    new $P5165, 'Hash'
    set pkg_viv_tmp_207["%REG"], $P5165
    set $P5164, $P5165
  vivi_22573974:
    unless_null $P5164, vivi_22583975
    die "Contextual %*REG not found"
    box $P5166, "Contextual %*REG not found"
    set $P5164, $P5166
  vivi_22583975:
    set $P5159, $P5164
  fallback3971:
    set fb_tmp_729, $P5159
    repr_defined $I5024, fb_tmp_729
    unless $I5024 goto if2255_else3969 
    set $P5167, fb_tmp_729["bstack"]
    set $P5169, $P5167
    goto if2255_end3970
  if2255_else3969:
    null $P5168
    set $P5169, $P5168
  if2255_end3970:
    unless_null $P5169, vivi_22593976
    nqp_get_sc_object $P5170, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5169, $P5170
  vivi_22593976:
    $P5171 = $P5158."push_pirop"("push", $P5169, "$I11")
    .return ($P5171) 
.end
.HLL "nqp"
.namespace []
.sub "uniprop" :subid("cuid_137_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$cmpop", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc pkg_viv_tmp_212 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc pkg_viv_tmp_213 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc pkg_viv_tmp_214 
    .local pmc fb_tmp_745 
    .local pmc fb_tmp_746 
    .local pmc pkg_viv_tmp_215 
    .local pmc fb_tmp_747 
    .local pmc fb_tmp_748 
    .local pmc fb_tmp_749 
    .local pmc pkg_viv_tmp_216 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    .local pmc pkg_viv_tmp_217 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
    .local pmc pkg_viv_tmp_218 
    .local pmc fb_tmp_754 
    .local pmc fb_tmp_755 
    .local pmc pkg_viv_tmp_219 
    nqp_get_sc_object $P5001, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P102, $P5002
.annotate 'line', 4173
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback4017
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_212, $P5005
    set fb_tmp_740, pkg_viv_tmp_212
    repr_defined $I5002, fb_tmp_740
    unless $I5002 goto if2284_else4018 
    set $P5007, fb_tmp_740["%REG"]
    set $P5009, $P5007
    goto if2284_end4019
  if2284_else4018:
    null $P5008
    set $P5009, $P5008
  if2284_end4019:
    unless_null $P5009, vivi_22854020
    new $P5010, 'Hash'
    set pkg_viv_tmp_212["%REG"], $P5010
    set $P5009, $P5010
  vivi_22854020:
    unless_null $P5009, vivi_22864021
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_22864021:
    set $P5004, $P5009
  fallback4017:
    set fb_tmp_739, $P5004
    repr_defined $I5001, fb_tmp_739
    unless $I5001 goto if2283_else4015 
    set $P5012, fb_tmp_739["cur"]
    set $P5014, $P5012
    goto if2283_end4016
  if2283_else4015:
    null $P5013
    set $P5014, $P5013
  if2283_end4016:
    unless_null $P5014, vivi_22874022
    nqp_get_sc_object $P5015, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5014, $P5015
  vivi_22874022:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 4174
    $P5017 = _lex_param_1."negate"()
    unless $P5017 goto if2288_else4023 
    set $S5001, "ne"
    goto if2288_end4024
  if2288_else4023:
    set $S5001, "eq"
  if2288_end4024:
    box $P5018, $S5001
    set $P102, $P5018
.annotate 'line', 4175
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback4027
    nqp_get_sc_object $P5021, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_213, $P5020
    set fb_tmp_742, pkg_viv_tmp_213
    repr_defined $I5004, fb_tmp_742
    unless $I5004 goto if2290_else4028 
    set $P5022, fb_tmp_742["%REG"]
    set $P5024, $P5022
    goto if2290_end4029
  if2290_else4028:
    null $P5023
    set $P5024, $P5023
  if2290_end4029:
    unless_null $P5024, vivi_22914030
    new $P5025, 'Hash'
    set pkg_viv_tmp_213["%REG"], $P5025
    set $P5024, $P5025
  vivi_22914030:
    unless_null $P5024, vivi_22924031
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_22924031:
    set $P5019, $P5024
  fallback4027:
    set fb_tmp_741, $P5019
    repr_defined $I5003, fb_tmp_741
    unless $I5003 goto if2289_else4025 
    set $P5027, fb_tmp_741["pos"]
    set $P5029, $P5027
    goto if2289_end4026
  if2289_else4025:
    null $P5028
    set $P5029, $P5028
  if2289_end4026:
    unless_null $P5029, vivi_22934032
    nqp_get_sc_object $P5030, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5029, $P5030
  vivi_22934032:
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback4035
    nqp_get_sc_object $P5033, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_214, $P5032
    set fb_tmp_744, pkg_viv_tmp_214
    repr_defined $I5006, fb_tmp_744
    unless $I5006 goto if2295_else4036 
    set $P5034, fb_tmp_744["%REG"]
    set $P5036, $P5034
    goto if2295_end4037
  if2295_else4036:
    null $P5035
    set $P5036, $P5035
  if2295_end4037:
    unless_null $P5036, vivi_22964038
    new $P5037, 'Hash'
    set pkg_viv_tmp_214["%REG"], $P5037
    set $P5036, $P5037
  vivi_22964038:
    unless_null $P5036, vivi_22974039
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_22974039:
    set $P5031, $P5036
  fallback4035:
    set fb_tmp_743, $P5031
    repr_defined $I5005, fb_tmp_743
    unless $I5005 goto if2294_else4033 
    set $P5039, fb_tmp_743["eos"]
    set $P5041, $P5039
    goto if2294_end4034
  if2294_else4033:
    null $P5040
    set $P5041, $P5040
  if2294_end4034:
    unless_null $P5041, vivi_22984040
    nqp_get_sc_object $P5042, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5041, $P5042
  vivi_22984040:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback4043
    nqp_get_sc_object $P5045, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_215, $P5044
    set fb_tmp_746, pkg_viv_tmp_215
    repr_defined $I5008, fb_tmp_746
    unless $I5008 goto if2300_else4044 
    set $P5046, fb_tmp_746["%REG"]
    set $P5048, $P5046
    goto if2300_end4045
  if2300_else4044:
    null $P5047
    set $P5048, $P5047
  if2300_end4045:
    unless_null $P5048, vivi_23014046
    new $P5049, 'Hash'
    set pkg_viv_tmp_215["%REG"], $P5049
    set $P5048, $P5049
  vivi_23014046:
    unless_null $P5048, vivi_23024047
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_23024047:
    set $P5043, $P5048
  fallback4043:
    set fb_tmp_745, $P5043
    repr_defined $I5007, fb_tmp_745
    unless $I5007 goto if2299_else4041 
    set $P5051, fb_tmp_745["fail"]
    set $P5053, $P5051
    goto if2299_end4042
  if2299_else4041:
    null $P5052
    set $P5053, $P5052
  if2299_end4042:
    unless_null $P5053, vivi_23034048
    nqp_get_sc_object $P5054, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5053, $P5054
  vivi_23034048:
    $P101."push_pirop"("ge", $P5029, $P5041, $P5053)
.annotate 'line', 4176
    set fb_tmp_747, _lex_param_1
    repr_defined $I5009, fb_tmp_747
    unless $I5009 goto if2304_else4049 
    set $P5055, fb_tmp_747[0]
    set $P5057, $P5055
    goto if2304_end4050
  if2304_else4049:
    null $P5056
    set $P5057, $P5056
  if2304_end4050:
    unless_null $P5057, vivi_23054051
    nqp_get_sc_object $P5058, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5057, $P5058
  vivi_23054051:
    set $S5004, $P5057
    concat $S5003, "\"", $S5004
    concat $S5002, $S5003, "\""
    $P101."push_pirop"("assign", "$S10", $S5002)
.annotate 'line', 4177
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback4054
    nqp_get_sc_object $P5061, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_216, $P5060
    set fb_tmp_749, pkg_viv_tmp_216
    repr_defined $I5011, fb_tmp_749
    unless $I5011 goto if2307_else4055 
    set $P5062, fb_tmp_749["%REG"]
    set $P5064, $P5062
    goto if2307_end4056
  if2307_else4055:
    null $P5063
    set $P5064, $P5063
  if2307_end4056:
    unless_null $P5064, vivi_23084057
    new $P5065, 'Hash'
    set pkg_viv_tmp_216["%REG"], $P5065
    set $P5064, $P5065
  vivi_23084057:
    unless_null $P5064, vivi_23094058
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_23094058:
    set $P5059, $P5064
  fallback4054:
    set fb_tmp_748, $P5059
    repr_defined $I5010, fb_tmp_748
    unless $I5010 goto if2306_else4052 
    set $P5067, fb_tmp_748["tgt"]
    set $P5069, $P5067
    goto if2306_end4053
  if2306_else4052:
    null $P5068
    set $P5069, $P5068
  if2306_end4053:
    unless_null $P5069, vivi_23104059
    nqp_get_sc_object $P5070, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5069, $P5070
  vivi_23104059:
    find_dynamic_lex $P5071, "%*REG"
    unless_null $P5071, fallback4062
    nqp_get_sc_object $P5073, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5072, $P5073
    set pkg_viv_tmp_217, $P5072
    set fb_tmp_751, pkg_viv_tmp_217
    repr_defined $I5013, fb_tmp_751
    unless $I5013 goto if2312_else4063 
    set $P5074, fb_tmp_751["%REG"]
    set $P5076, $P5074
    goto if2312_end4064
  if2312_else4063:
    null $P5075
    set $P5076, $P5075
  if2312_end4064:
    unless_null $P5076, vivi_23134065
    new $P5077, 'Hash'
    set pkg_viv_tmp_217["%REG"], $P5077
    set $P5076, $P5077
  vivi_23134065:
    unless_null $P5076, vivi_23144066
    die "Contextual %*REG not found"
    box $P5078, "Contextual %*REG not found"
    set $P5076, $P5078
  vivi_23144066:
    set $P5071, $P5076
  fallback4062:
    set fb_tmp_750, $P5071
    repr_defined $I5012, fb_tmp_750
    unless $I5012 goto if2311_else4060 
    set $P5079, fb_tmp_750["pos"]
    set $P5081, $P5079
    goto if2311_end4061
  if2311_else4060:
    null $P5080
    set $P5081, $P5080
  if2311_end4061:
    unless_null $P5081, vivi_23154067
    nqp_get_sc_object $P5082, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5081, $P5082
  vivi_23154067:
    $P101."push_pirop"("is_uprop", "$I11", "$S10", $P5069, $P5081)
.annotate 'line', 4178
    find_dynamic_lex $P5083, "%*REG"
    unless_null $P5083, fallback4070
    nqp_get_sc_object $P5085, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5084, $P5085
    set pkg_viv_tmp_218, $P5084
    set fb_tmp_753, pkg_viv_tmp_218
    repr_defined $I5015, fb_tmp_753
    unless $I5015 goto if2317_else4071 
    set $P5086, fb_tmp_753["%REG"]
    set $P5088, $P5086
    goto if2317_end4072
  if2317_else4071:
    null $P5087
    set $P5088, $P5087
  if2317_end4072:
    unless_null $P5088, vivi_23184073
    new $P5089, 'Hash'
    set pkg_viv_tmp_218["%REG"], $P5089
    set $P5088, $P5089
  vivi_23184073:
    unless_null $P5088, vivi_23194074
    die "Contextual %*REG not found"
    box $P5090, "Contextual %*REG not found"
    set $P5088, $P5090
  vivi_23194074:
    set $P5083, $P5088
  fallback4070:
    set fb_tmp_752, $P5083
    repr_defined $I5014, fb_tmp_752
    unless $I5014 goto if2316_else4068 
    set $P5091, fb_tmp_752["fail"]
    set $P5093, $P5091
    goto if2316_end4069
  if2316_else4068:
    null $P5092
    set $P5093, $P5092
  if2316_end4069:
    unless_null $P5093, vivi_23204075
    nqp_get_sc_object $P5094, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5093, $P5094
  vivi_23204075:
    $P101."push_pirop"($P102, "$I11", 0, $P5093)
.annotate 'line', 4179
    $P5095 = _lex_param_1."subtype"()
    set $S5005, $P5095
    iseq $I5016, $S5005, "zerowidth"
    if $I5016 goto unless2321_end4077 
    find_dynamic_lex $P5096, "%*REG"
    unless_null $P5096, fallback4080
    nqp_get_sc_object $P5098, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_219, $P5097
    set fb_tmp_755, pkg_viv_tmp_219
    repr_defined $I5018, fb_tmp_755
    unless $I5018 goto if2323_else4081 
    set $P5099, fb_tmp_755["%REG"]
    set $P5101, $P5099
    goto if2323_end4082
  if2323_else4081:
    null $P5100
    set $P5101, $P5100
  if2323_end4082:
    unless_null $P5101, vivi_23244083
    new $P5102, 'Hash'
    set pkg_viv_tmp_219["%REG"], $P5102
    set $P5101, $P5102
  vivi_23244083:
    unless_null $P5101, vivi_23254084
    die "Contextual %*REG not found"
    box $P5103, "Contextual %*REG not found"
    set $P5101, $P5103
  vivi_23254084:
    set $P5096, $P5101
  fallback4080:
    set fb_tmp_754, $P5096
    repr_defined $I5017, fb_tmp_754
    unless $I5017 goto if2322_else4078 
    set $P5104, fb_tmp_754["pos"]
    set $P5106, $P5104
    goto if2322_end4079
  if2322_else4078:
    null $P5105
    set $P5106, $P5105
  if2322_end4079:
    unless_null $P5106, vivi_23264085
    nqp_get_sc_object $P5107, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5106, $P5107
  vivi_23264085:
    $P5108 = $P101."push_pirop"("inc", $P5106)
  unless2321_end4077:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_138_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4184
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."subrule"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "regex_mark" :subid("cuid_139_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4186
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .lex "$pos", _lex_param_3 
    .lex "$rep", _lex_param_4 
    .local pmc fb_tmp_756 
    .local pmc fb_tmp_757 
    .local pmc pkg_viv_tmp_220 
.annotate 'line', 4187
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback4088
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_220, $P5002
    set fb_tmp_757, pkg_viv_tmp_220
    repr_defined $I5002, fb_tmp_757
    unless $I5002 goto if2328_else4089 
    set $P5004, fb_tmp_757["%REG"]
    set $P5006, $P5004
    goto if2328_end4090
  if2328_else4089:
    null $P5005
    set $P5006, $P5005
  if2328_end4090:
    unless_null $P5006, vivi_23294091
    new $P5007, 'Hash'
    set pkg_viv_tmp_220["%REG"], $P5007
    set $P5006, $P5007
  vivi_23294091:
    unless_null $P5006, vivi_23304092
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_23304092:
    set $P5001, $P5006
  fallback4088:
    set fb_tmp_756, $P5001
    repr_defined $I5001, fb_tmp_756
    unless $I5001 goto if2327_else4086 
    set $P5009, fb_tmp_756["bstack"]
    set $P5011, $P5009
    goto if2327_end4087
  if2327_else4086:
    null $P5010
    set $P5011, $P5010
  if2327_end4087:
    unless_null $P5011, vivi_23314093
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_23314093:
    $P5013 = _lex_param_1."push_pirop"("nqp_rxmark", $P5011, _lex_param_2, _lex_param_3, _lex_param_4)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "regex_peek" :subid("cuid_140_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4190
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 :slurpy 
    .const 'Sub' $P5018 = 'cuid_383_1368096764.976' 
    capture_lex $P5018 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .lex "@regs", _lex_param_3 
    .local pmc fb_tmp_758 
    .local pmc fb_tmp_759 
    .local pmc pkg_viv_tmp_221 
.annotate 'line', 4191
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback4096
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_221, $P5002
    set fb_tmp_759, pkg_viv_tmp_221
    repr_defined $I5002, fb_tmp_759
    unless $I5002 goto if2333_else4097 
    set $P5004, fb_tmp_759["%REG"]
    set $P5006, $P5004
    goto if2333_end4098
  if2333_else4097:
    null $P5005
    set $P5006, $P5005
  if2333_end4098:
    unless_null $P5006, vivi_23344099
    new $P5007, 'Hash'
    set pkg_viv_tmp_221["%REG"], $P5007
    set $P5006, $P5007
  vivi_23344099:
    unless_null $P5006, vivi_23354100
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_23354100:
    set $P5001, $P5006
  fallback4096:
    set fb_tmp_758, $P5001
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if2332_else4094 
    set $P5009, fb_tmp_758["bstack"]
    set $P5011, $P5009
    goto if2332_end4095
  if2332_else4094:
    null $P5010
    set $P5011, $P5010
  if2332_end4095:
    unless_null $P5011, vivi_23364101
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_23364101:
    _lex_param_1."push_pirop"("nqp_rxpeek", "$I19", $P5011, _lex_param_2)
    set $P5013, _lex_param_3
    iter $P5015, _lex_param_3
  for_next4112:
    unless $P5015, for_done4114
    shift $P5017, $P5015
  for_redo4113:
    .const 'Sub' $P5016 = 'cuid_383_1368096764.976' 
    capture_lex $P5016
    $P5013 = $P5016($P5017)
    goto for_next4112
  for_done4114:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1368096764.976") :anon :lex :outer("cuid_140_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4192
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
    .local pmc pkg_viv_tmp_222 
.annotate 'line', 4193
    find_lex $P5001, "$ops"
    $P5001."push_pirop"("inc", "$I19")
    set $S5001, _lex_param_0
    isne $I5001, $S5001, "*"
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto if2337_end4103 
.annotate 'line', 4194
    find_lex $P5002, "$ops"
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback4106
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_222, $P5004
    set fb_tmp_761, pkg_viv_tmp_222
    repr_defined $I5003, fb_tmp_761
    unless $I5003 goto if2339_else4107 
    set $P5006, fb_tmp_761["%REG"]
    set $P5008, $P5006
    goto if2339_end4108
  if2339_else4107:
    null $P5007
    set $P5008, $P5007
  if2339_end4108:
    unless_null $P5008, vivi_23404109
    new $P5009, 'Hash'
    set pkg_viv_tmp_222["%REG"], $P5009
    set $P5008, $P5009
  vivi_23404109:
    unless_null $P5008, vivi_23414110
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_23414110:
    set $P5003, $P5008
  fallback4106:
    set fb_tmp_760, $P5003
    repr_defined $I5002, fb_tmp_760
    unless $I5002 goto if2338_else4104 
    set $P5011, fb_tmp_760["bstack"]
    set $P5013, $P5011
    goto if2338_end4105
  if2338_else4104:
    null $P5012
    set $P5013, $P5012
  if2338_end4105:
    unless_null $P5013, vivi_23424111
    nqp_get_sc_object $P5014, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5013, $P5014
  vivi_23424111:
    set $S5003, $P5013
    concat $S5002, $S5003, "[$I19]"
    $P5015 = $P5002."push_pirop"("set", _lex_param_0, $S5002)
    set $P5016, $P5015
  if2337_end4103:
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "regex_commit" :subid("cuid_141_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4198
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_763 
    .local pmc pkg_viv_tmp_223 
.annotate 'line', 4199
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback4117
    nqp_get_sc_object $P5003, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_223, $P5002
    set fb_tmp_763, pkg_viv_tmp_223
    repr_defined $I5002, fb_tmp_763
    unless $I5002 goto if2344_else4118 
    set $P5004, fb_tmp_763["%REG"]
    set $P5006, $P5004
    goto if2344_end4119
  if2344_else4118:
    null $P5005
    set $P5006, $P5005
  if2344_end4119:
    unless_null $P5006, vivi_23454120
    new $P5007, 'Hash'
    set pkg_viv_tmp_223["%REG"], $P5007
    set $P5006, $P5007
  vivi_23454120:
    unless_null $P5006, vivi_23464121
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_23464121:
    set $P5001, $P5006
  fallback4117:
    set fb_tmp_762, $P5001
    repr_defined $I5001, fb_tmp_762
    unless $I5001 goto if2343_else4115 
    set $P5009, fb_tmp_762["bstack"]
    set $P5011, $P5009
    goto if2343_end4116
  if2343_else4115:
    null $P5010
    set $P5011, $P5010
  if2343_end4116:
    unless_null $P5011, vivi_23474122
    nqp_get_sc_object $P5012, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set $P5011, $P5012
  vivi_23474122:
    $P5013 = _lex_param_1."push_pirop"("nqp_rxcommit", $P5011, _lex_param_2)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_142_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4202
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_36 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$unknown", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_36, default4123
    nqp_get_sc_object $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608", 26
    set _lex_param_2, $P5004
  default4123:
.annotate 'line', 4203
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."name"(_lex_param_1)
    set $S5002, $P5002
    concat $S5001, "Unknown QAST node type ", $S5002
    box $P5003, $S5001
    die $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "operations" :subid("cuid_143_1368096764.976") :anon :lex :outer("cuid_303_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 4206
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1368096764.976") :load :init
.annotate 'file', "src\\stage2\\QAST.nqp"
    .const 'Sub' $P5001 = 'cuid_384_1368096764.976' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_144_1368096764.976" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPHLL")
    nqp_create_sc $P5001, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src\\stage2\\QAST.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "PIRT"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "A66DAB3950291FC0EAA2AB82210C556515DC369E-1368096755.284"
    push $P5004, "src\\stage2\\QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "F783F80A00A78807EF6CEB622641982C2108FA3C-1368096751.608"
    push $P5004, "src\\stage2\\NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "result"
    push $P5004, "$!result"
    push $P5004, "children_pir"
    push $P5004, "escape"
    push $P5004, "push"
    push $P5004, "push_pirop"
    push $P5004, "subid"
    push $P5004, "pirflags"
    push $P5004, "name"
    push $P5004, "loadlibs"
    push $P5004, "hll"
    push $P5004, "namespace"
    push $P5004, "close_sub"
    push $P5004, "pir"
    push $P5004, "collect_sub_pir_into"
    push $P5004, "@!children"
    push $P5004, "$!subid"
    push $P5004, "$!pirflags"
    push $P5004, "$!name"
    push $P5004, "$!hll"
    push $P5004, "@!namespace"
    push $P5004, "@!loadlibs"
    push $P5004, "@!nested_blocks"
    push $P5004, "$!cached_pir"
    push $P5004, "node"
    push $P5004, "$!node"
    push $P5004, "compile_op"
    push $P5004, "compile_pirop"
    push $P5004, "add_core_op"
    push $P5004, "add_hll_op"
    push $P5004, "add_core_pirop_mapping"
    push $P5004, "add_hll_pirop_mapping"
    push $P5004, "set_core_op_inlinability"
    push $P5004, "set_hll_op_inlinability"
    push $P5004, "is_inlinable"
    push $P5004, "set_core_op_result_type"
    push $P5004, "set_hll_op_result_type"
    push $P5004, "attach_result_type"
    push $P5004, "add_hll_box"
    push $P5004, "add_hll_unbox"
    push $P5004, "box"
    push $P5004, "unbox"
    push $P5004, "BUILD"
    push $P5004, "44EC971A952399250B30F01CDA98C0643949C034-1368096759.773"
    push $P5004, "src\\stage2\\gen\\NQPHLL.nqp"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "panic"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "parse"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "default_backend"
    push $P5004, "source_for_node"
    push $P5004, "post"
    push $P5004, "type_to_register_type"
    push $P5004, "force_return_boxing_for_hll"
    push $P5004, "unique"
    push $P5004, "rxescape"
    push $P5004, "as_post"
    push $P5004, "deserialization_code"
    push $P5004, "block_lex_values_to_post_des"
    push $P5004, "compile_all_the_stmts"
    push $P5004, "apply_context"
    push $P5004, "compile_var"
    push $P5004, "as_post_clear_bindval"
    push $P5004, "coerce"
    push $P5004, "infer_type"
    push $P5004, "children"
    push $P5004, "regex_post"
    push $P5004, "post_new"
    push $P5004, "alt"
    push $P5004, "altseq"
    push $P5004, "anchor"
    push $P5004, "dba"
    push $P5004, "cclass"
    push $P5004, "concat"
    push $P5004, "conj"
    push $P5004, "conjseq"
    push $P5004, "enumcharlist"
    push $P5004, "literal"
    push $P5004, "pass"
    push $P5004, "qastnode"
    push $P5004, "quant"
    push $P5004, "scan"
    push $P5004, "subcapture"
    push $P5004, "subrule"
    push $P5004, "uniprop"
    push $P5004, "ws"
    push $P5004, "regex_mark"
    push $P5004, "regex_peek"
    push $P5004, "regex_commit"
    push $P5004, "operations"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, "handler_allocator"
    push $P5004, "fresh_p"
    push $P5004, "fresh_s"
    push $P5004, "fresh_i"
    push $P5004, "fresh_n"
    push $P5004, "cur_p"
    push $P5004, "cur_s"
    push $P5004, "cur_i"
    push $P5004, "cur_n"
    push $P5004, "$!cur_p"
    push $P5004, "$!cur_s"
    push $P5004, "$!cur_i"
    push $P5004, "$!cur_n"
    push $P5004, "add_param"
    push $P5004, "add_lexical"
    push $P5004, "add_local"
    push $P5004, "register_lexical"
    push $P5004, "register_local"
    push $P5004, "qast"
    push $P5004, "outer"
    push $P5004, "params"
    push $P5004, "lexicals"
    push $P5004, "locals"
    push $P5004, "lex_reg"
    push $P5004, "local_type"
    push $P5004, "local_type_long"
    push $P5004, "lexical_type"
    push $P5004, "lexical_type_long"
    push $P5004, "reg_type"
    push $P5004, "add_loadlibs"
    push $P5004, "fresh_lex_p"
    push $P5004, "fresh_lex_s"
    push $P5004, "fresh_lex_i"
    push $P5004, "fresh_lex_n"
    push $P5004, "$!qast"
    push $P5004, "$!outer"
    push $P5004, "@!params"
    push $P5004, "@!locals"
    push $P5004, "@!lexicals"
    push $P5004, "%!local_types"
    push $P5004, "%!lexical_types"
    push $P5004, "%!lexical_regs"
    push $P5004, "%!reg_types"
    push $P5004, "$!param_idx"
    push $P5004, "$!cur_lex_p"
    push $P5004, "$!cur_lex_s"
    push $P5004, "$!cur_lex_i"
    push $P5004, "$!cur_lex_n"
    push $P5004, ""
    push $P5004, "!INTERPOLATE"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "1F34D876AC58D8D6E96FF7F5789F920923DE9BEC-1368096747.977"
    push $P5004, "src\\stage2\\gen\\nqp-mo.nqp"
    push $P5004, "PIRT::CallResult"
    push $P5004, "get_string"
    push $P5004, "PIRT::Node"
    push $P5004, "PIRT::Sub"
    push $P5004, "nested_blocks"
    push $P5004, "cached_pir"
    push $P5004, "PIRT::Ops"
    push $P5004, "PIRT::Label"
    push $P5004, "QAST::Operations"
    push $P5004, "QAST::Compiler"
    push $P5004, "code"
    push $P5004, "RegAlloc"
    push $P5004, "BlockInfo"
    push $P5004, "357F248892FADB55D7FE8B43050B0FC3614C3042-1368096753.466"
    push $P5004, "src\\stage2\\QASTNode.nqp"
    push $P5004, "CallResult"
    push $P5004, "Node"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "CompileTimeValue"
    push $P5004, "SpecialArg"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    .const 'Sub' $P5005 = 'cuid_384_1368096764.976' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if2348_end4125 
    die "Repossession conflicts occurred during deserialization"
  if2348_end4125:
    .const 'Sub' $P5001 = "cuid_1_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 37
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1368096764.976" 
    nqp_get_sc_object $P5002, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 154
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_144_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "GLOBALish"
    push $P5002, "$?PACKAGE"
    push $P5002, "EXPORT"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 0
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 1
    push $P5003, $P5006
    new $P5007, 'ResizableIntegerArray'
    push $P5007, 0
    push $P5007, 0
    push $P5007, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5007)
    .const "LexInfo" $P5001 = "cuid_147_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 3
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_148_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 6
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 6
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_154_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 16
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_159_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 31
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_162_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 38
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_171_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 43
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_303_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "RegAlloc"
    push $P5002, "BlockInfo"
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 60
    push $P5003, $P5006
    nqp_get_sc_object $P5007, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 60
    push $P5003, $P5007
    new $P5008, 'ResizableIntegerArray'
    push $P5008, 0
    push $P5008, 0
    push $P5008, 0
    push $P5008, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5008)
    .const "LexInfo" $P5001 = "cuid_308_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 61
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_309_1368096764.976"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "FD1FF223AF1547B9553576E9B290E49731A85FDC-1368096765.002", 73
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5007 = $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1368096764.976") :anon :lex :outer("cuid_385_1368096764.976")
.annotate 'file', "src\\stage2\\QAST.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1368096764.976" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1368096764.976" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1368096764.976") :load
.annotate 'file', "src\\stage2\\QAST.nqp"
    .const 'Sub' $P5001 = "cuid_144_1368096764.976" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1368096764.976") :main
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_144_1368096764.976" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end