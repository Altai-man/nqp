.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1383915013.33774") :anon :lex
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5049 = 'cuid_376_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_377_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_378_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_379_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_380_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_381_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_382_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_383_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_384_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_385_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_386_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_410_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_437_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_438_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_448_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_527_1383915013.33774' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_532_1383915013.33774' 
    capture_lex $P5049 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "ParseShared", $P105 
    .lex "NQPCursorRole", $P106 
    .lex "$nqpcomp", $P107 
    .lex "@clo", $P108 
    .lex "&MAIN", $P109 
    .lex "&hll-config", $P110 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P107, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P108, $P5003
    .const 'Sub' $P5004 = 'cuid_376_1383915013.33774' 
    capture_lex $P5004
    set $P109, $P5004
    .const 'Sub' $P5005 = 'cuid_377_1383915013.33774' 
    capture_lex $P5005
    set $P110, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
.annotate 'line', 5
    nqp_get_sc_object $P5010, "04C456E07E9573519FF155C734F8E36BD7F87C46-1383914969.41592", 60
    $P5011 = $P5010."operations"()
    set $P104, $P5011
.annotate 'line', 7
    .const 'Sub' $P5013 = 'cuid_378_1383915013.33774' 
    capture_lex $P5013
    newclosure $P5012, $P5013
    $P104."add_hll_op"("nqp", "preinc", $P5012)
.annotate 'line', 22
    .const 'Sub' $P5015 = 'cuid_379_1383915013.33774' 
    capture_lex $P5015
    newclosure $P5014, $P5015
    $P104."add_hll_op"("nqp", "predec", $P5014)
.annotate 'line', 37
    .const 'Sub' $P5017 = 'cuid_380_1383915013.33774' 
    capture_lex $P5017
    newclosure $P5016, $P5017
    $P104."add_hll_op"("nqp", "postinc", $P5016)
.annotate 'line', 61
    .const 'Sub' $P5019 = 'cuid_381_1383915013.33774' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "postdec", $P5018)
.annotate 'line', 85
    .const 'Sub' $P5021 = 'cuid_382_1383915013.33774' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "numify", $P5020)
.annotate 'line', 89
    .const 'Sub' $P5023 = 'cuid_383_1383915013.33774' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "stringify", $P5022)
.annotate 'line', 93
    .const 'Sub' $P5025 = 'cuid_384_1383915013.33774' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "falsey", $P5024)
.annotate 'line', 110
    .const 'Sub' $P5027 = 'cuid_385_1383915013.33774' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "backendconfig", $P5026)
    .const 'Sub' $P5028 = 'cuid_386_1383915013.33774' 
    capture_lex $P5028
    $P5029 = $P5028()
    .const 'Sub' $P5030 = 'cuid_410_1383915013.33774' 
    capture_lex $P5030
    $P5031 = $P5030()
    .const 'Sub' $P5032 = 'cuid_437_1383915013.33774' 
    capture_lex $P5032
    $P5033 = $P5032()
    .const 'Sub' $P5034 = 'cuid_438_1383915013.33774' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_448_1383915013.33774' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_527_1383915013.33774' 
    capture_lex $P5038
    $P5039 = $P5038()
    .const 'Sub' $P5040 = 'cuid_532_1383915013.33774' 
    capture_lex $P5040
    $P5041 = $P5040()
.annotate 'line', 3579
    nqp_get_sc_object $P5042, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 382
    $P5043 = $P5042."new"()
    set $P107, $P5043
.annotate 'line', 3580
    $P107."language"("nqp")
.annotate 'line', 3581
    nqp_get_sc_object $P5044, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P107."parsegrammar"($P5044)
.annotate 'line', 3582
    nqp_get_sc_object $P5045, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 254
    $P107."parseactions"($P5045)
.annotate 'line', 3583
    $P5046 = $P107."config"()
    "&hll-config"($P5046)
.annotate 'line', 3585
    $P107."addstage"("optimize", "ast" :named("after"))
.annotate 'line', 3588
    $P5047 = $P107."commandline_options"()
    set $P108, $P5047
.annotate 'line', 3589
    $P108."push"("parsetrace")
.annotate 'line', 3590
    $P108."push"("setting=s")
.annotate 'line', 3591
    $P108."push"("setting-path=s")
.annotate 'line', 3592
    $P108."push"("module-path=s")
.annotate 'line', 3593
    $P108."push"("no-regex-lib")
.annotate 'line', 3594
    $P108."push"("stable-sc")
.annotate 'line', 3595
    $P108."push"("optimize=s")
.annotate 'line', 3596
    $P108."push"("vmlibs=s")
.annotate 'line', 3597
    $P108."push"("dynext=s")
    unless _lex_param_0 goto if3373_end7361 
    $P5048 = "&MAIN"(_lex_param_0 :flat)
  if3373_end7361:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_376_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3600
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3602
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3609
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_377_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3613
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.10-207-g1f83be8"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-11-08T12:50:13Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 7
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set fb_tmp_1, _lex_param_1
    repr_defined $I5001, fb_tmp_1
    unless $I5001 goto if12_else14 
    set $P5002, fb_tmp_1[0]
    set $P5004, $P5002
    goto if12_end15
  if12_else14:
    null $P5003
    set $P5004, $P5003
  if12_end15:
    unless_null $P5004, vivi_1316
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_1316:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless14_end18 
.annotate 'line', 9
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless14_end18:
.annotate 'line', 12
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 15
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 18
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 22
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set fb_tmp_2, _lex_param_1
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if15_else19 
    set $P5002, fb_tmp_2[0]
    set $P5004, $P5002
    goto if15_end20
  if15_else19:
    null $P5003
    set $P5004, $P5003
  if15_end20:
    unless_null $P5004, vivi_1621
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_1621:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless17_end23 
.annotate 'line', 24
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless17_end23:
.annotate 'line', 27
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 30
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 33
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 37
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set fb_tmp_3, _lex_param_1
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if18_else24 
    set $P5003, fb_tmp_3[0]
    set $P5005, $P5003
    goto if18_end25
  if18_else24:
    null $P5004
    set $P5005, $P5004
  if18_end25:
    unless_null $P5005, vivi_1926
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_1926:
    set $P101, $P5005
.annotate 'line', 39
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless20_end28 
.annotate 'line', 40
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless20_end28:
.annotate 'line', 43
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 103
.annotate 'line', 45
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 47
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 50
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 53
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 55
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 56
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set fb_tmp_4, _lex_param_1
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if21_else29 
    set $P5003, fb_tmp_4[0]
    set $P5005, $P5003
    goto if21_end30
  if21_else29:
    null $P5004
    set $P5005, $P5004
  if21_end30:
    unless_null $P5005, vivi_2231
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_2231:
    set $P101, $P5005
.annotate 'line', 63
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless23_end33 
.annotate 'line', 64
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless23_end33:
.annotate 'line', 67
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 103
.annotate 'line', 69
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 71
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 74
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 77
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 79
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 80
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 85
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_5 
.annotate 'line', 86
    set fb_tmp_5, _lex_param_1
    repr_defined $I5001, fb_tmp_5
    unless $I5001 goto if24_else34 
    set $P5001, fb_tmp_5[0]
    set $P5003, $P5001
    goto if24_end35
  if24_else34:
    null $P5002
    set $P5003, $P5002
  if24_end35:
    unless_null $P5003, vivi_2536
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  vivi_2536:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 89
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_6 
.annotate 'line', 90
    set fb_tmp_6, _lex_param_1
    repr_defined $I5001, fb_tmp_6
    unless $I5001 goto if26_else37 
    set $P5001, fb_tmp_6[0]
    set $P5003, $P5001
    goto if26_end38
  if26_else37:
    null $P5002
    set $P5003, $P5002
  if26_end38:
    unless_null $P5003, vivi_2739
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  vivi_2739:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 93
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 94
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback40
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5005, $P5006
    set fb_tmp_7, $P5005
    repr_defined $I5001, fb_tmp_7
    unless $I5001 goto if28_else41 
    set $P5007, fb_tmp_7["$REGALLOC"]
    set $P5009, $P5007
    goto if28_end42
  if28_else41:
    null $P5008
    set $P5009, $P5008
  if28_end42:
    unless_null $P5009, vivi_2943
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_2943:
    unless_null $P5009, vivi_3044
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_3044:
    set $P5004, $P5009
  fallback40:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 95
    nqp_get_sc_object $P5013, "04C456E07E9573519FF155C734F8E36BD7F87C46-1383914969.41592", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 96
    set fb_tmp_8, _lex_param_1
    repr_defined $I5002, fb_tmp_8
    unless $I5002 goto if31_else45 
    set $P5015, fb_tmp_8[0]
    set $P5017, $P5015
    goto if31_end46
  if31_else45:
    null $P5016
    set $P5017, $P5016
  if31_end46:
    unless_null $P5017, vivi_3247
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_3247:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 97
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if33_else48 
.annotate 'line', 98
    $P102."push"($P103)
.annotate 'line', 99
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if33_end49
  if33_else48:
.annotate 'line', 101
.annotate 'line', 102
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 103
    $P102."push"($P103)
.annotate 'line', 104
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if33_end49:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 110
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 111
.annotate 'line', 112
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
.annotate 'line', 113
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5003 = $P5002."new"("list" :named("op"))
.annotate 'line', 114
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
.annotate 'line', 115
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5007 = $P5006."new"("IGLOBALS_CONFIG_HASH" :named("pirconst"))
    $P5008 = $P5001."new"($P5005, $P5007, "positional" :named("scope"), $P5003 :named("fallback"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 124
    .const 'Sub' $P5033 = 'cuid_387_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_1_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_2_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_3_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_4_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_5_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_6_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_7_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_8_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_9_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_10_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_11_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_17_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_18_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_19_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_20_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_21_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_22_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_23_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_24_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_25_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_26_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_27_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_28_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_29_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_30_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_31_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_32_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_33_1383915013.33774' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_34_1383915013.33774' 
    capture_lex $P5033 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "$loader", $P103 
    .lex "&compilee_list", $P104 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_387_1383915013.33774' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_1_1383915013.33774' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_2_1383915013.33774' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_3_1383915013.33774' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_4_1383915013.33774' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_5_1383915013.33774' 
    capture_lex $P5007
    get_hll_global $P5008, "ModuleLoader"
    set $P103, $P5008
    .const 'Sub' $P5009 = 'cuid_6_1383915013.33774' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_7_1383915013.33774' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_8_1383915013.33774' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_9_1383915013.33774' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_10_1383915013.33774' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_11_1383915013.33774' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_17_1383915013.33774' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_18_1383915013.33774' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_19_1383915013.33774' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_20_1383915013.33774' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_21_1383915013.33774' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_22_1383915013.33774' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_23_1383915013.33774' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_24_1383915013.33774' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_25_1383915013.33774' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_26_1383915013.33774' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_27_1383915013.33774' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_28_1383915013.33774' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_29_1383915013.33774' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_30_1383915013.33774' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_31_1383915013.33774' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_32_1383915013.33774' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_33_1383915013.33774' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_34_1383915013.33774' 
    capture_lex $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "compilee_list" :subid("cuid_387_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 643
    .param pmc _lex_param_0 :optional 
    .param int haz_param_1 :opt_flag 
    .lex "@orig", _lex_param_0 
    if haz_param_1, default52
    new $P5003, 'ResizablePMCArray'
    set _lex_param_0, $P5003
  default52:
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if34_else50 
    set $P5002, _lex_param_0
    goto if34_end51
  if34_else50:
    new $P5001, 'ResizablePMCArray'
    set $P5002, $P5001
  if34_end51:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 149
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_388_1383915013.33774' 
    capture_lex $P5039 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_9 
    .local pmc fb_tmp_10 
    .local pmc fb_tmp_11 
    .local pmc pkg_viv_tmp_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", 7, $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", 8, $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", 9, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", 10, $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", 11, $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", 12, $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback59
    nqp_get_sc_object $P5021, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_1, $P5020
    set fb_tmp_11, pkg_viv_tmp_1
    repr_defined $I5004, fb_tmp_11
    unless $I5004 goto if38_else60 
    set $P5022, fb_tmp_11["%COMPILING"]
    set $P5024, $P5022
    goto if38_end61
  if38_else60:
    null $P5023
    set $P5024, $P5023
  if38_end61:
    unless_null $P5024, vivi_3962
    new $P5025, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5025
    set $P5024, $P5025
  vivi_3962:
    unless_null $P5024, vivi_4063
    die "Contextual %*COMPILING not found"
    box $P5026, "Contextual %*COMPILING not found"
    set $P5024, $P5026
  vivi_4063:
    set $P5019, $P5024
  fallback59:
    set fb_tmp_10, $P5019
    repr_defined $I5003, fb_tmp_10
    unless $I5003 goto if37_else57 
    set $P5027, fb_tmp_10["%?OPTIONS"]
    set $P5029, $P5027
    goto if37_end58
  if37_else57:
    null $P5028
    set $P5029, $P5028
  if37_end58:
    unless_null $P5029, vivi_4164
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5029, $P5030
  vivi_4164:
    set fb_tmp_9, $P5029
    repr_defined $I5002, fb_tmp_9
    unless $I5002 goto if36_else55 
    set $P5031, fb_tmp_9["dynext"]
    set $P5033, $P5031
    goto if36_end56
  if36_else55:
    null $P5032
    set $P5033, $P5032
  if36_end56:
    unless_null $P5033, vivi_4265
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5033, $P5034
  vivi_4265:
    defined $I5001, $P5033
    box $P5038, $I5001
    set $P5037, $P5038
    unless $I5001 goto if35_end54 
    .const 'Sub' $P5035 = 'cuid_388_1383915013.33774' 
    capture_lex $P5035
    $P5036 = $P5035()
    set $P5037, $P5036
  if35_end54:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1383915013.33774") :anon :lex :outer("cuid_1_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 157
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_12 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_15 
    .local pmc fb_tmp_16 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback70
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_14, pkg_viv_tmp_2
    repr_defined $I5003, fb_tmp_14
    unless $I5003 goto if45_else71 
    set $P5006, fb_tmp_14["%COMPILING"]
    set $P5008, $P5006
    goto if45_end72
  if45_else71:
    null $P5007
    set $P5008, $P5007
  if45_end72:
    unless_null $P5008, vivi_4673
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_4673:
    unless_null $P5008, vivi_4774
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_4774:
    set $P5003, $P5008
  fallback70:
    set fb_tmp_13, $P5003
    repr_defined $I5002, fb_tmp_13
    unless $I5002 goto if44_else68 
    set $P5011, fb_tmp_13["%?OPTIONS"]
    set $P5013, $P5011
    goto if44_end69
  if44_else68:
    null $P5012
    set $P5013, $P5012
  if44_end69:
    unless_null $P5013, vivi_4875
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_4875:
    set fb_tmp_12, $P5013
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if43_else66 
    set $P5015, fb_tmp_12["dynext"]
    set $P5017, $P5015
    goto if43_end67
  if43_else66:
    null $P5016
    set $P5017, $P5016
  if43_end67:
    unless_null $P5017, vivi_4976
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_4976:
    set $P101, $P5017
    getinterp $P5019
    set fb_tmp_16, $P5019
    repr_defined $I5005, fb_tmp_16
    unless $I5005 goto if51_else79 
    set $P5020, fb_tmp_16[.IGLOBALS_LIB_PATHS]
    set $P5022, $P5020
    goto if51_end80
  if51_else79:
    null $P5021
    set $P5022, $P5021
  if51_end80:
    unless_null $P5022, vivi_5281
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_5281:
    set fb_tmp_15, $P5022
    repr_defined $I5004, fb_tmp_15
    unless $I5004 goto if50_else77 
    set $P5024, fb_tmp_15[.PARROT_LIB_PATH_DYNEXT]
    set $P5026, $P5024
    goto if50_end78
  if50_else77:
    null $P5025
    set $P5026, $P5025
  if50_end78:
    unless_null $P5026, vivi_5382
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_5382:
    set $P102, $P5026
.annotate 'line', 161
    $P5028 = $P102."push"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 166
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_17 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 168
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 108
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS", 7
    set $N5001, $P5008
    unless $N5001 goto if54_end84 
.annotate 'line', 169
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS", 7
    set fb_tmp_17, $P5011
    repr_defined $I5001, fb_tmp_17
    unless $I5001 goto if55_else85 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS", 7
    set $N5002, $P5015
    set $I5003, $N5002
    sub $I5002, $I5003, 1
    set $P5012, fb_tmp_17[$I5002]
    set $P5017, $P5012
    goto if55_end86
  if55_else85:
    null $P5016
    set $P5017, $P5016
  if55_end86:
    unless_null $P5017, vivi_5687
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_5687:
    set $P101["outer"], $P5017
  if54_end84:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS", 7
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS", 7
    set $N5003, $P5024
    set $I5004, $N5003
    set $P5021[$I5004], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 177
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 178
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 7
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 182
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_18 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 7
    set fb_tmp_18, $P5003
    repr_defined $I5001, fb_tmp_18
    unless $I5001 goto if57_else88 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS", 7
    set $N5001, $P5007
    set $I5003, $N5001
    sub $I5002, $I5003, 1
    set $P5004, fb_tmp_18[$I5002]
    set $P5009, $P5004
    goto if57_end89
  if57_else88:
    null $P5008
    set $P5009, $P5008
  if57_end89:
    unless_null $P5009, vivi_5890
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_5890:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 187
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS", 7
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 189
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 199
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_389_1383915013.33774' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_91
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if59_end94 
    .const 'Sub' $P5001 = 'cuid_389_1383915013.33774' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if59_end94:
    goto lexotic_92
  lexotic_91:
    .get_results ($P5003)
  lexotic_92:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1383915013.33774") :anon :lex :outer("cuid_6_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 201
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_21 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback97
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_3, $P5004
    set fb_tmp_20, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_20
    unless $I5002 goto if61_else98 
    set $P5006, fb_tmp_20["%COMPILING"]
    set $P5008, $P5006
    goto if61_end99
  if61_else98:
    null $P5007
    set $P5008, $P5007
  if61_end99:
    unless_null $P5008, vivi_62100
    new $P5009, 'Hash'
    set pkg_viv_tmp_3["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_62100:
    unless_null $P5008, vivi_63101
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_63101:
    set $P5003, $P5008
  fallback97:
    set fb_tmp_19, $P5003
    repr_defined $I5001, fb_tmp_19
    unless $I5001 goto if60_else95 
    set $P5011, fb_tmp_19["%?OPTIONS"]
    set $P5013, $P5011
    goto if60_end96
  if60_else95:
    null $P5012
    set $P5013, $P5012
  if60_end96:
    unless_null $P5013, vivi_64102
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_64102:
.annotate 'line', 206
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 210
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 212
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback103
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set fb_tmp_21, $P5021
    repr_defined $I5003, fb_tmp_21
    unless $I5003 goto if65_else104 
    set $P5023, fb_tmp_21["$UNIT"]
    set $P5025, $P5023
    goto if65_end105
  if65_else104:
    null $P5024
    set $P5025, $P5024
  if65_end105:
    unless_null $P5025, vivi_66106
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_66106:
    unless_null $P5025, vivi_67107
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_67107:
    set $P5020, $P5025
  fallback103:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 213
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 215
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 217
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 219
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 221
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if68_else108 
.annotate 'line', 222
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 223
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 225
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
.annotate 'line', 226
    nqp_get_sc_object $P5047, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 227
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 228
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5052 = $P5051."new"("ModuleLoader.moarvm" :named("value"))
    $P5053 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"), $P5052 :named("moar"))
    $P5054 = $P5045."new"($P5053, "loadbytecode" :named("op"))
    $P5055 = $P5044."new"($P5054, $P102)
    $P5056 = $P5042."add_load_dependency_task"($P5055 :named("deserialize_past"))
    goto if68_end109
  if68_else108:
.annotate 'line', 233
.annotate 'line', 234
    find_lex $P5058, "self"
    nqp_decontainerize $P5057, $P5058
    $P5059 = $P5057."add_fixup_task"($P102 :named("fixup_past"))
  if68_end109:
    getattribute $P5060, $P101, 'lex_pad'
    $P5061 = "RETURN"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 243
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_110
    .lex "RETURN", $P102
.annotate 'line', 245
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 248
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if69_end113 
.annotate 'line', 249
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 250
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 252
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
.annotate 'line', 253
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 254
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 255
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5015 = $P5014."new"("ModuleLoader.moarvm" :named("value"))
    $P5016 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"), $P5015 :named("moar"))
    $P5017 = $P5008."new"($P5016, "loadbytecode" :named("op"))
.annotate 'line', 257
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 259
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 261
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5021 = $P5020."new"("ModuleLoader" :named("value"))
    $P5022 = $P5019."new"($P5021, "getcurhllsym" :named("op"))
.annotate 'line', 263
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5024 = $P5023."new"(_lex_param_1 :named("value"))
    $P5025 = $P5018."new"($P5022, $P5024, "callmethod" :named("op"), "load_module" :named("name"))
    $P5026 = $P5007."new"($P5017, $P5025)
    $P5027 = $P5006."add_load_dependency_task"($P5026 :named("deserialize_past"))
  if69_end113:
    getattribute $P5028, $P101, 'lex_pad'
    $P5029 = "RETURN"($P5028)
    goto lexotic_111
  lexotic_110:
    .get_results ($P5029)
  lexotic_111:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 270
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_390_1383915013.33774' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 271
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next114:
    unless $P5006, for_done116
    shift $P5008, $P5006
  for_redo115:
    .const 'Sub' $P5007 = 'cuid_390_1383915013.33774' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next114
  for_done116:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1383915013.33774") :anon :lex :outer("cuid_8_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 272
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 273
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 279
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_392_1383915013.33774' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 281
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next136:
    unless $P5008, for_done138
    shift $P5010, $P5008
  for_redo137:
    .const 'Sub' $P5009 = 'cuid_392_1383915013.33774' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next136
  for_done138:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1383915013.33774") :anon :lex :outer("cuid_9_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 285
    .param pmc _lex_param_0 
    .const 'Sub' $P5011 = 'cuid_391_1383915013.33774' 
    capture_lex $P5011 
    .lex "$part", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set $S5001, _lex_param_0
    box $P5002, $S5001
    set $P101, $P5002
    find_lex $P5004, "$target"
    get_who $P5003, $P5004
    set $S5002, $P101
    exists $I5001, $P5003[$S5002]
    unless $I5001 goto if70_else117 
.annotate 'line', 287
    find_lex $P5007, "$target"
    get_who $P5006, $P5007
    set $S5003, $P101
    set $P5005, $P5006[$S5003]
    store_lex "$target", $P5005
    set $P5010, $P5005
    goto if70_end118
  if70_else117:
    .const 'Sub' $P5008 = 'cuid_391_1383915013.33774' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if70_end118:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1383915013.33774") :anon :lex :outer("cuid_392_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 290
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_22 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_23 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_24 
    .local pmc pkg_viv_tmp_6 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback121
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_22, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_22
    unless $I5002 goto if72_else122 
    set $P5006, fb_tmp_22["%HOW"]
    set $P5008, $P5006
    goto if72_end123
  if72_else122:
    null $P5007
    set $P5008, $P5007
  if72_end123:
    unless_null $P5008, vivi_73124
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5009
    set $P5008, $P5009
  vivi_73124:
    unless_null $P5008, vivi_74125
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_74125:
    set $P5003, $P5008
  fallback121:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if71_else119 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback126
    nqp_get_sc_object $P5014, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_5, $P5013
    set fb_tmp_23, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_23
    unless $I5003 goto if75_else127 
    set $P5015, fb_tmp_23["%HOW"]
    set $P5017, $P5015
    goto if75_end128
  if75_else127:
    null $P5016
    set $P5017, $P5016
  if75_end128:
    unless_null $P5017, vivi_76129
    new $P5018, 'Hash'
    set pkg_viv_tmp_5["%HOW"], $P5018
    set $P5017, $P5018
  vivi_76129:
    unless_null $P5017, vivi_77130
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_77130:
    set $P5012, $P5017
  fallback126:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if71_end120
  if71_else119:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback131
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_6, $P5022
    set fb_tmp_24, pkg_viv_tmp_6
    repr_defined $I5004, fb_tmp_24
    unless $I5004 goto if78_else132 
    set $P5024, fb_tmp_24["%HOW"]
    set $P5026, $P5024
    goto if78_end133
  if78_else132:
    null $P5025
    set $P5026, $P5025
  if78_end133:
    unless_null $P5026, vivi_79134
    new $P5027, 'Hash'
    set pkg_viv_tmp_6["%HOW"], $P5027
    set $P5026, $P5027
  vivi_79134:
    unless_null $P5026, vivi_80135
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_80135:
    set $P5021, $P5026
  fallback131:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if71_end120:
    set $P101, $P5029
.annotate 'line', 294
    find_lex $P5030, "$part"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 295
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$part"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_25 
.annotate 'line', 305
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 306
    set fb_tmp_25, _lex_param_1
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if81_else139 
    set $P5001, fb_tmp_25[0]
    set $P5003, $P5001
    goto if81_end140
  if81_else139:
    null $P5002
    set $P5003, $P5002
  if81_end140:
    unless_null $P5003, vivi_82141
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  vivi_82141:
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5006 = $P5005."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "static" :named("decl"), _lex_param_3 :named("value"))
    $P5007 = $P5003."push"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 313
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 314
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 316
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 317
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 318
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 320
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 325
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_2 :opt_flag 
    .const 'Sub' $P5083 = 'cuid_12_1383915013.33774' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_396_1383915013.33774' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_397_1383915013.33774' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_398_1383915013.33774' 
    capture_lex $P5083 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    if haz_param_2, default252
    box $P5082, "NQPRoutine"
    set _lex_param_4, $P5082
  default252:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_142
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_90155
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 329
.annotate 'line', 330
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 331
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback144
    nqp_get_sc_object $P5015, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5014, $P5015
    set fb_tmp_26, $P5014
    repr_defined $I5002, fb_tmp_26
    unless $I5002 goto if83_else145 
    set $P5016, fb_tmp_26["$PACKAGE"]
    set $P5018, $P5016
    goto if83_end146
  if83_else145:
    null $P5017
    set $P5018, $P5017
  if83_end146:
    unless_null $P5018, vivi_84147
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_84147:
    unless_null $P5018, vivi_85148
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_85148:
    set $P5013, $P5018
  fallback144:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback149
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set fb_tmp_27, $P5022
    repr_defined $I5003, fb_tmp_27
    unless $I5003 goto if86_else150 
    set $P5024, fb_tmp_27["$PACKAGE"]
    set $P5026, $P5024
    goto if86_end151
  if86_else150:
    null $P5025
    set $P5026, $P5025
  if86_end151:
    unless_null $P5026, vivi_87152
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_87152:
    unless_null $P5026, vivi_88153
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_88153:
    set $P5021, $P5026
  fallback149:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_89154
  catch_handler_90155:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_89154
  skip_handler_89154:
    .const 'Sub' $P5034 = 'cuid_12_1383915013.33774' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if131_end229 
.annotate 'line', 380
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if131_end229:
.annotate 'line', 385
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_45, _lex_param_1
    repr_defined $I5005, fb_tmp_45
    unless $I5005 goto if133_else232 
    set $P5038, fb_tmp_45["compile_time_dummy"]
    set $P5040, $P5038
    goto if133_end233
  if133_else232:
    null $P5039
    set $P5040, $P5039
  if133_end233:
    unless_null $P5040, vivi_134234
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5041
  vivi_134234:
    defined $I5004, $P5040
    unless $I5004 goto if132_else230 
.annotate 'line', 388
    set fb_tmp_46, _lex_param_1
    repr_defined $I5006, fb_tmp_46
    unless $I5006 goto if135_else235 
    set $P5042, fb_tmp_46["compile_time_dummy"]
    set $P5044, $P5042
    goto if135_end236
  if135_else235:
    null $P5043
    set $P5044, $P5043
  if135_end236:
    unless_null $P5044, vivi_136237
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5044, $P5045
  vivi_136237:
    set $P106, $P5044
    goto if132_end231
  if132_else230:
.annotate 'line', 391
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 399
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx", 11
.annotate 'line', 400
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if137_end239 
.annotate 'line', 406
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list", 10
.annotate 'line', 407
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 408
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if138_else240 
    .const 'Sub' $P5059 = 'cuid_396_1383915013.33774' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if138_end241
  if138_else240:
    .const 'Sub' $P5061 = 'cuid_397_1383915013.33774' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if138_end241:
    set $P5064, $P5063
  if137_end239:
  if132_end231:
.annotate 'line', 448
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if143_else248 
    .const 'Sub' $P5066 = 'cuid_398_1383915013.33774' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5081, $P5067
    goto if143_end249
  if143_else248:
.annotate 'line', 487
.annotate 'line', 490
    nqp_get_sc_object $P5068, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 492
    nqp_get_sc_object $P5069, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 494
    nqp_get_sc_object $P5070, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 495
    nqp_get_sc_object $P5074, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 497
    nqp_get_sc_object $P5077, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    $P5080 = "RETURN"($P106)
    set $P5081, $P5080
  if143_end249:
    goto lexotic_143
  lexotic_142:
    .get_results ($P5081)
  lexotic_143:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1383915013.33774") :anon :lex :outer("cuid_17_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 338
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5051 = 'cuid_395_1383915013.33774' 
    capture_lex $P5051 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc pkg_viv_tmp_7 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P106, $P5006
.annotate 'line', 340
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 342
.annotate 'line', 343
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 120
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    find_dynamic_lex $P5015, "$*LINEPOSCACHE"
    unless_null $P5015, fallback156
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5016, $P5017
    set fb_tmp_28, $P5016
    repr_defined $I5001, fb_tmp_28
    unless $I5001 goto if91_else157 
    set $P5018, fb_tmp_28["$LINEPOSCACHE"]
    set $P5020, $P5018
    goto if91_end158
  if91_else157:
    null $P5019
    set $P5020, $P5019
  if91_end158:
    unless_null $P5020, vivi_92159
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_92159:
    unless_null $P5020, vivi_93160
    die "Contextual $*LINEPOSCACHE not found"
    box $P5022, "Contextual $*LINEPOSCACHE not found"
    set $P5020, $P5022
  vivi_93160:
    set $P5015, $P5020
  fallback156:
    find_dynamic_lex $P5023, "%*COMPILING"
    unless_null $P5023, fallback167
    nqp_get_sc_object $P5025, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_7, $P5024
    set fb_tmp_31, pkg_viv_tmp_7
    repr_defined $I5004, fb_tmp_31
    unless $I5004 goto if97_else168 
    set $P5026, fb_tmp_31["%COMPILING"]
    set $P5028, $P5026
    goto if97_end169
  if97_else168:
    null $P5027
    set $P5028, $P5027
  if97_end169:
    unless_null $P5028, vivi_98170
    new $P5029, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5029
    set $P5028, $P5029
  vivi_98170:
    unless_null $P5028, vivi_99171
    die "Contextual %*COMPILING not found"
    box $P5030, "Contextual %*COMPILING not found"
    set $P5028, $P5030
  vivi_99171:
    set $P5023, $P5028
  fallback167:
    set fb_tmp_30, $P5023
    repr_defined $I5003, fb_tmp_30
    unless $I5003 goto if96_else165 
    set $P5031, fb_tmp_30["%?OPTIONS"]
    set $P5033, $P5031
    goto if96_end166
  if96_else165:
    null $P5032
    set $P5033, $P5032
  if96_end166:
    unless_null $P5033, vivi_100172
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5033, $P5034
  vivi_100172:
    set fb_tmp_29, $P5033
    repr_defined $I5002, fb_tmp_29
    unless $I5002 goto if95_else163 
    set $P5035, fb_tmp_29["bootstrap"]
    set $P5037, $P5035
    goto if95_end164
  if95_else163:
    null $P5036
    set $P5037, $P5036
  if95_end164:
    unless_null $P5037, vivi_101173
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_101173:
    unless $P5037 goto if94_else161 
    set $I5005, 1
    goto if94_end162
  if94_else161:
    set $I5005, 0
  if94_end162:
    $P5039 = $P101."compile"($P5014, "ast" :named("from"), 1 :named("compunit_ok"), $P5015 :named("lineposcache"), $I5005 :named("bootstrap"))
    set $P102, $P5039
.annotate 'line', 348
    $P5040 = $P101."backend"()
    $P5041 = $P5040."compunit_coderefs"($P102)
    set $P103, $P5041
    elements $I5006, $P103
    box $P5042, $I5006
    set $P104, $P5042
    box $P5043, 0
    set $P105, $P5043
  while102_test174:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5007, $N5001, $N5002
    box $P5047, $I5007
    set $P5046, $P5047
    unless $I5007 goto while102_done178 
  while102_redo176:
    .const 'Sub' $P5044 = 'cuid_395_1383915013.33774' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5046, $P5045
    goto while102_test174 
  while102_done178:
.annotate 'line', 374
    $P5048 = $P101."backend"()
    $P5049 = $P5048."compunit_mainline"($P102)
    set $P106, $P5049
.annotate 'line', 375
    $P5050 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1383915013.33774") :anon :lex :outer("cuid_12_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 351
    .const 'Sub' $P5017 = 'cuid_394_1383915013.33774' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_32 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_32, $P5002
    repr_defined $I5001, fb_tmp_32
    unless $I5001 goto if103_else179 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_32[$I5002]
    set $P5006, $P5003
    goto if103_end180
  if103_else179:
    null $P5005
    set $P5006, $P5005
  if103_end180:
    unless_null $P5006, vivi_104181
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_104181:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up", 8
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if105_end183 
    .const 'Sub' $P5013 = 'cuid_394_1383915013.33774' 
    capture_lex $P5013
    $P5014 = $P5013()
  if105_end183:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1383915013.33774") :anon :lex :outer("cuid_395_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 353
    .const 'Sub' $P5089 = 'cuid_393_1383915013.33774' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 357
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up", 8
    set fb_tmp_33, $P5006
    repr_defined $I5001, fb_tmp_33
    unless $I5001 goto if106_else184 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_33[$S5001]
    set $P5010, $P5007
    goto if106_end185
  if106_else184:
    null $P5009
    set $P5010, $P5009
  if106_end185:
    unless_null $P5010, vivi_107186
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_107186:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types", 9
    set fb_tmp_34, $P5016
    repr_defined $I5002, fb_tmp_34
    unless $I5002 goto if108_else187 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_34[$S5002]
    set $P5020, $P5017
    goto if108_end188
  if108_else187:
    null $P5019
    set $P5020, $P5019
  if108_end188:
    unless_null $P5020, vivi_109189
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_109189:
    find_lex $P5022, "@allcodes"
    set fb_tmp_35, $P5022
    repr_defined $I5003, fb_tmp_35
    unless $I5003 goto if110_else190 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_35[$I5004]
    set $P5026, $P5023
    goto if110_end191
  if110_else190:
    null $P5025
    set $P5026, $P5025
  if110_end191:
    unless_null $P5026, vivi_111192
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_111192:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types", 9
    set fb_tmp_36, $P5031
    repr_defined $I5005, fb_tmp_36
    unless $I5005 goto if112_else193 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_36[$S5003]
    set $P5035, $P5032
    goto if112_end194
  if112_else193:
    null $P5034
    set $P5035, $P5034
  if112_end194:
    unless_null $P5035, vivi_113195
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5035, $P5036
  vivi_113195:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up", 8
    set fb_tmp_37, $P5044
    repr_defined $I5006, fb_tmp_37
    unless $I5006 goto if114_else196 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_37[$S5004]
    set $P5048, $P5045
    goto if114_end197
  if114_else196:
    null $P5047
    set $P5048, $P5047
  if114_end197:
    unless_null $P5048, vivi_115198
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5048, $P5049
  vivi_115198:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next208:
    unless $P5040, for_done210
    shift $P5051, $P5040
  for_redo209:
    .const 'Sub' $P5050 = 'cuid_393_1383915013.33774' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next208
  for_done210:
    find_lex $P5052, "@allcodes"
    set fb_tmp_41, $P5052
    repr_defined $I5007, fb_tmp_41
    unless $I5007 goto if122_else211 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_41[$I5008]
    set $P5056, $P5053
    goto if122_end212
  if122_else211:
    null $P5055
    set $P5056, $P5055
  if122_end212:
    unless_null $P5056, vivi_123213
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5056, $P5057
  vivi_123213:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 365
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx", 11
    set fb_tmp_42, $P5063
    repr_defined $I5009, fb_tmp_42
    unless $I5009 goto if124_else214 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_42[$S5005]
    set $P5067, $P5064
    goto if124_end215
  if124_else214:
    null $P5066
    set $P5067, $P5066
  if124_end215:
    unless_null $P5067, vivi_125216
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5067, $P5068
  vivi_125216:
    find_lex $P5069, "@allcodes"
    set fb_tmp_43, $P5069
    repr_defined $I5010, fb_tmp_43
    unless $I5010 goto if126_else217 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_43[$I5011]
    set $P5073, $P5070
    goto if126_end218
  if126_else217:
    null $P5072
    set $P5073, $P5072
  if126_end218:
    unless_null $P5073, vivi_127219
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5073, $P5074
  vivi_127219:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list", 10
    set fb_tmp_44, $P5078
    repr_defined $I5012, fb_tmp_44
    unless $I5012 goto if128_else220 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_44[$S5006]
    set $P5082, $P5079
    goto if128_end221
  if128_else220:
    null $P5081
    set $P5082, $P5081
  if128_end221:
    unless_null $P5082, vivi_129222
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_129222:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while130_handlers226
    push_eh $P5087
  while130_test223:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while130_done227 
  while130_redo225:
.annotate 'line', 369
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while130_test223 
  while130_handlers226:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while130_test223
    eq $P5087, .CONTROL_LOOP_REDO, while130_redo225
  while130_done227:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1383915013.33774") :anon :lex :outer("cuid_394_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 360
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_38 
    .local pmc fb_tmp_39 
    .local pmc fb_tmp_40 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types", 9
    set fb_tmp_38, $P5004
    repr_defined $I5001, fb_tmp_38
    unless $I5001 goto if116_else199 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_38[$S5001]
    set $P5008, $P5005
    goto if116_end200
  if116_else199:
    null $P5007
    set $P5008, $P5007
  if116_end200:
    unless_null $P5008, vivi_117201
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_117201:
    find_lex $P5011, "@allcodes"
    set fb_tmp_39, $P5011
    repr_defined $I5002, fb_tmp_39
    unless $I5002 goto if118_else202 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_39[$I5003]
    set $P5015, $P5012
    goto if118_end203
  if118_else202:
    null $P5014
    set $P5015, $P5014
  if118_end203:
    unless_null $P5015, vivi_119204
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_119204:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types", 9
    set fb_tmp_40, $P5020
    repr_defined $I5004, fb_tmp_40
    unless $I5004 goto if120_else205 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_40[$S5002]
    set $P5024, $P5021
    goto if120_end206
  if120_else205:
    null $P5023
    set $P5024, $P5023
  if120_end206:
    unless_null $P5024, vivi_121207
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_121207:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1383915013.33774") :anon :lex :outer("cuid_17_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 408
    .const 'Sub' $P5012 = 'cuid_13_1383915013.33774' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1383915013.33774' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1383915013.33774' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 12
    .const 'Sub' $P5011 = 'cuid_14_1383915013.33774' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1383915013.33774") :anon :lex :outer("cuid_396_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 409
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_47 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 410
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up", 8
    set fb_tmp_47, $P5005
    repr_defined $I5001, fb_tmp_47
    unless $I5001 goto if139_else242 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_47[$S5001]
    set $P5010, $P5006
    goto if139_end243
  if139_else242:
    null $P5009
    set $P5010, $P5009
  if139_end243:
    unless_null $P5010, vivi_140244
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_140244:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1383915013.33774") :anon :lex :outer("cuid_396_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 416

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1383915013.33774") :anon :lex :outer("cuid_17_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 420
    .const 'Sub' $P5012 = 'cuid_15_1383915013.33774' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1383915013.33774' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1383915013.33774' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 12
    .const 'Sub' $P5011 = 'cuid_16_1383915013.33774' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1383915013.33774") :anon :lex :outer("cuid_397_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 421
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_48 
.annotate 'line', 423
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 424
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 426
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 428
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 429
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 430
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 431
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 433
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 437
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up", 8
    set fb_tmp_48, $P5025
    repr_defined $I5001, fb_tmp_48
    unless $I5001 goto if141_else245 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_48[$S5001]
    set $P5030, $P5026
    goto if141_end246
  if141_else245:
    null $P5029
    set $P5030, $P5029
  if141_end246:
    unless_null $P5030, vivi_142247
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5030, $P5031
  vivi_142247:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1383915013.33774") :anon :lex :outer("cuid_397_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 440

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1383915013.33774") :anon :lex :outer("cuid_17_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 452
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if144_end251 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
.annotate 'line', 455
    $P5008 = "&compilee_list"()
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if144_end251:
.annotate 'line', 457
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 460
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 461
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 463
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 464
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 468
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 470
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 471
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 472
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 473
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 475
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 477
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 478
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up", 8
.annotate 'line', 482
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types", 9
.annotate 'line', 483
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 505
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_4 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_3, default259
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_2, $P5006
  default259:
    if haz_param_4, default260
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_3, $P5007
  default260:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_253
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if145_end256 
.annotate 'line', 508
    set $P101["name"], _lex_param_2
  if145_end256:
    defined $I5002, _lex_param_3
    unless $I5002 goto if146_end258 
.annotate 'line', 509
    set $P101["repr"], _lex_param_3
  if146_end258:
.annotate 'line', 510
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 511
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    $P5005 = "RETURN"($P102)
    goto lexotic_254
  lexotic_253:
    .get_results ($P5005)
  lexotic_254:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 522
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 523
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 524
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 529
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 530
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 534
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 535
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 536
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
.annotate 'line', 539
    $P5013 = "&compilee_list"(_lex_param_2)
    setattribute $P103, $P101, "$!types", $P5013
.annotate 'line', 541
    $P5014 = "&compilee_list"(_lex_param_3)
    setattribute $P103, $P101, "$!definednesses", $P5014
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 546
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 548
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 551
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 555
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 556
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 559
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 560
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 564
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 565
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 569
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_401_1383915013.33774' 
    capture_lex $P5030 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_261
    .lex "RETURN", $P106
.annotate 'line', 571
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 108
.annotate 'line', 572
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS", 7
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while147_test263:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while147_done267 
  while147_redo265:
    .const 'Sub' $P5014 = 'cuid_401_1383915013.33774' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while147_test263 
  while147_done267:
.annotate 'line', 596
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback289
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set fb_tmp_53, $P5022
    repr_defined $I5002, fb_tmp_53
    unless $I5002 goto if159_else290 
    set $P5024, fb_tmp_53["$GLOBALish"]
    set $P5026, $P5024
    goto if159_end291
  if159_else290:
    null $P5025
    set $P5026, $P5025
  if159_end291:
    unless_null $P5026, vivi_160292
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_160292:
    unless_null $P5026, vivi_161293
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_161293:
    set $P5021, $P5026
  fallback289:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 599
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 604
    $P101."shift"()
    $P5029 = "RETURN"($P101)
    goto lexotic_262
  lexotic_261:
    .get_results ($P5029)
  lexotic_262:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1383915013.33774") :anon :lex :outer("cuid_26_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 577
    .const 'Sub' $P5019 = 'cuid_400_1383915013.33774' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_49 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 579
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_49, $P5007
    repr_defined $I5001, fb_tmp_49
    unless $I5001 goto if148_else268 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_49[$I5002]
    set $P5011, $P5008
    goto if148_end269
  if148_else268:
    null $P5010
    set $P5011, $P5010
  if148_end269:
    unless_null $P5011, vivi_149270
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_149270:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next286:
    unless $P5016, for_done288
    shift $P5018, $P5016
  for_redo287:
    .const 'Sub' $P5017 = 'cuid_400_1383915013.33774' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next286
  for_done288:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1383915013.33774") :anon :lex :outer("cuid_401_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 580
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_399_1383915013.33774' 
    capture_lex $P5012 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_50 
    find_lex $P5001, "%seen"
    set fb_tmp_50, $P5001
    repr_defined $I5002, fb_tmp_50
    unless $I5002 goto if152_else275 
.annotate 'line', 581
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_50[$S5001]
    set $P5005, $P5002
    goto if152_end276
  if152_else275:
    null $P5004
    set $P5005, $P5004
  if152_end276:
    unless_null $P5005, vivi_153277
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_153277:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if151_end274 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if151_end274:
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if150_end272 
    .const 'Sub' $P5008 = 'cuid_399_1383915013.33774' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if150_end272:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1383915013.33774") :anon :lex :outer("cuid_400_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 581
    .lex "$value", $P101 
    .local pmc fb_tmp_51 
    .local pmc fb_tmp_52 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 582
    find_lex $P5002, "$_"
    $P5003 = $P5002."value"()
    set fb_tmp_51, $P5003
    repr_defined $I5001, fb_tmp_51
    unless $I5001 goto if154_else278 
    set $P5004, fb_tmp_51["value"]
    set $P5006, $P5004
    goto if154_end279
  if154_else278:
    null $P5005
    set $P5006, $P5005
  if154_end279:
    unless_null $P5006, vivi_155280
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_155280:
    set $P101, $P5006
    nqp_get_sc_for_object $P5008, $P101
    isnull $I5002, $P5008
    if $I5002 goto unless156_end282 
.annotate 'line', 583
.annotate 'line', 584
    find_lex $P5009, "$wrapper"
    set fb_tmp_52, $P5009
    repr_defined $I5003, fb_tmp_52
    unless $I5003 goto if157_else283 
    set $P5010, fb_tmp_52[0]
    set $P5012, $P5010
    goto if157_end284
  if157_else283:
    null $P5011
    set $P5012, $P5011
  if157_end284:
    unless_null $P5012, vivi_158285
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_158285:
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 586
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_lex $P5016, "$_"
    $P5017 = $P5016."key"()
    $P5018 = $P5015."new"($P5017 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 587
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5020 = $P5019."new"($P101 :named("value"))
    $P5021 = $P5014."new"($P5018, $P5020, "bind" :named("op"))
    $P5022 = $P5012."push"($P5021)
  unless156_end282:
    find_lex $P5023, "%seen"
.annotate 'line', 590
    find_lex $P5024, "$_"
    $P5025 = $P5024."key"()
    set $S5001, $P5025
    box $P5026, 1
    set $P5023[$S5001], $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 609
    .param pmc _lex_param_0 
    .const 'Sub' $P5048 = 'cuid_402_1383915013.33774' 
    capture_lex $P5048 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_54 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_57 
    .local pmc fb_tmp_58 
    .local pmc fb_tmp_59 
    .local pmc pkg_viv_tmp_9 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback300
    nqp_get_sc_object $P5010, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_8, $P5009
    set fb_tmp_56, pkg_viv_tmp_8
    repr_defined $I5003, fb_tmp_56
    unless $I5003 goto if165_else301 
    set $P5011, fb_tmp_56["%COMPILING"]
    set $P5013, $P5011
    goto if165_end302
  if165_else301:
    null $P5012
    set $P5013, $P5012
  if165_end302:
    unless_null $P5013, vivi_166303
    new $P5014, 'Hash'
    set pkg_viv_tmp_8["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_166303:
    unless_null $P5013, vivi_167304
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_167304:
    set $P5008, $P5013
  fallback300:
    set fb_tmp_55, $P5008
    repr_defined $I5002, fb_tmp_55
    unless $I5002 goto if164_else298 
    set $P5016, fb_tmp_55["%?OPTIONS"]
    set $P5018, $P5016
    goto if164_end299
  if164_else298:
    null $P5017
    set $P5018, $P5017
  if164_end299:
    unless_null $P5018, vivi_168305
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_168305:
    set fb_tmp_54, $P5018
    repr_defined $I5001, fb_tmp_54
    unless $I5001 goto if163_else296 
    set $P5020, fb_tmp_54["vmlibs"]
    set $P5022, $P5020
    goto if163_end297
  if163_else296:
    null $P5021
    set $P5022, $P5021
  if163_end297:
    unless_null $P5022, vivi_169306
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_169306:
    unless $P5022 goto if162_end295 
.annotate 'line', 612
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback311
    nqp_get_sc_object $P5030, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_9, $P5029
    set fb_tmp_59, pkg_viv_tmp_9
    repr_defined $I5006, fb_tmp_59
    unless $I5006 goto if172_else312 
    set $P5031, fb_tmp_59["%COMPILING"]
    set $P5033, $P5031
    goto if172_end313
  if172_else312:
    null $P5032
    set $P5033, $P5032
  if172_end313:
    unless_null $P5033, vivi_173314
    new $P5034, 'Hash'
    set pkg_viv_tmp_9["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_173314:
    unless_null $P5033, vivi_174315
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_174315:
    set $P5028, $P5033
  fallback311:
    set fb_tmp_58, $P5028
    repr_defined $I5005, fb_tmp_58
    unless $I5005 goto if171_else309 
    set $P5036, fb_tmp_58["%?OPTIONS"]
    set $P5038, $P5036
    goto if171_end310
  if171_else309:
    null $P5037
    set $P5038, $P5037
  if171_end310:
    unless_null $P5038, vivi_175316
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5038, $P5039
  vivi_175316:
    set fb_tmp_57, $P5038
    repr_defined $I5004, fb_tmp_57
    unless $I5004 goto if170_else307 
    set $P5040, fb_tmp_57["vmlibs"]
    set $P5042, $P5040
    goto if170_end308
  if170_else307:
    null $P5041
    set $P5042, $P5041
  if170_end308:
    unless_null $P5042, vivi_176317
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5042, $P5043
  vivi_176317:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next318:
    unless $P5026, for_done320
    shift $P5045, $P5026
  for_redo319:
    .const 'Sub' $P5044 = 'cuid_402_1383915013.33774' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next318
  for_done320:
  if162_end295:
.annotate 'line', 617
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5047 = $P5046."new"($P101 :named("loadlibs"))
    .return ($P5047) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1383915013.33774") :anon :lex :outer("cuid_27_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 613
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 614
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 621
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 622
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
.annotate 'line', 623
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 624
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 625
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 626
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 628
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 629
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 630
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 632
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5022 = $P5021."new"("null" :named("op"))
.annotate 'line', 633
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5024 = $P5023."new"("null" :named("op"))
    $P5025 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"), $P5024 :named("moar"))
    $P5026 = $P5001."add_load_dependency_task"($P5025 :named("deserialize_past"))
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 638
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_403_1383915013.33774' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks", 12
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next321:
    unless $P5003, for_done323
    shift $P5008, $P5003
  for_redo322:
    .const 'Sub' $P5007 = 'cuid_403_1383915013.33774' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next321
  for_done323:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1383915013.33774") :anon :lex :outer("cuid_29_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 639
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 649
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 650
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 655
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 656
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 661
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_404_1383915013.33774' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_324
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS", 7
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while177_test326:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while177_done330 
  while177_redo328:
    .const 'Sub' $P5006 = 'cuid_404_1383915013.33774' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while177_test326 
  while177_done330:
    box $P5010, 0
    goto lexotic_325
  lexotic_324:
    .get_results ($P5010)
  lexotic_325:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1383915013.33774") :anon :lex :outer("cuid_32_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 663
    .lex "%sym", $P101 
    .local pmc fb_tmp_60 
    .local pmc fb_tmp_61 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 665
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_60, $P5007
    repr_defined $I5001, fb_tmp_60
    unless $I5001 goto if178_else331 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_60[$I5002]
    set $P5011, $P5008
    goto if178_end332
  if178_else331:
    null $P5010
    set $P5011, $P5010
  if178_end332:
    unless_null $P5011, vivi_179333
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_179333:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5022, $N5004
    set $P5021, $P5022
    unless $N5004 goto if180_end335 
.annotate 'line', 666
    set fb_tmp_61, $P101
    repr_defined $I5004, fb_tmp_61
    unless $I5004 goto if181_else336 
    set $P5015, fb_tmp_61["scope"]
    set $P5017, $P5015
    goto if181_end337
  if181_else336:
    null $P5016
    set $P5017, $P5016
  if181_end337:
    unless_null $P5017, vivi_182338
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_182338:
    set $S5001, $P5017
    find_lex $P5019, "$wanted_scope"
    set $S5002, $P5019
    iseq $I5003, $S5001, $S5002
    $P5020 = "RETURN"($I5003)
    set $P5021, $P5020
  if180_end335:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 674
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_184340
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 676
.annotate 'line', 677
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_183339
  catch_handler_184340:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_183339
  skip_handler_183339:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1383915013.33774") :anon :lex :outer("cuid_386_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 686
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_406_1383915013.33774' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_408_1383915013.33774' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_409_1383915013.33774' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_65 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_341
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless185_end344 
.annotate 'line', 688
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless185_end344:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if186_end346 
    .const 'Sub' $P5003 = 'cuid_406_1383915013.33774' 
    capture_lex $P5003
    $P5004 = $P5003()
  if186_end346:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback365
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5006, $P5007
    set fb_tmp_65, $P5006
    repr_defined $I5002, fb_tmp_65
    unless $I5002 goto if196_else366 
    set $P5008, fb_tmp_65["$GLOBALish"]
    set $P5010, $P5008
    goto if196_end367
  if196_else366:
    null $P5009
    set $P5010, $P5009
  if196_end367:
    unless_null $P5010, vivi_197368
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_197368:
    unless_null $P5010, vivi_198369
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_198369:
    set $P5005, $P5010
  fallback365:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if199_end371 
    .const 'Sub' $P5013 = 'cuid_408_1383915013.33774' 
    capture_lex $P5013
    $P5014 = $P5013()
  if199_end371:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next395:
    unless $P5017, for_done397
    shift $P5019, $P5017
  for_redo396:
    .const 'Sub' $P5018 = 'cuid_409_1383915013.33774' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next395
  for_done397:
    goto lexotic_342
  lexotic_341:
    .get_results ($P101)
  lexotic_342:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1383915013.33774") :anon :lex :outer("cuid_34_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 692
    .const 'Sub' $P5017 = 'cuid_405_1383915013.33774' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_62 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_62, $P5003
    repr_defined $I5001, fb_tmp_62
    unless $I5001 goto if187_else347 
    set $P5004, fb_tmp_62[0]
    set $P5006, $P5004
    goto if187_end348
  if187_else347:
    null $P5005
    set $P5006, $P5005
  if187_end348:
    unless_null $P5006, vivi_188349
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_188349:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 7
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while189_test350:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while189_done354 
  while189_redo352:
    .const 'Sub' $P5013 = 'cuid_405_1383915013.33774' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while189_test350 
  while189_done354:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1383915013.33774") :anon :lex :outer("cuid_406_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 695
    .lex "%sym", $P101 
    .local pmc fb_tmp_63 
    .local pmc fb_tmp_64 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 697
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_63, $P5007
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if190_else355 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_63[$I5002]
    set $P5011, $P5008
    goto if190_end356
  if190_else355:
    null $P5010
    set $P5011, $P5010
  if190_end356:
    unless_null $P5011, vivi_191357
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_191357:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5024, $N5004
    set $P5023, $P5024
    unless $N5004 goto if192_end359 
.annotate 'line', 698
    exists $I5003, $P101["value"]
    unless $I5003 goto if193_else360 
.annotate 'line', 699
    set fb_tmp_64, $P101
    repr_defined $I5004, fb_tmp_64
    unless $I5004 goto if194_else362 
    set $P5015, fb_tmp_64["value"]
    set $P5017, $P5015
    goto if194_end363
  if194_else362:
    null $P5016
    set $P5017, $P5016
  if194_end363:
    unless_null $P5017, vivi_195364
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_195364:
    $P5019 = "RETURN"($P5017)
    set $P5022, $P5019
    goto if193_end361
  if193_else360:
.annotate 'line', 702
    find_lex $P5020, "$final_name"
    set $S5002, $P5020
    concat $S5001, "No compile-time value for ", $S5002
    box $P5021, $S5001
    die $P5021
    set $P5022, $P5021
  if193_end361:
    set $P5023, $P5022
  if192_end359:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1383915013.33774") :anon :lex :outer("cuid_34_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 713
    .const 'Sub' $P5017 = 'cuid_407_1383915013.33774' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_66 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_66, $P5003
    repr_defined $I5001, fb_tmp_66
    unless $I5001 goto if200_else372 
    set $P5004, fb_tmp_66[0]
    set $P5006, $P5004
    goto if200_end373
  if200_else372:
    null $P5005
    set $P5006, $P5005
  if200_end373:
    unless_null $P5006, vivi_201374
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_201374:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 7
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while202_test375:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while202_done379 
  while202_redo377:
    .const 'Sub' $P5013 = 'cuid_407_1383915013.33774' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while202_test375 
  while202_done379:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1383915013.33774") :anon :lex :outer("cuid_408_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 716
    .lex "%sym", $P101 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 718
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_67, $P5007
    repr_defined $I5001, fb_tmp_67
    unless $I5001 goto if203_else380 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_67[$I5002]
    set $P5011, $P5008
    goto if203_end381
  if203_else380:
    null $P5010
    set $P5011, $P5010
  if203_end381:
    unless_null $P5011, vivi_204382
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_204382:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if205_end384 
.annotate 'line', 719
    exists $I5003, $P101["value"]
    unless $I5003 goto if206_else385 
.annotate 'line', 720
    set fb_tmp_68, $P101
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if207_else387 
    set $P5015, fb_tmp_68["value"]
    set $P5017, $P5015
    goto if207_end388
  if207_else387:
    null $P5016
    set $P5017, $P5016
  if207_end388:
    unless_null $P5017, vivi_208389
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_208389:
    store_lex "$result", $P5017
.annotate 'line', 722
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if206_end386
  if206_else385:
.annotate 'line', 725
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if206_end386:
    set $P5024, $P5023
  if205_end384:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1383915013.33774") :anon :lex :outer("cuid_34_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 733
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_69 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if209_else390 
.annotate 'line', 734
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_69, $P5003
    repr_defined $I5002, fb_tmp_69
    unless $I5002 goto if210_else392 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_69[$S5002]
    set $P5007, $P5005
    goto if210_end393
  if210_else392:
    null $P5006
    set $P5007, $P5006
  if210_end393:
    unless_null $P5007, vivi_211394
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_211394:
    store_lex "$result", $P5007
    set $P5012, $P5007
    goto if209_end391
  if209_else390:
.annotate 'line', 737
.annotate 'line', 739
    find_lex $P5009, "@name"
    $P5010 = "&join"("::", $P5009)
    set $S5004, $P5010
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5011, $S5003
    die $P5011
    set $P5012, $P5011
  if209_end391:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 748
    .const 'Sub' $P5199 = 'cuid_35_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_48_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_66_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_91_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_92_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_130_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_133_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_222_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_224_1383915013.33774' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_225_1383915013.33774' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1436
.annotate 'line', 1437
    nqp_get_sc_object $P5001, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1438
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1439
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1440
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1441
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1442
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1443
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1444
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5008."O"(":prec<m=>, :assoc<non>", "%relational")
.annotate 'line', 1445
    nqp_get_sc_object $P5009, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1446
    nqp_get_sc_object $P5010, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1447
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1448
    nqp_get_sc_object $P5012, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1449
    nqp_get_sc_object $P5013, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1450
    nqp_get_sc_object $P5014, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1451
    nqp_get_sc_object $P5015, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 748
    .const 'Sub' $P5016 = 'cuid_35_1383915013.33774' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1383915013.33774' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1383915013.33774' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1383915013.33774' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1383915013.33774' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1383915013.33774' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1383915013.33774' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1383915013.33774' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1383915013.33774' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1383915013.33774' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_48_1383915013.33774' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_50_1383915013.33774' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_51_1383915013.33774' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_52_1383915013.33774' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_53_1383915013.33774' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_54_1383915013.33774' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_55_1383915013.33774' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_56_1383915013.33774' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_57_1383915013.33774' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_58_1383915013.33774' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_59_1383915013.33774' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_60_1383915013.33774' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_61_1383915013.33774' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_62_1383915013.33774' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_63_1383915013.33774' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_64_1383915013.33774' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_65_1383915013.33774' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_66_1383915013.33774' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_68_1383915013.33774' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_69_1383915013.33774' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_70_1383915013.33774' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_71_1383915013.33774' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_72_1383915013.33774' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_73_1383915013.33774' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_74_1383915013.33774' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_75_1383915013.33774' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_76_1383915013.33774' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_77_1383915013.33774' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_79_1383915013.33774' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_80_1383915013.33774' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_81_1383915013.33774' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_82_1383915013.33774' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_83_1383915013.33774' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_84_1383915013.33774' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_85_1383915013.33774' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_86_1383915013.33774' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_87_1383915013.33774' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_88_1383915013.33774' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_89_1383915013.33774' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_90_1383915013.33774' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_91_1383915013.33774' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_92_1383915013.33774' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_95_1383915013.33774' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_96_1383915013.33774' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_97_1383915013.33774' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_98_1383915013.33774' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_99_1383915013.33774' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_100_1383915013.33774' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_101_1383915013.33774' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_102_1383915013.33774' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_103_1383915013.33774' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_104_1383915013.33774' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_105_1383915013.33774' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_106_1383915013.33774' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_107_1383915013.33774' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_108_1383915013.33774' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_109_1383915013.33774' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_110_1383915013.33774' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_111_1383915013.33774' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_112_1383915013.33774' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_113_1383915013.33774' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_114_1383915013.33774' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_115_1383915013.33774' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_116_1383915013.33774' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_117_1383915013.33774' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_118_1383915013.33774' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_119_1383915013.33774' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_120_1383915013.33774' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_121_1383915013.33774' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_122_1383915013.33774' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_123_1383915013.33774' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_124_1383915013.33774' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_125_1383915013.33774' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_126_1383915013.33774' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_127_1383915013.33774' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_128_1383915013.33774' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_129_1383915013.33774' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_130_1383915013.33774' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_131_1383915013.33774' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_132_1383915013.33774' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_133_1383915013.33774' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_134_1383915013.33774' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_135_1383915013.33774' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_136_1383915013.33774' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_137_1383915013.33774' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_138_1383915013.33774' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_139_1383915013.33774' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_140_1383915013.33774' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_141_1383915013.33774' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_142_1383915013.33774' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_143_1383915013.33774' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_144_1383915013.33774' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_145_1383915013.33774' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_146_1383915013.33774' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_147_1383915013.33774' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_148_1383915013.33774' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_149_1383915013.33774' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_150_1383915013.33774' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_151_1383915013.33774' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_152_1383915013.33774' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_153_1383915013.33774' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_154_1383915013.33774' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_155_1383915013.33774' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_156_1383915013.33774' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_157_1383915013.33774' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_158_1383915013.33774' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_159_1383915013.33774' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_160_1383915013.33774' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_161_1383915013.33774' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_162_1383915013.33774' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_163_1383915013.33774' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_164_1383915013.33774' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_165_1383915013.33774' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_166_1383915013.33774' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_167_1383915013.33774' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_168_1383915013.33774' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_169_1383915013.33774' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_170_1383915013.33774' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_171_1383915013.33774' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_172_1383915013.33774' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_173_1383915013.33774' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_174_1383915013.33774' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_175_1383915013.33774' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_176_1383915013.33774' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_177_1383915013.33774' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_178_1383915013.33774' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_179_1383915013.33774' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_180_1383915013.33774' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_181_1383915013.33774' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_182_1383915013.33774' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_183_1383915013.33774' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_184_1383915013.33774' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_185_1383915013.33774' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_186_1383915013.33774' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_187_1383915013.33774' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_188_1383915013.33774' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_189_1383915013.33774' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_190_1383915013.33774' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_191_1383915013.33774' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_192_1383915013.33774' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_193_1383915013.33774' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_194_1383915013.33774' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_195_1383915013.33774' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_196_1383915013.33774' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_197_1383915013.33774' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_198_1383915013.33774' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_199_1383915013.33774' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_200_1383915013.33774' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_201_1383915013.33774' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_202_1383915013.33774' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_203_1383915013.33774' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_204_1383915013.33774' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_205_1383915013.33774' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_206_1383915013.33774' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_207_1383915013.33774' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_208_1383915013.33774' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_209_1383915013.33774' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_210_1383915013.33774' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_211_1383915013.33774' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_212_1383915013.33774' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_213_1383915013.33774' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_214_1383915013.33774' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_215_1383915013.33774' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_216_1383915013.33774' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_217_1383915013.33774' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_218_1383915013.33774' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_219_1383915013.33774' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_220_1383915013.33774' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_221_1383915013.33774' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_222_1383915013.33774' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_223_1383915013.33774' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_224_1383915013.33774' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_225_1383915013.33774' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 749
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "$*IN_REGEX_ASSERTION", $P112 
    .lex "%*HANDLERS", $P113 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_70 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_71 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_72 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_73 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_74 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_75 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_76 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_77 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_78 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_79 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_80 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_84 
    .local pmc pkg_viv_tmp_19 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P112, $P5012
    new $P5013, 'Hash'
    set $P113, $P5013
    unless_null $P101, fallback403
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_11, $P5021
    set fb_tmp_71, pkg_viv_tmp_11
    repr_defined $I5002, fb_tmp_71
    unless $I5002 goto if215_else404 
    set $P5023, fb_tmp_71["%LANG"]
    set $P5025, $P5023
    goto if215_end405
  if215_else404:
    null $P5024
    set $P5025, $P5024
  if215_end405:
    unless_null $P5025, vivi_216406
    new $P5026, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5026
    set $P5025, $P5026
  vivi_216406:
    unless_null $P5025, vivi_217407
    die "Contextual %*LANG not found"
    box $P5027, "Contextual %*LANG not found"
    set $P5025, $P5027
  vivi_217407:
    set $P101, $P5025
  fallback403:
    nqp_get_sc_object $P5029, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    set pkg_lookup_tmp_1, $P5029
    get_who $P5030, pkg_lookup_tmp_1
    exists $I5004, $P5030["NQP"]
    unless $I5004 goto if219_else410 
    get_who $P5032, pkg_lookup_tmp_1
    set $P5031, $P5032["NQP"]
    set $P5034, $P5031
    goto if219_end411
  if219_else410:
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5033
  if219_end411:
    get_who $P5028, $P5034
    set fb_tmp_72, $P5028
    repr_defined $I5003, fb_tmp_72
    unless $I5003 goto if218_else408 
    set $P5035, fb_tmp_72["Regex"]
    set $P5037, $P5035
    goto if218_end409
  if218_else408:
    null $P5036
    set $P5037, $P5036
  if218_end409:
    unless_null $P5037, vivi_220412
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_220412:
    set $P101["Regex"], $P5037
    unless_null $P101, fallback413
    nqp_get_sc_object $P5040, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_12, $P5039
    set fb_tmp_73, pkg_viv_tmp_12
    repr_defined $I5005, fb_tmp_73
    unless $I5005 goto if221_else414 
    set $P5041, fb_tmp_73["%LANG"]
    set $P5043, $P5041
    goto if221_end415
  if221_else414:
    null $P5042
    set $P5043, $P5042
  if221_end415:
    unless_null $P5043, vivi_222416
    new $P5044, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5044
    set $P5043, $P5044
  vivi_222416:
    unless_null $P5043, vivi_223417
    die "Contextual %*LANG not found"
    box $P5045, "Contextual %*LANG not found"
    set $P5043, $P5045
  vivi_223417:
    set $P101, $P5043
  fallback413:
    nqp_get_sc_object $P5047, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    set pkg_lookup_tmp_2, $P5047
    get_who $P5048, pkg_lookup_tmp_2
    exists $I5007, $P5048["NQP"]
    unless $I5007 goto if225_else420 
    get_who $P5050, pkg_lookup_tmp_2
    set $P5049, $P5050["NQP"]
    set $P5052, $P5049
    goto if225_end421
  if225_else420:
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5052, $P5051
  if225_end421:
    get_who $P5046, $P5052
    set fb_tmp_74, $P5046
    repr_defined $I5006, fb_tmp_74
    unless $I5006 goto if224_else418 
    set $P5053, fb_tmp_74["RegexActions"]
    set $P5055, $P5053
    goto if224_end419
  if224_else418:
    null $P5054
    set $P5055, $P5054
  if224_end419:
    unless_null $P5055, vivi_226422
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5055, $P5056
  vivi_226422:
    set $P101["Regex-actions"], $P5055
    unless_null $P101, fallback423
    nqp_get_sc_object $P5058, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5057, $P5058
    set pkg_viv_tmp_13, $P5057
    set fb_tmp_75, pkg_viv_tmp_13
    repr_defined $I5008, fb_tmp_75
    unless $I5008 goto if227_else424 
    set $P5059, fb_tmp_75["%LANG"]
    set $P5061, $P5059
    goto if227_end425
  if227_else424:
    null $P5060
    set $P5061, $P5060
  if227_end425:
    unless_null $P5061, vivi_228426
    new $P5062, 'Hash'
    set pkg_viv_tmp_13["%LANG"], $P5062
    set $P5061, $P5062
  vivi_228426:
    unless_null $P5061, vivi_229427
    die "Contextual %*LANG not found"
    box $P5063, "Contextual %*LANG not found"
    set $P5061, $P5063
  vivi_229427:
    set $P101, $P5061
  fallback423:
    nqp_get_sc_object $P5064, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    set $P101["MAIN"], $P5064
    unless_null $P101, fallback428
    nqp_get_sc_object $P5066, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_14, $P5065
    set fb_tmp_76, pkg_viv_tmp_14
    repr_defined $I5009, fb_tmp_76
    unless $I5009 goto if230_else429 
    set $P5067, fb_tmp_76["%LANG"]
    set $P5069, $P5067
    goto if230_end430
  if230_else429:
    null $P5068
    set $P5069, $P5068
  if230_end430:
    unless_null $P5069, vivi_231431
    new $P5070, 'Hash'
    set pkg_viv_tmp_14["%LANG"], $P5070
    set $P5069, $P5070
  vivi_231431:
    unless_null $P5069, vivi_232432
    die "Contextual %*LANG not found"
    box $P5071, "Contextual %*LANG not found"
    set $P5069, $P5071
  vivi_232432:
    set $P101, $P5069
  fallback428:
    nqp_get_sc_object $P5073, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    set pkg_lookup_tmp_3, $P5073
    get_who $P5074, pkg_lookup_tmp_3
    exists $I5011, $P5074["NQP"]
    unless $I5011 goto if234_else435 
    get_who $P5076, pkg_lookup_tmp_3
    set $P5075, $P5076["NQP"]
    set $P5078, $P5075
    goto if234_end436
  if234_else435:
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5078, $P5077
  if234_end436:
    get_who $P5072, $P5078
    set fb_tmp_77, $P5072
    repr_defined $I5010, fb_tmp_77
    unless $I5010 goto if233_else433 
    set $P5079, fb_tmp_77["Actions"]
    set $P5081, $P5079
    goto if233_end434
  if233_else433:
    null $P5080
    set $P5081, $P5080
  if233_end434:
    unless_null $P5081, vivi_235437
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5081, $P5082
  vivi_235437:
    set $P101["MAIN-actions"], $P5081
    unless_null $P102, fallback443
    nqp_get_sc_object $P5091, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5090, $P5091
    set pkg_viv_tmp_16, $P5090
    set fb_tmp_79, pkg_viv_tmp_16
    repr_defined $I5013, fb_tmp_79
    unless $I5013 goto if239_else444 
    set $P5092, fb_tmp_79["%HOW"]
    set $P5094, $P5092
    goto if239_end445
  if239_else444:
    null $P5093
    set $P5094, $P5093
  if239_end445:
    unless_null $P5094, vivi_240446
    new $P5095, 'Hash'
    set pkg_viv_tmp_16["%HOW"], $P5095
    set $P5094, $P5095
  vivi_240446:
    unless_null $P5094, vivi_241447
    die "Contextual %*HOW not found"
    box $P5096, "Contextual %*HOW not found"
    set $P5094, $P5096
  vivi_241447:
    set $P102, $P5094
  fallback443:
    get_knowhow $P5097
    set $P102["knowhow"], $P5097
    unless_null $P102, fallback448
    nqp_get_sc_object $P5099, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_17, $P5098
    set fb_tmp_80, pkg_viv_tmp_17
    repr_defined $I5014, fb_tmp_80
    unless $I5014 goto if242_else449 
    set $P5100, fb_tmp_80["%HOW"]
    set $P5102, $P5100
    goto if242_end450
  if242_else449:
    null $P5101
    set $P5102, $P5101
  if242_end450:
    unless_null $P5102, vivi_243451
    new $P5103, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5103
    set $P5102, $P5103
  vivi_243451:
    unless_null $P5102, vivi_244452
    die "Contextual %*HOW not found"
    box $P5104, "Contextual %*HOW not found"
    set $P5102, $P5104
  vivi_244452:
    set $P102, $P5102
  fallback448:
    get_knowhow_attribute $P5105
    set $P102["knowhow-attr"], $P5105
    find_dynamic_lex $P5106, "$?FILES"
    set $P103, $P5106
.annotate 'line', 768
    nqp_decontainerize $P5107, _lex_param_0
    $P5108 = $P5107."target"()
    set $S5003, $P5108
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5109, "%*COMPILING"
    unless_null $P5109, fallback459
    nqp_get_sc_object $P5111, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_18, $P5110
    set fb_tmp_83, pkg_viv_tmp_18
    repr_defined $I5017, fb_tmp_83
    unless $I5017 goto if248_else460 
    set $P5112, fb_tmp_83["%COMPILING"]
    set $P5114, $P5112
    goto if248_end461
  if248_else460:
    null $P5113
    set $P5114, $P5113
  if248_end461:
    unless_null $P5114, vivi_249462
    new $P5115, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5115
    set $P5114, $P5115
  vivi_249462:
    unless_null $P5114, vivi_250463
    die "Contextual %*COMPILING not found"
    box $P5116, "Contextual %*COMPILING not found"
    set $P5114, $P5116
  vivi_250463:
    set $P5109, $P5114
  fallback459:
    set fb_tmp_82, $P5109
    repr_defined $I5016, fb_tmp_82
    unless $I5016 goto if247_else457 
    set $P5117, fb_tmp_82["%?OPTIONS"]
    set $P5119, $P5117
    goto if247_end458
  if247_else457:
    null $P5118
    set $P5119, $P5118
  if247_end458:
    unless_null $P5119, vivi_251464
    nqp_get_sc_object $P5120, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5119, $P5120
  vivi_251464:
    set fb_tmp_81, $P5119
    repr_defined $I5015, fb_tmp_81
    unless $I5015 goto if246_else455 
    set $P5121, fb_tmp_81["stable-sc"]
    set $P5123, $P5121
    goto if246_end456
  if246_else455:
    null $P5122
    set $P5123, $P5122
  if246_end456:
    unless_null $P5123, vivi_252465
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5123, $P5124
  vivi_252465:
    unless $P5123 goto if245_else453 
    set $S5006, ""
    goto if245_end454
  if245_else453:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if245_end454:
    concat $S5001, $S5002, $S5006
    box $P5125, $S5001
    set $P104, $P5125
    isnull $I5018, $P103
    unless $I5018 goto if253_else466 
.annotate 'line', 771
    nqp_get_sc_object $P5126, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    $P5127 = $P5126."new"($P104 :named("handle"))
    set $P5130, $P5127
    goto if253_end467
  if253_else466:
.annotate 'line', 772
    nqp_get_sc_object $P5128, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    $P5129 = $P5128."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5130, $P5129
  if253_end467:
    set $P105, $P5130
    box $P5131, ""
    set $P106, $P5131
    box $P5132, ""
    set $P107, $P5132
    box $P5133, ""
    set $P108, $P5133
    box $P5134, 0
    set $P109, $P5134
    box $P5135, 0
    set $P110, $P5135
    box $P5136, 0
    set $P111, $P5136
    box $P5137, 0
    set $P112, $P5137
.annotate 'line', 782
    nqp_decontainerize $P5145, _lex_param_0
    $P5146 = $P5145."comp_unit"()
    .return ($P5146) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 787
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx257_start
    .local string rx257_tgt
    .local int rx257_pos
    .local int rx257_off
    .local int rx257_eos
    .local int rx257_rep
    .local pmc rx257_cur
    .local pmc rx257_curclass
    .local pmc rx257_bstack
    .local pmc rx257_cstack
    rx257_start = self."!cursor_start_all"()
    set rx257_cur, rx257_start[0]
    set rx257_tgt, rx257_start[1]
    set rx257_pos, rx257_start[2]
    set rx257_curclass, rx257_start[3]
    set rx257_bstack, rx257_start[4]
    set $I19, rx257_start[5]
    store_lex unicode:"$\x{a2}", rx257_cur
    length rx257_eos, rx257_tgt
    eq $I19, 1, rx257_restart475
    gt rx257_pos, rx257_eos, rx257_fail476
    repr_get_attr_int $I11, self, rx257_curclass, "$!from"
    ne $I11, -1, rxscan258_done482
    goto rxscan258_scan481
  rxscan258_loop480:
    inc rx257_pos
    gt rx257_pos, rx257_eos, rx257_fail476
    repr_bind_attr_int rx257_cur, rx257_curclass, "$!from", rx257_pos
  rxscan258_scan481:
    nqp_rxmark rx257_bstack, rxscan258_loop480, rx257_pos, 0
  rxscan258_done482:
    repr_bind_attr_int rx257_cur, rx257_curclass, "$!pos", rx257_pos
    $P11 = rx257_cur."ident"()
    repr_get_attr_int $I11, $P11, rx257_curclass, "$!pos"
    lt $I11, 0, rx257_fail476
    repr_get_attr_int rx257_pos, $P11, rx257_curclass, "$!pos"
    nqp_rxmark rx257_bstack, rxquantr260_done485, rx257_pos, 0
  rxquantr260_loop484:
    ge rx257_pos, rx257_eos, rx257_fail476
    substr $S11, rx257_tgt, rx257_pos, 1
    index $I11, ucs4:"-'", $S11
    lt $I11, 0, rx257_fail476
    inc rx257_pos
    repr_bind_attr_int rx257_cur, rx257_curclass, "$!pos", rx257_pos
    $P11 = rx257_cur."ident"()
    repr_get_attr_int $I11, $P11, rx257_curclass, "$!pos"
    lt $I11, 0, rx257_fail476
    repr_get_attr_int rx257_pos, $P11, rx257_curclass, "$!pos"
    nqp_rxpeek $I19, rx257_bstack, rxquantr260_done485
    inc $I19
    inc $I19
    set rx257_rep, rx257_bstack[$I19]
    nqp_rxcommit rx257_bstack, rxquantr260_done485
    inc rx257_rep
    nqp_rxmark rx257_bstack, rxquantr260_done485, rx257_pos, rx257_rep
    goto rxquantr260_loop484
  rxquantr260_done485:
    rx257_cur."!cursor_pass"(rx257_pos, "identifier", 'backtrack'=>1)
    .return (rx257_cur)
  rx257_restart475:
    repr_get_attr_obj rx257_cstack, rx257_cur, rx257_curclass, "$!cstack"
  rx257_fail476:
    unless rx257_bstack, rx257_done474
    pop $I19, rx257_bstack
    if_null rx257_cstack, rx257_cstack_done479
    unless rx257_cstack, rx257_cstack_done479
    dec $I19
    set $P11, rx257_cstack[$I19]
  rx257_cstack_done479:
    pop rx257_rep, rx257_bstack
    pop rx257_pos, rx257_bstack
    pop $I19, rx257_bstack
    lt rx257_pos, -1, rx257_done474
    lt rx257_pos, 0, rx257_fail476
    eq $I19, 0, rx257_fail476
    nqp_islist $I20, rx257_cstack
    unless $I20, rx257_jump477
    elements $I18, rx257_bstack
    le $I18, 0, rx257_cut478
    dec $I18
    set $I18, rx257_bstack[$I18]
  rx257_cut478:
    assign rx257_cstack, $I18
  rx257_jump477:
    jump $I19
  rx257_done474:
    rx257_cur."!cursor_fail"()
    .return (rx257_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 789
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx262_start
    .local string rx262_tgt
    .local int rx262_pos
    .local int rx262_off
    .local int rx262_eos
    .local int rx262_rep
    .local pmc rx262_cur
    .local pmc rx262_curclass
    .local pmc rx262_bstack
    .local pmc rx262_cstack
    rx262_start = self."!cursor_start_all"()
    set rx262_cur, rx262_start[0]
    set rx262_tgt, rx262_start[1]
    set rx262_pos, rx262_start[2]
    set rx262_curclass, rx262_start[3]
    set rx262_bstack, rx262_start[4]
    set $I19, rx262_start[5]
    store_lex unicode:"$\x{a2}", rx262_cur
    length rx262_eos, rx262_tgt
    eq $I19, 1, rx262_restart489
    gt rx262_pos, rx262_eos, rx262_fail490
    repr_get_attr_int $I11, self, rx262_curclass, "$!from"
    ne $I11, -1, rxscan263_done496
    goto rxscan263_scan495
  rxscan263_loop494:
    inc rx262_pos
    gt rx262_pos, rx262_eos, rx262_fail490
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!from", rx262_pos
  rxscan263_scan495:
    nqp_rxmark rx262_bstack, rxscan263_loop494, rx262_pos, 0
  rxscan263_done496:
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail490
    nqp_rxmark rx262_bstack, rxsubrule264_pass497, -1, 0
  rxsubrule264_pass497:
    rx262_cstack = rx262_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx262_pos, $P11, rx262_curclass, "$!pos"
    nqp_rxmark rx262_bstack, rxquantr265_done499, rx262_pos, 0
  rxquantr265_loop498:
    add $I11, rx262_pos, 2
    gt $I11, rx262_eos, rx262_fail490
    substr $S10, rx262_tgt, rx262_pos, 2
    ne $S10, ucs4:"::", rx262_fail490
    add rx262_pos, 2
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail490
    nqp_rxmark rx262_bstack, rxsubrule266_pass500, -1, 0
  rxsubrule266_pass500:
    rx262_cstack = rx262_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx262_pos, $P11, rx262_curclass, "$!pos"
    nqp_rxpeek $I19, rx262_bstack, rxquantr265_done499
    inc $I19
    inc $I19
    set rx262_rep, rx262_bstack[$I19]
    nqp_rxcommit rx262_bstack, rxquantr265_done499
    inc rx262_rep
    nqp_rxmark rx262_bstack, rxquantr265_done499, rx262_pos, rx262_rep
    goto rxquantr265_loop498
  rxquantr265_done499:
    rx262_cur."!cursor_pass"(rx262_pos, "name", 'backtrack'=>1)
    .return (rx262_cur)
  rx262_restart489:
    repr_get_attr_obj rx262_cstack, rx262_cur, rx262_curclass, "$!cstack"
  rx262_fail490:
    unless rx262_bstack, rx262_done488
    pop $I19, rx262_bstack
    if_null rx262_cstack, rx262_cstack_done493
    unless rx262_cstack, rx262_cstack_done493
    dec $I19
    set $P11, rx262_cstack[$I19]
  rx262_cstack_done493:
    pop rx262_rep, rx262_bstack
    pop rx262_pos, rx262_bstack
    pop $I19, rx262_bstack
    lt rx262_pos, -1, rx262_done488
    lt rx262_pos, 0, rx262_fail490
    eq $I19, 0, rx262_fail490
    nqp_islist $I20, rx262_cstack
    unless $I20, rx262_jump491
    elements $I18, rx262_bstack
    le $I18, 0, rx262_cut492
    dec $I18
    set $I18, rx262_bstack[$I18]
  rx262_cut492:
    assign rx262_cstack, $I18
  rx262_jump491:
    jump $I19
  rx262_done488:
    rx262_cur."!cursor_fail"()
    .return (rx262_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 791
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx267_start
    .local string rx267_tgt
    .local int rx267_pos
    .local int rx267_off
    .local int rx267_eos
    .local int rx267_rep
    .local pmc rx267_cur
    .local pmc rx267_curclass
    .local pmc rx267_bstack
    .local pmc rx267_cstack
    rx267_start = self."!cursor_start_all"()
    set rx267_cur, rx267_start[0]
    set rx267_tgt, rx267_start[1]
    set rx267_pos, rx267_start[2]
    set rx267_curclass, rx267_start[3]
    set rx267_bstack, rx267_start[4]
    set $I19, rx267_start[5]
    store_lex unicode:"$\x{a2}", rx267_cur
    length rx267_eos, rx267_tgt
    eq $I19, 1, rx267_restart503
    gt rx267_pos, rx267_eos, rx267_fail504
    repr_get_attr_int $I11, self, rx267_curclass, "$!from"
    ne $I11, -1, rxscan268_done510
    goto rxscan268_scan509
  rxscan268_loop508:
    inc rx267_pos
    gt rx267_pos, rx267_eos, rx267_fail504
    repr_bind_attr_int rx267_cur, rx267_curclass, "$!from", rx267_pos
  rxscan268_scan509:
    nqp_rxmark rx267_bstack, rxscan268_loop508, rx267_pos, 0
  rxscan268_done510:
    repr_bind_attr_int rx267_cur, rx267_curclass, "$!pos", rx267_pos
    $P11 = rx267_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx267_curclass, "$!pos"
    lt $I11, 0, rx267_fail504
    nqp_rxmark rx267_bstack, rxsubrule269_pass511, -1, 0
  rxsubrule269_pass511:
    rx267_cstack = rx267_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx267_pos, $P11, rx267_curclass, "$!pos"
    nqp_rxmark rx267_bstack, rxquantr270_done513, rx267_pos, 0
  rxquantr270_loop512:
    repr_bind_attr_int rx267_cur, rx267_curclass, "$!pos", rx267_pos
    $P11 = rx267_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx267_curclass, "$!pos"
    lt $I11, 0, rx267_fail504
    goto rxsubrule271_pass514
  rxsubrule271_back515:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx267_curclass, "$!pos"
    lt $I11, 0, rx267_fail504
  rxsubrule271_pass514:
    rx267_cstack = rx267_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule271_back515
    push rx267_bstack, $I11
    push rx267_bstack, 0
    push rx267_bstack, rx267_pos
    elements $I11, rx267_cstack
    push rx267_bstack, $I11
    repr_get_attr_int rx267_pos, $P11, rx267_curclass, "$!pos"
    nqp_rxpeek $I19, rx267_bstack, rxquantr270_done513
    inc $I19
    inc $I19
    set rx267_rep, rx267_bstack[$I19]
    nqp_rxcommit rx267_bstack, rxquantr270_done513
    inc rx267_rep
  rxquantr270_done513:
    rx267_cur."!cursor_pass"(rx267_pos, "deflongname", 'backtrack'=>1)
    .return (rx267_cur)
  rx267_restart503:
    repr_get_attr_obj rx267_cstack, rx267_cur, rx267_curclass, "$!cstack"
  rx267_fail504:
    unless rx267_bstack, rx267_done502
    pop $I19, rx267_bstack
    if_null rx267_cstack, rx267_cstack_done507
    unless rx267_cstack, rx267_cstack_done507
    dec $I19
    set $P11, rx267_cstack[$I19]
  rx267_cstack_done507:
    pop rx267_rep, rx267_bstack
    pop rx267_pos, rx267_bstack
    pop $I19, rx267_bstack
    lt rx267_pos, -1, rx267_done502
    lt rx267_pos, 0, rx267_fail504
    eq $I19, 0, rx267_fail504
    nqp_islist $I20, rx267_cstack
    unless $I20, rx267_jump505
    elements $I18, rx267_bstack
    le $I18, 0, rx267_cut506
    dec $I18
    set $I18, rx267_bstack[$I18]
  rx267_cut506:
    assign rx267_cstack, $I18
  rx267_jump505:
    jump $I19
  rx267_done502:
    rx267_cur."!cursor_fail"()
    .return (rx267_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 795
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx272_start
    .local string rx272_tgt
    .local int rx272_pos
    .local int rx272_off
    .local int rx272_eos
    .local int rx272_rep
    .local pmc rx272_cur
    .local pmc rx272_curclass
    .local pmc rx272_bstack
    .local pmc rx272_cstack
    rx272_start = self."!cursor_start_all"()
    set rx272_cur, rx272_start[0]
    set rx272_tgt, rx272_start[1]
    set rx272_pos, rx272_start[2]
    set rx272_curclass, rx272_start[3]
    set rx272_bstack, rx272_start[4]
    set $I19, rx272_start[5]
    store_lex unicode:"$\x{a2}", rx272_cur
    length rx272_eos, rx272_tgt
    eq $I19, 1, rx272_restart518
    gt rx272_pos, rx272_eos, rx272_fail519
    repr_get_attr_int $I11, self, rx272_curclass, "$!from"
    ne $I11, -1, rxscan273_done525
    goto rxscan273_scan524
  rxscan273_loop523:
    inc rx272_pos
    gt rx272_pos, rx272_eos, rx272_fail519
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!from", rx272_pos
  rxscan273_scan524:
    nqp_rxmark rx272_bstack, rxscan273_loop523, rx272_pos, 0
  rxscan273_done525:
    nqp_rxmark rx272_bstack, rxquantr274_done527, rx272_pos, 0
  rxquantr274_loop526:
    nqp_rxmark rx272_bstack, rxquantr275_done529, rx272_pos, 0
  rxquantr275_loop528:
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."unv"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
    goto rxsubrule276_pass530
  rxsubrule276_back531:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
  rxsubrule276_pass530:
    rx272_cstack = rx272_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule276_back531
    push rx272_bstack, $I11
    push rx272_bstack, 0
    push rx272_bstack, rx272_pos
    elements $I11, rx272_cstack
    push rx272_bstack, $I11
    repr_get_attr_int rx272_pos, $P11, rx272_curclass, "$!pos"
    nqp_rxpeek $I19, rx272_bstack, rxquantr275_done529
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr275_done529
    inc rx272_rep
  rxquantr275_done529:
    is_cclass $I11, .CCLASS_NEWLINE, rx272_tgt, rx272_pos
    if $I11, rxanchor277_done532
    ne rx272_pos, rx272_eos, rx272_fail519
    eq rx272_pos, 0, rxanchor277_done532
    sub $I11, rx272_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx272_tgt, $I11
    if $I11, rx272_fail519
  rxanchor277_done532:
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."ws"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
    repr_get_attr_int rx272_pos, $P11, rx272_curclass, "$!pos"
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
    nqp_rxpeek $I19, rx272_bstack, rxquantr274_done527
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr274_done527
    inc rx272_rep
  rxquantr274_done527:
    rx272_cur."!cursor_pass"(rx272_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx272_cur)
  rx272_restart518:
    repr_get_attr_obj rx272_cstack, rx272_cur, rx272_curclass, "$!cstack"
  rx272_fail519:
    unless rx272_bstack, rx272_done517
    pop $I19, rx272_bstack
    if_null rx272_cstack, rx272_cstack_done522
    unless rx272_cstack, rx272_cstack_done522
    dec $I19
    set $P11, rx272_cstack[$I19]
  rx272_cstack_done522:
    pop rx272_rep, rx272_bstack
    pop rx272_pos, rx272_bstack
    pop $I19, rx272_bstack
    lt rx272_pos, -1, rx272_done517
    lt rx272_pos, 0, rx272_fail519
    eq $I19, 0, rx272_fail519
    nqp_islist $I20, rx272_cstack
    unless $I20, rx272_jump520
    elements $I18, rx272_bstack
    le $I18, 0, rx272_cut521
    dec $I18
    set $I18, rx272_bstack[$I18]
  rx272_cut521:
    assign rx272_cstack, $I18
  rx272_jump520:
    jump $I19
  rx272_done517:
    rx272_cur."!cursor_fail"()
    .return (rx272_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 801
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx279_start
    .local string rx279_tgt
    .local int rx279_pos
    .local int rx279_off
    .local int rx279_eos
    .local int rx279_rep
    .local pmc rx279_cur
    .local pmc rx279_curclass
    .local pmc rx279_bstack
    .local pmc rx279_cstack
    rx279_start = self."!cursor_start_all"()
    set rx279_cur, rx279_start[0]
    set rx279_tgt, rx279_start[1]
    set rx279_pos, rx279_start[2]
    set rx279_curclass, rx279_start[3]
    set rx279_bstack, rx279_start[4]
    set $I19, rx279_start[5]
    store_lex unicode:"$\x{a2}", rx279_cur
    length rx279_eos, rx279_tgt
    eq $I19, 1, rx279_restart536
    gt rx279_pos, rx279_eos, rx279_fail537
    repr_get_attr_int $I11, self, rx279_curclass, "$!from"
    ne $I11, -1, rxscan280_done543
    goto rxscan280_scan542
  rxscan280_loop541:
    inc rx279_pos
    gt rx279_pos, rx279_eos, rx279_fail537
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!from", rx279_pos
  rxscan280_scan542:
    nqp_rxmark rx279_bstack, rxscan280_loop541, rx279_pos, 0
  rxscan280_done543:
  alt281_0545:
    nqp_rxmark rx279_bstack, alt281_1546, rx279_pos, 0
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    lt $I11, 0, rx279_fail537
    goto alt281_end544
  alt281_1546:
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."ww"()
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    ge $I11, 0, rx279_fail537
    nqp_rxmark rx279_bstack, rxquantr282_done548, rx279_pos, 0
  rxquantr282_loop547:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt283_0550
    nqp_push_label $P11, alt283_1553
    nqp_push_label $P11, alt283_2556
    nqp_push_label $P11, alt283_3559
    nqp_rxmark rx279_bstack, alt283_end549, -1, 0
    rx279_cur."!alt"(rx279_pos, "alt_nfa__1_1383915016.50082", $P11)
    goto rx279_fail537
  alt283_0550:
    nqp_rxmark rx279_bstack, rxquantr284_done552, -1, 0
  rxquantr284_loop551:
    ge rx279_pos, rx279_eos, rx279_fail537
    substr $S11, rx279_tgt, rx279_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx279_fail537
    inc rx279_pos
    nqp_rxpeek $I19, rx279_bstack, rxquantr284_done552
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr284_done552
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr284_done552, rx279_pos, rx279_rep
    goto rxquantr284_loop551
  rxquantr284_done552:
    goto alt283_end549
  alt283_1553:
    add $I11, rx279_pos, 1
    gt $I11, rx279_eos, rx279_fail537
    substr $S10, rx279_tgt, rx279_pos, 1
    ne $S10, ucs4:"#", rx279_fail537
    add rx279_pos, 1
    nqp_rxmark rx279_bstack, rxquantr285_done555, rx279_pos, 0
  rxquantr285_loop554:
    ge rx279_pos, rx279_eos, rx279_fail537
    is_cclass $I11, .CCLASS_NEWLINE, rx279_tgt, rx279_pos
    if $I11, rx279_fail537
    substr $S10, rx279_tgt, rx279_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx279_pos, $I11
    add rx279_pos, 1
    nqp_rxpeek $I19, rx279_bstack, rxquantr285_done555
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr285_done555
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr285_done555, rx279_pos, rx279_rep
    goto rxquantr285_loop554
  rxquantr285_done555:
    goto alt283_end549
  alt283_2556:
    eq rx279_pos, 0, rxanchor286_done557
    ge rx279_pos, rx279_eos, rx279_fail537
    sub $I11, rx279_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx279_tgt, $I11
    unless $I11, rx279_fail537
  rxanchor286_done557:
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    lt $I11, 0, rx279_fail537
    repr_get_attr_int rx279_pos, $P11, rx279_curclass, "$!pos"
    goto alt283_end549
  alt283_3559:
    nqp_rxmark rx279_bstack, rxquantr288_done561, -1, 0
  rxquantr288_loop560:
    ge rx279_pos, rx279_eos, rx279_fail537
    substr $S11, rx279_tgt, rx279_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx279_fail537
    inc rx279_pos
    nqp_rxpeek $I19, rx279_bstack, rxquantr288_done561
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr288_done561
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr288_done561, rx279_pos, rx279_rep
    goto rxquantr288_loop560
  rxquantr288_done561:
    goto alt283_end549
  alt283_end549:
    nqp_rxpeek $I19, rx279_bstack, rxquantr282_done548
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr282_done548
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr282_done548, rx279_pos, rx279_rep
    goto rxquantr282_loop547
  rxquantr282_done548:
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    lt $I11, 0, rx279_fail537
  alt281_end544:
    rx279_cur."!cursor_pass"(rx279_pos, "ws", 'backtrack'=>1)
    .return (rx279_cur)
  rx279_restart536:
    repr_get_attr_obj rx279_cstack, rx279_cur, rx279_curclass, "$!cstack"
  rx279_fail537:
    unless rx279_bstack, rx279_done535
    pop $I19, rx279_bstack
    if_null rx279_cstack, rx279_cstack_done540
    unless rx279_cstack, rx279_cstack_done540
    dec $I19
    set $P11, rx279_cstack[$I19]
  rx279_cstack_done540:
    pop rx279_rep, rx279_bstack
    pop rx279_pos, rx279_bstack
    pop $I19, rx279_bstack
    lt rx279_pos, -1, rx279_done535
    lt rx279_pos, 0, rx279_fail537
    eq $I19, 0, rx279_fail537
    nqp_islist $I20, rx279_cstack
    unless $I20, rx279_jump538
    elements $I18, rx279_bstack
    le $I18, 0, rx279_cut539
    dec $I18
    set $I18, rx279_bstack[$I18]
  rx279_cut539:
    assign rx279_cstack, $I18
  rx279_jump538:
    jump $I19
  rx279_done535:
    rx279_cur."!cursor_fail"()
    .return (rx279_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 812
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx289_start
    .local string rx289_tgt
    .local int rx289_pos
    .local int rx289_off
    .local int rx289_eos
    .local int rx289_rep
    .local pmc rx289_cur
    .local pmc rx289_curclass
    .local pmc rx289_bstack
    .local pmc rx289_cstack
    rx289_start = self."!cursor_start_all"()
    set rx289_cur, rx289_start[0]
    set rx289_tgt, rx289_start[1]
    set rx289_pos, rx289_start[2]
    set rx289_curclass, rx289_start[3]
    set rx289_bstack, rx289_start[4]
    set $I19, rx289_start[5]
    store_lex unicode:"$\x{a2}", rx289_cur
    length rx289_eos, rx289_tgt
    eq $I19, 1, rx289_restart564
    gt rx289_pos, rx289_eos, rx289_fail565
    repr_get_attr_int $I11, self, rx289_curclass, "$!from"
    ne $I11, -1, rxscan290_done571
    goto rxscan290_scan570
  rxscan290_loop569:
    inc rx289_pos
    gt rx289_pos, rx289_eos, rx289_fail565
    repr_bind_attr_int rx289_cur, rx289_curclass, "$!from", rx289_pos
  rxscan290_scan570:
    nqp_rxmark rx289_bstack, rxscan290_loop569, rx289_pos, 0
  rxscan290_done571:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt291_0573
    nqp_push_label $P11, alt291_1591
    nqp_push_label $P11, alt291_2596
    nqp_rxmark rx289_bstack, alt291_end572, -1, 0
    rx289_cur."!alt"(rx289_pos, "alt_nfa__3_1383915016.53756", $P11)
    goto rx289_fail565
  alt291_0573:
    eq rx289_pos, 0, rxanchor292_done574
    ge rx289_pos, rx289_eos, rx289_fail565
    sub $I11, rx289_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx289_tgt, $I11
    unless $I11, rx289_fail565
  rxanchor292_done574:
    .const 'Sub' $P5001 = 'cuid_42_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx289_cur, rx289_curclass, "$!pos", rx289_pos
    $P11 = rx289_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx289_curclass, "$!pos"
    lt $I11, 0, rx289_fail565
    repr_bind_attr_int rx289_cur, rx289_curclass, "$!pos", rx289_pos
    $P11 = rx289_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx289_curclass, "$!pos"
    lt $I11, 0, rx289_fail565
    repr_get_attr_int rx289_pos, $P11, rx289_curclass, "$!pos"
    goto alt291_end572
  alt291_1591:
    nqp_rxmark rx289_bstack, rxquantr298_done593, rx289_pos, 0
  rxquantr298_loop592:
    ge rx289_pos, rx289_eos, rx289_fail565
    substr $S11, rx289_tgt, rx289_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx289_fail565
    inc rx289_pos
    nqp_rxpeek $I19, rx289_bstack, rxquantr298_done593
    inc $I19
    inc $I19
    set rx289_rep, rx289_bstack[$I19]
    nqp_rxcommit rx289_bstack, rxquantr298_done593
    inc rx289_rep
    nqp_rxmark rx289_bstack, rxquantr298_done593, rx289_pos, rx289_rep
    goto rxquantr298_loop592
  rxquantr298_done593:
    add $I11, rx289_pos, 1
    gt $I11, rx289_eos, rx289_fail565
    substr $S10, rx289_tgt, rx289_pos, 1
    ne $S10, ucs4:"#", rx289_fail565
    add rx289_pos, 1
    nqp_rxmark rx289_bstack, rxquantr299_done595, rx289_pos, 0
  rxquantr299_loop594:
    ge rx289_pos, rx289_eos, rx289_fail565
    is_cclass $I11, .CCLASS_NEWLINE, rx289_tgt, rx289_pos
    if $I11, rx289_fail565
    substr $S10, rx289_tgt, rx289_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx289_pos, $I11
    add rx289_pos, 1
    nqp_rxpeek $I19, rx289_bstack, rxquantr299_done595
    inc $I19
    inc $I19
    set rx289_rep, rx289_bstack[$I19]
    nqp_rxcommit rx289_bstack, rxquantr299_done595
    inc rx289_rep
    nqp_rxmark rx289_bstack, rxquantr299_done595, rx289_pos, rx289_rep
    goto rxquantr299_loop594
  rxquantr299_done595:
    goto alt291_end572
  alt291_2596:
    nqp_rxmark rx289_bstack, rxquantr300_done598, -1, 0
  rxquantr300_loop597:
    ge rx289_pos, rx289_eos, rx289_fail565
    substr $S11, rx289_tgt, rx289_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx289_fail565
    inc rx289_pos
    nqp_rxpeek $I19, rx289_bstack, rxquantr300_done598
    inc $I19
    inc $I19
    set rx289_rep, rx289_bstack[$I19]
    nqp_rxcommit rx289_bstack, rxquantr300_done598
    inc rx289_rep
    nqp_rxmark rx289_bstack, rxquantr300_done598, rx289_pos, rx289_rep
    goto rxquantr300_loop597
  rxquantr300_done598:
    goto alt291_end572
  alt291_end572:
    nqp_rxcommit rx289_bstack, alt291_end572
    rx289_cur."!cursor_pass"(rx289_pos, "unv", 'backtrack'=>1)
    .return (rx289_cur)
  rx289_restart564:
    repr_get_attr_obj rx289_cstack, rx289_cur, rx289_curclass, "$!cstack"
  rx289_fail565:
    unless rx289_bstack, rx289_done563
    pop $I19, rx289_bstack
    if_null rx289_cstack, rx289_cstack_done568
    unless rx289_cstack, rx289_cstack_done568
    dec $I19
    set $P11, rx289_cstack[$I19]
  rx289_cstack_done568:
    pop rx289_rep, rx289_bstack
    pop rx289_pos, rx289_bstack
    pop $I19, rx289_bstack
    lt rx289_pos, -1, rx289_done563
    lt rx289_pos, 0, rx289_fail565
    eq $I19, 0, rx289_fail565
    nqp_islist $I20, rx289_cstack
    unless $I20, rx289_jump566
    elements $I18, rx289_bstack
    le $I18, 0, rx289_cut567
    dec $I18
    set $I18, rx289_bstack[$I18]
  rx289_cut567:
    assign rx289_cstack, $I18
  rx289_jump566:
    jump $I19
  rx289_done563:
    rx289_cur."!cursor_fail"()
    .return (rx289_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1383915013.33774") :anon :lex :outer("cuid_41_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx293_start
    .local string rx293_tgt
    .local int rx293_pos
    .local int rx293_off
    .local int rx293_eos
    .local int rx293_rep
    .local pmc rx293_cur
    .local pmc rx293_curclass
    .local pmc rx293_bstack
    .local pmc rx293_cstack
    rx293_start = self."!cursor_start_all"()
    set rx293_cur, rx293_start[0]
    set rx293_tgt, rx293_start[1]
    set rx293_pos, rx293_start[2]
    set rx293_curclass, rx293_start[3]
    set rx293_bstack, rx293_start[4]
    set $I19, rx293_start[5]
    store_lex unicode:"$\x{a2}", rx293_cur
    length rx293_eos, rx293_tgt
    eq $I19, 1, rx293_restart577
    gt rx293_pos, rx293_eos, rx293_fail578
    repr_get_attr_int $I11, self, rx293_curclass, "$!from"
    ne $I11, -1, rxscan294_done584
    goto rxscan294_scan583
  rxscan294_loop582:
    inc rx293_pos
    gt rx293_pos, rx293_eos, rx293_fail578
    repr_bind_attr_int rx293_cur, rx293_curclass, "$!from", rx293_pos
  rxscan294_scan583:
    nqp_rxmark rx293_bstack, rxscan294_loop582, rx293_pos, 0
  rxscan294_done584:
    nqp_rxmark rx293_bstack, rxquantr295_done586, rx293_pos, 0
  rxquantr295_loop585:
    ge rx293_pos, rx293_eos, rx293_fail578
    substr $S11, rx293_tgt, rx293_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx293_fail578
    inc rx293_pos
    nqp_rxpeek $I19, rx293_bstack, rxquantr295_done586
    inc $I19
    inc $I19
    set rx293_rep, rx293_bstack[$I19]
    nqp_rxcommit rx293_bstack, rxquantr295_done586
    inc rx293_rep
    nqp_rxmark rx293_bstack, rxquantr295_done586, rx293_pos, rx293_rep
    goto rxquantr295_loop585
  rxquantr295_done586:
    add $I11, rx293_pos, 1
    gt $I11, rx293_eos, rx293_fail578
    substr $S10, rx293_tgt, rx293_pos, 1
    ne $S10, ucs4:"=", rx293_fail578
    add rx293_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt296_0588
    nqp_push_label $P11, alt296_1589
    nqp_rxmark rx293_bstack, alt296_end587, -1, 0
    rx293_cur."!alt"(rx293_pos, "alt_nfa__2_1383915016.51994", $P11)
    goto rx293_fail578
  alt296_0588:
    ge rx293_pos, rx293_eos, rx293_fail578
    is_cclass $I11, .CCLASS_WORD, rx293_tgt, rx293_pos
    unless $I11, rx293_fail578
    add rx293_pos, 1
    goto alt296_end587
  alt296_1589:
    add $I11, rx293_pos, 1
    gt $I11, rx293_eos, rx293_fail578
    substr $S10, rx293_tgt, rx293_pos, 1
    ne $S10, ucs4:"\\", rx293_fail578
    add rx293_pos, 1
    goto alt296_end587
  alt296_end587:
    nqp_rxcommit rx293_bstack, alt296_end587
    rx293_cur."!cursor_pass"(rx293_pos, 'backtrack'=>1)
    .return (rx293_cur)
  rx293_restart577:
    repr_get_attr_obj rx293_cstack, rx293_cur, rx293_curclass, "$!cstack"
  rx293_fail578:
    unless rx293_bstack, rx293_done576
    pop $I19, rx293_bstack
    if_null rx293_cstack, rx293_cstack_done581
    unless rx293_cstack, rx293_cstack_done581
    dec $I19
    set $P11, rx293_cstack[$I19]
  rx293_cstack_done581:
    pop rx293_rep, rx293_bstack
    pop rx293_pos, rx293_bstack
    pop $I19, rx293_bstack
    lt rx293_pos, -1, rx293_done576
    lt rx293_pos, 0, rx293_fail578
    eq $I19, 0, rx293_fail578
    nqp_islist $I20, rx293_cstack
    unless $I20, rx293_jump579
    elements $I18, rx293_bstack
    le $I18, 0, rx293_cut580
    dec $I18
    set $I18, rx293_bstack[$I18]
  rx293_cut580:
    assign rx293_cstack, $I18
  rx293_jump579:
    jump $I19
  rx293_done576:
    rx293_cur."!cursor_fail"()
    .return (rx293_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 821
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_411_1383915013.33774' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_44_1383915013.33774' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx301_start
    .local string rx301_tgt
    .local int rx301_pos
    .local int rx301_off
    .local int rx301_eos
    .local int rx301_rep
    .local pmc rx301_cur
    .local pmc rx301_curclass
    .local pmc rx301_bstack
    .local pmc rx301_cstack
    rx301_start = self."!cursor_start_all"()
    set rx301_cur, rx301_start[0]
    set rx301_tgt, rx301_start[1]
    set rx301_pos, rx301_start[2]
    set rx301_curclass, rx301_start[3]
    set rx301_bstack, rx301_start[4]
    set $I19, rx301_start[5]
    store_lex unicode:"$\x{a2}", rx301_cur
    length rx301_eos, rx301_tgt
    eq $I19, 1, rx301_restart601
    gt rx301_pos, rx301_eos, rx301_fail602
    repr_get_attr_int $I11, self, rx301_curclass, "$!from"
    ne $I11, -1, rxscan302_done608
    goto rxscan302_scan607
  rxscan302_loop606:
    inc rx301_pos
    gt rx301_pos, rx301_eos, rx301_fail602
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!from", rx301_pos
  rxscan302_scan607:
    nqp_rxmark rx301_bstack, rxscan302_loop606, rx301_pos, 0
  rxscan302_done608:
    eq rx301_pos, 0, rxanchor303_done609
    ge rx301_pos, rx301_eos, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, $I11
    unless $I11, rx301_fail602
  rxanchor303_done609:
    nqp_rxmark rx301_bstack, rxquantr304_done611, rx301_pos, 0
  rxquantr304_loop610:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr304_done611
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr304_done611
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr304_done611, rx301_pos, rx301_rep
    goto rxquantr304_loop610
  rxquantr304_done611:
    add $I11, rx301_pos, 1
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 1
    ne $S10, ucs4:"=", rx301_fail602
    add rx301_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt305_0613
    nqp_push_label $P11, alt305_1632
    nqp_push_label $P11, alt305_2651
    nqp_push_label $P11, alt305_3673
    nqp_push_label $P11, alt305_4697
    nqp_rxmark rx301_bstack, alt305_end612, -1, 0
    rx301_cur."!alt"(rx301_pos, "alt_nfa__5_1383915016.69393", $P11)
    goto rx301_fail602
  alt305_0613:
    add $I11, rx301_pos, 5
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 5
    ne $S10, ucs4:"begin", rx301_fail602
    add rx301_pos, 5
    nqp_rxmark rx301_bstack, rxquantr306_done615, -1, 0
  rxquantr306_loop614:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr306_done615
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr306_done615
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr306_done615, rx301_pos, rx301_rep
    goto rxquantr306_loop614
  rxquantr306_done615:
    add $I11, rx301_pos, 3
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 3
    ne $S10, ucs4:"END", rx301_fail602
    add rx301_pos, 3
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
  alt308_0618:
    nqp_rxmark rx301_bstack, alt308_1629, rx301_pos, 0
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf309_loop619, rx301_pos, rx301_rep
    goto rxquantf309_done620
  rxquantf309_loop619:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf309_loop619, rx301_pos, rx301_rep
  rxquantf309_done620:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr310_done623, rx301_pos, 0
  rxquantr310_loop622:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr310_done623
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr310_done623
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr310_done623, rx301_pos, rx301_rep
    goto rxquantr310_loop622
  rxquantr310_done623:
    add $I11, rx301_pos, 4
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 4
    ne $S10, ucs4:"=end", rx301_fail602
    add rx301_pos, 4
    nqp_rxmark rx301_bstack, rxquantr311_done625, -1, 0
  rxquantr311_loop624:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr311_done625
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr311_done625
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr311_done625, rx301_pos, rx301_rep
    goto rxquantr311_loop624
  rxquantr311_done625:
    add $I11, rx301_pos, 3
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 3
    ne $S10, ucs4:"END", rx301_fail602
    add rx301_pos, 3
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr313_done628, rx301_pos, 0
  rxquantr313_loop627:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr313_done628
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr313_done628
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr313_done628, rx301_pos, rx301_rep
    goto rxquantr313_loop627
  rxquantr313_done628:
    goto alt308_end617
  alt308_1629:
    nqp_rxmark rx301_bstack, rxquantr314_done631, rx301_pos, 0
  rxquantr314_loop630:
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr314_done631
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr314_done631
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr314_done631, rx301_pos, rx301_rep
    goto rxquantr314_loop630
  rxquantr314_done631:
  alt308_end617:
    goto alt305_end612
  alt305_1632:
    add $I11, rx301_pos, 5
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 5
    ne $S10, ucs4:"begin", rx301_fail602
    add rx301_pos, 5
    nqp_rxmark rx301_bstack, rxquantr315_done634, -1, 0
  rxquantr315_loop633:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr315_done634
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr315_done634
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr315_done634, rx301_pos, rx301_rep
    goto rxquantr315_loop633
  rxquantr315_done634:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    nqp_rxmark rx301_bstack, rxsubrule316_pass635, -1, 0
  rxsubrule316_pass635:
    rx301_cstack = rx301_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt317_0637:
    nqp_rxmark rx301_bstack, alt317_1649, rx301_pos, 0
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf318_loop638, rx301_pos, rx301_rep
    goto rxquantf318_done639
  rxquantf318_loop638:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf318_loop638, rx301_pos, rx301_rep
  rxquantf318_done639:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr319_done642, rx301_pos, 0
  rxquantr319_loop641:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr319_done642
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr319_done642
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr319_done642, rx301_pos, rx301_rep
    goto rxquantr319_loop641
  rxquantr319_done642:
    add $I11, rx301_pos, 4
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 4
    ne $S10, ucs4:"=end", rx301_fail602
    add rx301_pos, 4
    nqp_rxmark rx301_bstack, rxquantr320_done644, -1, 0
  rxquantr320_loop643:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr320_done644
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr320_done644
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr320_done644, rx301_pos, rx301_rep
    goto rxquantr320_loop643
  rxquantr320_done644:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr323_done648, rx301_pos, 0
  rxquantr323_loop647:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr323_done648
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr323_done648
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr323_done648, rx301_pos, rx301_rep
    goto rxquantr323_loop647
  rxquantr323_done648:
    goto alt317_end636
  alt317_1649:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt317_end636:
    goto alt305_end612
  alt305_2651:
    add $I11, rx301_pos, 5
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 5
    ne $S10, ucs4:"begin", rx301_fail602
    add rx301_pos, 5
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr326_done654, rx301_pos, 0
  rxquantr326_loop653:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr326_done654
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr326_done654
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr326_done654, rx301_pos, rx301_rep
    goto rxquantr326_loop653
  rxquantr326_done654:
  alt327_0656:
    nqp_rxmark rx301_bstack, alt327_1658, rx301_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rxanchor328_done657
    ne rx301_pos, rx301_eos, rx301_fail602
    eq rx301_pos, 0, rxanchor328_done657
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, $I11
    if $I11, rx301_fail602
  rxanchor328_done657:
    goto alt327_end655
  alt327_1658:
    nqp_rxmark rx301_bstack, alt327_2659, rx301_pos, 0
    add $I11, rx301_pos, 1
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 1
    ne $S10, ucs4:"#", rx301_fail602
    add rx301_pos, 1
    goto alt327_end655
  alt327_2659:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt327_end655:
  alt330_0662:
    nqp_rxmark rx301_bstack, alt330_1671, rx301_pos, 0
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf331_loop663, rx301_pos, rx301_rep
    goto rxquantf331_done664
  rxquantf331_loop663:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf331_loop663, rx301_pos, rx301_rep
  rxquantf331_done664:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr332_done667, rx301_pos, 0
  rxquantr332_loop666:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr332_done667
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr332_done667
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr332_done667, rx301_pos, rx301_rep
    goto rxquantr332_loop666
  rxquantr332_done667:
    add $I11, rx301_pos, 4
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 4
    ne $S10, ucs4:"=end", rx301_fail602
    add rx301_pos, 4
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr334_done670, rx301_pos, 0
  rxquantr334_loop669:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr334_done670
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr334_done670
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr334_done670, rx301_pos, rx301_rep
    goto rxquantr334_loop669
  rxquantr334_done670:
    goto alt330_end661
  alt330_1671:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt330_end661:
    goto alt305_end612
  alt305_3673:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    nqp_rxmark rx301_bstack, rxsubrule336_pass674, -1, 0
  rxsubrule336_pass674:
    rx301_cstack = rx301_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    store_lex unicode:"$\x{a2}", rx301_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_411_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf337_loop675, rx301_pos, rx301_rep
    goto rxquantf337_done676
  rxquantf337_loop675:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf337_loop675, rx301_pos, rx301_rep
  rxquantf337_done676:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    .const 'Sub' $P5004 = 'cuid_44_1383915013.33774' 
    capture_lex $P5004
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    goto alt305_end612
  alt305_4697:
  alt345_0699:
    nqp_rxmark rx301_bstack, alt345_1700, rx301_pos, 0
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_WHITESPACE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    add rx301_pos, 1
    goto alt345_end698
  alt345_1700:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt345_end698:
    nqp_rxmark rx301_bstack, rxquantr347_done703, rx301_pos, 0
  rxquantr347_loop702:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr347_done703
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr347_done703
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr347_done703, rx301_pos, rx301_rep
    goto rxquantr347_loop702
  rxquantr347_done703:
    goto alt305_end612
  alt305_end612:
    nqp_rxcommit rx301_bstack, alt305_end612
    rx301_cur."!cursor_pass"(rx301_pos, "pod_comment", 'backtrack'=>1)
    .return (rx301_cur)
  rx301_restart601:
    repr_get_attr_obj rx301_cstack, rx301_cur, rx301_curclass, "$!cstack"
  rx301_fail602:
    unless rx301_bstack, rx301_done600
    pop $I19, rx301_bstack
    if_null rx301_cstack, rx301_cstack_done605
    unless rx301_cstack, rx301_cstack_done605
    dec $I19
    set $P11, rx301_cstack[$I19]
  rx301_cstack_done605:
    pop rx301_rep, rx301_bstack
    pop rx301_pos, rx301_bstack
    pop $I19, rx301_bstack
    lt rx301_pos, -1, rx301_done600
    lt rx301_pos, 0, rx301_fail602
    eq $I19, 0, rx301_fail602
    nqp_islist $I20, rx301_cstack
    unless $I20, rx301_jump603
    elements $I18, rx301_bstack
    le $I18, 0, rx301_cut604
    dec $I18
    set $I18, rx301_bstack[$I18]
  rx301_cut604:
    assign rx301_cstack, $I18
  rx301_jump603:
    jump $I19
  rx301_done600:
    rx301_cur."!cursor_fail"()
    .return (rx301_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1383915013.33774") :anon :lex :outer("cuid_43_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 837

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1383915013.33774") :anon :lex :outer("cuid_43_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx338_start
    .local string rx338_tgt
    .local int rx338_pos
    .local int rx338_off
    .local int rx338_eos
    .local int rx338_rep
    .local pmc rx338_cur
    .local pmc rx338_curclass
    .local pmc rx338_bstack
    .local pmc rx338_cstack
    rx338_start = self."!cursor_start_all"()
    set rx338_cur, rx338_start[0]
    set rx338_tgt, rx338_start[1]
    set rx338_pos, rx338_start[2]
    set rx338_curclass, rx338_start[3]
    set rx338_bstack, rx338_start[4]
    set $I19, rx338_start[5]
    store_lex unicode:"$\x{a2}", rx338_cur
    length rx338_eos, rx338_tgt
    eq $I19, 1, rx338_restart680
    gt rx338_pos, rx338_eos, rx338_fail681
    repr_get_attr_int $I11, self, rx338_curclass, "$!from"
    ne $I11, -1, rxscan339_done687
    goto rxscan339_scan686
  rxscan339_loop685:
    inc rx338_pos
    gt rx338_pos, rx338_eos, rx338_fail681
    repr_bind_attr_int rx338_cur, rx338_curclass, "$!from", rx338_pos
  rxscan339_scan686:
    nqp_rxmark rx338_bstack, rxscan339_loop685, rx338_pos, 0
  rxscan339_done687:
    nqp_rxmark rx338_bstack, rxquantr340_done689, rx338_pos, 0
  rxquantr340_loop688:
    ge rx338_pos, rx338_eos, rx338_fail681
    substr $S11, rx338_tgt, rx338_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx338_fail681
    inc rx338_pos
    nqp_rxpeek $I19, rx338_bstack, rxquantr340_done689
    inc $I19
    inc $I19
    set rx338_rep, rx338_bstack[$I19]
    nqp_rxcommit rx338_bstack, rxquantr340_done689
    inc rx338_rep
    nqp_rxmark rx338_bstack, rxquantr340_done689, rx338_pos, rx338_rep
    goto rxquantr340_loop688
  rxquantr340_done689:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt341_0691
    nqp_push_label $P11, alt341_1696
    nqp_rxmark rx338_bstack, alt341_end690, -1, 0
    rx338_cur."!alt"(rx338_pos, "alt_nfa__4_1383915016.67077", $P11)
    goto rx338_fail681
  alt341_0691:
    add $I11, rx338_pos, 1
    gt $I11, rx338_eos, rx338_fail681
    substr $S10, rx338_tgt, rx338_pos, 1
    ne $S10, ucs4:"=", rx338_fail681
    add rx338_pos, 1
    nqp_rxmark rx338_bstack, rxquantr342_done693, rx338_pos, 0
  rxquantr342_loop692:
    add $I11, rx338_pos, 3
    gt $I11, rx338_eos, rx338_fail681
    substr $S10, rx338_tgt, rx338_pos, 3
    ne $S10, ucs4:"cut", rx338_fail681
    add rx338_pos, 3
    le rx338_pos, 0, rx338_fail681
    is_cclass $I11, .CCLASS_WORD, rx338_tgt, rx338_pos
    if $I11, rx338_fail681
    sub $I11, rx338_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx338_tgt, $I11
    unless $I11, rx338_fail681
    repr_bind_attr_int rx338_cur, rx338_curclass, "$!pos", rx338_pos
    $P11 = rx338_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx338_curclass, "$!pos"
    lt $I11, 0, rx338_fail681
    repr_get_attr_int rx338_pos, $P11, rx338_curclass, "$!pos"
    nqp_rxpeek $I19, rx338_bstack, rxquantr342_done693
    inc $I19
    inc $I19
    set rx338_rep, rx338_bstack[$I19]
    nqp_rxcommit rx338_bstack, rxquantr342_done693
    inc rx338_rep
  rxquantr342_done693:
    goto alt341_end690
  alt341_1696:
    ge rx338_pos, rx338_eos, rx338_fail681
    is_cclass $I11, .CCLASS_NEWLINE, rx338_tgt, rx338_pos
    unless $I11, rx338_fail681
    substr $S10, rx338_tgt, rx338_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx338_pos, $I11
    add rx338_pos, 1
    goto alt341_end690
  alt341_end690:
    nqp_rxcommit rx338_bstack, alt341_end690
    rx338_cur."!cursor_pass"(rx338_pos, 'backtrack'=>1)
    .return (rx338_cur)
  rx338_restart680:
    repr_get_attr_obj rx338_cstack, rx338_cur, rx338_curclass, "$!cstack"
  rx338_fail681:
    unless rx338_bstack, rx338_done679
    pop $I19, rx338_bstack
    if_null rx338_cstack, rx338_cstack_done684
    unless rx338_cstack, rx338_cstack_done684
    dec $I19
    set $P11, rx338_cstack[$I19]
  rx338_cstack_done684:
    pop rx338_rep, rx338_bstack
    pop rx338_pos, rx338_bstack
    pop $I19, rx338_bstack
    lt rx338_pos, -1, rx338_done679
    lt rx338_pos, 0, rx338_fail681
    eq $I19, 0, rx338_fail681
    nqp_islist $I20, rx338_cstack
    unless $I20, rx338_jump682
    elements $I18, rx338_bstack
    le $I18, 0, rx338_cut683
    dec $I18
    set $I18, rx338_bstack[$I18]
  rx338_cut683:
    assign rx338_cstack, $I18
  rx338_jump682:
    jump $I19
  rx338_done679:
    rx338_cur."!cursor_fail"()
    .return (rx338_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 852
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_412_1383915013.33774' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_413_1383915013.33774' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_415_1383915013.33774' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_416_1383915013.33774' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_99 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx348_start
    .local string rx348_tgt
    .local int rx348_pos
    .local int rx348_off
    .local int rx348_eos
    .local int rx348_rep
    .local pmc rx348_cur
    .local pmc rx348_curclass
    .local pmc rx348_bstack
    .local pmc rx348_cstack
    rx348_start = self."!cursor_start_all"()
    set rx348_cur, rx348_start[0]
    set rx348_tgt, rx348_start[1]
    set rx348_pos, rx348_start[2]
    set rx348_curclass, rx348_start[3]
    set rx348_bstack, rx348_start[4]
    set $I19, rx348_start[5]
    store_lex unicode:"$\x{a2}", rx348_cur
    length rx348_eos, rx348_tgt
    eq $I19, 1, rx348_restart706
    gt rx348_pos, rx348_eos, rx348_fail707
    repr_get_attr_int $I11, self, rx348_curclass, "$!from"
    ne $I11, -1, rxscan349_done713
    goto rxscan349_scan712
  rxscan349_loop711:
    inc rx348_pos
    gt rx348_pos, rx348_eos, rx348_fail707
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!from", rx348_pos
  rxscan349_scan712:
    nqp_rxmark rx348_bstack, rxscan349_loop711, rx348_pos, 0
  rxscan349_done713:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    unless_null $P103, fallback714
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5010, $P5011
    set fb_tmp_85, $P5010
    repr_defined $I5001, fb_tmp_85
    unless $I5001 goto if350_else715 
    set $P5012, fb_tmp_85["$MAIN_SUB"]
    set $P5014, $P5012
    goto if350_end716
  if350_else715:
    null $P5013
    set $P5014, $P5013
  if350_end716:
    unless_null $P5014, vivi_351717
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_351717:
    unless_null $P5014, vivi_352718
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_352718:
    set $P103, $P5014
  fallback714:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
.annotate 'line', 857
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback719
    nqp_get_sc_object $P5019, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5018, $P5019
    set fb_tmp_86, $P5018
    repr_defined $I5002, fb_tmp_86
    unless $I5002 goto if353_else720 
    set $P5020, fb_tmp_86["$W"]
    set $P5022, $P5020
    goto if353_end721
  if353_else720:
    null $P5021
    set $P5022, $P5021
  if353_end721:
    unless_null $P5022, vivi_354722
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_354722:
    unless_null $P5022, vivi_355723
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_355723:
    set $P5017, $P5022
  fallback719:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
.annotate 'line', 861
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback724
    nqp_get_sc_object $P5028, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5027, $P5028
    set fb_tmp_87, $P5027
    repr_defined $I5003, fb_tmp_87
    unless $I5003 goto if356_else725 
    set $P5029, fb_tmp_87["$W"]
    set $P5031, $P5029
    goto if356_end726
  if356_else725:
    null $P5030
    set $P5031, $P5030
  if356_end726:
    unless_null $P5031, vivi_357727
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_357727:
    unless_null $P5031, vivi_358728
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_358728:
    set $P5026, $P5031
  fallback724:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback731
    nqp_get_sc_object $P5036, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_20, $P5035
    set fb_tmp_89, pkg_viv_tmp_20
    repr_defined $I5005, fb_tmp_89
    unless $I5005 goto if360_else732 
    set $P5037, fb_tmp_89["%HOW"]
    set $P5039, $P5037
    goto if360_end733
  if360_else732:
    null $P5038
    set $P5039, $P5038
  if360_end733:
    unless_null $P5039, vivi_361734
    new $P5040, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5040
    set $P5039, $P5040
  vivi_361734:
    unless_null $P5039, vivi_362735
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_362735:
    set $P5034, $P5039
  fallback731:
    set fb_tmp_88, $P5034
    repr_defined $I5004, fb_tmp_88
    unless $I5004 goto if359_else729 
    set $P5042, fb_tmp_88["knowhow"]
    set $P5044, $P5042
    goto if359_end730
  if359_else729:
    null $P5043
    set $P5044, $P5043
  if359_end730:
    unless_null $P5044, vivi_363736
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5044, $P5045
  vivi_363736:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_412_1383915013.33774' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    unless_null $P105, fallback762
    nqp_get_sc_object $P5051, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5050, $P5051
    set fb_tmp_95, $P5050
    repr_defined $I5006, fb_tmp_95
    unless $I5006 goto if379_else763 
    set $P5052, fb_tmp_95["$GLOBALish"]
    set $P5054, $P5052
    goto if379_end764
  if379_else763:
    null $P5053
    set $P5054, $P5053
  if379_end764:
    unless_null $P5054, vivi_380765
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5054, $P5055
  vivi_380765:
    unless_null $P5054, vivi_381766
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_381766:
    set $P105, $P5054
  fallback762:
    set $P106, $P105
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_413_1383915013.33774' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    unless_null $P107, fallback782
    nqp_get_sc_object $P5061, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5060, $P5061
    set fb_tmp_99, $P5060
    repr_defined $I5007, fb_tmp_99
    unless $I5007 goto if391_else783 
    set $P5062, fb_tmp_99["$EXPORT"]
    set $P5064, $P5062
    goto if391_end784
  if391_else783:
    null $P5063
    set $P5064, $P5063
  if391_end784:
    unless_null $P5064, vivi_392785
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5064, $P5065
  vivi_392785:
    unless_null $P5064, vivi_393786
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_393786:
    set $P107, $P5064
  fallback782:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_415_1383915013.33774' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_416_1383915013.33774' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    $P11 = rx348_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx348_curclass, "$!pos"
    lt $I11, 0, rx348_fail707
    repr_get_attr_int rx348_pos, $P11, rx348_curclass, "$!pos"
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    $P11 = rx348_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx348_curclass, "$!pos"
    lt $I11, 0, rx348_fail707
    nqp_rxmark rx348_bstack, rxsubrule440_pass862, -1, 0
  rxsubrule440_pass862:
    rx348_cstack = rx348_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx348_pos, $P11, rx348_curclass, "$!pos"
  alt441_0864:
    nqp_rxmark rx348_bstack, alt441_1866, rx348_pos, 0
    lt rx348_pos, rx348_eos, rx348_fail707
    goto alt441_end863
  alt441_1866:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    $P11 = rx348_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx348_curclass, "$!pos"
    lt $I11, 0, rx348_fail707
    repr_get_attr_int rx348_pos, $P11, rx348_curclass, "$!pos"
  alt441_end863:
    rx348_cur."!cursor_pass"(rx348_pos, "comp_unit", 'backtrack'=>1)
    .return (rx348_cur)
  rx348_restart706:
    repr_get_attr_obj rx348_cstack, rx348_cur, rx348_curclass, "$!cstack"
  rx348_fail707:
    unless rx348_bstack, rx348_done705
    pop $I19, rx348_bstack
    if_null rx348_cstack, rx348_cstack_done710
    unless rx348_cstack, rx348_cstack_done710
    dec $I19
    set $P11, rx348_cstack[$I19]
  rx348_cstack_done710:
    pop rx348_rep, rx348_bstack
    pop rx348_pos, rx348_bstack
    pop $I19, rx348_bstack
    lt rx348_pos, -1, rx348_done705
    lt rx348_pos, 0, rx348_fail707
    eq $I19, 0, rx348_fail707
    nqp_islist $I20, rx348_cstack
    unless $I20, rx348_jump708
    elements $I18, rx348_bstack
    le $I18, 0, rx348_cut709
    dec $I18
    set $I18, rx348_bstack[$I18]
  rx348_cut709:
    assign rx348_cstack, $I18
  rx348_jump708:
    jump $I19
  rx348_done705:
    rx348_cur."!cursor_fail"()
    .return (rx348_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1383915013.33774") :anon :lex :outer("cuid_45_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 862
    .local pmc fb_tmp_90 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
.annotate 'line', 863
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback737
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_90, $P5003
    repr_defined $I5001, fb_tmp_90
    unless $I5001 goto if364_else738 
    set $P5005, fb_tmp_90["$GLOBALish"]
    set $P5007, $P5005
    goto if364_end739
  if364_else738:
    null $P5006
    set $P5007, $P5006
  if364_end739:
    unless_null $P5007, vivi_365740
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_365740:
    unless_null $P5007, vivi_366741
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_366741:
    set $P5002, $P5007
  fallback737:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback742
    nqp_get_sc_object $P5012, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5011, $P5012
    set fb_tmp_91, $P5011
    repr_defined $I5002, fb_tmp_91
    unless $I5002 goto if367_else743 
    set $P5013, fb_tmp_91["$GLOBALish"]
    set $P5015, $P5013
    goto if367_end744
  if367_else743:
    null $P5014
    set $P5015, $P5014
  if367_end744:
    unless_null $P5015, vivi_368745
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_368745:
    unless_null $P5015, vivi_369746
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_369746:
    set $P5010, $P5015
  fallback742:
    $P5001."compose"($P5010)
.annotate 'line', 864
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback747
    nqp_get_sc_object $P5020, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5019, $P5020
    set fb_tmp_92, $P5019
    repr_defined $I5003, fb_tmp_92
    unless $I5003 goto if370_else748 
    set $P5021, fb_tmp_92["$W"]
    set $P5023, $P5021
    goto if370_end749
  if370_else748:
    null $P5022
    set $P5023, $P5022
  if370_end749:
    unless_null $P5023, vivi_371750
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_371750:
    unless_null $P5023, vivi_372751
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_372751:
    set $P5018, $P5023
  fallback747:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback752
    nqp_get_sc_object $P5028, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5027, $P5028
    set fb_tmp_93, $P5027
    repr_defined $I5004, fb_tmp_93
    unless $I5004 goto if373_else753 
    set $P5029, fb_tmp_93["$UNIT"]
    set $P5031, $P5029
    goto if373_end754
  if373_else753:
    null $P5030
    set $P5031, $P5030
  if373_end754:
    unless_null $P5031, vivi_374755
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_374755:
    unless_null $P5031, vivi_375756
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_375756:
    set $P5026, $P5031
  fallback752:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback757
    nqp_get_sc_object $P5036, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5035, $P5036
    set fb_tmp_94, $P5035
    repr_defined $I5005, fb_tmp_94
    unless $I5005 goto if376_else758 
    set $P5037, fb_tmp_94["$GLOBALish"]
    set $P5039, $P5037
    goto if376_end759
  if376_else758:
    null $P5038
    set $P5039, $P5038
  if376_end759:
    unless_null $P5039, vivi_377760
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5039, $P5040
  vivi_377760:
    unless_null $P5039, vivi_378761
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_378761:
    set $P5034, $P5039
  fallback757:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1383915013.33774") :anon :lex :outer("cuid_45_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 869
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback767
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_96, $P5002
    repr_defined $I5001, fb_tmp_96
    unless $I5001 goto if382_else768 
    set $P5004, fb_tmp_96["$W"]
    set $P5006, $P5004
    goto if382_end769
  if382_else768:
    null $P5005
    set $P5006, $P5005
  if382_end769:
    unless_null $P5006, vivi_383770
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_383770:
    unless_null $P5006, vivi_384771
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_384771:
    set $P5001, $P5006
  fallback767:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback772
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5010, $P5011
    set fb_tmp_97, $P5010
    repr_defined $I5002, fb_tmp_97
    unless $I5002 goto if385_else773 
    set $P5012, fb_tmp_97["$UNIT"]
    set $P5014, $P5012
    goto if385_end774
  if385_else773:
    null $P5013
    set $P5014, $P5013
  if385_end774:
    unless_null $P5014, vivi_386775
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_386775:
    unless_null $P5014, vivi_387776
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_387776:
    set $P5009, $P5014
  fallback772:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback777
    nqp_get_sc_object $P5019, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5018, $P5019
    set fb_tmp_98, $P5018
    repr_defined $I5003, fb_tmp_98
    unless $I5003 goto if388_else778 
    set $P5020, fb_tmp_98["$PACKAGE"]
    set $P5022, $P5020
    goto if388_end779
  if388_else778:
    null $P5021
    set $P5022, $P5021
  if388_end779:
    unless_null $P5022, vivi_389780
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_389780:
    unless_null $P5022, vivi_390781
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_390781:
    set $P5017, $P5022
  fallback777:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1383915013.33774") :anon :lex :outer("cuid_45_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 873
    .const 'Sub' $P5021 = 'cuid_414_1383915013.33774' 
    capture_lex $P5021 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc pkg_viv_tmp_21 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback793
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_102, pkg_viv_tmp_21
    repr_defined $I5004, fb_tmp_102
    unless $I5004 goto if397_else794 
    set $P5004, fb_tmp_102["%COMPILING"]
    set $P5006, $P5004
    goto if397_end795
  if397_else794:
    null $P5005
    set $P5006, $P5005
  if397_end795:
    unless_null $P5006, vivi_398796
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_398796:
    unless_null $P5006, vivi_399797
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_399797:
    set $P5001, $P5006
  fallback793:
    set fb_tmp_101, $P5001
    repr_defined $I5003, fb_tmp_101
    unless $I5003 goto if396_else791 
    set $P5009, fb_tmp_101["%?OPTIONS"]
    set $P5011, $P5009
    goto if396_end792
  if396_else791:
    null $P5010
    set $P5011, $P5010
  if396_end792:
    unless_null $P5011, vivi_400798
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_400798:
    set fb_tmp_100, $P5011
    repr_defined $I5002, fb_tmp_100
    unless $I5002 goto if395_else789 
    set $P5013, fb_tmp_100["setting"]
    set $P5015, $P5013
    goto if395_end790
  if395_else789:
    null $P5014
    set $P5015, $P5014
  if395_end790:
    unless_null $P5015, vivi_401799
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_401799:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless394_end788 
    .const 'Sub' $P5017 = 'cuid_414_1383915013.33774' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless394_end788:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1383915013.33774") :anon :lex :outer("cuid_415_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 874
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_114 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 875
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback800
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_103, $P5003
    repr_defined $I5001, fb_tmp_103
    unless $I5001 goto if402_else801 
    set $P5005, fb_tmp_103["$W"]
    set $P5007, $P5005
    goto if402_end802
  if402_else801:
    null $P5006
    set $P5007, $P5006
  if402_end802:
    unless_null $P5007, vivi_403803
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_403803:
    unless_null $P5007, vivi_404804
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_404804:
    set $P5002, $P5007
  fallback800:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback807
    nqp_get_sc_object $P5012, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_22, $P5011
    set fb_tmp_105, pkg_viv_tmp_22
    repr_defined $I5003, fb_tmp_105
    unless $I5003 goto if406_else808 
    set $P5013, fb_tmp_105["%HOW"]
    set $P5015, $P5013
    goto if406_end809
  if406_else808:
    null $P5014
    set $P5015, $P5014
  if406_end809:
    unless_null $P5015, vivi_407810
    new $P5016, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5016
    set $P5015, $P5016
  vivi_407810:
    unless_null $P5015, vivi_408811
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_408811:
    set $P5010, $P5015
  fallback807:
    set fb_tmp_104, $P5010
    repr_defined $I5002, fb_tmp_104
    unless $I5002 goto if405_else805 
    set $P5018, fb_tmp_104["knowhow"]
    set $P5020, $P5018
    goto if405_end806
  if405_else805:
    null $P5019
    set $P5020, $P5019
  if405_end806:
    unless_null $P5020, vivi_409812
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_409812:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 876
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback813
    nqp_get_sc_object $P5026, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5025, $P5026
    set fb_tmp_106, $P5025
    repr_defined $I5004, fb_tmp_106
    unless $I5004 goto if410_else814 
    set $P5027, fb_tmp_106["$EXPORT"]
    set $P5029, $P5027
    goto if410_end815
  if410_else814:
    null $P5028
    set $P5029, $P5028
  if410_end815:
    unless_null $P5029, vivi_411816
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5029, $P5030
  vivi_411816:
    unless_null $P5029, vivi_412817
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_412817:
    set $P5024, $P5029
  fallback813:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback818
    nqp_get_sc_object $P5034, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5033, $P5034
    set fb_tmp_107, $P5033
    repr_defined $I5005, fb_tmp_107
    unless $I5005 goto if413_else819 
    set $P5035, fb_tmp_107["$EXPORT"]
    set $P5037, $P5035
    goto if413_end820
  if413_else819:
    null $P5036
    set $P5037, $P5036
  if413_end820:
    unless_null $P5037, vivi_414821
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_414821:
    unless_null $P5037, vivi_415822
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_415822:
    set $P5032, $P5037
  fallback818:
    $P5023."compose"($P5032)
.annotate 'line', 877
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback823
    nqp_get_sc_object $P5042, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5041, $P5042
    set fb_tmp_108, $P5041
    repr_defined $I5006, fb_tmp_108
    unless $I5006 goto if416_else824 
    set $P5043, fb_tmp_108["$W"]
    set $P5045, $P5043
    goto if416_end825
  if416_else824:
    null $P5044
    set $P5045, $P5044
  if416_end825:
    unless_null $P5045, vivi_417826
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  vivi_417826:
    unless_null $P5045, vivi_418827
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_418827:
    set $P5040, $P5045
  fallback823:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback828
    nqp_get_sc_object $P5050, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5049, $P5050
    set fb_tmp_109, $P5049
    repr_defined $I5007, fb_tmp_109
    unless $I5007 goto if419_else829 
    set $P5051, fb_tmp_109["$UNIT"]
    set $P5053, $P5051
    goto if419_end830
  if419_else829:
    null $P5052
    set $P5053, $P5052
  if419_end830:
    unless_null $P5053, vivi_420831
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5053, $P5054
  vivi_420831:
    unless_null $P5053, vivi_421832
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_421832:
    set $P5048, $P5053
  fallback828:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback833
    nqp_get_sc_object $P5058, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5057, $P5058
    set fb_tmp_110, $P5057
    repr_defined $I5008, fb_tmp_110
    unless $I5008 goto if422_else834 
    set $P5059, fb_tmp_110["$EXPORT"]
    set $P5061, $P5059
    goto if422_end835
  if422_else834:
    null $P5060
    set $P5061, $P5060
  if422_end835:
    unless_null $P5061, vivi_423836
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5061, $P5062
  vivi_423836:
    unless_null $P5061, vivi_424837
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_424837:
    set $P5056, $P5061
  fallback833:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 878
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback838
    nqp_get_sc_object $P5066, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5065, $P5066
    set fb_tmp_111, $P5065
    repr_defined $I5009, fb_tmp_111
    unless $I5009 goto if425_else839 
    set $P5067, fb_tmp_111["$W"]
    set $P5069, $P5067
    goto if425_end840
  if425_else839:
    null $P5068
    set $P5069, $P5068
  if425_end840:
    unless_null $P5069, vivi_426841
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5069, $P5070
  vivi_426841:
    unless_null $P5069, vivi_427842
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_427842:
    set $P5064, $P5069
  fallback838:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback845
    nqp_get_sc_object $P5074, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_23, $P5073
    set fb_tmp_113, pkg_viv_tmp_23
    repr_defined $I5011, fb_tmp_113
    unless $I5011 goto if429_else846 
    set $P5075, fb_tmp_113["%HOW"]
    set $P5077, $P5075
    goto if429_end847
  if429_else846:
    null $P5076
    set $P5077, $P5076
  if429_end847:
    unless_null $P5077, vivi_430848
    new $P5078, 'Hash'
    set pkg_viv_tmp_23["%HOW"], $P5078
    set $P5077, $P5078
  vivi_430848:
    unless_null $P5077, vivi_431849
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_431849:
    set $P5072, $P5077
  fallback845:
    set fb_tmp_112, $P5072
    repr_defined $I5010, fb_tmp_112
    unless $I5010 goto if428_else843 
    set $P5080, fb_tmp_112["knowhow"]
    set $P5082, $P5080
    goto if428_end844
  if428_else843:
    null $P5081
    set $P5082, $P5081
  if428_end844:
    unless_null $P5082, vivi_432850
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_432850:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 879
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback851
    nqp_get_sc_object $P5089, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5088, $P5089
    set fb_tmp_114, $P5088
    repr_defined $I5012, fb_tmp_114
    unless $I5012 goto if433_else852 
    set $P5090, fb_tmp_114["$EXPORT"]
    set $P5092, $P5090
    goto if433_end853
  if433_else852:
    null $P5091
    set $P5092, $P5091
  if433_end853:
    unless_null $P5092, vivi_434854
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5092, $P5093
  vivi_434854:
    unless_null $P5092, vivi_435855
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_435855:
    set $P5087, $P5092
  fallback851:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1383915013.33774") :anon :lex :outer("cuid_45_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 884
    .local pmc fb_tmp_115 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback856
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_115, $P5002
    repr_defined $I5001, fb_tmp_115
    unless $I5001 goto if436_else857 
    set $P5004, fb_tmp_115["$W"]
    set $P5006, $P5004
    goto if436_end858
  if436_else857:
    null $P5005
    set $P5006, $P5005
  if436_end858:
    unless_null $P5006, vivi_437859
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_437859:
    unless_null $P5006, vivi_438860
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_438860:
    set $P5001, $P5006
  fallback856:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 892
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_47_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx444_start
    .local string rx444_tgt
    .local int rx444_pos
    .local int rx444_off
    .local int rx444_eos
    .local int rx444_rep
    .local pmc rx444_cur
    .local pmc rx444_curclass
    .local pmc rx444_bstack
    .local pmc rx444_cstack
    rx444_start = self."!cursor_start_all"()
    set rx444_cur, rx444_start[0]
    set rx444_tgt, rx444_start[1]
    set rx444_pos, rx444_start[2]
    set rx444_curclass, rx444_start[3]
    set rx444_bstack, rx444_start[4]
    set $I19, rx444_start[5]
    store_lex unicode:"$\x{a2}", rx444_cur
    length rx444_eos, rx444_tgt
    eq $I19, 1, rx444_restart870
    gt rx444_pos, rx444_eos, rx444_fail871
    repr_get_attr_int $I11, self, rx444_curclass, "$!from"
    ne $I11, -1, rxscan445_done877
    goto rxscan445_scan876
  rxscan445_loop875:
    inc rx444_pos
    gt rx444_pos, rx444_eos, rx444_fail871
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!from", rx444_pos
  rxscan445_scan876:
    nqp_rxmark rx444_bstack, rxscan445_loop875, rx444_pos, 0
  rxscan445_done877:
    add $I11, rx444_pos, 0
    gt $I11, rx444_eos, rx444_fail871
    substr $S10, rx444_tgt, rx444_pos, 0
    ne $S10, ucs4:"", rx444_fail871
    add rx444_pos, 0
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule446_pass878
  rxsubrule446_back879:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule446_pass878:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule446_back879
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt447_0881
    nqp_push_label $P11, alt447_1885
    nqp_push_label $P11, alt447_2898
    nqp_rxmark rx444_bstack, alt447_end880, -1, 0
    rx444_cur."!alt"(rx444_pos, "alt_nfa__6_1383915016.94036", $P11)
    goto rx444_fail871
  alt447_0881:
    lt rx444_pos, rx444_eos, rx444_fail871
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule449_pass883
  rxsubrule449_back884:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule449_pass883:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule449_back884
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    goto alt447_end880
  alt447_1885:
    .const 'Sub' $P5001 = 'cuid_47_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule452_pass896
  rxsubrule452_back897:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule452_pass896:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule452_back897
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    goto alt447_end880
  alt447_2898:
    nqp_rxmark rx444_bstack, rxquantg453_done900, rx444_pos, 0
  rxquantg453_loop899:
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."statement"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule454_pass901
  rxsubrule454_back902:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule454_pass901:
    rx444_cstack = rx444_cur."!cursor_capture"($P11, "statement")
    set_addr $I11, rxsubrule454_back902
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule455_pass903
  rxsubrule455_back904:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule455_pass903:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule455_back904
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule456_pass905
  rxsubrule456_back906:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule456_pass905:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule456_back906
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule457_pass907
  rxsubrule457_back908:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule457_pass907:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule457_back908
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    nqp_rxmark rx444_bstack, rxquantg453_done900, rx444_pos, rx444_rep
    goto rxquantg453_loop899
  rxquantg453_done900:
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule458_pass909
  rxsubrule458_back910:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule458_pass909:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule458_back910
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    goto alt447_end880
  alt447_end880:
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule459_pass911
  rxsubrule459_back912:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule459_pass911:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule459_back912
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    rx444_cur."!cursor_pass"(rx444_pos, "statementlist", 'backtrack'=>1)
    .return (rx444_cur)
  rx444_restart870:
    repr_get_attr_obj rx444_cstack, rx444_cur, rx444_curclass, "$!cstack"
  rx444_fail871:
    unless rx444_bstack, rx444_done869
    pop $I19, rx444_bstack
    if_null rx444_cstack, rx444_cstack_done874
    unless rx444_cstack, rx444_cstack_done874
    dec $I19
    set $P11, rx444_cstack[$I19]
  rx444_cstack_done874:
    pop rx444_rep, rx444_bstack
    pop rx444_pos, rx444_bstack
    pop $I19, rx444_bstack
    lt rx444_pos, -1, rx444_done869
    lt rx444_pos, 0, rx444_fail871
    eq $I19, 0, rx444_fail871
    nqp_islist $I20, rx444_cstack
    unless $I20, rx444_jump872
    elements $I18, rx444_bstack
    le $I18, 0, rx444_cut873
    dec $I18
    set $I18, rx444_bstack[$I18]
  rx444_cut873:
    assign rx444_cstack, $I18
  rx444_jump872:
    jump $I19
  rx444_done869:
    rx444_cur."!cursor_fail"()
    .return (rx444_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_47_1383915013.33774") :anon :lex :outer("cuid_46_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx450_start
    .local string rx450_tgt
    .local int rx450_pos
    .local int rx450_off
    .local int rx450_eos
    .local int rx450_rep
    .local pmc rx450_cur
    .local pmc rx450_curclass
    .local pmc rx450_bstack
    .local pmc rx450_cstack
    rx450_start = self."!cursor_start_all"()
    set rx450_cur, rx450_start[0]
    set rx450_tgt, rx450_start[1]
    set rx450_pos, rx450_start[2]
    set rx450_curclass, rx450_start[3]
    set rx450_bstack, rx450_start[4]
    set $I19, rx450_start[5]
    store_lex unicode:"$\x{a2}", rx450_cur
    length rx450_eos, rx450_tgt
    eq $I19, 1, rx450_restart888
    gt rx450_pos, rx450_eos, rx450_fail889
    repr_get_attr_int $I11, self, rx450_curclass, "$!from"
    ne $I11, -1, rxscan451_done895
    goto rxscan451_scan894
  rxscan451_loop893:
    inc rx450_pos
    gt rx450_pos, rx450_eos, rx450_fail889
    repr_bind_attr_int rx450_cur, rx450_curclass, "$!from", rx450_pos
  rxscan451_scan894:
    nqp_rxmark rx450_bstack, rxscan451_loop893, rx450_pos, 0
  rxscan451_done895:
    ge rx450_pos, rx450_eos, rx450_fail889
    substr $S11, rx450_tgt, rx450_pos, 1
    index $I11, ucs4:")]}", $S11
    lt $I11, 0, rx450_fail889
    inc rx450_pos
    rx450_cur."!cursor_pass"(rx450_pos, 'backtrack'=>1)
    .return (rx450_cur)
  rx450_restart888:
    repr_get_attr_obj rx450_cstack, rx450_cur, rx450_curclass, "$!cstack"
  rx450_fail889:
    unless rx450_bstack, rx450_done887
    pop $I19, rx450_bstack
    if_null rx450_cstack, rx450_cstack_done892
    unless rx450_cstack, rx450_cstack_done892
    dec $I19
    set $P11, rx450_cstack[$I19]
  rx450_cstack_done892:
    pop rx450_rep, rx450_bstack
    pop rx450_pos, rx450_bstack
    pop $I19, rx450_bstack
    lt rx450_pos, -1, rx450_done887
    lt rx450_pos, 0, rx450_fail889
    eq $I19, 0, rx450_fail889
    nqp_islist $I20, rx450_cstack
    unless $I20, rx450_jump890
    elements $I18, rx450_bstack
    le $I18, 0, rx450_cut891
    dec $I18
    set $I18, rx450_bstack[$I18]
  rx450_cut891:
    assign rx450_cstack, $I18
  rx450_jump890:
    jump $I19
  rx450_done887:
    rx450_cur."!cursor_fail"()
    .return (rx450_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_48_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 901
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_49_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx460_start
    .local string rx460_tgt
    .local int rx460_pos
    .local int rx460_off
    .local int rx460_eos
    .local int rx460_rep
    .local pmc rx460_cur
    .local pmc rx460_curclass
    .local pmc rx460_bstack
    .local pmc rx460_cstack
    rx460_start = self."!cursor_start_all"()
    set rx460_cur, rx460_start[0]
    set rx460_tgt, rx460_start[1]
    set rx460_pos, rx460_start[2]
    set rx460_curclass, rx460_start[3]
    set rx460_bstack, rx460_start[4]
    set $I19, rx460_start[5]
    store_lex unicode:"$\x{a2}", rx460_cur
    length rx460_eos, rx460_tgt
    eq $I19, 1, rx460_restart915
    gt rx460_pos, rx460_eos, rx460_fail916
    repr_get_attr_int $I11, self, rx460_curclass, "$!from"
    ne $I11, -1, rxscan461_done922
    goto rxscan461_scan921
  rxscan461_loop920:
    inc rx460_pos
    gt rx460_pos, rx460_eos, rx460_fail916
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!from", rx460_pos
  rxscan461_scan921:
    nqp_rxmark rx460_bstack, rxscan461_loop920, rx460_pos, 0
  rxscan461_done922:
    .const 'Sub' $P5001 = 'cuid_49_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    ge $I11, 0, rx460_fail916
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt466_0938
    nqp_push_label $P11, alt466_1940
    nqp_rxmark rx460_bstack, alt466_end937, -1, 0
    rx460_cur."!alt"(rx460_pos, "alt_nfa__8_1383915016.97831", $P11)
    goto rx460_fail916
  alt466_0938:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule467_pass939, -1, 0
  rxsubrule467_pass939:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    goto alt466_end937
  alt466_1940:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule468_pass941, -1, 0
  rxsubrule468_pass941:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."ws"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    nqp_rxmark rx460_bstack, rxquantr470_done944, rx460_pos, 0
  rxquantr470_loop943:
  alt471_0946:
    nqp_rxmark rx460_bstack, alt471_1947, rx460_pos, 0
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    goto alt471_end945
  alt471_1947:
    nqp_rxmark rx460_bstack, alt471_2953, rx460_pos, 0
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule472_pass948, -1, 0
  rxsubrule472_pass948:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    nqp_rxmark rx460_bstack, rxquantr473_done950, rx460_pos, 0
  rxquantr473_loop949:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    goto rxsubrule474_pass951
  rxsubrule474_back952:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
  rxsubrule474_pass951:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule474_back952
    push rx460_bstack, $I11
    push rx460_bstack, 0
    push rx460_bstack, rx460_pos
    elements $I11, rx460_cstack
    push rx460_bstack, $I11
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    nqp_rxpeek $I19, rx460_bstack, rxquantr473_done950
    inc $I19
    inc $I19
    set rx460_rep, rx460_bstack[$I19]
    nqp_rxcommit rx460_bstack, rxquantr473_done950
    inc rx460_rep
  rxquantr473_done950:
    goto alt471_end945
  alt471_2953:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule475_pass954, -1, 0
  rxsubrule475_pass954:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
  alt471_end945:
    nqp_rxpeek $I19, rx460_bstack, rxquantr470_done944
    inc $I19
    inc $I19
    set rx460_rep, rx460_bstack[$I19]
    nqp_rxcommit rx460_bstack, rxquantr470_done944
    inc rx460_rep
  rxquantr470_done944:
    goto alt466_end937
  alt466_end937:
    nqp_rxcommit rx460_bstack, alt466_end937
    rx460_cur."!cursor_pass"(rx460_pos, "statement", 'backtrack'=>1)
    .return (rx460_cur)
  rx460_restart915:
    repr_get_attr_obj rx460_cstack, rx460_cur, rx460_curclass, "$!cstack"
  rx460_fail916:
    unless rx460_bstack, rx460_done914
    pop $I19, rx460_bstack
    if_null rx460_cstack, rx460_cstack_done919
    unless rx460_cstack, rx460_cstack_done919
    dec $I19
    set $P11, rx460_cstack[$I19]
  rx460_cstack_done919:
    pop rx460_rep, rx460_bstack
    pop rx460_pos, rx460_bstack
    pop $I19, rx460_bstack
    lt rx460_pos, -1, rx460_done914
    lt rx460_pos, 0, rx460_fail916
    eq $I19, 0, rx460_fail916
    nqp_islist $I20, rx460_cstack
    unless $I20, rx460_jump917
    elements $I18, rx460_bstack
    le $I18, 0, rx460_cut918
    dec $I18
    set $I18, rx460_bstack[$I18]
  rx460_cut918:
    assign rx460_cstack, $I18
  rx460_jump917:
    jump $I19
  rx460_done914:
    rx460_cur."!cursor_fail"()
    .return (rx460_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_49_1383915013.33774") :anon :lex :outer("cuid_48_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx462_start
    .local string rx462_tgt
    .local int rx462_pos
    .local int rx462_off
    .local int rx462_eos
    .local int rx462_rep
    .local pmc rx462_cur
    .local pmc rx462_curclass
    .local pmc rx462_bstack
    .local pmc rx462_cstack
    rx462_start = self."!cursor_start_all"()
    set rx462_cur, rx462_start[0]
    set rx462_tgt, rx462_start[1]
    set rx462_pos, rx462_start[2]
    set rx462_curclass, rx462_start[3]
    set rx462_bstack, rx462_start[4]
    set $I19, rx462_start[5]
    store_lex unicode:"$\x{a2}", rx462_cur
    length rx462_eos, rx462_tgt
    eq $I19, 1, rx462_restart925
    gt rx462_pos, rx462_eos, rx462_fail926
    repr_get_attr_int $I11, self, rx462_curclass, "$!from"
    ne $I11, -1, rxscan463_done932
    goto rxscan463_scan931
  rxscan463_loop930:
    inc rx462_pos
    gt rx462_pos, rx462_eos, rx462_fail926
    repr_bind_attr_int rx462_cur, rx462_curclass, "$!from", rx462_pos
  rxscan463_scan931:
    nqp_rxmark rx462_bstack, rxscan463_loop930, rx462_pos, 0
  rxscan463_done932:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt464_0934
    nqp_push_label $P11, alt464_1935
    nqp_rxmark rx462_bstack, alt464_end933, -1, 0
    rx462_cur."!alt"(rx462_pos, "alt_nfa__7_1383915016.95173", $P11)
    goto rx462_fail926
  alt464_0934:
    ge rx462_pos, rx462_eos, rx462_fail926
    substr $S11, rx462_tgt, rx462_pos, 1
    index $I11, ucs4:"])}", $S11
    lt $I11, 0, rx462_fail926
    inc rx462_pos
    goto alt464_end933
  alt464_1935:
    lt rx462_pos, rx462_eos, rx462_fail926
    goto alt464_end933
  alt464_end933:
    rx462_cur."!cursor_pass"(rx462_pos, 'backtrack'=>1)
    .return (rx462_cur)
  rx462_restart925:
    repr_get_attr_obj rx462_cstack, rx462_cur, rx462_curclass, "$!cstack"
  rx462_fail926:
    unless rx462_bstack, rx462_done924
    pop $I19, rx462_bstack
    if_null rx462_cstack, rx462_cstack_done929
    unless rx462_cstack, rx462_cstack_done929
    dec $I19
    set $P11, rx462_cstack[$I19]
  rx462_cstack_done929:
    pop rx462_rep, rx462_bstack
    pop rx462_pos, rx462_bstack
    pop $I19, rx462_bstack
    lt rx462_pos, -1, rx462_done924
    lt rx462_pos, 0, rx462_fail926
    eq $I19, 0, rx462_fail926
    nqp_islist $I20, rx462_cstack
    unless $I20, rx462_jump927
    elements $I18, rx462_bstack
    le $I18, 0, rx462_cut928
    dec $I18
    set $I18, rx462_bstack[$I18]
  rx462_cut928:
    assign rx462_cstack, $I18
  rx462_jump927:
    jump $I19
  rx462_done924:
    rx462_cur."!cursor_fail"()
    .return (rx462_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_50_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 914
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx476_start
    .local string rx476_tgt
    .local int rx476_pos
    .local int rx476_off
    .local int rx476_eos
    .local int rx476_rep
    .local pmc rx476_cur
    .local pmc rx476_curclass
    .local pmc rx476_bstack
    .local pmc rx476_cstack
    rx476_start = self."!cursor_start_all"()
    set rx476_cur, rx476_start[0]
    set rx476_tgt, rx476_start[1]
    set rx476_pos, rx476_start[2]
    set rx476_curclass, rx476_start[3]
    set rx476_bstack, rx476_start[4]
    set $I19, rx476_start[5]
    store_lex unicode:"$\x{a2}", rx476_cur
    length rx476_eos, rx476_tgt
    eq $I19, 1, rx476_restart957
    gt rx476_pos, rx476_eos, rx476_fail958
    repr_get_attr_int $I11, self, rx476_curclass, "$!from"
    ne $I11, -1, rxscan477_done964
    goto rxscan477_scan963
  rxscan477_loop962:
    inc rx476_pos
    gt rx476_pos, rx476_eos, rx476_fail958
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!from", rx476_pos
  rxscan477_scan963:
    nqp_rxmark rx476_bstack, rxscan477_loop962, rx476_pos, 0
  rxscan477_done964:
  alt478_0966:
    nqp_rxmark rx476_bstack, alt478_1967, rx476_pos, 0
    add $I11, rx476_pos, 1
    gt $I11, rx476_eos, rx476_fail958
    substr $S10, rx476_tgt, rx476_pos, 1
    ne $S10, ucs4:";", rx476_fail958
    add rx476_pos, 1
    goto alt478_end965
  alt478_1967:
    nqp_rxmark rx476_bstack, alt478_2968, rx476_pos, 0
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!pos", rx476_pos
    $P11 = rx476_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx476_curclass, "$!pos"
    lt $I11, 0, rx476_fail958
    goto alt478_end965
  alt478_2968:
    nqp_rxmark rx476_bstack, alt478_3969, rx476_pos, 0
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!pos", rx476_pos
    $P11 = rx476_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx476_curclass, "$!pos"
    lt $I11, 0, rx476_fail958
    goto alt478_end965
  alt478_3969:
    lt rx476_pos, rx476_eos, rx476_fail958
  alt478_end965:
    rx476_cur."!cursor_pass"(rx476_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx476_cur)
  rx476_restart957:
    repr_get_attr_obj rx476_cstack, rx476_cur, rx476_curclass, "$!cstack"
  rx476_fail958:
    unless rx476_bstack, rx476_done956
    pop $I19, rx476_bstack
    if_null rx476_cstack, rx476_cstack_done961
    unless rx476_cstack, rx476_cstack_done961
    dec $I19
    set $P11, rx476_cstack[$I19]
  rx476_cstack_done961:
    pop rx476_rep, rx476_bstack
    pop rx476_pos, rx476_bstack
    pop $I19, rx476_bstack
    lt rx476_pos, -1, rx476_done956
    lt rx476_pos, 0, rx476_fail958
    eq $I19, 0, rx476_fail958
    nqp_islist $I20, rx476_cstack
    unless $I20, rx476_jump959
    elements $I18, rx476_bstack
    le $I18, 0, rx476_cut960
    dec $I18
    set $I18, rx476_bstack[$I18]
  rx476_cut960:
    assign rx476_cstack, $I18
  rx476_jump959:
    jump $I19
  rx476_done956:
    rx476_cur."!cursor_fail"()
    .return (rx476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_51_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 921
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx480_start
    .local string rx480_tgt
    .local int rx480_pos
    .local int rx480_off
    .local int rx480_eos
    .local int rx480_rep
    .local pmc rx480_cur
    .local pmc rx480_curclass
    .local pmc rx480_bstack
    .local pmc rx480_cstack
    rx480_start = self."!cursor_start_all"()
    set rx480_cur, rx480_start[0]
    set rx480_tgt, rx480_start[1]
    set rx480_pos, rx480_start[2]
    set rx480_curclass, rx480_start[3]
    set rx480_bstack, rx480_start[4]
    set $I19, rx480_start[5]
    store_lex unicode:"$\x{a2}", rx480_cur
    length rx480_eos, rx480_tgt
    eq $I19, 1, rx480_restart973
    gt rx480_pos, rx480_eos, rx480_fail974
    repr_get_attr_int $I11, self, rx480_curclass, "$!from"
    ne $I11, -1, rxscan481_done980
    goto rxscan481_scan979
  rxscan481_loop978:
    inc rx480_pos
    gt rx480_pos, rx480_eos, rx480_fail974
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!from", rx480_pos
  rxscan481_scan979:
    nqp_rxmark rx480_bstack, rxscan481_loop978, rx480_pos, 0
  rxscan481_done980:
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail974
    nqp_rxmark rx480_bstack, rxsubrule482_pass981, -1, 0
  rxsubrule482_pass981:
    rx480_cstack = rx480_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."ws"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail974
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail974
    nqp_rxmark rx480_bstack, rxsubrule484_pass983, -1, 0
  rxsubrule484_pass983:
    rx480_cstack = rx480_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    rx480_cur."!cursor_pass"(rx480_pos, "xblock", 'backtrack'=>1)
    .return (rx480_cur)
  rx480_restart973:
    repr_get_attr_obj rx480_cstack, rx480_cur, rx480_curclass, "$!cstack"
  rx480_fail974:
    unless rx480_bstack, rx480_done972
    pop $I19, rx480_bstack
    if_null rx480_cstack, rx480_cstack_done977
    unless rx480_cstack, rx480_cstack_done977
    dec $I19
    set $P11, rx480_cstack[$I19]
  rx480_cstack_done977:
    pop rx480_rep, rx480_bstack
    pop rx480_pos, rx480_bstack
    pop $I19, rx480_bstack
    lt rx480_pos, -1, rx480_done972
    lt rx480_pos, 0, rx480_fail974
    eq $I19, 0, rx480_fail974
    nqp_islist $I20, rx480_cstack
    unless $I20, rx480_jump975
    elements $I18, rx480_bstack
    le $I18, 0, rx480_cut976
    dec $I18
    set $I18, rx480_bstack[$I18]
  rx480_cut976:
    assign rx480_cstack, $I18
  rx480_jump975:
    jump $I19
  rx480_done972:
    rx480_cur."!cursor_fail"()
    .return (rx480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_52_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 925
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx485_start
    .local string rx485_tgt
    .local int rx485_pos
    .local int rx485_off
    .local int rx485_eos
    .local int rx485_rep
    .local pmc rx485_cur
    .local pmc rx485_curclass
    .local pmc rx485_bstack
    .local pmc rx485_cstack
    rx485_start = self."!cursor_start_all"()
    set rx485_cur, rx485_start[0]
    set rx485_tgt, rx485_start[1]
    set rx485_pos, rx485_start[2]
    set rx485_curclass, rx485_start[3]
    set rx485_bstack, rx485_start[4]
    set $I19, rx485_start[5]
    store_lex unicode:"$\x{a2}", rx485_cur
    length rx485_eos, rx485_tgt
    eq $I19, 1, rx485_restart986
    gt rx485_pos, rx485_eos, rx485_fail987
    repr_get_attr_int $I11, self, rx485_curclass, "$!from"
    ne $I11, -1, rxscan486_done993
    goto rxscan486_scan992
  rxscan486_loop991:
    inc rx485_pos
    gt rx485_pos, rx485_eos, rx485_fail987
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!from", rx485_pos
  rxscan486_scan992:
    nqp_rxmark rx485_bstack, rxscan486_loop991, rx485_pos, 0
  rxscan486_done993:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt487_0995
    nqp_push_label $P11, alt487_11001
    nqp_push_label $P11, alt487_21004
    nqp_rxmark rx485_bstack, alt487_end994, -1, 0
    rx485_cur."!alt"(rx485_pos, "alt_nfa__9_1383915017.03203", $P11)
    goto rx485_fail987
  alt487_0995:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."signature"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    nqp_rxmark rx485_bstack, rxsubrule490_pass998, -1, 0
  rxsubrule490_pass998:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."ws"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    nqp_rxmark rx485_bstack, rxsubrule492_pass1000, -1, 0
  rxsubrule492_pass1000:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt487_end994
  alt487_11001:
    ge rx485_pos, rx485_eos, rx485_fail987
    substr $S11, rx485_tgt, rx485_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx485_fail987
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    nqp_rxmark rx485_bstack, rxsubrule494_pass1003, -1, 0
  rxsubrule494_pass1003:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt487_end994
  alt487_21004:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt487_end994
  alt487_end994:
    rx485_cur."!cursor_pass"(rx485_pos, "pblock", 'backtrack'=>1)
    .return (rx485_cur)
  rx485_restart986:
    repr_get_attr_obj rx485_cstack, rx485_cur, rx485_curclass, "$!cstack"
  rx485_fail987:
    unless rx485_bstack, rx485_done985
    pop $I19, rx485_bstack
    if_null rx485_cstack, rx485_cstack_done990
    unless rx485_cstack, rx485_cstack_done990
    dec $I19
    set $P11, rx485_cstack[$I19]
  rx485_cstack_done990:
    pop rx485_rep, rx485_bstack
    pop rx485_pos, rx485_bstack
    pop $I19, rx485_bstack
    lt rx485_pos, -1, rx485_done985
    lt rx485_pos, 0, rx485_fail987
    eq $I19, 0, rx485_fail987
    nqp_islist $I20, rx485_cstack
    unless $I20, rx485_jump988
    elements $I18, rx485_bstack
    le $I18, 0, rx485_cut989
    dec $I18
    set $I18, rx485_bstack[$I18]
  rx485_cut989:
    assign rx485_cstack, $I18
  rx485_jump988:
    jump $I19
  rx485_done985:
    rx485_cur."!cursor_fail"()
    .return (rx485_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_53_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 936
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx496_start
    .local string rx496_tgt
    .local int rx496_pos
    .local int rx496_off
    .local int rx496_eos
    .local int rx496_rep
    .local pmc rx496_cur
    .local pmc rx496_curclass
    .local pmc rx496_bstack
    .local pmc rx496_cstack
    rx496_start = self."!cursor_start_all"()
    set rx496_cur, rx496_start[0]
    set rx496_tgt, rx496_start[1]
    set rx496_pos, rx496_start[2]
    set rx496_curclass, rx496_start[3]
    set rx496_bstack, rx496_start[4]
    set $I19, rx496_start[5]
    store_lex unicode:"$\x{a2}", rx496_cur
    length rx496_eos, rx496_tgt
    eq $I19, 1, rx496_restart1008
    gt rx496_pos, rx496_eos, rx496_fail1009
    repr_get_attr_int $I11, self, rx496_curclass, "$!from"
    ne $I11, -1, rxscan497_done1015
    goto rxscan497_scan1014
  rxscan497_loop1013:
    inc rx496_pos
    gt rx496_pos, rx496_eos, rx496_fail1009
    repr_bind_attr_int rx496_cur, rx496_curclass, "$!from", rx496_pos
  rxscan497_scan1014:
    nqp_rxmark rx496_bstack, rxscan497_loop1013, rx496_pos, 0
  rxscan497_done1015:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt498_01017
    nqp_push_label $P11, alt498_11018
    nqp_rxmark rx496_bstack, alt498_end1016, -1, 0
    rx496_cur."!alt"(rx496_pos, "alt_nfa__10_1383915017.04281", $P11)
    goto rx496_fail1009
  alt498_01017:
    add $I11, rx496_pos, 2
    gt $I11, rx496_eos, rx496_fail1009
    substr $S10, rx496_tgt, rx496_pos, 2
    ne $S10, ucs4:"->", rx496_fail1009
    add rx496_pos, 2
    goto alt498_end1016
  alt498_11018:
    add $I11, rx496_pos, 3
    gt $I11, rx496_eos, rx496_fail1009
    substr $S10, rx496_tgt, rx496_pos, 3
    ne $S10, ucs4:"<->", rx496_fail1009
    add rx496_pos, 3
    goto alt498_end1016
  alt498_end1016:
    rx496_cur."!cursor_pass"(rx496_pos, "lambda", 'backtrack'=>1)
    .return (rx496_cur)
  rx496_restart1008:
    repr_get_attr_obj rx496_cstack, rx496_cur, rx496_curclass, "$!cstack"
  rx496_fail1009:
    unless rx496_bstack, rx496_done1007
    pop $I19, rx496_bstack
    if_null rx496_cstack, rx496_cstack_done1012
    unless rx496_cstack, rx496_cstack_done1012
    dec $I19
    set $P11, rx496_cstack[$I19]
  rx496_cstack_done1012:
    pop rx496_rep, rx496_bstack
    pop rx496_pos, rx496_bstack
    pop $I19, rx496_bstack
    lt rx496_pos, -1, rx496_done1007
    lt rx496_pos, 0, rx496_fail1009
    eq $I19, 0, rx496_fail1009
    nqp_islist $I20, rx496_cstack
    unless $I20, rx496_jump1010
    elements $I18, rx496_bstack
    le $I18, 0, rx496_cut1011
    dec $I18
    set $I18, rx496_bstack[$I18]
  rx496_cut1011:
    assign rx496_cstack, $I18
  rx496_jump1010:
    jump $I19
  rx496_done1007:
    rx496_cur."!cursor_fail"()
    .return (rx496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_54_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 938
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx499_start
    .local string rx499_tgt
    .local int rx499_pos
    .local int rx499_off
    .local int rx499_eos
    .local int rx499_rep
    .local pmc rx499_cur
    .local pmc rx499_curclass
    .local pmc rx499_bstack
    .local pmc rx499_cstack
    rx499_start = self."!cursor_start_all"()
    set rx499_cur, rx499_start[0]
    set rx499_tgt, rx499_start[1]
    set rx499_pos, rx499_start[2]
    set rx499_curclass, rx499_start[3]
    set rx499_bstack, rx499_start[4]
    set $I19, rx499_start[5]
    store_lex unicode:"$\x{a2}", rx499_cur
    length rx499_eos, rx499_tgt
    eq $I19, 1, rx499_restart1021
    gt rx499_pos, rx499_eos, rx499_fail1022
    repr_get_attr_int $I11, self, rx499_curclass, "$!from"
    ne $I11, -1, rxscan500_done1028
    goto rxscan500_scan1027
  rxscan500_loop1026:
    inc rx499_pos
    gt rx499_pos, rx499_eos, rx499_fail1022
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!from", rx499_pos
  rxscan500_scan1027:
    nqp_rxmark rx499_bstack, rxscan500_loop1026, rx499_pos, 0
  rxscan500_done1028:
  alt501_01030:
    nqp_rxmark rx499_bstack, alt501_11031, rx499_pos, 0
    ge rx499_pos, rx499_eos, rx499_fail1022
    substr $S11, rx499_tgt, rx499_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx499_fail1022
    goto alt501_end1029
  alt501_11031:
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!pos", rx499_pos
    $P11 = rx499_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx499_curclass, "$!pos"
    lt $I11, 0, rx499_fail1022
    repr_get_attr_int rx499_pos, $P11, rx499_curclass, "$!pos"
  alt501_end1029:
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!pos", rx499_pos
    $P11 = rx499_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx499_curclass, "$!pos"
    lt $I11, 0, rx499_fail1022
    repr_get_attr_int rx499_pos, $P11, rx499_curclass, "$!pos"
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!pos", rx499_pos
    $P11 = rx499_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx499_curclass, "$!pos"
    lt $I11, 0, rx499_fail1022
    nqp_rxmark rx499_bstack, rxsubrule504_pass1034, -1, 0
  rxsubrule504_pass1034:
    rx499_cstack = rx499_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx499_pos, $P11, rx499_curclass, "$!pos"
    rx499_cur."!cursor_pass"(rx499_pos, "block", 'backtrack'=>1)
    .return (rx499_cur)
  rx499_restart1021:
    repr_get_attr_obj rx499_cstack, rx499_cur, rx499_curclass, "$!cstack"
  rx499_fail1022:
    unless rx499_bstack, rx499_done1020
    pop $I19, rx499_bstack
    if_null rx499_cstack, rx499_cstack_done1025
    unless rx499_cstack, rx499_cstack_done1025
    dec $I19
    set $P11, rx499_cstack[$I19]
  rx499_cstack_done1025:
    pop rx499_rep, rx499_bstack
    pop rx499_pos, rx499_bstack
    pop $I19, rx499_bstack
    lt rx499_pos, -1, rx499_done1020
    lt rx499_pos, 0, rx499_fail1022
    eq $I19, 0, rx499_fail1022
    nqp_islist $I20, rx499_cstack
    unless $I20, rx499_jump1023
    elements $I18, rx499_bstack
    le $I18, 0, rx499_cut1024
    dec $I18
    set $I18, rx499_bstack[$I18]
  rx499_cut1024:
    assign rx499_cstack, $I18
  rx499_jump1023:
    jump $I19
  rx499_done1020:
    rx499_cur."!cursor_fail"()
    .return (rx499_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_55_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 944
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_116 
    .local pmc pkg_viv_tmp_24 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx505_start
    .local string rx505_tgt
    .local int rx505_pos
    .local int rx505_off
    .local int rx505_eos
    .local int rx505_rep
    .local pmc rx505_cur
    .local pmc rx505_curclass
    .local pmc rx505_bstack
    .local pmc rx505_cstack
    rx505_start = self."!cursor_start_all"()
    set rx505_cur, rx505_start[0]
    set rx505_tgt, rx505_start[1]
    set rx505_pos, rx505_start[2]
    set rx505_curclass, rx505_start[3]
    set rx505_bstack, rx505_start[4]
    set $I19, rx505_start[5]
    store_lex unicode:"$\x{a2}", rx505_cur
    length rx505_eos, rx505_tgt
    eq $I19, 1, rx505_restart1037
    gt rx505_pos, rx505_eos, rx505_fail1038
    repr_get_attr_int $I11, self, rx505_curclass, "$!from"
    ne $I11, -1, rxscan506_done1044
    goto rxscan506_scan1043
  rxscan506_loop1042:
    inc rx505_pos
    gt rx505_pos, rx505_eos, rx505_fail1038
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!from", rx505_pos
  rxscan506_scan1043:
    nqp_rxmark rx505_bstack, rxscan506_loop1042, rx505_pos, 0
  rxscan506_done1044:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    store_lex unicode:"$\x{a2}", rx505_cur
    unless_null $P101, fallback1045
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_116, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_116
    unless $I5001 goto if507_else1046 
    set $P5004, fb_tmp_116["%HANDLERS"]
    set $P5006, $P5004
    goto if507_end1047
  if507_else1046:
    null $P5005
    set $P5006, $P5005
  if507_end1047:
    unless_null $P5006, vivi_5081048
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_5081048:
    unless_null $P5006, vivi_5091049
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_5091049:
    set $P101, $P5006
  fallback1045:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
  alt511_01052:
    nqp_rxmark rx505_bstack, alt511_11054, rx505_pos, 0
    add $I11, rx505_pos, 14
    gt $I11, rx505_eos, rx505_fail1038
    substr $S10, rx505_tgt, rx505_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx505_fail1038
    add rx505_pos, 14
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    nqp_rxmark rx505_bstack, rxsubrule512_pass1053, -1, 0
  rxsubrule512_pass1053:
    rx505_cstack = rx505_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
    goto alt511_end1051
  alt511_11054:
    add $I11, rx505_pos, 1
    gt $I11, rx505_eos, rx505_fail1038
    substr $S10, rx505_tgt, rx505_pos, 1
    ne $S10, ucs4:"{", rx505_fail1038
    add rx505_pos, 1
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    nqp_rxmark rx505_bstack, rxsubrule513_pass1055, -1, 0
  rxsubrule513_pass1055:
    rx505_cstack = rx505_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
  alt514_01057:
    nqp_rxmark rx505_bstack, alt514_11058, rx505_pos, 0
    add $I11, rx505_pos, 1
    gt $I11, rx505_eos, rx505_fail1038
    substr $S10, rx505_tgt, rx505_pos, 1
    ne $S10, ucs4:"}", rx505_fail1038
    add rx505_pos, 1
    goto alt514_end1056
  alt514_11058:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."FAILGOAL"("'}' ")
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    goto rxsubrule515_pass1059
  rxsubrule515_back1060:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
  rxsubrule515_pass1059:
    rx505_cstack = rx505_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule515_back1060
    push rx505_bstack, $I11
    push rx505_bstack, 0
    push rx505_bstack, rx505_pos
    elements $I11, rx505_cstack
    push rx505_bstack, $I11
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
  alt514_end1056:
  alt511_end1051:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    rx505_cur."!cursor_pass"(rx505_pos, "blockoid", 'backtrack'=>1)
    .return (rx505_cur)
  rx505_restart1037:
    repr_get_attr_obj rx505_cstack, rx505_cur, rx505_curclass, "$!cstack"
  rx505_fail1038:
    unless rx505_bstack, rx505_done1036
    pop $I19, rx505_bstack
    if_null rx505_cstack, rx505_cstack_done1041
    unless rx505_cstack, rx505_cstack_done1041
    dec $I19
    set $P11, rx505_cstack[$I19]
  rx505_cstack_done1041:
    pop rx505_rep, rx505_bstack
    pop rx505_pos, rx505_bstack
    pop $I19, rx505_bstack
    lt rx505_pos, -1, rx505_done1036
    lt rx505_pos, 0, rx505_fail1038
    eq $I19, 0, rx505_fail1038
    nqp_islist $I20, rx505_cstack
    unless $I20, rx505_jump1039
    elements $I18, rx505_bstack
    le $I18, 0, rx505_cut1040
    dec $I18
    set $I18, rx505_bstack[$I18]
  rx505_cut1040:
    assign rx505_cstack, $I18
  rx505_jump1039:
    jump $I19
  rx505_done1036:
    rx505_cur."!cursor_fail"()
    .return (rx505_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_56_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 954
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx516_start
    .local string rx516_tgt
    .local int rx516_pos
    .local int rx516_off
    .local int rx516_eos
    .local int rx516_rep
    .local pmc rx516_cur
    .local pmc rx516_curclass
    .local pmc rx516_bstack
    .local pmc rx516_cstack
    rx516_start = self."!cursor_start_all"()
    set rx516_cur, rx516_start[0]
    set rx516_tgt, rx516_start[1]
    set rx516_pos, rx516_start[2]
    set rx516_curclass, rx516_start[3]
    set rx516_bstack, rx516_start[4]
    set $I19, rx516_start[5]
    store_lex unicode:"$\x{a2}", rx516_cur
    length rx516_eos, rx516_tgt
    eq $I19, 1, rx516_restart1063
    gt rx516_pos, rx516_eos, rx516_fail1064
    repr_get_attr_int $I11, self, rx516_curclass, "$!from"
    ne $I11, -1, rxscan517_done1070
    goto rxscan517_scan1069
  rxscan517_loop1068:
    inc rx516_pos
    gt rx516_pos, rx516_eos, rx516_fail1064
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!from", rx516_pos
  rxscan517_scan1069:
    nqp_rxmark rx516_bstack, rxscan517_loop1068, rx516_pos, 0
  rxscan517_done1070:
    rx516_cur."!cursor_pass"(rx516_pos, "newpad", 'backtrack'=>1)
    .return (rx516_cur)
  rx516_restart1063:
    repr_get_attr_obj rx516_cstack, rx516_cur, rx516_curclass, "$!cstack"
  rx516_fail1064:
    unless rx516_bstack, rx516_done1062
    pop $I19, rx516_bstack
    if_null rx516_cstack, rx516_cstack_done1067
    unless rx516_cstack, rx516_cstack_done1067
    dec $I19
    set $P11, rx516_cstack[$I19]
  rx516_cstack_done1067:
    pop rx516_rep, rx516_bstack
    pop rx516_pos, rx516_bstack
    pop $I19, rx516_bstack
    lt rx516_pos, -1, rx516_done1062
    lt rx516_pos, 0, rx516_fail1064
    eq $I19, 0, rx516_fail1064
    nqp_islist $I20, rx516_cstack
    unless $I20, rx516_jump1065
    elements $I18, rx516_bstack
    le $I18, 0, rx516_cut1066
    dec $I18
    set $I18, rx516_bstack[$I18]
  rx516_cut1066:
    assign rx516_cstack, $I18
  rx516_jump1065:
    jump $I19
  rx516_done1062:
    rx516_cur."!cursor_fail"()
    .return (rx516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_57_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 955
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx519_start
    .local string rx519_tgt
    .local int rx519_pos
    .local int rx519_off
    .local int rx519_eos
    .local int rx519_rep
    .local pmc rx519_cur
    .local pmc rx519_curclass
    .local pmc rx519_bstack
    .local pmc rx519_cstack
    rx519_start = self."!cursor_start_all"()
    set rx519_cur, rx519_start[0]
    set rx519_tgt, rx519_start[1]
    set rx519_pos, rx519_start[2]
    set rx519_curclass, rx519_start[3]
    set rx519_bstack, rx519_start[4]
    set $I19, rx519_start[5]
    store_lex unicode:"$\x{a2}", rx519_cur
    length rx519_eos, rx519_tgt
    eq $I19, 1, rx519_restart1074
    gt rx519_pos, rx519_eos, rx519_fail1075
    repr_get_attr_int $I11, self, rx519_curclass, "$!from"
    ne $I11, -1, rxscan520_done1081
    goto rxscan520_scan1080
  rxscan520_loop1079:
    inc rx519_pos
    gt rx519_pos, rx519_eos, rx519_fail1075
    repr_bind_attr_int rx519_cur, rx519_curclass, "$!from", rx519_pos
  rxscan520_scan1080:
    nqp_rxmark rx519_bstack, rxscan520_loop1079, rx519_pos, 0
  rxscan520_done1081:
    rx519_cur."!cursor_pass"(rx519_pos, "outerctx", 'backtrack'=>1)
    .return (rx519_cur)
  rx519_restart1074:
    repr_get_attr_obj rx519_cstack, rx519_cur, rx519_curclass, "$!cstack"
  rx519_fail1075:
    unless rx519_bstack, rx519_done1073
    pop $I19, rx519_bstack
    if_null rx519_cstack, rx519_cstack_done1078
    unless rx519_cstack, rx519_cstack_done1078
    dec $I19
    set $P11, rx519_cstack[$I19]
  rx519_cstack_done1078:
    pop rx519_rep, rx519_bstack
    pop rx519_pos, rx519_bstack
    pop $I19, rx519_bstack
    lt rx519_pos, -1, rx519_done1073
    lt rx519_pos, 0, rx519_fail1075
    eq $I19, 0, rx519_fail1075
    nqp_islist $I20, rx519_cstack
    unless $I20, rx519_jump1076
    elements $I18, rx519_bstack
    le $I18, 0, rx519_cut1077
    dec $I18
    set $I18, rx519_bstack[$I18]
  rx519_cut1077:
    assign rx519_cstack, $I18
  rx519_jump1076:
    jump $I19
  rx519_done1073:
    rx519_cur."!cursor_fail"()
    .return (rx519_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_58_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 956
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx522_start
    .local string rx522_tgt
    .local int rx522_pos
    .local int rx522_off
    .local int rx522_eos
    .local int rx522_rep
    .local pmc rx522_cur
    .local pmc rx522_curclass
    .local pmc rx522_bstack
    .local pmc rx522_cstack
    rx522_start = self."!cursor_start_all"()
    set rx522_cur, rx522_start[0]
    set rx522_tgt, rx522_start[1]
    set rx522_pos, rx522_start[2]
    set rx522_curclass, rx522_start[3]
    set rx522_bstack, rx522_start[4]
    set $I19, rx522_start[5]
    store_lex unicode:"$\x{a2}", rx522_cur
    length rx522_eos, rx522_tgt
    eq $I19, 1, rx522_restart1085
    gt rx522_pos, rx522_eos, rx522_fail1086
    repr_get_attr_int $I11, self, rx522_curclass, "$!from"
    ne $I11, -1, rxscan523_done1092
    goto rxscan523_scan1091
  rxscan523_loop1090:
    inc rx522_pos
    gt rx522_pos, rx522_eos, rx522_fail1086
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!from", rx522_pos
  rxscan523_scan1091:
    nqp_rxmark rx522_bstack, rxscan523_loop1090, rx522_pos, 0
  rxscan523_done1092:
    rx522_cur."!cursor_pass"(rx522_pos, "finishpad", 'backtrack'=>1)
    .return (rx522_cur)
  rx522_restart1085:
    repr_get_attr_obj rx522_cstack, rx522_cur, rx522_curclass, "$!cstack"
  rx522_fail1086:
    unless rx522_bstack, rx522_done1084
    pop $I19, rx522_bstack
    if_null rx522_cstack, rx522_cstack_done1089
    unless rx522_cstack, rx522_cstack_done1089
    dec $I19
    set $P11, rx522_cstack[$I19]
  rx522_cstack_done1089:
    pop rx522_rep, rx522_bstack
    pop rx522_pos, rx522_bstack
    pop $I19, rx522_bstack
    lt rx522_pos, -1, rx522_done1084
    lt rx522_pos, 0, rx522_fail1086
    eq $I19, 0, rx522_fail1086
    nqp_islist $I20, rx522_cstack
    unless $I20, rx522_jump1087
    elements $I18, rx522_bstack
    le $I18, 0, rx522_cut1088
    dec $I18
    set $I18, rx522_bstack[$I18]
  rx522_cut1088:
    assign rx522_cstack, $I18
  rx522_jump1087:
    jump $I19
  rx522_done1084:
    rx522_cur."!cursor_fail"()
    .return (rx522_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_59_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 957
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx525_start
    .local string rx525_tgt
    .local int rx525_pos
    .local int rx525_off
    .local int rx525_eos
    .local int rx525_rep
    .local pmc rx525_cur
    .local pmc rx525_curclass
    .local pmc rx525_bstack
    .local pmc rx525_cstack
    rx525_start = self."!cursor_start_all"()
    set rx525_cur, rx525_start[0]
    set rx525_tgt, rx525_start[1]
    set rx525_pos, rx525_start[2]
    set rx525_curclass, rx525_start[3]
    set rx525_bstack, rx525_start[4]
    set $I19, rx525_start[5]
    store_lex unicode:"$\x{a2}", rx525_cur
    length rx525_eos, rx525_tgt
    eq $I19, 1, rx525_restart1096
    gt rx525_pos, rx525_eos, rx525_fail1097
    repr_get_attr_int $I11, self, rx525_curclass, "$!from"
    ne $I11, -1, rxscan526_done1103
    goto rxscan526_scan1102
  rxscan526_loop1101:
    inc rx525_pos
    gt rx525_pos, rx525_eos, rx525_fail1097
    repr_bind_attr_int rx525_cur, rx525_curclass, "$!from", rx525_pos
  rxscan526_scan1102:
    nqp_rxmark rx525_bstack, rxscan526_loop1101, rx525_pos, 0
  rxscan526_done1103:
    rx525_cur."!cursor_pass"(rx525_pos, "you_are_here", 'backtrack'=>1)
    .return (rx525_cur)
  rx525_restart1096:
    repr_get_attr_obj rx525_cstack, rx525_cur, rx525_curclass, "$!cstack"
  rx525_fail1097:
    unless rx525_bstack, rx525_done1095
    pop $I19, rx525_bstack
    if_null rx525_cstack, rx525_cstack_done1100
    unless rx525_cstack, rx525_cstack_done1100
    dec $I19
    set $P11, rx525_cstack[$I19]
  rx525_cstack_done1100:
    pop rx525_rep, rx525_bstack
    pop rx525_pos, rx525_bstack
    pop $I19, rx525_bstack
    lt rx525_pos, -1, rx525_done1095
    lt rx525_pos, 0, rx525_fail1097
    eq $I19, 0, rx525_fail1097
    nqp_islist $I20, rx525_cstack
    unless $I20, rx525_jump1098
    elements $I18, rx525_bstack
    le $I18, 0, rx525_cut1099
    dec $I18
    set $I18, rx525_bstack[$I18]
  rx525_cut1099:
    assign rx525_cstack, $I18
  rx525_jump1098:
    jump $I19
  rx525_done1095:
    rx525_cur."!cursor_fail"()
    .return (rx525_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_60_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 959
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_61_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 961
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx528_start
    .local string rx528_tgt
    .local int rx528_pos
    .local int rx528_off
    .local int rx528_eos
    .local int rx528_rep
    .local pmc rx528_cur
    .local pmc rx528_curclass
    .local pmc rx528_bstack
    .local pmc rx528_cstack
    rx528_start = self."!cursor_start_all"()
    set rx528_cur, rx528_start[0]
    set rx528_tgt, rx528_start[1]
    set rx528_pos, rx528_start[2]
    set rx528_curclass, rx528_start[3]
    set rx528_bstack, rx528_start[4]
    set $I19, rx528_start[5]
    store_lex unicode:"$\x{a2}", rx528_cur
    length rx528_eos, rx528_tgt
    eq $I19, 1, rx528_restart1107
    gt rx528_pos, rx528_eos, rx528_fail1108
    repr_get_attr_int $I11, self, rx528_curclass, "$!from"
    ne $I11, -1, rxscan529_done1114
    goto rxscan529_scan1113
  rxscan529_loop1112:
    inc rx528_pos
    gt rx528_pos, rx528_eos, rx528_fail1108
    repr_bind_attr_int rx528_cur, rx528_curclass, "$!from", rx528_pos
  rxscan529_scan1113:
    nqp_rxmark rx528_bstack, rxscan529_loop1112, rx528_pos, 0
  rxscan529_done1114:
    ge rx528_pos, rx528_eos, rx528_fail1108
    substr $S11, rx528_tgt, rx528_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx528_fail1108
    rx528_cur."!cursor_pass"(rx528_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx528_cur)
  rx528_restart1107:
    repr_get_attr_obj rx528_cstack, rx528_cur, rx528_curclass, "$!cstack"
  rx528_fail1108:
    unless rx528_bstack, rx528_done1106
    pop $I19, rx528_bstack
    if_null rx528_cstack, rx528_cstack_done1111
    unless rx528_cstack, rx528_cstack_done1111
    dec $I19
    set $P11, rx528_cstack[$I19]
  rx528_cstack_done1111:
    pop rx528_rep, rx528_bstack
    pop rx528_pos, rx528_bstack
    pop $I19, rx528_bstack
    lt rx528_pos, -1, rx528_done1106
    lt rx528_pos, 0, rx528_fail1108
    eq $I19, 0, rx528_fail1108
    nqp_islist $I20, rx528_cstack
    unless $I20, rx528_jump1109
    elements $I18, rx528_bstack
    le $I18, 0, rx528_cut1110
    dec $I18
    set $I18, rx528_bstack[$I18]
  rx528_cut1110:
    assign rx528_cstack, $I18
  rx528_jump1109:
    jump $I19
  rx528_done1106:
    rx528_cur."!cursor_fail"()
    .return (rx528_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_62_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 962
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx530_start
    .local string rx530_tgt
    .local int rx530_pos
    .local int rx530_off
    .local int rx530_eos
    .local int rx530_rep
    .local pmc rx530_cur
    .local pmc rx530_curclass
    .local pmc rx530_bstack
    .local pmc rx530_cstack
    rx530_start = self."!cursor_start_all"()
    set rx530_cur, rx530_start[0]
    set rx530_tgt, rx530_start[1]
    set rx530_pos, rx530_start[2]
    set rx530_curclass, rx530_start[3]
    set rx530_bstack, rx530_start[4]
    set $I19, rx530_start[5]
    store_lex unicode:"$\x{a2}", rx530_cur
    length rx530_eos, rx530_tgt
    eq $I19, 1, rx530_restart1117
    gt rx530_pos, rx530_eos, rx530_fail1118
    repr_get_attr_int $I11, self, rx530_curclass, "$!from"
    ne $I11, -1, rxscan531_done1124
    goto rxscan531_scan1123
  rxscan531_loop1122:
    inc rx530_pos
    gt rx530_pos, rx530_eos, rx530_fail1118
    repr_bind_attr_int rx530_cur, rx530_curclass, "$!from", rx530_pos
  rxscan531_scan1123:
    nqp_rxmark rx530_bstack, rxscan531_loop1122, rx530_pos, 0
  rxscan531_done1124:
    ge rx530_pos, rx530_eos, rx530_fail1118
    substr $S11, rx530_tgt, rx530_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx530_fail1118
    rx530_cur."!cursor_pass"(rx530_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx530_cur)
  rx530_restart1117:
    repr_get_attr_obj rx530_cstack, rx530_cur, rx530_curclass, "$!cstack"
  rx530_fail1118:
    unless rx530_bstack, rx530_done1116
    pop $I19, rx530_bstack
    if_null rx530_cstack, rx530_cstack_done1121
    unless rx530_cstack, rx530_cstack_done1121
    dec $I19
    set $P11, rx530_cstack[$I19]
  rx530_cstack_done1121:
    pop rx530_rep, rx530_bstack
    pop rx530_pos, rx530_bstack
    pop $I19, rx530_bstack
    lt rx530_pos, -1, rx530_done1116
    lt rx530_pos, 0, rx530_fail1118
    eq $I19, 0, rx530_fail1118
    nqp_islist $I20, rx530_cstack
    unless $I20, rx530_jump1119
    elements $I18, rx530_bstack
    le $I18, 0, rx530_cut1120
    dec $I18
    set $I18, rx530_bstack[$I18]
  rx530_cut1120:
    assign rx530_cstack, $I18
  rx530_jump1119:
    jump $I19
  rx530_done1116:
    rx530_cur."!cursor_fail"()
    .return (rx530_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_63_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 966
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_64_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 968
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx532_start
    .local string rx532_tgt
    .local int rx532_pos
    .local int rx532_off
    .local int rx532_eos
    .local int rx532_rep
    .local pmc rx532_cur
    .local pmc rx532_curclass
    .local pmc rx532_bstack
    .local pmc rx532_cstack
    rx532_start = self."!cursor_start_all"()
    set rx532_cur, rx532_start[0]
    set rx532_tgt, rx532_start[1]
    set rx532_pos, rx532_start[2]
    set rx532_curclass, rx532_start[3]
    set rx532_bstack, rx532_start[4]
    set $I19, rx532_start[5]
    store_lex unicode:"$\x{a2}", rx532_cur
    length rx532_eos, rx532_tgt
    eq $I19, 1, rx532_restart1127
    gt rx532_pos, rx532_eos, rx532_fail1128
    repr_get_attr_int $I11, self, rx532_curclass, "$!from"
    ne $I11, -1, rxscan533_done1134
    goto rxscan533_scan1133
  rxscan533_loop1132:
    inc rx532_pos
    gt rx532_pos, rx532_eos, rx532_fail1128
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!from", rx532_pos
  rxscan533_scan1133:
    nqp_rxmark rx532_bstack, rxscan533_loop1132, rx532_pos, 0
  rxscan533_done1134:
    nqp_rxmark rx532_bstack, rxcap534_fail1136, rx532_pos, 0
    add $I11, rx532_pos, 3
    gt $I11, rx532_eos, rx532_fail1128
    substr $S10, rx532_tgt, rx532_pos, 3
    ne $S10, ucs4:"use", rx532_fail1128
    add rx532_pos, 3
    nqp_rxpeek $I19, rx532_bstack, rxcap534_fail1136
    inc $I19
    set $I11, rx532_bstack[$I19]
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx532_pos)
    rx532_cstack = rx532_cur."!cursor_capture"($P11, "sym")
    goto rxcap534_done1135
  rxcap534_fail1136:
    goto rx532_fail1128
  rxcap534_done1135:
    ge rx532_pos, rx532_eos, rx532_fail1128
    is_cclass $I11, .CCLASS_WHITESPACE, rx532_tgt, rx532_pos
    unless $I11, rx532_fail1128
    add rx532_pos, 1
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."ws"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
    goto rxsubrule535_pass1137
  rxsubrule535_back1138:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
  rxsubrule535_pass1137:
    rx532_cstack = rx532_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule535_back1138
    push rx532_bstack, $I11
    push rx532_bstack, 0
    push rx532_bstack, rx532_pos
    elements $I11, rx532_cstack
    push rx532_bstack, $I11
    repr_get_attr_int rx532_pos, $P11, rx532_curclass, "$!pos"
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."name"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
    goto rxsubrule536_pass1139
  rxsubrule536_back1140:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
  rxsubrule536_pass1139:
    rx532_cstack = rx532_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule536_back1140
    push rx532_bstack, $I11
    push rx532_bstack, 0
    push rx532_bstack, rx532_pos
    elements $I11, rx532_cstack
    push rx532_bstack, $I11
    repr_get_attr_int rx532_pos, $P11, rx532_curclass, "$!pos"
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."ws"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
    goto rxsubrule537_pass1141
  rxsubrule537_back1142:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
  rxsubrule537_pass1141:
    rx532_cstack = rx532_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule537_back1142
    push rx532_bstack, $I11
    push rx532_bstack, 0
    push rx532_bstack, rx532_pos
    elements $I11, rx532_cstack
    push rx532_bstack, $I11
    repr_get_attr_int rx532_pos, $P11, rx532_curclass, "$!pos"
    rx532_cur."!cursor_pass"(rx532_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx532_cur)
  rx532_restart1127:
    repr_get_attr_obj rx532_cstack, rx532_cur, rx532_curclass, "$!cstack"
  rx532_fail1128:
    unless rx532_bstack, rx532_done1126
    pop $I19, rx532_bstack
    if_null rx532_cstack, rx532_cstack_done1131
    unless rx532_cstack, rx532_cstack_done1131
    dec $I19
    set $P11, rx532_cstack[$I19]
  rx532_cstack_done1131:
    pop rx532_rep, rx532_bstack
    pop rx532_pos, rx532_bstack
    pop $I19, rx532_bstack
    lt rx532_pos, -1, rx532_done1126
    lt rx532_pos, 0, rx532_fail1128
    eq $I19, 0, rx532_fail1128
    nqp_islist $I20, rx532_cstack
    unless $I20, rx532_jump1129
    elements $I18, rx532_bstack
    le $I18, 0, rx532_cut1130
    dec $I18
    set $I18, rx532_bstack[$I18]
  rx532_cut1130:
    assign rx532_cstack, $I18
  rx532_jump1129:
    jump $I19
  rx532_done1126:
    rx532_cur."!cursor_fail"()
    .return (rx532_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_65_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 972
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx538_start
    .local string rx538_tgt
    .local int rx538_pos
    .local int rx538_off
    .local int rx538_eos
    .local int rx538_rep
    .local pmc rx538_cur
    .local pmc rx538_curclass
    .local pmc rx538_bstack
    .local pmc rx538_cstack
    rx538_start = self."!cursor_start_all"()
    set rx538_cur, rx538_start[0]
    set rx538_tgt, rx538_start[1]
    set rx538_pos, rx538_start[2]
    set rx538_curclass, rx538_start[3]
    set rx538_bstack, rx538_start[4]
    set $I19, rx538_start[5]
    store_lex unicode:"$\x{a2}", rx538_cur
    length rx538_eos, rx538_tgt
    eq $I19, 1, rx538_restart1145
    gt rx538_pos, rx538_eos, rx538_fail1146
    repr_get_attr_int $I11, self, rx538_curclass, "$!from"
    ne $I11, -1, rxscan539_done1152
    goto rxscan539_scan1151
  rxscan539_loop1150:
    inc rx538_pos
    gt rx538_pos, rx538_eos, rx538_fail1146
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!from", rx538_pos
  rxscan539_scan1151:
    nqp_rxmark rx538_bstack, rxscan539_loop1150, rx538_pos, 0
  rxscan539_done1152:
    nqp_rxmark rx538_bstack, rxcap540_fail1154, rx538_pos, 0
    add $I11, rx538_pos, 2
    gt $I11, rx538_eos, rx538_fail1146
    substr $S10, rx538_tgt, rx538_pos, 2
    ne $S10, ucs4:"if", rx538_fail1146
    add rx538_pos, 2
    nqp_rxpeek $I19, rx538_bstack, rxcap540_fail1154
    inc $I19
    set $I11, rx538_bstack[$I19]
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx538_pos)
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "sym")
    goto rxcap540_done1153
  rxcap540_fail1154:
    goto rx538_fail1146
  rxcap540_done1153:
    ge rx538_pos, rx538_eos, rx538_fail1146
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1146
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule541_pass1155
  rxsubrule541_back1156:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule541_pass1155:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule541_back1156
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule542_pass1157
  rxsubrule542_back1158:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule542_pass1157:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule542_back1158
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule543_pass1159
  rxsubrule543_back1160:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule543_pass1159:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule543_back1160
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxquantg544_done1162, rx538_pos, 0
  rxquantg544_loop1161:
    add $I11, rx538_pos, 5
    gt $I11, rx538_eos, rx538_fail1146
    substr $S10, rx538_tgt, rx538_pos, 5
    ne $S10, ucs4:"elsif", rx538_fail1146
    add rx538_pos, 5
    ge rx538_pos, rx538_eos, rx538_fail1146
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1146
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule545_pass1163
  rxsubrule545_back1164:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule545_pass1163:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule545_back1164
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule546_pass1165
  rxsubrule546_back1166:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule546_pass1165:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule546_back1166
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule547_pass1167
  rxsubrule547_back1168:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule547_pass1167:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule547_back1168
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxquantg544_done1162, rx538_pos, rx538_rep
    goto rxquantg544_loop1161
  rxquantg544_done1162:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule548_pass1169
  rxsubrule548_back1170:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule548_pass1169:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule548_back1170
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxquantg549_done1172, rx538_pos, 0
  rxquantg549_loop1171:
    add $I11, rx538_pos, 4
    gt $I11, rx538_eos, rx538_fail1146
    substr $S10, rx538_tgt, rx538_pos, 4
    ne $S10, ucs4:"else", rx538_fail1146
    add rx538_pos, 4
    ge rx538_pos, rx538_eos, rx538_fail1146
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1146
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule550_pass1173
  rxsubrule550_back1174:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule550_pass1173:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule550_back1174
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule551_pass1175
  rxsubrule551_back1176:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule551_pass1175:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "else")
    set_addr $I11, rxsubrule551_back1176
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule552_pass1177
  rxsubrule552_back1178:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule552_pass1177:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule552_back1178
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
  rxquantg549_done1172:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule553_pass1179
  rxsubrule553_back1180:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule553_pass1179:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule553_back1180
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    rx538_cur."!cursor_pass"(rx538_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx538_cur)
  rx538_restart1145:
    repr_get_attr_obj rx538_cstack, rx538_cur, rx538_curclass, "$!cstack"
  rx538_fail1146:
    unless rx538_bstack, rx538_done1144
    pop $I19, rx538_bstack
    if_null rx538_cstack, rx538_cstack_done1149
    unless rx538_cstack, rx538_cstack_done1149
    dec $I19
    set $P11, rx538_cstack[$I19]
  rx538_cstack_done1149:
    pop rx538_rep, rx538_bstack
    pop rx538_pos, rx538_bstack
    pop $I19, rx538_bstack
    lt rx538_pos, -1, rx538_done1144
    lt rx538_pos, 0, rx538_fail1146
    eq $I19, 0, rx538_fail1146
    nqp_islist $I20, rx538_cstack
    unless $I20, rx538_jump1147
    elements $I18, rx538_bstack
    le $I18, 0, rx538_cut1148
    dec $I18
    set $I18, rx538_bstack[$I18]
  rx538_cut1148:
    assign rx538_cstack, $I18
  rx538_jump1147:
    jump $I19
  rx538_done1144:
    rx538_cur."!cursor_fail"()
    .return (rx538_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_66_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 979
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_67_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx554_start
    .local string rx554_tgt
    .local int rx554_pos
    .local int rx554_off
    .local int rx554_eos
    .local int rx554_rep
    .local pmc rx554_cur
    .local pmc rx554_curclass
    .local pmc rx554_bstack
    .local pmc rx554_cstack
    rx554_start = self."!cursor_start_all"()
    set rx554_cur, rx554_start[0]
    set rx554_tgt, rx554_start[1]
    set rx554_pos, rx554_start[2]
    set rx554_curclass, rx554_start[3]
    set rx554_bstack, rx554_start[4]
    set $I19, rx554_start[5]
    store_lex unicode:"$\x{a2}", rx554_cur
    length rx554_eos, rx554_tgt
    eq $I19, 1, rx554_restart1183
    gt rx554_pos, rx554_eos, rx554_fail1184
    repr_get_attr_int $I11, self, rx554_curclass, "$!from"
    ne $I11, -1, rxscan555_done1190
    goto rxscan555_scan1189
  rxscan555_loop1188:
    inc rx554_pos
    gt rx554_pos, rx554_eos, rx554_fail1184
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!from", rx554_pos
  rxscan555_scan1189:
    nqp_rxmark rx554_bstack, rxscan555_loop1188, rx554_pos, 0
  rxscan555_done1190:
    nqp_rxmark rx554_bstack, rxcap556_fail1192, rx554_pos, 0
    add $I11, rx554_pos, 6
    gt $I11, rx554_eos, rx554_fail1184
    substr $S10, rx554_tgt, rx554_pos, 6
    ne $S10, ucs4:"unless", rx554_fail1184
    add rx554_pos, 6
    nqp_rxpeek $I19, rx554_bstack, rxcap556_fail1192
    inc $I19
    set $I11, rx554_bstack[$I19]
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx554_pos)
    rx554_cstack = rx554_cur."!cursor_capture"($P11, "sym")
    goto rxcap556_done1191
  rxcap556_fail1192:
    goto rx554_fail1184
  rxcap556_done1191:
    ge rx554_pos, rx554_eos, rx554_fail1184
    is_cclass $I11, .CCLASS_WHITESPACE, rx554_tgt, rx554_pos
    unless $I11, rx554_fail1184
    add rx554_pos, 1
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule557_pass1193
  rxsubrule557_back1194:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule557_pass1193:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule557_back1194
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule558_pass1195
  rxsubrule558_back1196:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule558_pass1195:
    rx554_cstack = rx554_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule558_back1196
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule559_pass1197
  rxsubrule559_back1198:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule559_pass1197:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule559_back1198
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
  alt560_01200:
    nqp_rxmark rx554_bstack, alt560_11213, rx554_pos, 0
    .const 'Sub' $P5001 = 'cuid_67_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    ge $I11, 0, rx554_fail1184
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule563_pass1211
  rxsubrule563_back1212:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule563_pass1211:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule563_back1212
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    goto alt560_end1199
  alt560_11213:
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule564_pass1214
  rxsubrule564_back1215:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule564_pass1214:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule564_back1215
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule565_pass1216
  rxsubrule565_back1217:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule565_pass1216:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule565_back1217
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
  alt560_end1199:
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule566_pass1218
  rxsubrule566_back1219:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule566_pass1218:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule566_back1219
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    rx554_cur."!cursor_pass"(rx554_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx554_cur)
  rx554_restart1183:
    repr_get_attr_obj rx554_cstack, rx554_cur, rx554_curclass, "$!cstack"
  rx554_fail1184:
    unless rx554_bstack, rx554_done1182
    pop $I19, rx554_bstack
    if_null rx554_cstack, rx554_cstack_done1187
    unless rx554_cstack, rx554_cstack_done1187
    dec $I19
    set $P11, rx554_cstack[$I19]
  rx554_cstack_done1187:
    pop rx554_rep, rx554_bstack
    pop rx554_pos, rx554_bstack
    pop $I19, rx554_bstack
    lt rx554_pos, -1, rx554_done1182
    lt rx554_pos, 0, rx554_fail1184
    eq $I19, 0, rx554_fail1184
    nqp_islist $I20, rx554_cstack
    unless $I20, rx554_jump1185
    elements $I18, rx554_bstack
    le $I18, 0, rx554_cut1186
    dec $I18
    set $I18, rx554_bstack[$I18]
  rx554_cut1186:
    assign rx554_cstack, $I18
  rx554_jump1185:
    jump $I19
  rx554_done1182:
    rx554_cur."!cursor_fail"()
    .return (rx554_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_67_1383915013.33774") :anon :lex :outer("cuid_66_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx561_start
    .local string rx561_tgt
    .local int rx561_pos
    .local int rx561_off
    .local int rx561_eos
    .local int rx561_rep
    .local pmc rx561_cur
    .local pmc rx561_curclass
    .local pmc rx561_bstack
    .local pmc rx561_cstack
    rx561_start = self."!cursor_start_all"()
    set rx561_cur, rx561_start[0]
    set rx561_tgt, rx561_start[1]
    set rx561_pos, rx561_start[2]
    set rx561_curclass, rx561_start[3]
    set rx561_bstack, rx561_start[4]
    set $I19, rx561_start[5]
    store_lex unicode:"$\x{a2}", rx561_cur
    length rx561_eos, rx561_tgt
    eq $I19, 1, rx561_restart1203
    gt rx561_pos, rx561_eos, rx561_fail1204
    repr_get_attr_int $I11, self, rx561_curclass, "$!from"
    ne $I11, -1, rxscan562_done1210
    goto rxscan562_scan1209
  rxscan562_loop1208:
    inc rx561_pos
    index rx561_pos, rx561_tgt, ucs4:"else", rx561_pos
    eq rx561_pos, -1, rx561_fail1204
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!from", rx561_pos
  rxscan562_scan1209:
    nqp_rxmark rx561_bstack, rxscan562_loop1208, rx561_pos, 0
  rxscan562_done1210:
    add $I11, rx561_pos, 4
    gt $I11, rx561_eos, rx561_fail1204
    substr $S10, rx561_tgt, rx561_pos, 4
    ne $S10, ucs4:"else", rx561_fail1204
    add rx561_pos, 4
    rx561_cur."!cursor_pass"(rx561_pos, 'backtrack'=>1)
    .return (rx561_cur)
  rx561_restart1203:
    repr_get_attr_obj rx561_cstack, rx561_cur, rx561_curclass, "$!cstack"
  rx561_fail1204:
    unless rx561_bstack, rx561_done1202
    pop $I19, rx561_bstack
    if_null rx561_cstack, rx561_cstack_done1207
    unless rx561_cstack, rx561_cstack_done1207
    dec $I19
    set $P11, rx561_cstack[$I19]
  rx561_cstack_done1207:
    pop rx561_rep, rx561_bstack
    pop rx561_pos, rx561_bstack
    pop $I19, rx561_bstack
    lt rx561_pos, -1, rx561_done1202
    lt rx561_pos, 0, rx561_fail1204
    eq $I19, 0, rx561_fail1204
    nqp_islist $I20, rx561_cstack
    unless $I20, rx561_jump1205
    elements $I18, rx561_bstack
    le $I18, 0, rx561_cut1206
    dec $I18
    set $I18, rx561_bstack[$I18]
  rx561_cut1206:
    assign rx561_cstack, $I18
  rx561_jump1205:
    jump $I19
  rx561_done1202:
    rx561_cur."!cursor_fail"()
    .return (rx561_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_68_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 985
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx567_start
    .local string rx567_tgt
    .local int rx567_pos
    .local int rx567_off
    .local int rx567_eos
    .local int rx567_rep
    .local pmc rx567_cur
    .local pmc rx567_curclass
    .local pmc rx567_bstack
    .local pmc rx567_cstack
    rx567_start = self."!cursor_start_all"()
    set rx567_cur, rx567_start[0]
    set rx567_tgt, rx567_start[1]
    set rx567_pos, rx567_start[2]
    set rx567_curclass, rx567_start[3]
    set rx567_bstack, rx567_start[4]
    set $I19, rx567_start[5]
    store_lex unicode:"$\x{a2}", rx567_cur
    length rx567_eos, rx567_tgt
    eq $I19, 1, rx567_restart1222
    gt rx567_pos, rx567_eos, rx567_fail1223
    repr_get_attr_int $I11, self, rx567_curclass, "$!from"
    ne $I11, -1, rxscan568_done1229
    goto rxscan568_scan1228
  rxscan568_loop1227:
    inc rx567_pos
    gt rx567_pos, rx567_eos, rx567_fail1223
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!from", rx567_pos
  rxscan568_scan1228:
    nqp_rxmark rx567_bstack, rxscan568_loop1227, rx567_pos, 0
  rxscan568_done1229:
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    store_lex unicode:"$\x{a2}", rx567_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx567_bstack, rxcap569_fail1231, rx567_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt570_01233
    nqp_push_label $P11, alt570_11234
    nqp_rxmark rx567_bstack, alt570_end1232, -1, 0
    rx567_cur."!alt"(rx567_pos, "alt_nfa__11_1383915017.23114", $P11)
    goto rx567_fail1223
  alt570_01233:
    add $I11, rx567_pos, 5
    gt $I11, rx567_eos, rx567_fail1223
    substr $S10, rx567_tgt, rx567_pos, 5
    ne $S10, ucs4:"while", rx567_fail1223
    add rx567_pos, 5
    goto alt570_end1232
  alt570_11234:
    add $I11, rx567_pos, 5
    gt $I11, rx567_eos, rx567_fail1223
    substr $S10, rx567_tgt, rx567_pos, 5
    ne $S10, ucs4:"until", rx567_fail1223
    add rx567_pos, 5
    goto alt570_end1232
  alt570_end1232:
    nqp_rxcommit rx567_bstack, alt570_end1232
    nqp_rxpeek $I19, rx567_bstack, rxcap569_fail1231
    inc $I19
    set $I11, rx567_bstack[$I19]
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx567_pos)
    rx567_cstack = rx567_cur."!cursor_capture"($P11, "sym")
    goto rxcap569_done1230
  rxcap569_fail1231:
    goto rx567_fail1223
  rxcap569_done1230:
    ge rx567_pos, rx567_eos, rx567_fail1223
    is_cclass $I11, .CCLASS_WHITESPACE, rx567_tgt, rx567_pos
    unless $I11, rx567_fail1223
    add rx567_pos, 1
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."ws"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
    goto rxsubrule571_pass1235
  rxsubrule571_back1236:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
  rxsubrule571_pass1235:
    rx567_cstack = rx567_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule571_back1236
    push rx567_bstack, $I11
    push rx567_bstack, 0
    push rx567_bstack, rx567_pos
    elements $I11, rx567_cstack
    push rx567_bstack, $I11
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
    goto rxsubrule572_pass1237
  rxsubrule572_back1238:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
  rxsubrule572_pass1237:
    rx567_cstack = rx567_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule572_back1238
    push rx567_bstack, $I11
    push rx567_bstack, 0
    push rx567_bstack, rx567_pos
    elements $I11, rx567_cstack
    push rx567_bstack, $I11
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."ws"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
    goto rxsubrule573_pass1239
  rxsubrule573_back1240:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
  rxsubrule573_pass1239:
    rx567_cstack = rx567_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule573_back1240
    push rx567_bstack, $I11
    push rx567_bstack, 0
    push rx567_bstack, rx567_pos
    elements $I11, rx567_cstack
    push rx567_bstack, $I11
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    rx567_cur."!cursor_pass"(rx567_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx567_cur)
  rx567_restart1222:
    repr_get_attr_obj rx567_cstack, rx567_cur, rx567_curclass, "$!cstack"
  rx567_fail1223:
    unless rx567_bstack, rx567_done1221
    pop $I19, rx567_bstack
    if_null rx567_cstack, rx567_cstack_done1226
    unless rx567_cstack, rx567_cstack_done1226
    dec $I19
    set $P11, rx567_cstack[$I19]
  rx567_cstack_done1226:
    pop rx567_rep, rx567_bstack
    pop rx567_pos, rx567_bstack
    pop $I19, rx567_bstack
    lt rx567_pos, -1, rx567_done1221
    lt rx567_pos, 0, rx567_fail1223
    eq $I19, 0, rx567_fail1223
    nqp_islist $I20, rx567_cstack
    unless $I20, rx567_jump1224
    elements $I18, rx567_bstack
    le $I18, 0, rx567_cut1225
    dec $I18
    set $I18, rx567_bstack[$I18]
  rx567_cut1225:
    assign rx567_cstack, $I18
  rx567_jump1224:
    jump $I19
  rx567_done1221:
    rx567_cur."!cursor_fail"()
    .return (rx567_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_69_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 991
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx574_start
    .local string rx574_tgt
    .local int rx574_pos
    .local int rx574_off
    .local int rx574_eos
    .local int rx574_rep
    .local pmc rx574_cur
    .local pmc rx574_curclass
    .local pmc rx574_bstack
    .local pmc rx574_cstack
    rx574_start = self."!cursor_start_all"()
    set rx574_cur, rx574_start[0]
    set rx574_tgt, rx574_start[1]
    set rx574_pos, rx574_start[2]
    set rx574_curclass, rx574_start[3]
    set rx574_bstack, rx574_start[4]
    set $I19, rx574_start[5]
    store_lex unicode:"$\x{a2}", rx574_cur
    length rx574_eos, rx574_tgt
    eq $I19, 1, rx574_restart1243
    gt rx574_pos, rx574_eos, rx574_fail1244
    repr_get_attr_int $I11, self, rx574_curclass, "$!from"
    ne $I11, -1, rxscan575_done1250
    goto rxscan575_scan1249
  rxscan575_loop1248:
    inc rx574_pos
    gt rx574_pos, rx574_eos, rx574_fail1244
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!from", rx574_pos
  rxscan575_scan1249:
    nqp_rxmark rx574_bstack, rxscan575_loop1248, rx574_pos, 0
  rxscan575_done1250:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    store_lex unicode:"$\x{a2}", rx574_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx574_bstack, rxcap576_fail1252, rx574_pos, 0
    add $I11, rx574_pos, 6
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 6
    ne $S10, ucs4:"repeat", rx574_fail1244
    add rx574_pos, 6
    nqp_rxpeek $I19, rx574_bstack, rxcap576_fail1252
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "sym")
    goto rxcap576_done1251
  rxcap576_fail1252:
    goto rx574_fail1244
  rxcap576_done1251:
    ge rx574_pos, rx574_eos, rx574_fail1244
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1244
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule577_pass1253
  rxsubrule577_back1254:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule577_pass1253:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule577_back1254
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt578_01256
    nqp_push_label $P11, alt578_11268
    nqp_rxmark rx574_bstack, alt578_end1255, -1, 0
    rx574_cur."!alt"(rx574_pos, "alt_nfa__14_1383915017.33976", $P11)
    goto rx574_fail1244
  alt578_01256:
    nqp_rxmark rx574_bstack, rxcap579_fail1258, rx574_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt580_01260
    nqp_push_label $P11, alt580_11261
    nqp_rxmark rx574_bstack, alt580_end1259, -1, 0
    rx574_cur."!alt"(rx574_pos, "alt_nfa__12_1383915017.33759", $P11)
    goto rx574_fail1244
  alt580_01260:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"while", rx574_fail1244
    add rx574_pos, 5
    goto alt580_end1259
  alt580_11261:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"until", rx574_fail1244
    add rx574_pos, 5
    goto alt580_end1259
  alt580_end1259:
    nqp_rxcommit rx574_bstack, alt580_end1259
    nqp_rxpeek $I19, rx574_bstack, rxcap579_fail1258
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "wu")
    goto rxcap579_done1257
  rxcap579_fail1258:
    goto rx574_fail1244
  rxcap579_done1257:
    ge rx574_pos, rx574_eos, rx574_fail1244
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1244
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule581_pass1262
  rxsubrule581_back1263:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule581_pass1262:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule581_back1263
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule582_pass1264
  rxsubrule582_back1265:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule582_pass1264:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule582_back1265
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule583_pass1266
  rxsubrule583_back1267:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule583_pass1266:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule583_back1267
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    goto alt578_end1255
  alt578_11268:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule584_pass1269
  rxsubrule584_back1270:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule584_pass1269:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "pblock")
    set_addr $I11, rxsubrule584_back1270
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule585_pass1271
  rxsubrule585_back1272:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule585_pass1271:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule585_back1272
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    nqp_rxmark rx574_bstack, rxcap586_fail1274, rx574_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt587_01276
    nqp_push_label $P11, alt587_11277
    nqp_rxmark rx574_bstack, alt587_end1275, -1, 0
    rx574_cur."!alt"(rx574_pos, "alt_nfa__13_1383915017.3388", $P11)
    goto rx574_fail1244
  alt587_01276:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"while", rx574_fail1244
    add rx574_pos, 5
    goto alt587_end1275
  alt587_11277:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"until", rx574_fail1244
    add rx574_pos, 5
    goto alt587_end1275
  alt587_end1275:
    nqp_rxcommit rx574_bstack, alt587_end1275
    nqp_rxpeek $I19, rx574_bstack, rxcap586_fail1274
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "wu")
    goto rxcap586_done1273
  rxcap586_fail1274:
    goto rx574_fail1244
  rxcap586_done1273:
    ge rx574_pos, rx574_eos, rx574_fail1244
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1244
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule588_pass1278
  rxsubrule588_back1279:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule588_pass1278:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule588_back1279
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule589_pass1280
  rxsubrule589_back1281:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule589_pass1280:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule589_back1281
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule590_pass1282
  rxsubrule590_back1283:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule590_pass1282:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule590_back1283
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    goto alt578_end1255
  alt578_end1255:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule591_pass1284
  rxsubrule591_back1285:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule591_pass1284:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule591_back1285
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    rx574_cur."!cursor_pass"(rx574_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx574_cur)
  rx574_restart1243:
    repr_get_attr_obj rx574_cstack, rx574_cur, rx574_curclass, "$!cstack"
  rx574_fail1244:
    unless rx574_bstack, rx574_done1242
    pop $I19, rx574_bstack
    if_null rx574_cstack, rx574_cstack_done1247
    unless rx574_cstack, rx574_cstack_done1247
    dec $I19
    set $P11, rx574_cstack[$I19]
  rx574_cstack_done1247:
    pop rx574_rep, rx574_bstack
    pop rx574_pos, rx574_bstack
    pop $I19, rx574_bstack
    lt rx574_pos, -1, rx574_done1242
    lt rx574_pos, 0, rx574_fail1244
    eq $I19, 0, rx574_fail1244
    nqp_islist $I20, rx574_cstack
    unless $I20, rx574_jump1245
    elements $I18, rx574_bstack
    le $I18, 0, rx574_cut1246
    dec $I18
    set $I18, rx574_bstack[$I18]
  rx574_cut1246:
    assign rx574_cstack, $I18
  rx574_jump1245:
    jump $I19
  rx574_done1242:
    rx574_cur."!cursor_fail"()
    .return (rx574_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_70_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1000
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx592_start
    .local string rx592_tgt
    .local int rx592_pos
    .local int rx592_off
    .local int rx592_eos
    .local int rx592_rep
    .local pmc rx592_cur
    .local pmc rx592_curclass
    .local pmc rx592_bstack
    .local pmc rx592_cstack
    rx592_start = self."!cursor_start_all"()
    set rx592_cur, rx592_start[0]
    set rx592_tgt, rx592_start[1]
    set rx592_pos, rx592_start[2]
    set rx592_curclass, rx592_start[3]
    set rx592_bstack, rx592_start[4]
    set $I19, rx592_start[5]
    store_lex unicode:"$\x{a2}", rx592_cur
    length rx592_eos, rx592_tgt
    eq $I19, 1, rx592_restart1288
    gt rx592_pos, rx592_eos, rx592_fail1289
    repr_get_attr_int $I11, self, rx592_curclass, "$!from"
    ne $I11, -1, rxscan593_done1295
    goto rxscan593_scan1294
  rxscan593_loop1293:
    inc rx592_pos
    gt rx592_pos, rx592_eos, rx592_fail1289
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!from", rx592_pos
  rxscan593_scan1294:
    nqp_rxmark rx592_bstack, rxscan593_loop1293, rx592_pos, 0
  rxscan593_done1295:
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    store_lex unicode:"$\x{a2}", rx592_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx592_bstack, rxcap594_fail1297, rx592_pos, 0
    add $I11, rx592_pos, 3
    gt $I11, rx592_eos, rx592_fail1289
    substr $S10, rx592_tgt, rx592_pos, 3
    ne $S10, ucs4:"for", rx592_fail1289
    add rx592_pos, 3
    nqp_rxpeek $I19, rx592_bstack, rxcap594_fail1297
    inc $I19
    set $I11, rx592_bstack[$I19]
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx592_pos)
    rx592_cstack = rx592_cur."!cursor_capture"($P11, "sym")
    goto rxcap594_done1296
  rxcap594_fail1297:
    goto rx592_fail1289
  rxcap594_done1296:
    ge rx592_pos, rx592_eos, rx592_fail1289
    is_cclass $I11, .CCLASS_WHITESPACE, rx592_tgt, rx592_pos
    unless $I11, rx592_fail1289
    add rx592_pos, 1
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."ws"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
    goto rxsubrule595_pass1298
  rxsubrule595_back1299:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
  rxsubrule595_pass1298:
    rx592_cstack = rx592_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule595_back1299
    push rx592_bstack, $I11
    push rx592_bstack, 0
    push rx592_bstack, rx592_pos
    elements $I11, rx592_cstack
    push rx592_bstack, $I11
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
    goto rxsubrule596_pass1300
  rxsubrule596_back1301:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
  rxsubrule596_pass1300:
    rx592_cstack = rx592_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule596_back1301
    push rx592_bstack, $I11
    push rx592_bstack, 0
    push rx592_bstack, rx592_pos
    elements $I11, rx592_cstack
    push rx592_bstack, $I11
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."ws"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
    goto rxsubrule597_pass1302
  rxsubrule597_back1303:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
  rxsubrule597_pass1302:
    rx592_cstack = rx592_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule597_back1303
    push rx592_bstack, $I11
    push rx592_bstack, 0
    push rx592_bstack, rx592_pos
    elements $I11, rx592_cstack
    push rx592_bstack, $I11
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    rx592_cur."!cursor_pass"(rx592_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx592_cur)
  rx592_restart1288:
    repr_get_attr_obj rx592_cstack, rx592_cur, rx592_curclass, "$!cstack"
  rx592_fail1289:
    unless rx592_bstack, rx592_done1287
    pop $I19, rx592_bstack
    if_null rx592_cstack, rx592_cstack_done1292
    unless rx592_cstack, rx592_cstack_done1292
    dec $I19
    set $P11, rx592_cstack[$I19]
  rx592_cstack_done1292:
    pop rx592_rep, rx592_bstack
    pop rx592_pos, rx592_bstack
    pop $I19, rx592_bstack
    lt rx592_pos, -1, rx592_done1287
    lt rx592_pos, 0, rx592_fail1289
    eq $I19, 0, rx592_fail1289
    nqp_islist $I20, rx592_cstack
    unless $I20, rx592_jump1290
    elements $I18, rx592_bstack
    le $I18, 0, rx592_cut1291
    dec $I18
    set $I18, rx592_bstack[$I18]
  rx592_cut1291:
    assign rx592_cstack, $I18
  rx592_jump1290:
    jump $I19
  rx592_done1287:
    rx592_cur."!cursor_fail"()
    .return (rx592_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_71_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1006
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx598_start
    .local string rx598_tgt
    .local int rx598_pos
    .local int rx598_off
    .local int rx598_eos
    .local int rx598_rep
    .local pmc rx598_cur
    .local pmc rx598_curclass
    .local pmc rx598_bstack
    .local pmc rx598_cstack
    rx598_start = self."!cursor_start_all"()
    set rx598_cur, rx598_start[0]
    set rx598_tgt, rx598_start[1]
    set rx598_pos, rx598_start[2]
    set rx598_curclass, rx598_start[3]
    set rx598_bstack, rx598_start[4]
    set $I19, rx598_start[5]
    store_lex unicode:"$\x{a2}", rx598_cur
    length rx598_eos, rx598_tgt
    eq $I19, 1, rx598_restart1306
    gt rx598_pos, rx598_eos, rx598_fail1307
    repr_get_attr_int $I11, self, rx598_curclass, "$!from"
    ne $I11, -1, rxscan599_done1313
    goto rxscan599_scan1312
  rxscan599_loop1311:
    inc rx598_pos
    gt rx598_pos, rx598_eos, rx598_fail1307
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!from", rx598_pos
  rxscan599_scan1312:
    nqp_rxmark rx598_bstack, rxscan599_loop1311, rx598_pos, 0
  rxscan599_done1313:
    nqp_rxmark rx598_bstack, rxcap600_fail1315, rx598_pos, 0
    add $I11, rx598_pos, 5
    gt $I11, rx598_eos, rx598_fail1307
    substr $S10, rx598_tgt, rx598_pos, 5
    ne $S10, ucs4:"CATCH", rx598_fail1307
    add rx598_pos, 5
    nqp_rxpeek $I19, rx598_bstack, rxcap600_fail1315
    inc $I19
    set $I11, rx598_bstack[$I19]
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx598_pos)
    rx598_cstack = rx598_cur."!cursor_capture"($P11, "sym")
    goto rxcap600_done1314
  rxcap600_fail1315:
    goto rx598_fail1307
  rxcap600_done1314:
    ge rx598_pos, rx598_eos, rx598_fail1307
    is_cclass $I11, .CCLASS_WHITESPACE, rx598_tgt, rx598_pos
    unless $I11, rx598_fail1307
    add rx598_pos, 1
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."ws"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
    goto rxsubrule601_pass1316
  rxsubrule601_back1317:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
  rxsubrule601_pass1316:
    rx598_cstack = rx598_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule601_back1317
    push rx598_bstack, $I11
    push rx598_bstack, 0
    push rx598_bstack, rx598_pos
    elements $I11, rx598_cstack
    push rx598_bstack, $I11
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."block"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
    goto rxsubrule602_pass1318
  rxsubrule602_back1319:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
  rxsubrule602_pass1318:
    rx598_cstack = rx598_cur."!cursor_capture"($P11, "block")
    set_addr $I11, rxsubrule602_back1319
    push rx598_bstack, $I11
    push rx598_bstack, 0
    push rx598_bstack, rx598_pos
    elements $I11, rx598_cstack
    push rx598_bstack, $I11
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."ws"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
    goto rxsubrule603_pass1320
  rxsubrule603_back1321:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
  rxsubrule603_pass1320:
    rx598_cstack = rx598_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule603_back1321
    push rx598_bstack, $I11
    push rx598_bstack, 0
    push rx598_bstack, rx598_pos
    elements $I11, rx598_cstack
    push rx598_bstack, $I11
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    rx598_cur."!cursor_pass"(rx598_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx598_cur)
  rx598_restart1306:
    repr_get_attr_obj rx598_cstack, rx598_cur, rx598_curclass, "$!cstack"
  rx598_fail1307:
    unless rx598_bstack, rx598_done1305
    pop $I19, rx598_bstack
    if_null rx598_cstack, rx598_cstack_done1310
    unless rx598_cstack, rx598_cstack_done1310
    dec $I19
    set $P11, rx598_cstack[$I19]
  rx598_cstack_done1310:
    pop rx598_rep, rx598_bstack
    pop rx598_pos, rx598_bstack
    pop $I19, rx598_bstack
    lt rx598_pos, -1, rx598_done1305
    lt rx598_pos, 0, rx598_fail1307
    eq $I19, 0, rx598_fail1307
    nqp_islist $I20, rx598_cstack
    unless $I20, rx598_jump1308
    elements $I18, rx598_bstack
    le $I18, 0, rx598_cut1309
    dec $I18
    set $I18, rx598_bstack[$I18]
  rx598_cut1309:
    assign rx598_cstack, $I18
  rx598_jump1308:
    jump $I19
  rx598_done1305:
    rx598_cur."!cursor_fail"()
    .return (rx598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_72_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1008
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx604_start
    .local string rx604_tgt
    .local int rx604_pos
    .local int rx604_off
    .local int rx604_eos
    .local int rx604_rep
    .local pmc rx604_cur
    .local pmc rx604_curclass
    .local pmc rx604_bstack
    .local pmc rx604_cstack
    rx604_start = self."!cursor_start_all"()
    set rx604_cur, rx604_start[0]
    set rx604_tgt, rx604_start[1]
    set rx604_pos, rx604_start[2]
    set rx604_curclass, rx604_start[3]
    set rx604_bstack, rx604_start[4]
    set $I19, rx604_start[5]
    store_lex unicode:"$\x{a2}", rx604_cur
    length rx604_eos, rx604_tgt
    eq $I19, 1, rx604_restart1324
    gt rx604_pos, rx604_eos, rx604_fail1325
    repr_get_attr_int $I11, self, rx604_curclass, "$!from"
    ne $I11, -1, rxscan605_done1331
    goto rxscan605_scan1330
  rxscan605_loop1329:
    inc rx604_pos
    gt rx604_pos, rx604_eos, rx604_fail1325
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!from", rx604_pos
  rxscan605_scan1330:
    nqp_rxmark rx604_bstack, rxscan605_loop1329, rx604_pos, 0
  rxscan605_done1331:
    nqp_rxmark rx604_bstack, rxcap606_fail1333, rx604_pos, 0
    add $I11, rx604_pos, 7
    gt $I11, rx604_eos, rx604_fail1325
    substr $S10, rx604_tgt, rx604_pos, 7
    ne $S10, ucs4:"CONTROL", rx604_fail1325
    add rx604_pos, 7
    nqp_rxpeek $I19, rx604_bstack, rxcap606_fail1333
    inc $I19
    set $I11, rx604_bstack[$I19]
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx604_pos)
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "sym")
    goto rxcap606_done1332
  rxcap606_fail1333:
    goto rx604_fail1325
  rxcap606_done1332:
    ge rx604_pos, rx604_eos, rx604_fail1325
    is_cclass $I11, .CCLASS_WHITESPACE, rx604_tgt, rx604_pos
    unless $I11, rx604_fail1325
    add rx604_pos, 1
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."ws"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
    goto rxsubrule607_pass1334
  rxsubrule607_back1335:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
  rxsubrule607_pass1334:
    rx604_cstack = rx604_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule607_back1335
    push rx604_bstack, $I11
    push rx604_bstack, 0
    push rx604_bstack, rx604_pos
    elements $I11, rx604_cstack
    push rx604_bstack, $I11
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."block"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
    goto rxsubrule608_pass1336
  rxsubrule608_back1337:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
  rxsubrule608_pass1336:
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "block")
    set_addr $I11, rxsubrule608_back1337
    push rx604_bstack, $I11
    push rx604_bstack, 0
    push rx604_bstack, rx604_pos
    elements $I11, rx604_cstack
    push rx604_bstack, $I11
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."ws"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
    goto rxsubrule609_pass1338
  rxsubrule609_back1339:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
  rxsubrule609_pass1338:
    rx604_cstack = rx604_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule609_back1339
    push rx604_bstack, $I11
    push rx604_bstack, 0
    push rx604_bstack, rx604_pos
    elements $I11, rx604_cstack
    push rx604_bstack, $I11
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    rx604_cur."!cursor_pass"(rx604_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx604_cur)
  rx604_restart1324:
    repr_get_attr_obj rx604_cstack, rx604_cur, rx604_curclass, "$!cstack"
  rx604_fail1325:
    unless rx604_bstack, rx604_done1323
    pop $I19, rx604_bstack
    if_null rx604_cstack, rx604_cstack_done1328
    unless rx604_cstack, rx604_cstack_done1328
    dec $I19
    set $P11, rx604_cstack[$I19]
  rx604_cstack_done1328:
    pop rx604_rep, rx604_bstack
    pop rx604_pos, rx604_bstack
    pop $I19, rx604_bstack
    lt rx604_pos, -1, rx604_done1323
    lt rx604_pos, 0, rx604_fail1325
    eq $I19, 0, rx604_fail1325
    nqp_islist $I20, rx604_cstack
    unless $I20, rx604_jump1326
    elements $I18, rx604_bstack
    le $I18, 0, rx604_cut1327
    dec $I18
    set $I18, rx604_bstack[$I18]
  rx604_cut1327:
    assign rx604_cstack, $I18
  rx604_jump1326:
    jump $I19
  rx604_done1323:
    rx604_cur."!cursor_fail"()
    .return (rx604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_73_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1010
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_74_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1011
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx610_start
    .local string rx610_tgt
    .local int rx610_pos
    .local int rx610_off
    .local int rx610_eos
    .local int rx610_rep
    .local pmc rx610_cur
    .local pmc rx610_curclass
    .local pmc rx610_bstack
    .local pmc rx610_cstack
    rx610_start = self."!cursor_start_all"()
    set rx610_cur, rx610_start[0]
    set rx610_tgt, rx610_start[1]
    set rx610_pos, rx610_start[2]
    set rx610_curclass, rx610_start[3]
    set rx610_bstack, rx610_start[4]
    set $I19, rx610_start[5]
    store_lex unicode:"$\x{a2}", rx610_cur
    length rx610_eos, rx610_tgt
    eq $I19, 1, rx610_restart1342
    gt rx610_pos, rx610_eos, rx610_fail1343
    repr_get_attr_int $I11, self, rx610_curclass, "$!from"
    ne $I11, -1, rxscan611_done1349
    goto rxscan611_scan1348
  rxscan611_loop1347:
    inc rx610_pos
    gt rx610_pos, rx610_eos, rx610_fail1343
    repr_bind_attr_int rx610_cur, rx610_curclass, "$!from", rx610_pos
  rxscan611_scan1348:
    nqp_rxmark rx610_bstack, rxscan611_loop1347, rx610_pos, 0
  rxscan611_done1349:
    nqp_rxmark rx610_bstack, rxcap612_fail1351, rx610_pos, 0
    add $I11, rx610_pos, 5
    gt $I11, rx610_eos, rx610_fail1343
    substr $S10, rx610_tgt, rx610_pos, 5
    ne $S10, ucs4:"BEGIN", rx610_fail1343
    add rx610_pos, 5
    nqp_rxpeek $I19, rx610_bstack, rxcap612_fail1351
    inc $I19
    set $I11, rx610_bstack[$I19]
    repr_bind_attr_int rx610_cur, rx610_curclass, "$!pos", rx610_pos
    $P11 = rx610_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx610_pos)
    rx610_cstack = rx610_cur."!cursor_capture"($P11, "sym")
    goto rxcap612_done1350
  rxcap612_fail1351:
    goto rx610_fail1343
  rxcap612_done1350:
    repr_bind_attr_int rx610_cur, rx610_curclass, "$!pos", rx610_pos
    $P11 = rx610_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx610_curclass, "$!pos"
    lt $I11, 0, rx610_fail1343
    nqp_rxmark rx610_bstack, rxsubrule613_pass1352, -1, 0
  rxsubrule613_pass1352:
    rx610_cstack = rx610_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx610_pos, $P11, rx610_curclass, "$!pos"
    rx610_cur."!cursor_pass"(rx610_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx610_cur)
  rx610_restart1342:
    repr_get_attr_obj rx610_cstack, rx610_cur, rx610_curclass, "$!cstack"
  rx610_fail1343:
    unless rx610_bstack, rx610_done1341
    pop $I19, rx610_bstack
    if_null rx610_cstack, rx610_cstack_done1346
    unless rx610_cstack, rx610_cstack_done1346
    dec $I19
    set $P11, rx610_cstack[$I19]
  rx610_cstack_done1346:
    pop rx610_rep, rx610_bstack
    pop rx610_pos, rx610_bstack
    pop $I19, rx610_bstack
    lt rx610_pos, -1, rx610_done1341
    lt rx610_pos, 0, rx610_fail1343
    eq $I19, 0, rx610_fail1343
    nqp_islist $I20, rx610_cstack
    unless $I20, rx610_jump1344
    elements $I18, rx610_bstack
    le $I18, 0, rx610_cut1345
    dec $I18
    set $I18, rx610_bstack[$I18]
  rx610_cut1345:
    assign rx610_cstack, $I18
  rx610_jump1344:
    jump $I19
  rx610_done1341:
    rx610_cur."!cursor_fail"()
    .return (rx610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_75_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1012
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx614_start
    .local string rx614_tgt
    .local int rx614_pos
    .local int rx614_off
    .local int rx614_eos
    .local int rx614_rep
    .local pmc rx614_cur
    .local pmc rx614_curclass
    .local pmc rx614_bstack
    .local pmc rx614_cstack
    rx614_start = self."!cursor_start_all"()
    set rx614_cur, rx614_start[0]
    set rx614_tgt, rx614_start[1]
    set rx614_pos, rx614_start[2]
    set rx614_curclass, rx614_start[3]
    set rx614_bstack, rx614_start[4]
    set $I19, rx614_start[5]
    store_lex unicode:"$\x{a2}", rx614_cur
    length rx614_eos, rx614_tgt
    eq $I19, 1, rx614_restart1355
    gt rx614_pos, rx614_eos, rx614_fail1356
    repr_get_attr_int $I11, self, rx614_curclass, "$!from"
    ne $I11, -1, rxscan615_done1362
    goto rxscan615_scan1361
  rxscan615_loop1360:
    inc rx614_pos
    gt rx614_pos, rx614_eos, rx614_fail1356
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!from", rx614_pos
  rxscan615_scan1361:
    nqp_rxmark rx614_bstack, rxscan615_loop1360, rx614_pos, 0
  rxscan615_done1362:
    nqp_rxmark rx614_bstack, rxcap616_fail1364, rx614_pos, 0
    add $I11, rx614_pos, 4
    gt $I11, rx614_eos, rx614_fail1356
    substr $S10, rx614_tgt, rx614_pos, 4
    ne $S10, ucs4:"INIT", rx614_fail1356
    add rx614_pos, 4
    nqp_rxpeek $I19, rx614_bstack, rxcap616_fail1364
    inc $I19
    set $I11, rx614_bstack[$I19]
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx614_pos)
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "sym")
    goto rxcap616_done1363
  rxcap616_fail1364:
    goto rx614_fail1356
  rxcap616_done1363:
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1356
    nqp_rxmark rx614_bstack, rxsubrule617_pass1365, -1, 0
  rxsubrule617_pass1365:
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    rx614_cur."!cursor_pass"(rx614_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx614_cur)
  rx614_restart1355:
    repr_get_attr_obj rx614_cstack, rx614_cur, rx614_curclass, "$!cstack"
  rx614_fail1356:
    unless rx614_bstack, rx614_done1354
    pop $I19, rx614_bstack
    if_null rx614_cstack, rx614_cstack_done1359
    unless rx614_cstack, rx614_cstack_done1359
    dec $I19
    set $P11, rx614_cstack[$I19]
  rx614_cstack_done1359:
    pop rx614_rep, rx614_bstack
    pop rx614_pos, rx614_bstack
    pop $I19, rx614_bstack
    lt rx614_pos, -1, rx614_done1354
    lt rx614_pos, 0, rx614_fail1356
    eq $I19, 0, rx614_fail1356
    nqp_islist $I20, rx614_cstack
    unless $I20, rx614_jump1357
    elements $I18, rx614_bstack
    le $I18, 0, rx614_cut1358
    dec $I18
    set $I18, rx614_bstack[$I18]
  rx614_cut1358:
    assign rx614_cstack, $I18
  rx614_jump1357:
    jump $I19
  rx614_done1354:
    rx614_cur."!cursor_fail"()
    .return (rx614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_76_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1013
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx618_start
    .local string rx618_tgt
    .local int rx618_pos
    .local int rx618_off
    .local int rx618_eos
    .local int rx618_rep
    .local pmc rx618_cur
    .local pmc rx618_curclass
    .local pmc rx618_bstack
    .local pmc rx618_cstack
    rx618_start = self."!cursor_start_all"()
    set rx618_cur, rx618_start[0]
    set rx618_tgt, rx618_start[1]
    set rx618_pos, rx618_start[2]
    set rx618_curclass, rx618_start[3]
    set rx618_bstack, rx618_start[4]
    set $I19, rx618_start[5]
    store_lex unicode:"$\x{a2}", rx618_cur
    length rx618_eos, rx618_tgt
    eq $I19, 1, rx618_restart1368
    gt rx618_pos, rx618_eos, rx618_fail1369
    repr_get_attr_int $I11, self, rx618_curclass, "$!from"
    ne $I11, -1, rxscan619_done1375
    goto rxscan619_scan1374
  rxscan619_loop1373:
    inc rx618_pos
    gt rx618_pos, rx618_eos, rx618_fail1369
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!from", rx618_pos
  rxscan619_scan1374:
    nqp_rxmark rx618_bstack, rxscan619_loop1373, rx618_pos, 0
  rxscan619_done1375:
    nqp_rxmark rx618_bstack, rxcap620_fail1377, rx618_pos, 0
    add $I11, rx618_pos, 3
    gt $I11, rx618_eos, rx618_fail1369
    substr $S10, rx618_tgt, rx618_pos, 3
    ne $S10, ucs4:"try", rx618_fail1369
    add rx618_pos, 3
    nqp_rxpeek $I19, rx618_bstack, rxcap620_fail1377
    inc $I19
    set $I11, rx618_bstack[$I19]
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx618_pos)
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "sym")
    goto rxcap620_done1376
  rxcap620_fail1377:
    goto rx618_fail1369
  rxcap620_done1376:
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1369
    nqp_rxmark rx618_bstack, rxsubrule621_pass1378, -1, 0
  rxsubrule621_pass1378:
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    rx618_cur."!cursor_pass"(rx618_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx618_cur)
  rx618_restart1368:
    repr_get_attr_obj rx618_cstack, rx618_cur, rx618_curclass, "$!cstack"
  rx618_fail1369:
    unless rx618_bstack, rx618_done1367
    pop $I19, rx618_bstack
    if_null rx618_cstack, rx618_cstack_done1372
    unless rx618_cstack, rx618_cstack_done1372
    dec $I19
    set $P11, rx618_cstack[$I19]
  rx618_cstack_done1372:
    pop rx618_rep, rx618_bstack
    pop rx618_pos, rx618_bstack
    pop $I19, rx618_bstack
    lt rx618_pos, -1, rx618_done1367
    lt rx618_pos, 0, rx618_fail1369
    eq $I19, 0, rx618_fail1369
    nqp_islist $I20, rx618_cstack
    unless $I20, rx618_jump1370
    elements $I18, rx618_bstack
    le $I18, 0, rx618_cut1371
    dec $I18
    set $I18, rx618_bstack[$I18]
  rx618_cut1371:
    assign rx618_cstack, $I18
  rx618_jump1370:
    jump $I19
  rx618_done1367:
    rx618_cur."!cursor_fail"()
    .return (rx618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_77_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1015
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_78_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx622_start
    .local string rx622_tgt
    .local int rx622_pos
    .local int rx622_off
    .local int rx622_eos
    .local int rx622_rep
    .local pmc rx622_cur
    .local pmc rx622_curclass
    .local pmc rx622_bstack
    .local pmc rx622_cstack
    rx622_start = self."!cursor_start_all"()
    set rx622_cur, rx622_start[0]
    set rx622_tgt, rx622_start[1]
    set rx622_pos, rx622_start[2]
    set rx622_curclass, rx622_start[3]
    set rx622_bstack, rx622_start[4]
    set $I19, rx622_start[5]
    store_lex unicode:"$\x{a2}", rx622_cur
    length rx622_eos, rx622_tgt
    eq $I19, 1, rx622_restart1381
    gt rx622_pos, rx622_eos, rx622_fail1382
    repr_get_attr_int $I11, self, rx622_curclass, "$!from"
    ne $I11, -1, rxscan623_done1388
    goto rxscan623_scan1387
  rxscan623_loop1386:
    inc rx622_pos
    gt rx622_pos, rx622_eos, rx622_fail1382
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!from", rx622_pos
  rxscan623_scan1387:
    nqp_rxmark rx622_bstack, rxscan623_loop1386, rx622_pos, 0
  rxscan623_done1388:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt624_01390
    nqp_push_label $P11, alt624_11407
    nqp_rxmark rx622_bstack, alt624_end1389, -1, 0
    rx622_cur."!alt"(rx622_pos, "alt_nfa__16_1383915017.44713", $P11)
    goto rx622_fail1382
  alt624_01390:
    .const 'Sub' $P5001 = 'cuid_78_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."ws"()
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt628_01403
    nqp_push_label $P11, alt628_11405
    nqp_rxmark rx622_bstack, alt628_end1402, -1, 0
    rx622_cur."!alt"(rx622_pos, "alt_nfa__15_1383915017.44668", $P11)
    goto rx622_fail1382
  alt628_01403:
    ge rx622_pos, rx622_eos, rx622_fail1382
    substr $S11, rx622_tgt, rx622_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx622_fail1382
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."block"()
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    nqp_rxmark rx622_bstack, rxsubrule629_pass1404, -1, 0
  rxsubrule629_pass1404:
    rx622_cstack = rx622_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    goto alt628_end1402
  alt628_11405:
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."statement"()
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    nqp_rxmark rx622_bstack, rxsubrule630_pass1406, -1, 0
  rxsubrule630_pass1406:
    rx622_cstack = rx622_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    goto alt628_end1402
  alt628_end1402:
    nqp_rxcommit rx622_bstack, alt628_end1402
    goto alt624_end1389
  alt624_11407:
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."panic"("Whitespace required after keyword")
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    goto alt624_end1389
  alt624_end1389:
    nqp_rxcommit rx622_bstack, alt624_end1389
    rx622_cur."!cursor_pass"(rx622_pos, "blorst", 'backtrack'=>1)
    .return (rx622_cur)
  rx622_restart1381:
    repr_get_attr_obj rx622_cstack, rx622_cur, rx622_curclass, "$!cstack"
  rx622_fail1382:
    unless rx622_bstack, rx622_done1380
    pop $I19, rx622_bstack
    if_null rx622_cstack, rx622_cstack_done1385
    unless rx622_cstack, rx622_cstack_done1385
    dec $I19
    set $P11, rx622_cstack[$I19]
  rx622_cstack_done1385:
    pop rx622_rep, rx622_bstack
    pop rx622_pos, rx622_bstack
    pop $I19, rx622_bstack
    lt rx622_pos, -1, rx622_done1380
    lt rx622_pos, 0, rx622_fail1382
    eq $I19, 0, rx622_fail1382
    nqp_islist $I20, rx622_cstack
    unless $I20, rx622_jump1383
    elements $I18, rx622_bstack
    le $I18, 0, rx622_cut1384
    dec $I18
    set $I18, rx622_bstack[$I18]
  rx622_cut1384:
    assign rx622_cstack, $I18
  rx622_jump1383:
    jump $I19
  rx622_done1380:
    rx622_cur."!cursor_fail"()
    .return (rx622_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_78_1383915013.33774") :anon :lex :outer("cuid_77_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx625_start
    .local string rx625_tgt
    .local int rx625_pos
    .local int rx625_off
    .local int rx625_eos
    .local int rx625_rep
    .local pmc rx625_cur
    .local pmc rx625_curclass
    .local pmc rx625_bstack
    .local pmc rx625_cstack
    rx625_start = self."!cursor_start_all"()
    set rx625_cur, rx625_start[0]
    set rx625_tgt, rx625_start[1]
    set rx625_pos, rx625_start[2]
    set rx625_curclass, rx625_start[3]
    set rx625_bstack, rx625_start[4]
    set $I19, rx625_start[5]
    store_lex unicode:"$\x{a2}", rx625_cur
    length rx625_eos, rx625_tgt
    eq $I19, 1, rx625_restart1393
    gt rx625_pos, rx625_eos, rx625_fail1394
    repr_get_attr_int $I11, self, rx625_curclass, "$!from"
    ne $I11, -1, rxscan626_done1400
    goto rxscan626_scan1399
  rxscan626_loop1398:
    inc rx625_pos
    gt rx625_pos, rx625_eos, rx625_fail1394
    repr_bind_attr_int rx625_cur, rx625_curclass, "$!from", rx625_pos
  rxscan626_scan1399:
    nqp_rxmark rx625_bstack, rxscan626_loop1398, rx625_pos, 0
  rxscan626_done1400:
    ge rx625_pos, rx625_eos, rx625_fail1394
    is_cclass $I11, .CCLASS_WHITESPACE, rx625_tgt, rx625_pos
    unless $I11, rx625_fail1394
    add rx625_pos, 1
    rx625_cur."!cursor_pass"(rx625_pos, 'backtrack'=>1)
    .return (rx625_cur)
  rx625_restart1393:
    repr_get_attr_obj rx625_cstack, rx625_cur, rx625_curclass, "$!cstack"
  rx625_fail1394:
    unless rx625_bstack, rx625_done1392
    pop $I19, rx625_bstack
    if_null rx625_cstack, rx625_cstack_done1397
    unless rx625_cstack, rx625_cstack_done1397
    dec $I19
    set $P11, rx625_cstack[$I19]
  rx625_cstack_done1397:
    pop rx625_rep, rx625_bstack
    pop rx625_pos, rx625_bstack
    pop $I19, rx625_bstack
    lt rx625_pos, -1, rx625_done1392
    lt rx625_pos, 0, rx625_fail1394
    eq $I19, 0, rx625_fail1394
    nqp_islist $I20, rx625_cstack
    unless $I20, rx625_jump1395
    elements $I18, rx625_bstack
    le $I18, 0, rx625_cut1396
    dec $I18
    set $I18, rx625_bstack[$I18]
  rx625_cut1396:
    assign rx625_cstack, $I18
  rx625_jump1395:
    jump $I19
  rx625_done1392:
    rx625_cur."!cursor_fail"()
    .return (rx625_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_79_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1028
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_80_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1030
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_417_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx632_start
    .local string rx632_tgt
    .local int rx632_pos
    .local int rx632_off
    .local int rx632_eos
    .local int rx632_rep
    .local pmc rx632_cur
    .local pmc rx632_curclass
    .local pmc rx632_bstack
    .local pmc rx632_cstack
    rx632_start = self."!cursor_start_all"()
    set rx632_cur, rx632_start[0]
    set rx632_tgt, rx632_start[1]
    set rx632_pos, rx632_start[2]
    set rx632_curclass, rx632_start[3]
    set rx632_bstack, rx632_start[4]
    set $I19, rx632_start[5]
    store_lex unicode:"$\x{a2}", rx632_cur
    length rx632_eos, rx632_tgt
    eq $I19, 1, rx632_restart1411
    gt rx632_pos, rx632_eos, rx632_fail1412
    repr_get_attr_int $I11, self, rx632_curclass, "$!from"
    ne $I11, -1, rxscan633_done1418
    goto rxscan633_scan1417
  rxscan633_loop1416:
    inc rx632_pos
    gt rx632_pos, rx632_eos, rx632_fail1412
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!from", rx632_pos
  rxscan633_scan1417:
    nqp_rxmark rx632_bstack, rxscan633_loop1416, rx632_pos, 0
  rxscan633_done1418:
    nqp_rxmark rx632_bstack, rxcap634_fail1420, rx632_pos, 0
    add $I11, rx632_pos, 2
    gt $I11, rx632_eos, rx632_fail1412
    substr $S10, rx632_tgt, rx632_pos, 2
    ne $S10, ucs4:"if", rx632_fail1412
    add rx632_pos, 2
    nqp_rxpeek $I19, rx632_bstack, rxcap634_fail1420
    inc $I19
    set $I11, rx632_bstack[$I19]
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx632_pos)
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "sym")
    goto rxcap634_done1419
  rxcap634_fail1420:
    goto rx632_fail1412
  rxcap634_done1419:
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
    goto rxsubrule635_pass1421
  rxsubrule635_back1422:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
  rxsubrule635_pass1421:
    rx632_cstack = rx632_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule635_back1422
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    store_lex unicode:"$\x{a2}", rx632_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_417_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
    goto rxsubrule636_pass1423
  rxsubrule636_back1424:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
  rxsubrule636_pass1423:
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule636_back1424
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
    goto rxsubrule637_pass1425
  rxsubrule637_back1426:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
  rxsubrule637_pass1425:
    rx632_cstack = rx632_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule637_back1426
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    rx632_cur."!cursor_pass"(rx632_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx632_cur)
  rx632_restart1411:
    repr_get_attr_obj rx632_cstack, rx632_cur, rx632_curclass, "$!cstack"
  rx632_fail1412:
    unless rx632_bstack, rx632_done1410
    pop $I19, rx632_bstack
    if_null rx632_cstack, rx632_cstack_done1415
    unless rx632_cstack, rx632_cstack_done1415
    dec $I19
    set $P11, rx632_cstack[$I19]
  rx632_cstack_done1415:
    pop rx632_rep, rx632_bstack
    pop rx632_pos, rx632_bstack
    pop $I19, rx632_bstack
    lt rx632_pos, -1, rx632_done1410
    lt rx632_pos, 0, rx632_fail1412
    eq $I19, 0, rx632_fail1412
    nqp_islist $I20, rx632_cstack
    unless $I20, rx632_jump1413
    elements $I18, rx632_bstack
    le $I18, 0, rx632_cut1414
    dec $I18
    set $I18, rx632_bstack[$I18]
  rx632_cut1414:
    assign rx632_cstack, $I18
  rx632_jump1413:
    jump $I19
  rx632_done1410:
    rx632_cur."!cursor_fail"()
    .return (rx632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1383915013.33774") :anon :lex :outer("cuid_80_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1030

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_81_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1031
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_418_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx638_start
    .local string rx638_tgt
    .local int rx638_pos
    .local int rx638_off
    .local int rx638_eos
    .local int rx638_rep
    .local pmc rx638_cur
    .local pmc rx638_curclass
    .local pmc rx638_bstack
    .local pmc rx638_cstack
    rx638_start = self."!cursor_start_all"()
    set rx638_cur, rx638_start[0]
    set rx638_tgt, rx638_start[1]
    set rx638_pos, rx638_start[2]
    set rx638_curclass, rx638_start[3]
    set rx638_bstack, rx638_start[4]
    set $I19, rx638_start[5]
    store_lex unicode:"$\x{a2}", rx638_cur
    length rx638_eos, rx638_tgt
    eq $I19, 1, rx638_restart1429
    gt rx638_pos, rx638_eos, rx638_fail1430
    repr_get_attr_int $I11, self, rx638_curclass, "$!from"
    ne $I11, -1, rxscan639_done1436
    goto rxscan639_scan1435
  rxscan639_loop1434:
    inc rx638_pos
    gt rx638_pos, rx638_eos, rx638_fail1430
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!from", rx638_pos
  rxscan639_scan1435:
    nqp_rxmark rx638_bstack, rxscan639_loop1434, rx638_pos, 0
  rxscan639_done1436:
    nqp_rxmark rx638_bstack, rxcap640_fail1438, rx638_pos, 0
    add $I11, rx638_pos, 6
    gt $I11, rx638_eos, rx638_fail1430
    substr $S10, rx638_tgt, rx638_pos, 6
    ne $S10, ucs4:"unless", rx638_fail1430
    add rx638_pos, 6
    nqp_rxpeek $I19, rx638_bstack, rxcap640_fail1438
    inc $I19
    set $I11, rx638_bstack[$I19]
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx638_pos)
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "sym")
    goto rxcap640_done1437
  rxcap640_fail1438:
    goto rx638_fail1430
  rxcap640_done1437:
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
    goto rxsubrule641_pass1439
  rxsubrule641_back1440:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
  rxsubrule641_pass1439:
    rx638_cstack = rx638_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule641_back1440
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    store_lex unicode:"$\x{a2}", rx638_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_418_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
    goto rxsubrule642_pass1441
  rxsubrule642_back1442:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
  rxsubrule642_pass1441:
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule642_back1442
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
    goto rxsubrule643_pass1443
  rxsubrule643_back1444:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
  rxsubrule643_pass1443:
    rx638_cstack = rx638_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule643_back1444
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    rx638_cur."!cursor_pass"(rx638_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx638_cur)
  rx638_restart1429:
    repr_get_attr_obj rx638_cstack, rx638_cur, rx638_curclass, "$!cstack"
  rx638_fail1430:
    unless rx638_bstack, rx638_done1428
    pop $I19, rx638_bstack
    if_null rx638_cstack, rx638_cstack_done1433
    unless rx638_cstack, rx638_cstack_done1433
    dec $I19
    set $P11, rx638_cstack[$I19]
  rx638_cstack_done1433:
    pop rx638_rep, rx638_bstack
    pop rx638_pos, rx638_bstack
    pop $I19, rx638_bstack
    lt rx638_pos, -1, rx638_done1428
    lt rx638_pos, 0, rx638_fail1430
    eq $I19, 0, rx638_fail1430
    nqp_islist $I20, rx638_cstack
    unless $I20, rx638_jump1431
    elements $I18, rx638_bstack
    le $I18, 0, rx638_cut1432
    dec $I18
    set $I18, rx638_bstack[$I18]
  rx638_cut1432:
    assign rx638_cstack, $I18
  rx638_jump1431:
    jump $I19
  rx638_done1428:
    rx638_cur."!cursor_fail"()
    .return (rx638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1383915013.33774") :anon :lex :outer("cuid_81_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1031

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_82_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1033
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_83_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1035
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_419_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx644_start
    .local string rx644_tgt
    .local int rx644_pos
    .local int rx644_off
    .local int rx644_eos
    .local int rx644_rep
    .local pmc rx644_cur
    .local pmc rx644_curclass
    .local pmc rx644_bstack
    .local pmc rx644_cstack
    rx644_start = self."!cursor_start_all"()
    set rx644_cur, rx644_start[0]
    set rx644_tgt, rx644_start[1]
    set rx644_pos, rx644_start[2]
    set rx644_curclass, rx644_start[3]
    set rx644_bstack, rx644_start[4]
    set $I19, rx644_start[5]
    store_lex unicode:"$\x{a2}", rx644_cur
    length rx644_eos, rx644_tgt
    eq $I19, 1, rx644_restart1447
    gt rx644_pos, rx644_eos, rx644_fail1448
    repr_get_attr_int $I11, self, rx644_curclass, "$!from"
    ne $I11, -1, rxscan645_done1454
    goto rxscan645_scan1453
  rxscan645_loop1452:
    inc rx644_pos
    gt rx644_pos, rx644_eos, rx644_fail1448
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!from", rx644_pos
  rxscan645_scan1453:
    nqp_rxmark rx644_bstack, rxscan645_loop1452, rx644_pos, 0
  rxscan645_done1454:
    nqp_rxmark rx644_bstack, rxcap646_fail1456, rx644_pos, 0
    add $I11, rx644_pos, 5
    gt $I11, rx644_eos, rx644_fail1448
    substr $S10, rx644_tgt, rx644_pos, 5
    ne $S10, ucs4:"while", rx644_fail1448
    add rx644_pos, 5
    nqp_rxpeek $I19, rx644_bstack, rxcap646_fail1456
    inc $I19
    set $I11, rx644_bstack[$I19]
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx644_pos)
    rx644_cstack = rx644_cur."!cursor_capture"($P11, "sym")
    goto rxcap646_done1455
  rxcap646_fail1456:
    goto rx644_fail1448
  rxcap646_done1455:
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."ws"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
    goto rxsubrule647_pass1457
  rxsubrule647_back1458:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
  rxsubrule647_pass1457:
    rx644_cstack = rx644_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule647_back1458
    push rx644_bstack, $I11
    push rx644_bstack, 0
    push rx644_bstack, rx644_pos
    elements $I11, rx644_cstack
    push rx644_bstack, $I11
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    store_lex unicode:"$\x{a2}", rx644_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_419_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
    goto rxsubrule648_pass1459
  rxsubrule648_back1460:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
  rxsubrule648_pass1459:
    rx644_cstack = rx644_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule648_back1460
    push rx644_bstack, $I11
    push rx644_bstack, 0
    push rx644_bstack, rx644_pos
    elements $I11, rx644_cstack
    push rx644_bstack, $I11
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."ws"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
    goto rxsubrule649_pass1461
  rxsubrule649_back1462:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
  rxsubrule649_pass1461:
    rx644_cstack = rx644_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule649_back1462
    push rx644_bstack, $I11
    push rx644_bstack, 0
    push rx644_bstack, rx644_pos
    elements $I11, rx644_cstack
    push rx644_bstack, $I11
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    rx644_cur."!cursor_pass"(rx644_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx644_cur)
  rx644_restart1447:
    repr_get_attr_obj rx644_cstack, rx644_cur, rx644_curclass, "$!cstack"
  rx644_fail1448:
    unless rx644_bstack, rx644_done1446
    pop $I19, rx644_bstack
    if_null rx644_cstack, rx644_cstack_done1451
    unless rx644_cstack, rx644_cstack_done1451
    dec $I19
    set $P11, rx644_cstack[$I19]
  rx644_cstack_done1451:
    pop rx644_rep, rx644_bstack
    pop rx644_pos, rx644_bstack
    pop $I19, rx644_bstack
    lt rx644_pos, -1, rx644_done1446
    lt rx644_pos, 0, rx644_fail1448
    eq $I19, 0, rx644_fail1448
    nqp_islist $I20, rx644_cstack
    unless $I20, rx644_jump1449
    elements $I18, rx644_bstack
    le $I18, 0, rx644_cut1450
    dec $I18
    set $I18, rx644_bstack[$I18]
  rx644_cut1450:
    assign rx644_cstack, $I18
  rx644_jump1449:
    jump $I19
  rx644_done1446:
    rx644_cur."!cursor_fail"()
    .return (rx644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1383915013.33774") :anon :lex :outer("cuid_83_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1035

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_84_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1036
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_420_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx650_start
    .local string rx650_tgt
    .local int rx650_pos
    .local int rx650_off
    .local int rx650_eos
    .local int rx650_rep
    .local pmc rx650_cur
    .local pmc rx650_curclass
    .local pmc rx650_bstack
    .local pmc rx650_cstack
    rx650_start = self."!cursor_start_all"()
    set rx650_cur, rx650_start[0]
    set rx650_tgt, rx650_start[1]
    set rx650_pos, rx650_start[2]
    set rx650_curclass, rx650_start[3]
    set rx650_bstack, rx650_start[4]
    set $I19, rx650_start[5]
    store_lex unicode:"$\x{a2}", rx650_cur
    length rx650_eos, rx650_tgt
    eq $I19, 1, rx650_restart1465
    gt rx650_pos, rx650_eos, rx650_fail1466
    repr_get_attr_int $I11, self, rx650_curclass, "$!from"
    ne $I11, -1, rxscan651_done1472
    goto rxscan651_scan1471
  rxscan651_loop1470:
    inc rx650_pos
    gt rx650_pos, rx650_eos, rx650_fail1466
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!from", rx650_pos
  rxscan651_scan1471:
    nqp_rxmark rx650_bstack, rxscan651_loop1470, rx650_pos, 0
  rxscan651_done1472:
    nqp_rxmark rx650_bstack, rxcap652_fail1474, rx650_pos, 0
    add $I11, rx650_pos, 5
    gt $I11, rx650_eos, rx650_fail1466
    substr $S10, rx650_tgt, rx650_pos, 5
    ne $S10, ucs4:"until", rx650_fail1466
    add rx650_pos, 5
    nqp_rxpeek $I19, rx650_bstack, rxcap652_fail1474
    inc $I19
    set $I11, rx650_bstack[$I19]
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx650_pos)
    rx650_cstack = rx650_cur."!cursor_capture"($P11, "sym")
    goto rxcap652_done1473
  rxcap652_fail1474:
    goto rx650_fail1466
  rxcap652_done1473:
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."ws"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
    goto rxsubrule653_pass1475
  rxsubrule653_back1476:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
  rxsubrule653_pass1475:
    rx650_cstack = rx650_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule653_back1476
    push rx650_bstack, $I11
    push rx650_bstack, 0
    push rx650_bstack, rx650_pos
    elements $I11, rx650_cstack
    push rx650_bstack, $I11
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    store_lex unicode:"$\x{a2}", rx650_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_420_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
    goto rxsubrule654_pass1477
  rxsubrule654_back1478:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
  rxsubrule654_pass1477:
    rx650_cstack = rx650_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule654_back1478
    push rx650_bstack, $I11
    push rx650_bstack, 0
    push rx650_bstack, rx650_pos
    elements $I11, rx650_cstack
    push rx650_bstack, $I11
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."ws"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
    goto rxsubrule655_pass1479
  rxsubrule655_back1480:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
  rxsubrule655_pass1479:
    rx650_cstack = rx650_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule655_back1480
    push rx650_bstack, $I11
    push rx650_bstack, 0
    push rx650_bstack, rx650_pos
    elements $I11, rx650_cstack
    push rx650_bstack, $I11
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    rx650_cur."!cursor_pass"(rx650_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx650_cur)
  rx650_restart1465:
    repr_get_attr_obj rx650_cstack, rx650_cur, rx650_curclass, "$!cstack"
  rx650_fail1466:
    unless rx650_bstack, rx650_done1464
    pop $I19, rx650_bstack
    if_null rx650_cstack, rx650_cstack_done1469
    unless rx650_cstack, rx650_cstack_done1469
    dec $I19
    set $P11, rx650_cstack[$I19]
  rx650_cstack_done1469:
    pop rx650_rep, rx650_bstack
    pop rx650_pos, rx650_bstack
    pop $I19, rx650_bstack
    lt rx650_pos, -1, rx650_done1464
    lt rx650_pos, 0, rx650_fail1466
    eq $I19, 0, rx650_fail1466
    nqp_islist $I20, rx650_cstack
    unless $I20, rx650_jump1467
    elements $I18, rx650_bstack
    le $I18, 0, rx650_cut1468
    dec $I18
    set $I18, rx650_bstack[$I18]
  rx650_cut1468:
    assign rx650_cstack, $I18
  rx650_jump1467:
    jump $I19
  rx650_done1464:
    rx650_cur."!cursor_fail"()
    .return (rx650_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1383915013.33774") :anon :lex :outer("cuid_84_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1036

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_85_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1037
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_421_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx656_start
    .local string rx656_tgt
    .local int rx656_pos
    .local int rx656_off
    .local int rx656_eos
    .local int rx656_rep
    .local pmc rx656_cur
    .local pmc rx656_curclass
    .local pmc rx656_bstack
    .local pmc rx656_cstack
    rx656_start = self."!cursor_start_all"()
    set rx656_cur, rx656_start[0]
    set rx656_tgt, rx656_start[1]
    set rx656_pos, rx656_start[2]
    set rx656_curclass, rx656_start[3]
    set rx656_bstack, rx656_start[4]
    set $I19, rx656_start[5]
    store_lex unicode:"$\x{a2}", rx656_cur
    length rx656_eos, rx656_tgt
    eq $I19, 1, rx656_restart1483
    gt rx656_pos, rx656_eos, rx656_fail1484
    repr_get_attr_int $I11, self, rx656_curclass, "$!from"
    ne $I11, -1, rxscan657_done1490
    goto rxscan657_scan1489
  rxscan657_loop1488:
    inc rx656_pos
    gt rx656_pos, rx656_eos, rx656_fail1484
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!from", rx656_pos
  rxscan657_scan1489:
    nqp_rxmark rx656_bstack, rxscan657_loop1488, rx656_pos, 0
  rxscan657_done1490:
    nqp_rxmark rx656_bstack, rxcap658_fail1492, rx656_pos, 0
    add $I11, rx656_pos, 3
    gt $I11, rx656_eos, rx656_fail1484
    substr $S10, rx656_tgt, rx656_pos, 3
    ne $S10, ucs4:"for", rx656_fail1484
    add rx656_pos, 3
    nqp_rxpeek $I19, rx656_bstack, rxcap658_fail1492
    inc $I19
    set $I11, rx656_bstack[$I19]
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx656_pos)
    rx656_cstack = rx656_cur."!cursor_capture"($P11, "sym")
    goto rxcap658_done1491
  rxcap658_fail1492:
    goto rx656_fail1484
  rxcap658_done1491:
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."ws"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
    goto rxsubrule659_pass1493
  rxsubrule659_back1494:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
  rxsubrule659_pass1493:
    rx656_cstack = rx656_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule659_back1494
    push rx656_bstack, $I11
    push rx656_bstack, 0
    push rx656_bstack, rx656_pos
    elements $I11, rx656_cstack
    push rx656_bstack, $I11
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    store_lex unicode:"$\x{a2}", rx656_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_421_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
    goto rxsubrule660_pass1495
  rxsubrule660_back1496:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
  rxsubrule660_pass1495:
    rx656_cstack = rx656_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule660_back1496
    push rx656_bstack, $I11
    push rx656_bstack, 0
    push rx656_bstack, rx656_pos
    elements $I11, rx656_cstack
    push rx656_bstack, $I11
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."ws"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
    goto rxsubrule661_pass1497
  rxsubrule661_back1498:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
  rxsubrule661_pass1497:
    rx656_cstack = rx656_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule661_back1498
    push rx656_bstack, $I11
    push rx656_bstack, 0
    push rx656_bstack, rx656_pos
    elements $I11, rx656_cstack
    push rx656_bstack, $I11
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    rx656_cur."!cursor_pass"(rx656_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx656_cur)
  rx656_restart1483:
    repr_get_attr_obj rx656_cstack, rx656_cur, rx656_curclass, "$!cstack"
  rx656_fail1484:
    unless rx656_bstack, rx656_done1482
    pop $I19, rx656_bstack
    if_null rx656_cstack, rx656_cstack_done1487
    unless rx656_cstack, rx656_cstack_done1487
    dec $I19
    set $P11, rx656_cstack[$I19]
  rx656_cstack_done1487:
    pop rx656_rep, rx656_bstack
    pop rx656_pos, rx656_bstack
    pop $I19, rx656_bstack
    lt rx656_pos, -1, rx656_done1482
    lt rx656_pos, 0, rx656_fail1484
    eq $I19, 0, rx656_fail1484
    nqp_islist $I20, rx656_cstack
    unless $I20, rx656_jump1485
    elements $I18, rx656_bstack
    le $I18, 0, rx656_cut1486
    dec $I18
    set $I18, rx656_bstack[$I18]
  rx656_cut1486:
    assign rx656_cstack, $I18
  rx656_jump1485:
    jump $I19
  rx656_done1482:
    rx656_cur."!cursor_fail"()
    .return (rx656_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1383915013.33774") :anon :lex :outer("cuid_85_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1037

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_86_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1041
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx662_start
    .local string rx662_tgt
    .local int rx662_pos
    .local int rx662_off
    .local int rx662_eos
    .local int rx662_rep
    .local pmc rx662_cur
    .local pmc rx662_curclass
    .local pmc rx662_bstack
    .local pmc rx662_cstack
    rx662_start = self."!cursor_start_all"()
    set rx662_cur, rx662_start[0]
    set rx662_tgt, rx662_start[1]
    set rx662_pos, rx662_start[2]
    set rx662_curclass, rx662_start[3]
    set rx662_bstack, rx662_start[4]
    set $I19, rx662_start[5]
    store_lex unicode:"$\x{a2}", rx662_cur
    length rx662_eos, rx662_tgt
    eq $I19, 1, rx662_restart1501
    gt rx662_pos, rx662_eos, rx662_fail1502
    repr_get_attr_int $I11, self, rx662_curclass, "$!from"
    ne $I11, -1, rxscan663_done1508
    goto rxscan663_scan1507
  rxscan663_loop1506:
    inc rx662_pos
    gt rx662_pos, rx662_eos, rx662_fail1502
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!from", rx662_pos
  rxscan663_scan1507:
    nqp_rxmark rx662_bstack, rxscan663_loop1506, rx662_pos, 0
  rxscan663_done1508:
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    lt $I11, 0, rx662_fail1502
    nqp_rxmark rx662_bstack, rxsubrule664_pass1509, -1, 0
  rxsubrule664_pass1509:
    rx662_cstack = rx662_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx662_pos, $P11, rx662_curclass, "$!pos"
    rx662_cur."!cursor_pass"(rx662_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx662_cur)
  rx662_restart1501:
    repr_get_attr_obj rx662_cstack, rx662_cur, rx662_curclass, "$!cstack"
  rx662_fail1502:
    unless rx662_bstack, rx662_done1500
    pop $I19, rx662_bstack
    if_null rx662_cstack, rx662_cstack_done1505
    unless rx662_cstack, rx662_cstack_done1505
    dec $I19
    set $P11, rx662_cstack[$I19]
  rx662_cstack_done1505:
    pop rx662_rep, rx662_bstack
    pop rx662_pos, rx662_bstack
    pop $I19, rx662_bstack
    lt rx662_pos, -1, rx662_done1500
    lt rx662_pos, 0, rx662_fail1502
    eq $I19, 0, rx662_fail1502
    nqp_islist $I20, rx662_cstack
    unless $I20, rx662_jump1503
    elements $I18, rx662_bstack
    le $I18, 0, rx662_cut1504
    dec $I18
    set $I18, rx662_bstack[$I18]
  rx662_cut1504:
    assign rx662_cstack, $I18
  rx662_jump1503:
    jump $I19
  rx662_done1500:
    rx662_cur."!cursor_fail"()
    .return (rx662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_87_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1042
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx665_start
    .local string rx665_tgt
    .local int rx665_pos
    .local int rx665_off
    .local int rx665_eos
    .local int rx665_rep
    .local pmc rx665_cur
    .local pmc rx665_curclass
    .local pmc rx665_bstack
    .local pmc rx665_cstack
    rx665_start = self."!cursor_start_all"()
    set rx665_cur, rx665_start[0]
    set rx665_tgt, rx665_start[1]
    set rx665_pos, rx665_start[2]
    set rx665_curclass, rx665_start[3]
    set rx665_bstack, rx665_start[4]
    set $I19, rx665_start[5]
    store_lex unicode:"$\x{a2}", rx665_cur
    length rx665_eos, rx665_tgt
    eq $I19, 1, rx665_restart1512
    gt rx665_pos, rx665_eos, rx665_fail1513
    repr_get_attr_int $I11, self, rx665_curclass, "$!from"
    ne $I11, -1, rxscan666_done1519
    goto rxscan666_scan1518
  rxscan666_loop1517:
    inc rx665_pos
    gt rx665_pos, rx665_eos, rx665_fail1513
    repr_bind_attr_int rx665_cur, rx665_curclass, "$!from", rx665_pos
  rxscan666_scan1518:
    nqp_rxmark rx665_bstack, rxscan666_loop1517, rx665_pos, 0
  rxscan666_done1519:
    repr_bind_attr_int rx665_cur, rx665_curclass, "$!pos", rx665_pos
    $P11 = rx665_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx665_curclass, "$!pos"
    lt $I11, 0, rx665_fail1513
    nqp_rxmark rx665_bstack, rxsubrule667_pass1520, -1, 0
  rxsubrule667_pass1520:
    rx665_cstack = rx665_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx665_pos, $P11, rx665_curclass, "$!pos"
    rx665_cur."!cursor_pass"(rx665_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx665_cur)
  rx665_restart1512:
    repr_get_attr_obj rx665_cstack, rx665_cur, rx665_curclass, "$!cstack"
  rx665_fail1513:
    unless rx665_bstack, rx665_done1511
    pop $I19, rx665_bstack
    if_null rx665_cstack, rx665_cstack_done1516
    unless rx665_cstack, rx665_cstack_done1516
    dec $I19
    set $P11, rx665_cstack[$I19]
  rx665_cstack_done1516:
    pop rx665_rep, rx665_bstack
    pop rx665_pos, rx665_bstack
    pop $I19, rx665_bstack
    lt rx665_pos, -1, rx665_done1511
    lt rx665_pos, 0, rx665_fail1513
    eq $I19, 0, rx665_fail1513
    nqp_islist $I20, rx665_cstack
    unless $I20, rx665_jump1514
    elements $I18, rx665_bstack
    le $I18, 0, rx665_cut1515
    dec $I18
    set $I18, rx665_bstack[$I18]
  rx665_cut1515:
    assign rx665_cstack, $I18
  rx665_jump1514:
    jump $I19
  rx665_done1511:
    rx665_cur."!cursor_fail"()
    .return (rx665_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_88_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1043
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx668_start
    .local string rx668_tgt
    .local int rx668_pos
    .local int rx668_off
    .local int rx668_eos
    .local int rx668_rep
    .local pmc rx668_cur
    .local pmc rx668_curclass
    .local pmc rx668_bstack
    .local pmc rx668_cstack
    rx668_start = self."!cursor_start_all"()
    set rx668_cur, rx668_start[0]
    set rx668_tgt, rx668_start[1]
    set rx668_pos, rx668_start[2]
    set rx668_curclass, rx668_start[3]
    set rx668_bstack, rx668_start[4]
    set $I19, rx668_start[5]
    store_lex unicode:"$\x{a2}", rx668_cur
    length rx668_eos, rx668_tgt
    eq $I19, 1, rx668_restart1523
    gt rx668_pos, rx668_eos, rx668_fail1524
    repr_get_attr_int $I11, self, rx668_curclass, "$!from"
    ne $I11, -1, rxscan669_done1530
    goto rxscan669_scan1529
  rxscan669_loop1528:
    inc rx668_pos
    gt rx668_pos, rx668_eos, rx668_fail1524
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!from", rx668_pos
  rxscan669_scan1529:
    nqp_rxmark rx668_bstack, rxscan669_loop1528, rx668_pos, 0
  rxscan669_done1530:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."variable"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1524
    nqp_rxmark rx668_bstack, rxsubrule670_pass1531, -1, 0
  rxsubrule670_pass1531:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    rx668_cur."!cursor_pass"(rx668_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx668_cur)
  rx668_restart1523:
    repr_get_attr_obj rx668_cstack, rx668_cur, rx668_curclass, "$!cstack"
  rx668_fail1524:
    unless rx668_bstack, rx668_done1522
    pop $I19, rx668_bstack
    if_null rx668_cstack, rx668_cstack_done1527
    unless rx668_cstack, rx668_cstack_done1527
    dec $I19
    set $P11, rx668_cstack[$I19]
  rx668_cstack_done1527:
    pop rx668_rep, rx668_bstack
    pop rx668_pos, rx668_bstack
    pop $I19, rx668_bstack
    lt rx668_pos, -1, rx668_done1522
    lt rx668_pos, 0, rx668_fail1524
    eq $I19, 0, rx668_fail1524
    nqp_islist $I20, rx668_cstack
    unless $I20, rx668_jump1525
    elements $I18, rx668_bstack
    le $I18, 0, rx668_cut1526
    dec $I18
    set $I18, rx668_bstack[$I18]
  rx668_cut1526:
    assign rx668_cstack, $I18
  rx668_jump1525:
    jump $I19
  rx668_done1522:
    rx668_cur."!cursor_fail"()
    .return (rx668_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_89_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1044
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx671_start
    .local string rx671_tgt
    .local int rx671_pos
    .local int rx671_off
    .local int rx671_eos
    .local int rx671_rep
    .local pmc rx671_cur
    .local pmc rx671_curclass
    .local pmc rx671_bstack
    .local pmc rx671_cstack
    rx671_start = self."!cursor_start_all"()
    set rx671_cur, rx671_start[0]
    set rx671_tgt, rx671_start[1]
    set rx671_pos, rx671_start[2]
    set rx671_curclass, rx671_start[3]
    set rx671_bstack, rx671_start[4]
    set $I19, rx671_start[5]
    store_lex unicode:"$\x{a2}", rx671_cur
    length rx671_eos, rx671_tgt
    eq $I19, 1, rx671_restart1534
    gt rx671_pos, rx671_eos, rx671_fail1535
    repr_get_attr_int $I11, self, rx671_curclass, "$!from"
    ne $I11, -1, rxscan672_done1541
    goto rxscan672_scan1540
  rxscan672_loop1539:
    inc rx671_pos
    gt rx671_pos, rx671_eos, rx671_fail1535
    repr_bind_attr_int rx671_cur, rx671_curclass, "$!from", rx671_pos
  rxscan672_scan1540:
    nqp_rxmark rx671_bstack, rxscan672_loop1539, rx671_pos, 0
  rxscan672_done1541:
    repr_bind_attr_int rx671_cur, rx671_curclass, "$!pos", rx671_pos
    $P11 = rx671_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx671_curclass, "$!pos"
    lt $I11, 0, rx671_fail1535
    nqp_rxmark rx671_bstack, rxsubrule673_pass1542, -1, 0
  rxsubrule673_pass1542:
    rx671_cstack = rx671_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx671_pos, $P11, rx671_curclass, "$!pos"
    rx671_cur."!cursor_pass"(rx671_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx671_cur)
  rx671_restart1534:
    repr_get_attr_obj rx671_cstack, rx671_cur, rx671_curclass, "$!cstack"
  rx671_fail1535:
    unless rx671_bstack, rx671_done1533
    pop $I19, rx671_bstack
    if_null rx671_cstack, rx671_cstack_done1538
    unless rx671_cstack, rx671_cstack_done1538
    dec $I19
    set $P11, rx671_cstack[$I19]
  rx671_cstack_done1538:
    pop rx671_rep, rx671_bstack
    pop rx671_pos, rx671_bstack
    pop $I19, rx671_bstack
    lt rx671_pos, -1, rx671_done1533
    lt rx671_pos, 0, rx671_fail1535
    eq $I19, 0, rx671_fail1535
    nqp_islist $I20, rx671_cstack
    unless $I20, rx671_jump1536
    elements $I18, rx671_bstack
    le $I18, 0, rx671_cut1537
    dec $I18
    set $I18, rx671_bstack[$I18]
  rx671_cut1537:
    assign rx671_cstack, $I18
  rx671_jump1536:
    jump $I19
  rx671_done1533:
    rx671_cur."!cursor_fail"()
    .return (rx671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_90_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1045
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx674_start
    .local string rx674_tgt
    .local int rx674_pos
    .local int rx674_off
    .local int rx674_eos
    .local int rx674_rep
    .local pmc rx674_cur
    .local pmc rx674_curclass
    .local pmc rx674_bstack
    .local pmc rx674_cstack
    rx674_start = self."!cursor_start_all"()
    set rx674_cur, rx674_start[0]
    set rx674_tgt, rx674_start[1]
    set rx674_pos, rx674_start[2]
    set rx674_curclass, rx674_start[3]
    set rx674_bstack, rx674_start[4]
    set $I19, rx674_start[5]
    store_lex unicode:"$\x{a2}", rx674_cur
    length rx674_eos, rx674_tgt
    eq $I19, 1, rx674_restart1545
    gt rx674_pos, rx674_eos, rx674_fail1546
    repr_get_attr_int $I11, self, rx674_curclass, "$!from"
    ne $I11, -1, rxscan675_done1552
    goto rxscan675_scan1551
  rxscan675_loop1550:
    inc rx674_pos
    gt rx674_pos, rx674_eos, rx674_fail1546
    repr_bind_attr_int rx674_cur, rx674_curclass, "$!from", rx674_pos
  rxscan675_scan1551:
    nqp_rxmark rx674_bstack, rxscan675_loop1550, rx674_pos, 0
  rxscan675_done1552:
    repr_bind_attr_int rx674_cur, rx674_curclass, "$!pos", rx674_pos
    $P11 = rx674_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx674_curclass, "$!pos"
    lt $I11, 0, rx674_fail1546
    nqp_rxmark rx674_bstack, rxsubrule676_pass1553, -1, 0
  rxsubrule676_pass1553:
    rx674_cstack = rx674_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx674_pos, $P11, rx674_curclass, "$!pos"
    rx674_cur."!cursor_pass"(rx674_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx674_cur)
  rx674_restart1545:
    repr_get_attr_obj rx674_cstack, rx674_cur, rx674_curclass, "$!cstack"
  rx674_fail1546:
    unless rx674_bstack, rx674_done1544
    pop $I19, rx674_bstack
    if_null rx674_cstack, rx674_cstack_done1549
    unless rx674_cstack, rx674_cstack_done1549
    dec $I19
    set $P11, rx674_cstack[$I19]
  rx674_cstack_done1549:
    pop rx674_rep, rx674_bstack
    pop rx674_pos, rx674_bstack
    pop $I19, rx674_bstack
    lt rx674_pos, -1, rx674_done1544
    lt rx674_pos, 0, rx674_fail1546
    eq $I19, 0, rx674_fail1546
    nqp_islist $I20, rx674_cstack
    unless $I20, rx674_jump1547
    elements $I18, rx674_bstack
    le $I18, 0, rx674_cut1548
    dec $I18
    set $I18, rx674_bstack[$I18]
  rx674_cut1548:
    assign rx674_cstack, $I18
  rx674_jump1547:
    jump $I19
  rx674_done1544:
    rx674_cur."!cursor_fail"()
    .return (rx674_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_91_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1046
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx677_start
    .local string rx677_tgt
    .local int rx677_pos
    .local int rx677_off
    .local int rx677_eos
    .local int rx677_rep
    .local pmc rx677_cur
    .local pmc rx677_curclass
    .local pmc rx677_bstack
    .local pmc rx677_cstack
    rx677_start = self."!cursor_start_all"()
    set rx677_cur, rx677_start[0]
    set rx677_tgt, rx677_start[1]
    set rx677_pos, rx677_start[2]
    set rx677_curclass, rx677_start[3]
    set rx677_bstack, rx677_start[4]
    set $I19, rx677_start[5]
    store_lex unicode:"$\x{a2}", rx677_cur
    length rx677_eos, rx677_tgt
    eq $I19, 1, rx677_restart1556
    gt rx677_pos, rx677_eos, rx677_fail1557
    repr_get_attr_int $I11, self, rx677_curclass, "$!from"
    ne $I11, -1, rxscan678_done1563
    goto rxscan678_scan1562
  rxscan678_loop1561:
    inc rx677_pos
    gt rx677_pos, rx677_eos, rx677_fail1557
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!from", rx677_pos
  rxscan678_scan1562:
    nqp_rxmark rx677_bstack, rxscan678_loop1561, rx677_pos, 0
  rxscan678_done1563:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1557
    nqp_rxmark rx677_bstack, rxsubrule679_pass1564, -1, 0
  rxsubrule679_pass1564:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    rx677_cur."!cursor_pass"(rx677_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx677_cur)
  rx677_restart1556:
    repr_get_attr_obj rx677_cstack, rx677_cur, rx677_curclass, "$!cstack"
  rx677_fail1557:
    unless rx677_bstack, rx677_done1555
    pop $I19, rx677_bstack
    if_null rx677_cstack, rx677_cstack_done1560
    unless rx677_cstack, rx677_cstack_done1560
    dec $I19
    set $P11, rx677_cstack[$I19]
  rx677_cstack_done1560:
    pop rx677_rep, rx677_bstack
    pop rx677_pos, rx677_bstack
    pop $I19, rx677_bstack
    lt rx677_pos, -1, rx677_done1555
    lt rx677_pos, 0, rx677_fail1557
    eq $I19, 0, rx677_fail1557
    nqp_islist $I20, rx677_cstack
    unless $I20, rx677_jump1558
    elements $I18, rx677_bstack
    le $I18, 0, rx677_cut1559
    dec $I18
    set $I18, rx677_bstack[$I18]
  rx677_cut1559:
    assign rx677_cstack, $I18
  rx677_jump1558:
    jump $I19
  rx677_done1555:
    rx677_cur."!cursor_fail"()
    .return (rx677_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_92_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1047
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_93_1383915013.33774' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_94_1383915013.33774' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx680_start
    .local string rx680_tgt
    .local int rx680_pos
    .local int rx680_off
    .local int rx680_eos
    .local int rx680_rep
    .local pmc rx680_cur
    .local pmc rx680_curclass
    .local pmc rx680_bstack
    .local pmc rx680_cstack
    rx680_start = self."!cursor_start_all"()
    set rx680_cur, rx680_start[0]
    set rx680_tgt, rx680_start[1]
    set rx680_pos, rx680_start[2]
    set rx680_curclass, rx680_start[3]
    set rx680_bstack, rx680_start[4]
    set $I19, rx680_start[5]
    store_lex unicode:"$\x{a2}", rx680_cur
    length rx680_eos, rx680_tgt
    eq $I19, 1, rx680_restart1567
    gt rx680_pos, rx680_eos, rx680_fail1568
    repr_get_attr_int $I11, self, rx680_curclass, "$!from"
    ne $I11, -1, rxscan681_done1574
    goto rxscan681_scan1573
  rxscan681_loop1572:
    inc rx680_pos
    gt rx680_pos, rx680_eos, rx680_fail1568
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!from", rx680_pos
  rxscan681_scan1573:
    nqp_rxmark rx680_bstack, rxscan681_loop1572, rx680_pos, 0
  rxscan681_done1574:
    .const 'Sub' $P5001 = 'cuid_93_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!pos", rx680_pos
    $P11 = rx680_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx680_curclass, "$!pos"
    lt $I11, 0, rx680_fail1568
    .const 'Sub' $P5002 = 'cuid_94_1383915013.33774' 
    capture_lex $P5002
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!pos", rx680_pos
    $P11 = rx680_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx680_curclass, "$!pos"
    ge $I11, 0, rx680_fail1568
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!pos", rx680_pos
    $P11 = rx680_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx680_curclass, "$!pos"
    lt $I11, 0, rx680_fail1568
    nqp_rxmark rx680_bstack, rxsubrule689_pass1604, -1, 0
  rxsubrule689_pass1604:
    rx680_cstack = rx680_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx680_pos, $P11, rx680_curclass, "$!pos"
    rx680_cur."!cursor_pass"(rx680_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx680_cur)
  rx680_restart1567:
    repr_get_attr_obj rx680_cstack, rx680_cur, rx680_curclass, "$!cstack"
  rx680_fail1568:
    unless rx680_bstack, rx680_done1566
    pop $I19, rx680_bstack
    if_null rx680_cstack, rx680_cstack_done1571
    unless rx680_cstack, rx680_cstack_done1571
    dec $I19
    set $P11, rx680_cstack[$I19]
  rx680_cstack_done1571:
    pop rx680_rep, rx680_bstack
    pop rx680_pos, rx680_bstack
    pop $I19, rx680_bstack
    lt rx680_pos, -1, rx680_done1566
    lt rx680_pos, 0, rx680_fail1568
    eq $I19, 0, rx680_fail1568
    nqp_islist $I20, rx680_cstack
    unless $I20, rx680_jump1569
    elements $I18, rx680_bstack
    le $I18, 0, rx680_cut1570
    dec $I18
    set $I18, rx680_bstack[$I18]
  rx680_cut1570:
    assign rx680_cstack, $I18
  rx680_jump1569:
    jump $I19
  rx680_done1566:
    rx680_cur."!cursor_fail"()
    .return (rx680_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_93_1383915013.33774") :anon :lex :outer("cuid_92_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx682_start
    .local string rx682_tgt
    .local int rx682_pos
    .local int rx682_off
    .local int rx682_eos
    .local int rx682_rep
    .local pmc rx682_cur
    .local pmc rx682_curclass
    .local pmc rx682_bstack
    .local pmc rx682_cstack
    rx682_start = self."!cursor_start_all"()
    set rx682_cur, rx682_start[0]
    set rx682_tgt, rx682_start[1]
    set rx682_pos, rx682_start[2]
    set rx682_curclass, rx682_start[3]
    set rx682_bstack, rx682_start[4]
    set $I19, rx682_start[5]
    store_lex unicode:"$\x{a2}", rx682_cur
    length rx682_eos, rx682_tgt
    eq $I19, 1, rx682_restart1577
    gt rx682_pos, rx682_eos, rx682_fail1578
    repr_get_attr_int $I11, self, rx682_curclass, "$!from"
    ne $I11, -1, rxscan683_done1584
    goto rxscan683_scan1583
  rxscan683_loop1582:
    inc rx682_pos
    gt rx682_pos, rx682_eos, rx682_fail1578
    repr_bind_attr_int rx682_cur, rx682_curclass, "$!from", rx682_pos
  rxscan683_scan1583:
    nqp_rxmark rx682_bstack, rxscan683_loop1582, rx682_pos, 0
  rxscan683_done1584:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt684_01586
    nqp_push_label $P11, alt684_11587
    nqp_push_label $P11, alt684_21588
    nqp_rxmark rx682_bstack, alt684_end1585, -1, 0
    rx682_cur."!alt"(rx682_pos, "alt_nfa__17_1383915017.58869", $P11)
    goto rx682_fail1578
  alt684_01586:
    add $I11, rx682_pos, 5
    gt $I11, rx682_eos, rx682_fail1578
    substr $S10, rx682_tgt, rx682_pos, 5
    ne $S10, ucs4:"multi", rx682_fail1578
    add rx682_pos, 5
    goto alt684_end1585
  alt684_11587:
    add $I11, rx682_pos, 5
    gt $I11, rx682_eos, rx682_fail1578
    substr $S10, rx682_tgt, rx682_pos, 5
    ne $S10, ucs4:"proto", rx682_fail1578
    add rx682_pos, 5
    goto alt684_end1585
  alt684_21588:
    add $I11, rx682_pos, 4
    gt $I11, rx682_eos, rx682_fail1578
    substr $S10, rx682_tgt, rx682_pos, 4
    ne $S10, ucs4:"only", rx682_fail1578
    add rx682_pos, 4
    goto alt684_end1585
  alt684_end1585:
    rx682_cur."!cursor_pass"(rx682_pos, 'backtrack'=>1)
    .return (rx682_cur)
  rx682_restart1577:
    repr_get_attr_obj rx682_cstack, rx682_cur, rx682_curclass, "$!cstack"
  rx682_fail1578:
    unless rx682_bstack, rx682_done1576
    pop $I19, rx682_bstack
    if_null rx682_cstack, rx682_cstack_done1581
    unless rx682_cstack, rx682_cstack_done1581
    dec $I19
    set $P11, rx682_cstack[$I19]
  rx682_cstack_done1581:
    pop rx682_rep, rx682_bstack
    pop rx682_pos, rx682_bstack
    pop $I19, rx682_bstack
    lt rx682_pos, -1, rx682_done1576
    lt rx682_pos, 0, rx682_fail1578
    eq $I19, 0, rx682_fail1578
    nqp_islist $I20, rx682_cstack
    unless $I20, rx682_jump1579
    elements $I18, rx682_bstack
    le $I18, 0, rx682_cut1580
    dec $I18
    set $I18, rx682_bstack[$I18]
  rx682_cut1580:
    assign rx682_cstack, $I18
  rx682_jump1579:
    jump $I19
  rx682_done1576:
    rx682_cur."!cursor_fail"()
    .return (rx682_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_94_1383915013.33774") :anon :lex :outer("cuid_92_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx685_start
    .local string rx685_tgt
    .local int rx685_pos
    .local int rx685_off
    .local int rx685_eos
    .local int rx685_rep
    .local pmc rx685_cur
    .local pmc rx685_curclass
    .local pmc rx685_bstack
    .local pmc rx685_cstack
    rx685_start = self."!cursor_start_all"()
    set rx685_cur, rx685_start[0]
    set rx685_tgt, rx685_start[1]
    set rx685_pos, rx685_start[2]
    set rx685_curclass, rx685_start[3]
    set rx685_bstack, rx685_start[4]
    set $I19, rx685_start[5]
    store_lex unicode:"$\x{a2}", rx685_cur
    length rx685_eos, rx685_tgt
    eq $I19, 1, rx685_restart1591
    gt rx685_pos, rx685_eos, rx685_fail1592
    repr_get_attr_int $I11, self, rx685_curclass, "$!from"
    ne $I11, -1, rxscan686_done1598
    goto rxscan686_scan1597
  rxscan686_loop1596:
    inc rx685_pos
    index rx685_pos, rx685_tgt, ucs4:"proto", rx685_pos
    eq rx685_pos, -1, rx685_fail1592
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!from", rx685_pos
  rxscan686_scan1597:
    nqp_rxmark rx685_bstack, rxscan686_loop1596, rx685_pos, 0
  rxscan686_done1598:
    add $I11, rx685_pos, 5
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 5
    ne $S10, ucs4:"proto", rx685_fail1592
    add rx685_pos, 5
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!pos", rx685_pos
    $P11 = rx685_cur."ws"()
    repr_get_attr_int $I11, $P11, rx685_curclass, "$!pos"
    lt $I11, 0, rx685_fail1592
    repr_get_attr_int rx685_pos, $P11, rx685_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt688_01601
    nqp_push_label $P11, alt688_11602
    nqp_push_label $P11, alt688_21603
    nqp_rxmark rx685_bstack, alt688_end1600, -1, 0
    rx685_cur."!alt"(rx685_pos, "alt_nfa__18_1383915017.60688", $P11)
    goto rx685_fail1592
  alt688_01601:
    add $I11, rx685_pos, 5
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 5
    ne $S10, ucs4:"regex", rx685_fail1592
    add rx685_pos, 5
    goto alt688_end1600
  alt688_11602:
    add $I11, rx685_pos, 5
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 5
    ne $S10, ucs4:"token", rx685_fail1592
    add rx685_pos, 5
    goto alt688_end1600
  alt688_21603:
    add $I11, rx685_pos, 4
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 4
    ne $S10, ucs4:"rule", rx685_fail1592
    add rx685_pos, 4
    goto alt688_end1600
  alt688_end1600:
    nqp_rxcommit rx685_bstack, alt688_end1600
    rx685_cur."!cursor_pass"(rx685_pos, 'backtrack'=>1)
    .return (rx685_cur)
  rx685_restart1591:
    repr_get_attr_obj rx685_cstack, rx685_cur, rx685_curclass, "$!cstack"
  rx685_fail1592:
    unless rx685_bstack, rx685_done1590
    pop $I19, rx685_bstack
    if_null rx685_cstack, rx685_cstack_done1595
    unless rx685_cstack, rx685_cstack_done1595
    dec $I19
    set $P11, rx685_cstack[$I19]
  rx685_cstack_done1595:
    pop rx685_rep, rx685_bstack
    pop rx685_pos, rx685_bstack
    pop $I19, rx685_bstack
    lt rx685_pos, -1, rx685_done1590
    lt rx685_pos, 0, rx685_fail1592
    eq $I19, 0, rx685_fail1592
    nqp_islist $I20, rx685_cstack
    unless $I20, rx685_jump1593
    elements $I18, rx685_bstack
    le $I18, 0, rx685_cut1594
    dec $I18
    set $I18, rx685_bstack[$I18]
  rx685_cut1594:
    assign rx685_cstack, $I18
  rx685_jump1593:
    jump $I19
  rx685_done1590:
    rx685_cur."!cursor_fail"()
    .return (rx685_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_95_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1052
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx690_start
    .local string rx690_tgt
    .local int rx690_pos
    .local int rx690_off
    .local int rx690_eos
    .local int rx690_rep
    .local pmc rx690_cur
    .local pmc rx690_curclass
    .local pmc rx690_bstack
    .local pmc rx690_cstack
    rx690_start = self."!cursor_start_all"()
    set rx690_cur, rx690_start[0]
    set rx690_tgt, rx690_start[1]
    set rx690_pos, rx690_start[2]
    set rx690_curclass, rx690_start[3]
    set rx690_bstack, rx690_start[4]
    set $I19, rx690_start[5]
    store_lex unicode:"$\x{a2}", rx690_cur
    length rx690_eos, rx690_tgt
    eq $I19, 1, rx690_restart1607
    gt rx690_pos, rx690_eos, rx690_fail1608
    repr_get_attr_int $I11, self, rx690_curclass, "$!from"
    ne $I11, -1, rxscan691_done1614
    goto rxscan691_scan1613
  rxscan691_loop1612:
    inc rx690_pos
    gt rx690_pos, rx690_eos, rx690_fail1608
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!from", rx690_pos
  rxscan691_scan1613:
    nqp_rxmark rx690_bstack, rxscan691_loop1612, rx690_pos, 0
  rxscan691_done1614:
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1608
    nqp_rxmark rx690_bstack, rxsubrule692_pass1615, -1, 0
  rxsubrule692_pass1615:
    rx690_cstack = rx690_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    rx690_cur."!cursor_pass"(rx690_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx690_cur)
  rx690_restart1607:
    repr_get_attr_obj rx690_cstack, rx690_cur, rx690_curclass, "$!cstack"
  rx690_fail1608:
    unless rx690_bstack, rx690_done1606
    pop $I19, rx690_bstack
    if_null rx690_cstack, rx690_cstack_done1611
    unless rx690_cstack, rx690_cstack_done1611
    dec $I19
    set $P11, rx690_cstack[$I19]
  rx690_cstack_done1611:
    pop rx690_rep, rx690_bstack
    pop rx690_pos, rx690_bstack
    pop $I19, rx690_bstack
    lt rx690_pos, -1, rx690_done1606
    lt rx690_pos, 0, rx690_fail1608
    eq $I19, 0, rx690_fail1608
    nqp_islist $I20, rx690_cstack
    unless $I20, rx690_jump1609
    elements $I18, rx690_bstack
    le $I18, 0, rx690_cut1610
    dec $I18
    set $I18, rx690_bstack[$I18]
  rx690_cut1610:
    assign rx690_cstack, $I18
  rx690_jump1609:
    jump $I19
  rx690_done1606:
    rx690_cur."!cursor_fail"()
    .return (rx690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_96_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1053
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx693_start
    .local string rx693_tgt
    .local int rx693_pos
    .local int rx693_off
    .local int rx693_eos
    .local int rx693_rep
    .local pmc rx693_cur
    .local pmc rx693_curclass
    .local pmc rx693_bstack
    .local pmc rx693_cstack
    rx693_start = self."!cursor_start_all"()
    set rx693_cur, rx693_start[0]
    set rx693_tgt, rx693_start[1]
    set rx693_pos, rx693_start[2]
    set rx693_curclass, rx693_start[3]
    set rx693_bstack, rx693_start[4]
    set $I19, rx693_start[5]
    store_lex unicode:"$\x{a2}", rx693_cur
    length rx693_eos, rx693_tgt
    eq $I19, 1, rx693_restart1618
    gt rx693_pos, rx693_eos, rx693_fail1619
    repr_get_attr_int $I11, self, rx693_curclass, "$!from"
    ne $I11, -1, rxscan694_done1625
    goto rxscan694_scan1624
  rxscan694_loop1623:
    inc rx693_pos
    gt rx693_pos, rx693_eos, rx693_fail1619
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!from", rx693_pos
  rxscan694_scan1624:
    nqp_rxmark rx693_bstack, rxscan694_loop1623, rx693_pos, 0
  rxscan694_done1625:
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!pos", rx693_pos
    $P11 = rx693_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx693_curclass, "$!pos"
    lt $I11, 0, rx693_fail1619
    nqp_rxmark rx693_bstack, rxsubrule695_pass1626, -1, 0
  rxsubrule695_pass1626:
    rx693_cstack = rx693_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx693_pos, $P11, rx693_curclass, "$!pos"
    rx693_cur."!cursor_pass"(rx693_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx693_cur)
  rx693_restart1618:
    repr_get_attr_obj rx693_cstack, rx693_cur, rx693_curclass, "$!cstack"
  rx693_fail1619:
    unless rx693_bstack, rx693_done1617
    pop $I19, rx693_bstack
    if_null rx693_cstack, rx693_cstack_done1622
    unless rx693_cstack, rx693_cstack_done1622
    dec $I19
    set $P11, rx693_cstack[$I19]
  rx693_cstack_done1622:
    pop rx693_rep, rx693_bstack
    pop rx693_pos, rx693_bstack
    pop $I19, rx693_bstack
    lt rx693_pos, -1, rx693_done1617
    lt rx693_pos, 0, rx693_fail1619
    eq $I19, 0, rx693_fail1619
    nqp_islist $I20, rx693_cstack
    unless $I20, rx693_jump1620
    elements $I18, rx693_bstack
    le $I18, 0, rx693_cut1621
    dec $I18
    set $I18, rx693_bstack[$I18]
  rx693_cut1621:
    assign rx693_cstack, $I18
  rx693_jump1620:
    jump $I19
  rx693_done1617:
    rx693_cur."!cursor_fail"()
    .return (rx693_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_97_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1054
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx696_start
    .local string rx696_tgt
    .local int rx696_pos
    .local int rx696_off
    .local int rx696_eos
    .local int rx696_rep
    .local pmc rx696_cur
    .local pmc rx696_curclass
    .local pmc rx696_bstack
    .local pmc rx696_cstack
    rx696_start = self."!cursor_start_all"()
    set rx696_cur, rx696_start[0]
    set rx696_tgt, rx696_start[1]
    set rx696_pos, rx696_start[2]
    set rx696_curclass, rx696_start[3]
    set rx696_bstack, rx696_start[4]
    set $I19, rx696_start[5]
    store_lex unicode:"$\x{a2}", rx696_cur
    length rx696_eos, rx696_tgt
    eq $I19, 1, rx696_restart1629
    gt rx696_pos, rx696_eos, rx696_fail1630
    repr_get_attr_int $I11, self, rx696_curclass, "$!from"
    ne $I11, -1, rxscan697_done1636
    goto rxscan697_scan1635
  rxscan697_loop1634:
    inc rx696_pos
    gt rx696_pos, rx696_eos, rx696_fail1630
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!from", rx696_pos
  rxscan697_scan1635:
    nqp_rxmark rx696_bstack, rxscan697_loop1634, rx696_pos, 0
  rxscan697_done1636:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1630
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1630
    nqp_rxmark rx696_bstack, rxsubrule698_pass1637, -1, 0
  rxsubrule698_pass1637:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    rx696_cur."!cursor_pass"(rx696_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx696_cur)
  rx696_restart1629:
    repr_get_attr_obj rx696_cstack, rx696_cur, rx696_curclass, "$!cstack"
  rx696_fail1630:
    unless rx696_bstack, rx696_done1628
    pop $I19, rx696_bstack
    if_null rx696_cstack, rx696_cstack_done1633
    unless rx696_cstack, rx696_cstack_done1633
    dec $I19
    set $P11, rx696_cstack[$I19]
  rx696_cstack_done1633:
    pop rx696_rep, rx696_bstack
    pop rx696_pos, rx696_bstack
    pop $I19, rx696_bstack
    lt rx696_pos, -1, rx696_done1628
    lt rx696_pos, 0, rx696_fail1630
    eq $I19, 0, rx696_fail1630
    nqp_islist $I20, rx696_cstack
    unless $I20, rx696_jump1631
    elements $I18, rx696_bstack
    le $I18, 0, rx696_cut1632
    dec $I18
    set $I18, rx696_bstack[$I18]
  rx696_cut1632:
    assign rx696_cstack, $I18
  rx696_jump1631:
    jump $I19
  rx696_done1628:
    rx696_cur."!cursor_fail"()
    .return (rx696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_98_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1055
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_422_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx699_start
    .local string rx699_tgt
    .local int rx699_pos
    .local int rx699_off
    .local int rx699_eos
    .local int rx699_rep
    .local pmc rx699_cur
    .local pmc rx699_curclass
    .local pmc rx699_bstack
    .local pmc rx699_cstack
    rx699_start = self."!cursor_start_all"()
    set rx699_cur, rx699_start[0]
    set rx699_tgt, rx699_start[1]
    set rx699_pos, rx699_start[2]
    set rx699_curclass, rx699_start[3]
    set rx699_bstack, rx699_start[4]
    set $I19, rx699_start[5]
    store_lex unicode:"$\x{a2}", rx699_cur
    length rx699_eos, rx699_tgt
    eq $I19, 1, rx699_restart1640
    gt rx699_pos, rx699_eos, rx699_fail1641
    repr_get_attr_int $I11, self, rx699_curclass, "$!from"
    ne $I11, -1, rxscan700_done1647
    goto rxscan700_scan1646
  rxscan700_loop1645:
    inc rx699_pos
    gt rx699_pos, rx699_eos, rx699_fail1641
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!from", rx699_pos
  rxscan700_scan1646:
    nqp_rxmark rx699_bstack, rxscan700_loop1645, rx699_pos, 0
  rxscan700_done1647:
    nqp_rxmark rx699_bstack, rxcap701_fail1649, rx699_pos, 0
    add $I11, rx699_pos, 4
    gt $I11, rx699_eos, rx699_fail1641
    substr $S10, rx699_tgt, rx699_pos, 4
    ne $S10, ucs4:"last", rx699_fail1641
    add rx699_pos, 4
    nqp_rxpeek $I19, rx699_bstack, rxcap701_fail1649
    inc $I19
    set $I11, rx699_bstack[$I19]
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx699_pos)
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "sym")
    goto rxcap701_done1648
  rxcap701_fail1649:
    goto rx699_fail1641
  rxcap701_done1648:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    ge $I11, 0, rx699_fail1641
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    store_lex unicode:"$\x{a2}", rx699_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_422_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx699_cur."!cursor_pass"(rx699_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx699_cur)
  rx699_restart1640:
    repr_get_attr_obj rx699_cstack, rx699_cur, rx699_curclass, "$!cstack"
  rx699_fail1641:
    unless rx699_bstack, rx699_done1639
    pop $I19, rx699_bstack
    if_null rx699_cstack, rx699_cstack_done1644
    unless rx699_cstack, rx699_cstack_done1644
    dec $I19
    set $P11, rx699_cstack[$I19]
  rx699_cstack_done1644:
    pop rx699_rep, rx699_bstack
    pop rx699_pos, rx699_bstack
    pop $I19, rx699_bstack
    lt rx699_pos, -1, rx699_done1639
    lt rx699_pos, 0, rx699_fail1641
    eq $I19, 0, rx699_fail1641
    nqp_islist $I20, rx699_cstack
    unless $I20, rx699_jump1642
    elements $I18, rx699_bstack
    le $I18, 0, rx699_cut1643
    dec $I18
    set $I18, rx699_bstack[$I18]
  rx699_cut1643:
    assign rx699_cstack, $I18
  rx699_jump1642:
    jump $I19
  rx699_done1639:
    rx699_cur."!cursor_fail"()
    .return (rx699_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1383915013.33774") :anon :lex :outer("cuid_98_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1055

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_99_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1056
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_423_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx702_start
    .local string rx702_tgt
    .local int rx702_pos
    .local int rx702_off
    .local int rx702_eos
    .local int rx702_rep
    .local pmc rx702_cur
    .local pmc rx702_curclass
    .local pmc rx702_bstack
    .local pmc rx702_cstack
    rx702_start = self."!cursor_start_all"()
    set rx702_cur, rx702_start[0]
    set rx702_tgt, rx702_start[1]
    set rx702_pos, rx702_start[2]
    set rx702_curclass, rx702_start[3]
    set rx702_bstack, rx702_start[4]
    set $I19, rx702_start[5]
    store_lex unicode:"$\x{a2}", rx702_cur
    length rx702_eos, rx702_tgt
    eq $I19, 1, rx702_restart1652
    gt rx702_pos, rx702_eos, rx702_fail1653
    repr_get_attr_int $I11, self, rx702_curclass, "$!from"
    ne $I11, -1, rxscan703_done1659
    goto rxscan703_scan1658
  rxscan703_loop1657:
    inc rx702_pos
    gt rx702_pos, rx702_eos, rx702_fail1653
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!from", rx702_pos
  rxscan703_scan1658:
    nqp_rxmark rx702_bstack, rxscan703_loop1657, rx702_pos, 0
  rxscan703_done1659:
    nqp_rxmark rx702_bstack, rxcap704_fail1661, rx702_pos, 0
    add $I11, rx702_pos, 4
    gt $I11, rx702_eos, rx702_fail1653
    substr $S10, rx702_tgt, rx702_pos, 4
    ne $S10, ucs4:"next", rx702_fail1653
    add rx702_pos, 4
    nqp_rxpeek $I19, rx702_bstack, rxcap704_fail1661
    inc $I19
    set $I11, rx702_bstack[$I19]
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!pos", rx702_pos
    $P11 = rx702_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx702_pos)
    rx702_cstack = rx702_cur."!cursor_capture"($P11, "sym")
    goto rxcap704_done1660
  rxcap704_fail1661:
    goto rx702_fail1653
  rxcap704_done1660:
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!pos", rx702_pos
    $P11 = rx702_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx702_curclass, "$!pos"
    ge $I11, 0, rx702_fail1653
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!pos", rx702_pos
    store_lex unicode:"$\x{a2}", rx702_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_423_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx702_cur."!cursor_pass"(rx702_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx702_cur)
  rx702_restart1652:
    repr_get_attr_obj rx702_cstack, rx702_cur, rx702_curclass, "$!cstack"
  rx702_fail1653:
    unless rx702_bstack, rx702_done1651
    pop $I19, rx702_bstack
    if_null rx702_cstack, rx702_cstack_done1656
    unless rx702_cstack, rx702_cstack_done1656
    dec $I19
    set $P11, rx702_cstack[$I19]
  rx702_cstack_done1656:
    pop rx702_rep, rx702_bstack
    pop rx702_pos, rx702_bstack
    pop $I19, rx702_bstack
    lt rx702_pos, -1, rx702_done1651
    lt rx702_pos, 0, rx702_fail1653
    eq $I19, 0, rx702_fail1653
    nqp_islist $I20, rx702_cstack
    unless $I20, rx702_jump1654
    elements $I18, rx702_bstack
    le $I18, 0, rx702_cut1655
    dec $I18
    set $I18, rx702_bstack[$I18]
  rx702_cut1655:
    assign rx702_cstack, $I18
  rx702_jump1654:
    jump $I19
  rx702_done1651:
    rx702_cur."!cursor_fail"()
    .return (rx702_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1383915013.33774") :anon :lex :outer("cuid_99_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1056

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_100_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1057
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_424_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx705_start
    .local string rx705_tgt
    .local int rx705_pos
    .local int rx705_off
    .local int rx705_eos
    .local int rx705_rep
    .local pmc rx705_cur
    .local pmc rx705_curclass
    .local pmc rx705_bstack
    .local pmc rx705_cstack
    rx705_start = self."!cursor_start_all"()
    set rx705_cur, rx705_start[0]
    set rx705_tgt, rx705_start[1]
    set rx705_pos, rx705_start[2]
    set rx705_curclass, rx705_start[3]
    set rx705_bstack, rx705_start[4]
    set $I19, rx705_start[5]
    store_lex unicode:"$\x{a2}", rx705_cur
    length rx705_eos, rx705_tgt
    eq $I19, 1, rx705_restart1664
    gt rx705_pos, rx705_eos, rx705_fail1665
    repr_get_attr_int $I11, self, rx705_curclass, "$!from"
    ne $I11, -1, rxscan706_done1671
    goto rxscan706_scan1670
  rxscan706_loop1669:
    inc rx705_pos
    gt rx705_pos, rx705_eos, rx705_fail1665
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!from", rx705_pos
  rxscan706_scan1670:
    nqp_rxmark rx705_bstack, rxscan706_loop1669, rx705_pos, 0
  rxscan706_done1671:
    nqp_rxmark rx705_bstack, rxcap707_fail1673, rx705_pos, 0
    add $I11, rx705_pos, 4
    gt $I11, rx705_eos, rx705_fail1665
    substr $S10, rx705_tgt, rx705_pos, 4
    ne $S10, ucs4:"redo", rx705_fail1665
    add rx705_pos, 4
    nqp_rxpeek $I19, rx705_bstack, rxcap707_fail1673
    inc $I19
    set $I11, rx705_bstack[$I19]
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!pos", rx705_pos
    $P11 = rx705_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx705_pos)
    rx705_cstack = rx705_cur."!cursor_capture"($P11, "sym")
    goto rxcap707_done1672
  rxcap707_fail1673:
    goto rx705_fail1665
  rxcap707_done1672:
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!pos", rx705_pos
    $P11 = rx705_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx705_curclass, "$!pos"
    ge $I11, 0, rx705_fail1665
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!pos", rx705_pos
    store_lex unicode:"$\x{a2}", rx705_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_424_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx705_cur."!cursor_pass"(rx705_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx705_cur)
  rx705_restart1664:
    repr_get_attr_obj rx705_cstack, rx705_cur, rx705_curclass, "$!cstack"
  rx705_fail1665:
    unless rx705_bstack, rx705_done1663
    pop $I19, rx705_bstack
    if_null rx705_cstack, rx705_cstack_done1668
    unless rx705_cstack, rx705_cstack_done1668
    dec $I19
    set $P11, rx705_cstack[$I19]
  rx705_cstack_done1668:
    pop rx705_rep, rx705_bstack
    pop rx705_pos, rx705_bstack
    pop $I19, rx705_bstack
    lt rx705_pos, -1, rx705_done1663
    lt rx705_pos, 0, rx705_fail1665
    eq $I19, 0, rx705_fail1665
    nqp_islist $I20, rx705_cstack
    unless $I20, rx705_jump1666
    elements $I18, rx705_bstack
    le $I18, 0, rx705_cut1667
    dec $I18
    set $I18, rx705_bstack[$I18]
  rx705_cut1667:
    assign rx705_cstack, $I18
  rx705_jump1666:
    jump $I19
  rx705_done1663:
    rx705_cur."!cursor_fail"()
    .return (rx705_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1383915013.33774") :anon :lex :outer("cuid_100_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1057

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_101_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1059
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx708_start
    .local string rx708_tgt
    .local int rx708_pos
    .local int rx708_off
    .local int rx708_eos
    .local int rx708_rep
    .local pmc rx708_cur
    .local pmc rx708_curclass
    .local pmc rx708_bstack
    .local pmc rx708_cstack
    rx708_start = self."!cursor_start_all"()
    set rx708_cur, rx708_start[0]
    set rx708_tgt, rx708_start[1]
    set rx708_pos, rx708_start[2]
    set rx708_curclass, rx708_start[3]
    set rx708_bstack, rx708_start[4]
    set $I19, rx708_start[5]
    store_lex unicode:"$\x{a2}", rx708_cur
    length rx708_eos, rx708_tgt
    eq $I19, 1, rx708_restart1676
    gt rx708_pos, rx708_eos, rx708_fail1677
    repr_get_attr_int $I11, self, rx708_curclass, "$!from"
    ne $I11, -1, rxscan709_done1683
    goto rxscan709_scan1682
  rxscan709_loop1681:
    inc rx708_pos
    gt rx708_pos, rx708_eos, rx708_fail1677
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!from", rx708_pos
  rxscan709_scan1682:
    nqp_rxmark rx708_bstack, rxscan709_loop1681, rx708_pos, 0
  rxscan709_done1683:
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1677
    nqp_rxmark rx708_bstack, rxsubrule710_pass1684, -1, 0
  rxsubrule710_pass1684:
    rx708_cstack = rx708_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    nqp_rxmark rx708_bstack, rxquantr711_done1686, rx708_pos, 0
  rxquantr711_loop1685:
    ge rx708_pos, rx708_eos, rx708_fail1677
    substr $S11, rx708_tgt, rx708_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx708_fail1677
    inc rx708_pos
    nqp_rxpeek $I19, rx708_bstack, rxquantr711_done1686
    inc $I19
    inc $I19
    set rx708_rep, rx708_bstack[$I19]
    nqp_rxcommit rx708_bstack, rxquantr711_done1686
    inc rx708_rep
    nqp_rxmark rx708_bstack, rxquantr711_done1686, rx708_pos, rx708_rep
    goto rxquantr711_loop1685
  rxquantr711_done1686:
    add $I11, rx708_pos, 2
    gt $I11, rx708_eos, rx708_fail1677
    substr $S10, rx708_tgt, rx708_pos, 2
    ne $S10, ucs4:"=>", rx708_fail1677
    add rx708_pos, 2
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."ws"()
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1677
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1677
    nqp_rxmark rx708_bstack, rxsubrule713_pass1688, -1, 0
  rxsubrule713_pass1688:
    rx708_cstack = rx708_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    rx708_cur."!cursor_pass"(rx708_pos, "fatarrow", 'backtrack'=>1)
    .return (rx708_cur)
  rx708_restart1676:
    repr_get_attr_obj rx708_cstack, rx708_cur, rx708_curclass, "$!cstack"
  rx708_fail1677:
    unless rx708_bstack, rx708_done1675
    pop $I19, rx708_bstack
    if_null rx708_cstack, rx708_cstack_done1680
    unless rx708_cstack, rx708_cstack_done1680
    dec $I19
    set $P11, rx708_cstack[$I19]
  rx708_cstack_done1680:
    pop rx708_rep, rx708_bstack
    pop rx708_pos, rx708_bstack
    pop $I19, rx708_bstack
    lt rx708_pos, -1, rx708_done1675
    lt rx708_pos, 0, rx708_fail1677
    eq $I19, 0, rx708_fail1677
    nqp_islist $I20, rx708_cstack
    unless $I20, rx708_jump1678
    elements $I18, rx708_bstack
    le $I18, 0, rx708_cut1679
    dec $I18
    set $I18, rx708_bstack[$I18]
  rx708_cut1679:
    assign rx708_cstack, $I18
  rx708_jump1678:
    jump $I19
  rx708_done1675:
    rx708_cur."!cursor_fail"()
    .return (rx708_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_102_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1063
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx714_start
    .local string rx714_tgt
    .local int rx714_pos
    .local int rx714_off
    .local int rx714_eos
    .local int rx714_rep
    .local pmc rx714_cur
    .local pmc rx714_curclass
    .local pmc rx714_bstack
    .local pmc rx714_cstack
    rx714_start = self."!cursor_start_all"()
    set rx714_cur, rx714_start[0]
    set rx714_tgt, rx714_start[1]
    set rx714_pos, rx714_start[2]
    set rx714_curclass, rx714_start[3]
    set rx714_bstack, rx714_start[4]
    set $I19, rx714_start[5]
    store_lex unicode:"$\x{a2}", rx714_cur
    length rx714_eos, rx714_tgt
    eq $I19, 1, rx714_restart1691
    gt rx714_pos, rx714_eos, rx714_fail1692
    repr_get_attr_int $I11, self, rx714_curclass, "$!from"
    ne $I11, -1, rxscan715_done1698
    goto rxscan715_scan1697
  rxscan715_loop1696:
    inc rx714_pos
    index rx714_pos, rx714_tgt, ucs4:":", rx714_pos
    eq rx714_pos, -1, rx714_fail1692
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!from", rx714_pos
  rxscan715_scan1697:
    nqp_rxmark rx714_bstack, rxscan715_loop1696, rx714_pos, 0
  rxscan715_done1698:
    add $I11, rx714_pos, 1
    gt $I11, rx714_eos, rx714_fail1692
    substr $S10, rx714_tgt, rx714_pos, 1
    ne $S10, ucs4:":", rx714_fail1692
    add rx714_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt716_01700
    nqp_push_label $P11, alt716_11704
    nqp_push_label $P11, alt716_21710
    nqp_push_label $P11, alt716_31712
    nqp_rxmark rx714_bstack, alt716_end1699, -1, 0
    rx714_cur."!alt"(rx714_pos, "alt_nfa__19_1383915017.72211", $P11)
    goto rx714_fail1692
  alt716_01700:
    nqp_rxmark rx714_bstack, rxcap717_fail1702, rx714_pos, 0
    add $I11, rx714_pos, 1
    gt $I11, rx714_eos, rx714_fail1692
    substr $S10, rx714_tgt, rx714_pos, 1
    ne $S10, ucs4:"!", rx714_fail1692
    add rx714_pos, 1
    nqp_rxpeek $I19, rx714_bstack, rxcap717_fail1702
    inc $I19
    set $I11, rx714_bstack[$I19]
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx714_pos)
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "not")
    goto rxcap717_done1701
  rxcap717_fail1702:
    goto rx714_fail1692
  rxcap717_done1701:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule718_pass1703, -1, 0
  rxsubrule718_pass1703:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    goto alt716_end1699
  alt716_11704:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule719_pass1705, -1, 0
  rxsubrule719_pass1705:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    nqp_rxmark rx714_bstack, rxquantr720_done1707, rx714_pos, 0
  rxquantr720_loop1706:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    goto rxsubrule721_pass1708
  rxsubrule721_back1709:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
  rxsubrule721_pass1708:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule721_back1709
    push rx714_bstack, $I11
    push rx714_bstack, 0
    push rx714_bstack, rx714_pos
    elements $I11, rx714_cstack
    push rx714_bstack, $I11
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    nqp_rxpeek $I19, rx714_bstack, rxquantr720_done1707
    inc $I19
    inc $I19
    set rx714_rep, rx714_bstack[$I19]
    nqp_rxcommit rx714_bstack, rxquantr720_done1707
    inc rx714_rep
  rxquantr720_done1707:
    goto alt716_end1699
  alt716_21710:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule722_pass1711, -1, 0
  rxsubrule722_pass1711:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    goto alt716_end1699
  alt716_31712:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."variable"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule723_pass1713, -1, 0
  rxsubrule723_pass1713:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    goto alt716_end1699
  alt716_end1699:
    nqp_rxcommit rx714_bstack, alt716_end1699
    rx714_cur."!cursor_pass"(rx714_pos, "colonpair", 'backtrack'=>1)
    .return (rx714_cur)
  rx714_restart1691:
    repr_get_attr_obj rx714_cstack, rx714_cur, rx714_curclass, "$!cstack"
  rx714_fail1692:
    unless rx714_bstack, rx714_done1690
    pop $I19, rx714_bstack
    if_null rx714_cstack, rx714_cstack_done1695
    unless rx714_cstack, rx714_cstack_done1695
    dec $I19
    set $P11, rx714_cstack[$I19]
  rx714_cstack_done1695:
    pop rx714_rep, rx714_bstack
    pop rx714_pos, rx714_bstack
    pop $I19, rx714_bstack
    lt rx714_pos, -1, rx714_done1690
    lt rx714_pos, 0, rx714_fail1692
    eq $I19, 0, rx714_fail1692
    nqp_islist $I20, rx714_cstack
    unless $I20, rx714_jump1693
    elements $I18, rx714_bstack
    le $I18, 0, rx714_cut1694
    dec $I18
    set $I18, rx714_bstack[$I18]
  rx714_cut1694:
    assign rx714_cstack, $I18
  rx714_jump1693:
    jump $I19
  rx714_done1690:
    rx714_cur."!cursor_fail"()
    .return (rx714_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_103_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1073
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx724_start
    .local string rx724_tgt
    .local int rx724_pos
    .local int rx724_off
    .local int rx724_eos
    .local int rx724_rep
    .local pmc rx724_cur
    .local pmc rx724_curclass
    .local pmc rx724_bstack
    .local pmc rx724_cstack
    rx724_start = self."!cursor_start_all"()
    set rx724_cur, rx724_start[0]
    set rx724_tgt, rx724_start[1]
    set rx724_pos, rx724_start[2]
    set rx724_curclass, rx724_start[3]
    set rx724_bstack, rx724_start[4]
    set $I19, rx724_start[5]
    store_lex unicode:"$\x{a2}", rx724_cur
    length rx724_eos, rx724_tgt
    eq $I19, 1, rx724_restart1716
    gt rx724_pos, rx724_eos, rx724_fail1717
    repr_get_attr_int $I11, self, rx724_curclass, "$!from"
    ne $I11, -1, rxscan725_done1723
    goto rxscan725_scan1722
  rxscan725_loop1721:
    inc rx724_pos
    gt rx724_pos, rx724_eos, rx724_fail1717
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!from", rx724_pos
  rxscan725_scan1722:
    nqp_rxmark rx724_bstack, rxscan725_loop1721, rx724_pos, 0
  rxscan725_done1723:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt726_01725
    nqp_push_label $P11, alt726_11732
    nqp_push_label $P11, alt726_21735
    nqp_push_label $P11, alt726_31743
    nqp_rxmark rx724_bstack, alt726_end1724, -1, 0
    rx724_cur."!alt"(rx724_pos, "alt_nfa__20_1383915017.8243", $P11)
    goto rx724_fail1717
  alt726_01725:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule727_pass1726, -1, 0
  rxsubrule727_pass1726:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    nqp_rxmark rx724_bstack, rxquantr728_done1728, rx724_pos, 0
  rxquantr728_loop1727:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    goto rxsubrule729_pass1729
  rxsubrule729_back1730:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
  rxsubrule729_pass1729:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule729_back1730
    push rx724_bstack, $I11
    push rx724_bstack, 0
    push rx724_bstack, rx724_pos
    elements $I11, rx724_cstack
    push rx724_bstack, $I11
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    nqp_rxpeek $I19, rx724_bstack, rxquantr728_done1728
    inc $I19
    inc $I19
    set rx724_rep, rx724_bstack[$I19]
    nqp_rxcommit rx724_bstack, rxquantr728_done1728
    inc rx724_rep
  rxquantr728_done1728:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."name"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule730_pass1731, -1, 0
  rxsubrule730_pass1731:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    goto alt726_end1724
  alt726_11732:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule731_pass1733, -1, 0
  rxsubrule731_pass1733:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    ge rx724_pos, rx724_eos, rx724_fail1717
    substr $S11, rx724_tgt, rx724_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx724_fail1717
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule732_pass1734, -1, 0
  rxsubrule732_pass1734:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    goto alt726_end1724
  alt726_21735:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule733_pass1736, -1, 0
  rxsubrule733_pass1736:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    add $I11, rx724_pos, 1
    gt $I11, rx724_eos, rx724_fail1717
    substr $S10, rx724_tgt, rx724_pos, 1
    ne $S10, ucs4:"(", rx724_fail1717
    add rx724_pos, 1
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule734_pass1737, -1, 0
  rxsubrule734_pass1737:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
  alt735_01739:
    nqp_rxmark rx724_bstack, alt735_11740, rx724_pos, 0
    add $I11, rx724_pos, 1
    gt $I11, rx724_eos, rx724_fail1717
    substr $S10, rx724_tgt, rx724_pos, 1
    ne $S10, ucs4:")", rx724_fail1717
    add rx724_pos, 1
    goto alt735_end1738
  alt735_11740:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    goto rxsubrule736_pass1741
  rxsubrule736_back1742:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
  rxsubrule736_pass1741:
    rx724_cstack = rx724_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule736_back1742
    push rx724_bstack, $I11
    push rx724_bstack, 0
    push rx724_bstack, rx724_pos
    elements $I11, rx724_cstack
    push rx724_bstack, $I11
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
  alt735_end1738:
    goto alt726_end1724
  alt726_31743:
    nqp_rxmark rx724_bstack, rxcap737_fail1745, rx724_pos, 0
    add $I11, rx724_pos, 1
    gt $I11, rx724_eos, rx724_fail1717
    substr $S10, rx724_tgt, rx724_pos, 1
    ne $S10, ucs4:"$", rx724_fail1717
    add rx724_pos, 1
    nqp_rxpeek $I19, rx724_bstack, rxcap737_fail1745
    inc $I19
    set $I11, rx724_bstack[$I19]
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx724_pos)
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    goto rxcap737_done1744
  rxcap737_fail1745:
    goto rx724_fail1717
  rxcap737_done1744:
    nqp_rxmark rx724_bstack, rxcap738_fail1747, rx724_pos, 0
    ge rx724_pos, rx724_eos, rx724_fail1717
    substr $S11, rx724_tgt, rx724_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx724_fail1717
    inc rx724_pos
    nqp_rxpeek $I19, rx724_bstack, rxcap738_fail1747
    inc $I19
    set $I11, rx724_bstack[$I19]
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx724_pos)
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap738_done1746
  rxcap738_fail1747:
    goto rx724_fail1717
  rxcap738_done1746:
    goto alt726_end1724
  alt726_end1724:
    rx724_cur."!cursor_pass"(rx724_pos, "variable", 'backtrack'=>1)
    .return (rx724_cur)
  rx724_restart1716:
    repr_get_attr_obj rx724_cstack, rx724_cur, rx724_curclass, "$!cstack"
  rx724_fail1717:
    unless rx724_bstack, rx724_done1715
    pop $I19, rx724_bstack
    if_null rx724_cstack, rx724_cstack_done1720
    unless rx724_cstack, rx724_cstack_done1720
    dec $I19
    set $P11, rx724_cstack[$I19]
  rx724_cstack_done1720:
    pop rx724_rep, rx724_bstack
    pop rx724_pos, rx724_bstack
    pop $I19, rx724_bstack
    lt rx724_pos, -1, rx724_done1715
    lt rx724_pos, 0, rx724_fail1717
    eq $I19, 0, rx724_fail1717
    nqp_islist $I20, rx724_cstack
    unless $I20, rx724_jump1718
    elements $I18, rx724_bstack
    le $I18, 0, rx724_cut1719
    dec $I18
    set $I18, rx724_bstack[$I18]
  rx724_cut1719:
    assign rx724_cstack, $I18
  rx724_jump1718:
    jump $I19
  rx724_done1715:
    rx724_cur."!cursor_fail"()
    .return (rx724_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_104_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1080
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx739_start
    .local string rx739_tgt
    .local int rx739_pos
    .local int rx739_off
    .local int rx739_eos
    .local int rx739_rep
    .local pmc rx739_cur
    .local pmc rx739_curclass
    .local pmc rx739_bstack
    .local pmc rx739_cstack
    rx739_start = self."!cursor_start_all"()
    set rx739_cur, rx739_start[0]
    set rx739_tgt, rx739_start[1]
    set rx739_pos, rx739_start[2]
    set rx739_curclass, rx739_start[3]
    set rx739_bstack, rx739_start[4]
    set $I19, rx739_start[5]
    store_lex unicode:"$\x{a2}", rx739_cur
    length rx739_eos, rx739_tgt
    eq $I19, 1, rx739_restart1750
    gt rx739_pos, rx739_eos, rx739_fail1751
    repr_get_attr_int $I11, self, rx739_curclass, "$!from"
    ne $I11, -1, rxscan740_done1757
    goto rxscan740_scan1756
  rxscan740_loop1755:
    inc rx739_pos
    gt rx739_pos, rx739_eos, rx739_fail1751
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!from", rx739_pos
  rxscan740_scan1756:
    nqp_rxmark rx739_bstack, rxscan740_loop1755, rx739_pos, 0
  rxscan740_done1757:
    ge rx739_pos, rx739_eos, rx739_fail1751
    substr $S11, rx739_tgt, rx739_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx739_fail1751
    inc rx739_pos
    rx739_cur."!cursor_pass"(rx739_pos, "sigil", 'backtrack'=>1)
    .return (rx739_cur)
  rx739_restart1750:
    repr_get_attr_obj rx739_cstack, rx739_cur, rx739_curclass, "$!cstack"
  rx739_fail1751:
    unless rx739_bstack, rx739_done1749
    pop $I19, rx739_bstack
    if_null rx739_cstack, rx739_cstack_done1754
    unless rx739_cstack, rx739_cstack_done1754
    dec $I19
    set $P11, rx739_cstack[$I19]
  rx739_cstack_done1754:
    pop rx739_rep, rx739_bstack
    pop rx739_pos, rx739_bstack
    pop $I19, rx739_bstack
    lt rx739_pos, -1, rx739_done1749
    lt rx739_pos, 0, rx739_fail1751
    eq $I19, 0, rx739_fail1751
    nqp_islist $I20, rx739_cstack
    unless $I20, rx739_jump1752
    elements $I18, rx739_bstack
    le $I18, 0, rx739_cut1753
    dec $I18
    set $I18, rx739_bstack[$I18]
  rx739_cut1753:
    assign rx739_cstack, $I18
  rx739_jump1752:
    jump $I19
  rx739_done1749:
    rx739_cur."!cursor_fail"()
    .return (rx739_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_105_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1082
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx741_start
    .local string rx741_tgt
    .local int rx741_pos
    .local int rx741_off
    .local int rx741_eos
    .local int rx741_rep
    .local pmc rx741_cur
    .local pmc rx741_curclass
    .local pmc rx741_bstack
    .local pmc rx741_cstack
    rx741_start = self."!cursor_start_all"()
    set rx741_cur, rx741_start[0]
    set rx741_tgt, rx741_start[1]
    set rx741_pos, rx741_start[2]
    set rx741_curclass, rx741_start[3]
    set rx741_bstack, rx741_start[4]
    set $I19, rx741_start[5]
    store_lex unicode:"$\x{a2}", rx741_cur
    length rx741_eos, rx741_tgt
    eq $I19, 1, rx741_restart1760
    gt rx741_pos, rx741_eos, rx741_fail1761
    repr_get_attr_int $I11, self, rx741_curclass, "$!from"
    ne $I11, -1, rxscan742_done1767
    goto rxscan742_scan1766
  rxscan742_loop1765:
    inc rx741_pos
    gt rx741_pos, rx741_eos, rx741_fail1761
    repr_bind_attr_int rx741_cur, rx741_curclass, "$!from", rx741_pos
  rxscan742_scan1766:
    nqp_rxmark rx741_bstack, rxscan742_loop1765, rx741_pos, 0
  rxscan742_done1767:
    ge rx741_pos, rx741_eos, rx741_fail1761
    substr $S11, rx741_tgt, rx741_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx741_fail1761
    inc rx741_pos
    rx741_cur."!cursor_pass"(rx741_pos, "twigil", 'backtrack'=>1)
    .return (rx741_cur)
  rx741_restart1760:
    repr_get_attr_obj rx741_cstack, rx741_cur, rx741_curclass, "$!cstack"
  rx741_fail1761:
    unless rx741_bstack, rx741_done1759
    pop $I19, rx741_bstack
    if_null rx741_cstack, rx741_cstack_done1764
    unless rx741_cstack, rx741_cstack_done1764
    dec $I19
    set $P11, rx741_cstack[$I19]
  rx741_cstack_done1764:
    pop rx741_rep, rx741_bstack
    pop rx741_pos, rx741_bstack
    pop $I19, rx741_bstack
    lt rx741_pos, -1, rx741_done1759
    lt rx741_pos, 0, rx741_fail1761
    eq $I19, 0, rx741_fail1761
    nqp_islist $I20, rx741_cstack
    unless $I20, rx741_jump1762
    elements $I18, rx741_bstack
    le $I18, 0, rx741_cut1763
    dec $I18
    set $I18, rx741_bstack[$I18]
  rx741_cut1763:
    assign rx741_cstack, $I18
  rx741_jump1762:
    jump $I19
  rx741_done1759:
    rx741_cur."!cursor_fail"()
    .return (rx741_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_106_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1084
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_107_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1085
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx743_start
    .local string rx743_tgt
    .local int rx743_pos
    .local int rx743_off
    .local int rx743_eos
    .local int rx743_rep
    .local pmc rx743_cur
    .local pmc rx743_curclass
    .local pmc rx743_bstack
    .local pmc rx743_cstack
    rx743_start = self."!cursor_start_all"()
    set rx743_cur, rx743_start[0]
    set rx743_tgt, rx743_start[1]
    set rx743_pos, rx743_start[2]
    set rx743_curclass, rx743_start[3]
    set rx743_bstack, rx743_start[4]
    set $I19, rx743_start[5]
    store_lex unicode:"$\x{a2}", rx743_cur
    length rx743_eos, rx743_tgt
    eq $I19, 1, rx743_restart1770
    gt rx743_pos, rx743_eos, rx743_fail1771
    repr_get_attr_int $I11, self, rx743_curclass, "$!from"
    ne $I11, -1, rxscan744_done1777
    goto rxscan744_scan1776
  rxscan744_loop1775:
    inc rx743_pos
    gt rx743_pos, rx743_eos, rx743_fail1771
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!from", rx743_pos
  rxscan744_scan1776:
    nqp_rxmark rx743_bstack, rxscan744_loop1775, rx743_pos, 0
  rxscan744_done1777:
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    store_lex unicode:"$\x{a2}", rx743_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1778
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_117, $P5004
    repr_defined $I5001, fb_tmp_117
    unless $I5001 goto if745_else1779 
    set $P5006, fb_tmp_117["$PACKAGE"]
    set $P5008, $P5006
    goto if745_end1780
  if745_else1779:
    null $P5007
    set $P5008, $P5007
  if745_end1780:
    unless_null $P5008, vivi_7461781
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7461781:
    unless_null $P5008, vivi_7471782
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7471782:
    set $P5003, $P5008
  fallback1778:
    set $P101, $P5003
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    store_lex unicode:"$\x{a2}", rx743_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx743_bstack, rxcap748_fail1784, rx743_pos, 0
    add $I11, rx743_pos, 6
    gt $I11, rx743_eos, rx743_fail1771
    substr $S10, rx743_tgt, rx743_pos, 6
    ne $S10, ucs4:"module", rx743_fail1771
    add rx743_pos, 6
    nqp_rxpeek $I19, rx743_bstack, rxcap748_fail1784
    inc $I19
    set $I11, rx743_bstack[$I19]
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    $P11 = rx743_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx743_pos)
    rx743_cstack = rx743_cur."!cursor_capture"($P11, "sym")
    goto rxcap748_done1783
  rxcap748_fail1784:
    goto rx743_fail1771
  rxcap748_done1783:
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    $P11 = rx743_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx743_curclass, "$!pos"
    lt $I11, 0, rx743_fail1771
    nqp_rxmark rx743_bstack, rxsubrule749_pass1785, -1, 0
  rxsubrule749_pass1785:
    rx743_cstack = rx743_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx743_pos, $P11, rx743_curclass, "$!pos"
    rx743_cur."!cursor_pass"(rx743_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx743_cur)
  rx743_restart1770:
    repr_get_attr_obj rx743_cstack, rx743_cur, rx743_curclass, "$!cstack"
  rx743_fail1771:
    unless rx743_bstack, rx743_done1769
    pop $I19, rx743_bstack
    if_null rx743_cstack, rx743_cstack_done1774
    unless rx743_cstack, rx743_cstack_done1774
    dec $I19
    set $P11, rx743_cstack[$I19]
  rx743_cstack_done1774:
    pop rx743_rep, rx743_bstack
    pop rx743_pos, rx743_bstack
    pop $I19, rx743_bstack
    lt rx743_pos, -1, rx743_done1769
    lt rx743_pos, 0, rx743_fail1771
    eq $I19, 0, rx743_fail1771
    nqp_islist $I20, rx743_cstack
    unless $I20, rx743_jump1772
    elements $I18, rx743_bstack
    le $I18, 0, rx743_cut1773
    dec $I18
    set $I18, rx743_bstack[$I18]
  rx743_cut1773:
    assign rx743_cstack, $I18
  rx743_jump1772:
    jump $I19
  rx743_done1769:
    rx743_cur."!cursor_fail"()
    .return (rx743_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_108_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1090
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_118 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx750_start
    .local string rx750_tgt
    .local int rx750_pos
    .local int rx750_off
    .local int rx750_eos
    .local int rx750_rep
    .local pmc rx750_cur
    .local pmc rx750_curclass
    .local pmc rx750_bstack
    .local pmc rx750_cstack
    rx750_start = self."!cursor_start_all"()
    set rx750_cur, rx750_start[0]
    set rx750_tgt, rx750_start[1]
    set rx750_pos, rx750_start[2]
    set rx750_curclass, rx750_start[3]
    set rx750_bstack, rx750_start[4]
    set $I19, rx750_start[5]
    store_lex unicode:"$\x{a2}", rx750_cur
    length rx750_eos, rx750_tgt
    eq $I19, 1, rx750_restart1788
    gt rx750_pos, rx750_eos, rx750_fail1789
    repr_get_attr_int $I11, self, rx750_curclass, "$!from"
    ne $I11, -1, rxscan751_done1795
    goto rxscan751_scan1794
  rxscan751_loop1793:
    inc rx750_pos
    gt rx750_pos, rx750_eos, rx750_fail1789
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!from", rx750_pos
  rxscan751_scan1794:
    nqp_rxmark rx750_bstack, rxscan751_loop1793, rx750_pos, 0
  rxscan751_done1795:
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    store_lex unicode:"$\x{a2}", rx750_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1796
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_118, $P5004
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if752_else1797 
    set $P5006, fb_tmp_118["$PACKAGE"]
    set $P5008, $P5006
    goto if752_end1798
  if752_else1797:
    null $P5007
    set $P5008, $P5007
  if752_end1798:
    unless_null $P5008, vivi_7531799
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7531799:
    unless_null $P5008, vivi_7541800
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7541800:
    set $P5003, $P5008
  fallback1796:
    set $P101, $P5003
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    store_lex unicode:"$\x{a2}", rx750_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx750_bstack, rxcap755_fail1802, rx750_pos, 0
    add $I11, rx750_pos, 7
    gt $I11, rx750_eos, rx750_fail1789
    substr $S10, rx750_tgt, rx750_pos, 7
    ne $S10, ucs4:"knowhow", rx750_fail1789
    add rx750_pos, 7
    nqp_rxpeek $I19, rx750_bstack, rxcap755_fail1802
    inc $I19
    set $I11, rx750_bstack[$I19]
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    $P11 = rx750_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx750_pos)
    rx750_cstack = rx750_cur."!cursor_capture"($P11, "sym")
    goto rxcap755_done1801
  rxcap755_fail1802:
    goto rx750_fail1789
  rxcap755_done1801:
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    $P11 = rx750_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx750_curclass, "$!pos"
    lt $I11, 0, rx750_fail1789
    nqp_rxmark rx750_bstack, rxsubrule756_pass1803, -1, 0
  rxsubrule756_pass1803:
    rx750_cstack = rx750_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx750_pos, $P11, rx750_curclass, "$!pos"
    rx750_cur."!cursor_pass"(rx750_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx750_cur)
  rx750_restart1788:
    repr_get_attr_obj rx750_cstack, rx750_cur, rx750_curclass, "$!cstack"
  rx750_fail1789:
    unless rx750_bstack, rx750_done1787
    pop $I19, rx750_bstack
    if_null rx750_cstack, rx750_cstack_done1792
    unless rx750_cstack, rx750_cstack_done1792
    dec $I19
    set $P11, rx750_cstack[$I19]
  rx750_cstack_done1792:
    pop rx750_rep, rx750_bstack
    pop rx750_pos, rx750_bstack
    pop $I19, rx750_bstack
    lt rx750_pos, -1, rx750_done1787
    lt rx750_pos, 0, rx750_fail1789
    eq $I19, 0, rx750_fail1789
    nqp_islist $I20, rx750_cstack
    unless $I20, rx750_jump1790
    elements $I18, rx750_bstack
    le $I18, 0, rx750_cut1791
    dec $I18
    set $I18, rx750_bstack[$I18]
  rx750_cut1791:
    assign rx750_cstack, $I18
  rx750_jump1790:
    jump $I19
  rx750_done1787:
    rx750_cur."!cursor_fail"()
    .return (rx750_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_109_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1095
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_119 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx757_start
    .local string rx757_tgt
    .local int rx757_pos
    .local int rx757_off
    .local int rx757_eos
    .local int rx757_rep
    .local pmc rx757_cur
    .local pmc rx757_curclass
    .local pmc rx757_bstack
    .local pmc rx757_cstack
    rx757_start = self."!cursor_start_all"()
    set rx757_cur, rx757_start[0]
    set rx757_tgt, rx757_start[1]
    set rx757_pos, rx757_start[2]
    set rx757_curclass, rx757_start[3]
    set rx757_bstack, rx757_start[4]
    set $I19, rx757_start[5]
    store_lex unicode:"$\x{a2}", rx757_cur
    length rx757_eos, rx757_tgt
    eq $I19, 1, rx757_restart1806
    gt rx757_pos, rx757_eos, rx757_fail1807
    repr_get_attr_int $I11, self, rx757_curclass, "$!from"
    ne $I11, -1, rxscan758_done1813
    goto rxscan758_scan1812
  rxscan758_loop1811:
    inc rx757_pos
    gt rx757_pos, rx757_eos, rx757_fail1807
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!from", rx757_pos
  rxscan758_scan1812:
    nqp_rxmark rx757_bstack, rxscan758_loop1811, rx757_pos, 0
  rxscan758_done1813:
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    store_lex unicode:"$\x{a2}", rx757_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1814
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_119, $P5004
    repr_defined $I5001, fb_tmp_119
    unless $I5001 goto if759_else1815 
    set $P5006, fb_tmp_119["$PACKAGE"]
    set $P5008, $P5006
    goto if759_end1816
  if759_else1815:
    null $P5007
    set $P5008, $P5007
  if759_end1816:
    unless_null $P5008, vivi_7601817
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7601817:
    unless_null $P5008, vivi_7611818
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7611818:
    set $P5003, $P5008
  fallback1814:
    set $P101, $P5003
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    store_lex unicode:"$\x{a2}", rx757_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx757_bstack, rxcap762_fail1820, rx757_pos, 0
    add $I11, rx757_pos, 5
    gt $I11, rx757_eos, rx757_fail1807
    substr $S10, rx757_tgt, rx757_pos, 5
    ne $S10, ucs4:"class", rx757_fail1807
    add rx757_pos, 5
    nqp_rxpeek $I19, rx757_bstack, rxcap762_fail1820
    inc $I19
    set $I11, rx757_bstack[$I19]
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    $P11 = rx757_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx757_pos)
    rx757_cstack = rx757_cur."!cursor_capture"($P11, "sym")
    goto rxcap762_done1819
  rxcap762_fail1820:
    goto rx757_fail1807
  rxcap762_done1819:
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    $P11 = rx757_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx757_curclass, "$!pos"
    lt $I11, 0, rx757_fail1807
    nqp_rxmark rx757_bstack, rxsubrule763_pass1821, -1, 0
  rxsubrule763_pass1821:
    rx757_cstack = rx757_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx757_pos, $P11, rx757_curclass, "$!pos"
    rx757_cur."!cursor_pass"(rx757_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx757_cur)
  rx757_restart1806:
    repr_get_attr_obj rx757_cstack, rx757_cur, rx757_curclass, "$!cstack"
  rx757_fail1807:
    unless rx757_bstack, rx757_done1805
    pop $I19, rx757_bstack
    if_null rx757_cstack, rx757_cstack_done1810
    unless rx757_cstack, rx757_cstack_done1810
    dec $I19
    set $P11, rx757_cstack[$I19]
  rx757_cstack_done1810:
    pop rx757_rep, rx757_bstack
    pop rx757_pos, rx757_bstack
    pop $I19, rx757_bstack
    lt rx757_pos, -1, rx757_done1805
    lt rx757_pos, 0, rx757_fail1807
    eq $I19, 0, rx757_fail1807
    nqp_islist $I20, rx757_cstack
    unless $I20, rx757_jump1808
    elements $I18, rx757_bstack
    le $I18, 0, rx757_cut1809
    dec $I18
    set $I18, rx757_bstack[$I18]
  rx757_cut1809:
    assign rx757_cstack, $I18
  rx757_jump1808:
    jump $I19
  rx757_done1805:
    rx757_cur."!cursor_fail"()
    .return (rx757_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_110_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1100
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_120 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx764_start
    .local string rx764_tgt
    .local int rx764_pos
    .local int rx764_off
    .local int rx764_eos
    .local int rx764_rep
    .local pmc rx764_cur
    .local pmc rx764_curclass
    .local pmc rx764_bstack
    .local pmc rx764_cstack
    rx764_start = self."!cursor_start_all"()
    set rx764_cur, rx764_start[0]
    set rx764_tgt, rx764_start[1]
    set rx764_pos, rx764_start[2]
    set rx764_curclass, rx764_start[3]
    set rx764_bstack, rx764_start[4]
    set $I19, rx764_start[5]
    store_lex unicode:"$\x{a2}", rx764_cur
    length rx764_eos, rx764_tgt
    eq $I19, 1, rx764_restart1824
    gt rx764_pos, rx764_eos, rx764_fail1825
    repr_get_attr_int $I11, self, rx764_curclass, "$!from"
    ne $I11, -1, rxscan765_done1831
    goto rxscan765_scan1830
  rxscan765_loop1829:
    inc rx764_pos
    gt rx764_pos, rx764_eos, rx764_fail1825
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!from", rx764_pos
  rxscan765_scan1830:
    nqp_rxmark rx764_bstack, rxscan765_loop1829, rx764_pos, 0
  rxscan765_done1831:
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    store_lex unicode:"$\x{a2}", rx764_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1832
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_120, $P5004
    repr_defined $I5001, fb_tmp_120
    unless $I5001 goto if766_else1833 
    set $P5006, fb_tmp_120["$PACKAGE"]
    set $P5008, $P5006
    goto if766_end1834
  if766_else1833:
    null $P5007
    set $P5008, $P5007
  if766_end1834:
    unless_null $P5008, vivi_7671835
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7671835:
    unless_null $P5008, vivi_7681836
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7681836:
    set $P5003, $P5008
  fallback1832:
    set $P101, $P5003
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    store_lex unicode:"$\x{a2}", rx764_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx764_bstack, rxcap769_fail1838, rx764_pos, 0
    add $I11, rx764_pos, 7
    gt $I11, rx764_eos, rx764_fail1825
    substr $S10, rx764_tgt, rx764_pos, 7
    ne $S10, ucs4:"grammar", rx764_fail1825
    add rx764_pos, 7
    nqp_rxpeek $I19, rx764_bstack, rxcap769_fail1838
    inc $I19
    set $I11, rx764_bstack[$I19]
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    $P11 = rx764_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx764_pos)
    rx764_cstack = rx764_cur."!cursor_capture"($P11, "sym")
    goto rxcap769_done1837
  rxcap769_fail1838:
    goto rx764_fail1825
  rxcap769_done1837:
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    $P11 = rx764_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx764_curclass, "$!pos"
    lt $I11, 0, rx764_fail1825
    nqp_rxmark rx764_bstack, rxsubrule770_pass1839, -1, 0
  rxsubrule770_pass1839:
    rx764_cstack = rx764_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx764_pos, $P11, rx764_curclass, "$!pos"
    rx764_cur."!cursor_pass"(rx764_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx764_cur)
  rx764_restart1824:
    repr_get_attr_obj rx764_cstack, rx764_cur, rx764_curclass, "$!cstack"
  rx764_fail1825:
    unless rx764_bstack, rx764_done1823
    pop $I19, rx764_bstack
    if_null rx764_cstack, rx764_cstack_done1828
    unless rx764_cstack, rx764_cstack_done1828
    dec $I19
    set $P11, rx764_cstack[$I19]
  rx764_cstack_done1828:
    pop rx764_rep, rx764_bstack
    pop rx764_pos, rx764_bstack
    pop $I19, rx764_bstack
    lt rx764_pos, -1, rx764_done1823
    lt rx764_pos, 0, rx764_fail1825
    eq $I19, 0, rx764_fail1825
    nqp_islist $I20, rx764_cstack
    unless $I20, rx764_jump1826
    elements $I18, rx764_bstack
    le $I18, 0, rx764_cut1827
    dec $I18
    set $I18, rx764_bstack[$I18]
  rx764_cut1827:
    assign rx764_cstack, $I18
  rx764_jump1826:
    jump $I19
  rx764_done1823:
    rx764_cur."!cursor_fail"()
    .return (rx764_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_111_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1105
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_121 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx771_start
    .local string rx771_tgt
    .local int rx771_pos
    .local int rx771_off
    .local int rx771_eos
    .local int rx771_rep
    .local pmc rx771_cur
    .local pmc rx771_curclass
    .local pmc rx771_bstack
    .local pmc rx771_cstack
    rx771_start = self."!cursor_start_all"()
    set rx771_cur, rx771_start[0]
    set rx771_tgt, rx771_start[1]
    set rx771_pos, rx771_start[2]
    set rx771_curclass, rx771_start[3]
    set rx771_bstack, rx771_start[4]
    set $I19, rx771_start[5]
    store_lex unicode:"$\x{a2}", rx771_cur
    length rx771_eos, rx771_tgt
    eq $I19, 1, rx771_restart1842
    gt rx771_pos, rx771_eos, rx771_fail1843
    repr_get_attr_int $I11, self, rx771_curclass, "$!from"
    ne $I11, -1, rxscan772_done1849
    goto rxscan772_scan1848
  rxscan772_loop1847:
    inc rx771_pos
    gt rx771_pos, rx771_eos, rx771_fail1843
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!from", rx771_pos
  rxscan772_scan1848:
    nqp_rxmark rx771_bstack, rxscan772_loop1847, rx771_pos, 0
  rxscan772_done1849:
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    store_lex unicode:"$\x{a2}", rx771_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1850
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_121, $P5004
    repr_defined $I5001, fb_tmp_121
    unless $I5001 goto if773_else1851 
    set $P5006, fb_tmp_121["$PACKAGE"]
    set $P5008, $P5006
    goto if773_end1852
  if773_else1851:
    null $P5007
    set $P5008, $P5007
  if773_end1852:
    unless_null $P5008, vivi_7741853
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7741853:
    unless_null $P5008, vivi_7751854
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7751854:
    set $P5003, $P5008
  fallback1850:
    set $P101, $P5003
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    store_lex unicode:"$\x{a2}", rx771_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx771_bstack, rxcap776_fail1856, rx771_pos, 0
    add $I11, rx771_pos, 4
    gt $I11, rx771_eos, rx771_fail1843
    substr $S10, rx771_tgt, rx771_pos, 4
    ne $S10, ucs4:"role", rx771_fail1843
    add rx771_pos, 4
    nqp_rxpeek $I19, rx771_bstack, rxcap776_fail1856
    inc $I19
    set $I11, rx771_bstack[$I19]
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx771_pos)
    rx771_cstack = rx771_cur."!cursor_capture"($P11, "sym")
    goto rxcap776_done1855
  rxcap776_fail1856:
    goto rx771_fail1843
  rxcap776_done1855:
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx771_curclass, "$!pos"
    lt $I11, 0, rx771_fail1843
    nqp_rxmark rx771_bstack, rxsubrule777_pass1857, -1, 0
  rxsubrule777_pass1857:
    rx771_cstack = rx771_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx771_pos, $P11, rx771_curclass, "$!pos"
    rx771_cur."!cursor_pass"(rx771_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx771_cur)
  rx771_restart1842:
    repr_get_attr_obj rx771_cstack, rx771_cur, rx771_curclass, "$!cstack"
  rx771_fail1843:
    unless rx771_bstack, rx771_done1841
    pop $I19, rx771_bstack
    if_null rx771_cstack, rx771_cstack_done1846
    unless rx771_cstack, rx771_cstack_done1846
    dec $I19
    set $P11, rx771_cstack[$I19]
  rx771_cstack_done1846:
    pop rx771_rep, rx771_bstack
    pop rx771_pos, rx771_bstack
    pop $I19, rx771_bstack
    lt rx771_pos, -1, rx771_done1841
    lt rx771_pos, 0, rx771_fail1843
    eq $I19, 0, rx771_fail1843
    nqp_islist $I20, rx771_cstack
    unless $I20, rx771_jump1844
    elements $I18, rx771_bstack
    le $I18, 0, rx771_cut1845
    dec $I18
    set $I18, rx771_bstack[$I18]
  rx771_cut1845:
    assign rx771_cstack, $I18
  rx771_jump1844:
    jump $I19
  rx771_done1841:
    rx771_cur."!cursor_fail"()
    .return (rx771_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_112_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1110
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_122 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx778_start
    .local string rx778_tgt
    .local int rx778_pos
    .local int rx778_off
    .local int rx778_eos
    .local int rx778_rep
    .local pmc rx778_cur
    .local pmc rx778_curclass
    .local pmc rx778_bstack
    .local pmc rx778_cstack
    rx778_start = self."!cursor_start_all"()
    set rx778_cur, rx778_start[0]
    set rx778_tgt, rx778_start[1]
    set rx778_pos, rx778_start[2]
    set rx778_curclass, rx778_start[3]
    set rx778_bstack, rx778_start[4]
    set $I19, rx778_start[5]
    store_lex unicode:"$\x{a2}", rx778_cur
    length rx778_eos, rx778_tgt
    eq $I19, 1, rx778_restart1860
    gt rx778_pos, rx778_eos, rx778_fail1861
    repr_get_attr_int $I11, self, rx778_curclass, "$!from"
    ne $I11, -1, rxscan779_done1867
    goto rxscan779_scan1866
  rxscan779_loop1865:
    inc rx778_pos
    gt rx778_pos, rx778_eos, rx778_fail1861
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!from", rx778_pos
  rxscan779_scan1866:
    nqp_rxmark rx778_bstack, rxscan779_loop1865, rx778_pos, 0
  rxscan779_done1867:
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    store_lex unicode:"$\x{a2}", rx778_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1868
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_122, $P5004
    repr_defined $I5001, fb_tmp_122
    unless $I5001 goto if780_else1869 
    set $P5006, fb_tmp_122["$PACKAGE"]
    set $P5008, $P5006
    goto if780_end1870
  if780_else1869:
    null $P5007
    set $P5008, $P5007
  if780_end1870:
    unless_null $P5008, vivi_7811871
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7811871:
    unless_null $P5008, vivi_7821872
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7821872:
    set $P5003, $P5008
  fallback1868:
    set $P101, $P5003
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    store_lex unicode:"$\x{a2}", rx778_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx778_bstack, rxcap783_fail1874, rx778_pos, 0
    add $I11, rx778_pos, 6
    gt $I11, rx778_eos, rx778_fail1861
    substr $S10, rx778_tgt, rx778_pos, 6
    ne $S10, ucs4:"native", rx778_fail1861
    add rx778_pos, 6
    nqp_rxpeek $I19, rx778_bstack, rxcap783_fail1874
    inc $I19
    set $I11, rx778_bstack[$I19]
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    $P11 = rx778_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx778_pos)
    rx778_cstack = rx778_cur."!cursor_capture"($P11, "sym")
    goto rxcap783_done1873
  rxcap783_fail1874:
    goto rx778_fail1861
  rxcap783_done1873:
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    $P11 = rx778_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx778_curclass, "$!pos"
    lt $I11, 0, rx778_fail1861
    nqp_rxmark rx778_bstack, rxsubrule784_pass1875, -1, 0
  rxsubrule784_pass1875:
    rx778_cstack = rx778_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx778_pos, $P11, rx778_curclass, "$!pos"
    rx778_cur."!cursor_pass"(rx778_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx778_cur)
  rx778_restart1860:
    repr_get_attr_obj rx778_cstack, rx778_cur, rx778_curclass, "$!cstack"
  rx778_fail1861:
    unless rx778_bstack, rx778_done1859
    pop $I19, rx778_bstack
    if_null rx778_cstack, rx778_cstack_done1864
    unless rx778_cstack, rx778_cstack_done1864
    dec $I19
    set $P11, rx778_cstack[$I19]
  rx778_cstack_done1864:
    pop rx778_rep, rx778_bstack
    pop rx778_pos, rx778_bstack
    pop $I19, rx778_bstack
    lt rx778_pos, -1, rx778_done1859
    lt rx778_pos, 0, rx778_fail1861
    eq $I19, 0, rx778_fail1861
    nqp_islist $I20, rx778_cstack
    unless $I20, rx778_jump1862
    elements $I18, rx778_bstack
    le $I18, 0, rx778_cut1863
    dec $I18
    set $I18, rx778_bstack[$I18]
  rx778_cut1863:
    assign rx778_cstack, $I18
  rx778_jump1862:
    jump $I19
  rx778_done1859:
    rx778_cur."!cursor_fail"()
    .return (rx778_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_113_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1115
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_123 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx785_start
    .local string rx785_tgt
    .local int rx785_pos
    .local int rx785_off
    .local int rx785_eos
    .local int rx785_rep
    .local pmc rx785_cur
    .local pmc rx785_curclass
    .local pmc rx785_bstack
    .local pmc rx785_cstack
    rx785_start = self."!cursor_start_all"()
    set rx785_cur, rx785_start[0]
    set rx785_tgt, rx785_start[1]
    set rx785_pos, rx785_start[2]
    set rx785_curclass, rx785_start[3]
    set rx785_bstack, rx785_start[4]
    set $I19, rx785_start[5]
    store_lex unicode:"$\x{a2}", rx785_cur
    length rx785_eos, rx785_tgt
    eq $I19, 1, rx785_restart1878
    gt rx785_pos, rx785_eos, rx785_fail1879
    repr_get_attr_int $I11, self, rx785_curclass, "$!from"
    ne $I11, -1, rxscan786_done1885
    goto rxscan786_scan1884
  rxscan786_loop1883:
    inc rx785_pos
    gt rx785_pos, rx785_eos, rx785_fail1879
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!from", rx785_pos
  rxscan786_scan1884:
    nqp_rxmark rx785_bstack, rxscan786_loop1883, rx785_pos, 0
  rxscan786_done1885:
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    store_lex unicode:"$\x{a2}", rx785_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1886
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_123, $P5004
    repr_defined $I5001, fb_tmp_123
    unless $I5001 goto if787_else1887 
    set $P5006, fb_tmp_123["$PACKAGE"]
    set $P5008, $P5006
    goto if787_end1888
  if787_else1887:
    null $P5007
    set $P5008, $P5007
  if787_end1888:
    unless_null $P5008, vivi_7881889
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_7881889:
    unless_null $P5008, vivi_7891890
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7891890:
    set $P5003, $P5008
  fallback1886:
    set $P101, $P5003
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    store_lex unicode:"$\x{a2}", rx785_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx785_bstack, rxcap790_fail1892, rx785_pos, 0
    add $I11, rx785_pos, 4
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 4
    ne $S10, ucs4:"stub", rx785_fail1879
    add rx785_pos, 4
    nqp_rxpeek $I19, rx785_bstack, rxcap790_fail1892
    inc $I19
    set $I11, rx785_bstack[$I19]
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx785_pos)
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "sym")
    goto rxcap790_done1891
  rxcap790_fail1892:
    goto rx785_fail1879
  rxcap790_done1891:
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule791_pass1893
  rxsubrule791_back1894:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule791_pass1893:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule791_back1894
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."name"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule792_pass1895
  rxsubrule792_back1896:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule792_pass1895:
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule792_back1896
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule793_pass1897
  rxsubrule793_back1898:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule793_pass1897:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule793_back1898
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 9
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 9
    ne $S10, ucs4:"metaclass", rx785_fail1879
    add rx785_pos, 9
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule794_pass1899
  rxsubrule794_back1900:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule794_pass1899:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule794_back1900
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."name"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule795_pass1901
  rxsubrule795_back1902:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule795_pass1901:
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "metaclass")
    set_addr $I11, rxsubrule795_back1902
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule796_pass1903
  rxsubrule796_back1904:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule796_pass1903:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule796_back1904
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 1
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 1
    ne $S10, ucs4:"{", rx785_fail1879
    add rx785_pos, 1
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule797_pass1905
  rxsubrule797_back1906:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule797_pass1905:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule797_back1906
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 3
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 3
    ne $S10, ucs4:"...", rx785_fail1879
    add rx785_pos, 3
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule798_pass1907
  rxsubrule798_back1908:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule798_pass1907:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule798_back1908
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 1
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 1
    ne $S10, ucs4:"}", rx785_fail1879
    add rx785_pos, 1
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule799_pass1909
  rxsubrule799_back1910:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule799_pass1909:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule799_back1910
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    rx785_cur."!cursor_pass"(rx785_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx785_cur)
  rx785_restart1878:
    repr_get_attr_obj rx785_cstack, rx785_cur, rx785_curclass, "$!cstack"
  rx785_fail1879:
    unless rx785_bstack, rx785_done1877
    pop $I19, rx785_bstack
    if_null rx785_cstack, rx785_cstack_done1882
    unless rx785_cstack, rx785_cstack_done1882
    dec $I19
    set $P11, rx785_cstack[$I19]
  rx785_cstack_done1882:
    pop rx785_rep, rx785_bstack
    pop rx785_pos, rx785_bstack
    pop $I19, rx785_bstack
    lt rx785_pos, -1, rx785_done1877
    lt rx785_pos, 0, rx785_fail1879
    eq $I19, 0, rx785_fail1879
    nqp_islist $I20, rx785_cstack
    unless $I20, rx785_jump1880
    elements $I18, rx785_bstack
    le $I18, 0, rx785_cut1881
    dec $I18
    set $I18, rx785_bstack[$I18]
  rx785_cut1881:
    assign rx785_cstack, $I18
  rx785_jump1880:
    jump $I19
  rx785_done1877:
    rx785_cur."!cursor_fail"()
    .return (rx785_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_114_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1123
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_425_1383915013.33774' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_426_1383915013.33774' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx800_start
    .local string rx800_tgt
    .local int rx800_pos
    .local int rx800_off
    .local int rx800_eos
    .local int rx800_rep
    .local pmc rx800_cur
    .local pmc rx800_curclass
    .local pmc rx800_bstack
    .local pmc rx800_cstack
    rx800_start = self."!cursor_start_all"()
    set rx800_cur, rx800_start[0]
    set rx800_tgt, rx800_start[1]
    set rx800_pos, rx800_start[2]
    set rx800_curclass, rx800_start[3]
    set rx800_bstack, rx800_start[4]
    set $I19, rx800_start[5]
    store_lex unicode:"$\x{a2}", rx800_cur
    length rx800_eos, rx800_tgt
    eq $I19, 1, rx800_restart1913
    gt rx800_pos, rx800_eos, rx800_fail1914
    repr_get_attr_int $I11, self, rx800_curclass, "$!from"
    ne $I11, -1, rxscan801_done1920
    goto rxscan801_scan1919
  rxscan801_loop1918:
    inc rx800_pos
    gt rx800_pos, rx800_eos, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!from", rx800_pos
  rxscan801_scan1919:
    nqp_rxmark rx800_bstack, rxscan801_loop1918, rx800_pos, 0
  rxscan801_done1920:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
    unless_null $P101, fallback1921
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_124, $P5003
    repr_defined $I5001, fb_tmp_124
    unless $I5001 goto if802_else1922 
    set $P5005, fb_tmp_124["$PACKAGE"]
    set $P5007, $P5005
    goto if802_end1923
  if802_else1922:
    null $P5006
    set $P5007, $P5006
  if802_end1923:
    unless_null $P5007, vivi_8031924
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_8031924:
    unless_null $P5007, vivi_8041925
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_8041925:
    set $P101, $P5007
  fallback1921:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
.annotate 'line', 1125
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1926
    nqp_get_sc_object $P5012, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5011, $P5012
    set fb_tmp_125, $P5011
    repr_defined $I5002, fb_tmp_125
    unless $I5002 goto if805_else1927 
    set $P5013, fb_tmp_125["$W"]
    set $P5015, $P5013
    goto if805_end1928
  if805_else1927:
    null $P5014
    set $P5015, $P5014
  if805_end1928:
    unless_null $P5015, vivi_8061929
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_8061929:
    unless_null $P5015, vivi_8071930
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_8071930:
    set $P5010, $P5015
  fallback1926:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    add $I11, rx800_pos, 0
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 0
    ne $S10, ucs4:"", rx800_fail1914
    add rx800_pos, 0
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule808_pass1931
  rxsubrule808_back1932:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule808_pass1931:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule808_back1932
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."name"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule809_pass1933
  rxsubrule809_back1934:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule809_pass1933:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule809_back1934
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule810_pass1935
  rxsubrule810_back1936:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule810_pass1935:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule810_back1936
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule811_pass1937
  rxsubrule811_back1938:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule811_pass1937:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule811_back1938
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule812_pass1939
  rxsubrule812_back1940:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule812_pass1939:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule812_back1940
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg813_done1942, rx800_pos, 0
  rxquantg813_loop1941:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_425_1383915013.33774' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule817_pass1948
  rxsubrule817_back1949:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule817_pass1948:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule817_back1949
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:"[", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule818_pass1950
  rxsubrule818_back1951:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule818_pass1950:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule818_back1951
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule819_pass1952
  rxsubrule819_back1953:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule819_pass1952:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "role_params")
    set_addr $I11, rxsubrule819_back1953
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule820_pass1954
  rxsubrule820_back1955:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule820_pass1954:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule820_back1955
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt821_01957:
    nqp_rxmark rx800_bstack, alt821_11960, rx800_pos, 0
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:"]", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule822_pass1958
  rxsubrule822_back1959:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule822_pass1958:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule822_back1959
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt821_end1956
  alt821_11960:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."FAILGOAL"("']' ")
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule823_pass1961
  rxsubrule823_back1962:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule823_pass1961:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule823_back1962
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt821_end1956:
  rxquantg813_done1942:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule824_pass1963
  rxsubrule824_back1964:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule824_pass1963:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule824_back1964
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg825_done1966, rx800_pos, 0
  rxquantg825_loop1965:
    add $I11, rx800_pos, 2
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 2
    ne $S10, ucs4:"is", rx800_fail1914
    add rx800_pos, 2
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule826_pass1967
  rxsubrule826_back1968:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule826_pass1967:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule826_back1968
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    add $I11, rx800_pos, 5
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 5
    ne $S10, ucs4:"repr(", rx800_fail1914
    add rx800_pos, 5
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule827_pass1969
  rxsubrule827_back1970:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule827_pass1969:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule827_back1970
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule828_pass1971
  rxsubrule828_back1972:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule828_pass1971:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "repr")
    set_addr $I11, rxsubrule828_back1972
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule829_pass1973
  rxsubrule829_back1974:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule829_pass1973:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule829_back1974
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:")", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule830_pass1975
  rxsubrule830_back1976:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule830_pass1975:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule830_back1976
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  rxquantg825_done1966:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule831_pass1977
  rxsubrule831_back1978:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule831_pass1977:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule831_back1978
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_426_1383915013.33774' 
    capture_lex $P5023
    $P5024 = $P5023()
    nqp_rxmark rx800_bstack, rxquantg949_done2180, rx800_pos, 0
  rxquantg949_loop2179:
    nqp_rxmark rx800_bstack, rxcap950_fail2182, rx800_pos, 0
    add $I11, rx800_pos, 9
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 9
    ne $S10, ucs4:"is export", rx800_fail1914
    add rx800_pos, 9
    nqp_rxpeek $I19, rx800_bstack, rxcap950_fail2182
    inc $I19
    set $I11, rx800_bstack[$I19]
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx800_pos)
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "export")
    goto rxcap950_done2181
  rxcap950_fail2182:
    goto rx800_fail1914
  rxcap950_done2181:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule951_pass2183
  rxsubrule951_back2184:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule951_pass2183:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule951_back2184
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  rxquantg949_done2180:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule952_pass2185
  rxsubrule952_back2186:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule952_pass2185:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule952_back2186
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg953_done2188, rx800_pos, 0
  rxquantg953_loop2187:
    add $I11, rx800_pos, 2
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 2
    ne $S10, ucs4:"is", rx800_fail1914
    add rx800_pos, 2
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule954_pass2189
  rxsubrule954_back2190:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule954_pass2189:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule954_back2190
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."name"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule955_pass2191
  rxsubrule955_back2192:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule955_pass2191:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "parent")
    set_addr $I11, rxsubrule955_back2192
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule956_pass2193
  rxsubrule956_back2194:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule956_pass2193:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule956_back2194
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  rxquantg953_done2188:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule957_pass2195
  rxsubrule957_back2196:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule957_pass2195:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule957_back2196
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg958_done2198, rx800_pos, 0
  rxquantg958_loop2197:
    add $I11, rx800_pos, 4
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 4
    ne $S10, ucs4:"does", rx800_fail1914
    add rx800_pos, 4
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule959_pass2199
  rxsubrule959_back2200:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule959_pass2199:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule959_back2200
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."name"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule960_pass2201
  rxsubrule960_back2202:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule960_pass2201:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "role")
    set_addr $I11, rxsubrule960_back2202
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule961_pass2203
  rxsubrule961_back2204:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule961_pass2203:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule961_back2204
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg958_done2198, rx800_pos, rx800_rep
    goto rxquantg958_loop2197
  rxquantg958_done2198:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule962_pass2205
  rxsubrule962_back2206:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule962_pass2205:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule962_back2206
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt963_02208:
    nqp_rxmark rx800_bstack, alt963_12227, rx800_pos, 0
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:";", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule964_pass2209
  rxsubrule964_back2210:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule964_pass2209:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule964_back2210
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule965_pass2211
  rxsubrule965_back2212:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule965_pass2211:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "statementlist")
    set_addr $I11, rxsubrule965_back2212
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule966_pass2213
  rxsubrule966_back2214:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule966_pass2213:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule966_back2214
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt967_02216:
    nqp_rxmark rx800_bstack, alt967_12220, rx800_pos, 0
    lt rx800_pos, rx800_eos, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule969_pass2218
  rxsubrule969_back2219:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule969_pass2218:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule969_back2219
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt967_end2215
  alt967_12220:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule970_pass2221
  rxsubrule970_back2222:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule970_pass2221:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule970_back2222
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule971_pass2223
  rxsubrule971_back2224:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule971_pass2223:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule971_back2224
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt967_end2215:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule972_pass2225
  rxsubrule972_back2226:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule972_pass2225:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule972_back2226
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt963_end2207
  alt963_12227:
    nqp_rxmark rx800_bstack, alt963_22234, rx800_pos, 0
    ge rx800_pos, rx800_eos, rx800_fail1914
    substr $S11, rx800_tgt, rx800_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule973_pass2228
  rxsubrule973_back2229:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule973_pass2228:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule973_back2229
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule974_pass2230
  rxsubrule974_back2231:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule974_pass2230:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule974_back2231
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule975_pass2232
  rxsubrule975_back2233:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule975_pass2232:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule975_back2233
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt963_end2207
  alt963_22234:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule976_pass2235
  rxsubrule976_back2236:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule976_pass2235:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule976_back2236
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule977_pass2237
  rxsubrule977_back2238:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule977_pass2237:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule977_back2238
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt963_end2207:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule978_pass2239
  rxsubrule978_back2240:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule978_pass2239:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule978_back2240
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule979_pass2241
  rxsubrule979_back2242:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule979_pass2241:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule979_back2242
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    rx800_cur."!cursor_pass"(rx800_pos, "package_def", 'backtrack'=>1)
    .return (rx800_cur)
  rx800_restart1913:
    repr_get_attr_obj rx800_cstack, rx800_cur, rx800_curclass, "$!cstack"
  rx800_fail1914:
    unless rx800_bstack, rx800_done1912
    pop $I19, rx800_bstack
    if_null rx800_cstack, rx800_cstack_done1917
    unless rx800_cstack, rx800_cstack_done1917
    dec $I19
    set $P11, rx800_cstack[$I19]
  rx800_cstack_done1917:
    pop rx800_rep, rx800_bstack
    pop rx800_pos, rx800_bstack
    pop $I19, rx800_bstack
    lt rx800_pos, -1, rx800_done1912
    lt rx800_pos, 0, rx800_fail1914
    eq $I19, 0, rx800_fail1914
    nqp_islist $I20, rx800_cstack
    unless $I20, rx800_jump1915
    elements $I18, rx800_bstack
    le $I18, 0, rx800_cut1916
    dec $I18
    set $I18, rx800_bstack[$I18]
  rx800_cut1916:
    assign rx800_cstack, $I18
  rx800_jump1915:
    jump $I19
  rx800_done1912:
    rx800_cur."!cursor_fail"()
    .return (rx800_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1383915013.33774") :anon :lex :outer("cuid_114_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1130
    .local pmc fb_tmp_126 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1943
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_126, $P5002
    repr_defined $I5002, fb_tmp_126
    unless $I5002 goto if814_else1944 
    set $P5004, fb_tmp_126["$PKGDECL"]
    set $P5006, $P5004
    goto if814_end1945
  if814_else1944:
    null $P5005
    set $P5006, $P5005
  if814_end1945:
    unless_null $P5006, vivi_8151946
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_8151946:
    unless_null $P5006, vivi_8161947
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_8161947:
    set $P5001, $P5006
  fallback1943:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1383915013.33774") :anon :lex :outer("cuid_114_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1133
    .lex "%args", $P101 
    .lex "$how", $P102 
    .lex "$INNER", $P103 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    .local pmc fb_tmp_165 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    .local pmc fb_tmp_168 
    .local pmc fb_tmp_169 
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    find_lex $P5004, "$/"
    unless_null $P5004, fallback1981
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  fallback1981:
    set fb_tmp_127, $P5004
    repr_defined $I5001, fb_tmp_127
    unless $I5001 goto if832_else1979 
    set $P5006, fb_tmp_127["name"]
    set $P5008, $P5006
    goto if832_end1980
  if832_else1979:
    null $P5007
    set $P5008, $P5007
  if832_end1980:
    unless_null $P5008, vivi_8331982
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_8331982:
    set $S5001, $P5008
    box $P5010, $S5001
    set $P101["name"], $P5010
    find_lex $P5011, "$/"
    unless_null $P5011, fallback1987
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  fallback1987:
    set fb_tmp_128, $P5011
    repr_defined $I5002, fb_tmp_128
    unless $I5002 goto if835_else1985 
    set $P5013, fb_tmp_128["repr"]
    set $P5015, $P5013
    goto if835_end1986
  if835_else1985:
    null $P5014
    set $P5015, $P5014
  if835_end1986:
    unless_null $P5015, vivi_8361988
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_8361988:
    unless $P5015 goto if834_end1984 
.annotate 'line', 1138
    find_lex $P5017, "$/"
    unless_null $P5017, fallback1997
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  fallback1997:
    set fb_tmp_132, $P5017
    repr_defined $I5006, fb_tmp_132
    unless $I5006 goto if840_else1995 
    set $P5019, fb_tmp_132["repr"]
    set $P5021, $P5019
    goto if840_end1996
  if840_else1995:
    null $P5020
    set $P5021, $P5020
  if840_end1996:
    unless_null $P5021, vivi_8411998
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_8411998:
    set fb_tmp_131, $P5021
    repr_defined $I5005, fb_tmp_131
    unless $I5005 goto if839_else1993 
    set $P5023, fb_tmp_131["quote_delimited"]
    set $P5025, $P5023
    goto if839_end1994
  if839_else1993:
    null $P5024
    set $P5025, $P5024
  if839_end1994:
    unless_null $P5025, vivi_8421999
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_8421999:
    set fb_tmp_130, $P5025
    repr_defined $I5004, fb_tmp_130
    unless $I5004 goto if838_else1991 
    set $P5027, fb_tmp_130["quote_atom"]
    set $P5029, $P5027
    goto if838_end1992
  if838_else1991:
    null $P5028
    set $P5029, $P5028
  if838_end1992:
    unless_null $P5029, vivi_8432000
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5029, $P5030
  vivi_8432000:
    set fb_tmp_129, $P5029
    repr_defined $I5003, fb_tmp_129
    unless $I5003 goto if837_else1989 
    set $P5031, fb_tmp_129[0]
    set $P5033, $P5031
    goto if837_end1990
  if837_else1989:
    null $P5032
    set $P5033, $P5032
  if837_end1990:
    unless_null $P5033, vivi_8442001
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5033, $P5034
  vivi_8442001:
    set $S5002, $P5033
    box $P5035, $S5002
    set $P101["repr"], $P5035
  if834_end1984:
    find_dynamic_lex $P5036, "%*HOW"
    unless_null $P5036, fallback2004
    nqp_get_sc_object $P5038, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5037, $P5038
    set pkg_viv_tmp_25, $P5037
    set fb_tmp_134, pkg_viv_tmp_25
    repr_defined $I5008, fb_tmp_134
    unless $I5008 goto if846_else2005 
    set $P5039, fb_tmp_134["%HOW"]
    set $P5041, $P5039
    goto if846_end2006
  if846_else2005:
    null $P5040
    set $P5041, $P5040
  if846_end2006:
    unless_null $P5041, vivi_8472007
    new $P5042, 'Hash'
    set pkg_viv_tmp_25["%HOW"], $P5042
    set $P5041, $P5042
  vivi_8472007:
    unless_null $P5041, vivi_8482008
    die "Contextual %*HOW not found"
    box $P5043, "Contextual %*HOW not found"
    set $P5041, $P5043
  vivi_8482008:
    set $P5036, $P5041
  fallback2004:
    set fb_tmp_133, $P5036
    repr_defined $I5007, fb_tmp_133
    unless $I5007 goto if845_else2002 
    find_dynamic_lex $P5045, "$*PKGDECL"
    unless_null $P5045, fallback2009
    nqp_get_sc_object $P5047, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5046, $P5047
    set fb_tmp_135, $P5046
    repr_defined $I5009, fb_tmp_135
    unless $I5009 goto if849_else2010 
    set $P5048, fb_tmp_135["$PKGDECL"]
    set $P5050, $P5048
    goto if849_end2011
  if849_else2010:
    null $P5049
    set $P5050, $P5049
  if849_end2011:
    unless_null $P5050, vivi_8502012
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5050, $P5051
  vivi_8502012:
    unless_null $P5050, vivi_8512013
    die "Contextual $*PKGDECL not found"
    box $P5052, "Contextual $*PKGDECL not found"
    set $P5050, $P5052
  vivi_8512013:
    set $P5045, $P5050
  fallback2009:
    set $S5003, $P5045
    set $P5044, fb_tmp_133[$S5003]
    set $P5054, $P5044
    goto if845_end2003
  if845_else2002:
    null $P5053
    set $P5054, $P5053
  if845_end2003:
    unless_null $P5054, vivi_8522014
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5054, $P5055
  vivi_8522014:
    set $P102, $P5054
.annotate 'line', 1142
    find_dynamic_lex $P5056, "$*W"
    unless_null $P5056, fallback2015
    nqp_get_sc_object $P5058, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5057, $P5058
    set fb_tmp_136, $P5057
    repr_defined $I5010, fb_tmp_136
    unless $I5010 goto if853_else2016 
    set $P5059, fb_tmp_136["$W"]
    set $P5061, $P5059
    goto if853_end2017
  if853_else2016:
    null $P5060
    set $P5061, $P5060
  if853_end2017:
    unless_null $P5061, vivi_8542018
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5061, $P5062
  vivi_8542018:
    unless_null $P5061, vivi_8552019
    die "Contextual $*W not found"
    box $P5063, "Contextual $*W not found"
    set $P5061, $P5063
  vivi_8552019:
    set $P5056, $P5061
  fallback2015:
    $P5064 = $P5056."cur_lexpad"()
    set $P103, $P5064
.annotate 'line', 1143
    find_dynamic_lex $P5065, "$*W"
    unless_null $P5065, fallback2020
    nqp_get_sc_object $P5067, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5066, $P5067
    set fb_tmp_137, $P5066
    repr_defined $I5011, fb_tmp_137
    unless $I5011 goto if856_else2021 
    set $P5068, fb_tmp_137["$W"]
    set $P5070, $P5068
    goto if856_end2022
  if856_else2021:
    null $P5069
    set $P5070, $P5069
  if856_end2022:
    unless_null $P5070, vivi_8572023
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5070, $P5071
  vivi_8572023:
    unless_null $P5070, vivi_8582024
    die "Contextual $*W not found"
    box $P5072, "Contextual $*W not found"
    set $P5070, $P5072
  vivi_8582024:
    set $P5065, $P5070
  fallback2020:
    $P5073 = $P5065."pkg_create_mo"($P102, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5073
    can $I5012, $P102, "parametric"
    box $P5076, $I5012
    set $P5075, $P5076
    unless $I5012 goto if860_end2028 
.annotate 'line', 1146
    $P5074 = $P102."parametric"($P102)
    set $P5075, $P5074
  if860_end2028:
    unless $P5075 goto if859_else2025 
.annotate 'line', 1147
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback2029
    nqp_get_sc_object $P5079, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5078, $P5079
    set fb_tmp_138, $P5078
    repr_defined $I5013, fb_tmp_138
    unless $I5013 goto if861_else2030 
    set $P5080, fb_tmp_138["$W"]
    set $P5082, $P5080
    goto if861_end2031
  if861_else2030:
    null $P5081
    set $P5082, $P5081
  if861_end2031:
    unless_null $P5082, vivi_8622032
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_8622032:
    unless_null $P5082, vivi_8632033
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_8632033:
    set $P5077, $P5082
  fallback2029:
    find_dynamic_lex $P5085, "$*PACKAGE"
    unless_null $P5085, fallback2034
    nqp_get_sc_object $P5087, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5086, $P5087
    set fb_tmp_139, $P5086
    repr_defined $I5014, fb_tmp_139
    unless $I5014 goto if864_else2035 
    set $P5088, fb_tmp_139["$PACKAGE"]
    set $P5090, $P5088
    goto if864_end2036
  if864_else2035:
    null $P5089
    set $P5090, $P5089
  if864_end2036:
    unless_null $P5090, vivi_8652037
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5090, $P5091
  vivi_8652037:
    unless_null $P5090, vivi_8662038
    die "Contextual $*PACKAGE not found"
    box $P5092, "Contextual $*PACKAGE not found"
    set $P5090, $P5092
  vivi_8662038:
    set $P5085, $P5090
  fallback2034:
    $P5077."install_lexical_symbol"($P103, "$?PACKAGE", $P5085)
.annotate 'line', 1148
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback2039
    nqp_get_sc_object $P5095, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5094, $P5095
    set fb_tmp_140, $P5094
    repr_defined $I5015, fb_tmp_140
    unless $I5015 goto if867_else2040 
    set $P5096, fb_tmp_140["$W"]
    set $P5098, $P5096
    goto if867_end2041
  if867_else2040:
    null $P5097
    set $P5098, $P5097
  if867_end2041:
    unless_null $P5098, vivi_8682042
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5098, $P5099
  vivi_8682042:
    unless_null $P5098, vivi_8692043
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_8692043:
    set $P5093, $P5098
  fallback2039:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback2044
    nqp_get_sc_object $P5103, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5102, $P5103
    set fb_tmp_141, $P5102
    repr_defined $I5016, fb_tmp_141
    unless $I5016 goto if870_else2045 
    set $P5104, fb_tmp_141["$PACKAGE"]
    set $P5106, $P5104
    goto if870_end2046
  if870_else2045:
    null $P5105
    set $P5106, $P5105
  if870_end2046:
    unless_null $P5106, vivi_8712047
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5106, $P5107
  vivi_8712047:
    unless_null $P5106, vivi_8722048
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_8722048:
    set $P5101, $P5106
  fallback2044:
    $P5109 = $P5093."install_lexical_symbol"($P103, "$?ROLE", $P5101)
    goto if859_end2026
  if859_else2025:
.annotate 'line', 1150
.annotate 'line', 1151
    find_dynamic_lex $P5110, "$*W"
    unless_null $P5110, fallback2049
    nqp_get_sc_object $P5112, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5111, $P5112
    set fb_tmp_142, $P5111
    repr_defined $I5017, fb_tmp_142
    unless $I5017 goto if873_else2050 
    set $P5113, fb_tmp_142["$W"]
    set $P5115, $P5113
    goto if873_end2051
  if873_else2050:
    null $P5114
    set $P5115, $P5114
  if873_end2051:
    unless_null $P5115, vivi_8742052
    nqp_get_sc_object $P5116, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5115, $P5116
  vivi_8742052:
    unless_null $P5115, vivi_8752053
    die "Contextual $*W not found"
    box $P5117, "Contextual $*W not found"
    set $P5115, $P5117
  vivi_8752053:
    set $P5110, $P5115
  fallback2049:
    find_dynamic_lex $P5118, "$*PACKAGE"
    unless_null $P5118, fallback2054
    nqp_get_sc_object $P5120, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5119, $P5120
    set fb_tmp_143, $P5119
    repr_defined $I5018, fb_tmp_143
    unless $I5018 goto if876_else2055 
    set $P5121, fb_tmp_143["$PACKAGE"]
    set $P5123, $P5121
    goto if876_end2056
  if876_else2055:
    null $P5122
    set $P5123, $P5122
  if876_end2056:
    unless_null $P5123, vivi_8772057
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5123, $P5124
  vivi_8772057:
    unless_null $P5123, vivi_8782058
    die "Contextual $*PACKAGE not found"
    box $P5125, "Contextual $*PACKAGE not found"
    set $P5123, $P5125
  vivi_8782058:
    set $P5118, $P5123
  fallback2054:
    $P5110."install_lexical_symbol"($P103, "$?PACKAGE", $P5118)
.annotate 'line', 1152
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback2059
    nqp_get_sc_object $P5128, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5127, $P5128
    set fb_tmp_144, $P5127
    repr_defined $I5019, fb_tmp_144
    unless $I5019 goto if879_else2060 
    set $P5129, fb_tmp_144["$W"]
    set $P5131, $P5129
    goto if879_end2061
  if879_else2060:
    null $P5130
    set $P5131, $P5130
  if879_end2061:
    unless_null $P5131, vivi_8802062
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5131, $P5132
  vivi_8802062:
    unless_null $P5131, vivi_8812063
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_8812063:
    set $P5126, $P5131
  fallback2059:
    find_dynamic_lex $P5134, "$*PACKAGE"
    unless_null $P5134, fallback2064
    nqp_get_sc_object $P5136, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5135, $P5136
    set fb_tmp_145, $P5135
    repr_defined $I5020, fb_tmp_145
    unless $I5020 goto if882_else2065 
    set $P5137, fb_tmp_145["$PACKAGE"]
    set $P5139, $P5137
    goto if882_end2066
  if882_else2065:
    null $P5138
    set $P5139, $P5138
  if882_end2066:
    unless_null $P5139, vivi_8832067
    nqp_get_sc_object $P5140, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5139, $P5140
  vivi_8832067:
    unless_null $P5139, vivi_8842068
    die "Contextual $*PACKAGE not found"
    box $P5141, "Contextual $*PACKAGE not found"
    set $P5139, $P5141
  vivi_8842068:
    set $P5134, $P5139
  fallback2064:
    $P5142 = $P5126."install_lexical_symbol"($P103, "$?CLASS", $P5134)
  if859_end2026:
    find_dynamic_lex $P5143, "$*SCOPE"
    unless_null $P5143, fallback2073
    nqp_get_sc_object $P5145, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5144, $P5145
    set fb_tmp_146, $P5144
    repr_defined $I5022, fb_tmp_146
    unless $I5022 goto if887_else2074 
    set $P5146, fb_tmp_146["$SCOPE"]
    set $P5148, $P5146
    goto if887_end2075
  if887_else2074:
    null $P5147
    set $P5148, $P5147
  if887_end2075:
    unless_null $P5148, vivi_8882076
    nqp_get_sc_object $P5149, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5148, $P5149
  vivi_8882076:
    unless_null $P5148, vivi_8892077
    die "Contextual $*SCOPE not found"
    box $P5150, "Contextual $*SCOPE not found"
    set $P5148, $P5150
  vivi_8892077:
    set $P5143, $P5148
  fallback2073:
    set $S5004, $P5143
    iseq $I5021, $S5004, "our"
    set $I5025, $I5021
    if $I5021 goto unless886_end2072 
    find_dynamic_lex $P5151, "$*SCOPE"
    unless_null $P5151, fallback2078
    nqp_get_sc_object $P5153, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5152, $P5153
    set fb_tmp_147, $P5152
    repr_defined $I5024, fb_tmp_147
    unless $I5024 goto if890_else2079 
    set $P5154, fb_tmp_147["$SCOPE"]
    set $P5156, $P5154
    goto if890_end2080
  if890_else2079:
    null $P5155
    set $P5156, $P5155
  if890_end2080:
    unless_null $P5156, vivi_8912081
    nqp_get_sc_object $P5157, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5156, $P5157
  vivi_8912081:
    unless_null $P5156, vivi_8922082
    die "Contextual $*SCOPE not found"
    box $P5158, "Contextual $*SCOPE not found"
    set $P5156, $P5158
  vivi_8922082:
    set $P5151, $P5156
  fallback2078:
    set $S5005, $P5151
    iseq $I5023, $S5005, ""
    set $I5025, $I5023
  unless886_end2072:
    unless $I5025 goto if885_else2069 
.annotate 'line', 1156
.annotate 'line', 1157
    find_dynamic_lex $P5159, "$*W"
    unless_null $P5159, fallback2083
    nqp_get_sc_object $P5161, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5160, $P5161
    set fb_tmp_148, $P5160
    repr_defined $I5026, fb_tmp_148
    unless $I5026 goto if893_else2084 
    set $P5162, fb_tmp_148["$W"]
    set $P5164, $P5162
    goto if893_end2085
  if893_else2084:
    null $P5163
    set $P5164, $P5163
  if893_end2085:
    unless_null $P5164, vivi_8942086
    nqp_get_sc_object $P5165, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5164, $P5165
  vivi_8942086:
    unless_null $P5164, vivi_8952087
    die "Contextual $*W not found"
    box $P5166, "Contextual $*W not found"
    set $P5164, $P5166
  vivi_8952087:
    set $P5159, $P5164
  fallback2083:
    find_dynamic_lex $P5167, "$*OUTERPACKAGE"
    unless_null $P5167, fallback2088
    nqp_get_sc_object $P5169, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5168, $P5169
    set fb_tmp_149, $P5168
    repr_defined $I5027, fb_tmp_149
    unless $I5027 goto if896_else2089 
    set $P5170, fb_tmp_149["$OUTERPACKAGE"]
    set $P5172, $P5170
    goto if896_end2090
  if896_else2089:
    null $P5171
    set $P5172, $P5171
  if896_end2090:
    unless_null $P5172, vivi_8972091
    nqp_get_sc_object $P5173, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5172, $P5173
  vivi_8972091:
    unless_null $P5172, vivi_8982092
    die "Contextual $*OUTERPACKAGE not found"
    box $P5174, "Contextual $*OUTERPACKAGE not found"
    set $P5172, $P5174
  vivi_8982092:
    set $P5167, $P5172
  fallback2088:
    find_lex $P5175, "$/"
    unless_null $P5175, fallback2097
    nqp_get_sc_object $P5176, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5175, $P5176
  fallback2097:
    set fb_tmp_151, $P5175
    repr_defined $I5029, fb_tmp_151
    unless $I5029 goto if900_else2095 
    set $P5177, fb_tmp_151["name"]
    set $P5179, $P5177
    goto if900_end2096
  if900_else2095:
    null $P5178
    set $P5179, $P5178
  if900_end2096:
    unless_null $P5179, vivi_9012098
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5179, $P5180
  vivi_9012098:
    set fb_tmp_150, $P5179
    repr_defined $I5028, fb_tmp_150
    unless $I5028 goto if899_else2093 
    set $P5181, fb_tmp_150["identifier"]
    set $P5183, $P5181
    goto if899_end2094
  if899_else2093:
    null $P5182
    set $P5183, $P5182
  if899_end2094:
    unless_null $P5183, vivi_9022099
    nqp_get_sc_object $P5184, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5183, $P5184
  vivi_9022099:
    find_dynamic_lex $P5185, "$*PACKAGE"
    unless_null $P5185, fallback2100
    nqp_get_sc_object $P5187, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5186, $P5187
    set fb_tmp_152, $P5186
    repr_defined $I5030, fb_tmp_152
    unless $I5030 goto if903_else2101 
    set $P5188, fb_tmp_152["$PACKAGE"]
    set $P5190, $P5188
    goto if903_end2102
  if903_else2101:
    null $P5189
    set $P5190, $P5189
  if903_end2102:
    unless_null $P5190, vivi_9042103
    nqp_get_sc_object $P5191, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5190, $P5191
  vivi_9042103:
    unless_null $P5190, vivi_9052104
    die "Contextual $*PACKAGE not found"
    box $P5192, "Contextual $*PACKAGE not found"
    set $P5190, $P5192
  vivi_9052104:
    set $P5185, $P5190
  fallback2100:
    $P5159."install_package_symbol"($P5167, $P5183, $P5185)
    find_lex $P5193, "$/"
    unless_null $P5193, fallback2111
    nqp_get_sc_object $P5194, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5193, $P5194
  fallback2111:
    set fb_tmp_154, $P5193
    repr_defined $I5033, fb_tmp_154
    unless $I5033 goto if908_else2109 
    set $P5195, fb_tmp_154["name"]
    set $P5197, $P5195
    goto if908_end2110
  if908_else2109:
    null $P5196
    set $P5197, $P5196
  if908_end2110:
    unless_null $P5197, vivi_9092112
    nqp_get_sc_object $P5198, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5197, $P5198
  vivi_9092112:
    set fb_tmp_153, $P5197
    repr_defined $I5032, fb_tmp_153
    unless $I5032 goto if907_else2107 
    set $P5199, fb_tmp_153["identifier"]
    set $P5201, $P5199
    goto if907_end2108
  if907_else2107:
    null $P5200
    set $P5201, $P5200
  if907_end2108:
    unless_null $P5201, vivi_9102113
    nqp_get_sc_object $P5202, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5201, $P5202
  vivi_9102113:
    set $N5001, $P5201
    set $N5002, 1
    iseq $I5031, $N5001, $N5002
    box $P5236, $I5031
    set $P5235, $P5236
    unless $I5031 goto if906_end2106 
.annotate 'line', 1158
.annotate 'line', 1159
    find_dynamic_lex $P5203, "$*W"
    unless_null $P5203, fallback2114
    nqp_get_sc_object $P5205, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5204, $P5205
    set fb_tmp_155, $P5204
    repr_defined $I5034, fb_tmp_155
    unless $I5034 goto if911_else2115 
    set $P5206, fb_tmp_155["$W"]
    set $P5208, $P5206
    goto if911_end2116
  if911_else2115:
    null $P5207
    set $P5208, $P5207
  if911_end2116:
    unless_null $P5208, vivi_9122117
    nqp_get_sc_object $P5209, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5208, $P5209
  vivi_9122117:
    unless_null $P5208, vivi_9132118
    die "Contextual $*W not found"
    box $P5210, "Contextual $*W not found"
    set $P5208, $P5210
  vivi_9132118:
    set $P5203, $P5208
  fallback2114:
    find_lex $P5211, "$OUTER"
    find_lex $P5212, "$/"
    unless_null $P5212, fallback2125
    nqp_get_sc_object $P5213, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5212, $P5213
  fallback2125:
    set fb_tmp_158, $P5212
    repr_defined $I5037, fb_tmp_158
    unless $I5037 goto if916_else2123 
    set $P5214, fb_tmp_158["name"]
    set $P5216, $P5214
    goto if916_end2124
  if916_else2123:
    null $P5215
    set $P5216, $P5215
  if916_end2124:
    unless_null $P5216, vivi_9172126
    nqp_get_sc_object $P5217, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5216, $P5217
  vivi_9172126:
    set fb_tmp_157, $P5216
    repr_defined $I5036, fb_tmp_157
    unless $I5036 goto if915_else2121 
    set $P5218, fb_tmp_157["identifier"]
    set $P5220, $P5218
    goto if915_end2122
  if915_else2121:
    null $P5219
    set $P5220, $P5219
  if915_end2122:
    unless_null $P5220, vivi_9182127
    nqp_get_sc_object $P5221, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5220, $P5221
  vivi_9182127:
    set fb_tmp_156, $P5220
    repr_defined $I5035, fb_tmp_156
    unless $I5035 goto if914_else2119 
    set $P5222, fb_tmp_156[0]
    set $P5224, $P5222
    goto if914_end2120
  if914_else2119:
    null $P5223
    set $P5224, $P5223
  if914_end2120:
    unless_null $P5224, vivi_9192128
    nqp_get_sc_object $P5225, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5224, $P5225
  vivi_9192128:
    find_dynamic_lex $P5226, "$*PACKAGE"
    unless_null $P5226, fallback2129
    nqp_get_sc_object $P5228, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5227, $P5228
    set fb_tmp_159, $P5227
    repr_defined $I5038, fb_tmp_159
    unless $I5038 goto if920_else2130 
    set $P5229, fb_tmp_159["$PACKAGE"]
    set $P5231, $P5229
    goto if920_end2131
  if920_else2130:
    null $P5230
    set $P5231, $P5230
  if920_end2131:
    unless_null $P5231, vivi_9212132
    nqp_get_sc_object $P5232, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5231, $P5232
  vivi_9212132:
    unless_null $P5231, vivi_9222133
    die "Contextual $*PACKAGE not found"
    box $P5233, "Contextual $*PACKAGE not found"
    set $P5231, $P5233
  vivi_9222133:
    set $P5226, $P5231
  fallback2129:
    $P5234 = $P5203."install_lexical_symbol"($P5211, $P5224, $P5226)
    set $P5235, $P5234
  if906_end2106:
    set $P5307, $P5235
    goto if885_end2070
  if885_else2069:
    find_dynamic_lex $P5237, "$*SCOPE"
    unless_null $P5237, fallback2136
    nqp_get_sc_object $P5239, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5238, $P5239
    set fb_tmp_160, $P5238
    repr_defined $I5040, fb_tmp_160
    unless $I5040 goto if924_else2137 
    set $P5240, fb_tmp_160["$SCOPE"]
    set $P5242, $P5240
    goto if924_end2138
  if924_else2137:
    null $P5241
    set $P5242, $P5241
  if924_end2138:
    unless_null $P5242, vivi_9252139
    nqp_get_sc_object $P5243, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5242, $P5243
  vivi_9252139:
    unless_null $P5242, vivi_9262140
    die "Contextual $*SCOPE not found"
    box $P5244, "Contextual $*SCOPE not found"
    set $P5242, $P5244
  vivi_9262140:
    set $P5237, $P5242
  fallback2136:
    set $S5006, $P5237
    iseq $I5039, $S5006, "my"
    unless $I5039 goto if923_else2134 
.annotate 'line', 1162
    find_lex $P5245, "$/"
    unless_null $P5245, fallback2147
    nqp_get_sc_object $P5246, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5245, $P5246
  fallback2147:
    set fb_tmp_162, $P5245
    repr_defined $I5043, fb_tmp_162
    unless $I5043 goto if929_else2145 
    set $P5247, fb_tmp_162["name"]
    set $P5249, $P5247
    goto if929_end2146
  if929_else2145:
    null $P5248
    set $P5249, $P5248
  if929_end2146:
    unless_null $P5249, vivi_9302148
    nqp_get_sc_object $P5250, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5249, $P5250
  vivi_9302148:
    set fb_tmp_161, $P5249
    repr_defined $I5042, fb_tmp_161
    unless $I5042 goto if928_else2143 
    set $P5251, fb_tmp_161["identifier"]
    set $P5253, $P5251
    goto if928_end2144
  if928_else2143:
    null $P5252
    set $P5253, $P5252
  if928_end2144:
    unless_null $P5253, vivi_9312149
    nqp_get_sc_object $P5254, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5253, $P5254
  vivi_9312149:
    set $N5003, $P5253
    set $N5004, 1
    isne $I5041, $N5003, $N5004
    unless $I5041 goto if927_end2142 
.annotate 'line', 1163
.annotate 'line', 1164
    find_lex $P5255, "$/"
    unless_null $P5255, fallback2152
    nqp_get_sc_object $P5256, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5255, $P5256
  fallback2152:
    set fb_tmp_163, $P5255
    repr_defined $I5044, fb_tmp_163
    unless $I5044 goto if932_else2150 
    set $P5257, fb_tmp_163["name"]
    set $P5259, $P5257
    goto if932_end2151
  if932_else2150:
    null $P5258
    set $P5259, $P5258
  if932_end2151:
    unless_null $P5259, vivi_9332153
    nqp_get_sc_object $P5260, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5259, $P5260
  vivi_9332153:
    $P5261 = $P5259."CURSOR"()
    $P5262 = $P5261."panic"("A my scoped package cannot have a multi-part name yet")
  if927_end2142:
.annotate 'line', 1166
    find_dynamic_lex $P5263, "$*W"
    unless_null $P5263, fallback2154
    nqp_get_sc_object $P5265, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5264, $P5265
    set fb_tmp_164, $P5264
    repr_defined $I5045, fb_tmp_164
    unless $I5045 goto if934_else2155 
    set $P5266, fb_tmp_164["$W"]
    set $P5268, $P5266
    goto if934_end2156
  if934_else2155:
    null $P5267
    set $P5268, $P5267
  if934_end2156:
    unless_null $P5268, vivi_9352157
    nqp_get_sc_object $P5269, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5268, $P5269
  vivi_9352157:
    unless_null $P5268, vivi_9362158
    die "Contextual $*W not found"
    box $P5270, "Contextual $*W not found"
    set $P5268, $P5270
  vivi_9362158:
    set $P5263, $P5268
  fallback2154:
    find_lex $P5271, "$OUTER"
    find_lex $P5272, "$/"
    unless_null $P5272, fallback2165
    nqp_get_sc_object $P5273, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5272, $P5273
  fallback2165:
    set fb_tmp_167, $P5272
    repr_defined $I5048, fb_tmp_167
    unless $I5048 goto if939_else2163 
    set $P5274, fb_tmp_167["name"]
    set $P5276, $P5274
    goto if939_end2164
  if939_else2163:
    null $P5275
    set $P5276, $P5275
  if939_end2164:
    unless_null $P5276, vivi_9402166
    nqp_get_sc_object $P5277, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5276, $P5277
  vivi_9402166:
    set fb_tmp_166, $P5276
    repr_defined $I5047, fb_tmp_166
    unless $I5047 goto if938_else2161 
    set $P5278, fb_tmp_166["identifier"]
    set $P5280, $P5278
    goto if938_end2162
  if938_else2161:
    null $P5279
    set $P5280, $P5279
  if938_end2162:
    unless_null $P5280, vivi_9412167
    nqp_get_sc_object $P5281, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5280, $P5281
  vivi_9412167:
    set fb_tmp_165, $P5280
    repr_defined $I5046, fb_tmp_165
    unless $I5046 goto if937_else2159 
    set $P5282, fb_tmp_165[0]
    set $P5284, $P5282
    goto if937_end2160
  if937_else2159:
    null $P5283
    set $P5284, $P5283
  if937_end2160:
    unless_null $P5284, vivi_9422168
    nqp_get_sc_object $P5285, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5284, $P5285
  vivi_9422168:
    find_dynamic_lex $P5286, "$*PACKAGE"
    unless_null $P5286, fallback2169
    nqp_get_sc_object $P5288, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5287, $P5288
    set fb_tmp_168, $P5287
    repr_defined $I5049, fb_tmp_168
    unless $I5049 goto if943_else2170 
    set $P5289, fb_tmp_168["$PACKAGE"]
    set $P5291, $P5289
    goto if943_end2171
  if943_else2170:
    null $P5290
    set $P5291, $P5290
  if943_end2171:
    unless_null $P5291, vivi_9442172
    nqp_get_sc_object $P5292, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5291, $P5292
  vivi_9442172:
    unless_null $P5291, vivi_9452173
    die "Contextual $*PACKAGE not found"
    box $P5293, "Contextual $*PACKAGE not found"
    set $P5291, $P5293
  vivi_9452173:
    set $P5286, $P5291
  fallback2169:
    $P5294 = $P5263."install_lexical_symbol"($P5271, $P5284, $P5286)
    set $P5306, $P5294
    goto if923_end2135
  if923_else2134:
.annotate 'line', 1168
.annotate 'line', 1169
    find_lex $P5295, "$/"
    $P5296 = $P5295."CURSOR"()
    find_dynamic_lex $P5297, "$*SCOPE"
    unless_null $P5297, fallback2174
    nqp_get_sc_object $P5299, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5298, $P5299
    set fb_tmp_169, $P5298
    repr_defined $I5050, fb_tmp_169
    unless $I5050 goto if946_else2175 
    set $P5300, fb_tmp_169["$SCOPE"]
    set $P5302, $P5300
    goto if946_end2176
  if946_else2175:
    null $P5301
    set $P5302, $P5301
  if946_end2176:
    unless_null $P5302, vivi_9472177
    nqp_get_sc_object $P5303, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5302, $P5303
  vivi_9472177:
    unless_null $P5302, vivi_9482178
    die "Contextual $*SCOPE not found"
    box $P5304, "Contextual $*SCOPE not found"
    set $P5302, $P5304
  vivi_9482178:
    set $P5297, $P5302
  fallback2174:
    set $S5008, $P5297
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5305 = $P5296."panic"($S5007)
    set $P5306, $P5305
  if923_end2135:
    set $P5307, $P5306
  if885_end2070:
    .return ($P5307) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_115_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1184
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx980_start
    .local string rx980_tgt
    .local int rx980_pos
    .local int rx980_off
    .local int rx980_eos
    .local int rx980_rep
    .local pmc rx980_cur
    .local pmc rx980_curclass
    .local pmc rx980_bstack
    .local pmc rx980_cstack
    rx980_start = self."!cursor_start_all"()
    set rx980_cur, rx980_start[0]
    set rx980_tgt, rx980_start[1]
    set rx980_pos, rx980_start[2]
    set rx980_curclass, rx980_start[3]
    set rx980_bstack, rx980_start[4]
    set $I19, rx980_start[5]
    store_lex unicode:"$\x{a2}", rx980_cur
    length rx980_eos, rx980_tgt
    eq $I19, 1, rx980_restart2245
    gt rx980_pos, rx980_eos, rx980_fail2246
    repr_get_attr_int $I11, self, rx980_curclass, "$!from"
    ne $I11, -1, rxscan981_done2252
    goto rxscan981_scan2251
  rxscan981_loop2250:
    inc rx980_pos
    gt rx980_pos, rx980_eos, rx980_fail2246
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!from", rx980_pos
  rxscan981_scan2251:
    nqp_rxmark rx980_bstack, rxscan981_loop2250, rx980_pos, 0
  rxscan981_done2252:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    store_lex unicode:"$\x{a2}", rx980_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    store_lex unicode:"$\x{a2}", rx980_cur
    box $P5004, "variable"
    set $P102, $P5004
    nqp_rxmark rx980_bstack, rxquantr982_done2254, -1, 0
  rxquantr982_loop2253:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."variable"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
    goto rxsubrule983_pass2255
  rxsubrule983_back2256:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
  rxsubrule983_pass2255:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "variable")
    set_addr $I11, rxsubrule983_back2256
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
    goto rxsubrule984_pass2257
  rxsubrule984_back2258:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
  rxsubrule984_pass2257:
    rx980_cstack = rx980_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule984_back2258
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxpeek $I19, rx980_bstack, rxquantr982_done2254
    inc $I19
    inc $I19
    set rx980_rep, rx980_bstack[$I19]
    nqp_rxcommit rx980_bstack, rxquantr982_done2254
    inc rx980_rep
    nqp_rxmark rx980_bstack, rxquantr982_done2254, rx980_pos, rx980_rep
    add $I11, rx980_pos, 1
    gt $I11, rx980_eos, rx980_fail2246
    substr $S10, rx980_tgt, rx980_pos, 1
    ne $S10, ucs4:",", rx980_fail2246
    add rx980_pos, 1
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
    goto rxsubrule985_pass2259
  rxsubrule985_back2260:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
  rxsubrule985_pass2259:
    rx980_cstack = rx980_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule985_back2260
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    goto rxquantr982_loop2253
  rxquantr982_done2254:
    rx980_cur."!cursor_pass"(rx980_pos, "role_params", 'backtrack'=>1)
    .return (rx980_cur)
  rx980_restart2245:
    repr_get_attr_obj rx980_cstack, rx980_cur, rx980_curclass, "$!cstack"
  rx980_fail2246:
    unless rx980_bstack, rx980_done2244
    pop $I19, rx980_bstack
    if_null rx980_cstack, rx980_cstack_done2249
    unless rx980_cstack, rx980_cstack_done2249
    dec $I19
    set $P11, rx980_cstack[$I19]
  rx980_cstack_done2249:
    pop rx980_rep, rx980_bstack
    pop rx980_pos, rx980_bstack
    pop $I19, rx980_bstack
    lt rx980_pos, -1, rx980_done2244
    lt rx980_pos, 0, rx980_fail2246
    eq $I19, 0, rx980_fail2246
    nqp_islist $I20, rx980_cstack
    unless $I20, rx980_jump2247
    elements $I18, rx980_bstack
    le $I18, 0, rx980_cut2248
    dec $I18
    set $I18, rx980_bstack[$I18]
  rx980_cut2248:
    assign rx980_cstack, $I18
  rx980_jump2247:
    jump $I19
  rx980_done2244:
    rx980_cur."!cursor_fail"()
    .return (rx980_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_116_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1190
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_117_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1191
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx986_start
    .local string rx986_tgt
    .local int rx986_pos
    .local int rx986_off
    .local int rx986_eos
    .local int rx986_rep
    .local pmc rx986_cur
    .local pmc rx986_curclass
    .local pmc rx986_bstack
    .local pmc rx986_cstack
    rx986_start = self."!cursor_start_all"()
    set rx986_cur, rx986_start[0]
    set rx986_tgt, rx986_start[1]
    set rx986_pos, rx986_start[2]
    set rx986_curclass, rx986_start[3]
    set rx986_bstack, rx986_start[4]
    set $I19, rx986_start[5]
    store_lex unicode:"$\x{a2}", rx986_cur
    length rx986_eos, rx986_tgt
    eq $I19, 1, rx986_restart2263
    gt rx986_pos, rx986_eos, rx986_fail2264
    repr_get_attr_int $I11, self, rx986_curclass, "$!from"
    ne $I11, -1, rxscan987_done2270
    goto rxscan987_scan2269
  rxscan987_loop2268:
    inc rx986_pos
    gt rx986_pos, rx986_eos, rx986_fail2264
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!from", rx986_pos
  rxscan987_scan2269:
    nqp_rxmark rx986_bstack, rxscan987_loop2268, rx986_pos, 0
  rxscan987_done2270:
    nqp_rxmark rx986_bstack, rxcap988_fail2272, rx986_pos, 0
    add $I11, rx986_pos, 2
    gt $I11, rx986_eos, rx986_fail2264
    substr $S10, rx986_tgt, rx986_pos, 2
    ne $S10, ucs4:"my", rx986_fail2264
    add rx986_pos, 2
    nqp_rxpeek $I19, rx986_bstack, rxcap988_fail2272
    inc $I19
    set $I11, rx986_bstack[$I19]
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx986_pos)
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "sym")
    goto rxcap988_done2271
  rxcap988_fail2272:
    goto rx986_fail2264
  rxcap988_done2271:
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."ws"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
    goto rxsubrule989_pass2273
  rxsubrule989_back2274:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
  rxsubrule989_pass2273:
    rx986_cstack = rx986_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule989_back2274
    push rx986_bstack, $I11
    push rx986_bstack, 0
    push rx986_bstack, rx986_pos
    elements $I11, rx986_cstack
    push rx986_bstack, $I11
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
    goto rxsubrule990_pass2275
  rxsubrule990_back2276:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
  rxsubrule990_pass2275:
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule990_back2276
    push rx986_bstack, $I11
    push rx986_bstack, 0
    push rx986_bstack, rx986_pos
    elements $I11, rx986_cstack
    push rx986_bstack, $I11
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."ws"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
    goto rxsubrule991_pass2277
  rxsubrule991_back2278:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
  rxsubrule991_pass2277:
    rx986_cstack = rx986_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule991_back2278
    push rx986_bstack, $I11
    push rx986_bstack, 0
    push rx986_bstack, rx986_pos
    elements $I11, rx986_cstack
    push rx986_bstack, $I11
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    rx986_cur."!cursor_pass"(rx986_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx986_cur)
  rx986_restart2263:
    repr_get_attr_obj rx986_cstack, rx986_cur, rx986_curclass, "$!cstack"
  rx986_fail2264:
    unless rx986_bstack, rx986_done2262
    pop $I19, rx986_bstack
    if_null rx986_cstack, rx986_cstack_done2267
    unless rx986_cstack, rx986_cstack_done2267
    dec $I19
    set $P11, rx986_cstack[$I19]
  rx986_cstack_done2267:
    pop rx986_rep, rx986_bstack
    pop rx986_pos, rx986_bstack
    pop $I19, rx986_bstack
    lt rx986_pos, -1, rx986_done2262
    lt rx986_pos, 0, rx986_fail2264
    eq $I19, 0, rx986_fail2264
    nqp_islist $I20, rx986_cstack
    unless $I20, rx986_jump2265
    elements $I18, rx986_bstack
    le $I18, 0, rx986_cut2266
    dec $I18
    set $I18, rx986_bstack[$I18]
  rx986_cut2266:
    assign rx986_cstack, $I18
  rx986_jump2265:
    jump $I19
  rx986_done2262:
    rx986_cur."!cursor_fail"()
    .return (rx986_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_118_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1192
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx992_start
    .local string rx992_tgt
    .local int rx992_pos
    .local int rx992_off
    .local int rx992_eos
    .local int rx992_rep
    .local pmc rx992_cur
    .local pmc rx992_curclass
    .local pmc rx992_bstack
    .local pmc rx992_cstack
    rx992_start = self."!cursor_start_all"()
    set rx992_cur, rx992_start[0]
    set rx992_tgt, rx992_start[1]
    set rx992_pos, rx992_start[2]
    set rx992_curclass, rx992_start[3]
    set rx992_bstack, rx992_start[4]
    set $I19, rx992_start[5]
    store_lex unicode:"$\x{a2}", rx992_cur
    length rx992_eos, rx992_tgt
    eq $I19, 1, rx992_restart2281
    gt rx992_pos, rx992_eos, rx992_fail2282
    repr_get_attr_int $I11, self, rx992_curclass, "$!from"
    ne $I11, -1, rxscan993_done2288
    goto rxscan993_scan2287
  rxscan993_loop2286:
    inc rx992_pos
    gt rx992_pos, rx992_eos, rx992_fail2282
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!from", rx992_pos
  rxscan993_scan2287:
    nqp_rxmark rx992_bstack, rxscan993_loop2286, rx992_pos, 0
  rxscan993_done2288:
    nqp_rxmark rx992_bstack, rxcap994_fail2290, rx992_pos, 0
    add $I11, rx992_pos, 3
    gt $I11, rx992_eos, rx992_fail2282
    substr $S10, rx992_tgt, rx992_pos, 3
    ne $S10, ucs4:"our", rx992_fail2282
    add rx992_pos, 3
    nqp_rxpeek $I19, rx992_bstack, rxcap994_fail2290
    inc $I19
    set $I11, rx992_bstack[$I19]
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx992_pos)
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "sym")
    goto rxcap994_done2289
  rxcap994_fail2290:
    goto rx992_fail2282
  rxcap994_done2289:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."ws"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
    goto rxsubrule995_pass2291
  rxsubrule995_back2292:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
  rxsubrule995_pass2291:
    rx992_cstack = rx992_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule995_back2292
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
    goto rxsubrule996_pass2293
  rxsubrule996_back2294:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
  rxsubrule996_pass2293:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule996_back2294
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."ws"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
    goto rxsubrule997_pass2295
  rxsubrule997_back2296:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
  rxsubrule997_pass2295:
    rx992_cstack = rx992_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule997_back2296
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    rx992_cur."!cursor_pass"(rx992_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx992_cur)
  rx992_restart2281:
    repr_get_attr_obj rx992_cstack, rx992_cur, rx992_curclass, "$!cstack"
  rx992_fail2282:
    unless rx992_bstack, rx992_done2280
    pop $I19, rx992_bstack
    if_null rx992_cstack, rx992_cstack_done2285
    unless rx992_cstack, rx992_cstack_done2285
    dec $I19
    set $P11, rx992_cstack[$I19]
  rx992_cstack_done2285:
    pop rx992_rep, rx992_bstack
    pop rx992_pos, rx992_bstack
    pop $I19, rx992_bstack
    lt rx992_pos, -1, rx992_done2280
    lt rx992_pos, 0, rx992_fail2282
    eq $I19, 0, rx992_fail2282
    nqp_islist $I20, rx992_cstack
    unless $I20, rx992_jump2283
    elements $I18, rx992_bstack
    le $I18, 0, rx992_cut2284
    dec $I18
    set $I18, rx992_bstack[$I18]
  rx992_cut2284:
    assign rx992_cstack, $I18
  rx992_jump2283:
    jump $I19
  rx992_done2280:
    rx992_cur."!cursor_fail"()
    .return (rx992_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_119_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1193
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx998_start
    .local string rx998_tgt
    .local int rx998_pos
    .local int rx998_off
    .local int rx998_eos
    .local int rx998_rep
    .local pmc rx998_cur
    .local pmc rx998_curclass
    .local pmc rx998_bstack
    .local pmc rx998_cstack
    rx998_start = self."!cursor_start_all"()
    set rx998_cur, rx998_start[0]
    set rx998_tgt, rx998_start[1]
    set rx998_pos, rx998_start[2]
    set rx998_curclass, rx998_start[3]
    set rx998_bstack, rx998_start[4]
    set $I19, rx998_start[5]
    store_lex unicode:"$\x{a2}", rx998_cur
    length rx998_eos, rx998_tgt
    eq $I19, 1, rx998_restart2299
    gt rx998_pos, rx998_eos, rx998_fail2300
    repr_get_attr_int $I11, self, rx998_curclass, "$!from"
    ne $I11, -1, rxscan999_done2306
    goto rxscan999_scan2305
  rxscan999_loop2304:
    inc rx998_pos
    gt rx998_pos, rx998_eos, rx998_fail2300
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!from", rx998_pos
  rxscan999_scan2305:
    nqp_rxmark rx998_bstack, rxscan999_loop2304, rx998_pos, 0
  rxscan999_done2306:
    nqp_rxmark rx998_bstack, rxcap1000_fail2308, rx998_pos, 0
    add $I11, rx998_pos, 3
    gt $I11, rx998_eos, rx998_fail2300
    substr $S10, rx998_tgt, rx998_pos, 3
    ne $S10, ucs4:"has", rx998_fail2300
    add rx998_pos, 3
    nqp_rxpeek $I19, rx998_bstack, rxcap1000_fail2308
    inc $I19
    set $I11, rx998_bstack[$I19]
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx998_pos)
    rx998_cstack = rx998_cur."!cursor_capture"($P11, "sym")
    goto rxcap1000_done2307
  rxcap1000_fail2308:
    goto rx998_fail2300
  rxcap1000_done2307:
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."ws"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
    goto rxsubrule1001_pass2309
  rxsubrule1001_back2310:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
  rxsubrule1001_pass2309:
    rx998_cstack = rx998_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1001_back2310
    push rx998_bstack, $I11
    push rx998_bstack, 0
    push rx998_bstack, rx998_pos
    elements $I11, rx998_cstack
    push rx998_bstack, $I11
    repr_get_attr_int rx998_pos, $P11, rx998_curclass, "$!pos"
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
    goto rxsubrule1002_pass2311
  rxsubrule1002_back2312:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
  rxsubrule1002_pass2311:
    rx998_cstack = rx998_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule1002_back2312
    push rx998_bstack, $I11
    push rx998_bstack, 0
    push rx998_bstack, rx998_pos
    elements $I11, rx998_cstack
    push rx998_bstack, $I11
    repr_get_attr_int rx998_pos, $P11, rx998_curclass, "$!pos"
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."ws"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
    goto rxsubrule1003_pass2313
  rxsubrule1003_back2314:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
  rxsubrule1003_pass2313:
    rx998_cstack = rx998_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1003_back2314
    push rx998_bstack, $I11
    push rx998_bstack, 0
    push rx998_bstack, rx998_pos
    elements $I11, rx998_cstack
    push rx998_bstack, $I11
    repr_get_attr_int rx998_pos, $P11, rx998_curclass, "$!pos"
    rx998_cur."!cursor_pass"(rx998_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx998_cur)
  rx998_restart2299:
    repr_get_attr_obj rx998_cstack, rx998_cur, rx998_curclass, "$!cstack"
  rx998_fail2300:
    unless rx998_bstack, rx998_done2298
    pop $I19, rx998_bstack
    if_null rx998_cstack, rx998_cstack_done2303
    unless rx998_cstack, rx998_cstack_done2303
    dec $I19
    set $P11, rx998_cstack[$I19]
  rx998_cstack_done2303:
    pop rx998_rep, rx998_bstack
    pop rx998_pos, rx998_bstack
    pop $I19, rx998_bstack
    lt rx998_pos, -1, rx998_done2298
    lt rx998_pos, 0, rx998_fail2300
    eq $I19, 0, rx998_fail2300
    nqp_islist $I20, rx998_cstack
    unless $I20, rx998_jump2301
    elements $I18, rx998_bstack
    le $I18, 0, rx998_cut2302
    dec $I18
    set $I18, rx998_bstack[$I18]
  rx998_cut2302:
    assign rx998_cstack, $I18
  rx998_jump2301:
    jump $I19
  rx998_done2298:
    rx998_cur."!cursor_fail"()
    .return (rx998_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_120_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1195
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1004_start
    .local string rx1004_tgt
    .local int rx1004_pos
    .local int rx1004_off
    .local int rx1004_eos
    .local int rx1004_rep
    .local pmc rx1004_cur
    .local pmc rx1004_curclass
    .local pmc rx1004_bstack
    .local pmc rx1004_cstack
    rx1004_start = self."!cursor_start_all"()
    set rx1004_cur, rx1004_start[0]
    set rx1004_tgt, rx1004_start[1]
    set rx1004_pos, rx1004_start[2]
    set rx1004_curclass, rx1004_start[3]
    set rx1004_bstack, rx1004_start[4]
    set $I19, rx1004_start[5]
    store_lex unicode:"$\x{a2}", rx1004_cur
    length rx1004_eos, rx1004_tgt
    eq $I19, 1, rx1004_restart2317
    gt rx1004_pos, rx1004_eos, rx1004_fail2318
    repr_get_attr_int $I11, self, rx1004_curclass, "$!from"
    ne $I11, -1, rxscan1005_done2324
    goto rxscan1005_scan2323
  rxscan1005_loop2322:
    inc rx1004_pos
    gt rx1004_pos, rx1004_eos, rx1004_fail2318
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!from", rx1004_pos
  rxscan1005_scan2323:
    nqp_rxmark rx1004_bstack, rxscan1005_loop2322, rx1004_pos, 0
  rxscan1005_done2324:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1006_02326
    nqp_push_label $P11, alt1006_12328
    nqp_push_label $P11, alt1006_22330
    nqp_rxmark rx1004_bstack, alt1006_end2325, -1, 0
    rx1004_cur."!alt"(rx1004_pos, "alt_nfa__21_1383915018.59793", $P11)
    goto rx1004_fail2318
  alt1006_02326:
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!pos", rx1004_pos
    $P11 = rx1004_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1004_curclass, "$!pos"
    lt $I11, 0, rx1004_fail2318
    nqp_rxmark rx1004_bstack, rxsubrule1007_pass2327, -1, 0
  rxsubrule1007_pass2327:
    rx1004_cstack = rx1004_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1004_pos, $P11, rx1004_curclass, "$!pos"
    goto alt1006_end2325
  alt1006_12328:
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!pos", rx1004_pos
    $P11 = rx1004_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx1004_curclass, "$!pos"
    lt $I11, 0, rx1004_fail2318
    nqp_rxmark rx1004_bstack, rxsubrule1008_pass2329, -1, 0
  rxsubrule1008_pass2329:
    rx1004_cstack = rx1004_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx1004_pos, $P11, rx1004_curclass, "$!pos"
    goto alt1006_end2325
  alt1006_22330:
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!pos", rx1004_pos
    $P11 = rx1004_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx1004_curclass, "$!pos"
    lt $I11, 0, rx1004_fail2318
    nqp_rxmark rx1004_bstack, rxsubrule1009_pass2331, -1, 0
  rxsubrule1009_pass2331:
    rx1004_cstack = rx1004_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx1004_pos, $P11, rx1004_curclass, "$!pos"
    goto alt1006_end2325
  alt1006_end2325:
    rx1004_cur."!cursor_pass"(rx1004_pos, "scoped", 'backtrack'=>1)
    .return (rx1004_cur)
  rx1004_restart2317:
    repr_get_attr_obj rx1004_cstack, rx1004_cur, rx1004_curclass, "$!cstack"
  rx1004_fail2318:
    unless rx1004_bstack, rx1004_done2316
    pop $I19, rx1004_bstack
    if_null rx1004_cstack, rx1004_cstack_done2321
    unless rx1004_cstack, rx1004_cstack_done2321
    dec $I19
    set $P11, rx1004_cstack[$I19]
  rx1004_cstack_done2321:
    pop rx1004_rep, rx1004_bstack
    pop rx1004_pos, rx1004_bstack
    pop $I19, rx1004_bstack
    lt rx1004_pos, -1, rx1004_done2316
    lt rx1004_pos, 0, rx1004_fail2318
    eq $I19, 0, rx1004_fail2318
    nqp_islist $I20, rx1004_cstack
    unless $I20, rx1004_jump2319
    elements $I18, rx1004_bstack
    le $I18, 0, rx1004_cut2320
    dec $I18
    set $I18, rx1004_bstack[$I18]
  rx1004_cut2320:
    assign rx1004_cstack, $I18
  rx1004_jump2319:
    jump $I19
  rx1004_done2316:
    rx1004_cur."!cursor_fail"()
    .return (rx1004_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_121_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1201
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_427_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1010_start
    .local string rx1010_tgt
    .local int rx1010_pos
    .local int rx1010_off
    .local int rx1010_eos
    .local int rx1010_rep
    .local pmc rx1010_cur
    .local pmc rx1010_curclass
    .local pmc rx1010_bstack
    .local pmc rx1010_cstack
    rx1010_start = self."!cursor_start_all"()
    set rx1010_cur, rx1010_start[0]
    set rx1010_tgt, rx1010_start[1]
    set rx1010_pos, rx1010_start[2]
    set rx1010_curclass, rx1010_start[3]
    set rx1010_bstack, rx1010_start[4]
    set $I19, rx1010_start[5]
    store_lex unicode:"$\x{a2}", rx1010_cur
    length rx1010_eos, rx1010_tgt
    eq $I19, 1, rx1010_restart2334
    gt rx1010_pos, rx1010_eos, rx1010_fail2335
    repr_get_attr_int $I11, self, rx1010_curclass, "$!from"
    ne $I11, -1, rxscan1011_done2341
    goto rxscan1011_scan2340
  rxscan1011_loop2339:
    inc rx1010_pos
    gt rx1010_pos, rx1010_eos, rx1010_fail2335
    repr_bind_attr_int rx1010_cur, rx1010_curclass, "$!from", rx1010_pos
  rxscan1011_scan2340:
    nqp_rxmark rx1010_bstack, rxscan1011_loop2339, rx1010_pos, 0
  rxscan1011_done2341:
    repr_bind_attr_int rx1010_cur, rx1010_curclass, "$!pos", rx1010_pos
    $P11 = rx1010_cur."name"()
    repr_get_attr_int $I11, $P11, rx1010_curclass, "$!pos"
    lt $I11, 0, rx1010_fail2335
    nqp_rxmark rx1010_bstack, rxsubrule1012_pass2342, -1, 0
  rxsubrule1012_pass2342:
    rx1010_cstack = rx1010_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1010_pos, $P11, rx1010_curclass, "$!pos"
    repr_bind_attr_int rx1010_cur, rx1010_curclass, "$!pos", rx1010_pos
    store_lex unicode:"$\x{a2}", rx1010_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_427_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1010_fail2335
    rx1010_cur."!cursor_pass"(rx1010_pos, "typename", 'backtrack'=>1)
    .return (rx1010_cur)
  rx1010_restart2334:
    repr_get_attr_obj rx1010_cstack, rx1010_cur, rx1010_curclass, "$!cstack"
  rx1010_fail2335:
    unless rx1010_bstack, rx1010_done2333
    pop $I19, rx1010_bstack
    if_null rx1010_cstack, rx1010_cstack_done2338
    unless rx1010_cstack, rx1010_cstack_done2338
    dec $I19
    set $P11, rx1010_cstack[$I19]
  rx1010_cstack_done2338:
    pop rx1010_rep, rx1010_bstack
    pop rx1010_pos, rx1010_bstack
    pop $I19, rx1010_bstack
    lt rx1010_pos, -1, rx1010_done2333
    lt rx1010_pos, 0, rx1010_fail2335
    eq $I19, 0, rx1010_fail2335
    nqp_islist $I20, rx1010_cstack
    unless $I20, rx1010_jump2336
    elements $I18, rx1010_bstack
    le $I18, 0, rx1010_cut2337
    dec $I18
    set $I18, rx1010_bstack[$I18]
  rx1010_cut2337:
    assign rx1010_cstack, $I18
  rx1010_jump2336:
    jump $I19
  rx1010_done2333:
    rx1010_cur."!cursor_fail"()
    .return (rx1010_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1383915013.33774") :anon :lex :outer("cuid_121_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1203
    .local pmc fb_tmp_170 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2343
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_170, $P5002
    repr_defined $I5001, fb_tmp_170
    unless $I5001 goto if1013_else2344 
    set $P5004, fb_tmp_170["$W"]
    set $P5006, $P5004
    goto if1013_end2345
  if1013_else2344:
    null $P5005
    set $P5006, $P5005
  if1013_end2345:
    unless_null $P5006, vivi_10142346
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_10142346:
    unless_null $P5006, vivi_10152347
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_10152347:
    set $P5001, $P5006
  fallback2343:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2352
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  fallback2352:
    set fb_tmp_172, $P5010
    repr_defined $I5003, fb_tmp_172
    unless $I5003 goto if1017_else2350 
    set $P5012, fb_tmp_172["name"]
    set $P5014, $P5012
    goto if1017_end2351
  if1017_else2350:
    null $P5013
    set $P5014, $P5013
  if1017_end2351:
    unless_null $P5014, vivi_10182353
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_10182353:
    set fb_tmp_171, $P5014
    repr_defined $I5002, fb_tmp_171
    unless $I5002 goto if1016_else2348 
    set $P5016, fb_tmp_171["identifier"]
    set $P5018, $P5016
    goto if1016_end2349
  if1016_else2348:
    null $P5017
    set $P5018, $P5017
  if1016_end2349:
    unless_null $P5018, vivi_10192354
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_10192354:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_122_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1206
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1020_start
    .local string rx1020_tgt
    .local int rx1020_pos
    .local int rx1020_off
    .local int rx1020_eos
    .local int rx1020_rep
    .local pmc rx1020_cur
    .local pmc rx1020_curclass
    .local pmc rx1020_bstack
    .local pmc rx1020_cstack
    rx1020_start = self."!cursor_start_all"()
    set rx1020_cur, rx1020_start[0]
    set rx1020_tgt, rx1020_start[1]
    set rx1020_pos, rx1020_start[2]
    set rx1020_curclass, rx1020_start[3]
    set rx1020_bstack, rx1020_start[4]
    set $I19, rx1020_start[5]
    store_lex unicode:"$\x{a2}", rx1020_cur
    length rx1020_eos, rx1020_tgt
    eq $I19, 1, rx1020_restart2357
    gt rx1020_pos, rx1020_eos, rx1020_fail2358
    repr_get_attr_int $I11, self, rx1020_curclass, "$!from"
    ne $I11, -1, rxscan1021_done2364
    goto rxscan1021_scan2363
  rxscan1021_loop2362:
    inc rx1020_pos
    gt rx1020_pos, rx1020_eos, rx1020_fail2358
    repr_bind_attr_int rx1020_cur, rx1020_curclass, "$!from", rx1020_pos
  rxscan1021_scan2363:
    nqp_rxmark rx1020_bstack, rxscan1021_loop2362, rx1020_pos, 0
  rxscan1021_done2364:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1022_02366
    nqp_push_label $P11, alt1022_12368
    nqp_rxmark rx1020_bstack, alt1022_end2365, -1, 0
    rx1020_cur."!alt"(rx1020_pos, "alt_nfa__22_1383915018.62546", $P11)
    goto rx1020_fail2358
  alt1022_02366:
    repr_bind_attr_int rx1020_cur, rx1020_curclass, "$!pos", rx1020_pos
    $P11 = rx1020_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1020_curclass, "$!pos"
    lt $I11, 0, rx1020_fail2358
    nqp_rxmark rx1020_bstack, rxsubrule1023_pass2367, -1, 0
  rxsubrule1023_pass2367:
    rx1020_cstack = rx1020_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1020_pos, $P11, rx1020_curclass, "$!pos"
    goto alt1022_end2365
  alt1022_12368:
    repr_bind_attr_int rx1020_cur, rx1020_curclass, "$!pos", rx1020_pos
    $P11 = rx1020_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1020_curclass, "$!pos"
    lt $I11, 0, rx1020_fail2358
    nqp_rxmark rx1020_bstack, rxsubrule1024_pass2369, -1, 0
  rxsubrule1024_pass2369:
    rx1020_cstack = rx1020_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1020_pos, $P11, rx1020_curclass, "$!pos"
    goto alt1022_end2365
  alt1022_end2365:
    rx1020_cur."!cursor_pass"(rx1020_pos, "declarator", 'backtrack'=>1)
    .return (rx1020_cur)
  rx1020_restart2357:
    repr_get_attr_obj rx1020_cstack, rx1020_cur, rx1020_curclass, "$!cstack"
  rx1020_fail2358:
    unless rx1020_bstack, rx1020_done2356
    pop $I19, rx1020_bstack
    if_null rx1020_cstack, rx1020_cstack_done2361
    unless rx1020_cstack, rx1020_cstack_done2361
    dec $I19
    set $P11, rx1020_cstack[$I19]
  rx1020_cstack_done2361:
    pop rx1020_rep, rx1020_bstack
    pop rx1020_pos, rx1020_bstack
    pop $I19, rx1020_bstack
    lt rx1020_pos, -1, rx1020_done2356
    lt rx1020_pos, 0, rx1020_fail2358
    eq $I19, 0, rx1020_fail2358
    nqp_islist $I20, rx1020_cstack
    unless $I20, rx1020_jump2359
    elements $I18, rx1020_bstack
    le $I18, 0, rx1020_cut2360
    dec $I18
    set $I18, rx1020_bstack[$I18]
  rx1020_cut2360:
    assign rx1020_cstack, $I18
  rx1020_jump2359:
    jump $I19
  rx1020_done2356:
    rx1020_cur."!cursor_fail"()
    .return (rx1020_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_123_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1211
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_428_1383915013.33774' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1025_start
    .local string rx1025_tgt
    .local int rx1025_pos
    .local int rx1025_off
    .local int rx1025_eos
    .local int rx1025_rep
    .local pmc rx1025_cur
    .local pmc rx1025_curclass
    .local pmc rx1025_bstack
    .local pmc rx1025_cstack
    rx1025_start = self."!cursor_start_all"()
    set rx1025_cur, rx1025_start[0]
    set rx1025_tgt, rx1025_start[1]
    set rx1025_pos, rx1025_start[2]
    set rx1025_curclass, rx1025_start[3]
    set rx1025_bstack, rx1025_start[4]
    set $I19, rx1025_start[5]
    store_lex unicode:"$\x{a2}", rx1025_cur
    length rx1025_eos, rx1025_tgt
    eq $I19, 1, rx1025_restart2372
    gt rx1025_pos, rx1025_eos, rx1025_fail2373
    repr_get_attr_int $I11, self, rx1025_curclass, "$!from"
    ne $I11, -1, rxscan1026_done2379
    goto rxscan1026_scan2378
  rxscan1026_loop2377:
    inc rx1025_pos
    gt rx1025_pos, rx1025_eos, rx1025_fail2373
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!from", rx1025_pos
  rxscan1026_scan2378:
    nqp_rxmark rx1025_bstack, rxscan1026_loop2377, rx1025_pos, 0
  rxscan1026_done2379:
    nqp_rxmark rx1025_bstack, rxquantg1027_done2381, rx1025_pos, 0
  rxquantg1027_loop2380:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1028_pass2382
  rxsubrule1028_back2383:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1028_pass2382:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1028_back2383
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
  rxquantg1027_done2381:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1029_pass2384
  rxsubrule1029_back2385:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1029_pass2384:
    rx1025_cstack = rx1025_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1029_back2385
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    store_lex unicode:"$\x{a2}", rx1025_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1030_pass2386
  rxsubrule1030_back2387:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1030_pass2386:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "variable")
    set_addr $I11, rxsubrule1030_back2387
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1031_pass2388
  rxsubrule1031_back2389:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1031_pass2388:
    rx1025_cstack = rx1025_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1031_back2389
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    store_lex unicode:"$\x{a2}", rx1025_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_428_1383915013.33774' 
    capture_lex $P5004
    $P5005 = $P5004()
    nqp_rxmark rx1025_bstack, rxquantg1032_done2391, rx1025_pos, 0
  rxquantg1032_loop2390:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1033_pass2392
  rxsubrule1033_back2393:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1033_pass2392:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1033_back2393
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    nqp_rxmark rx1025_bstack, rxquantg1032_done2391, rx1025_pos, rx1025_rep
    goto rxquantg1032_loop2390
  rxquantg1032_done2391:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1034_pass2394
  rxsubrule1034_back2395:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1034_pass2394:
    rx1025_cstack = rx1025_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1034_back2395
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    rx1025_cur."!cursor_pass"(rx1025_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1025_cur)
  rx1025_restart2372:
    repr_get_attr_obj rx1025_cstack, rx1025_cur, rx1025_curclass, "$!cstack"
  rx1025_fail2373:
    unless rx1025_bstack, rx1025_done2371
    pop $I19, rx1025_bstack
    if_null rx1025_cstack, rx1025_cstack_done2376
    unless rx1025_cstack, rx1025_cstack_done2376
    dec $I19
    set $P11, rx1025_cstack[$I19]
  rx1025_cstack_done2376:
    pop rx1025_rep, rx1025_bstack
    pop rx1025_pos, rx1025_bstack
    pop $I19, rx1025_bstack
    lt rx1025_pos, -1, rx1025_done2371
    lt rx1025_pos, 0, rx1025_fail2373
    eq $I19, 0, rx1025_fail2373
    nqp_islist $I20, rx1025_cstack
    unless $I20, rx1025_jump2374
    elements $I18, rx1025_bstack
    le $I18, 0, rx1025_cut2375
    dec $I18
    set $I18, rx1025_bstack[$I18]
  rx1025_cut2375:
    assign rx1025_cstack, $I18
  rx1025_jump2374:
    jump $I19
  rx1025_done2371:
    rx1025_cur."!cursor_fail"()
    .return (rx1025_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1383915013.33774") :anon :lex :outer("cuid_123_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1215

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_124_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1219
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_125_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1220
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1035_start
    .local string rx1035_tgt
    .local int rx1035_pos
    .local int rx1035_off
    .local int rx1035_eos
    .local int rx1035_rep
    .local pmc rx1035_cur
    .local pmc rx1035_curclass
    .local pmc rx1035_bstack
    .local pmc rx1035_cstack
    rx1035_start = self."!cursor_start_all"()
    set rx1035_cur, rx1035_start[0]
    set rx1035_tgt, rx1035_start[1]
    set rx1035_pos, rx1035_start[2]
    set rx1035_curclass, rx1035_start[3]
    set rx1035_bstack, rx1035_start[4]
    set $I19, rx1035_start[5]
    store_lex unicode:"$\x{a2}", rx1035_cur
    length rx1035_eos, rx1035_tgt
    eq $I19, 1, rx1035_restart2398
    gt rx1035_pos, rx1035_eos, rx1035_fail2399
    repr_get_attr_int $I11, self, rx1035_curclass, "$!from"
    ne $I11, -1, rxscan1036_done2405
    goto rxscan1036_scan2404
  rxscan1036_loop2403:
    inc rx1035_pos
    gt rx1035_pos, rx1035_eos, rx1035_fail2399
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!from", rx1035_pos
  rxscan1036_scan2404:
    nqp_rxmark rx1035_bstack, rxscan1036_loop2403, rx1035_pos, 0
  rxscan1036_done2405:
    nqp_rxmark rx1035_bstack, rxcap1037_fail2407, rx1035_pos, 0
    add $I11, rx1035_pos, 3
    gt $I11, rx1035_eos, rx1035_fail2399
    substr $S10, rx1035_tgt, rx1035_pos, 3
    ne $S10, ucs4:"sub", rx1035_fail2399
    add rx1035_pos, 3
    nqp_rxpeek $I19, rx1035_bstack, rxcap1037_fail2407
    inc $I19
    set $I11, rx1035_bstack[$I19]
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1035_pos)
    rx1035_cstack = rx1035_cur."!cursor_capture"($P11, "sym")
    goto rxcap1037_done2406
  rxcap1037_fail2407:
    goto rx1035_fail2399
  rxcap1037_done2406:
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
    goto rxsubrule1038_pass2408
  rxsubrule1038_back2409:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
  rxsubrule1038_pass2408:
    rx1035_cstack = rx1035_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1038_back2409
    push rx1035_bstack, $I11
    push rx1035_bstack, 0
    push rx1035_bstack, rx1035_pos
    elements $I11, rx1035_cstack
    push rx1035_bstack, $I11
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
    goto rxsubrule1039_pass2410
  rxsubrule1039_back2411:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
  rxsubrule1039_pass2410:
    rx1035_cstack = rx1035_cur."!cursor_capture"($P11, "routine_def")
    set_addr $I11, rxsubrule1039_back2411
    push rx1035_bstack, $I11
    push rx1035_bstack, 0
    push rx1035_bstack, rx1035_pos
    elements $I11, rx1035_cstack
    push rx1035_bstack, $I11
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
    goto rxsubrule1040_pass2412
  rxsubrule1040_back2413:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
  rxsubrule1040_pass2412:
    rx1035_cstack = rx1035_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1040_back2413
    push rx1035_bstack, $I11
    push rx1035_bstack, 0
    push rx1035_bstack, rx1035_pos
    elements $I11, rx1035_cstack
    push rx1035_bstack, $I11
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    rx1035_cur."!cursor_pass"(rx1035_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1035_cur)
  rx1035_restart2398:
    repr_get_attr_obj rx1035_cstack, rx1035_cur, rx1035_curclass, "$!cstack"
  rx1035_fail2399:
    unless rx1035_bstack, rx1035_done2397
    pop $I19, rx1035_bstack
    if_null rx1035_cstack, rx1035_cstack_done2402
    unless rx1035_cstack, rx1035_cstack_done2402
    dec $I19
    set $P11, rx1035_cstack[$I19]
  rx1035_cstack_done2402:
    pop rx1035_rep, rx1035_bstack
    pop rx1035_pos, rx1035_bstack
    pop $I19, rx1035_bstack
    lt rx1035_pos, -1, rx1035_done2397
    lt rx1035_pos, 0, rx1035_fail2399
    eq $I19, 0, rx1035_fail2399
    nqp_islist $I20, rx1035_cstack
    unless $I20, rx1035_jump2400
    elements $I18, rx1035_bstack
    le $I18, 0, rx1035_cut2401
    dec $I18
    set $I18, rx1035_bstack[$I18]
  rx1035_cut2401:
    assign rx1035_cstack, $I18
  rx1035_jump2400:
    jump $I19
  rx1035_done2397:
    rx1035_cur."!cursor_fail"()
    .return (rx1035_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_126_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1221
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1041_start
    .local string rx1041_tgt
    .local int rx1041_pos
    .local int rx1041_off
    .local int rx1041_eos
    .local int rx1041_rep
    .local pmc rx1041_cur
    .local pmc rx1041_curclass
    .local pmc rx1041_bstack
    .local pmc rx1041_cstack
    rx1041_start = self."!cursor_start_all"()
    set rx1041_cur, rx1041_start[0]
    set rx1041_tgt, rx1041_start[1]
    set rx1041_pos, rx1041_start[2]
    set rx1041_curclass, rx1041_start[3]
    set rx1041_bstack, rx1041_start[4]
    set $I19, rx1041_start[5]
    store_lex unicode:"$\x{a2}", rx1041_cur
    length rx1041_eos, rx1041_tgt
    eq $I19, 1, rx1041_restart2416
    gt rx1041_pos, rx1041_eos, rx1041_fail2417
    repr_get_attr_int $I11, self, rx1041_curclass, "$!from"
    ne $I11, -1, rxscan1042_done2423
    goto rxscan1042_scan2422
  rxscan1042_loop2421:
    inc rx1041_pos
    gt rx1041_pos, rx1041_eos, rx1041_fail2417
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!from", rx1041_pos
  rxscan1042_scan2422:
    nqp_rxmark rx1041_bstack, rxscan1042_loop2421, rx1041_pos, 0
  rxscan1042_done2423:
    nqp_rxmark rx1041_bstack, rxcap1043_fail2425, rx1041_pos, 0
    add $I11, rx1041_pos, 6
    gt $I11, rx1041_eos, rx1041_fail2417
    substr $S10, rx1041_tgt, rx1041_pos, 6
    ne $S10, ucs4:"method", rx1041_fail2417
    add rx1041_pos, 6
    nqp_rxpeek $I19, rx1041_bstack, rxcap1043_fail2425
    inc $I19
    set $I11, rx1041_bstack[$I19]
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1041_pos)
    rx1041_cstack = rx1041_cur."!cursor_capture"($P11, "sym")
    goto rxcap1043_done2424
  rxcap1043_fail2425:
    goto rx1041_fail2417
  rxcap1043_done2424:
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
    goto rxsubrule1044_pass2426
  rxsubrule1044_back2427:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
  rxsubrule1044_pass2426:
    rx1041_cstack = rx1041_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1044_back2427
    push rx1041_bstack, $I11
    push rx1041_bstack, 0
    push rx1041_bstack, rx1041_pos
    elements $I11, rx1041_cstack
    push rx1041_bstack, $I11
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
    goto rxsubrule1045_pass2428
  rxsubrule1045_back2429:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
  rxsubrule1045_pass2428:
    rx1041_cstack = rx1041_cur."!cursor_capture"($P11, "method_def")
    set_addr $I11, rxsubrule1045_back2429
    push rx1041_bstack, $I11
    push rx1041_bstack, 0
    push rx1041_bstack, rx1041_pos
    elements $I11, rx1041_cstack
    push rx1041_bstack, $I11
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
    goto rxsubrule1046_pass2430
  rxsubrule1046_back2431:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
  rxsubrule1046_pass2430:
    rx1041_cstack = rx1041_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1046_back2431
    push rx1041_bstack, $I11
    push rx1041_bstack, 0
    push rx1041_bstack, rx1041_pos
    elements $I11, rx1041_cstack
    push rx1041_bstack, $I11
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    rx1041_cur."!cursor_pass"(rx1041_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1041_cur)
  rx1041_restart2416:
    repr_get_attr_obj rx1041_cstack, rx1041_cur, rx1041_curclass, "$!cstack"
  rx1041_fail2417:
    unless rx1041_bstack, rx1041_done2415
    pop $I19, rx1041_bstack
    if_null rx1041_cstack, rx1041_cstack_done2420
    unless rx1041_cstack, rx1041_cstack_done2420
    dec $I19
    set $P11, rx1041_cstack[$I19]
  rx1041_cstack_done2420:
    pop rx1041_rep, rx1041_bstack
    pop rx1041_pos, rx1041_bstack
    pop $I19, rx1041_bstack
    lt rx1041_pos, -1, rx1041_done2415
    lt rx1041_pos, 0, rx1041_fail2417
    eq $I19, 0, rx1041_fail2417
    nqp_islist $I20, rx1041_cstack
    unless $I20, rx1041_jump2418
    elements $I18, rx1041_bstack
    le $I18, 0, rx1041_cut2419
    dec $I18
    set $I18, rx1041_bstack[$I18]
  rx1041_cut2419:
    assign rx1041_cstack, $I18
  rx1041_jump2418:
    jump $I19
  rx1041_done2415:
    rx1041_cur."!cursor_fail"()
    .return (rx1041_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_127_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1223
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1047_start
    .local string rx1047_tgt
    .local int rx1047_pos
    .local int rx1047_off
    .local int rx1047_eos
    .local int rx1047_rep
    .local pmc rx1047_cur
    .local pmc rx1047_curclass
    .local pmc rx1047_bstack
    .local pmc rx1047_cstack
    rx1047_start = self."!cursor_start_all"()
    set rx1047_cur, rx1047_start[0]
    set rx1047_tgt, rx1047_start[1]
    set rx1047_pos, rx1047_start[2]
    set rx1047_curclass, rx1047_start[3]
    set rx1047_bstack, rx1047_start[4]
    set $I19, rx1047_start[5]
    store_lex unicode:"$\x{a2}", rx1047_cur
    length rx1047_eos, rx1047_tgt
    eq $I19, 1, rx1047_restart2434
    gt rx1047_pos, rx1047_eos, rx1047_fail2435
    repr_get_attr_int $I11, self, rx1047_curclass, "$!from"
    ne $I11, -1, rxscan1048_done2441
    goto rxscan1048_scan2440
  rxscan1048_loop2439:
    inc rx1047_pos
    gt rx1047_pos, rx1047_eos, rx1047_fail2435
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!from", rx1047_pos
  rxscan1048_scan2440:
    nqp_rxmark rx1047_bstack, rxscan1048_loop2439, rx1047_pos, 0
  rxscan1048_done2441:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    store_lex unicode:"$\x{a2}", rx1047_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx1047_bstack, rxquantg1049_done2443, rx1047_pos, 0
  rxquantg1049_loop2442:
    nqp_rxmark rx1047_bstack, rxcap1050_fail2445, rx1047_pos, 0
    nqp_rxmark rx1047_bstack, rxquantr1051_done2447, rx1047_pos, 0
  rxquantr1051_loop2446:
    add $I11, rx1047_pos, 1
    gt $I11, rx1047_eos, rx1047_fail2435
    substr $S10, rx1047_tgt, rx1047_pos, 1
    ne $S10, ucs4:"&", rx1047_fail2435
    add rx1047_pos, 1
    nqp_rxpeek $I19, rx1047_bstack, rxquantr1051_done2447
    inc $I19
    inc $I19
    set rx1047_rep, rx1047_bstack[$I19]
    nqp_rxcommit rx1047_bstack, rxquantr1051_done2447
    inc rx1047_rep
  rxquantr1051_done2447:
    nqp_rxpeek $I19, rx1047_bstack, rxcap1050_fail2445
    inc $I19
    set $I11, rx1047_bstack[$I19]
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1047_pos)
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1050_done2444
  rxcap1050_fail2445:
    goto rx1047_fail2435
  rxcap1050_done2444:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1052_pass2448
  rxsubrule1052_back2449:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1052_pass2448:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1052_back2449
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1053_pass2450
  rxsubrule1053_back2451:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1053_pass2450:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1053_back2451
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  rxquantg1049_done2443:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1054_pass2452
  rxsubrule1054_back2453:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1054_pass2452:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1054_back2453
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1055_pass2454
  rxsubrule1055_back2455:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1055_pass2454:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1055_back2455
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1056_pass2456
  rxsubrule1056_back2457:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1056_pass2456:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1056_back2457
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1057_02459:
    nqp_rxmark rx1047_bstack, alt1057_12473, rx1047_pos, 0
    add $I11, rx1047_pos, 1
    gt $I11, rx1047_eos, rx1047_fail2435
    substr $S10, rx1047_tgt, rx1047_pos, 1
    ne $S10, ucs4:"(", rx1047_fail2435
    add rx1047_pos, 1
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1058_pass2460
  rxsubrule1058_back2461:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1058_pass2460:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1058_back2461
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1059_pass2462
  rxsubrule1059_back2463:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1059_pass2462:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1059_back2463
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1060_pass2464
  rxsubrule1060_back2465:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1060_pass2464:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1060_back2465
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1061_02467:
    nqp_rxmark rx1047_bstack, alt1061_12470, rx1047_pos, 0
    add $I11, rx1047_pos, 1
    gt $I11, rx1047_eos, rx1047_fail2435
    substr $S10, rx1047_tgt, rx1047_pos, 1
    ne $S10, ucs4:")", rx1047_fail2435
    add rx1047_pos, 1
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1062_pass2468
  rxsubrule1062_back2469:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1062_pass2468:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1062_back2469
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    goto alt1061_end2466
  alt1061_12470:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1063_pass2471
  rxsubrule1063_back2472:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1063_pass2471:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1063_back2472
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1061_end2466:
    goto alt1057_end2458
  alt1057_12473:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1064_pass2474
  rxsubrule1064_back2475:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1064_pass2474:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1064_back2475
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1065_pass2476
  rxsubrule1065_back2477:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1065_pass2476:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1065_back2477
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1057_end2458:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1066_pass2478
  rxsubrule1066_back2479:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1066_pass2478:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1066_back2479
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    nqp_rxmark rx1047_bstack, rxquantg1067_done2481, rx1047_pos, 0
  rxquantg1067_loop2480:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1068_pass2482
  rxsubrule1068_back2483:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1068_pass2482:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1068_back2483
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    nqp_rxmark rx1047_bstack, rxquantg1067_done2481, rx1047_pos, rx1047_rep
    goto rxquantg1067_loop2480
  rxquantg1067_done2481:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1069_pass2484
  rxsubrule1069_back2485:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1069_pass2484:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1069_back2485
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1070_02487
    nqp_push_label $P11, alt1070_12492
    nqp_rxmark rx1047_bstack, alt1070_end2486, -1, 0
    rx1047_cur."!alt"(rx1047_pos, "alt_nfa__23_1383915018.72619", $P11)
    goto rx1047_fail2435
  alt1070_02487:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1071_pass2488
  rxsubrule1071_back2489:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1071_pass2488:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "onlystar")
    set_addr $I11, rxsubrule1071_back2489
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1072_pass2490
  rxsubrule1072_back2491:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1072_pass2490:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1072_back2491
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    goto alt1070_end2486
  alt1070_12492:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1073_pass2493
  rxsubrule1073_back2494:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1073_pass2493:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule1073_back2494
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1074_pass2495
  rxsubrule1074_back2496:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1074_pass2495:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1074_back2496
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    goto alt1070_end2486
  alt1070_end2486:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1075_pass2497
  rxsubrule1075_back2498:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1075_pass2497:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1075_back2498
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    rx1047_cur."!cursor_pass"(rx1047_pos, "routine_def", 'backtrack'=>1)
    .return (rx1047_cur)
  rx1047_restart2434:
    repr_get_attr_obj rx1047_cstack, rx1047_cur, rx1047_curclass, "$!cstack"
  rx1047_fail2435:
    unless rx1047_bstack, rx1047_done2433
    pop $I19, rx1047_bstack
    if_null rx1047_cstack, rx1047_cstack_done2438
    unless rx1047_cstack, rx1047_cstack_done2438
    dec $I19
    set $P11, rx1047_cstack[$I19]
  rx1047_cstack_done2438:
    pop rx1047_rep, rx1047_bstack
    pop rx1047_pos, rx1047_bstack
    pop $I19, rx1047_bstack
    lt rx1047_pos, -1, rx1047_done2433
    lt rx1047_pos, 0, rx1047_fail2435
    eq $I19, 0, rx1047_fail2435
    nqp_islist $I20, rx1047_cstack
    unless $I20, rx1047_jump2436
    elements $I18, rx1047_bstack
    le $I18, 0, rx1047_cut2437
    dec $I18
    set $I18, rx1047_bstack[$I18]
  rx1047_cut2437:
    assign rx1047_cstack, $I18
  rx1047_jump2436:
    jump $I19
  rx1047_done2433:
    rx1047_cur."!cursor_fail"()
    .return (rx1047_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_128_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1236
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_429_1383915013.33774' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1076_start
    .local string rx1076_tgt
    .local int rx1076_pos
    .local int rx1076_off
    .local int rx1076_eos
    .local int rx1076_rep
    .local pmc rx1076_cur
    .local pmc rx1076_curclass
    .local pmc rx1076_bstack
    .local pmc rx1076_cstack
    rx1076_start = self."!cursor_start_all"()
    set rx1076_cur, rx1076_start[0]
    set rx1076_tgt, rx1076_start[1]
    set rx1076_pos, rx1076_start[2]
    set rx1076_curclass, rx1076_start[3]
    set rx1076_bstack, rx1076_start[4]
    set $I19, rx1076_start[5]
    store_lex unicode:"$\x{a2}", rx1076_cur
    length rx1076_eos, rx1076_tgt
    eq $I19, 1, rx1076_restart2501
    gt rx1076_pos, rx1076_eos, rx1076_fail2502
    repr_get_attr_int $I11, self, rx1076_curclass, "$!from"
    ne $I11, -1, rxscan1077_done2508
    goto rxscan1077_scan2507
  rxscan1077_loop2506:
    inc rx1076_pos
    gt rx1076_pos, rx1076_eos, rx1076_fail2502
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!from", rx1076_pos
  rxscan1077_scan2507:
    nqp_rxmark rx1076_bstack, rxscan1077_loop2506, rx1076_pos, 0
  rxscan1077_done2508:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    store_lex unicode:"$\x{a2}", rx1076_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    store_lex unicode:"$\x{a2}", rx1076_cur
    box $P5004, 1
    set $P102, $P5004
  alt1078_02510:
    nqp_rxmark rx1076_bstack, alt1078_12519, rx1076_pos, 0
    add $I11, rx1076_pos, 3
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 3
    ne $S10, ucs4:"::(", rx1076_fail2502
    add rx1076_pos, 3
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1079_pass2511
  rxsubrule1079_back2512:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1079_pass2511:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1079_back2512
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1080_pass2513
  rxsubrule1080_back2514:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1080_pass2513:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1080_back2514
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1081_pass2515
  rxsubrule1081_back2516:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1081_pass2515:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1081_back2516
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:")", rx1076_fail2502
    add rx1076_pos, 1
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1082_pass2517
  rxsubrule1082_back2518:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1082_pass2517:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1082_back2518
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1078_end2509
  alt1078_12519:
    nqp_rxmark rx1076_bstack, rxcap1083_fail2521, rx1076_pos, 0
    nqp_rxmark rx1076_bstack, rxquantr1084_done2523, rx1076_pos, 0
  rxquantr1084_loop2522:
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:"!", rx1076_fail2502
    add rx1076_pos, 1
    nqp_rxpeek $I19, rx1076_bstack, rxquantr1084_done2523
    inc $I19
    inc $I19
    set rx1076_rep, rx1076_bstack[$I19]
    nqp_rxcommit rx1076_bstack, rxquantr1084_done2523
    inc rx1076_rep
  rxquantr1084_done2523:
    nqp_rxpeek $I19, rx1076_bstack, rxcap1083_fail2521
    inc $I19
    set $I11, rx1076_bstack[$I19]
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1076_pos)
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "private")
    goto rxcap1083_done2520
  rxcap1083_fail2521:
    goto rx1076_fail2502
  rxcap1083_done2520:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1085_pass2524
  rxsubrule1085_back2525:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1085_pass2524:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1085_back2525
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    nqp_rxmark rx1076_bstack, rxquantg1086_done2527, rx1076_pos, 0
  rxquantg1086_loop2526:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1087_pass2528
  rxsubrule1087_back2529:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1087_pass2528:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1087_back2529
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  rxquantg1086_done2527:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1088_pass2530
  rxsubrule1088_back2531:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1088_pass2530:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1088_back2531
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1078_end2509:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1089_pass2532
  rxsubrule1089_back2533:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1089_pass2532:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1089_back2533
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1090_pass2534
  rxsubrule1090_back2535:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1090_pass2534:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1090_back2535
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1091_pass2536
  rxsubrule1091_back2537:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1091_pass2536:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1091_back2537
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1092_02539:
    nqp_rxmark rx1076_bstack, alt1092_12553, rx1076_pos, 0
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:"(", rx1076_fail2502
    add rx1076_pos, 1
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1093_pass2540
  rxsubrule1093_back2541:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1093_pass2540:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1093_back2541
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1094_pass2542
  rxsubrule1094_back2543:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1094_pass2542:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1094_back2543
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1095_pass2544
  rxsubrule1095_back2545:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1095_pass2544:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1095_back2545
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1096_02547:
    nqp_rxmark rx1076_bstack, alt1096_12550, rx1076_pos, 0
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:")", rx1076_fail2502
    add rx1076_pos, 1
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1097_pass2548
  rxsubrule1097_back2549:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1097_pass2548:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1097_back2549
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1096_end2546
  alt1096_12550:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1098_pass2551
  rxsubrule1098_back2552:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1098_pass2551:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1098_back2552
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1096_end2546:
    goto alt1092_end2538
  alt1092_12553:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1099_pass2554
  rxsubrule1099_back2555:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1099_pass2554:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1099_back2555
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1100_pass2556
  rxsubrule1100_back2557:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1100_pass2556:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1100_back2557
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1092_end2538:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1101_pass2558
  rxsubrule1101_back2559:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1101_pass2558:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1101_back2559
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    store_lex unicode:"$\x{a2}", rx1076_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_429_1383915013.33774' 
    capture_lex $P5006
    $P5007 = $P5006()
    nqp_rxmark rx1076_bstack, rxquantg1102_done2561, rx1076_pos, 0
  rxquantg1102_loop2560:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1103_pass2562
  rxsubrule1103_back2563:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1103_pass2562:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1103_back2563
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    nqp_rxmark rx1076_bstack, rxquantg1102_done2561, rx1076_pos, rx1076_rep
    goto rxquantg1102_loop2560
  rxquantg1102_done2561:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1104_pass2564
  rxsubrule1104_back2565:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1104_pass2564:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1104_back2565
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1105_02567
    nqp_push_label $P11, alt1105_12572
    nqp_rxmark rx1076_bstack, alt1105_end2566, -1, 0
    rx1076_cur."!alt"(rx1076_pos, "alt_nfa__24_1383915018.79749", $P11)
    goto rx1076_fail2502
  alt1105_02567:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1106_pass2568
  rxsubrule1106_back2569:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1106_pass2568:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "onlystar")
    set_addr $I11, rxsubrule1106_back2569
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1107_pass2570
  rxsubrule1107_back2571:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1107_pass2570:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1107_back2571
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1105_end2566
  alt1105_12572:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1108_pass2573
  rxsubrule1108_back2574:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1108_pass2573:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule1108_back2574
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1109_pass2575
  rxsubrule1109_back2576:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1109_pass2575:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1109_back2576
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1105_end2566
  alt1105_end2566:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1110_pass2577
  rxsubrule1110_back2578:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1110_pass2577:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1110_back2578
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    rx1076_cur."!cursor_pass"(rx1076_pos, "method_def", 'backtrack'=>1)
    .return (rx1076_cur)
  rx1076_restart2501:
    repr_get_attr_obj rx1076_cstack, rx1076_cur, rx1076_curclass, "$!cstack"
  rx1076_fail2502:
    unless rx1076_bstack, rx1076_done2500
    pop $I19, rx1076_bstack
    if_null rx1076_cstack, rx1076_cstack_done2505
    unless rx1076_cstack, rx1076_cstack_done2505
    dec $I19
    set $P11, rx1076_cstack[$I19]
  rx1076_cstack_done2505:
    pop rx1076_rep, rx1076_bstack
    pop rx1076_pos, rx1076_bstack
    pop $I19, rx1076_bstack
    lt rx1076_pos, -1, rx1076_done2500
    lt rx1076_pos, 0, rx1076_fail2502
    eq $I19, 0, rx1076_fail2502
    nqp_islist $I20, rx1076_cstack
    unless $I20, rx1076_jump2503
    elements $I18, rx1076_bstack
    le $I18, 0, rx1076_cut2504
    dec $I18
    set $I18, rx1076_bstack[$I18]
  rx1076_cut2504:
    assign rx1076_cstack, $I18
  rx1076_jump2503:
    jump $I19
  rx1076_done2500:
    rx1076_cur."!cursor_fail"()
    .return (rx1076_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1383915013.33774") :anon :lex :outer("cuid_128_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1246

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_129_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1254
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_430_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1111_start
    .local string rx1111_tgt
    .local int rx1111_pos
    .local int rx1111_off
    .local int rx1111_eos
    .local int rx1111_rep
    .local pmc rx1111_cur
    .local pmc rx1111_curclass
    .local pmc rx1111_bstack
    .local pmc rx1111_cstack
    rx1111_start = self."!cursor_start_all"()
    set rx1111_cur, rx1111_start[0]
    set rx1111_tgt, rx1111_start[1]
    set rx1111_pos, rx1111_start[2]
    set rx1111_curclass, rx1111_start[3]
    set rx1111_bstack, rx1111_start[4]
    set $I19, rx1111_start[5]
    store_lex unicode:"$\x{a2}", rx1111_cur
    length rx1111_eos, rx1111_tgt
    eq $I19, 1, rx1111_restart2581
    gt rx1111_pos, rx1111_eos, rx1111_fail2582
    repr_get_attr_int $I11, self, rx1111_curclass, "$!from"
    ne $I11, -1, rxscan1112_done2588
    goto rxscan1112_scan2587
  rxscan1112_loop2586:
    inc rx1111_pos
    gt rx1111_pos, rx1111_eos, rx1111_fail2582
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!from", rx1111_pos
  rxscan1112_scan2587:
    nqp_rxmark rx1111_bstack, rxscan1112_loop2586, rx1111_pos, 0
  rxscan1112_done2588:
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    store_lex unicode:"$\x{a2}", rx1111_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_430_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1111_fail2582
    add $I11, rx1111_pos, 1
    gt $I11, rx1111_eos, rx1111_fail2582
    substr $S10, rx1111_tgt, rx1111_pos, 1
    ne $S10, ucs4:"{", rx1111_fail2582
    add rx1111_pos, 1
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_get_attr_int rx1111_pos, $P11, rx1111_curclass, "$!pos"
    add $I11, rx1111_pos, 1
    gt $I11, rx1111_eos, rx1111_fail2582
    substr $S10, rx1111_tgt, rx1111_pos, 1
    ne $S10, ucs4:"*", rx1111_fail2582
    add rx1111_pos, 1
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_get_attr_int rx1111_pos, $P11, rx1111_curclass, "$!pos"
    add $I11, rx1111_pos, 1
    gt $I11, rx1111_eos, rx1111_fail2582
    substr $S10, rx1111_tgt, rx1111_pos, 1
    ne $S10, ucs4:"}", rx1111_fail2582
    add rx1111_pos, 1
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_get_attr_int rx1111_pos, $P11, rx1111_curclass, "$!pos"
    rx1111_cur."!cursor_pass"(rx1111_pos, "onlystar", 'backtrack'=>1)
    .return (rx1111_cur)
  rx1111_restart2581:
    repr_get_attr_obj rx1111_cstack, rx1111_cur, rx1111_curclass, "$!cstack"
  rx1111_fail2582:
    unless rx1111_bstack, rx1111_done2580
    pop $I19, rx1111_bstack
    if_null rx1111_cstack, rx1111_cstack_done2585
    unless rx1111_cstack, rx1111_cstack_done2585
    dec $I19
    set $P11, rx1111_cstack[$I19]
  rx1111_cstack_done2585:
    pop rx1111_rep, rx1111_bstack
    pop rx1111_pos, rx1111_bstack
    pop $I19, rx1111_bstack
    lt rx1111_pos, -1, rx1111_done2580
    lt rx1111_pos, 0, rx1111_fail2582
    eq $I19, 0, rx1111_fail2582
    nqp_islist $I20, rx1111_cstack
    unless $I20, rx1111_jump2583
    elements $I18, rx1111_bstack
    le $I18, 0, rx1111_cut2584
    dec $I18
    set $I18, rx1111_bstack[$I18]
  rx1111_cut2584:
    assign rx1111_cstack, $I18
  rx1111_jump2583:
    jump $I19
  rx1111_done2580:
    rx1111_cur."!cursor_fail"()
    .return (rx1111_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_430_1383915013.33774") :anon :lex :outer("cuid_129_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1255
    .local pmc fb_tmp_173 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2589
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_173, $P5002
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if1113_else2590 
    set $P5004, fb_tmp_173["$MULTINESS"]
    set $P5006, $P5004
    goto if1113_end2591
  if1113_else2590:
    null $P5005
    set $P5006, $P5005
  if1113_end2591:
    unless_null $P5006, vivi_11142592
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_11142592:
    unless_null $P5006, vivi_11152593
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_11152593:
    set $P5001, $P5006
  fallback2589:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_130_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1261
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_131_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1262
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1119_start
    .local string rx1119_tgt
    .local int rx1119_pos
    .local int rx1119_off
    .local int rx1119_eos
    .local int rx1119_rep
    .local pmc rx1119_cur
    .local pmc rx1119_curclass
    .local pmc rx1119_bstack
    .local pmc rx1119_cstack
    rx1119_start = self."!cursor_start_all"()
    set rx1119_cur, rx1119_start[0]
    set rx1119_tgt, rx1119_start[1]
    set rx1119_pos, rx1119_start[2]
    set rx1119_curclass, rx1119_start[3]
    set rx1119_bstack, rx1119_start[4]
    set $I19, rx1119_start[5]
    store_lex unicode:"$\x{a2}", rx1119_cur
    length rx1119_eos, rx1119_tgt
    eq $I19, 1, rx1119_restart2599
    gt rx1119_pos, rx1119_eos, rx1119_fail2600
    repr_get_attr_int $I11, self, rx1119_curclass, "$!from"
    ne $I11, -1, rxscan1120_done2606
    goto rxscan1120_scan2605
  rxscan1120_loop2604:
    inc rx1119_pos
    gt rx1119_pos, rx1119_eos, rx1119_fail2600
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!from", rx1119_pos
  rxscan1120_scan2605:
    nqp_rxmark rx1119_bstack, rxscan1120_loop2604, rx1119_pos, 0
  rxscan1120_done2606:
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    store_lex unicode:"$\x{a2}", rx1119_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1119_bstack, rxcap1121_fail2608, rx1119_pos, 0
    add $I11, rx1119_pos, 5
    gt $I11, rx1119_eos, rx1119_fail2600
    substr $S10, rx1119_tgt, rx1119_pos, 5
    ne $S10, ucs4:"multi", rx1119_fail2600
    add rx1119_pos, 5
    nqp_rxpeek $I19, rx1119_bstack, rxcap1121_fail2608
    inc $I19
    set $I11, rx1119_bstack[$I19]
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1119_pos)
    rx1119_cstack = rx1119_cur."!cursor_capture"($P11, "sym")
    goto rxcap1121_done2607
  rxcap1121_fail2608:
    goto rx1119_fail2600
  rxcap1121_done2607:
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
  alt1123_02611:
    nqp_rxmark rx1119_bstack, alt1123_12613, rx1119_pos, 0
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    nqp_rxmark rx1119_bstack, rxsubrule1124_pass2612, -1, 0
  rxsubrule1124_pass2612:
    rx1119_cstack = rx1119_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
    goto alt1123_end2610
  alt1123_12613:
    nqp_rxmark rx1119_bstack, alt1123_22615, rx1119_pos, 0
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    nqp_rxmark rx1119_bstack, rxsubrule1125_pass2614, -1, 0
  rxsubrule1125_pass2614:
    rx1119_cstack = rx1119_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
    goto alt1123_end2610
  alt1123_22615:
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
  alt1123_end2610:
    rx1119_cur."!cursor_pass"(rx1119_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1119_cur)
  rx1119_restart2599:
    repr_get_attr_obj rx1119_cstack, rx1119_cur, rx1119_curclass, "$!cstack"
  rx1119_fail2600:
    unless rx1119_bstack, rx1119_done2598
    pop $I19, rx1119_bstack
    if_null rx1119_cstack, rx1119_cstack_done2603
    unless rx1119_cstack, rx1119_cstack_done2603
    dec $I19
    set $P11, rx1119_cstack[$I19]
  rx1119_cstack_done2603:
    pop rx1119_rep, rx1119_bstack
    pop rx1119_pos, rx1119_bstack
    pop $I19, rx1119_bstack
    lt rx1119_pos, -1, rx1119_done2598
    lt rx1119_pos, 0, rx1119_fail2600
    eq $I19, 0, rx1119_fail2600
    nqp_islist $I20, rx1119_cstack
    unless $I20, rx1119_jump2601
    elements $I18, rx1119_bstack
    le $I18, 0, rx1119_cut2602
    dec $I18
    set $I18, rx1119_bstack[$I18]
  rx1119_cut2602:
    assign rx1119_cstack, $I18
  rx1119_jump2601:
    jump $I19
  rx1119_done2598:
    rx1119_cur."!cursor_fail"()
    .return (rx1119_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_132_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1267
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1127_start
    .local string rx1127_tgt
    .local int rx1127_pos
    .local int rx1127_off
    .local int rx1127_eos
    .local int rx1127_rep
    .local pmc rx1127_cur
    .local pmc rx1127_curclass
    .local pmc rx1127_bstack
    .local pmc rx1127_cstack
    rx1127_start = self."!cursor_start_all"()
    set rx1127_cur, rx1127_start[0]
    set rx1127_tgt, rx1127_start[1]
    set rx1127_pos, rx1127_start[2]
    set rx1127_curclass, rx1127_start[3]
    set rx1127_bstack, rx1127_start[4]
    set $I19, rx1127_start[5]
    store_lex unicode:"$\x{a2}", rx1127_cur
    length rx1127_eos, rx1127_tgt
    eq $I19, 1, rx1127_restart2619
    gt rx1127_pos, rx1127_eos, rx1127_fail2620
    repr_get_attr_int $I11, self, rx1127_curclass, "$!from"
    ne $I11, -1, rxscan1128_done2626
    goto rxscan1128_scan2625
  rxscan1128_loop2624:
    inc rx1127_pos
    gt rx1127_pos, rx1127_eos, rx1127_fail2620
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!from", rx1127_pos
  rxscan1128_scan2625:
    nqp_rxmark rx1127_bstack, rxscan1128_loop2624, rx1127_pos, 0
  rxscan1128_done2626:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    store_lex unicode:"$\x{a2}", rx1127_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1127_bstack, rxcap1129_fail2628, rx1127_pos, 0
    add $I11, rx1127_pos, 5
    gt $I11, rx1127_eos, rx1127_fail2620
    substr $S10, rx1127_tgt, rx1127_pos, 5
    ne $S10, ucs4:"proto", rx1127_fail2620
    add rx1127_pos, 5
    nqp_rxpeek $I19, rx1127_bstack, rxcap1129_fail2628
    inc $I19
    set $I11, rx1127_bstack[$I19]
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1127_pos)
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "sym")
    goto rxcap1129_done2627
  rxcap1129_fail2628:
    goto rx1127_fail2620
  rxcap1129_done2627:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
  alt1131_02631:
    nqp_rxmark rx1127_bstack, alt1131_12633, rx1127_pos, 0
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    nqp_rxmark rx1127_bstack, rxsubrule1132_pass2632, -1, 0
  rxsubrule1132_pass2632:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    goto alt1131_end2630
  alt1131_12633:
    nqp_rxmark rx1127_bstack, alt1131_22635, rx1127_pos, 0
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    nqp_rxmark rx1127_bstack, rxsubrule1133_pass2634, -1, 0
  rxsubrule1133_pass2634:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    goto alt1131_end2630
  alt1131_22635:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
  alt1131_end2630:
    rx1127_cur."!cursor_pass"(rx1127_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1127_cur)
  rx1127_restart2619:
    repr_get_attr_obj rx1127_cstack, rx1127_cur, rx1127_curclass, "$!cstack"
  rx1127_fail2620:
    unless rx1127_bstack, rx1127_done2618
    pop $I19, rx1127_bstack
    if_null rx1127_cstack, rx1127_cstack_done2623
    unless rx1127_cstack, rx1127_cstack_done2623
    dec $I19
    set $P11, rx1127_cstack[$I19]
  rx1127_cstack_done2623:
    pop rx1127_rep, rx1127_bstack
    pop rx1127_pos, rx1127_bstack
    pop $I19, rx1127_bstack
    lt rx1127_pos, -1, rx1127_done2618
    lt rx1127_pos, 0, rx1127_fail2620
    eq $I19, 0, rx1127_fail2620
    nqp_islist $I20, rx1127_cstack
    unless $I20, rx1127_jump2621
    elements $I18, rx1127_bstack
    le $I18, 0, rx1127_cut2622
    dec $I18
    set $I18, rx1127_bstack[$I18]
  rx1127_cut2622:
    assign rx1127_cstack, $I18
  rx1127_jump2621:
    jump $I19
  rx1127_done2618:
    rx1127_cur."!cursor_fail"()
    .return (rx1127_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_133_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1272
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1135_start
    .local string rx1135_tgt
    .local int rx1135_pos
    .local int rx1135_off
    .local int rx1135_eos
    .local int rx1135_rep
    .local pmc rx1135_cur
    .local pmc rx1135_curclass
    .local pmc rx1135_bstack
    .local pmc rx1135_cstack
    rx1135_start = self."!cursor_start_all"()
    set rx1135_cur, rx1135_start[0]
    set rx1135_tgt, rx1135_start[1]
    set rx1135_pos, rx1135_start[2]
    set rx1135_curclass, rx1135_start[3]
    set rx1135_bstack, rx1135_start[4]
    set $I19, rx1135_start[5]
    store_lex unicode:"$\x{a2}", rx1135_cur
    length rx1135_eos, rx1135_tgt
    eq $I19, 1, rx1135_restart2639
    gt rx1135_pos, rx1135_eos, rx1135_fail2640
    repr_get_attr_int $I11, self, rx1135_curclass, "$!from"
    ne $I11, -1, rxscan1136_done2646
    goto rxscan1136_scan2645
  rxscan1136_loop2644:
    inc rx1135_pos
    gt rx1135_pos, rx1135_eos, rx1135_fail2640
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!from", rx1135_pos
  rxscan1136_scan2645:
    nqp_rxmark rx1135_bstack, rxscan1136_loop2644, rx1135_pos, 0
  rxscan1136_done2646:
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!pos", rx1135_pos
    store_lex unicode:"$\x{a2}", rx1135_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!pos", rx1135_pos
    $P11 = rx1135_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1135_curclass, "$!pos"
    lt $I11, 0, rx1135_fail2640
    nqp_rxmark rx1135_bstack, rxsubrule1137_pass2647, -1, 0
  rxsubrule1137_pass2647:
    rx1135_cstack = rx1135_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1135_pos, $P11, rx1135_curclass, "$!pos"
    rx1135_cur."!cursor_pass"(rx1135_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1135_cur)
  rx1135_restart2639:
    repr_get_attr_obj rx1135_cstack, rx1135_cur, rx1135_curclass, "$!cstack"
  rx1135_fail2640:
    unless rx1135_bstack, rx1135_done2638
    pop $I19, rx1135_bstack
    if_null rx1135_cstack, rx1135_cstack_done2643
    unless rx1135_cstack, rx1135_cstack_done2643
    dec $I19
    set $P11, rx1135_cstack[$I19]
  rx1135_cstack_done2643:
    pop rx1135_rep, rx1135_bstack
    pop rx1135_pos, rx1135_bstack
    pop $I19, rx1135_bstack
    lt rx1135_pos, -1, rx1135_done2638
    lt rx1135_pos, 0, rx1135_fail2640
    eq $I19, 0, rx1135_fail2640
    nqp_islist $I20, rx1135_cstack
    unless $I20, rx1135_jump2641
    elements $I18, rx1135_bstack
    le $I18, 0, rx1135_cut2642
    dec $I18
    set $I18, rx1135_bstack[$I18]
  rx1135_cut2642:
    assign rx1135_cstack, $I18
  rx1135_jump2641:
    jump $I19
  rx1135_done2638:
    rx1135_cur."!cursor_fail"()
    .return (rx1135_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_134_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1277
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_431_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1138_start
    .local string rx1138_tgt
    .local int rx1138_pos
    .local int rx1138_off
    .local int rx1138_eos
    .local int rx1138_rep
    .local pmc rx1138_cur
    .local pmc rx1138_curclass
    .local pmc rx1138_bstack
    .local pmc rx1138_cstack
    rx1138_start = self."!cursor_start_all"()
    set rx1138_cur, rx1138_start[0]
    set rx1138_tgt, rx1138_start[1]
    set rx1138_pos, rx1138_start[2]
    set rx1138_curclass, rx1138_start[3]
    set rx1138_bstack, rx1138_start[4]
    set $I19, rx1138_start[5]
    store_lex unicode:"$\x{a2}", rx1138_cur
    length rx1138_eos, rx1138_tgt
    eq $I19, 1, rx1138_restart2650
    gt rx1138_pos, rx1138_eos, rx1138_fail2651
    repr_get_attr_int $I11, self, rx1138_curclass, "$!from"
    ne $I11, -1, rxscan1139_done2657
    goto rxscan1139_scan2656
  rxscan1139_loop2655:
    inc rx1138_pos
    gt rx1138_pos, rx1138_eos, rx1138_fail2651
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!from", rx1138_pos
  rxscan1139_scan2656:
    nqp_rxmark rx1138_bstack, rxscan1139_loop2655, rx1138_pos, 0
  rxscan1139_done2657:
    nqp_rxmark rx1138_bstack, rxquantg1140_done2659, rx1138_pos, 0
  rxquantg1140_loop2658:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    store_lex unicode:"$\x{a2}", rx1138_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_431_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1138_fail2651
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1144_pass2665
  rxsubrule1144_back2666:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1144_pass2665:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1144_back2666
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1145_pass2667
  rxsubrule1145_back2668:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1145_pass2667:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "invocant")
    set_addr $I11, rxsubrule1145_back2668
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1146_pass2669
  rxsubrule1146_back2670:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1146_pass2669:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1146_back2670
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2651
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:":", rx1138_fail2651
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1147_pass2671
  rxsubrule1147_back2672:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1147_pass2671:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1147_back2672
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
  rxquantg1140_done2659:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1148_pass2673
  rxsubrule1148_back2674:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1148_pass2673:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1148_back2674
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    nqp_rxmark rx1138_bstack, rxquantg1149_done2676, rx1138_pos, 0
  rxquantg1149_loop2675:
    nqp_rxmark rx1138_bstack, rxquantg1150_done2678, rx1138_pos, 0
  rxquantg1150_loop2677:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1151_pass2679
  rxsubrule1151_back2680:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1151_pass2679:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "parameter")
    set_addr $I11, rxsubrule1151_back2680
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1152_pass2681
  rxsubrule1152_back2682:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1152_pass2681:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1152_back2682
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    nqp_rxmark rx1138_bstack, rxquantg1150_done2678, rx1138_pos, rx1138_rep
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2651
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:",", rx1138_fail2651
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1153_pass2683
  rxsubrule1153_back2684:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1153_pass2683:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1153_back2684
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    goto rxquantg1150_loop2677
  rxquantg1150_done2678:
    nqp_rxmark rx1138_bstack, rxquantg1154_done2686, rx1138_pos, 0
  rxquantg1154_loop2685:
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2651
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:",", rx1138_fail2651
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1155_pass2687
  rxsubrule1155_back2688:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1155_pass2687:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1155_back2688
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
  rxquantg1154_done2686:
  rxquantg1149_done2676:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1156_pass2689
  rxsubrule1156_back2690:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1156_pass2689:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1156_back2690
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    rx1138_cur."!cursor_pass"(rx1138_pos, "signature", 'backtrack'=>1)
    .return (rx1138_cur)
  rx1138_restart2650:
    repr_get_attr_obj rx1138_cstack, rx1138_cur, rx1138_curclass, "$!cstack"
  rx1138_fail2651:
    unless rx1138_bstack, rx1138_done2649
    pop $I19, rx1138_bstack
    if_null rx1138_cstack, rx1138_cstack_done2654
    unless rx1138_cstack, rx1138_cstack_done2654
    dec $I19
    set $P11, rx1138_cstack[$I19]
  rx1138_cstack_done2654:
    pop rx1138_rep, rx1138_bstack
    pop rx1138_pos, rx1138_bstack
    pop $I19, rx1138_bstack
    lt rx1138_pos, -1, rx1138_done2649
    lt rx1138_pos, 0, rx1138_fail2651
    eq $I19, 0, rx1138_fail2651
    nqp_islist $I20, rx1138_cstack
    unless $I20, rx1138_jump2652
    elements $I18, rx1138_bstack
    le $I18, 0, rx1138_cut2653
    dec $I18
    set $I18, rx1138_bstack[$I18]
  rx1138_cut2653:
    assign rx1138_cstack, $I18
  rx1138_jump2652:
    jump $I19
  rx1138_done2649:
    rx1138_cur."!cursor_fail"()
    .return (rx1138_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1383915013.33774") :anon :lex :outer("cuid_134_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1278
    .local pmc fb_tmp_174 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2660
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_174, $P5002
    repr_defined $I5001, fb_tmp_174
    unless $I5001 goto if1141_else2661 
    set $P5004, fb_tmp_174["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1141_end2662
  if1141_else2661:
    null $P5005
    set $P5006, $P5005
  if1141_end2662:
    unless_null $P5006, vivi_11422663
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_11422663:
    unless_null $P5006, vivi_11432664
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_11432664:
    set $P5001, $P5006
  fallback2660:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_135_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1282
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1157_start
    .local string rx1157_tgt
    .local int rx1157_pos
    .local int rx1157_off
    .local int rx1157_eos
    .local int rx1157_rep
    .local pmc rx1157_cur
    .local pmc rx1157_curclass
    .local pmc rx1157_bstack
    .local pmc rx1157_cstack
    rx1157_start = self."!cursor_start_all"()
    set rx1157_cur, rx1157_start[0]
    set rx1157_tgt, rx1157_start[1]
    set rx1157_pos, rx1157_start[2]
    set rx1157_curclass, rx1157_start[3]
    set rx1157_bstack, rx1157_start[4]
    set $I19, rx1157_start[5]
    store_lex unicode:"$\x{a2}", rx1157_cur
    length rx1157_eos, rx1157_tgt
    eq $I19, 1, rx1157_restart2693
    gt rx1157_pos, rx1157_eos, rx1157_fail2694
    repr_get_attr_int $I11, self, rx1157_curclass, "$!from"
    ne $I11, -1, rxscan1158_done2700
    goto rxscan1158_scan2699
  rxscan1158_loop2698:
    inc rx1157_pos
    gt rx1157_pos, rx1157_eos, rx1157_fail2694
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!from", rx1157_pos
  rxscan1158_scan2699:
    nqp_rxmark rx1157_bstack, rxscan1158_loop2698, rx1157_pos, 0
  rxscan1158_done2700:
    nqp_rxmark rx1157_bstack, rxquantr1159_done2702, rx1157_pos, 0
  rxquantr1159_loop2701:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1160_pass2703, -1, 0
  rxsubrule1160_pass2703:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxmark rx1157_bstack, rxquantr1161_done2705, rx1157_pos, 0
  rxquantr1161_loop2704:
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:":", rx1157_fail2694
    add rx1157_pos, 1
    nqp_rxmark rx1157_bstack, rxcap1162_fail2707, rx1157_pos, 0
    ge rx1157_pos, rx1157_eos, rx1157_fail2694
    substr $S11, rx1157_tgt, rx1157_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1157_fail2694
    inc rx1157_pos
    nqp_rxpeek $I19, rx1157_bstack, rxcap1162_fail2707
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1162_done2706
  rxcap1162_fail2707:
    goto rx1157_fail2694
  rxcap1162_done2706:
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1161_done2705
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1161_done2705
    inc rx1157_rep
  rxquantr1161_done2705:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1159_done2702
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1159_done2702
    inc rx1157_rep
    nqp_rxmark rx1157_bstack, rxquantr1159_done2702, rx1157_pos, rx1157_rep
    goto rxquantr1159_loop2701
  rxquantr1159_done2702:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1164_02710
    nqp_push_label $P11, alt1164_12714
    nqp_rxmark rx1157_bstack, alt1164_end2709, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__27_1383915019.04878", $P11)
    goto rx1157_fail2694
  alt1164_02710:
    nqp_rxmark rx1157_bstack, rxcap1165_fail2712, rx1157_pos, 0
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"*", rx1157_fail2694
    add rx1157_pos, 1
    nqp_rxpeek $I19, rx1157_bstack, rxcap1165_fail2712
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "quant")
    goto rxcap1165_done2711
  rxcap1165_fail2712:
    goto rx1157_fail2694
  rxcap1165_done2711:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1166_pass2713, -1, 0
  rxsubrule1166_pass2713:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1164_end2709
  alt1164_12714:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1167_02716
    nqp_push_label $P11, alt1167_12718
    nqp_rxmark rx1157_bstack, alt1167_end2715, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__25_1383915019.04752", $P11)
    goto rx1157_fail2694
  alt1167_02716:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1168_pass2717, -1, 0
  rxsubrule1168_pass2717:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1167_end2715
  alt1167_12718:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1169_pass2719, -1, 0
  rxsubrule1169_pass2719:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1167_end2715
  alt1167_end2715:
    nqp_rxcommit rx1157_bstack, alt1167_end2715
    nqp_rxmark rx1157_bstack, rxcap1170_fail2721, rx1157_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1171_02723
    nqp_push_label $P11, alt1171_12724
    nqp_push_label $P11, alt1171_22725
    nqp_rxmark rx1157_bstack, alt1171_end2722, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__26_1383915019.04811", $P11)
    goto rx1157_fail2694
  alt1171_02723:
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"?", rx1157_fail2694
    add rx1157_pos, 1
    goto alt1171_end2722
  alt1171_12724:
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"!", rx1157_fail2694
    add rx1157_pos, 1
    goto alt1171_end2722
  alt1171_22725:
    goto alt1171_end2722
  alt1171_end2722:
    nqp_rxcommit rx1157_bstack, alt1171_end2722
    nqp_rxpeek $I19, rx1157_bstack, rxcap1170_fail2721
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "quant")
    goto rxcap1170_done2720
  rxcap1170_fail2721:
    goto rx1157_fail2694
  rxcap1170_done2720:
    goto alt1164_end2709
  alt1164_end2709:
    nqp_rxcommit rx1157_bstack, alt1164_end2709
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxmark rx1157_bstack, rxquantr1174_done2729, rx1157_pos, 0
  rxquantr1174_loop2728:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    goto rxsubrule1175_pass2730
  rxsubrule1175_back2731:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
  rxsubrule1175_pass2730:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1175_back2731
    push rx1157_bstack, $I11
    push rx1157_bstack, 0
    push rx1157_bstack, rx1157_pos
    elements $I11, rx1157_cstack
    push rx1157_bstack, $I11
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1174_done2729
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1174_done2729
    inc rx1157_rep
  rxquantr1174_done2729:
    rx1157_cur."!cursor_pass"(rx1157_pos, "parameter", 'backtrack'=>1)
    .return (rx1157_cur)
  rx1157_restart2693:
    repr_get_attr_obj rx1157_cstack, rx1157_cur, rx1157_curclass, "$!cstack"
  rx1157_fail2694:
    unless rx1157_bstack, rx1157_done2692
    pop $I19, rx1157_bstack
    if_null rx1157_cstack, rx1157_cstack_done2697
    unless rx1157_cstack, rx1157_cstack_done2697
    dec $I19
    set $P11, rx1157_cstack[$I19]
  rx1157_cstack_done2697:
    pop rx1157_rep, rx1157_bstack
    pop rx1157_pos, rx1157_bstack
    pop $I19, rx1157_bstack
    lt rx1157_pos, -1, rx1157_done2692
    lt rx1157_pos, 0, rx1157_fail2694
    eq $I19, 0, rx1157_fail2694
    nqp_islist $I20, rx1157_cstack
    unless $I20, rx1157_jump2695
    elements $I18, rx1157_bstack
    le $I18, 0, rx1157_cut2696
    dec $I18
    set $I18, rx1157_bstack[$I18]
  rx1157_cut2696:
    assign rx1157_cstack, $I18
  rx1157_jump2695:
    jump $I19
  rx1157_done2692:
    rx1157_cur."!cursor_fail"()
    .return (rx1157_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_136_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1291
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1176_start
    .local string rx1176_tgt
    .local int rx1176_pos
    .local int rx1176_off
    .local int rx1176_eos
    .local int rx1176_rep
    .local pmc rx1176_cur
    .local pmc rx1176_curclass
    .local pmc rx1176_bstack
    .local pmc rx1176_cstack
    rx1176_start = self."!cursor_start_all"()
    set rx1176_cur, rx1176_start[0]
    set rx1176_tgt, rx1176_start[1]
    set rx1176_pos, rx1176_start[2]
    set rx1176_curclass, rx1176_start[3]
    set rx1176_bstack, rx1176_start[4]
    set $I19, rx1176_start[5]
    store_lex unicode:"$\x{a2}", rx1176_cur
    length rx1176_eos, rx1176_tgt
    eq $I19, 1, rx1176_restart2734
    gt rx1176_pos, rx1176_eos, rx1176_fail2735
    repr_get_attr_int $I11, self, rx1176_curclass, "$!from"
    ne $I11, -1, rxscan1177_done2741
    goto rxscan1177_scan2740
  rxscan1177_loop2739:
    inc rx1176_pos
    gt rx1176_pos, rx1176_eos, rx1176_fail2735
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!from", rx1176_pos
  rxscan1177_scan2740:
    nqp_rxmark rx1176_bstack, rxscan1177_loop2739, rx1176_pos, 0
  rxscan1177_done2741:
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
    nqp_rxmark rx1176_bstack, rxsubrule1178_pass2742, -1, 0
  rxsubrule1178_pass2742:
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1176_pos, $P11, rx1176_curclass, "$!pos"
    nqp_rxmark rx1176_bstack, rxquantr1179_done2744, rx1176_pos, 0
  rxquantr1179_loop2743:
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
    goto rxsubrule1180_pass2745
  rxsubrule1180_back2746:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
  rxsubrule1180_pass2745:
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1180_back2746
    push rx1176_bstack, $I11
    push rx1176_bstack, 0
    push rx1176_bstack, rx1176_pos
    elements $I11, rx1176_cstack
    push rx1176_bstack, $I11
    repr_get_attr_int rx1176_pos, $P11, rx1176_curclass, "$!pos"
    nqp_rxpeek $I19, rx1176_bstack, rxquantr1179_done2744
    inc $I19
    inc $I19
    set rx1176_rep, rx1176_bstack[$I19]
    nqp_rxcommit rx1176_bstack, rxquantr1179_done2744
    inc rx1176_rep
  rxquantr1179_done2744:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1181_02748
    nqp_push_label $P11, alt1181_12750
    nqp_rxmark rx1176_bstack, alt1181_end2747, -1, 0
    rx1176_cur."!alt"(rx1176_pos, "alt_nfa__28_1383915019.07081", $P11)
    goto rx1176_fail2735
  alt1181_02748:
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
    nqp_rxmark rx1176_bstack, rxsubrule1182_pass2749, -1, 0
  rxsubrule1182_pass2749:
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1176_pos, $P11, rx1176_curclass, "$!pos"
    goto alt1181_end2747
  alt1181_12750:
    nqp_rxmark rx1176_bstack, rxcap1183_fail2752, rx1176_pos, 0
    ge rx1176_pos, rx1176_eos, rx1176_fail2735
    substr $S11, rx1176_tgt, rx1176_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1176_fail2735
    inc rx1176_pos
    nqp_rxpeek $I19, rx1176_bstack, rxcap1183_fail2752
    inc $I19
    set $I11, rx1176_bstack[$I19]
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1176_pos)
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "name")
    goto rxcap1183_done2751
  rxcap1183_fail2752:
    goto rx1176_fail2735
  rxcap1183_done2751:
    goto alt1181_end2747
  alt1181_end2747:
    nqp_rxcommit rx1176_bstack, alt1181_end2747
    rx1176_cur."!cursor_pass"(rx1176_pos, "param_var", 'backtrack'=>1)
    .return (rx1176_cur)
  rx1176_restart2734:
    repr_get_attr_obj rx1176_cstack, rx1176_cur, rx1176_curclass, "$!cstack"
  rx1176_fail2735:
    unless rx1176_bstack, rx1176_done2733
    pop $I19, rx1176_bstack
    if_null rx1176_cstack, rx1176_cstack_done2738
    unless rx1176_cstack, rx1176_cstack_done2738
    dec $I19
    set $P11, rx1176_cstack[$I19]
  rx1176_cstack_done2738:
    pop rx1176_rep, rx1176_bstack
    pop rx1176_pos, rx1176_bstack
    pop $I19, rx1176_bstack
    lt rx1176_pos, -1, rx1176_done2733
    lt rx1176_pos, 0, rx1176_fail2735
    eq $I19, 0, rx1176_fail2735
    nqp_islist $I20, rx1176_cstack
    unless $I20, rx1176_jump2736
    elements $I18, rx1176_bstack
    le $I18, 0, rx1176_cut2737
    dec $I18
    set $I18, rx1176_bstack[$I18]
  rx1176_cut2737:
    assign rx1176_cstack, $I18
  rx1176_jump2736:
    jump $I19
  rx1176_done2733:
    rx1176_cur."!cursor_fail"()
    .return (rx1176_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_137_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1184_start
    .local string rx1184_tgt
    .local int rx1184_pos
    .local int rx1184_off
    .local int rx1184_eos
    .local int rx1184_rep
    .local pmc rx1184_cur
    .local pmc rx1184_curclass
    .local pmc rx1184_bstack
    .local pmc rx1184_cstack
    rx1184_start = self."!cursor_start_all"()
    set rx1184_cur, rx1184_start[0]
    set rx1184_tgt, rx1184_start[1]
    set rx1184_pos, rx1184_start[2]
    set rx1184_curclass, rx1184_start[3]
    set rx1184_bstack, rx1184_start[4]
    set $I19, rx1184_start[5]
    store_lex unicode:"$\x{a2}", rx1184_cur
    length rx1184_eos, rx1184_tgt
    eq $I19, 1, rx1184_restart2755
    gt rx1184_pos, rx1184_eos, rx1184_fail2756
    repr_get_attr_int $I11, self, rx1184_curclass, "$!from"
    ne $I11, -1, rxscan1185_done2762
    goto rxscan1185_scan2761
  rxscan1185_loop2760:
    inc rx1184_pos
    index rx1184_pos, rx1184_tgt, ucs4:":", rx1184_pos
    eq rx1184_pos, -1, rx1184_fail2756
    repr_bind_attr_int rx1184_cur, rx1184_curclass, "$!from", rx1184_pos
  rxscan1185_scan2761:
    nqp_rxmark rx1184_bstack, rxscan1185_loop2760, rx1184_pos, 0
  rxscan1185_done2762:
    add $I11, rx1184_pos, 1
    gt $I11, rx1184_eos, rx1184_fail2756
    substr $S10, rx1184_tgt, rx1184_pos, 1
    ne $S10, ucs4:":", rx1184_fail2756
    add rx1184_pos, 1
    repr_bind_attr_int rx1184_cur, rx1184_curclass, "$!pos", rx1184_pos
    $P11 = rx1184_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1184_curclass, "$!pos"
    lt $I11, 0, rx1184_fail2756
    nqp_rxmark rx1184_bstack, rxsubrule1186_pass2763, -1, 0
  rxsubrule1186_pass2763:
    rx1184_cstack = rx1184_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1184_pos, $P11, rx1184_curclass, "$!pos"
    rx1184_cur."!cursor_pass"(rx1184_pos, "named_param", 'backtrack'=>1)
    .return (rx1184_cur)
  rx1184_restart2755:
    repr_get_attr_obj rx1184_cstack, rx1184_cur, rx1184_curclass, "$!cstack"
  rx1184_fail2756:
    unless rx1184_bstack, rx1184_done2754
    pop $I19, rx1184_bstack
    if_null rx1184_cstack, rx1184_cstack_done2759
    unless rx1184_cstack, rx1184_cstack_done2759
    dec $I19
    set $P11, rx1184_cstack[$I19]
  rx1184_cstack_done2759:
    pop rx1184_rep, rx1184_bstack
    pop rx1184_pos, rx1184_bstack
    pop $I19, rx1184_bstack
    lt rx1184_pos, -1, rx1184_done2754
    lt rx1184_pos, 0, rx1184_fail2756
    eq $I19, 0, rx1184_fail2756
    nqp_islist $I20, rx1184_cstack
    unless $I20, rx1184_jump2757
    elements $I18, rx1184_bstack
    le $I18, 0, rx1184_cut2758
    dec $I18
    set $I18, rx1184_bstack[$I18]
  rx1184_cut2758:
    assign rx1184_cstack, $I18
  rx1184_jump2757:
    jump $I19
  rx1184_done2754:
    rx1184_cur."!cursor_fail"()
    .return (rx1184_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_138_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1300
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1187_start
    .local string rx1187_tgt
    .local int rx1187_pos
    .local int rx1187_off
    .local int rx1187_eos
    .local int rx1187_rep
    .local pmc rx1187_cur
    .local pmc rx1187_curclass
    .local pmc rx1187_bstack
    .local pmc rx1187_cstack
    rx1187_start = self."!cursor_start_all"()
    set rx1187_cur, rx1187_start[0]
    set rx1187_tgt, rx1187_start[1]
    set rx1187_pos, rx1187_start[2]
    set rx1187_curclass, rx1187_start[3]
    set rx1187_bstack, rx1187_start[4]
    set $I19, rx1187_start[5]
    store_lex unicode:"$\x{a2}", rx1187_cur
    length rx1187_eos, rx1187_tgt
    eq $I19, 1, rx1187_restart2766
    gt rx1187_pos, rx1187_eos, rx1187_fail2767
    repr_get_attr_int $I11, self, rx1187_curclass, "$!from"
    ne $I11, -1, rxscan1188_done2773
    goto rxscan1188_scan2772
  rxscan1188_loop2771:
    inc rx1187_pos
    gt rx1187_pos, rx1187_eos, rx1187_fail2767
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!from", rx1187_pos
  rxscan1188_scan2772:
    nqp_rxmark rx1187_bstack, rxscan1188_loop2771, rx1187_pos, 0
  rxscan1188_done2773:
    add $I11, rx1187_pos, 1
    gt $I11, rx1187_eos, rx1187_fail2767
    substr $S10, rx1187_tgt, rx1187_pos, 1
    ne $S10, ucs4:"=", rx1187_fail2767
    add rx1187_pos, 1
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
    goto rxsubrule1189_pass2774
  rxsubrule1189_back2775:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
  rxsubrule1189_pass2774:
    rx1187_cstack = rx1187_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1189_back2775
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
    goto rxsubrule1190_pass2776
  rxsubrule1190_back2777:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
  rxsubrule1190_pass2776:
    rx1187_cstack = rx1187_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1190_back2777
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
    goto rxsubrule1191_pass2778
  rxsubrule1191_back2779:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
  rxsubrule1191_pass2778:
    rx1187_cstack = rx1187_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1191_back2779
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    rx1187_cur."!cursor_pass"(rx1187_pos, "default_value", 'backtrack'=>1)
    .return (rx1187_cur)
  rx1187_restart2766:
    repr_get_attr_obj rx1187_cstack, rx1187_cur, rx1187_curclass, "$!cstack"
  rx1187_fail2767:
    unless rx1187_bstack, rx1187_done2765
    pop $I19, rx1187_bstack
    if_null rx1187_cstack, rx1187_cstack_done2770
    unless rx1187_cstack, rx1187_cstack_done2770
    dec $I19
    set $P11, rx1187_cstack[$I19]
  rx1187_cstack_done2770:
    pop rx1187_rep, rx1187_bstack
    pop rx1187_pos, rx1187_bstack
    pop $I19, rx1187_bstack
    lt rx1187_pos, -1, rx1187_done2765
    lt rx1187_pos, 0, rx1187_fail2767
    eq $I19, 0, rx1187_fail2767
    nqp_islist $I20, rx1187_cstack
    unless $I20, rx1187_jump2768
    elements $I18, rx1187_bstack
    le $I18, 0, rx1187_cut2769
    dec $I18
    set $I18, rx1187_bstack[$I18]
  rx1187_cut2769:
    assign rx1187_cstack, $I18
  rx1187_jump2768:
    jump $I19
  rx1187_done2765:
    rx1187_cur."!cursor_fail"()
    .return (rx1187_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_139_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1302
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1192_start
    .local string rx1192_tgt
    .local int rx1192_pos
    .local int rx1192_off
    .local int rx1192_eos
    .local int rx1192_rep
    .local pmc rx1192_cur
    .local pmc rx1192_curclass
    .local pmc rx1192_bstack
    .local pmc rx1192_cstack
    rx1192_start = self."!cursor_start_all"()
    set rx1192_cur, rx1192_start[0]
    set rx1192_tgt, rx1192_start[1]
    set rx1192_pos, rx1192_start[2]
    set rx1192_curclass, rx1192_start[3]
    set rx1192_bstack, rx1192_start[4]
    set $I19, rx1192_start[5]
    store_lex unicode:"$\x{a2}", rx1192_cur
    length rx1192_eos, rx1192_tgt
    eq $I19, 1, rx1192_restart2782
    gt rx1192_pos, rx1192_eos, rx1192_fail2783
    repr_get_attr_int $I11, self, rx1192_curclass, "$!from"
    ne $I11, -1, rxscan1193_done2789
    goto rxscan1193_scan2788
  rxscan1193_loop2787:
    inc rx1192_pos
    gt rx1192_pos, rx1192_eos, rx1192_fail2783
    repr_bind_attr_int rx1192_cur, rx1192_curclass, "$!from", rx1192_pos
  rxscan1193_scan2788:
    nqp_rxmark rx1192_bstack, rxscan1193_loop2787, rx1192_pos, 0
  rxscan1193_done2789:
    repr_bind_attr_int rx1192_cur, rx1192_curclass, "$!pos", rx1192_pos
    $P11 = rx1192_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1192_curclass, "$!pos"
    lt $I11, 0, rx1192_fail2783
    nqp_rxmark rx1192_bstack, rxsubrule1194_pass2790, -1, 0
  rxsubrule1194_pass2790:
    rx1192_cstack = rx1192_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1192_pos, $P11, rx1192_curclass, "$!pos"
    rx1192_cur."!cursor_pass"(rx1192_pos, "trait", 'backtrack'=>1)
    .return (rx1192_cur)
  rx1192_restart2782:
    repr_get_attr_obj rx1192_cstack, rx1192_cur, rx1192_curclass, "$!cstack"
  rx1192_fail2783:
    unless rx1192_bstack, rx1192_done2781
    pop $I19, rx1192_bstack
    if_null rx1192_cstack, rx1192_cstack_done2786
    unless rx1192_cstack, rx1192_cstack_done2786
    dec $I19
    set $P11, rx1192_cstack[$I19]
  rx1192_cstack_done2786:
    pop rx1192_rep, rx1192_bstack
    pop rx1192_pos, rx1192_bstack
    pop $I19, rx1192_bstack
    lt rx1192_pos, -1, rx1192_done2781
    lt rx1192_pos, 0, rx1192_fail2783
    eq $I19, 0, rx1192_fail2783
    nqp_islist $I20, rx1192_cstack
    unless $I20, rx1192_jump2784
    elements $I18, rx1192_bstack
    le $I18, 0, rx1192_cut2785
    dec $I18
    set $I18, rx1192_bstack[$I18]
  rx1192_cut2785:
    assign rx1192_cstack, $I18
  rx1192_jump2784:
    jump $I19
  rx1192_done2781:
    rx1192_cur."!cursor_fail"()
    .return (rx1192_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_140_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1304
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_141_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1305
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1195_start
    .local string rx1195_tgt
    .local int rx1195_pos
    .local int rx1195_off
    .local int rx1195_eos
    .local int rx1195_rep
    .local pmc rx1195_cur
    .local pmc rx1195_curclass
    .local pmc rx1195_bstack
    .local pmc rx1195_cstack
    rx1195_start = self."!cursor_start_all"()
    set rx1195_cur, rx1195_start[0]
    set rx1195_tgt, rx1195_start[1]
    set rx1195_pos, rx1195_start[2]
    set rx1195_curclass, rx1195_start[3]
    set rx1195_bstack, rx1195_start[4]
    set $I19, rx1195_start[5]
    store_lex unicode:"$\x{a2}", rx1195_cur
    length rx1195_eos, rx1195_tgt
    eq $I19, 1, rx1195_restart2793
    gt rx1195_pos, rx1195_eos, rx1195_fail2794
    repr_get_attr_int $I11, self, rx1195_curclass, "$!from"
    ne $I11, -1, rxscan1196_done2800
    goto rxscan1196_scan2799
  rxscan1196_loop2798:
    inc rx1195_pos
    gt rx1195_pos, rx1195_eos, rx1195_fail2794
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!from", rx1195_pos
  rxscan1196_scan2799:
    nqp_rxmark rx1195_bstack, rxscan1196_loop2798, rx1195_pos, 0
  rxscan1196_done2800:
    nqp_rxmark rx1195_bstack, rxcap1197_fail2802, rx1195_pos, 0
    add $I11, rx1195_pos, 2
    gt $I11, rx1195_eos, rx1195_fail2794
    substr $S10, rx1195_tgt, rx1195_pos, 2
    ne $S10, ucs4:"is", rx1195_fail2794
    add rx1195_pos, 2
    nqp_rxpeek $I19, rx1195_bstack, rxcap1197_fail2802
    inc $I19
    set $I11, rx1195_bstack[$I19]
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1195_pos)
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "sym")
    goto rxcap1197_done2801
  rxcap1197_fail2802:
    goto rx1195_fail2794
  rxcap1197_done2801:
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    goto rxsubrule1198_pass2803
  rxsubrule1198_back2804:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
  rxsubrule1198_pass2803:
    rx1195_cstack = rx1195_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1198_back2804
    push rx1195_bstack, $I11
    push rx1195_bstack, 0
    push rx1195_bstack, rx1195_pos
    elements $I11, rx1195_cstack
    push rx1195_bstack, $I11
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    nqp_rxmark rx1195_bstack, rxsubrule1199_pass2805, -1, 0
  rxsubrule1199_pass2805:
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    nqp_rxmark rx1195_bstack, rxquantg1200_done2807, rx1195_pos, 0
  rxquantg1200_loop2806:
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    goto rxsubrule1201_pass2808
  rxsubrule1201_back2809:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
  rxsubrule1201_pass2808:
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1201_back2809
    push rx1195_bstack, $I11
    push rx1195_bstack, 0
    push rx1195_bstack, rx1195_pos
    elements $I11, rx1195_cstack
    push rx1195_bstack, $I11
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
  rxquantg1200_done2807:
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    goto rxsubrule1202_pass2810
  rxsubrule1202_back2811:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
  rxsubrule1202_pass2810:
    rx1195_cstack = rx1195_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1202_back2811
    push rx1195_bstack, $I11
    push rx1195_bstack, 0
    push rx1195_bstack, rx1195_pos
    elements $I11, rx1195_cstack
    push rx1195_bstack, $I11
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    rx1195_cur."!cursor_pass"(rx1195_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1195_cur)
  rx1195_restart2793:
    repr_get_attr_obj rx1195_cstack, rx1195_cur, rx1195_curclass, "$!cstack"
  rx1195_fail2794:
    unless rx1195_bstack, rx1195_done2792
    pop $I19, rx1195_bstack
    if_null rx1195_cstack, rx1195_cstack_done2797
    unless rx1195_cstack, rx1195_cstack_done2797
    dec $I19
    set $P11, rx1195_cstack[$I19]
  rx1195_cstack_done2797:
    pop rx1195_rep, rx1195_bstack
    pop rx1195_pos, rx1195_bstack
    pop $I19, rx1195_bstack
    lt rx1195_pos, -1, rx1195_done2792
    lt rx1195_pos, 0, rx1195_fail2794
    eq $I19, 0, rx1195_fail2794
    nqp_islist $I20, rx1195_cstack
    unless $I20, rx1195_jump2795
    elements $I18, rx1195_bstack
    le $I18, 0, rx1195_cut2796
    dec $I18
    set $I18, rx1195_bstack[$I18]
  rx1195_cut2796:
    assign rx1195_cstack, $I18
  rx1195_jump2795:
    jump $I19
  rx1195_done2792:
    rx1195_cur."!cursor_fail"()
    .return (rx1195_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_142_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1307
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_432_1383915013.33774' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_175 
    .local pmc pkg_viv_tmp_26 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1203_start
    .local string rx1203_tgt
    .local int rx1203_pos
    .local int rx1203_off
    .local int rx1203_eos
    .local int rx1203_rep
    .local pmc rx1203_cur
    .local pmc rx1203_curclass
    .local pmc rx1203_bstack
    .local pmc rx1203_cstack
    rx1203_start = self."!cursor_start_all"()
    set rx1203_cur, rx1203_start[0]
    set rx1203_tgt, rx1203_start[1]
    set rx1203_pos, rx1203_start[2]
    set rx1203_curclass, rx1203_start[3]
    set rx1203_bstack, rx1203_start[4]
    set $I19, rx1203_start[5]
    store_lex unicode:"$\x{a2}", rx1203_cur
    length rx1203_eos, rx1203_tgt
    eq $I19, 1, rx1203_restart2814
    gt rx1203_pos, rx1203_eos, rx1203_fail2815
    repr_get_attr_int $I11, self, rx1203_curclass, "$!from"
    ne $I11, -1, rxscan1204_done2821
    goto rxscan1204_scan2820
  rxscan1204_loop2819:
    inc rx1203_pos
    gt rx1203_pos, rx1203_eos, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!from", rx1203_pos
  rxscan1204_scan2820:
    nqp_rxmark rx1203_bstack, rxscan1204_loop2819, rx1203_pos, 0
  rxscan1204_done2821:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1205_02823
    nqp_push_label $P11, alt1205_12876
    nqp_rxmark rx1203_bstack, alt1205_end2822, -1, 0
    rx1203_cur."!alt"(rx1203_pos, "alt_nfa__31_1383915019.36349", $P11)
    goto rx1203_fail2815
  alt1205_02823:
    nqp_rxmark rx1203_bstack, rxcap1206_fail2825, rx1203_pos, 0
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"proto", rx1203_fail2815
    add rx1203_pos, 5
    nqp_rxpeek $I19, rx1203_bstack, rxcap1206_fail2825
    inc $I19
    set $I11, rx1203_bstack[$I19]
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1203_pos)
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "proto")
    goto rxcap1206_done2824
  rxcap1206_fail2825:
    goto rx1203_fail2815
  rxcap1206_done2824:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1207_pass2826
  rxsubrule1207_back2827:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1207_pass2826:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1207_back2827
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1208_02829
    nqp_push_label $P11, alt1208_12830
    nqp_push_label $P11, alt1208_22831
    nqp_rxmark rx1203_bstack, alt1208_end2828, -1, 0
    rx1203_cur."!alt"(rx1203_pos, "alt_nfa__29_1383915019.29482", $P11)
    goto rx1203_fail2815
  alt1208_02829:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"regex", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1208_end2828
  alt1208_12830:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"token", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1208_end2828
  alt1208_22831:
    add $I11, rx1203_pos, 4
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 4
    ne $S10, ucs4:"rule", rx1203_fail2815
    add rx1203_pos, 4
    goto alt1208_end2828
  alt1208_end2828:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1209_pass2832
  rxsubrule1209_back2833:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1209_pass2832:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1209_back2833
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1210_02835:
    nqp_rxmark rx1203_bstack, alt1210_12844, rx1203_pos, 0
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"::(", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1211_pass2836
  rxsubrule1211_back2837:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1211_pass2836:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1211_back2837
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1212_pass2838
  rxsubrule1212_back2839:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1212_pass2838:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1212_back2839
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1213_pass2840
  rxsubrule1213_back2841:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1213_pass2840:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1213_back2841
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:")", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1214_pass2842
  rxsubrule1214_back2843:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1214_pass2842:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1214_back2843
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1210_end2834
  alt1210_12844:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1215_pass2845
  rxsubrule1215_back2846:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1215_pass2845:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1215_back2846
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1216_pass2847
  rxsubrule1216_back2848:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1216_pass2847:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1216_back2848
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1210_end2834:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1217_pass2849
  rxsubrule1217_back2850:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1217_pass2849:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1217_back2850
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1218_02852:
    nqp_rxmark rx1203_bstack, alt1218_12855, rx1203_pos, 0
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"{*}", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1219_pass2853
  rxsubrule1219_back2854:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1219_pass2853:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1219_back2854
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1218_end2851
  alt1218_12855:
    nqp_rxmark rx1203_bstack, alt1218_22862, rx1203_pos, 0
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"{", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1220_pass2856
  rxsubrule1220_back2857:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1220_pass2856:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1220_back2857
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"<...>", rx1203_fail2815
    add rx1203_pos, 5
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1221_pass2858
  rxsubrule1221_back2859:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1221_pass2858:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1221_back2859
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"}", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1222_pass2860
  rxsubrule1222_back2861:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1222_pass2860:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1222_back2861
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1218_end2851
  alt1218_22862:
    nqp_rxmark rx1203_bstack, alt1218_32869, rx1203_pos, 0
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"{", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1223_pass2863
  rxsubrule1223_back2864:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1223_pass2863:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1223_back2864
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"<*>", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1224_pass2865
  rxsubrule1224_back2866:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1224_pass2865:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1224_back2866
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"}", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1225_pass2867
  rxsubrule1225_back2868:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1225_pass2867:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1225_back2868
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1218_end2851
  alt1218_32869:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."panic"("Proto regex body must be {*} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1226_pass2870
  rxsubrule1226_back2871:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1226_pass2870:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1226_back2871
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1227_pass2872
  rxsubrule1227_back2873:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1227_pass2872:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1227_back2873
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1218_end2851:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1228_pass2874
  rxsubrule1228_back2875:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1228_pass2874:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1228_back2875
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1205_end2822
  alt1205_12876:
    nqp_rxmark rx1203_bstack, rxcap1229_fail2878, rx1203_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1230_02880
    nqp_push_label $P11, alt1230_12881
    nqp_push_label $P11, alt1230_22882
    nqp_rxmark rx1203_bstack, alt1230_end2879, -1, 0
    rx1203_cur."!alt"(rx1203_pos, "alt_nfa__30_1383915019.36219", $P11)
    goto rx1203_fail2815
  alt1230_02880:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"regex", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1230_end2879
  alt1230_12881:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"token", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1230_end2879
  alt1230_22882:
    add $I11, rx1203_pos, 4
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 4
    ne $S10, ucs4:"rule", rx1203_fail2815
    add rx1203_pos, 4
    goto alt1230_end2879
  alt1230_end2879:
    nqp_rxcommit rx1203_bstack, alt1230_end2879
    nqp_rxpeek $I19, rx1203_bstack, rxcap1229_fail2878
    inc $I19
    set $I11, rx1203_bstack[$I19]
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1203_pos)
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "sym")
    goto rxcap1229_done2877
  rxcap1229_fail2878:
    goto rx1203_fail2815
  rxcap1229_done2877:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1231_pass2883
  rxsubrule1231_back2884:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1231_pass2883:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1231_back2884
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1232_02886:
    nqp_rxmark rx1203_bstack, alt1232_12895, rx1203_pos, 0
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"::(", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1233_pass2887
  rxsubrule1233_back2888:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1233_pass2887:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1233_back2888
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1234_pass2889
  rxsubrule1234_back2890:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1234_pass2889:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1234_back2890
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1235_pass2891
  rxsubrule1235_back2892:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1235_pass2891:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1235_back2892
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:")", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1236_pass2893
  rxsubrule1236_back2894:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1236_pass2893:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1236_back2894
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1232_end2885
  alt1232_12895:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1237_pass2896
  rxsubrule1237_back2897:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1237_pass2896:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1237_back2897
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1238_pass2898
  rxsubrule1238_back2899:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1238_pass2898:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1238_back2899
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1232_end2885:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1239_pass2900
  rxsubrule1239_back2901:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1239_pass2900:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1239_back2901
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1240_pass2902
  rxsubrule1240_back2903:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1240_pass2902:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1240_back2903
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1241_pass2904
  rxsubrule1241_back2905:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1241_pass2904:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1241_back2905
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    nqp_rxmark rx1203_bstack, rxquantg1242_done2907, rx1203_pos, 0
  rxquantg1242_loop2906:
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"(", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1243_pass2908
  rxsubrule1243_back2909:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1243_pass2908:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1243_back2909
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1244_pass2910
  rxsubrule1244_back2911:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1244_pass2910:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1244_back2911
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1245_pass2912
  rxsubrule1245_back2913:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1245_pass2912:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1245_back2913
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1246_02915:
    nqp_rxmark rx1203_bstack, alt1246_12918, rx1203_pos, 0
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:")", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1247_pass2916
  rxsubrule1247_back2917:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1247_pass2916:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1247_back2917
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1246_end2914
  alt1246_12918:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1248_pass2919
  rxsubrule1248_back2920:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1248_pass2919:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1248_back2920
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1246_end2914:
  rxquantg1242_done2907:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1249_pass2921
  rxsubrule1249_back2922:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1249_pass2921:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1249_back2922
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    store_lex unicode:"$\x{a2}", rx1203_cur
    unless_null $P101, fallback2923
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_26, $P5002
    set fb_tmp_175, pkg_viv_tmp_26
    repr_defined $I5001, fb_tmp_175
    unless $I5001 goto if1250_else2924 
    set $P5004, fb_tmp_175["%RX"]
    set $P5006, $P5004
    goto if1250_end2925
  if1250_else2924:
    null $P5005
    set $P5006, $P5005
  if1250_end2925:
    unless_null $P5006, vivi_12512926
    new $P5007, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5007
    set $P5006, $P5007
  vivi_12512926:
    unless_null $P5006, vivi_12522927
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12522927:
    set $P101, $P5006
  fallback2923:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    store_lex unicode:"$\x{a2}", rx1203_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_432_1383915013.33774' 
    capture_lex $P5010
    $P5011 = $P5010()
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"{", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    nqp_rxmark rx1203_bstack, rxsubrule1290_pass2994, -1, 0
  rxsubrule1290_pass2994:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"}", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1291_pass2995
  rxsubrule1291_back2996:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1291_pass2995:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1291_back2996
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1205_end2822
  alt1205_end2822:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1292_pass2997
  rxsubrule1292_back2998:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1292_pass2997:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1292_back2998
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    rx1203_cur."!cursor_pass"(rx1203_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1203_cur)
  rx1203_restart2814:
    repr_get_attr_obj rx1203_cstack, rx1203_cur, rx1203_curclass, "$!cstack"
  rx1203_fail2815:
    unless rx1203_bstack, rx1203_done2813
    pop $I19, rx1203_bstack
    if_null rx1203_cstack, rx1203_cstack_done2818
    unless rx1203_cstack, rx1203_cstack_done2818
    dec $I19
    set $P11, rx1203_cstack[$I19]
  rx1203_cstack_done2818:
    pop rx1203_rep, rx1203_bstack
    pop rx1203_pos, rx1203_bstack
    pop $I19, rx1203_bstack
    lt rx1203_pos, -1, rx1203_done2813
    lt rx1203_pos, 0, rx1203_fail2815
    eq $I19, 0, rx1203_fail2815
    nqp_islist $I20, rx1203_cstack
    unless $I20, rx1203_jump2816
    elements $I18, rx1203_bstack
    le $I18, 0, rx1203_cut2817
    dec $I18
    set $I18, rx1203_bstack[$I18]
  rx1203_cut2817:
    assign rx1203_cstack, $I18
  rx1203_jump2816:
    jump $I19
  rx1203_done2813:
    rx1203_cur."!cursor_fail"()
    .return (rx1203_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1383915013.33774") :anon :lex :outer("cuid_142_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1328
    .local pmc fb_tmp_176 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_183 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_186 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
    .local pmc fb_tmp_189 
    .local pmc pkg_viv_tmp_31 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2928
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_27, $P5002
    set fb_tmp_176, pkg_viv_tmp_27
    repr_defined $I5001, fb_tmp_176
    unless $I5001 goto if1253_else2929 
    set $P5004, fb_tmp_176["%RX"]
    set $P5006, $P5004
    goto if1253_end2930
  if1253_else2929:
    null $P5005
    set $P5006, $P5005
  if1253_end2930:
    unless_null $P5006, vivi_12542931
    new $P5007, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5007
    set $P5006, $P5007
  vivi_12542931:
    unless_null $P5006, vivi_12552932
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12552932:
    set $P5001, $P5006
  fallback2928:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2935
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  fallback2935:
    set fb_tmp_177, $P5009
    repr_defined $I5003, fb_tmp_177
    unless $I5003 goto if1256_else2933 
    set $P5011, fb_tmp_177["sym"]
    set $P5013, $P5011
    goto if1256_end2934
  if1256_else2933:
    null $P5012
    set $P5013, $P5012
  if1256_end2934:
    unless_null $P5013, vivi_12572936
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_12572936:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2937
    nqp_get_sc_object $P5018, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_28, $P5017
    set fb_tmp_178, pkg_viv_tmp_28
    repr_defined $I5004, fb_tmp_178
    unless $I5004 goto if1258_else2938 
    set $P5019, fb_tmp_178["%RX"]
    set $P5021, $P5019
    goto if1258_end2939
  if1258_else2938:
    null $P5020
    set $P5021, $P5020
  if1258_end2939:
    unless_null $P5021, vivi_12592940
    new $P5022, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5022
    set $P5021, $P5022
  vivi_12592940:
    unless_null $P5021, vivi_12602941
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12602941:
    set $P5016, $P5021
  fallback2937:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2946
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  fallback2946:
    set fb_tmp_179, $P5024
    repr_defined $I5006, fb_tmp_179
    unless $I5006 goto if1262_else2944 
    set $P5026, fb_tmp_179["sym"]
    set $P5028, $P5026
    goto if1262_end2945
  if1262_else2944:
    null $P5027
    set $P5028, $P5027
  if1262_end2945:
    unless_null $P5028, vivi_12632947
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_12632947:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1261_end2943 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2950
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5030, $P5031
  fallback2950:
    set fb_tmp_180, $P5030
    repr_defined $I5008, fb_tmp_180
    unless $I5008 goto if1264_else2948 
    set $P5032, fb_tmp_180["sym"]
    set $P5034, $P5032
    goto if1264_end2949
  if1264_else2948:
    null $P5033
    set $P5034, $P5033
  if1264_end2949:
    unless_null $P5034, vivi_12652951
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  vivi_12652951:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1261_end2943:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2952
    nqp_get_sc_object $P5039, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_29, $P5038
    set fb_tmp_181, pkg_viv_tmp_29
    repr_defined $I5010, fb_tmp_181
    unless $I5010 goto if1266_else2953 
    set $P5040, fb_tmp_181["%RX"]
    set $P5042, $P5040
    goto if1266_end2954
  if1266_else2953:
    null $P5041
    set $P5042, $P5041
  if1266_end2954:
    unless_null $P5042, vivi_12672955
    new $P5043, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5043
    set $P5042, $P5043
  vivi_12672955:
    unless_null $P5042, vivi_12682956
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12682956:
    set $P5037, $P5042
  fallback2952:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2961
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  fallback2961:
    set fb_tmp_182, $P5045
    repr_defined $I5011, fb_tmp_182
    unless $I5011 goto if1270_else2959 
    set $P5047, fb_tmp_182["deflongname"]
    set $P5049, $P5047
    goto if1270_end2960
  if1270_else2959:
    null $P5048
    set $P5049, $P5048
  if1270_end2960:
    unless_null $P5049, vivi_12712962
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_12712962:
    unless $P5049 goto if1269_else2957 
.annotate 'line', 1331
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2965
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5051, $P5052
  fallback2965:
    set fb_tmp_183, $P5051
    repr_defined $I5012, fb_tmp_183
    unless $I5012 goto if1272_else2963 
    set $P5053, fb_tmp_183["deflongname"]
    set $P5055, $P5053
    goto if1272_end2964
  if1272_else2963:
    null $P5054
    set $P5055, $P5054
  if1272_end2964:
    unless_null $P5055, vivi_12732966
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5055, $P5056
  vivi_12732966:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1269_end2958
  if1269_else2957:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2969
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5058, $P5059
  fallback2969:
    set fb_tmp_184, $P5058
    repr_defined $I5013, fb_tmp_184
    unless $I5013 goto if1274_else2967 
    set $P5060, fb_tmp_184["latename"]
    set $P5062, $P5060
    goto if1274_end2968
  if1274_else2967:
    null $P5061
    set $P5062, $P5061
  if1274_end2968:
    unless_null $P5062, vivi_12752970
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5062, $P5063
  vivi_12752970:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1269_end2958:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2971
    nqp_get_sc_object $P5068, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_30, $P5067
    set fb_tmp_185, pkg_viv_tmp_30
    repr_defined $I5014, fb_tmp_185
    unless $I5014 goto if1276_else2972 
    set $P5069, fb_tmp_185["%RX"]
    set $P5071, $P5069
    goto if1276_end2973
  if1276_else2972:
    null $P5070
    set $P5071, $P5070
  if1276_end2973:
    unless_null $P5071, vivi_12772974
    new $P5072, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5072
    set $P5071, $P5072
  vivi_12772974:
    unless_null $P5071, vivi_12782975
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12782975:
    set $P5066, $P5071
  fallback2971:
.annotate 'line', 1332
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2976
    nqp_get_sc_object $P5076, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5075, $P5076
    set fb_tmp_186, $P5075
    repr_defined $I5015, fb_tmp_186
    unless $I5015 goto if1279_else2977 
    set $P5077, fb_tmp_186["$W"]
    set $P5079, $P5077
    goto if1279_end2978
  if1279_else2977:
    null $P5078
    set $P5079, $P5078
  if1279_end2978:
    unless_null $P5079, vivi_12802979
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5079, $P5080
  vivi_12802979:
    unless_null $P5079, vivi_12812980
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_12812980:
    set $P5074, $P5079
  fallback2976:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2981
    nqp_get_sc_object $P5084, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5083, $P5084
    set fb_tmp_187, $P5083
    repr_defined $I5016, fb_tmp_187
    unless $I5016 goto if1282_else2982 
    set $P5085, fb_tmp_187["$W"]
    set $P5087, $P5085
    goto if1282_end2983
  if1282_else2982:
    null $P5086
    set $P5087, $P5086
  if1282_end2983:
    unless_null $P5087, vivi_12832984
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5087, $P5088
  vivi_12832984:
    unless_null $P5087, vivi_12842985
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_12842985:
    set $P5082, $P5087
  fallback2981:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2988
    nqp_get_sc_object $P5093, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_31, $P5092
    set fb_tmp_189, pkg_viv_tmp_31
    repr_defined $I5018, fb_tmp_189
    unless $I5018 goto if1286_else2989 
    set $P5094, fb_tmp_189["%RX"]
    set $P5096, $P5094
    goto if1286_end2990
  if1286_else2989:
    null $P5095
    set $P5096, $P5095
  if1286_end2990:
    unless_null $P5096, vivi_12872991
    new $P5097, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5097
    set $P5096, $P5097
  vivi_12872991:
    unless_null $P5096, vivi_12882992
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_12882992:
    set $P5091, $P5096
  fallback2988:
    set fb_tmp_188, $P5091
    repr_defined $I5017, fb_tmp_188
    unless $I5017 goto if1285_else2986 
    set $P5099, fb_tmp_188["name"]
    set $P5101, $P5099
    goto if1285_end2987
  if1285_else2986:
    null $P5100
    set $P5101, $P5100
  if1285_end2987:
    unless_null $P5101, vivi_12892993
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5101, $P5102
  vivi_12892993:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_143_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1338
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1293_start
    .local string rx1293_tgt
    .local int rx1293_pos
    .local int rx1293_off
    .local int rx1293_eos
    .local int rx1293_rep
    .local pmc rx1293_cur
    .local pmc rx1293_curclass
    .local pmc rx1293_bstack
    .local pmc rx1293_cstack
    rx1293_start = self."!cursor_start_all"()
    set rx1293_cur, rx1293_start[0]
    set rx1293_tgt, rx1293_start[1]
    set rx1293_pos, rx1293_start[2]
    set rx1293_curclass, rx1293_start[3]
    set rx1293_bstack, rx1293_start[4]
    set $I19, rx1293_start[5]
    store_lex unicode:"$\x{a2}", rx1293_cur
    length rx1293_eos, rx1293_tgt
    eq $I19, 1, rx1293_restart3001
    gt rx1293_pos, rx1293_eos, rx1293_fail3002
    repr_get_attr_int $I11, self, rx1293_curclass, "$!from"
    ne $I11, -1, rxscan1294_done3008
    goto rxscan1294_scan3007
  rxscan1294_loop3006:
    inc rx1293_pos
    index rx1293_pos, rx1293_tgt, ucs4:".", rx1293_pos
    eq rx1293_pos, -1, rx1293_fail3002
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!from", rx1293_pos
  rxscan1294_scan3007:
    nqp_rxmark rx1293_bstack, rxscan1294_loop3006, rx1293_pos, 0
  rxscan1294_done3008:
    add $I11, rx1293_pos, 1
    gt $I11, rx1293_eos, rx1293_fail3002
    substr $S10, rx1293_tgt, rx1293_pos, 1
    ne $S10, ucs4:".", rx1293_fail3002
    add rx1293_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1295_03010
    nqp_push_label $P11, alt1295_13012
    nqp_rxmark rx1293_bstack, alt1295_end3009, -1, 0
    rx1293_cur."!alt"(rx1293_pos, "alt_nfa__32_1383915019.40773", $P11)
    goto rx1293_fail3002
  alt1295_03010:
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1296_pass3011, -1, 0
  rxsubrule1296_pass3011:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
    goto alt1295_end3009
  alt1295_13012:
    ge rx1293_pos, rx1293_eos, rx1293_fail3002
    substr $S11, rx1293_tgt, rx1293_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1293_fail3002
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1297_pass3013, -1, 0
  rxsubrule1297_pass3013:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
  alt1298_03015:
    nqp_rxmark rx1293_bstack, alt1298_13016, rx1293_pos, 0
    ge rx1293_pos, rx1293_eos, rx1293_fail3002
    substr $S11, rx1293_tgt, rx1293_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1293_fail3002
    goto alt1298_end3014
  alt1298_13016:
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
  alt1298_end3014:
    goto alt1295_end3009
  alt1295_end3009:
    nqp_rxcommit rx1293_bstack, alt1295_end3009
    nqp_rxmark rx1293_bstack, rxquantr1300_done3019, rx1293_pos, 0
  rxquantr1300_loop3018:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1301_03021
    nqp_push_label $P11, alt1301_13023
    nqp_rxmark rx1293_bstack, alt1301_end3020, -1, 0
    rx1293_cur."!alt"(rx1293_pos, "alt_nfa__33_1383915019.40826", $P11)
    goto rx1293_fail3002
  alt1301_03021:
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."args"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1302_pass3022, -1, 0
  rxsubrule1302_pass3022:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
    goto alt1301_end3020
  alt1301_13023:
    add $I11, rx1293_pos, 1
    gt $I11, rx1293_eos, rx1293_fail3002
    substr $S10, rx1293_tgt, rx1293_pos, 1
    ne $S10, ucs4:":", rx1293_fail3002
    add rx1293_pos, 1
    ge rx1293_pos, rx1293_eos, rx1293_fail3002
    is_cclass $I11, .CCLASS_WHITESPACE, rx1293_tgt, rx1293_pos
    unless $I11, rx1293_fail3002
    add rx1293_pos, 1
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1303_pass3024, -1, 0
  rxsubrule1303_pass3024:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
    goto alt1301_end3020
  alt1301_end3020:
    nqp_rxpeek $I19, rx1293_bstack, rxquantr1300_done3019
    inc $I19
    inc $I19
    set rx1293_rep, rx1293_bstack[$I19]
    nqp_rxcommit rx1293_bstack, rxquantr1300_done3019
    inc rx1293_rep
  rxquantr1300_done3019:
    rx1293_cur."!cursor_pass"(rx1293_pos, "dotty", 'backtrack'=>1)
    .return (rx1293_cur)
  rx1293_restart3001:
    repr_get_attr_obj rx1293_cstack, rx1293_cur, rx1293_curclass, "$!cstack"
  rx1293_fail3002:
    unless rx1293_bstack, rx1293_done3000
    pop $I19, rx1293_bstack
    if_null rx1293_cstack, rx1293_cstack_done3005
    unless rx1293_cstack, rx1293_cstack_done3005
    dec $I19
    set $P11, rx1293_cstack[$I19]
  rx1293_cstack_done3005:
    pop rx1293_rep, rx1293_bstack
    pop rx1293_pos, rx1293_bstack
    pop $I19, rx1293_bstack
    lt rx1293_pos, -1, rx1293_done3000
    lt rx1293_pos, 0, rx1293_fail3002
    eq $I19, 0, rx1293_fail3002
    nqp_islist $I20, rx1293_cstack
    unless $I20, rx1293_jump3003
    elements $I18, rx1293_bstack
    le $I18, 0, rx1293_cut3004
    dec $I18
    set $I18, rx1293_bstack[$I18]
  rx1293_cut3004:
    assign rx1293_cstack, $I18
  rx1293_jump3003:
    jump $I19
  rx1293_done3000:
    rx1293_cur."!cursor_fail"()
    .return (rx1293_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_144_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1304_start
    .local string rx1304_tgt
    .local int rx1304_pos
    .local int rx1304_off
    .local int rx1304_eos
    .local int rx1304_rep
    .local pmc rx1304_cur
    .local pmc rx1304_curclass
    .local pmc rx1304_bstack
    .local pmc rx1304_cstack
    rx1304_start = self."!cursor_start_all"()
    set rx1304_cur, rx1304_start[0]
    set rx1304_tgt, rx1304_start[1]
    set rx1304_pos, rx1304_start[2]
    set rx1304_curclass, rx1304_start[3]
    set rx1304_bstack, rx1304_start[4]
    set $I19, rx1304_start[5]
    store_lex unicode:"$\x{a2}", rx1304_cur
    length rx1304_eos, rx1304_tgt
    eq $I19, 1, rx1304_restart3027
    gt rx1304_pos, rx1304_eos, rx1304_fail3028
    repr_get_attr_int $I11, self, rx1304_curclass, "$!from"
    ne $I11, -1, rxscan1305_done3034
    goto rxscan1305_scan3033
  rxscan1305_loop3032:
    inc rx1304_pos
    gt rx1304_pos, rx1304_eos, rx1304_fail3028
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!from", rx1304_pos
  rxscan1305_scan3033:
    nqp_rxmark rx1304_bstack, rxscan1305_loop3032, rx1304_pos, 0
  rxscan1305_done3034:
    nqp_rxmark rx1304_bstack, rxcap1306_fail3036, rx1304_pos, 0
    add $I11, rx1304_pos, 4
    gt $I11, rx1304_eos, rx1304_fail3028
    substr $S10, rx1304_tgt, rx1304_pos, 4
    ne $S10, ucs4:"self", rx1304_fail3028
    add rx1304_pos, 4
    nqp_rxpeek $I19, rx1304_bstack, rxcap1306_fail3036
    inc $I19
    set $I11, rx1304_bstack[$I19]
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1304_pos)
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "sym")
    goto rxcap1306_done3035
  rxcap1306_fail3036:
    goto rx1304_fail3028
  rxcap1306_done3035:
    le rx1304_pos, 0, rx1304_fail3028
    is_cclass $I11, .CCLASS_WORD, rx1304_tgt, rx1304_pos
    if $I11, rx1304_fail3028
    sub $I11, rx1304_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1304_tgt, $I11
    unless $I11, rx1304_fail3028
    rx1304_cur."!cursor_pass"(rx1304_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1304_cur)
  rx1304_restart3027:
    repr_get_attr_obj rx1304_cstack, rx1304_cur, rx1304_curclass, "$!cstack"
  rx1304_fail3028:
    unless rx1304_bstack, rx1304_done3026
    pop $I19, rx1304_bstack
    if_null rx1304_cstack, rx1304_cstack_done3031
    unless rx1304_cstack, rx1304_cstack_done3031
    dec $I19
    set $P11, rx1304_cstack[$I19]
  rx1304_cstack_done3031:
    pop rx1304_rep, rx1304_bstack
    pop rx1304_pos, rx1304_bstack
    pop $I19, rx1304_bstack
    lt rx1304_pos, -1, rx1304_done3026
    lt rx1304_pos, 0, rx1304_fail3028
    eq $I19, 0, rx1304_fail3028
    nqp_islist $I20, rx1304_cstack
    unless $I20, rx1304_jump3029
    elements $I18, rx1304_bstack
    le $I18, 0, rx1304_cut3030
    dec $I18
    set $I18, rx1304_bstack[$I18]
  rx1304_cut3030:
    assign rx1304_cstack, $I18
  rx1304_jump3029:
    jump $I19
  rx1304_done3026:
    rx1304_cur."!cursor_fail"()
    .return (rx1304_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_145_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1353
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1308_start
    .local string rx1308_tgt
    .local int rx1308_pos
    .local int rx1308_off
    .local int rx1308_eos
    .local int rx1308_rep
    .local pmc rx1308_cur
    .local pmc rx1308_curclass
    .local pmc rx1308_bstack
    .local pmc rx1308_cstack
    rx1308_start = self."!cursor_start_all"()
    set rx1308_cur, rx1308_start[0]
    set rx1308_tgt, rx1308_start[1]
    set rx1308_pos, rx1308_start[2]
    set rx1308_curclass, rx1308_start[3]
    set rx1308_bstack, rx1308_start[4]
    set $I19, rx1308_start[5]
    store_lex unicode:"$\x{a2}", rx1308_cur
    length rx1308_eos, rx1308_tgt
    eq $I19, 1, rx1308_restart3040
    gt rx1308_pos, rx1308_eos, rx1308_fail3041
    repr_get_attr_int $I11, self, rx1308_curclass, "$!from"
    ne $I11, -1, rxscan1309_done3047
    goto rxscan1309_scan3046
  rxscan1309_loop3045:
    inc rx1308_pos
    gt rx1308_pos, rx1308_eos, rx1308_fail3041
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!from", rx1308_pos
  rxscan1309_scan3046:
    nqp_rxmark rx1308_bstack, rxscan1309_loop3045, rx1308_pos, 0
  rxscan1309_done3047:
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!pos", rx1308_pos
    $P11 = rx1308_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1308_curclass, "$!pos"
    lt $I11, 0, rx1308_fail3041
    nqp_rxmark rx1308_bstack, rxsubrule1310_pass3048, -1, 0
  rxsubrule1310_pass3048:
    rx1308_cstack = rx1308_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1308_pos, $P11, rx1308_curclass, "$!pos"
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!pos", rx1308_pos
    $P11 = rx1308_cur."args"()
    repr_get_attr_int $I11, $P11, rx1308_curclass, "$!pos"
    lt $I11, 0, rx1308_fail3041
    nqp_rxmark rx1308_bstack, rxsubrule1311_pass3049, -1, 0
  rxsubrule1311_pass3049:
    rx1308_cstack = rx1308_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1308_pos, $P11, rx1308_curclass, "$!pos"
    rx1308_cur."!cursor_pass"(rx1308_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1308_cur)
  rx1308_restart3040:
    repr_get_attr_obj rx1308_cstack, rx1308_cur, rx1308_curclass, "$!cstack"
  rx1308_fail3041:
    unless rx1308_bstack, rx1308_done3039
    pop $I19, rx1308_bstack
    if_null rx1308_cstack, rx1308_cstack_done3044
    unless rx1308_cstack, rx1308_cstack_done3044
    dec $I19
    set $P11, rx1308_cstack[$I19]
  rx1308_cstack_done3044:
    pop rx1308_rep, rx1308_bstack
    pop rx1308_pos, rx1308_bstack
    pop $I19, rx1308_bstack
    lt rx1308_pos, -1, rx1308_done3039
    lt rx1308_pos, 0, rx1308_fail3041
    eq $I19, 0, rx1308_fail3041
    nqp_islist $I20, rx1308_cstack
    unless $I20, rx1308_jump3042
    elements $I18, rx1308_bstack
    le $I18, 0, rx1308_cut3043
    dec $I18
    set $I18, rx1308_bstack[$I18]
  rx1308_cut3043:
    assign rx1308_cstack, $I18
  rx1308_jump3042:
    jump $I19
  rx1308_done3039:
    rx1308_cur."!cursor_fail"()
    .return (rx1308_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_146_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1312_start
    .local string rx1312_tgt
    .local int rx1312_pos
    .local int rx1312_off
    .local int rx1312_eos
    .local int rx1312_rep
    .local pmc rx1312_cur
    .local pmc rx1312_curclass
    .local pmc rx1312_bstack
    .local pmc rx1312_cstack
    rx1312_start = self."!cursor_start_all"()
    set rx1312_cur, rx1312_start[0]
    set rx1312_tgt, rx1312_start[1]
    set rx1312_pos, rx1312_start[2]
    set rx1312_curclass, rx1312_start[3]
    set rx1312_bstack, rx1312_start[4]
    set $I19, rx1312_start[5]
    store_lex unicode:"$\x{a2}", rx1312_cur
    length rx1312_eos, rx1312_tgt
    eq $I19, 1, rx1312_restart3052
    gt rx1312_pos, rx1312_eos, rx1312_fail3053
    repr_get_attr_int $I11, self, rx1312_curclass, "$!from"
    ne $I11, -1, rxscan1313_done3059
    goto rxscan1313_scan3058
  rxscan1313_loop3057:
    inc rx1312_pos
    index rx1312_pos, rx1312_tgt, ucs4:"pir::", rx1312_pos
    eq rx1312_pos, -1, rx1312_fail3053
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!from", rx1312_pos
  rxscan1313_scan3058:
    nqp_rxmark rx1312_bstack, rxscan1313_loop3057, rx1312_pos, 0
  rxscan1313_done3059:
    add $I11, rx1312_pos, 5
    gt $I11, rx1312_eos, rx1312_fail3053
    substr $S10, rx1312_tgt, rx1312_pos, 5
    ne $S10, ucs4:"pir::", rx1312_fail3053
    add rx1312_pos, 5
    nqp_rxmark rx1312_bstack, rxcap1314_fail3061, rx1312_pos, 0
    nqp_rxmark rx1312_bstack, rxquantr1315_done3063, -1, 0
  rxquantr1315_loop3062:
    ge rx1312_pos, rx1312_eos, rx1312_fail3053
    is_cclass $I11, .CCLASS_WORD, rx1312_tgt, rx1312_pos
    unless $I11, rx1312_fail3053
    add rx1312_pos, 1
    nqp_rxpeek $I19, rx1312_bstack, rxquantr1315_done3063
    inc $I19
    inc $I19
    set rx1312_rep, rx1312_bstack[$I19]
    nqp_rxcommit rx1312_bstack, rxquantr1315_done3063
    inc rx1312_rep
    nqp_rxmark rx1312_bstack, rxquantr1315_done3063, rx1312_pos, rx1312_rep
    goto rxquantr1315_loop3062
  rxquantr1315_done3063:
    nqp_rxpeek $I19, rx1312_bstack, rxcap1314_fail3061
    inc $I19
    set $I11, rx1312_bstack[$I19]
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1312_pos)
    rx1312_cstack = rx1312_cur."!cursor_capture"($P11, "op")
    goto rxcap1314_done3060
  rxcap1314_fail3061:
    goto rx1312_fail3053
  rxcap1314_done3060:
    nqp_rxmark rx1312_bstack, rxquantr1316_done3065, rx1312_pos, 0
  rxquantr1316_loop3064:
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."args"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail3053
    goto rxsubrule1317_pass3066
  rxsubrule1317_back3067:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail3053
  rxsubrule1317_pass3066:
    rx1312_cstack = rx1312_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1317_back3067
    push rx1312_bstack, $I11
    push rx1312_bstack, 0
    push rx1312_bstack, rx1312_pos
    elements $I11, rx1312_cstack
    push rx1312_bstack, $I11
    repr_get_attr_int rx1312_pos, $P11, rx1312_curclass, "$!pos"
    nqp_rxpeek $I19, rx1312_bstack, rxquantr1316_done3065
    inc $I19
    inc $I19
    set rx1312_rep, rx1312_bstack[$I19]
    nqp_rxcommit rx1312_bstack, rxquantr1316_done3065
    inc rx1312_rep
  rxquantr1316_done3065:
    rx1312_cur."!cursor_pass"(rx1312_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1312_cur)
  rx1312_restart3052:
    repr_get_attr_obj rx1312_cstack, rx1312_cur, rx1312_curclass, "$!cstack"
  rx1312_fail3053:
    unless rx1312_bstack, rx1312_done3051
    pop $I19, rx1312_bstack
    if_null rx1312_cstack, rx1312_cstack_done3056
    unless rx1312_cstack, rx1312_cstack_done3056
    dec $I19
    set $P11, rx1312_cstack[$I19]
  rx1312_cstack_done3056:
    pop rx1312_rep, rx1312_bstack
    pop rx1312_pos, rx1312_bstack
    pop $I19, rx1312_bstack
    lt rx1312_pos, -1, rx1312_done3051
    lt rx1312_pos, 0, rx1312_fail3053
    eq $I19, 0, rx1312_fail3053
    nqp_islist $I20, rx1312_cstack
    unless $I20, rx1312_jump3054
    elements $I18, rx1312_bstack
    le $I18, 0, rx1312_cut3055
    dec $I18
    set $I18, rx1312_bstack[$I18]
  rx1312_cut3055:
    assign rx1312_cstack, $I18
  rx1312_jump3054:
    jump $I19
  rx1312_done3051:
    rx1312_cur."!cursor_fail"()
    .return (rx1312_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_147_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1361
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1318_start
    .local string rx1318_tgt
    .local int rx1318_pos
    .local int rx1318_off
    .local int rx1318_eos
    .local int rx1318_rep
    .local pmc rx1318_cur
    .local pmc rx1318_curclass
    .local pmc rx1318_bstack
    .local pmc rx1318_cstack
    rx1318_start = self."!cursor_start_all"()
    set rx1318_cur, rx1318_start[0]
    set rx1318_tgt, rx1318_start[1]
    set rx1318_pos, rx1318_start[2]
    set rx1318_curclass, rx1318_start[3]
    set rx1318_bstack, rx1318_start[4]
    set $I19, rx1318_start[5]
    store_lex unicode:"$\x{a2}", rx1318_cur
    length rx1318_eos, rx1318_tgt
    eq $I19, 1, rx1318_restart3070
    gt rx1318_pos, rx1318_eos, rx1318_fail3071
    repr_get_attr_int $I11, self, rx1318_curclass, "$!from"
    ne $I11, -1, rxscan1319_done3077
    goto rxscan1319_scan3076
  rxscan1319_loop3075:
    inc rx1318_pos
    index rx1318_pos, rx1318_tgt, ucs4:"pir::const::", rx1318_pos
    eq rx1318_pos, -1, rx1318_fail3071
    repr_bind_attr_int rx1318_cur, rx1318_curclass, "$!from", rx1318_pos
  rxscan1319_scan3076:
    nqp_rxmark rx1318_bstack, rxscan1319_loop3075, rx1318_pos, 0
  rxscan1319_done3077:
    add $I11, rx1318_pos, 12
    gt $I11, rx1318_eos, rx1318_fail3071
    substr $S10, rx1318_tgt, rx1318_pos, 12
    ne $S10, ucs4:"pir::const::", rx1318_fail3071
    add rx1318_pos, 12
    nqp_rxmark rx1318_bstack, rxcap1320_fail3079, rx1318_pos, 0
    nqp_rxmark rx1318_bstack, rxquantr1321_done3081, -1, 0
  rxquantr1321_loop3080:
    ge rx1318_pos, rx1318_eos, rx1318_fail3071
    is_cclass $I11, .CCLASS_WORD, rx1318_tgt, rx1318_pos
    unless $I11, rx1318_fail3071
    add rx1318_pos, 1
    nqp_rxpeek $I19, rx1318_bstack, rxquantr1321_done3081
    inc $I19
    inc $I19
    set rx1318_rep, rx1318_bstack[$I19]
    nqp_rxcommit rx1318_bstack, rxquantr1321_done3081
    inc rx1318_rep
    nqp_rxmark rx1318_bstack, rxquantr1321_done3081, rx1318_pos, rx1318_rep
    goto rxquantr1321_loop3080
  rxquantr1321_done3081:
    nqp_rxpeek $I19, rx1318_bstack, rxcap1320_fail3079
    inc $I19
    set $I11, rx1318_bstack[$I19]
    repr_bind_attr_int rx1318_cur, rx1318_curclass, "$!pos", rx1318_pos
    $P11 = rx1318_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1318_pos)
    rx1318_cstack = rx1318_cur."!cursor_capture"($P11, "const")
    goto rxcap1320_done3078
  rxcap1320_fail3079:
    goto rx1318_fail3071
  rxcap1320_done3078:
    rx1318_cur."!cursor_pass"(rx1318_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1318_cur)
  rx1318_restart3070:
    repr_get_attr_obj rx1318_cstack, rx1318_cur, rx1318_curclass, "$!cstack"
  rx1318_fail3071:
    unless rx1318_bstack, rx1318_done3069
    pop $I19, rx1318_bstack
    if_null rx1318_cstack, rx1318_cstack_done3074
    unless rx1318_cstack, rx1318_cstack_done3074
    dec $I19
    set $P11, rx1318_cstack[$I19]
  rx1318_cstack_done3074:
    pop rx1318_rep, rx1318_bstack
    pop rx1318_pos, rx1318_bstack
    pop $I19, rx1318_bstack
    lt rx1318_pos, -1, rx1318_done3069
    lt rx1318_pos, 0, rx1318_fail3071
    eq $I19, 0, rx1318_fail3071
    nqp_islist $I20, rx1318_cstack
    unless $I20, rx1318_jump3072
    elements $I18, rx1318_bstack
    le $I18, 0, rx1318_cut3073
    dec $I18
    set $I18, rx1318_bstack[$I18]
  rx1318_cut3073:
    assign rx1318_cstack, $I18
  rx1318_jump3072:
    jump $I19
  rx1318_done3069:
    rx1318_cur."!cursor_fail"()
    .return (rx1318_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_148_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1322_start
    .local string rx1322_tgt
    .local int rx1322_pos
    .local int rx1322_off
    .local int rx1322_eos
    .local int rx1322_rep
    .local pmc rx1322_cur
    .local pmc rx1322_curclass
    .local pmc rx1322_bstack
    .local pmc rx1322_cstack
    rx1322_start = self."!cursor_start_all"()
    set rx1322_cur, rx1322_start[0]
    set rx1322_tgt, rx1322_start[1]
    set rx1322_pos, rx1322_start[2]
    set rx1322_curclass, rx1322_start[3]
    set rx1322_bstack, rx1322_start[4]
    set $I19, rx1322_start[5]
    store_lex unicode:"$\x{a2}", rx1322_cur
    length rx1322_eos, rx1322_tgt
    eq $I19, 1, rx1322_restart3084
    gt rx1322_pos, rx1322_eos, rx1322_fail3085
    repr_get_attr_int $I11, self, rx1322_curclass, "$!from"
    ne $I11, -1, rxscan1323_done3091
    goto rxscan1323_scan3090
  rxscan1323_loop3089:
    inc rx1322_pos
    index rx1322_pos, rx1322_tgt, ucs4:"nqp::", rx1322_pos
    eq rx1322_pos, -1, rx1322_fail3085
    repr_bind_attr_int rx1322_cur, rx1322_curclass, "$!from", rx1322_pos
  rxscan1323_scan3090:
    nqp_rxmark rx1322_bstack, rxscan1323_loop3089, rx1322_pos, 0
  rxscan1323_done3091:
    add $I11, rx1322_pos, 5
    gt $I11, rx1322_eos, rx1322_fail3085
    substr $S10, rx1322_tgt, rx1322_pos, 5
    ne $S10, ucs4:"nqp::", rx1322_fail3085
    add rx1322_pos, 5
    nqp_rxmark rx1322_bstack, rxcap1324_fail3093, rx1322_pos, 0
    nqp_rxmark rx1322_bstack, rxquantr1325_done3095, -1, 0
  rxquantr1325_loop3094:
    ge rx1322_pos, rx1322_eos, rx1322_fail3085
    is_cclass $I11, .CCLASS_WORD, rx1322_tgt, rx1322_pos
    unless $I11, rx1322_fail3085
    add rx1322_pos, 1
    nqp_rxpeek $I19, rx1322_bstack, rxquantr1325_done3095
    inc $I19
    inc $I19
    set rx1322_rep, rx1322_bstack[$I19]
    nqp_rxcommit rx1322_bstack, rxquantr1325_done3095
    inc rx1322_rep
    nqp_rxmark rx1322_bstack, rxquantr1325_done3095, rx1322_pos, rx1322_rep
    goto rxquantr1325_loop3094
  rxquantr1325_done3095:
    nqp_rxpeek $I19, rx1322_bstack, rxcap1324_fail3093
    inc $I19
    set $I11, rx1322_bstack[$I19]
    repr_bind_attr_int rx1322_cur, rx1322_curclass, "$!pos", rx1322_pos
    $P11 = rx1322_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1322_pos)
    rx1322_cstack = rx1322_cur."!cursor_capture"($P11, "op")
    goto rxcap1324_done3092
  rxcap1324_fail3093:
    goto rx1322_fail3085
  rxcap1324_done3092:
    nqp_rxmark rx1322_bstack, rxquantr1326_done3097, rx1322_pos, 0
  rxquantr1326_loop3096:
    repr_bind_attr_int rx1322_cur, rx1322_curclass, "$!pos", rx1322_pos
    $P11 = rx1322_cur."args"()
    repr_get_attr_int $I11, $P11, rx1322_curclass, "$!pos"
    lt $I11, 0, rx1322_fail3085
    goto rxsubrule1327_pass3098
  rxsubrule1327_back3099:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1322_curclass, "$!pos"
    lt $I11, 0, rx1322_fail3085
  rxsubrule1327_pass3098:
    rx1322_cstack = rx1322_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1327_back3099
    push rx1322_bstack, $I11
    push rx1322_bstack, 0
    push rx1322_bstack, rx1322_pos
    elements $I11, rx1322_cstack
    push rx1322_bstack, $I11
    repr_get_attr_int rx1322_pos, $P11, rx1322_curclass, "$!pos"
    nqp_rxpeek $I19, rx1322_bstack, rxquantr1326_done3097
    inc $I19
    inc $I19
    set rx1322_rep, rx1322_bstack[$I19]
    nqp_rxcommit rx1322_bstack, rxquantr1326_done3097
    inc rx1322_rep
  rxquantr1326_done3097:
    rx1322_cur."!cursor_pass"(rx1322_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1322_cur)
  rx1322_restart3084:
    repr_get_attr_obj rx1322_cstack, rx1322_cur, rx1322_curclass, "$!cstack"
  rx1322_fail3085:
    unless rx1322_bstack, rx1322_done3083
    pop $I19, rx1322_bstack
    if_null rx1322_cstack, rx1322_cstack_done3088
    unless rx1322_cstack, rx1322_cstack_done3088
    dec $I19
    set $P11, rx1322_cstack[$I19]
  rx1322_cstack_done3088:
    pop rx1322_rep, rx1322_bstack
    pop rx1322_pos, rx1322_bstack
    pop $I19, rx1322_bstack
    lt rx1322_pos, -1, rx1322_done3083
    lt rx1322_pos, 0, rx1322_fail3085
    eq $I19, 0, rx1322_fail3085
    nqp_islist $I20, rx1322_cstack
    unless $I20, rx1322_jump3086
    elements $I18, rx1322_bstack
    le $I18, 0, rx1322_cut3087
    dec $I18
    set $I18, rx1322_bstack[$I18]
  rx1322_cut3087:
    assign rx1322_cstack, $I18
  rx1322_jump3086:
    jump $I19
  rx1322_done3083:
    rx1322_cur."!cursor_fail"()
    .return (rx1322_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_149_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1328_start
    .local string rx1328_tgt
    .local int rx1328_pos
    .local int rx1328_off
    .local int rx1328_eos
    .local int rx1328_rep
    .local pmc rx1328_cur
    .local pmc rx1328_curclass
    .local pmc rx1328_bstack
    .local pmc rx1328_cstack
    rx1328_start = self."!cursor_start_all"()
    set rx1328_cur, rx1328_start[0]
    set rx1328_tgt, rx1328_start[1]
    set rx1328_pos, rx1328_start[2]
    set rx1328_curclass, rx1328_start[3]
    set rx1328_bstack, rx1328_start[4]
    set $I19, rx1328_start[5]
    store_lex unicode:"$\x{a2}", rx1328_cur
    length rx1328_eos, rx1328_tgt
    eq $I19, 1, rx1328_restart3102
    gt rx1328_pos, rx1328_eos, rx1328_fail3103
    repr_get_attr_int $I11, self, rx1328_curclass, "$!from"
    ne $I11, -1, rxscan1329_done3109
    goto rxscan1329_scan3108
  rxscan1329_loop3107:
    inc rx1328_pos
    index rx1328_pos, rx1328_tgt, ucs4:"nqp::const::", rx1328_pos
    eq rx1328_pos, -1, rx1328_fail3103
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!from", rx1328_pos
  rxscan1329_scan3108:
    nqp_rxmark rx1328_bstack, rxscan1329_loop3107, rx1328_pos, 0
  rxscan1329_done3109:
    add $I11, rx1328_pos, 12
    gt $I11, rx1328_eos, rx1328_fail3103
    substr $S10, rx1328_tgt, rx1328_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1328_fail3103
    add rx1328_pos, 12
    nqp_rxmark rx1328_bstack, rxcap1330_fail3111, rx1328_pos, 0
    nqp_rxmark rx1328_bstack, rxquantr1331_done3113, -1, 0
  rxquantr1331_loop3112:
    ge rx1328_pos, rx1328_eos, rx1328_fail3103
    is_cclass $I11, .CCLASS_WORD, rx1328_tgt, rx1328_pos
    unless $I11, rx1328_fail3103
    add rx1328_pos, 1
    nqp_rxpeek $I19, rx1328_bstack, rxquantr1331_done3113
    inc $I19
    inc $I19
    set rx1328_rep, rx1328_bstack[$I19]
    nqp_rxcommit rx1328_bstack, rxquantr1331_done3113
    inc rx1328_rep
    nqp_rxmark rx1328_bstack, rxquantr1331_done3113, rx1328_pos, rx1328_rep
    goto rxquantr1331_loop3112
  rxquantr1331_done3113:
    nqp_rxpeek $I19, rx1328_bstack, rxcap1330_fail3111
    inc $I19
    set $I11, rx1328_bstack[$I19]
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!pos", rx1328_pos
    $P11 = rx1328_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1328_pos)
    rx1328_cstack = rx1328_cur."!cursor_capture"($P11, "const")
    goto rxcap1330_done3110
  rxcap1330_fail3111:
    goto rx1328_fail3103
  rxcap1330_done3110:
    rx1328_cur."!cursor_pass"(rx1328_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1328_cur)
  rx1328_restart3102:
    repr_get_attr_obj rx1328_cstack, rx1328_cur, rx1328_curclass, "$!cstack"
  rx1328_fail3103:
    unless rx1328_bstack, rx1328_done3101
    pop $I19, rx1328_bstack
    if_null rx1328_cstack, rx1328_cstack_done3106
    unless rx1328_cstack, rx1328_cstack_done3106
    dec $I19
    set $P11, rx1328_cstack[$I19]
  rx1328_cstack_done3106:
    pop rx1328_rep, rx1328_bstack
    pop rx1328_pos, rx1328_bstack
    pop $I19, rx1328_bstack
    lt rx1328_pos, -1, rx1328_done3101
    lt rx1328_pos, 0, rx1328_fail3103
    eq $I19, 0, rx1328_fail3103
    nqp_islist $I20, rx1328_cstack
    unless $I20, rx1328_jump3104
    elements $I18, rx1328_bstack
    le $I18, 0, rx1328_cut3105
    dec $I18
    set $I18, rx1328_bstack[$I18]
  rx1328_cut3105:
    assign rx1328_cstack, $I18
  rx1328_jump3104:
    jump $I19
  rx1328_done3101:
    rx1328_cur."!cursor_fail"()
    .return (rx1328_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_150_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_433_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1332_start
    .local string rx1332_tgt
    .local int rx1332_pos
    .local int rx1332_off
    .local int rx1332_eos
    .local int rx1332_rep
    .local pmc rx1332_cur
    .local pmc rx1332_curclass
    .local pmc rx1332_bstack
    .local pmc rx1332_cstack
    rx1332_start = self."!cursor_start_all"()
    set rx1332_cur, rx1332_start[0]
    set rx1332_tgt, rx1332_start[1]
    set rx1332_pos, rx1332_start[2]
    set rx1332_curclass, rx1332_start[3]
    set rx1332_bstack, rx1332_start[4]
    set $I19, rx1332_start[5]
    store_lex unicode:"$\x{a2}", rx1332_cur
    length rx1332_eos, rx1332_tgt
    eq $I19, 1, rx1332_restart3116
    gt rx1332_pos, rx1332_eos, rx1332_fail3117
    repr_get_attr_int $I11, self, rx1332_curclass, "$!from"
    ne $I11, -1, rxscan1333_done3123
    goto rxscan1333_scan3122
  rxscan1333_loop3121:
    inc rx1332_pos
    index rx1332_pos, rx1332_tgt, ucs4:"{*}", rx1332_pos
    eq rx1332_pos, -1, rx1332_fail3117
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!from", rx1332_pos
  rxscan1333_scan3122:
    nqp_rxmark rx1332_bstack, rxscan1333_loop3121, rx1332_pos, 0
  rxscan1333_done3123:
    add $I11, rx1332_pos, 3
    gt $I11, rx1332_eos, rx1332_fail3117
    substr $S10, rx1332_tgt, rx1332_pos, 3
    ne $S10, ucs4:"{*}", rx1332_fail3117
    add rx1332_pos, 3
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail3117
  alt1334_03125:
    nqp_rxmark rx1332_bstack, alt1334_13131, rx1332_pos, 0
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    store_lex unicode:"$\x{a2}", rx1332_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_433_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1332_fail3117
    goto alt1334_end3124
  alt1334_13131:
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail3117
    repr_get_attr_int rx1332_pos, $P11, rx1332_curclass, "$!pos"
  alt1334_end3124:
    rx1332_cur."!cursor_pass"(rx1332_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1332_cur)
  rx1332_restart3116:
    repr_get_attr_obj rx1332_cstack, rx1332_cur, rx1332_curclass, "$!cstack"
  rx1332_fail3117:
    unless rx1332_bstack, rx1332_done3115
    pop $I19, rx1332_bstack
    if_null rx1332_cstack, rx1332_cstack_done3120
    unless rx1332_cstack, rx1332_cstack_done3120
    dec $I19
    set $P11, rx1332_cstack[$I19]
  rx1332_cstack_done3120:
    pop rx1332_rep, rx1332_bstack
    pop rx1332_pos, rx1332_bstack
    pop $I19, rx1332_bstack
    lt rx1332_pos, -1, rx1332_done3115
    lt rx1332_pos, 0, rx1332_fail3117
    eq $I19, 0, rx1332_fail3117
    nqp_islist $I20, rx1332_cstack
    unless $I20, rx1332_jump3118
    elements $I18, rx1332_bstack
    le $I18, 0, rx1332_cut3119
    dec $I18
    set $I18, rx1332_bstack[$I18]
  rx1332_cut3119:
    assign rx1332_cstack, $I18
  rx1332_jump3118:
    jump $I19
  rx1332_done3115:
    rx1332_cur."!cursor_fail"()
    .return (rx1332_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_433_1383915013.33774") :anon :lex :outer("cuid_150_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1375
    .local pmc fb_tmp_190 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback3126
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_190, $P5002
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if1335_else3127 
    set $P5004, fb_tmp_190["$MULTINESS"]
    set $P5006, $P5004
    goto if1335_end3128
  if1335_else3127:
    null $P5005
    set $P5006, $P5005
  if1335_end3128:
    unless_null $P5006, vivi_13363129
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_13363129:
    unless_null $P5006, vivi_13373130
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13373130:
    set $P5001, $P5006
  fallback3126:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_151_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_434_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1339_start
    .local string rx1339_tgt
    .local int rx1339_pos
    .local int rx1339_off
    .local int rx1339_eos
    .local int rx1339_rep
    .local pmc rx1339_cur
    .local pmc rx1339_curclass
    .local pmc rx1339_bstack
    .local pmc rx1339_cstack
    rx1339_start = self."!cursor_start_all"()
    set rx1339_cur, rx1339_start[0]
    set rx1339_tgt, rx1339_start[1]
    set rx1339_pos, rx1339_start[2]
    set rx1339_curclass, rx1339_start[3]
    set rx1339_bstack, rx1339_start[4]
    set $I19, rx1339_start[5]
    store_lex unicode:"$\x{a2}", rx1339_cur
    length rx1339_eos, rx1339_tgt
    eq $I19, 1, rx1339_restart3135
    gt rx1339_pos, rx1339_eos, rx1339_fail3136
    repr_get_attr_int $I11, self, rx1339_curclass, "$!from"
    ne $I11, -1, rxscan1340_done3142
    goto rxscan1340_scan3141
  rxscan1340_loop3140:
    inc rx1339_pos
    gt rx1339_pos, rx1339_eos, rx1339_fail3136
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!from", rx1339_pos
  rxscan1340_scan3141:
    nqp_rxmark rx1339_bstack, rxscan1340_loop3140, rx1339_pos, 0
  rxscan1340_done3142:
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."name"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail3136
    nqp_rxmark rx1339_bstack, rxsubrule1341_pass3143, -1, 0
  rxsubrule1341_pass3143:
    rx1339_cstack = rx1339_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1339_pos, $P11, rx1339_curclass, "$!pos"
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    store_lex unicode:"$\x{a2}", rx1339_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_434_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1339_fail3136
    nqp_rxmark rx1339_bstack, rxquantr1344_done3149, rx1339_pos, 0
  rxquantr1344_loop3148:
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."args"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail3136
    goto rxsubrule1345_pass3150
  rxsubrule1345_back3151:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail3136
  rxsubrule1345_pass3150:
    rx1339_cstack = rx1339_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1345_back3151
    push rx1339_bstack, $I11
    push rx1339_bstack, 0
    push rx1339_bstack, rx1339_pos
    elements $I11, rx1339_cstack
    push rx1339_bstack, $I11
    repr_get_attr_int rx1339_pos, $P11, rx1339_curclass, "$!pos"
    nqp_rxpeek $I19, rx1339_bstack, rxquantr1344_done3149
    inc $I19
    inc $I19
    set rx1339_rep, rx1339_bstack[$I19]
    nqp_rxcommit rx1339_bstack, rxquantr1344_done3149
    inc rx1339_rep
  rxquantr1344_done3149:
    rx1339_cur."!cursor_pass"(rx1339_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1339_cur)
  rx1339_restart3135:
    repr_get_attr_obj rx1339_cstack, rx1339_cur, rx1339_curclass, "$!cstack"
  rx1339_fail3136:
    unless rx1339_bstack, rx1339_done3134
    pop $I19, rx1339_bstack
    if_null rx1339_cstack, rx1339_cstack_done3139
    unless rx1339_cstack, rx1339_cstack_done3139
    dec $I19
    set $P11, rx1339_cstack[$I19]
  rx1339_cstack_done3139:
    pop rx1339_rep, rx1339_bstack
    pop rx1339_pos, rx1339_bstack
    pop $I19, rx1339_bstack
    lt rx1339_pos, -1, rx1339_done3134
    lt rx1339_pos, 0, rx1339_fail3136
    eq $I19, 0, rx1339_fail3136
    nqp_islist $I20, rx1339_cstack
    unless $I20, rx1339_jump3137
    elements $I18, rx1339_bstack
    le $I18, 0, rx1339_cut3138
    dec $I18
    set $I18, rx1339_bstack[$I18]
  rx1339_cut3138:
    assign rx1339_cstack, $I18
  rx1339_jump3137:
    jump $I19
  rx1339_done3134:
    rx1339_cur."!cursor_fail"()
    .return (rx1339_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_434_1383915013.33774") :anon :lex :outer("cuid_151_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1379
    .local pmc fb_tmp_191 
    find_lex $P5001, "$/"
    unless_null $P5001, fallback3146
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5001, $P5002
  fallback3146:
    set fb_tmp_191, $P5001
    repr_defined $I5002, fb_tmp_191
    unless $I5002 goto if1342_else3144 
    set $P5003, fb_tmp_191["name"]
    set $P5005, $P5003
    goto if1342_end3145
  if1342_else3144:
    null $P5004
    set $P5005, $P5004
  if1342_end3145:
    unless_null $P5005, vivi_13433147
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_13433147:
    set $S5001, $P5005
    isne $I5001, $S5001, "return"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_152_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1346_start
    .local string rx1346_tgt
    .local int rx1346_pos
    .local int rx1346_off
    .local int rx1346_eos
    .local int rx1346_rep
    .local pmc rx1346_cur
    .local pmc rx1346_curclass
    .local pmc rx1346_bstack
    .local pmc rx1346_cstack
    rx1346_start = self."!cursor_start_all"()
    set rx1346_cur, rx1346_start[0]
    set rx1346_tgt, rx1346_start[1]
    set rx1346_pos, rx1346_start[2]
    set rx1346_curclass, rx1346_start[3]
    set rx1346_bstack, rx1346_start[4]
    set $I19, rx1346_start[5]
    store_lex unicode:"$\x{a2}", rx1346_cur
    length rx1346_eos, rx1346_tgt
    eq $I19, 1, rx1346_restart3154
    gt rx1346_pos, rx1346_eos, rx1346_fail3155
    repr_get_attr_int $I11, self, rx1346_curclass, "$!from"
    ne $I11, -1, rxscan1347_done3161
    goto rxscan1347_scan3160
  rxscan1347_loop3159:
    inc rx1346_pos
    index rx1346_pos, rx1346_tgt, ucs4:"(", rx1346_pos
    eq rx1346_pos, -1, rx1346_fail3155
    repr_bind_attr_int rx1346_cur, rx1346_curclass, "$!from", rx1346_pos
  rxscan1347_scan3160:
    nqp_rxmark rx1346_bstack, rxscan1347_loop3159, rx1346_pos, 0
  rxscan1347_done3161:
    add $I11, rx1346_pos, 1
    gt $I11, rx1346_eos, rx1346_fail3155
    substr $S10, rx1346_tgt, rx1346_pos, 1
    ne $S10, ucs4:"(", rx1346_fail3155
    add rx1346_pos, 1
    repr_bind_attr_int rx1346_cur, rx1346_curclass, "$!pos", rx1346_pos
    $P11 = rx1346_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1346_curclass, "$!pos"
    lt $I11, 0, rx1346_fail3155
    nqp_rxmark rx1346_bstack, rxsubrule1348_pass3162, -1, 0
  rxsubrule1348_pass3162:
    rx1346_cstack = rx1346_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1346_pos, $P11, rx1346_curclass, "$!pos"
    add $I11, rx1346_pos, 1
    gt $I11, rx1346_eos, rx1346_fail3155
    substr $S10, rx1346_tgt, rx1346_pos, 1
    ne $S10, ucs4:")", rx1346_fail3155
    add rx1346_pos, 1
    rx1346_cur."!cursor_pass"(rx1346_pos, "args", 'backtrack'=>1)
    .return (rx1346_cur)
  rx1346_restart3154:
    repr_get_attr_obj rx1346_cstack, rx1346_cur, rx1346_curclass, "$!cstack"
  rx1346_fail3155:
    unless rx1346_bstack, rx1346_done3153
    pop $I19, rx1346_bstack
    if_null rx1346_cstack, rx1346_cstack_done3158
    unless rx1346_cstack, rx1346_cstack_done3158
    dec $I19
    set $P11, rx1346_cstack[$I19]
  rx1346_cstack_done3158:
    pop rx1346_rep, rx1346_bstack
    pop rx1346_pos, rx1346_bstack
    pop $I19, rx1346_bstack
    lt rx1346_pos, -1, rx1346_done3153
    lt rx1346_pos, 0, rx1346_fail3155
    eq $I19, 0, rx1346_fail3155
    nqp_islist $I20, rx1346_cstack
    unless $I20, rx1346_jump3156
    elements $I18, rx1346_bstack
    le $I18, 0, rx1346_cut3157
    dec $I18
    set $I18, rx1346_bstack[$I18]
  rx1346_cut3157:
    assign rx1346_cstack, $I18
  rx1346_jump3156:
    jump $I19
  rx1346_done3153:
    rx1346_cur."!cursor_fail"()
    .return (rx1346_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_153_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1349_start
    .local string rx1349_tgt
    .local int rx1349_pos
    .local int rx1349_off
    .local int rx1349_eos
    .local int rx1349_rep
    .local pmc rx1349_cur
    .local pmc rx1349_curclass
    .local pmc rx1349_bstack
    .local pmc rx1349_cstack
    rx1349_start = self."!cursor_start_all"()
    set rx1349_cur, rx1349_start[0]
    set rx1349_tgt, rx1349_start[1]
    set rx1349_pos, rx1349_start[2]
    set rx1349_curclass, rx1349_start[3]
    set rx1349_bstack, rx1349_start[4]
    set $I19, rx1349_start[5]
    store_lex unicode:"$\x{a2}", rx1349_cur
    length rx1349_eos, rx1349_tgt
    eq $I19, 1, rx1349_restart3165
    gt rx1349_pos, rx1349_eos, rx1349_fail3166
    repr_get_attr_int $I11, self, rx1349_curclass, "$!from"
    ne $I11, -1, rxscan1350_done3172
    goto rxscan1350_scan3171
  rxscan1350_loop3170:
    inc rx1349_pos
    gt rx1349_pos, rx1349_eos, rx1349_fail3166
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!from", rx1349_pos
  rxscan1350_scan3171:
    nqp_rxmark rx1349_bstack, rxscan1350_loop3170, rx1349_pos, 0
  rxscan1350_done3172:
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail3166
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1352_03175
    nqp_push_label $P11, alt1352_13177
    nqp_rxmark rx1349_bstack, alt1352_end3174, -1, 0
    rx1349_cur."!alt"(rx1349_pos, "alt_nfa__34_1383915019.56669", $P11)
    goto rx1349_fail3166
  alt1352_03175:
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail3166
    nqp_rxmark rx1349_bstack, rxsubrule1353_pass3176, -1, 0
  rxsubrule1353_pass3176:
    rx1349_cstack = rx1349_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    goto alt1352_end3174
  alt1352_13177:
    goto alt1352_end3174
  alt1352_end3174:
    nqp_rxcommit rx1349_bstack, alt1352_end3174
    rx1349_cur."!cursor_pass"(rx1349_pos, "arglist", 'backtrack'=>1)
    .return (rx1349_cur)
  rx1349_restart3165:
    repr_get_attr_obj rx1349_cstack, rx1349_cur, rx1349_curclass, "$!cstack"
  rx1349_fail3166:
    unless rx1349_bstack, rx1349_done3164
    pop $I19, rx1349_bstack
    if_null rx1349_cstack, rx1349_cstack_done3169
    unless rx1349_cstack, rx1349_cstack_done3169
    dec $I19
    set $P11, rx1349_cstack[$I19]
  rx1349_cstack_done3169:
    pop rx1349_rep, rx1349_bstack
    pop rx1349_pos, rx1349_bstack
    pop $I19, rx1349_bstack
    lt rx1349_pos, -1, rx1349_done3164
    lt rx1349_pos, 0, rx1349_fail3166
    eq $I19, 0, rx1349_fail3166
    nqp_islist $I20, rx1349_cstack
    unless $I20, rx1349_jump3167
    elements $I18, rx1349_bstack
    le $I18, 0, rx1349_cut3168
    dec $I18
    set $I18, rx1349_bstack[$I18]
  rx1349_cut3168:
    assign rx1349_cstack, $I18
  rx1349_jump3167:
    jump $I19
  rx1349_done3164:
    rx1349_cur."!cursor_fail"()
    .return (rx1349_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_154_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1355_start
    .local string rx1355_tgt
    .local int rx1355_pos
    .local int rx1355_off
    .local int rx1355_eos
    .local int rx1355_rep
    .local pmc rx1355_cur
    .local pmc rx1355_curclass
    .local pmc rx1355_bstack
    .local pmc rx1355_cstack
    rx1355_start = self."!cursor_start_all"()
    set rx1355_cur, rx1355_start[0]
    set rx1355_tgt, rx1355_start[1]
    set rx1355_pos, rx1355_start[2]
    set rx1355_curclass, rx1355_start[3]
    set rx1355_bstack, rx1355_start[4]
    set $I19, rx1355_start[5]
    store_lex unicode:"$\x{a2}", rx1355_cur
    length rx1355_eos, rx1355_tgt
    eq $I19, 1, rx1355_restart3181
    gt rx1355_pos, rx1355_eos, rx1355_fail3182
    repr_get_attr_int $I11, self, rx1355_curclass, "$!from"
    ne $I11, -1, rxscan1356_done3188
    goto rxscan1356_scan3187
  rxscan1356_loop3186:
    inc rx1355_pos
    gt rx1355_pos, rx1355_eos, rx1355_fail3182
    repr_bind_attr_int rx1355_cur, rx1355_curclass, "$!from", rx1355_pos
  rxscan1356_scan3187:
    nqp_rxmark rx1355_bstack, rxscan1356_loop3186, rx1355_pos, 0
  rxscan1356_done3188:
    repr_bind_attr_int rx1355_cur, rx1355_curclass, "$!pos", rx1355_pos
    $P11 = rx1355_cur."value"()
    repr_get_attr_int $I11, $P11, rx1355_curclass, "$!pos"
    lt $I11, 0, rx1355_fail3182
    nqp_rxmark rx1355_bstack, rxsubrule1357_pass3189, -1, 0
  rxsubrule1357_pass3189:
    rx1355_cstack = rx1355_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1355_pos, $P11, rx1355_curclass, "$!pos"
    rx1355_cur."!cursor_pass"(rx1355_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1355_cur)
  rx1355_restart3181:
    repr_get_attr_obj rx1355_cstack, rx1355_cur, rx1355_curclass, "$!cstack"
  rx1355_fail3182:
    unless rx1355_bstack, rx1355_done3180
    pop $I19, rx1355_bstack
    if_null rx1355_cstack, rx1355_cstack_done3185
    unless rx1355_cstack, rx1355_cstack_done3185
    dec $I19
    set $P11, rx1355_cstack[$I19]
  rx1355_cstack_done3185:
    pop rx1355_rep, rx1355_bstack
    pop rx1355_pos, rx1355_bstack
    pop $I19, rx1355_bstack
    lt rx1355_pos, -1, rx1355_done3180
    lt rx1355_pos, 0, rx1355_fail3182
    eq $I19, 0, rx1355_fail3182
    nqp_islist $I20, rx1355_cstack
    unless $I20, rx1355_jump3183
    elements $I18, rx1355_bstack
    le $I18, 0, rx1355_cut3184
    dec $I18
    set $I18, rx1355_bstack[$I18]
  rx1355_cut3184:
    assign rx1355_cstack, $I18
  rx1355_jump3183:
    jump $I19
  rx1355_done3180:
    rx1355_cur."!cursor_fail"()
    .return (rx1355_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_155_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1358_start
    .local string rx1358_tgt
    .local int rx1358_pos
    .local int rx1358_off
    .local int rx1358_eos
    .local int rx1358_rep
    .local pmc rx1358_cur
    .local pmc rx1358_curclass
    .local pmc rx1358_bstack
    .local pmc rx1358_cstack
    rx1358_start = self."!cursor_start_all"()
    set rx1358_cur, rx1358_start[0]
    set rx1358_tgt, rx1358_start[1]
    set rx1358_pos, rx1358_start[2]
    set rx1358_curclass, rx1358_start[3]
    set rx1358_bstack, rx1358_start[4]
    set $I19, rx1358_start[5]
    store_lex unicode:"$\x{a2}", rx1358_cur
    length rx1358_eos, rx1358_tgt
    eq $I19, 1, rx1358_restart3192
    gt rx1358_pos, rx1358_eos, rx1358_fail3193
    repr_get_attr_int $I11, self, rx1358_curclass, "$!from"
    ne $I11, -1, rxscan1359_done3199
    goto rxscan1359_scan3198
  rxscan1359_loop3197:
    inc rx1358_pos
    gt rx1358_pos, rx1358_eos, rx1358_fail3193
    repr_bind_attr_int rx1358_cur, rx1358_curclass, "$!from", rx1358_pos
  rxscan1359_scan3198:
    nqp_rxmark rx1358_bstack, rxscan1359_loop3197, rx1358_pos, 0
  rxscan1359_done3199:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1360_03201
    nqp_push_label $P11, alt1360_13203
    nqp_rxmark rx1358_bstack, alt1360_end3200, -1, 0
    rx1358_cur."!alt"(rx1358_pos, "alt_nfa__35_1383915019.58431", $P11)
    goto rx1358_fail3193
  alt1360_03201:
    repr_bind_attr_int rx1358_cur, rx1358_curclass, "$!pos", rx1358_pos
    $P11 = rx1358_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1358_curclass, "$!pos"
    lt $I11, 0, rx1358_fail3193
    nqp_rxmark rx1358_bstack, rxsubrule1361_pass3202, -1, 0
  rxsubrule1361_pass3202:
    rx1358_cstack = rx1358_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1358_pos, $P11, rx1358_curclass, "$!pos"
    goto alt1360_end3200
  alt1360_13203:
    repr_bind_attr_int rx1358_cur, rx1358_curclass, "$!pos", rx1358_pos
    $P11 = rx1358_cur."number"()
    repr_get_attr_int $I11, $P11, rx1358_curclass, "$!pos"
    lt $I11, 0, rx1358_fail3193
    nqp_rxmark rx1358_bstack, rxsubrule1362_pass3204, -1, 0
  rxsubrule1362_pass3204:
    rx1358_cstack = rx1358_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1358_pos, $P11, rx1358_curclass, "$!pos"
    goto alt1360_end3200
  alt1360_end3200:
    rx1358_cur."!cursor_pass"(rx1358_pos, "value", 'backtrack'=>1)
    .return (rx1358_cur)
  rx1358_restart3192:
    repr_get_attr_obj rx1358_cstack, rx1358_cur, rx1358_curclass, "$!cstack"
  rx1358_fail3193:
    unless rx1358_bstack, rx1358_done3191
    pop $I19, rx1358_bstack
    if_null rx1358_cstack, rx1358_cstack_done3196
    unless rx1358_cstack, rx1358_cstack_done3196
    dec $I19
    set $P11, rx1358_cstack[$I19]
  rx1358_cstack_done3196:
    pop rx1358_rep, rx1358_bstack
    pop rx1358_pos, rx1358_bstack
    pop $I19, rx1358_bstack
    lt rx1358_pos, -1, rx1358_done3191
    lt rx1358_pos, 0, rx1358_fail3193
    eq $I19, 0, rx1358_fail3193
    nqp_islist $I20, rx1358_cstack
    unless $I20, rx1358_jump3194
    elements $I18, rx1358_bstack
    le $I18, 0, rx1358_cut3195
    dec $I18
    set $I18, rx1358_bstack[$I18]
  rx1358_cut3195:
    assign rx1358_cstack, $I18
  rx1358_jump3194:
    jump $I19
  rx1358_done3191:
    rx1358_cur."!cursor_fail"()
    .return (rx1358_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_156_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1363_start
    .local string rx1363_tgt
    .local int rx1363_pos
    .local int rx1363_off
    .local int rx1363_eos
    .local int rx1363_rep
    .local pmc rx1363_cur
    .local pmc rx1363_curclass
    .local pmc rx1363_bstack
    .local pmc rx1363_cstack
    rx1363_start = self."!cursor_start_all"()
    set rx1363_cur, rx1363_start[0]
    set rx1363_tgt, rx1363_start[1]
    set rx1363_pos, rx1363_start[2]
    set rx1363_curclass, rx1363_start[3]
    set rx1363_bstack, rx1363_start[4]
    set $I19, rx1363_start[5]
    store_lex unicode:"$\x{a2}", rx1363_cur
    length rx1363_eos, rx1363_tgt
    eq $I19, 1, rx1363_restart3207
    gt rx1363_pos, rx1363_eos, rx1363_fail3208
    repr_get_attr_int $I11, self, rx1363_curclass, "$!from"
    ne $I11, -1, rxscan1364_done3214
    goto rxscan1364_scan3213
  rxscan1364_loop3212:
    inc rx1363_pos
    gt rx1363_pos, rx1363_eos, rx1363_fail3208
    repr_bind_attr_int rx1363_cur, rx1363_curclass, "$!from", rx1363_pos
  rxscan1364_scan3213:
    nqp_rxmark rx1363_bstack, rxscan1364_loop3212, rx1363_pos, 0
  rxscan1364_done3214:
    nqp_rxmark rx1363_bstack, rxcap1365_fail3216, rx1363_pos, 0
    nqp_rxmark rx1363_bstack, rxquantr1366_done3218, rx1363_pos, 0
  rxquantr1366_loop3217:
    ge rx1363_pos, rx1363_eos, rx1363_fail3208
    substr $S11, rx1363_tgt, rx1363_pos, 1
    index $I11, ucs4:"+-", $S11
    lt $I11, 0, rx1363_fail3208
    inc rx1363_pos
    nqp_rxpeek $I19, rx1363_bstack, rxquantr1366_done3218
    inc $I19
    inc $I19
    set rx1363_rep, rx1363_bstack[$I19]
    nqp_rxcommit rx1363_bstack, rxquantr1366_done3218
    inc rx1363_rep
  rxquantr1366_done3218:
    nqp_rxpeek $I19, rx1363_bstack, rxcap1365_fail3216
    inc $I19
    set $I11, rx1363_bstack[$I19]
    repr_bind_attr_int rx1363_cur, rx1363_curclass, "$!pos", rx1363_pos
    $P11 = rx1363_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1363_pos)
    rx1363_cstack = rx1363_cur."!cursor_capture"($P11, "sign")
    goto rxcap1365_done3215
  rxcap1365_fail3216:
    goto rx1363_fail3208
  rxcap1365_done3215:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1367_03220
    nqp_push_label $P11, alt1367_13222
    nqp_rxmark rx1363_bstack, alt1367_end3219, -1, 0
    rx1363_cur."!alt"(rx1363_pos, "alt_nfa__36_1383915019.60304", $P11)
    goto rx1363_fail3208
  alt1367_03220:
    repr_bind_attr_int rx1363_cur, rx1363_curclass, "$!pos", rx1363_pos
    $P11 = rx1363_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1363_curclass, "$!pos"
    lt $I11, 0, rx1363_fail3208
    nqp_rxmark rx1363_bstack, rxsubrule1368_pass3221, -1, 0
  rxsubrule1368_pass3221:
    rx1363_cstack = rx1363_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1363_pos, $P11, rx1363_curclass, "$!pos"
    goto alt1367_end3219
  alt1367_13222:
    repr_bind_attr_int rx1363_cur, rx1363_curclass, "$!pos", rx1363_pos
    $P11 = rx1363_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1363_curclass, "$!pos"
    lt $I11, 0, rx1363_fail3208
    nqp_rxmark rx1363_bstack, rxsubrule1369_pass3223, -1, 0
  rxsubrule1369_pass3223:
    rx1363_cstack = rx1363_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1363_pos, $P11, rx1363_curclass, "$!pos"
    goto alt1367_end3219
  alt1367_end3219:
    nqp_rxcommit rx1363_bstack, alt1367_end3219
    rx1363_cur."!cursor_pass"(rx1363_pos, "number", 'backtrack'=>1)
    .return (rx1363_cur)
  rx1363_restart3207:
    repr_get_attr_obj rx1363_cstack, rx1363_cur, rx1363_curclass, "$!cstack"
  rx1363_fail3208:
    unless rx1363_bstack, rx1363_done3206
    pop $I19, rx1363_bstack
    if_null rx1363_cstack, rx1363_cstack_done3211
    unless rx1363_cstack, rx1363_cstack_done3211
    dec $I19
    set $P11, rx1363_cstack[$I19]
  rx1363_cstack_done3211:
    pop rx1363_rep, rx1363_bstack
    pop rx1363_pos, rx1363_bstack
    pop $I19, rx1363_bstack
    lt rx1363_pos, -1, rx1363_done3206
    lt rx1363_pos, 0, rx1363_fail3208
    eq $I19, 0, rx1363_fail3208
    nqp_islist $I20, rx1363_cstack
    unless $I20, rx1363_jump3209
    elements $I18, rx1363_bstack
    le $I18, 0, rx1363_cut3210
    dec $I18
    set $I18, rx1363_bstack[$I18]
  rx1363_cut3210:
    assign rx1363_cstack, $I18
  rx1363_jump3209:
    jump $I19
  rx1363_done3206:
    rx1363_cur."!cursor_fail"()
    .return (rx1363_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_157_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1407
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_158_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1408
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1370_start
    .local string rx1370_tgt
    .local int rx1370_pos
    .local int rx1370_off
    .local int rx1370_eos
    .local int rx1370_rep
    .local pmc rx1370_cur
    .local pmc rx1370_curclass
    .local pmc rx1370_bstack
    .local pmc rx1370_cstack
    rx1370_start = self."!cursor_start_all"()
    set rx1370_cur, rx1370_start[0]
    set rx1370_tgt, rx1370_start[1]
    set rx1370_pos, rx1370_start[2]
    set rx1370_curclass, rx1370_start[3]
    set rx1370_bstack, rx1370_start[4]
    set $I19, rx1370_start[5]
    store_lex unicode:"$\x{a2}", rx1370_cur
    length rx1370_eos, rx1370_tgt
    eq $I19, 1, rx1370_restart3226
    gt rx1370_pos, rx1370_eos, rx1370_fail3227
    repr_get_attr_int $I11, self, rx1370_curclass, "$!from"
    ne $I11, -1, rxscan1371_done3233
    goto rxscan1371_scan3232
  rxscan1371_loop3231:
    inc rx1370_pos
    gt rx1370_pos, rx1370_eos, rx1370_fail3227
    repr_bind_attr_int rx1370_cur, rx1370_curclass, "$!from", rx1370_pos
  rxscan1371_scan3232:
    nqp_rxmark rx1370_bstack, rxscan1371_loop3231, rx1370_pos, 0
  rxscan1371_done3233:
    ge rx1370_pos, rx1370_eos, rx1370_fail3227
    substr $S11, rx1370_tgt, rx1370_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1370_fail3227
    repr_bind_attr_int rx1370_cur, rx1370_curclass, "$!pos", rx1370_pos
    $P11 = rx1370_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1370_curclass, "$!pos"
    lt $I11, 0, rx1370_fail3227
    nqp_rxmark rx1370_bstack, rxsubrule1372_pass3234, -1, 0
  rxsubrule1372_pass3234:
    rx1370_cstack = rx1370_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1370_pos, $P11, rx1370_curclass, "$!pos"
    rx1370_cur."!cursor_pass"(rx1370_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1370_cur)
  rx1370_restart3226:
    repr_get_attr_obj rx1370_cstack, rx1370_cur, rx1370_curclass, "$!cstack"
  rx1370_fail3227:
    unless rx1370_bstack, rx1370_done3225
    pop $I19, rx1370_bstack
    if_null rx1370_cstack, rx1370_cstack_done3230
    unless rx1370_cstack, rx1370_cstack_done3230
    dec $I19
    set $P11, rx1370_cstack[$I19]
  rx1370_cstack_done3230:
    pop rx1370_rep, rx1370_bstack
    pop rx1370_pos, rx1370_bstack
    pop $I19, rx1370_bstack
    lt rx1370_pos, -1, rx1370_done3225
    lt rx1370_pos, 0, rx1370_fail3227
    eq $I19, 0, rx1370_fail3227
    nqp_islist $I20, rx1370_cstack
    unless $I20, rx1370_jump3228
    elements $I18, rx1370_bstack
    le $I18, 0, rx1370_cut3229
    dec $I18
    set $I18, rx1370_bstack[$I18]
  rx1370_cut3229:
    assign rx1370_cstack, $I18
  rx1370_jump3228:
    jump $I19
  rx1370_done3225:
    rx1370_cur."!cursor_fail"()
    .return (rx1370_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_159_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1409
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1373_start
    .local string rx1373_tgt
    .local int rx1373_pos
    .local int rx1373_off
    .local int rx1373_eos
    .local int rx1373_rep
    .local pmc rx1373_cur
    .local pmc rx1373_curclass
    .local pmc rx1373_bstack
    .local pmc rx1373_cstack
    rx1373_start = self."!cursor_start_all"()
    set rx1373_cur, rx1373_start[0]
    set rx1373_tgt, rx1373_start[1]
    set rx1373_pos, rx1373_start[2]
    set rx1373_curclass, rx1373_start[3]
    set rx1373_bstack, rx1373_start[4]
    set $I19, rx1373_start[5]
    store_lex unicode:"$\x{a2}", rx1373_cur
    length rx1373_eos, rx1373_tgt
    eq $I19, 1, rx1373_restart3237
    gt rx1373_pos, rx1373_eos, rx1373_fail3238
    repr_get_attr_int $I11, self, rx1373_curclass, "$!from"
    ne $I11, -1, rxscan1374_done3244
    goto rxscan1374_scan3243
  rxscan1374_loop3242:
    inc rx1373_pos
    gt rx1373_pos, rx1373_eos, rx1373_fail3238
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!from", rx1373_pos
  rxscan1374_scan3243:
    nqp_rxmark rx1373_bstack, rxscan1374_loop3242, rx1373_pos, 0
  rxscan1374_done3244:
    ge rx1373_pos, rx1373_eos, rx1373_fail3238
    substr $S11, rx1373_tgt, rx1373_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1373_fail3238
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!pos", rx1373_pos
    $P11 = rx1373_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1373_curclass, "$!pos"
    lt $I11, 0, rx1373_fail3238
    nqp_rxmark rx1373_bstack, rxsubrule1375_pass3245, -1, 0
  rxsubrule1375_pass3245:
    rx1373_cstack = rx1373_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1373_pos, $P11, rx1373_curclass, "$!pos"
    rx1373_cur."!cursor_pass"(rx1373_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1373_cur)
  rx1373_restart3237:
    repr_get_attr_obj rx1373_cstack, rx1373_cur, rx1373_curclass, "$!cstack"
  rx1373_fail3238:
    unless rx1373_bstack, rx1373_done3236
    pop $I19, rx1373_bstack
    if_null rx1373_cstack, rx1373_cstack_done3241
    unless rx1373_cstack, rx1373_cstack_done3241
    dec $I19
    set $P11, rx1373_cstack[$I19]
  rx1373_cstack_done3241:
    pop rx1373_rep, rx1373_bstack
    pop rx1373_pos, rx1373_bstack
    pop $I19, rx1373_bstack
    lt rx1373_pos, -1, rx1373_done3236
    lt rx1373_pos, 0, rx1373_fail3238
    eq $I19, 0, rx1373_fail3238
    nqp_islist $I20, rx1373_cstack
    unless $I20, rx1373_jump3239
    elements $I18, rx1373_bstack
    le $I18, 0, rx1373_cut3240
    dec $I18
    set $I18, rx1373_bstack[$I18]
  rx1373_cut3240:
    assign rx1373_cstack, $I18
  rx1373_jump3239:
    jump $I19
  rx1373_done3236:
    rx1373_cur."!cursor_fail"()
    .return (rx1373_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_160_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1410
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1376_start
    .local string rx1376_tgt
    .local int rx1376_pos
    .local int rx1376_off
    .local int rx1376_eos
    .local int rx1376_rep
    .local pmc rx1376_cur
    .local pmc rx1376_curclass
    .local pmc rx1376_bstack
    .local pmc rx1376_cstack
    rx1376_start = self."!cursor_start_all"()
    set rx1376_cur, rx1376_start[0]
    set rx1376_tgt, rx1376_start[1]
    set rx1376_pos, rx1376_start[2]
    set rx1376_curclass, rx1376_start[3]
    set rx1376_bstack, rx1376_start[4]
    set $I19, rx1376_start[5]
    store_lex unicode:"$\x{a2}", rx1376_cur
    length rx1376_eos, rx1376_tgt
    eq $I19, 1, rx1376_restart3248
    gt rx1376_pos, rx1376_eos, rx1376_fail3249
    repr_get_attr_int $I11, self, rx1376_curclass, "$!from"
    ne $I11, -1, rxscan1377_done3255
    goto rxscan1377_scan3254
  rxscan1377_loop3253:
    inc rx1376_pos
    gt rx1376_pos, rx1376_eos, rx1376_fail3249
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!from", rx1376_pos
  rxscan1377_scan3254:
    nqp_rxmark rx1376_bstack, rxscan1377_loop3253, rx1376_pos, 0
  rxscan1377_done3255:
    nqp_rxmark rx1376_bstack, rxcap1378_fail3257, rx1376_pos, 0
    add $I11, rx1376_pos, 1
    gt $I11, rx1376_eos, rx1376_fail3249
    substr $S10, rx1376_tgt, rx1376_pos, 1
    ne $S10, ucs4:"q", rx1376_fail3249
    add rx1376_pos, 1
    nqp_rxpeek $I19, rx1376_bstack, rxcap1378_fail3257
    inc $I19
    set $I11, rx1376_bstack[$I19]
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1376_pos)
    rx1376_cstack = rx1376_cur."!cursor_capture"($P11, "sym")
    goto rxcap1378_done3256
  rxcap1378_fail3257:
    goto rx1376_fail3249
  rxcap1378_done3256:
    le rx1376_pos, 0, rx1376_fail3249
    is_cclass $I11, .CCLASS_WORD, rx1376_tgt, rx1376_pos
    if $I11, rx1376_fail3249
    sub $I11, rx1376_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1376_tgt, $I11
    unless $I11, rx1376_fail3249
    ge rx1376_pos, rx1376_eos, rx1376_fail3249
    substr $S11, rx1376_tgt, rx1376_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1376_fail3249
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1376_curclass, "$!pos"
    lt $I11, 0, rx1376_fail3249
    repr_get_attr_int rx1376_pos, $P11, rx1376_curclass, "$!pos"
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1376_curclass, "$!pos"
    lt $I11, 0, rx1376_fail3249
    nqp_rxmark rx1376_bstack, rxsubrule1381_pass3260, -1, 0
  rxsubrule1381_pass3260:
    rx1376_cstack = rx1376_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1376_pos, $P11, rx1376_curclass, "$!pos"
    rx1376_cur."!cursor_pass"(rx1376_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1376_cur)
  rx1376_restart3248:
    repr_get_attr_obj rx1376_cstack, rx1376_cur, rx1376_curclass, "$!cstack"
  rx1376_fail3249:
    unless rx1376_bstack, rx1376_done3247
    pop $I19, rx1376_bstack
    if_null rx1376_cstack, rx1376_cstack_done3252
    unless rx1376_cstack, rx1376_cstack_done3252
    dec $I19
    set $P11, rx1376_cstack[$I19]
  rx1376_cstack_done3252:
    pop rx1376_rep, rx1376_bstack
    pop rx1376_pos, rx1376_bstack
    pop $I19, rx1376_bstack
    lt rx1376_pos, -1, rx1376_done3247
    lt rx1376_pos, 0, rx1376_fail3249
    eq $I19, 0, rx1376_fail3249
    nqp_islist $I20, rx1376_cstack
    unless $I20, rx1376_jump3250
    elements $I18, rx1376_bstack
    le $I18, 0, rx1376_cut3251
    dec $I18
    set $I18, rx1376_bstack[$I18]
  rx1376_cut3251:
    assign rx1376_cstack, $I18
  rx1376_jump3250:
    jump $I19
  rx1376_done3247:
    rx1376_cur."!cursor_fail"()
    .return (rx1376_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_161_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1411
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1382_start
    .local string rx1382_tgt
    .local int rx1382_pos
    .local int rx1382_off
    .local int rx1382_eos
    .local int rx1382_rep
    .local pmc rx1382_cur
    .local pmc rx1382_curclass
    .local pmc rx1382_bstack
    .local pmc rx1382_cstack
    rx1382_start = self."!cursor_start_all"()
    set rx1382_cur, rx1382_start[0]
    set rx1382_tgt, rx1382_start[1]
    set rx1382_pos, rx1382_start[2]
    set rx1382_curclass, rx1382_start[3]
    set rx1382_bstack, rx1382_start[4]
    set $I19, rx1382_start[5]
    store_lex unicode:"$\x{a2}", rx1382_cur
    length rx1382_eos, rx1382_tgt
    eq $I19, 1, rx1382_restart3263
    gt rx1382_pos, rx1382_eos, rx1382_fail3264
    repr_get_attr_int $I11, self, rx1382_curclass, "$!from"
    ne $I11, -1, rxscan1383_done3270
    goto rxscan1383_scan3269
  rxscan1383_loop3268:
    inc rx1382_pos
    gt rx1382_pos, rx1382_eos, rx1382_fail3264
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!from", rx1382_pos
  rxscan1383_scan3269:
    nqp_rxmark rx1382_bstack, rxscan1383_loop3268, rx1382_pos, 0
  rxscan1383_done3270:
    nqp_rxmark rx1382_bstack, rxcap1384_fail3272, rx1382_pos, 0
    add $I11, rx1382_pos, 2
    gt $I11, rx1382_eos, rx1382_fail3264
    substr $S10, rx1382_tgt, rx1382_pos, 2
    ne $S10, ucs4:"qq", rx1382_fail3264
    add rx1382_pos, 2
    nqp_rxpeek $I19, rx1382_bstack, rxcap1384_fail3272
    inc $I19
    set $I11, rx1382_bstack[$I19]
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!pos", rx1382_pos
    $P11 = rx1382_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1382_pos)
    rx1382_cstack = rx1382_cur."!cursor_capture"($P11, "sym")
    goto rxcap1384_done3271
  rxcap1384_fail3272:
    goto rx1382_fail3264
  rxcap1384_done3271:
    le rx1382_pos, 0, rx1382_fail3264
    is_cclass $I11, .CCLASS_WORD, rx1382_tgt, rx1382_pos
    if $I11, rx1382_fail3264
    sub $I11, rx1382_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1382_tgt, $I11
    unless $I11, rx1382_fail3264
    ge rx1382_pos, rx1382_eos, rx1382_fail3264
    substr $S11, rx1382_tgt, rx1382_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1382_fail3264
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!pos", rx1382_pos
    $P11 = rx1382_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1382_curclass, "$!pos"
    lt $I11, 0, rx1382_fail3264
    repr_get_attr_int rx1382_pos, $P11, rx1382_curclass, "$!pos"
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!pos", rx1382_pos
    $P11 = rx1382_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1382_curclass, "$!pos"
    lt $I11, 0, rx1382_fail3264
    nqp_rxmark rx1382_bstack, rxsubrule1387_pass3275, -1, 0
  rxsubrule1387_pass3275:
    rx1382_cstack = rx1382_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1382_pos, $P11, rx1382_curclass, "$!pos"
    rx1382_cur."!cursor_pass"(rx1382_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1382_cur)
  rx1382_restart3263:
    repr_get_attr_obj rx1382_cstack, rx1382_cur, rx1382_curclass, "$!cstack"
  rx1382_fail3264:
    unless rx1382_bstack, rx1382_done3262
    pop $I19, rx1382_bstack
    if_null rx1382_cstack, rx1382_cstack_done3267
    unless rx1382_cstack, rx1382_cstack_done3267
    dec $I19
    set $P11, rx1382_cstack[$I19]
  rx1382_cstack_done3267:
    pop rx1382_rep, rx1382_bstack
    pop rx1382_pos, rx1382_bstack
    pop $I19, rx1382_bstack
    lt rx1382_pos, -1, rx1382_done3262
    lt rx1382_pos, 0, rx1382_fail3264
    eq $I19, 0, rx1382_fail3264
    nqp_islist $I20, rx1382_cstack
    unless $I20, rx1382_jump3265
    elements $I18, rx1382_bstack
    le $I18, 0, rx1382_cut3266
    dec $I18
    set $I18, rx1382_bstack[$I18]
  rx1382_cut3266:
    assign rx1382_cstack, $I18
  rx1382_jump3265:
    jump $I19
  rx1382_done3262:
    rx1382_cur."!cursor_fail"()
    .return (rx1382_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_162_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1388_start
    .local string rx1388_tgt
    .local int rx1388_pos
    .local int rx1388_off
    .local int rx1388_eos
    .local int rx1388_rep
    .local pmc rx1388_cur
    .local pmc rx1388_curclass
    .local pmc rx1388_bstack
    .local pmc rx1388_cstack
    rx1388_start = self."!cursor_start_all"()
    set rx1388_cur, rx1388_start[0]
    set rx1388_tgt, rx1388_start[1]
    set rx1388_pos, rx1388_start[2]
    set rx1388_curclass, rx1388_start[3]
    set rx1388_bstack, rx1388_start[4]
    set $I19, rx1388_start[5]
    store_lex unicode:"$\x{a2}", rx1388_cur
    length rx1388_eos, rx1388_tgt
    eq $I19, 1, rx1388_restart3278
    gt rx1388_pos, rx1388_eos, rx1388_fail3279
    repr_get_attr_int $I11, self, rx1388_curclass, "$!from"
    ne $I11, -1, rxscan1389_done3285
    goto rxscan1389_scan3284
  rxscan1389_loop3283:
    inc rx1388_pos
    gt rx1388_pos, rx1388_eos, rx1388_fail3279
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!from", rx1388_pos
  rxscan1389_scan3284:
    nqp_rxmark rx1388_bstack, rxscan1389_loop3283, rx1388_pos, 0
  rxscan1389_done3285:
    nqp_rxmark rx1388_bstack, rxcap1390_fail3287, rx1388_pos, 0
    add $I11, rx1388_pos, 1
    gt $I11, rx1388_eos, rx1388_fail3279
    substr $S10, rx1388_tgt, rx1388_pos, 1
    ne $S10, ucs4:"Q", rx1388_fail3279
    add rx1388_pos, 1
    nqp_rxpeek $I19, rx1388_bstack, rxcap1390_fail3287
    inc $I19
    set $I11, rx1388_bstack[$I19]
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!pos", rx1388_pos
    $P11 = rx1388_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1388_pos)
    rx1388_cstack = rx1388_cur."!cursor_capture"($P11, "sym")
    goto rxcap1390_done3286
  rxcap1390_fail3287:
    goto rx1388_fail3279
  rxcap1390_done3286:
    le rx1388_pos, 0, rx1388_fail3279
    is_cclass $I11, .CCLASS_WORD, rx1388_tgt, rx1388_pos
    if $I11, rx1388_fail3279
    sub $I11, rx1388_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1388_tgt, $I11
    unless $I11, rx1388_fail3279
    ge rx1388_pos, rx1388_eos, rx1388_fail3279
    substr $S11, rx1388_tgt, rx1388_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1388_fail3279
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!pos", rx1388_pos
    $P11 = rx1388_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1388_curclass, "$!pos"
    lt $I11, 0, rx1388_fail3279
    repr_get_attr_int rx1388_pos, $P11, rx1388_curclass, "$!pos"
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!pos", rx1388_pos
    $P11 = rx1388_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1388_curclass, "$!pos"
    lt $I11, 0, rx1388_fail3279
    nqp_rxmark rx1388_bstack, rxsubrule1393_pass3290, -1, 0
  rxsubrule1393_pass3290:
    rx1388_cstack = rx1388_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1388_pos, $P11, rx1388_curclass, "$!pos"
    rx1388_cur."!cursor_pass"(rx1388_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1388_cur)
  rx1388_restart3278:
    repr_get_attr_obj rx1388_cstack, rx1388_cur, rx1388_curclass, "$!cstack"
  rx1388_fail3279:
    unless rx1388_bstack, rx1388_done3277
    pop $I19, rx1388_bstack
    if_null rx1388_cstack, rx1388_cstack_done3282
    unless rx1388_cstack, rx1388_cstack_done3282
    dec $I19
    set $P11, rx1388_cstack[$I19]
  rx1388_cstack_done3282:
    pop rx1388_rep, rx1388_bstack
    pop rx1388_pos, rx1388_bstack
    pop $I19, rx1388_bstack
    lt rx1388_pos, -1, rx1388_done3277
    lt rx1388_pos, 0, rx1388_fail3279
    eq $I19, 0, rx1388_fail3279
    nqp_islist $I20, rx1388_cstack
    unless $I20, rx1388_jump3280
    elements $I18, rx1388_bstack
    le $I18, 0, rx1388_cut3281
    dec $I18
    set $I18, rx1388_bstack[$I18]
  rx1388_cut3281:
    assign rx1388_cstack, $I18
  rx1388_jump3280:
    jump $I19
  rx1388_done3277:
    rx1388_cur."!cursor_fail"()
    .return (rx1388_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_163_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1413
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1394_start
    .local string rx1394_tgt
    .local int rx1394_pos
    .local int rx1394_off
    .local int rx1394_eos
    .local int rx1394_rep
    .local pmc rx1394_cur
    .local pmc rx1394_curclass
    .local pmc rx1394_bstack
    .local pmc rx1394_cstack
    rx1394_start = self."!cursor_start_all"()
    set rx1394_cur, rx1394_start[0]
    set rx1394_tgt, rx1394_start[1]
    set rx1394_pos, rx1394_start[2]
    set rx1394_curclass, rx1394_start[3]
    set rx1394_bstack, rx1394_start[4]
    set $I19, rx1394_start[5]
    store_lex unicode:"$\x{a2}", rx1394_cur
    length rx1394_eos, rx1394_tgt
    eq $I19, 1, rx1394_restart3293
    gt rx1394_pos, rx1394_eos, rx1394_fail3294
    repr_get_attr_int $I11, self, rx1394_curclass, "$!from"
    ne $I11, -1, rxscan1395_done3300
    goto rxscan1395_scan3299
  rxscan1395_loop3298:
    inc rx1394_pos
    gt rx1394_pos, rx1394_eos, rx1394_fail3294
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!from", rx1394_pos
  rxscan1395_scan3299:
    nqp_rxmark rx1394_bstack, rxscan1395_loop3298, rx1394_pos, 0
  rxscan1395_done3300:
    nqp_rxmark rx1394_bstack, rxcap1396_fail3302, rx1394_pos, 0
    add $I11, rx1394_pos, 5
    gt $I11, rx1394_eos, rx1394_fail3294
    substr $S10, rx1394_tgt, rx1394_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1394_fail3294
    add rx1394_pos, 5
    nqp_rxpeek $I19, rx1394_bstack, rxcap1396_fail3302
    inc $I19
    set $I11, rx1394_bstack[$I19]
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1394_pos)
    rx1394_cstack = rx1394_cur."!cursor_capture"($P11, "sym")
    goto rxcap1396_done3301
  rxcap1396_fail3302:
    goto rx1394_fail3294
  rxcap1396_done3301:
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1394_curclass, "$!pos"
    lt $I11, 0, rx1394_fail3294
    repr_get_attr_int rx1394_pos, $P11, rx1394_curclass, "$!pos"
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1394_curclass, "$!pos"
    lt $I11, 0, rx1394_fail3294
    nqp_rxmark rx1394_bstack, rxsubrule1398_pass3304, -1, 0
  rxsubrule1398_pass3304:
    rx1394_cstack = rx1394_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1394_pos, $P11, rx1394_curclass, "$!pos"
    rx1394_cur."!cursor_pass"(rx1394_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1394_cur)
  rx1394_restart3293:
    repr_get_attr_obj rx1394_cstack, rx1394_cur, rx1394_curclass, "$!cstack"
  rx1394_fail3294:
    unless rx1394_bstack, rx1394_done3292
    pop $I19, rx1394_bstack
    if_null rx1394_cstack, rx1394_cstack_done3297
    unless rx1394_cstack, rx1394_cstack_done3297
    dec $I19
    set $P11, rx1394_cstack[$I19]
  rx1394_cstack_done3297:
    pop rx1394_rep, rx1394_bstack
    pop rx1394_pos, rx1394_bstack
    pop $I19, rx1394_bstack
    lt rx1394_pos, -1, rx1394_done3292
    lt rx1394_pos, 0, rx1394_fail3294
    eq $I19, 0, rx1394_fail3294
    nqp_islist $I20, rx1394_cstack
    unless $I20, rx1394_jump3295
    elements $I18, rx1394_bstack
    le $I18, 0, rx1394_cut3296
    dec $I18
    set $I18, rx1394_bstack[$I18]
  rx1394_cut3296:
    assign rx1394_cstack, $I18
  rx1394_jump3295:
    jump $I19
  rx1394_done3292:
    rx1394_cur."!cursor_fail"()
    .return (rx1394_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_164_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1414
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_192 
    .local pmc pkg_viv_tmp_32 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1399_start
    .local string rx1399_tgt
    .local int rx1399_pos
    .local int rx1399_off
    .local int rx1399_eos
    .local int rx1399_rep
    .local pmc rx1399_cur
    .local pmc rx1399_curclass
    .local pmc rx1399_bstack
    .local pmc rx1399_cstack
    rx1399_start = self."!cursor_start_all"()
    set rx1399_cur, rx1399_start[0]
    set rx1399_tgt, rx1399_start[1]
    set rx1399_pos, rx1399_start[2]
    set rx1399_curclass, rx1399_start[3]
    set rx1399_bstack, rx1399_start[4]
    set $I19, rx1399_start[5]
    store_lex unicode:"$\x{a2}", rx1399_cur
    length rx1399_eos, rx1399_tgt
    eq $I19, 1, rx1399_restart3307
    gt rx1399_pos, rx1399_eos, rx1399_fail3308
    repr_get_attr_int $I11, self, rx1399_curclass, "$!from"
    ne $I11, -1, rxscan1400_done3314
    goto rxscan1400_scan3313
  rxscan1400_loop3312:
    inc rx1399_pos
    index rx1399_pos, rx1399_tgt, ucs4:"/", rx1399_pos
    eq rx1399_pos, -1, rx1399_fail3308
    repr_bind_attr_int rx1399_cur, rx1399_curclass, "$!from", rx1399_pos
  rxscan1400_scan3313:
    nqp_rxmark rx1399_bstack, rxscan1400_loop3312, rx1399_pos, 0
  rxscan1400_done3314:
    add $I11, rx1399_pos, 1
    gt $I11, rx1399_eos, rx1399_fail3308
    substr $S10, rx1399_tgt, rx1399_pos, 1
    ne $S10, ucs4:"/", rx1399_fail3308
    add rx1399_pos, 1
    repr_bind_attr_int rx1399_cur, rx1399_curclass, "$!pos", rx1399_pos
    $P11 = rx1399_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1399_curclass, "$!pos"
    lt $I11, 0, rx1399_fail3308
    repr_get_attr_int rx1399_pos, $P11, rx1399_curclass, "$!pos"
    repr_bind_attr_int rx1399_cur, rx1399_curclass, "$!pos", rx1399_pos
    store_lex unicode:"$\x{a2}", rx1399_cur
    unless_null $P101, fallback3316
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_32, $P5002
    set fb_tmp_192, pkg_viv_tmp_32
    repr_defined $I5001, fb_tmp_192
    unless $I5001 goto if1402_else3317 
    set $P5004, fb_tmp_192["%RX"]
    set $P5006, $P5004
    goto if1402_end3318
  if1402_else3317:
    null $P5005
    set $P5006, $P5005
  if1402_end3318:
    unless_null $P5006, vivi_14033319
    new $P5007, 'Hash'
    set pkg_viv_tmp_32["%RX"], $P5007
    set $P5006, $P5007
  vivi_14033319:
    unless_null $P5006, vivi_14043320
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_14043320:
    set $P101, $P5006
  fallback3316:
    repr_bind_attr_int rx1399_cur, rx1399_curclass, "$!pos", rx1399_pos
    $P11 = rx1399_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1399_curclass, "$!pos"
    lt $I11, 0, rx1399_fail3308
    nqp_rxmark rx1399_bstack, rxsubrule1405_pass3321, -1, 0
  rxsubrule1405_pass3321:
    rx1399_cstack = rx1399_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1399_pos, $P11, rx1399_curclass, "$!pos"
    add $I11, rx1399_pos, 1
    gt $I11, rx1399_eos, rx1399_fail3308
    substr $S10, rx1399_tgt, rx1399_pos, 1
    ne $S10, ucs4:"/", rx1399_fail3308
    add rx1399_pos, 1
    rx1399_cur."!cursor_pass"(rx1399_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1399_cur)
  rx1399_restart3307:
    repr_get_attr_obj rx1399_cstack, rx1399_cur, rx1399_curclass, "$!cstack"
  rx1399_fail3308:
    unless rx1399_bstack, rx1399_done3306
    pop $I19, rx1399_bstack
    if_null rx1399_cstack, rx1399_cstack_done3311
    unless rx1399_cstack, rx1399_cstack_done3311
    dec $I19
    set $P11, rx1399_cstack[$I19]
  rx1399_cstack_done3311:
    pop rx1399_rep, rx1399_bstack
    pop rx1399_pos, rx1399_bstack
    pop $I19, rx1399_bstack
    lt rx1399_pos, -1, rx1399_done3306
    lt rx1399_pos, 0, rx1399_fail3308
    eq $I19, 0, rx1399_fail3308
    nqp_islist $I20, rx1399_cstack
    unless $I20, rx1399_jump3309
    elements $I18, rx1399_bstack
    le $I18, 0, rx1399_cut3310
    dec $I18
    set $I18, rx1399_bstack[$I18]
  rx1399_cut3310:
    assign rx1399_cstack, $I18
  rx1399_jump3309:
    jump $I19
  rx1399_done3306:
    rx1399_cur."!cursor_fail"()
    .return (rx1399_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_165_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1422
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1406_start
    .local string rx1406_tgt
    .local int rx1406_pos
    .local int rx1406_off
    .local int rx1406_eos
    .local int rx1406_rep
    .local pmc rx1406_cur
    .local pmc rx1406_curclass
    .local pmc rx1406_bstack
    .local pmc rx1406_cstack
    rx1406_start = self."!cursor_start_all"()
    set rx1406_cur, rx1406_start[0]
    set rx1406_tgt, rx1406_start[1]
    set rx1406_pos, rx1406_start[2]
    set rx1406_curclass, rx1406_start[3]
    set rx1406_bstack, rx1406_start[4]
    set $I19, rx1406_start[5]
    store_lex unicode:"$\x{a2}", rx1406_cur
    length rx1406_eos, rx1406_tgt
    eq $I19, 1, rx1406_restart3324
    gt rx1406_pos, rx1406_eos, rx1406_fail3325
    repr_get_attr_int $I11, self, rx1406_curclass, "$!from"
    ne $I11, -1, rxscan1407_done3331
    goto rxscan1407_scan3330
  rxscan1407_loop3329:
    inc rx1406_pos
    gt rx1406_pos, rx1406_eos, rx1406_fail3325
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!from", rx1406_pos
  rxscan1407_scan3330:
    nqp_rxmark rx1406_bstack, rxscan1407_loop3329, rx1406_pos, 0
  rxscan1407_done3331:
    ge rx1406_pos, rx1406_eos, rx1406_fail3325
    substr $S11, rx1406_tgt, rx1406_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1406_fail3325
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3325
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3325
    nqp_rxmark rx1406_bstack, rxsubrule1408_pass3332, -1, 0
  rxsubrule1408_pass3332:
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    rx1406_cur."!cursor_pass"(rx1406_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1406_cur)
  rx1406_restart3324:
    repr_get_attr_obj rx1406_cstack, rx1406_cur, rx1406_curclass, "$!cstack"
  rx1406_fail3325:
    unless rx1406_bstack, rx1406_done3323
    pop $I19, rx1406_bstack
    if_null rx1406_cstack, rx1406_cstack_done3328
    unless rx1406_cstack, rx1406_cstack_done3328
    dec $I19
    set $P11, rx1406_cstack[$I19]
  rx1406_cstack_done3328:
    pop rx1406_rep, rx1406_bstack
    pop rx1406_pos, rx1406_bstack
    pop $I19, rx1406_bstack
    lt rx1406_pos, -1, rx1406_done3323
    lt rx1406_pos, 0, rx1406_fail3325
    eq $I19, 0, rx1406_fail3325
    nqp_islist $I20, rx1406_cstack
    unless $I20, rx1406_jump3326
    elements $I18, rx1406_bstack
    le $I18, 0, rx1406_cut3327
    dec $I18
    set $I18, rx1406_bstack[$I18]
  rx1406_cut3327:
    assign rx1406_cstack, $I18
  rx1406_jump3326:
    jump $I19
  rx1406_done3323:
    rx1406_cur."!cursor_fail"()
    .return (rx1406_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_166_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1409_start
    .local string rx1409_tgt
    .local int rx1409_pos
    .local int rx1409_off
    .local int rx1409_eos
    .local int rx1409_rep
    .local pmc rx1409_cur
    .local pmc rx1409_curclass
    .local pmc rx1409_bstack
    .local pmc rx1409_cstack
    rx1409_start = self."!cursor_start_all"()
    set rx1409_cur, rx1409_start[0]
    set rx1409_tgt, rx1409_start[1]
    set rx1409_pos, rx1409_start[2]
    set rx1409_curclass, rx1409_start[3]
    set rx1409_bstack, rx1409_start[4]
    set $I19, rx1409_start[5]
    store_lex unicode:"$\x{a2}", rx1409_cur
    length rx1409_eos, rx1409_tgt
    eq $I19, 1, rx1409_restart3335
    gt rx1409_pos, rx1409_eos, rx1409_fail3336
    repr_get_attr_int $I11, self, rx1409_curclass, "$!from"
    ne $I11, -1, rxscan1410_done3342
    goto rxscan1410_scan3341
  rxscan1410_loop3340:
    inc rx1409_pos
    gt rx1409_pos, rx1409_eos, rx1409_fail3336
    repr_bind_attr_int rx1409_cur, rx1409_curclass, "$!from", rx1409_pos
  rxscan1410_scan3341:
    nqp_rxmark rx1409_bstack, rxscan1410_loop3340, rx1409_pos, 0
  rxscan1410_done3342:
    ge rx1409_pos, rx1409_eos, rx1409_fail3336
    substr $S11, rx1409_tgt, rx1409_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1409_fail3336
    repr_bind_attr_int rx1409_cur, rx1409_curclass, "$!pos", rx1409_pos
    $P11 = rx1409_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1409_curclass, "$!pos"
    lt $I11, 0, rx1409_fail3336
    repr_bind_attr_int rx1409_cur, rx1409_curclass, "$!pos", rx1409_pos
    $P11 = rx1409_cur."block"()
    repr_get_attr_int $I11, $P11, rx1409_curclass, "$!pos"
    lt $I11, 0, rx1409_fail3336
    nqp_rxmark rx1409_bstack, rxsubrule1411_pass3343, -1, 0
  rxsubrule1411_pass3343:
    rx1409_cstack = rx1409_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1409_pos, $P11, rx1409_curclass, "$!pos"
    rx1409_cur."!cursor_pass"(rx1409_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1409_cur)
  rx1409_restart3335:
    repr_get_attr_obj rx1409_cstack, rx1409_cur, rx1409_curclass, "$!cstack"
  rx1409_fail3336:
    unless rx1409_bstack, rx1409_done3334
    pop $I19, rx1409_bstack
    if_null rx1409_cstack, rx1409_cstack_done3339
    unless rx1409_cstack, rx1409_cstack_done3339
    dec $I19
    set $P11, rx1409_cstack[$I19]
  rx1409_cstack_done3339:
    pop rx1409_rep, rx1409_bstack
    pop rx1409_pos, rx1409_bstack
    pop $I19, rx1409_bstack
    lt rx1409_pos, -1, rx1409_done3334
    lt rx1409_pos, 0, rx1409_fail3336
    eq $I19, 0, rx1409_fail3336
    nqp_islist $I20, rx1409_cstack
    unless $I20, rx1409_jump3337
    elements $I18, rx1409_bstack
    le $I18, 0, rx1409_cut3338
    dec $I18
    set $I18, rx1409_bstack[$I18]
  rx1409_cut3338:
    assign rx1409_cstack, $I18
  rx1409_jump3337:
    jump $I19
  rx1409_done3334:
    rx1409_cur."!cursor_fail"()
    .return (rx1409_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_167_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1424
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1412_start
    .local string rx1412_tgt
    .local int rx1412_pos
    .local int rx1412_off
    .local int rx1412_eos
    .local int rx1412_rep
    .local pmc rx1412_cur
    .local pmc rx1412_curclass
    .local pmc rx1412_bstack
    .local pmc rx1412_cstack
    rx1412_start = self."!cursor_start_all"()
    set rx1412_cur, rx1412_start[0]
    set rx1412_tgt, rx1412_start[1]
    set rx1412_pos, rx1412_start[2]
    set rx1412_curclass, rx1412_start[3]
    set rx1412_bstack, rx1412_start[4]
    set $I19, rx1412_start[5]
    store_lex unicode:"$\x{a2}", rx1412_cur
    length rx1412_eos, rx1412_tgt
    eq $I19, 1, rx1412_restart3346
    gt rx1412_pos, rx1412_eos, rx1412_fail3347
    repr_get_attr_int $I11, self, rx1412_curclass, "$!from"
    ne $I11, -1, rxscan1413_done3353
    goto rxscan1413_scan3352
  rxscan1413_loop3351:
    inc rx1412_pos
    gt rx1412_pos, rx1412_eos, rx1412_fail3347
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!from", rx1412_pos
  rxscan1413_scan3352:
    nqp_rxmark rx1412_bstack, rxscan1413_loop3351, rx1412_pos, 0
  rxscan1413_done3353:
    ge rx1412_pos, rx1412_eos, rx1412_fail3347
    substr $S11, rx1412_tgt, rx1412_pos, 1
    index $I11, ucs4:"\\", $S11
    lt $I11, 0, rx1412_fail3347
    inc rx1412_pos
    add $I11, rx1412_pos, 1
    gt $I11, rx1412_eos, rx1412_fail3347
    substr $S10, rx1412_tgt, rx1412_pos, 1
    ne $S10, ucs4:"e", rx1412_fail3347
    add rx1412_pos, 1
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!pos", rx1412_pos
    $P11 = rx1412_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1412_curclass, "$!pos"
    lt $I11, 0, rx1412_fail3347
    rx1412_cur."!cursor_pass"(rx1412_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1412_cur)
  rx1412_restart3346:
    repr_get_attr_obj rx1412_cstack, rx1412_cur, rx1412_curclass, "$!cstack"
  rx1412_fail3347:
    unless rx1412_bstack, rx1412_done3345
    pop $I19, rx1412_bstack
    if_null rx1412_cstack, rx1412_cstack_done3350
    unless rx1412_cstack, rx1412_cstack_done3350
    dec $I19
    set $P11, rx1412_cstack[$I19]
  rx1412_cstack_done3350:
    pop rx1412_rep, rx1412_bstack
    pop rx1412_pos, rx1412_bstack
    pop $I19, rx1412_bstack
    lt rx1412_pos, -1, rx1412_done3345
    lt rx1412_pos, 0, rx1412_fail3347
    eq $I19, 0, rx1412_fail3347
    nqp_islist $I20, rx1412_cstack
    unless $I20, rx1412_jump3348
    elements $I18, rx1412_bstack
    le $I18, 0, rx1412_cut3349
    dec $I18
    set $I18, rx1412_bstack[$I18]
  rx1412_cut3349:
    assign rx1412_cstack, $I18
  rx1412_jump3348:
    jump $I19
  rx1412_done3345:
    rx1412_cur."!cursor_fail"()
    .return (rx1412_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_168_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1414_start
    .local string rx1414_tgt
    .local int rx1414_pos
    .local int rx1414_off
    .local int rx1414_eos
    .local int rx1414_rep
    .local pmc rx1414_cur
    .local pmc rx1414_curclass
    .local pmc rx1414_bstack
    .local pmc rx1414_cstack
    rx1414_start = self."!cursor_start_all"()
    set rx1414_cur, rx1414_start[0]
    set rx1414_tgt, rx1414_start[1]
    set rx1414_pos, rx1414_start[2]
    set rx1414_curclass, rx1414_start[3]
    set rx1414_bstack, rx1414_start[4]
    set $I19, rx1414_start[5]
    store_lex unicode:"$\x{a2}", rx1414_cur
    length rx1414_eos, rx1414_tgt
    eq $I19, 1, rx1414_restart3356
    gt rx1414_pos, rx1414_eos, rx1414_fail3357
    repr_get_attr_int $I11, self, rx1414_curclass, "$!from"
    ne $I11, -1, rxscan1415_done3363
    goto rxscan1415_scan3362
  rxscan1415_loop3361:
    inc rx1414_pos
    index rx1414_pos, rx1414_tgt, ucs4:"(", rx1414_pos
    eq rx1414_pos, -1, rx1414_fail3357
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!from", rx1414_pos
  rxscan1415_scan3362:
    nqp_rxmark rx1414_bstack, rxscan1415_loop3361, rx1414_pos, 0
  rxscan1415_done3363:
    add $I11, rx1414_pos, 1
    gt $I11, rx1414_eos, rx1414_fail3357
    substr $S10, rx1414_tgt, rx1414_pos, 1
    ne $S10, ucs4:"(", rx1414_fail3357
    add rx1414_pos, 1
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!pos", rx1414_pos
    $P11 = rx1414_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1414_curclass, "$!pos"
    lt $I11, 0, rx1414_fail3357
    repr_get_attr_int rx1414_pos, $P11, rx1414_curclass, "$!pos"
    nqp_rxmark rx1414_bstack, rxquantr1417_done3366, rx1414_pos, 0
  rxquantr1417_loop3365:
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!pos", rx1414_pos
    $P11 = rx1414_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1414_curclass, "$!pos"
    lt $I11, 0, rx1414_fail3357
    goto rxsubrule1418_pass3367
  rxsubrule1418_back3368:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1414_curclass, "$!pos"
    lt $I11, 0, rx1414_fail3357
  rxsubrule1418_pass3367:
    rx1414_cstack = rx1414_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1418_back3368
    push rx1414_bstack, $I11
    push rx1414_bstack, 0
    push rx1414_bstack, rx1414_pos
    elements $I11, rx1414_cstack
    push rx1414_bstack, $I11
    repr_get_attr_int rx1414_pos, $P11, rx1414_curclass, "$!pos"
    nqp_rxpeek $I19, rx1414_bstack, rxquantr1417_done3366
    inc $I19
    inc $I19
    set rx1414_rep, rx1414_bstack[$I19]
    nqp_rxcommit rx1414_bstack, rxquantr1417_done3366
    inc rx1414_rep
  rxquantr1417_done3366:
    add $I11, rx1414_pos, 1
    gt $I11, rx1414_eos, rx1414_fail3357
    substr $S10, rx1414_tgt, rx1414_pos, 1
    ne $S10, ucs4:")", rx1414_fail3357
    add rx1414_pos, 1
    rx1414_cur."!cursor_pass"(rx1414_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1414_cur)
  rx1414_restart3356:
    repr_get_attr_obj rx1414_cstack, rx1414_cur, rx1414_curclass, "$!cstack"
  rx1414_fail3357:
    unless rx1414_bstack, rx1414_done3355
    pop $I19, rx1414_bstack
    if_null rx1414_cstack, rx1414_cstack_done3360
    unless rx1414_cstack, rx1414_cstack_done3360
    dec $I19
    set $P11, rx1414_cstack[$I19]
  rx1414_cstack_done3360:
    pop rx1414_rep, rx1414_bstack
    pop rx1414_pos, rx1414_bstack
    pop $I19, rx1414_bstack
    lt rx1414_pos, -1, rx1414_done3355
    lt rx1414_pos, 0, rx1414_fail3357
    eq $I19, 0, rx1414_fail3357
    nqp_islist $I20, rx1414_cstack
    unless $I20, rx1414_jump3358
    elements $I18, rx1414_bstack
    le $I18, 0, rx1414_cut3359
    dec $I18
    set $I18, rx1414_bstack[$I18]
  rx1414_cut3359:
    assign rx1414_cstack, $I18
  rx1414_jump3358:
    jump $I19
  rx1414_done3355:
    rx1414_cur."!cursor_fail"()
    .return (rx1414_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_169_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1427
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1419_start
    .local string rx1419_tgt
    .local int rx1419_pos
    .local int rx1419_off
    .local int rx1419_eos
    .local int rx1419_rep
    .local pmc rx1419_cur
    .local pmc rx1419_curclass
    .local pmc rx1419_bstack
    .local pmc rx1419_cstack
    rx1419_start = self."!cursor_start_all"()
    set rx1419_cur, rx1419_start[0]
    set rx1419_tgt, rx1419_start[1]
    set rx1419_pos, rx1419_start[2]
    set rx1419_curclass, rx1419_start[3]
    set rx1419_bstack, rx1419_start[4]
    set $I19, rx1419_start[5]
    store_lex unicode:"$\x{a2}", rx1419_cur
    length rx1419_eos, rx1419_tgt
    eq $I19, 1, rx1419_restart3371
    gt rx1419_pos, rx1419_eos, rx1419_fail3372
    repr_get_attr_int $I11, self, rx1419_curclass, "$!from"
    ne $I11, -1, rxscan1420_done3378
    goto rxscan1420_scan3377
  rxscan1420_loop3376:
    inc rx1419_pos
    index rx1419_pos, rx1419_tgt, ucs4:"[", rx1419_pos
    eq rx1419_pos, -1, rx1419_fail3372
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!from", rx1419_pos
  rxscan1420_scan3377:
    nqp_rxmark rx1419_bstack, rxscan1420_loop3376, rx1419_pos, 0
  rxscan1420_done3378:
    add $I11, rx1419_pos, 1
    gt $I11, rx1419_eos, rx1419_fail3372
    substr $S10, rx1419_tgt, rx1419_pos, 1
    ne $S10, ucs4:"[", rx1419_fail3372
    add rx1419_pos, 1
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!pos", rx1419_pos
    $P11 = rx1419_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1419_curclass, "$!pos"
    lt $I11, 0, rx1419_fail3372
    repr_get_attr_int rx1419_pos, $P11, rx1419_curclass, "$!pos"
    nqp_rxmark rx1419_bstack, rxquantr1422_done3381, rx1419_pos, 0
  rxquantr1422_loop3380:
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!pos", rx1419_pos
    $P11 = rx1419_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1419_curclass, "$!pos"
    lt $I11, 0, rx1419_fail3372
    goto rxsubrule1423_pass3382
  rxsubrule1423_back3383:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1419_curclass, "$!pos"
    lt $I11, 0, rx1419_fail3372
  rxsubrule1423_pass3382:
    rx1419_cstack = rx1419_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1423_back3383
    push rx1419_bstack, $I11
    push rx1419_bstack, 0
    push rx1419_bstack, rx1419_pos
    elements $I11, rx1419_cstack
    push rx1419_bstack, $I11
    repr_get_attr_int rx1419_pos, $P11, rx1419_curclass, "$!pos"
    nqp_rxpeek $I19, rx1419_bstack, rxquantr1422_done3381
    inc $I19
    inc $I19
    set rx1419_rep, rx1419_bstack[$I19]
    nqp_rxcommit rx1419_bstack, rxquantr1422_done3381
    inc rx1419_rep
  rxquantr1422_done3381:
    add $I11, rx1419_pos, 1
    gt $I11, rx1419_eos, rx1419_fail3372
    substr $S10, rx1419_tgt, rx1419_pos, 1
    ne $S10, ucs4:"]", rx1419_fail3372
    add rx1419_pos, 1
    rx1419_cur."!cursor_pass"(rx1419_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1419_cur)
  rx1419_restart3371:
    repr_get_attr_obj rx1419_cstack, rx1419_cur, rx1419_curclass, "$!cstack"
  rx1419_fail3372:
    unless rx1419_bstack, rx1419_done3370
    pop $I19, rx1419_bstack
    if_null rx1419_cstack, rx1419_cstack_done3375
    unless rx1419_cstack, rx1419_cstack_done3375
    dec $I19
    set $P11, rx1419_cstack[$I19]
  rx1419_cstack_done3375:
    pop rx1419_rep, rx1419_bstack
    pop rx1419_pos, rx1419_bstack
    pop $I19, rx1419_bstack
    lt rx1419_pos, -1, rx1419_done3370
    lt rx1419_pos, 0, rx1419_fail3372
    eq $I19, 0, rx1419_fail3372
    nqp_islist $I20, rx1419_cstack
    unless $I20, rx1419_jump3373
    elements $I18, rx1419_bstack
    le $I18, 0, rx1419_cut3374
    dec $I18
    set $I18, rx1419_bstack[$I18]
  rx1419_cut3374:
    assign rx1419_cstack, $I18
  rx1419_jump3373:
    jump $I19
  rx1419_done3370:
    rx1419_cur."!cursor_fail"()
    .return (rx1419_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_170_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1428
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1424_start
    .local string rx1424_tgt
    .local int rx1424_pos
    .local int rx1424_off
    .local int rx1424_eos
    .local int rx1424_rep
    .local pmc rx1424_cur
    .local pmc rx1424_curclass
    .local pmc rx1424_bstack
    .local pmc rx1424_cstack
    rx1424_start = self."!cursor_start_all"()
    set rx1424_cur, rx1424_start[0]
    set rx1424_tgt, rx1424_start[1]
    set rx1424_pos, rx1424_start[2]
    set rx1424_curclass, rx1424_start[3]
    set rx1424_bstack, rx1424_start[4]
    set $I19, rx1424_start[5]
    store_lex unicode:"$\x{a2}", rx1424_cur
    length rx1424_eos, rx1424_tgt
    eq $I19, 1, rx1424_restart3386
    gt rx1424_pos, rx1424_eos, rx1424_fail3387
    repr_get_attr_int $I11, self, rx1424_curclass, "$!from"
    ne $I11, -1, rxscan1425_done3393
    goto rxscan1425_scan3392
  rxscan1425_loop3391:
    inc rx1424_pos
    gt rx1424_pos, rx1424_eos, rx1424_fail3387
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!from", rx1424_pos
  rxscan1425_scan3392:
    nqp_rxmark rx1424_bstack, rxscan1425_loop3391, rx1424_pos, 0
  rxscan1425_done3393:
    ge rx1424_pos, rx1424_eos, rx1424_fail3387
    substr $S11, rx1424_tgt, rx1424_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1424_fail3387
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3387
    nqp_rxmark rx1424_bstack, rxsubrule1426_pass3394, -1, 0
  rxsubrule1426_pass3394:
    rx1424_cstack = rx1424_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1424_pos, $P11, rx1424_curclass, "$!pos"
    rx1424_cur."!cursor_pass"(rx1424_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1424_cur)
  rx1424_restart3386:
    repr_get_attr_obj rx1424_cstack, rx1424_cur, rx1424_curclass, "$!cstack"
  rx1424_fail3387:
    unless rx1424_bstack, rx1424_done3385
    pop $I19, rx1424_bstack
    if_null rx1424_cstack, rx1424_cstack_done3390
    unless rx1424_cstack, rx1424_cstack_done3390
    dec $I19
    set $P11, rx1424_cstack[$I19]
  rx1424_cstack_done3390:
    pop rx1424_rep, rx1424_bstack
    pop rx1424_pos, rx1424_bstack
    pop $I19, rx1424_bstack
    lt rx1424_pos, -1, rx1424_done3385
    lt rx1424_pos, 0, rx1424_fail3387
    eq $I19, 0, rx1424_fail3387
    nqp_islist $I20, rx1424_cstack
    unless $I20, rx1424_jump3388
    elements $I18, rx1424_bstack
    le $I18, 0, rx1424_cut3389
    dec $I18
    set $I18, rx1424_bstack[$I18]
  rx1424_cut3389:
    assign rx1424_cstack, $I18
  rx1424_jump3388:
    jump $I19
  rx1424_done3385:
    rx1424_cur."!cursor_fail"()
    .return (rx1424_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_171_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1429
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1427_start
    .local string rx1427_tgt
    .local int rx1427_pos
    .local int rx1427_off
    .local int rx1427_eos
    .local int rx1427_rep
    .local pmc rx1427_cur
    .local pmc rx1427_curclass
    .local pmc rx1427_bstack
    .local pmc rx1427_cstack
    rx1427_start = self."!cursor_start_all"()
    set rx1427_cur, rx1427_start[0]
    set rx1427_tgt, rx1427_start[1]
    set rx1427_pos, rx1427_start[2]
    set rx1427_curclass, rx1427_start[3]
    set rx1427_bstack, rx1427_start[4]
    set $I19, rx1427_start[5]
    store_lex unicode:"$\x{a2}", rx1427_cur
    length rx1427_eos, rx1427_tgt
    eq $I19, 1, rx1427_restart3397
    gt rx1427_pos, rx1427_eos, rx1427_fail3398
    repr_get_attr_int $I11, self, rx1427_curclass, "$!from"
    ne $I11, -1, rxscan1428_done3404
    goto rxscan1428_scan3403
  rxscan1428_loop3402:
    inc rx1427_pos
    gt rx1427_pos, rx1427_eos, rx1427_fail3398
    repr_bind_attr_int rx1427_cur, rx1427_curclass, "$!from", rx1427_pos
  rxscan1428_scan3403:
    nqp_rxmark rx1427_bstack, rxscan1428_loop3402, rx1427_pos, 0
  rxscan1428_done3404:
    ge rx1427_pos, rx1427_eos, rx1427_fail3398
    substr $S11, rx1427_tgt, rx1427_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1427_fail3398
    repr_bind_attr_int rx1427_cur, rx1427_curclass, "$!pos", rx1427_pos
    $P11 = rx1427_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1427_curclass, "$!pos"
    lt $I11, 0, rx1427_fail3398
    nqp_rxmark rx1427_bstack, rxsubrule1429_pass3405, -1, 0
  rxsubrule1429_pass3405:
    rx1427_cstack = rx1427_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1427_pos, $P11, rx1427_curclass, "$!pos"
    rx1427_cur."!cursor_pass"(rx1427_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1427_cur)
  rx1427_restart3397:
    repr_get_attr_obj rx1427_cstack, rx1427_cur, rx1427_curclass, "$!cstack"
  rx1427_fail3398:
    unless rx1427_bstack, rx1427_done3396
    pop $I19, rx1427_bstack
    if_null rx1427_cstack, rx1427_cstack_done3401
    unless rx1427_cstack, rx1427_cstack_done3401
    dec $I19
    set $P11, rx1427_cstack[$I19]
  rx1427_cstack_done3401:
    pop rx1427_rep, rx1427_bstack
    pop rx1427_pos, rx1427_bstack
    pop $I19, rx1427_bstack
    lt rx1427_pos, -1, rx1427_done3396
    lt rx1427_pos, 0, rx1427_fail3398
    eq $I19, 0, rx1427_fail3398
    nqp_islist $I20, rx1427_cstack
    unless $I20, rx1427_jump3399
    elements $I18, rx1427_bstack
    le $I18, 0, rx1427_cut3400
    dec $I18
    set $I18, rx1427_bstack[$I18]
  rx1427_cut3400:
    assign rx1427_cstack, $I18
  rx1427_jump3399:
    jump $I19
  rx1427_done3396:
    rx1427_cur."!cursor_fail"()
    .return (rx1427_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_172_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1430
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1430_start
    .local string rx1430_tgt
    .local int rx1430_pos
    .local int rx1430_off
    .local int rx1430_eos
    .local int rx1430_rep
    .local pmc rx1430_cur
    .local pmc rx1430_curclass
    .local pmc rx1430_bstack
    .local pmc rx1430_cstack
    rx1430_start = self."!cursor_start_all"()
    set rx1430_cur, rx1430_start[0]
    set rx1430_tgt, rx1430_start[1]
    set rx1430_pos, rx1430_start[2]
    set rx1430_curclass, rx1430_start[3]
    set rx1430_bstack, rx1430_start[4]
    set $I19, rx1430_start[5]
    store_lex unicode:"$\x{a2}", rx1430_cur
    length rx1430_eos, rx1430_tgt
    eq $I19, 1, rx1430_restart3408
    gt rx1430_pos, rx1430_eos, rx1430_fail3409
    repr_get_attr_int $I11, self, rx1430_curclass, "$!from"
    ne $I11, -1, rxscan1431_done3415
    goto rxscan1431_scan3414
  rxscan1431_loop3413:
    inc rx1430_pos
    gt rx1430_pos, rx1430_eos, rx1430_fail3409
    repr_bind_attr_int rx1430_cur, rx1430_curclass, "$!from", rx1430_pos
  rxscan1431_scan3414:
    nqp_rxmark rx1430_bstack, rxscan1431_loop3413, rx1430_pos, 0
  rxscan1431_done3415:
    ge rx1430_pos, rx1430_eos, rx1430_fail3409
    substr $S11, rx1430_tgt, rx1430_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1430_fail3409
    repr_bind_attr_int rx1430_cur, rx1430_curclass, "$!pos", rx1430_pos
    $P11 = rx1430_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1430_curclass, "$!pos"
    lt $I11, 0, rx1430_fail3409
    nqp_rxmark rx1430_bstack, rxsubrule1432_pass3416, -1, 0
  rxsubrule1432_pass3416:
    rx1430_cstack = rx1430_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1430_pos, $P11, rx1430_curclass, "$!pos"
    rx1430_cur."!cursor_pass"(rx1430_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1430_cur)
  rx1430_restart3408:
    repr_get_attr_obj rx1430_cstack, rx1430_cur, rx1430_curclass, "$!cstack"
  rx1430_fail3409:
    unless rx1430_bstack, rx1430_done3407
    pop $I19, rx1430_bstack
    if_null rx1430_cstack, rx1430_cstack_done3412
    unless rx1430_cstack, rx1430_cstack_done3412
    dec $I19
    set $P11, rx1430_cstack[$I19]
  rx1430_cstack_done3412:
    pop rx1430_rep, rx1430_bstack
    pop rx1430_pos, rx1430_bstack
    pop $I19, rx1430_bstack
    lt rx1430_pos, -1, rx1430_done3407
    lt rx1430_pos, 0, rx1430_fail3409
    eq $I19, 0, rx1430_fail3409
    nqp_islist $I20, rx1430_cstack
    unless $I20, rx1430_jump3410
    elements $I18, rx1430_bstack
    le $I18, 0, rx1430_cut3411
    dec $I18
    set $I18, rx1430_bstack[$I18]
  rx1430_cut3411:
    assign rx1430_cstack, $I18
  rx1430_jump3410:
    jump $I19
  rx1430_done3407:
    rx1430_cur."!cursor_fail"()
    .return (rx1430_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_173_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1432
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1433_start
    .local string rx1433_tgt
    .local int rx1433_pos
    .local int rx1433_off
    .local int rx1433_eos
    .local int rx1433_rep
    .local pmc rx1433_cur
    .local pmc rx1433_curclass
    .local pmc rx1433_bstack
    .local pmc rx1433_cstack
    rx1433_start = self."!cursor_start_all"()
    set rx1433_cur, rx1433_start[0]
    set rx1433_tgt, rx1433_start[1]
    set rx1433_pos, rx1433_start[2]
    set rx1433_curclass, rx1433_start[3]
    set rx1433_bstack, rx1433_start[4]
    set $I19, rx1433_start[5]
    store_lex unicode:"$\x{a2}", rx1433_cur
    length rx1433_eos, rx1433_tgt
    eq $I19, 1, rx1433_restart3419
    gt rx1433_pos, rx1433_eos, rx1433_fail3420
    repr_get_attr_int $I11, self, rx1433_curclass, "$!from"
    ne $I11, -1, rxscan1434_done3426
    goto rxscan1434_scan3425
  rxscan1434_loop3424:
    inc rx1433_pos
    gt rx1433_pos, rx1433_eos, rx1433_fail3420
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!from", rx1433_pos
  rxscan1434_scan3425:
    nqp_rxmark rx1433_bstack, rxscan1434_loop3424, rx1433_pos, 0
  rxscan1434_done3426:
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1433_curclass, "$!pos"
    lt $I11, 0, rx1433_fail3420
    repr_get_attr_int rx1433_pos, $P11, rx1433_curclass, "$!pos"
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1433_curclass, "$!pos"
    lt $I11, 0, rx1433_fail3420
    nqp_rxmark rx1433_bstack, rxsubrule1436_pass3428, -1, 0
  rxsubrule1436_pass3428:
    rx1433_cstack = rx1433_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1433_pos, $P11, rx1433_curclass, "$!pos"
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1433_curclass, "$!pos"
    lt $I11, 0, rx1433_fail3420
    repr_get_attr_int rx1433_pos, $P11, rx1433_curclass, "$!pos"
    rx1433_cur."!cursor_pass"(rx1433_pos, "semilist", 'backtrack'=>1)
    .return (rx1433_cur)
  rx1433_restart3419:
    repr_get_attr_obj rx1433_cstack, rx1433_cur, rx1433_curclass, "$!cstack"
  rx1433_fail3420:
    unless rx1433_bstack, rx1433_done3418
    pop $I19, rx1433_bstack
    if_null rx1433_cstack, rx1433_cstack_done3423
    unless rx1433_cstack, rx1433_cstack_done3423
    dec $I19
    set $P11, rx1433_cstack[$I19]
  rx1433_cstack_done3423:
    pop rx1433_rep, rx1433_bstack
    pop rx1433_pos, rx1433_bstack
    pop $I19, rx1433_bstack
    lt rx1433_pos, -1, rx1433_done3418
    lt rx1433_pos, 0, rx1433_fail3420
    eq $I19, 0, rx1433_fail3420
    nqp_islist $I20, rx1433_cstack
    unless $I20, rx1433_jump3421
    elements $I18, rx1433_bstack
    le $I18, 0, rx1433_cut3422
    dec $I18
    set $I18, rx1433_bstack[$I18]
  rx1433_cut3422:
    assign rx1433_cstack, $I18
  rx1433_jump3421:
    jump $I19
  rx1433_done3418:
    rx1433_cur."!cursor_fail"()
    .return (rx1433_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_174_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1455
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1438_start
    .local string rx1438_tgt
    .local int rx1438_pos
    .local int rx1438_off
    .local int rx1438_eos
    .local int rx1438_rep
    .local pmc rx1438_cur
    .local pmc rx1438_curclass
    .local pmc rx1438_bstack
    .local pmc rx1438_cstack
    rx1438_start = self."!cursor_start_all"()
    set rx1438_cur, rx1438_start[0]
    set rx1438_tgt, rx1438_start[1]
    set rx1438_pos, rx1438_start[2]
    set rx1438_curclass, rx1438_start[3]
    set rx1438_bstack, rx1438_start[4]
    set $I19, rx1438_start[5]
    store_lex unicode:"$\x{a2}", rx1438_cur
    length rx1438_eos, rx1438_tgt
    eq $I19, 1, rx1438_restart3432
    gt rx1438_pos, rx1438_eos, rx1438_fail3433
    repr_get_attr_int $I11, self, rx1438_curclass, "$!from"
    ne $I11, -1, rxscan1439_done3439
    goto rxscan1439_scan3438
  rxscan1439_loop3437:
    inc rx1438_pos
    gt rx1438_pos, rx1438_eos, rx1438_fail3433
    repr_bind_attr_int rx1438_cur, rx1438_curclass, "$!from", rx1438_pos
  rxscan1439_scan3438:
    nqp_rxmark rx1438_bstack, rxscan1439_loop3437, rx1438_pos, 0
  rxscan1439_done3439:
    repr_bind_attr_int rx1438_cur, rx1438_curclass, "$!pos", rx1438_pos
    $P11 = rx1438_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1438_curclass, "$!pos"
    ge $I11, 0, rx1438_fail3433
    repr_bind_attr_int rx1438_cur, rx1438_curclass, "$!pos", rx1438_pos
    $P11 = rx1438_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1438_curclass, "$!pos"
    lt $I11, 0, rx1438_fail3433
    nqp_rxmark rx1438_bstack, rxsubrule1440_pass3440, -1, 0
  rxsubrule1440_pass3440:
    rx1438_cstack = rx1438_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1438_pos, $P11, rx1438_curclass, "$!pos"
    rx1438_cur."!cursor_pass"(rx1438_pos, "infixish", 'backtrack'=>1)
    .return (rx1438_cur)
  rx1438_restart3432:
    repr_get_attr_obj rx1438_cstack, rx1438_cur, rx1438_curclass, "$!cstack"
  rx1438_fail3433:
    unless rx1438_bstack, rx1438_done3431
    pop $I19, rx1438_bstack
    if_null rx1438_cstack, rx1438_cstack_done3436
    unless rx1438_cstack, rx1438_cstack_done3436
    dec $I19
    set $P11, rx1438_cstack[$I19]
  rx1438_cstack_done3436:
    pop rx1438_rep, rx1438_bstack
    pop rx1438_pos, rx1438_bstack
    pop $I19, rx1438_bstack
    lt rx1438_pos, -1, rx1438_done3431
    lt rx1438_pos, 0, rx1438_fail3433
    eq $I19, 0, rx1438_fail3433
    nqp_islist $I20, rx1438_cstack
    unless $I20, rx1438_jump3434
    elements $I18, rx1438_bstack
    le $I18, 0, rx1438_cut3435
    dec $I18
    set $I18, rx1438_bstack[$I18]
  rx1438_cut3435:
    assign rx1438_cstack, $I18
  rx1438_jump3434:
    jump $I19
  rx1438_done3431:
    rx1438_cur."!cursor_fail"()
    .return (rx1438_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_175_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1456
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_435_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1441_start
    .local string rx1441_tgt
    .local int rx1441_pos
    .local int rx1441_off
    .local int rx1441_eos
    .local int rx1441_rep
    .local pmc rx1441_cur
    .local pmc rx1441_curclass
    .local pmc rx1441_bstack
    .local pmc rx1441_cstack
    rx1441_start = self."!cursor_start_all"()
    set rx1441_cur, rx1441_start[0]
    set rx1441_tgt, rx1441_start[1]
    set rx1441_pos, rx1441_start[2]
    set rx1441_curclass, rx1441_start[3]
    set rx1441_bstack, rx1441_start[4]
    set $I19, rx1441_start[5]
    store_lex unicode:"$\x{a2}", rx1441_cur
    length rx1441_eos, rx1441_tgt
    eq $I19, 1, rx1441_restart3443
    gt rx1441_pos, rx1441_eos, rx1441_fail3444
    repr_get_attr_int $I11, self, rx1441_curclass, "$!from"
    ne $I11, -1, rxscan1442_done3450
    goto rxscan1442_scan3449
  rxscan1442_loop3448:
    inc rx1441_pos
    gt rx1441_pos, rx1441_eos, rx1441_fail3444
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!from", rx1441_pos
  rxscan1442_scan3449:
    nqp_rxmark rx1441_bstack, rxscan1442_loop3448, rx1441_pos, 0
  rxscan1442_done3450:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1443_03452
    nqp_push_label $P11, alt1443_13458
    nqp_rxmark rx1441_bstack, alt1443_end3451, -1, 0
    rx1441_cur."!alt"(rx1441_pos, "alt_nfa__37_1383915020.03826", $P11)
    goto rx1441_fail3444
  alt1443_03452:
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!pos", rx1441_pos
    store_lex unicode:"$\x{a2}", rx1441_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_435_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1441_fail3444
    ge rx1441_pos, rx1441_eos, rx1441_fail3444
    substr $S11, rx1441_tgt, rx1441_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1441_fail3444
    goto alt1443_end3451
  alt1443_13458:
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!pos", rx1441_pos
    $P11 = rx1441_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1441_curclass, "$!pos"
    lt $I11, 0, rx1441_fail3444
    goto alt1443_end3451
  alt1443_end3451:
    rx1441_cur."!cursor_pass"(rx1441_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1441_cur)
  rx1441_restart3443:
    repr_get_attr_obj rx1441_cstack, rx1441_cur, rx1441_curclass, "$!cstack"
  rx1441_fail3444:
    unless rx1441_bstack, rx1441_done3442
    pop $I19, rx1441_bstack
    if_null rx1441_cstack, rx1441_cstack_done3447
    unless rx1441_cstack, rx1441_cstack_done3447
    dec $I19
    set $P11, rx1441_cstack[$I19]
  rx1441_cstack_done3447:
    pop rx1441_rep, rx1441_bstack
    pop rx1441_pos, rx1441_bstack
    pop $I19, rx1441_bstack
    lt rx1441_pos, -1, rx1441_done3442
    lt rx1441_pos, 0, rx1441_fail3444
    eq $I19, 0, rx1441_fail3444
    nqp_islist $I20, rx1441_cstack
    unless $I20, rx1441_jump3445
    elements $I18, rx1441_bstack
    le $I18, 0, rx1441_cut3446
    dec $I18
    set $I18, rx1441_bstack[$I18]
  rx1441_cut3446:
    assign rx1441_cstack, $I18
  rx1441_jump3445:
    jump $I19
  rx1441_done3442:
    rx1441_cur."!cursor_fail"()
    .return (rx1441_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1383915013.33774") :anon :lex :outer("cuid_175_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1457
    .local pmc fb_tmp_193 
    find_dynamic_lex $P5001, "$*IN_REGEX_ASSERTION"
    unless_null $P5001, fallback3453
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_193, $P5002
    repr_defined $I5001, fb_tmp_193
    unless $I5001 goto if1444_else3454 
    set $P5004, fb_tmp_193["$IN_REGEX_ASSERTION"]
    set $P5006, $P5004
    goto if1444_end3455
  if1444_else3454:
    null $P5005
    set $P5006, $P5005
  if1444_end3455:
    unless_null $P5006, vivi_14453456
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_14453456:
    unless_null $P5006, vivi_14463457
    die "Contextual $*IN_REGEX_ASSERTION not found"
    box $P5008, "Contextual $*IN_REGEX_ASSERTION not found"
    set $P5006, $P5008
  vivi_14463457:
    set $P5001, $P5006
  fallback3453:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_176_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1461
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1447_start
    .local string rx1447_tgt
    .local int rx1447_pos
    .local int rx1447_off
    .local int rx1447_eos
    .local int rx1447_rep
    .local pmc rx1447_cur
    .local pmc rx1447_curclass
    .local pmc rx1447_bstack
    .local pmc rx1447_cstack
    rx1447_start = self."!cursor_start_all"()
    set rx1447_cur, rx1447_start[0]
    set rx1447_tgt, rx1447_start[1]
    set rx1447_pos, rx1447_start[2]
    set rx1447_curclass, rx1447_start[3]
    set rx1447_bstack, rx1447_start[4]
    set $I19, rx1447_start[5]
    store_lex unicode:"$\x{a2}", rx1447_cur
    length rx1447_eos, rx1447_tgt
    eq $I19, 1, rx1447_restart3461
    gt rx1447_pos, rx1447_eos, rx1447_fail3462
    repr_get_attr_int $I11, self, rx1447_curclass, "$!from"
    ne $I11, -1, rxscan1448_done3468
    goto rxscan1448_scan3467
  rxscan1448_loop3466:
    inc rx1447_pos
    index rx1447_pos, rx1447_tgt, ucs4:"[", rx1447_pos
    eq rx1447_pos, -1, rx1447_fail3462
    repr_bind_attr_int rx1447_cur, rx1447_curclass, "$!from", rx1447_pos
  rxscan1448_scan3467:
    nqp_rxmark rx1447_bstack, rxscan1448_loop3466, rx1447_pos, 0
  rxscan1448_done3468:
    add $I11, rx1447_pos, 1
    gt $I11, rx1447_eos, rx1447_fail3462
    substr $S10, rx1447_tgt, rx1447_pos, 1
    ne $S10, ucs4:"[", rx1447_fail3462
    add rx1447_pos, 1
    repr_bind_attr_int rx1447_cur, rx1447_curclass, "$!pos", rx1447_pos
    $P11 = rx1447_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1447_curclass, "$!pos"
    lt $I11, 0, rx1447_fail3462
    repr_get_attr_int rx1447_pos, $P11, rx1447_curclass, "$!pos"
    repr_bind_attr_int rx1447_cur, rx1447_curclass, "$!pos", rx1447_pos
    $P11 = rx1447_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1447_curclass, "$!pos"
    lt $I11, 0, rx1447_fail3462
    nqp_rxmark rx1447_bstack, rxsubrule1450_pass3470, -1, 0
  rxsubrule1450_pass3470:
    rx1447_cstack = rx1447_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1447_pos, $P11, rx1447_curclass, "$!pos"
    add $I11, rx1447_pos, 1
    gt $I11, rx1447_eos, rx1447_fail3462
    substr $S10, rx1447_tgt, rx1447_pos, 1
    ne $S10, ucs4:"]", rx1447_fail3462
    add rx1447_pos, 1
    repr_bind_attr_int rx1447_cur, rx1447_curclass, "$!pos", rx1447_pos
    $P11 = rx1447_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1447_curclass, "$!pos"
    lt $I11, 0, rx1447_fail3462
    nqp_rxmark rx1447_bstack, rxsubrule1451_pass3471, -1, 0
  rxsubrule1451_pass3471:
    rx1447_cstack = rx1447_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1447_pos, $P11, rx1447_curclass, "$!pos"
    rx1447_cur."!cursor_pass"(rx1447_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1447_cur)
  rx1447_restart3461:
    repr_get_attr_obj rx1447_cstack, rx1447_cur, rx1447_curclass, "$!cstack"
  rx1447_fail3462:
    unless rx1447_bstack, rx1447_done3460
    pop $I19, rx1447_bstack
    if_null rx1447_cstack, rx1447_cstack_done3465
    unless rx1447_cstack, rx1447_cstack_done3465
    dec $I19
    set $P11, rx1447_cstack[$I19]
  rx1447_cstack_done3465:
    pop rx1447_rep, rx1447_bstack
    pop rx1447_pos, rx1447_bstack
    pop $I19, rx1447_bstack
    lt rx1447_pos, -1, rx1447_done3460
    lt rx1447_pos, 0, rx1447_fail3462
    eq $I19, 0, rx1447_fail3462
    nqp_islist $I20, rx1447_cstack
    unless $I20, rx1447_jump3463
    elements $I18, rx1447_bstack
    le $I18, 0, rx1447_cut3464
    dec $I18
    set $I18, rx1447_bstack[$I18]
  rx1447_cut3464:
    assign rx1447_cstack, $I18
  rx1447_jump3463:
    jump $I19
  rx1447_done3460:
    rx1447_cur."!cursor_fail"()
    .return (rx1447_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_177_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1466
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1452_start
    .local string rx1452_tgt
    .local int rx1452_pos
    .local int rx1452_off
    .local int rx1452_eos
    .local int rx1452_rep
    .local pmc rx1452_cur
    .local pmc rx1452_curclass
    .local pmc rx1452_bstack
    .local pmc rx1452_cstack
    rx1452_start = self."!cursor_start_all"()
    set rx1452_cur, rx1452_start[0]
    set rx1452_tgt, rx1452_start[1]
    set rx1452_pos, rx1452_start[2]
    set rx1452_curclass, rx1452_start[3]
    set rx1452_bstack, rx1452_start[4]
    set $I19, rx1452_start[5]
    store_lex unicode:"$\x{a2}", rx1452_cur
    length rx1452_eos, rx1452_tgt
    eq $I19, 1, rx1452_restart3474
    gt rx1452_pos, rx1452_eos, rx1452_fail3475
    repr_get_attr_int $I11, self, rx1452_curclass, "$!from"
    ne $I11, -1, rxscan1453_done3481
    goto rxscan1453_scan3480
  rxscan1453_loop3479:
    inc rx1452_pos
    index rx1452_pos, rx1452_tgt, ucs4:"{", rx1452_pos
    eq rx1452_pos, -1, rx1452_fail3475
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!from", rx1452_pos
  rxscan1453_scan3480:
    nqp_rxmark rx1452_bstack, rxscan1453_loop3479, rx1452_pos, 0
  rxscan1453_done3481:
    add $I11, rx1452_pos, 1
    gt $I11, rx1452_eos, rx1452_fail3475
    substr $S10, rx1452_tgt, rx1452_pos, 1
    ne $S10, ucs4:"{", rx1452_fail3475
    add rx1452_pos, 1
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1452_curclass, "$!pos"
    lt $I11, 0, rx1452_fail3475
    repr_get_attr_int rx1452_pos, $P11, rx1452_curclass, "$!pos"
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1452_curclass, "$!pos"
    lt $I11, 0, rx1452_fail3475
    nqp_rxmark rx1452_bstack, rxsubrule1455_pass3483, -1, 0
  rxsubrule1455_pass3483:
    rx1452_cstack = rx1452_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1452_pos, $P11, rx1452_curclass, "$!pos"
    add $I11, rx1452_pos, 1
    gt $I11, rx1452_eos, rx1452_fail3475
    substr $S10, rx1452_tgt, rx1452_pos, 1
    ne $S10, ucs4:"}", rx1452_fail3475
    add rx1452_pos, 1
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1452_curclass, "$!pos"
    lt $I11, 0, rx1452_fail3475
    nqp_rxmark rx1452_bstack, rxsubrule1456_pass3484, -1, 0
  rxsubrule1456_pass3484:
    rx1452_cstack = rx1452_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1452_pos, $P11, rx1452_curclass, "$!pos"
    rx1452_cur."!cursor_pass"(rx1452_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1452_cur)
  rx1452_restart3474:
    repr_get_attr_obj rx1452_cstack, rx1452_cur, rx1452_curclass, "$!cstack"
  rx1452_fail3475:
    unless rx1452_bstack, rx1452_done3473
    pop $I19, rx1452_bstack
    if_null rx1452_cstack, rx1452_cstack_done3478
    unless rx1452_cstack, rx1452_cstack_done3478
    dec $I19
    set $P11, rx1452_cstack[$I19]
  rx1452_cstack_done3478:
    pop rx1452_rep, rx1452_bstack
    pop rx1452_pos, rx1452_bstack
    pop $I19, rx1452_bstack
    lt rx1452_pos, -1, rx1452_done3473
    lt rx1452_pos, 0, rx1452_fail3475
    eq $I19, 0, rx1452_fail3475
    nqp_islist $I20, rx1452_cstack
    unless $I20, rx1452_jump3476
    elements $I18, rx1452_bstack
    le $I18, 0, rx1452_cut3477
    dec $I18
    set $I18, rx1452_bstack[$I18]
  rx1452_cut3477:
    assign rx1452_cstack, $I18
  rx1452_jump3476:
    jump $I19
  rx1452_done3473:
    rx1452_cur."!cursor_fail"()
    .return (rx1452_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_178_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1471
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1457_start
    .local string rx1457_tgt
    .local int rx1457_pos
    .local int rx1457_off
    .local int rx1457_eos
    .local int rx1457_rep
    .local pmc rx1457_cur
    .local pmc rx1457_curclass
    .local pmc rx1457_bstack
    .local pmc rx1457_cstack
    rx1457_start = self."!cursor_start_all"()
    set rx1457_cur, rx1457_start[0]
    set rx1457_tgt, rx1457_start[1]
    set rx1457_pos, rx1457_start[2]
    set rx1457_curclass, rx1457_start[3]
    set rx1457_bstack, rx1457_start[4]
    set $I19, rx1457_start[5]
    store_lex unicode:"$\x{a2}", rx1457_cur
    length rx1457_eos, rx1457_tgt
    eq $I19, 1, rx1457_restart3487
    gt rx1457_pos, rx1457_eos, rx1457_fail3488
    repr_get_attr_int $I11, self, rx1457_curclass, "$!from"
    ne $I11, -1, rxscan1458_done3494
    goto rxscan1458_scan3493
  rxscan1458_loop3492:
    inc rx1457_pos
    gt rx1457_pos, rx1457_eos, rx1457_fail3488
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!from", rx1457_pos
  rxscan1458_scan3493:
    nqp_rxmark rx1457_bstack, rxscan1458_loop3492, rx1457_pos, 0
  rxscan1458_done3494:
    ge rx1457_pos, rx1457_eos, rx1457_fail3488
    substr $S11, rx1457_tgt, rx1457_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1457_fail3488
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail3488
    nqp_rxmark rx1457_bstack, rxsubrule1459_pass3495, -1, 0
  rxsubrule1459_pass3495:
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail3488
    nqp_rxmark rx1457_bstack, rxsubrule1460_pass3496, -1, 0
  rxsubrule1460_pass3496:
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    rx1457_cur."!cursor_pass"(rx1457_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1457_cur)
  rx1457_restart3487:
    repr_get_attr_obj rx1457_cstack, rx1457_cur, rx1457_curclass, "$!cstack"
  rx1457_fail3488:
    unless rx1457_bstack, rx1457_done3486
    pop $I19, rx1457_bstack
    if_null rx1457_cstack, rx1457_cstack_done3491
    unless rx1457_cstack, rx1457_cstack_done3491
    dec $I19
    set $P11, rx1457_cstack[$I19]
  rx1457_cstack_done3491:
    pop rx1457_rep, rx1457_bstack
    pop rx1457_pos, rx1457_bstack
    pop $I19, rx1457_bstack
    lt rx1457_pos, -1, rx1457_done3486
    lt rx1457_pos, 0, rx1457_fail3488
    eq $I19, 0, rx1457_fail3488
    nqp_islist $I20, rx1457_cstack
    unless $I20, rx1457_jump3489
    elements $I18, rx1457_bstack
    le $I18, 0, rx1457_cut3490
    dec $I18
    set $I18, rx1457_bstack[$I18]
  rx1457_cut3490:
    assign rx1457_cstack, $I18
  rx1457_jump3489:
    jump $I19
  rx1457_done3486:
    rx1457_cur."!cursor_fail"()
    .return (rx1457_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_179_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1476
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1461_start
    .local string rx1461_tgt
    .local int rx1461_pos
    .local int rx1461_off
    .local int rx1461_eos
    .local int rx1461_rep
    .local pmc rx1461_cur
    .local pmc rx1461_curclass
    .local pmc rx1461_bstack
    .local pmc rx1461_cstack
    rx1461_start = self."!cursor_start_all"()
    set rx1461_cur, rx1461_start[0]
    set rx1461_tgt, rx1461_start[1]
    set rx1461_pos, rx1461_start[2]
    set rx1461_curclass, rx1461_start[3]
    set rx1461_bstack, rx1461_start[4]
    set $I19, rx1461_start[5]
    store_lex unicode:"$\x{a2}", rx1461_cur
    length rx1461_eos, rx1461_tgt
    eq $I19, 1, rx1461_restart3499
    gt rx1461_pos, rx1461_eos, rx1461_fail3500
    repr_get_attr_int $I11, self, rx1461_curclass, "$!from"
    ne $I11, -1, rxscan1462_done3506
    goto rxscan1462_scan3505
  rxscan1462_loop3504:
    inc rx1461_pos
    index rx1461_pos, rx1461_tgt, ucs4:"(", rx1461_pos
    eq rx1461_pos, -1, rx1461_fail3500
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!from", rx1461_pos
  rxscan1462_scan3505:
    nqp_rxmark rx1461_bstack, rxscan1462_loop3504, rx1461_pos, 0
  rxscan1462_done3506:
    add $I11, rx1461_pos, 1
    gt $I11, rx1461_eos, rx1461_fail3500
    substr $S10, rx1461_tgt, rx1461_pos, 1
    ne $S10, ucs4:"(", rx1461_fail3500
    add rx1461_pos, 1
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3500
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3500
    nqp_rxmark rx1461_bstack, rxsubrule1464_pass3508, -1, 0
  rxsubrule1464_pass3508:
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    add $I11, rx1461_pos, 1
    gt $I11, rx1461_eos, rx1461_fail3500
    substr $S10, rx1461_tgt, rx1461_pos, 1
    ne $S10, ucs4:")", rx1461_fail3500
    add rx1461_pos, 1
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3500
    nqp_rxmark rx1461_bstack, rxsubrule1465_pass3509, -1, 0
  rxsubrule1465_pass3509:
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    rx1461_cur."!cursor_pass"(rx1461_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1461_cur)
  rx1461_restart3499:
    repr_get_attr_obj rx1461_cstack, rx1461_cur, rx1461_curclass, "$!cstack"
  rx1461_fail3500:
    unless rx1461_bstack, rx1461_done3498
    pop $I19, rx1461_bstack
    if_null rx1461_cstack, rx1461_cstack_done3503
    unless rx1461_cstack, rx1461_cstack_done3503
    dec $I19
    set $P11, rx1461_cstack[$I19]
  rx1461_cstack_done3503:
    pop rx1461_rep, rx1461_bstack
    pop rx1461_pos, rx1461_bstack
    pop $I19, rx1461_bstack
    lt rx1461_pos, -1, rx1461_done3498
    lt rx1461_pos, 0, rx1461_fail3500
    eq $I19, 0, rx1461_fail3500
    nqp_islist $I20, rx1461_cstack
    unless $I20, rx1461_jump3501
    elements $I18, rx1461_bstack
    le $I18, 0, rx1461_cut3502
    dec $I18
    set $I18, rx1461_bstack[$I18]
  rx1461_cut3502:
    assign rx1461_cstack, $I18
  rx1461_jump3501:
    jump $I19
  rx1461_done3498:
    rx1461_cur."!cursor_fail"()
    .return (rx1461_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_180_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1481
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1466_start
    .local string rx1466_tgt
    .local int rx1466_pos
    .local int rx1466_off
    .local int rx1466_eos
    .local int rx1466_rep
    .local pmc rx1466_cur
    .local pmc rx1466_curclass
    .local pmc rx1466_bstack
    .local pmc rx1466_cstack
    rx1466_start = self."!cursor_start_all"()
    set rx1466_cur, rx1466_start[0]
    set rx1466_tgt, rx1466_start[1]
    set rx1466_pos, rx1466_start[2]
    set rx1466_curclass, rx1466_start[3]
    set rx1466_bstack, rx1466_start[4]
    set $I19, rx1466_start[5]
    store_lex unicode:"$\x{a2}", rx1466_cur
    length rx1466_eos, rx1466_tgt
    eq $I19, 1, rx1466_restart3512
    gt rx1466_pos, rx1466_eos, rx1466_fail3513
    repr_get_attr_int $I11, self, rx1466_curclass, "$!from"
    ne $I11, -1, rxscan1467_done3519
    goto rxscan1467_scan3518
  rxscan1467_loop3517:
    inc rx1466_pos
    gt rx1466_pos, rx1466_eos, rx1466_fail3513
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!from", rx1466_pos
  rxscan1467_scan3518:
    nqp_rxmark rx1466_bstack, rxscan1467_loop3517, rx1466_pos, 0
  rxscan1467_done3519:
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!pos", rx1466_pos
    $P11 = rx1466_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1466_curclass, "$!pos"
    lt $I11, 0, rx1466_fail3513
    nqp_rxmark rx1466_bstack, rxsubrule1468_pass3520, -1, 0
  rxsubrule1468_pass3520:
    rx1466_cstack = rx1466_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1466_pos, $P11, rx1466_curclass, "$!pos"
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!pos", rx1466_pos
    $P11 = rx1466_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1466_curclass, "$!pos"
    lt $I11, 0, rx1466_fail3513
    nqp_rxmark rx1466_bstack, rxsubrule1469_pass3521, -1, 0
  rxsubrule1469_pass3521:
    rx1466_cstack = rx1466_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1466_pos, $P11, rx1466_curclass, "$!pos"
    rx1466_cur."!cursor_pass"(rx1466_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1466_cur)
  rx1466_restart3512:
    repr_get_attr_obj rx1466_cstack, rx1466_cur, rx1466_curclass, "$!cstack"
  rx1466_fail3513:
    unless rx1466_bstack, rx1466_done3511
    pop $I19, rx1466_bstack
    if_null rx1466_cstack, rx1466_cstack_done3516
    unless rx1466_cstack, rx1466_cstack_done3516
    dec $I19
    set $P11, rx1466_cstack[$I19]
  rx1466_cstack_done3516:
    pop rx1466_rep, rx1466_bstack
    pop rx1466_pos, rx1466_bstack
    pop $I19, rx1466_bstack
    lt rx1466_pos, -1, rx1466_done3511
    lt rx1466_pos, 0, rx1466_fail3513
    eq $I19, 0, rx1466_fail3513
    nqp_islist $I20, rx1466_cstack
    unless $I20, rx1466_jump3514
    elements $I18, rx1466_bstack
    le $I18, 0, rx1466_cut3515
    dec $I18
    set $I18, rx1466_bstack[$I18]
  rx1466_cut3515:
    assign rx1466_cstack, $I18
  rx1466_jump3514:
    jump $I19
  rx1466_done3511:
    rx1466_cur."!cursor_fail"()
    .return (rx1466_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_181_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1483
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1470_start
    .local string rx1470_tgt
    .local int rx1470_pos
    .local int rx1470_off
    .local int rx1470_eos
    .local int rx1470_rep
    .local pmc rx1470_cur
    .local pmc rx1470_curclass
    .local pmc rx1470_bstack
    .local pmc rx1470_cstack
    rx1470_start = self."!cursor_start_all"()
    set rx1470_cur, rx1470_start[0]
    set rx1470_tgt, rx1470_start[1]
    set rx1470_pos, rx1470_start[2]
    set rx1470_curclass, rx1470_start[3]
    set rx1470_bstack, rx1470_start[4]
    set $I19, rx1470_start[5]
    store_lex unicode:"$\x{a2}", rx1470_cur
    length rx1470_eos, rx1470_tgt
    eq $I19, 1, rx1470_restart3524
    gt rx1470_pos, rx1470_eos, rx1470_fail3525
    repr_get_attr_int $I11, self, rx1470_curclass, "$!from"
    ne $I11, -1, rxscan1471_done3531
    goto rxscan1471_scan3530
  rxscan1471_loop3529:
    inc rx1470_pos
    gt rx1470_pos, rx1470_eos, rx1470_fail3525
    repr_bind_attr_int rx1470_cur, rx1470_curclass, "$!from", rx1470_pos
  rxscan1471_scan3530:
    nqp_rxmark rx1470_bstack, rxscan1471_loop3529, rx1470_pos, 0
  rxscan1471_done3531:
    nqp_rxmark rx1470_bstack, rxcap1472_fail3533, rx1470_pos, 0
    add $I11, rx1470_pos, 2
    gt $I11, rx1470_eos, rx1470_fail3525
    substr $S10, rx1470_tgt, rx1470_pos, 2
    ne $S10, ucs4:"++", rx1470_fail3525
    add rx1470_pos, 2
    nqp_rxpeek $I19, rx1470_bstack, rxcap1472_fail3533
    inc $I19
    set $I11, rx1470_bstack[$I19]
    repr_bind_attr_int rx1470_cur, rx1470_curclass, "$!pos", rx1470_pos
    $P11 = rx1470_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1470_pos)
    rx1470_cstack = rx1470_cur."!cursor_capture"($P11, "sym")
    goto rxcap1472_done3532
  rxcap1472_fail3533:
    goto rx1470_fail3525
  rxcap1472_done3532:
    repr_bind_attr_int rx1470_cur, rx1470_curclass, "$!pos", rx1470_pos
    $P11 = rx1470_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1470_curclass, "$!pos"
    lt $I11, 0, rx1470_fail3525
    nqp_rxmark rx1470_bstack, rxsubrule1473_pass3534, -1, 0
  rxsubrule1473_pass3534:
    rx1470_cstack = rx1470_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1470_pos, $P11, rx1470_curclass, "$!pos"
    rx1470_cur."!cursor_pass"(rx1470_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1470_cur)
  rx1470_restart3524:
    repr_get_attr_obj rx1470_cstack, rx1470_cur, rx1470_curclass, "$!cstack"
  rx1470_fail3525:
    unless rx1470_bstack, rx1470_done3523
    pop $I19, rx1470_bstack
    if_null rx1470_cstack, rx1470_cstack_done3528
    unless rx1470_cstack, rx1470_cstack_done3528
    dec $I19
    set $P11, rx1470_cstack[$I19]
  rx1470_cstack_done3528:
    pop rx1470_rep, rx1470_bstack
    pop rx1470_pos, rx1470_bstack
    pop $I19, rx1470_bstack
    lt rx1470_pos, -1, rx1470_done3523
    lt rx1470_pos, 0, rx1470_fail3525
    eq $I19, 0, rx1470_fail3525
    nqp_islist $I20, rx1470_cstack
    unless $I20, rx1470_jump3526
    elements $I18, rx1470_bstack
    le $I18, 0, rx1470_cut3527
    dec $I18
    set $I18, rx1470_bstack[$I18]
  rx1470_cut3527:
    assign rx1470_cstack, $I18
  rx1470_jump3526:
    jump $I19
  rx1470_done3523:
    rx1470_cur."!cursor_fail"()
    .return (rx1470_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_182_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1484
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1474_start
    .local string rx1474_tgt
    .local int rx1474_pos
    .local int rx1474_off
    .local int rx1474_eos
    .local int rx1474_rep
    .local pmc rx1474_cur
    .local pmc rx1474_curclass
    .local pmc rx1474_bstack
    .local pmc rx1474_cstack
    rx1474_start = self."!cursor_start_all"()
    set rx1474_cur, rx1474_start[0]
    set rx1474_tgt, rx1474_start[1]
    set rx1474_pos, rx1474_start[2]
    set rx1474_curclass, rx1474_start[3]
    set rx1474_bstack, rx1474_start[4]
    set $I19, rx1474_start[5]
    store_lex unicode:"$\x{a2}", rx1474_cur
    length rx1474_eos, rx1474_tgt
    eq $I19, 1, rx1474_restart3537
    gt rx1474_pos, rx1474_eos, rx1474_fail3538
    repr_get_attr_int $I11, self, rx1474_curclass, "$!from"
    ne $I11, -1, rxscan1475_done3544
    goto rxscan1475_scan3543
  rxscan1475_loop3542:
    inc rx1474_pos
    gt rx1474_pos, rx1474_eos, rx1474_fail3538
    repr_bind_attr_int rx1474_cur, rx1474_curclass, "$!from", rx1474_pos
  rxscan1475_scan3543:
    nqp_rxmark rx1474_bstack, rxscan1475_loop3542, rx1474_pos, 0
  rxscan1475_done3544:
    nqp_rxmark rx1474_bstack, rxcap1476_fail3546, rx1474_pos, 0
    add $I11, rx1474_pos, 2
    gt $I11, rx1474_eos, rx1474_fail3538
    substr $S10, rx1474_tgt, rx1474_pos, 2
    ne $S10, ucs4:"--", rx1474_fail3538
    add rx1474_pos, 2
    nqp_rxpeek $I19, rx1474_bstack, rxcap1476_fail3546
    inc $I19
    set $I11, rx1474_bstack[$I19]
    repr_bind_attr_int rx1474_cur, rx1474_curclass, "$!pos", rx1474_pos
    $P11 = rx1474_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1474_pos)
    rx1474_cstack = rx1474_cur."!cursor_capture"($P11, "sym")
    goto rxcap1476_done3545
  rxcap1476_fail3546:
    goto rx1474_fail3538
  rxcap1476_done3545:
    repr_bind_attr_int rx1474_cur, rx1474_curclass, "$!pos", rx1474_pos
    $P11 = rx1474_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1474_curclass, "$!pos"
    lt $I11, 0, rx1474_fail3538
    nqp_rxmark rx1474_bstack, rxsubrule1477_pass3547, -1, 0
  rxsubrule1477_pass3547:
    rx1474_cstack = rx1474_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1474_pos, $P11, rx1474_curclass, "$!pos"
    rx1474_cur."!cursor_pass"(rx1474_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1474_cur)
  rx1474_restart3537:
    repr_get_attr_obj rx1474_cstack, rx1474_cur, rx1474_curclass, "$!cstack"
  rx1474_fail3538:
    unless rx1474_bstack, rx1474_done3536
    pop $I19, rx1474_bstack
    if_null rx1474_cstack, rx1474_cstack_done3541
    unless rx1474_cstack, rx1474_cstack_done3541
    dec $I19
    set $P11, rx1474_cstack[$I19]
  rx1474_cstack_done3541:
    pop rx1474_rep, rx1474_bstack
    pop rx1474_pos, rx1474_bstack
    pop $I19, rx1474_bstack
    lt rx1474_pos, -1, rx1474_done3536
    lt rx1474_pos, 0, rx1474_fail3538
    eq $I19, 0, rx1474_fail3538
    nqp_islist $I20, rx1474_cstack
    unless $I20, rx1474_jump3539
    elements $I18, rx1474_bstack
    le $I18, 0, rx1474_cut3540
    dec $I18
    set $I18, rx1474_bstack[$I18]
  rx1474_cut3540:
    assign rx1474_cstack, $I18
  rx1474_jump3539:
    jump $I19
  rx1474_done3536:
    rx1474_cur."!cursor_fail"()
    .return (rx1474_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_183_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1486
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1478_start
    .local string rx1478_tgt
    .local int rx1478_pos
    .local int rx1478_off
    .local int rx1478_eos
    .local int rx1478_rep
    .local pmc rx1478_cur
    .local pmc rx1478_curclass
    .local pmc rx1478_bstack
    .local pmc rx1478_cstack
    rx1478_start = self."!cursor_start_all"()
    set rx1478_cur, rx1478_start[0]
    set rx1478_tgt, rx1478_start[1]
    set rx1478_pos, rx1478_start[2]
    set rx1478_curclass, rx1478_start[3]
    set rx1478_bstack, rx1478_start[4]
    set $I19, rx1478_start[5]
    store_lex unicode:"$\x{a2}", rx1478_cur
    length rx1478_eos, rx1478_tgt
    eq $I19, 1, rx1478_restart3550
    gt rx1478_pos, rx1478_eos, rx1478_fail3551
    repr_get_attr_int $I11, self, rx1478_curclass, "$!from"
    ne $I11, -1, rxscan1479_done3557
    goto rxscan1479_scan3556
  rxscan1479_loop3555:
    inc rx1478_pos
    gt rx1478_pos, rx1478_eos, rx1478_fail3551
    repr_bind_attr_int rx1478_cur, rx1478_curclass, "$!from", rx1478_pos
  rxscan1479_scan3556:
    nqp_rxmark rx1478_bstack, rxscan1479_loop3555, rx1478_pos, 0
  rxscan1479_done3557:
    nqp_rxmark rx1478_bstack, rxcap1480_fail3559, rx1478_pos, 0
    add $I11, rx1478_pos, 2
    gt $I11, rx1478_eos, rx1478_fail3551
    substr $S10, rx1478_tgt, rx1478_pos, 2
    ne $S10, ucs4:"++", rx1478_fail3551
    add rx1478_pos, 2
    nqp_rxpeek $I19, rx1478_bstack, rxcap1480_fail3559
    inc $I19
    set $I11, rx1478_bstack[$I19]
    repr_bind_attr_int rx1478_cur, rx1478_curclass, "$!pos", rx1478_pos
    $P11 = rx1478_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1478_pos)
    rx1478_cstack = rx1478_cur."!cursor_capture"($P11, "sym")
    goto rxcap1480_done3558
  rxcap1480_fail3559:
    goto rx1478_fail3551
  rxcap1480_done3558:
    repr_bind_attr_int rx1478_cur, rx1478_curclass, "$!pos", rx1478_pos
    $P11 = rx1478_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1478_curclass, "$!pos"
    lt $I11, 0, rx1478_fail3551
    nqp_rxmark rx1478_bstack, rxsubrule1481_pass3560, -1, 0
  rxsubrule1481_pass3560:
    rx1478_cstack = rx1478_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1478_pos, $P11, rx1478_curclass, "$!pos"
    rx1478_cur."!cursor_pass"(rx1478_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1478_cur)
  rx1478_restart3550:
    repr_get_attr_obj rx1478_cstack, rx1478_cur, rx1478_curclass, "$!cstack"
  rx1478_fail3551:
    unless rx1478_bstack, rx1478_done3549
    pop $I19, rx1478_bstack
    if_null rx1478_cstack, rx1478_cstack_done3554
    unless rx1478_cstack, rx1478_cstack_done3554
    dec $I19
    set $P11, rx1478_cstack[$I19]
  rx1478_cstack_done3554:
    pop rx1478_rep, rx1478_bstack
    pop rx1478_pos, rx1478_bstack
    pop $I19, rx1478_bstack
    lt rx1478_pos, -1, rx1478_done3549
    lt rx1478_pos, 0, rx1478_fail3551
    eq $I19, 0, rx1478_fail3551
    nqp_islist $I20, rx1478_cstack
    unless $I20, rx1478_jump3552
    elements $I18, rx1478_bstack
    le $I18, 0, rx1478_cut3553
    dec $I18
    set $I18, rx1478_bstack[$I18]
  rx1478_cut3553:
    assign rx1478_cstack, $I18
  rx1478_jump3552:
    jump $I19
  rx1478_done3549:
    rx1478_cur."!cursor_fail"()
    .return (rx1478_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_184_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1487
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1482_start
    .local string rx1482_tgt
    .local int rx1482_pos
    .local int rx1482_off
    .local int rx1482_eos
    .local int rx1482_rep
    .local pmc rx1482_cur
    .local pmc rx1482_curclass
    .local pmc rx1482_bstack
    .local pmc rx1482_cstack
    rx1482_start = self."!cursor_start_all"()
    set rx1482_cur, rx1482_start[0]
    set rx1482_tgt, rx1482_start[1]
    set rx1482_pos, rx1482_start[2]
    set rx1482_curclass, rx1482_start[3]
    set rx1482_bstack, rx1482_start[4]
    set $I19, rx1482_start[5]
    store_lex unicode:"$\x{a2}", rx1482_cur
    length rx1482_eos, rx1482_tgt
    eq $I19, 1, rx1482_restart3563
    gt rx1482_pos, rx1482_eos, rx1482_fail3564
    repr_get_attr_int $I11, self, rx1482_curclass, "$!from"
    ne $I11, -1, rxscan1483_done3570
    goto rxscan1483_scan3569
  rxscan1483_loop3568:
    inc rx1482_pos
    gt rx1482_pos, rx1482_eos, rx1482_fail3564
    repr_bind_attr_int rx1482_cur, rx1482_curclass, "$!from", rx1482_pos
  rxscan1483_scan3569:
    nqp_rxmark rx1482_bstack, rxscan1483_loop3568, rx1482_pos, 0
  rxscan1483_done3570:
    nqp_rxmark rx1482_bstack, rxcap1484_fail3572, rx1482_pos, 0
    add $I11, rx1482_pos, 2
    gt $I11, rx1482_eos, rx1482_fail3564
    substr $S10, rx1482_tgt, rx1482_pos, 2
    ne $S10, ucs4:"--", rx1482_fail3564
    add rx1482_pos, 2
    nqp_rxpeek $I19, rx1482_bstack, rxcap1484_fail3572
    inc $I19
    set $I11, rx1482_bstack[$I19]
    repr_bind_attr_int rx1482_cur, rx1482_curclass, "$!pos", rx1482_pos
    $P11 = rx1482_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1482_pos)
    rx1482_cstack = rx1482_cur."!cursor_capture"($P11, "sym")
    goto rxcap1484_done3571
  rxcap1484_fail3572:
    goto rx1482_fail3564
  rxcap1484_done3571:
    repr_bind_attr_int rx1482_cur, rx1482_curclass, "$!pos", rx1482_pos
    $P11 = rx1482_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1482_curclass, "$!pos"
    lt $I11, 0, rx1482_fail3564
    nqp_rxmark rx1482_bstack, rxsubrule1485_pass3573, -1, 0
  rxsubrule1485_pass3573:
    rx1482_cstack = rx1482_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1482_pos, $P11, rx1482_curclass, "$!pos"
    rx1482_cur."!cursor_pass"(rx1482_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1482_cur)
  rx1482_restart3563:
    repr_get_attr_obj rx1482_cstack, rx1482_cur, rx1482_curclass, "$!cstack"
  rx1482_fail3564:
    unless rx1482_bstack, rx1482_done3562
    pop $I19, rx1482_bstack
    if_null rx1482_cstack, rx1482_cstack_done3567
    unless rx1482_cstack, rx1482_cstack_done3567
    dec $I19
    set $P11, rx1482_cstack[$I19]
  rx1482_cstack_done3567:
    pop rx1482_rep, rx1482_bstack
    pop rx1482_pos, rx1482_bstack
    pop $I19, rx1482_bstack
    lt rx1482_pos, -1, rx1482_done3562
    lt rx1482_pos, 0, rx1482_fail3564
    eq $I19, 0, rx1482_fail3564
    nqp_islist $I20, rx1482_cstack
    unless $I20, rx1482_jump3565
    elements $I18, rx1482_bstack
    le $I18, 0, rx1482_cut3566
    dec $I18
    set $I18, rx1482_bstack[$I18]
  rx1482_cut3566:
    assign rx1482_cstack, $I18
  rx1482_jump3565:
    jump $I19
  rx1482_done3562:
    rx1482_cur."!cursor_fail"()
    .return (rx1482_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_185_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1489
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1486_start
    .local string rx1486_tgt
    .local int rx1486_pos
    .local int rx1486_off
    .local int rx1486_eos
    .local int rx1486_rep
    .local pmc rx1486_cur
    .local pmc rx1486_curclass
    .local pmc rx1486_bstack
    .local pmc rx1486_cstack
    rx1486_start = self."!cursor_start_all"()
    set rx1486_cur, rx1486_start[0]
    set rx1486_tgt, rx1486_start[1]
    set rx1486_pos, rx1486_start[2]
    set rx1486_curclass, rx1486_start[3]
    set rx1486_bstack, rx1486_start[4]
    set $I19, rx1486_start[5]
    store_lex unicode:"$\x{a2}", rx1486_cur
    length rx1486_eos, rx1486_tgt
    eq $I19, 1, rx1486_restart3576
    gt rx1486_pos, rx1486_eos, rx1486_fail3577
    repr_get_attr_int $I11, self, rx1486_curclass, "$!from"
    ne $I11, -1, rxscan1487_done3583
    goto rxscan1487_scan3582
  rxscan1487_loop3581:
    inc rx1486_pos
    gt rx1486_pos, rx1486_eos, rx1486_fail3577
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!from", rx1486_pos
  rxscan1487_scan3582:
    nqp_rxmark rx1486_bstack, rxscan1487_loop3581, rx1486_pos, 0
  rxscan1487_done3583:
    nqp_rxmark rx1486_bstack, rxcap1488_fail3585, rx1486_pos, 0
    add $I11, rx1486_pos, 2
    gt $I11, rx1486_eos, rx1486_fail3577
    substr $S10, rx1486_tgt, rx1486_pos, 2
    ne $S10, ucs4:"**", rx1486_fail3577
    add rx1486_pos, 2
    nqp_rxpeek $I19, rx1486_bstack, rxcap1488_fail3585
    inc $I19
    set $I11, rx1486_bstack[$I19]
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!pos", rx1486_pos
    $P11 = rx1486_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1486_pos)
    rx1486_cstack = rx1486_cur."!cursor_capture"($P11, "sym")
    goto rxcap1488_done3584
  rxcap1488_fail3585:
    goto rx1486_fail3577
  rxcap1488_done3584:
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!pos", rx1486_pos
    $P11 = rx1486_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1486_curclass, "$!pos"
    lt $I11, 0, rx1486_fail3577
    nqp_rxmark rx1486_bstack, rxsubrule1489_pass3586, -1, 0
  rxsubrule1489_pass3586:
    rx1486_cstack = rx1486_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1486_pos, $P11, rx1486_curclass, "$!pos"
    rx1486_cur."!cursor_pass"(rx1486_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1486_cur)
  rx1486_restart3576:
    repr_get_attr_obj rx1486_cstack, rx1486_cur, rx1486_curclass, "$!cstack"
  rx1486_fail3577:
    unless rx1486_bstack, rx1486_done3575
    pop $I19, rx1486_bstack
    if_null rx1486_cstack, rx1486_cstack_done3580
    unless rx1486_cstack, rx1486_cstack_done3580
    dec $I19
    set $P11, rx1486_cstack[$I19]
  rx1486_cstack_done3580:
    pop rx1486_rep, rx1486_bstack
    pop rx1486_pos, rx1486_bstack
    pop $I19, rx1486_bstack
    lt rx1486_pos, -1, rx1486_done3575
    lt rx1486_pos, 0, rx1486_fail3577
    eq $I19, 0, rx1486_fail3577
    nqp_islist $I20, rx1486_cstack
    unless $I20, rx1486_jump3578
    elements $I18, rx1486_bstack
    le $I18, 0, rx1486_cut3579
    dec $I18
    set $I18, rx1486_bstack[$I18]
  rx1486_cut3579:
    assign rx1486_cstack, $I18
  rx1486_jump3578:
    jump $I19
  rx1486_done3575:
    rx1486_cur."!cursor_fail"()
    .return (rx1486_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_186_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1491
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1490_start
    .local string rx1490_tgt
    .local int rx1490_pos
    .local int rx1490_off
    .local int rx1490_eos
    .local int rx1490_rep
    .local pmc rx1490_cur
    .local pmc rx1490_curclass
    .local pmc rx1490_bstack
    .local pmc rx1490_cstack
    rx1490_start = self."!cursor_start_all"()
    set rx1490_cur, rx1490_start[0]
    set rx1490_tgt, rx1490_start[1]
    set rx1490_pos, rx1490_start[2]
    set rx1490_curclass, rx1490_start[3]
    set rx1490_bstack, rx1490_start[4]
    set $I19, rx1490_start[5]
    store_lex unicode:"$\x{a2}", rx1490_cur
    length rx1490_eos, rx1490_tgt
    eq $I19, 1, rx1490_restart3589
    gt rx1490_pos, rx1490_eos, rx1490_fail3590
    repr_get_attr_int $I11, self, rx1490_curclass, "$!from"
    ne $I11, -1, rxscan1491_done3596
    goto rxscan1491_scan3595
  rxscan1491_loop3594:
    inc rx1490_pos
    gt rx1490_pos, rx1490_eos, rx1490_fail3590
    repr_bind_attr_int rx1490_cur, rx1490_curclass, "$!from", rx1490_pos
  rxscan1491_scan3595:
    nqp_rxmark rx1490_bstack, rxscan1491_loop3594, rx1490_pos, 0
  rxscan1491_done3596:
    nqp_rxmark rx1490_bstack, rxcap1492_fail3598, rx1490_pos, 0
    add $I11, rx1490_pos, 1
    gt $I11, rx1490_eos, rx1490_fail3590
    substr $S10, rx1490_tgt, rx1490_pos, 1
    ne $S10, ucs4:"+", rx1490_fail3590
    add rx1490_pos, 1
    nqp_rxpeek $I19, rx1490_bstack, rxcap1492_fail3598
    inc $I19
    set $I11, rx1490_bstack[$I19]
    repr_bind_attr_int rx1490_cur, rx1490_curclass, "$!pos", rx1490_pos
    $P11 = rx1490_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1490_pos)
    rx1490_cstack = rx1490_cur."!cursor_capture"($P11, "sym")
    goto rxcap1492_done3597
  rxcap1492_fail3598:
    goto rx1490_fail3590
  rxcap1492_done3597:
    repr_bind_attr_int rx1490_cur, rx1490_curclass, "$!pos", rx1490_pos
    $P11 = rx1490_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1490_curclass, "$!pos"
    lt $I11, 0, rx1490_fail3590
    nqp_rxmark rx1490_bstack, rxsubrule1493_pass3599, -1, 0
  rxsubrule1493_pass3599:
    rx1490_cstack = rx1490_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1490_pos, $P11, rx1490_curclass, "$!pos"
    rx1490_cur."!cursor_pass"(rx1490_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1490_cur)
  rx1490_restart3589:
    repr_get_attr_obj rx1490_cstack, rx1490_cur, rx1490_curclass, "$!cstack"
  rx1490_fail3590:
    unless rx1490_bstack, rx1490_done3588
    pop $I19, rx1490_bstack
    if_null rx1490_cstack, rx1490_cstack_done3593
    unless rx1490_cstack, rx1490_cstack_done3593
    dec $I19
    set $P11, rx1490_cstack[$I19]
  rx1490_cstack_done3593:
    pop rx1490_rep, rx1490_bstack
    pop rx1490_pos, rx1490_bstack
    pop $I19, rx1490_bstack
    lt rx1490_pos, -1, rx1490_done3588
    lt rx1490_pos, 0, rx1490_fail3590
    eq $I19, 0, rx1490_fail3590
    nqp_islist $I20, rx1490_cstack
    unless $I20, rx1490_jump3591
    elements $I18, rx1490_bstack
    le $I18, 0, rx1490_cut3592
    dec $I18
    set $I18, rx1490_bstack[$I18]
  rx1490_cut3592:
    assign rx1490_cstack, $I18
  rx1490_jump3591:
    jump $I19
  rx1490_done3588:
    rx1490_cur."!cursor_fail"()
    .return (rx1490_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_187_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1492
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1494_start
    .local string rx1494_tgt
    .local int rx1494_pos
    .local int rx1494_off
    .local int rx1494_eos
    .local int rx1494_rep
    .local pmc rx1494_cur
    .local pmc rx1494_curclass
    .local pmc rx1494_bstack
    .local pmc rx1494_cstack
    rx1494_start = self."!cursor_start_all"()
    set rx1494_cur, rx1494_start[0]
    set rx1494_tgt, rx1494_start[1]
    set rx1494_pos, rx1494_start[2]
    set rx1494_curclass, rx1494_start[3]
    set rx1494_bstack, rx1494_start[4]
    set $I19, rx1494_start[5]
    store_lex unicode:"$\x{a2}", rx1494_cur
    length rx1494_eos, rx1494_tgt
    eq $I19, 1, rx1494_restart3602
    gt rx1494_pos, rx1494_eos, rx1494_fail3603
    repr_get_attr_int $I11, self, rx1494_curclass, "$!from"
    ne $I11, -1, rxscan1495_done3609
    goto rxscan1495_scan3608
  rxscan1495_loop3607:
    inc rx1494_pos
    gt rx1494_pos, rx1494_eos, rx1494_fail3603
    repr_bind_attr_int rx1494_cur, rx1494_curclass, "$!from", rx1494_pos
  rxscan1495_scan3608:
    nqp_rxmark rx1494_bstack, rxscan1495_loop3607, rx1494_pos, 0
  rxscan1495_done3609:
    nqp_rxmark rx1494_bstack, rxcap1496_fail3611, rx1494_pos, 0
    add $I11, rx1494_pos, 1
    gt $I11, rx1494_eos, rx1494_fail3603
    substr $S10, rx1494_tgt, rx1494_pos, 1
    ne $S10, ucs4:"~", rx1494_fail3603
    add rx1494_pos, 1
    nqp_rxpeek $I19, rx1494_bstack, rxcap1496_fail3611
    inc $I19
    set $I11, rx1494_bstack[$I19]
    repr_bind_attr_int rx1494_cur, rx1494_curclass, "$!pos", rx1494_pos
    $P11 = rx1494_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1494_pos)
    rx1494_cstack = rx1494_cur."!cursor_capture"($P11, "sym")
    goto rxcap1496_done3610
  rxcap1496_fail3611:
    goto rx1494_fail3603
  rxcap1496_done3610:
    repr_bind_attr_int rx1494_cur, rx1494_curclass, "$!pos", rx1494_pos
    $P11 = rx1494_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1494_curclass, "$!pos"
    lt $I11, 0, rx1494_fail3603
    nqp_rxmark rx1494_bstack, rxsubrule1497_pass3612, -1, 0
  rxsubrule1497_pass3612:
    rx1494_cstack = rx1494_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1494_pos, $P11, rx1494_curclass, "$!pos"
    rx1494_cur."!cursor_pass"(rx1494_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1494_cur)
  rx1494_restart3602:
    repr_get_attr_obj rx1494_cstack, rx1494_cur, rx1494_curclass, "$!cstack"
  rx1494_fail3603:
    unless rx1494_bstack, rx1494_done3601
    pop $I19, rx1494_bstack
    if_null rx1494_cstack, rx1494_cstack_done3606
    unless rx1494_cstack, rx1494_cstack_done3606
    dec $I19
    set $P11, rx1494_cstack[$I19]
  rx1494_cstack_done3606:
    pop rx1494_rep, rx1494_bstack
    pop rx1494_pos, rx1494_bstack
    pop $I19, rx1494_bstack
    lt rx1494_pos, -1, rx1494_done3601
    lt rx1494_pos, 0, rx1494_fail3603
    eq $I19, 0, rx1494_fail3603
    nqp_islist $I20, rx1494_cstack
    unless $I20, rx1494_jump3604
    elements $I18, rx1494_bstack
    le $I18, 0, rx1494_cut3605
    dec $I18
    set $I18, rx1494_bstack[$I18]
  rx1494_cut3605:
    assign rx1494_cstack, $I18
  rx1494_jump3604:
    jump $I19
  rx1494_done3601:
    rx1494_cur."!cursor_fail"()
    .return (rx1494_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_188_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1493
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1498_start
    .local string rx1498_tgt
    .local int rx1498_pos
    .local int rx1498_off
    .local int rx1498_eos
    .local int rx1498_rep
    .local pmc rx1498_cur
    .local pmc rx1498_curclass
    .local pmc rx1498_bstack
    .local pmc rx1498_cstack
    rx1498_start = self."!cursor_start_all"()
    set rx1498_cur, rx1498_start[0]
    set rx1498_tgt, rx1498_start[1]
    set rx1498_pos, rx1498_start[2]
    set rx1498_curclass, rx1498_start[3]
    set rx1498_bstack, rx1498_start[4]
    set $I19, rx1498_start[5]
    store_lex unicode:"$\x{a2}", rx1498_cur
    length rx1498_eos, rx1498_tgt
    eq $I19, 1, rx1498_restart3615
    gt rx1498_pos, rx1498_eos, rx1498_fail3616
    repr_get_attr_int $I11, self, rx1498_curclass, "$!from"
    ne $I11, -1, rxscan1499_done3622
    goto rxscan1499_scan3621
  rxscan1499_loop3620:
    inc rx1498_pos
    gt rx1498_pos, rx1498_eos, rx1498_fail3616
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!from", rx1498_pos
  rxscan1499_scan3621:
    nqp_rxmark rx1498_bstack, rxscan1499_loop3620, rx1498_pos, 0
  rxscan1499_done3622:
    nqp_rxmark rx1498_bstack, rxcap1500_fail3624, rx1498_pos, 0
    add $I11, rx1498_pos, 1
    gt $I11, rx1498_eos, rx1498_fail3616
    substr $S10, rx1498_tgt, rx1498_pos, 1
    ne $S10, ucs4:"-", rx1498_fail3616
    add rx1498_pos, 1
    nqp_rxpeek $I19, rx1498_bstack, rxcap1500_fail3624
    inc $I19
    set $I11, rx1498_bstack[$I19]
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!pos", rx1498_pos
    $P11 = rx1498_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1498_pos)
    rx1498_cstack = rx1498_cur."!cursor_capture"($P11, "sym")
    goto rxcap1500_done3623
  rxcap1500_fail3624:
    goto rx1498_fail3616
  rxcap1500_done3623:
    ge rx1498_pos, rx1498_eos, rx1498_fail3616
    substr $S11, rx1498_tgt, rx1498_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1498_fail3616
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!pos", rx1498_pos
    $P11 = rx1498_cur."number"()
    repr_get_attr_int $I11, $P11, rx1498_curclass, "$!pos"
    ge $I11, 0, rx1498_fail3616
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!pos", rx1498_pos
    $P11 = rx1498_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1498_curclass, "$!pos"
    lt $I11, 0, rx1498_fail3616
    nqp_rxmark rx1498_bstack, rxsubrule1501_pass3625, -1, 0
  rxsubrule1501_pass3625:
    rx1498_cstack = rx1498_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1498_pos, $P11, rx1498_curclass, "$!pos"
    rx1498_cur."!cursor_pass"(rx1498_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1498_cur)
  rx1498_restart3615:
    repr_get_attr_obj rx1498_cstack, rx1498_cur, rx1498_curclass, "$!cstack"
  rx1498_fail3616:
    unless rx1498_bstack, rx1498_done3614
    pop $I19, rx1498_bstack
    if_null rx1498_cstack, rx1498_cstack_done3619
    unless rx1498_cstack, rx1498_cstack_done3619
    dec $I19
    set $P11, rx1498_cstack[$I19]
  rx1498_cstack_done3619:
    pop rx1498_rep, rx1498_bstack
    pop rx1498_pos, rx1498_bstack
    pop $I19, rx1498_bstack
    lt rx1498_pos, -1, rx1498_done3614
    lt rx1498_pos, 0, rx1498_fail3616
    eq $I19, 0, rx1498_fail3616
    nqp_islist $I20, rx1498_cstack
    unless $I20, rx1498_jump3617
    elements $I18, rx1498_bstack
    le $I18, 0, rx1498_cut3618
    dec $I18
    set $I18, rx1498_bstack[$I18]
  rx1498_cut3618:
    assign rx1498_cstack, $I18
  rx1498_jump3617:
    jump $I19
  rx1498_done3614:
    rx1498_cur."!cursor_fail"()
    .return (rx1498_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_189_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1494
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1502_start
    .local string rx1502_tgt
    .local int rx1502_pos
    .local int rx1502_off
    .local int rx1502_eos
    .local int rx1502_rep
    .local pmc rx1502_cur
    .local pmc rx1502_curclass
    .local pmc rx1502_bstack
    .local pmc rx1502_cstack
    rx1502_start = self."!cursor_start_all"()
    set rx1502_cur, rx1502_start[0]
    set rx1502_tgt, rx1502_start[1]
    set rx1502_pos, rx1502_start[2]
    set rx1502_curclass, rx1502_start[3]
    set rx1502_bstack, rx1502_start[4]
    set $I19, rx1502_start[5]
    store_lex unicode:"$\x{a2}", rx1502_cur
    length rx1502_eos, rx1502_tgt
    eq $I19, 1, rx1502_restart3628
    gt rx1502_pos, rx1502_eos, rx1502_fail3629
    repr_get_attr_int $I11, self, rx1502_curclass, "$!from"
    ne $I11, -1, rxscan1503_done3635
    goto rxscan1503_scan3634
  rxscan1503_loop3633:
    inc rx1502_pos
    gt rx1502_pos, rx1502_eos, rx1502_fail3629
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!from", rx1502_pos
  rxscan1503_scan3634:
    nqp_rxmark rx1502_bstack, rxscan1503_loop3633, rx1502_pos, 0
  rxscan1503_done3635:
    nqp_rxmark rx1502_bstack, rxcap1504_fail3637, rx1502_pos, 0
    add $I11, rx1502_pos, 1
    gt $I11, rx1502_eos, rx1502_fail3629
    substr $S10, rx1502_tgt, rx1502_pos, 1
    ne $S10, ucs4:"?", rx1502_fail3629
    add rx1502_pos, 1
    nqp_rxpeek $I19, rx1502_bstack, rxcap1504_fail3637
    inc $I19
    set $I11, rx1502_bstack[$I19]
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    $P11 = rx1502_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1502_pos)
    rx1502_cstack = rx1502_cur."!cursor_capture"($P11, "sym")
    goto rxcap1504_done3636
  rxcap1504_fail3637:
    goto rx1502_fail3629
  rxcap1504_done3636:
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    $P11 = rx1502_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1502_curclass, "$!pos"
    lt $I11, 0, rx1502_fail3629
    nqp_rxmark rx1502_bstack, rxsubrule1505_pass3638, -1, 0
  rxsubrule1505_pass3638:
    rx1502_cstack = rx1502_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1502_pos, $P11, rx1502_curclass, "$!pos"
    rx1502_cur."!cursor_pass"(rx1502_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1502_cur)
  rx1502_restart3628:
    repr_get_attr_obj rx1502_cstack, rx1502_cur, rx1502_curclass, "$!cstack"
  rx1502_fail3629:
    unless rx1502_bstack, rx1502_done3627
    pop $I19, rx1502_bstack
    if_null rx1502_cstack, rx1502_cstack_done3632
    unless rx1502_cstack, rx1502_cstack_done3632
    dec $I19
    set $P11, rx1502_cstack[$I19]
  rx1502_cstack_done3632:
    pop rx1502_rep, rx1502_bstack
    pop rx1502_pos, rx1502_bstack
    pop $I19, rx1502_bstack
    lt rx1502_pos, -1, rx1502_done3627
    lt rx1502_pos, 0, rx1502_fail3629
    eq $I19, 0, rx1502_fail3629
    nqp_islist $I20, rx1502_cstack
    unless $I20, rx1502_jump3630
    elements $I18, rx1502_bstack
    le $I18, 0, rx1502_cut3631
    dec $I18
    set $I18, rx1502_bstack[$I18]
  rx1502_cut3631:
    assign rx1502_cstack, $I18
  rx1502_jump3630:
    jump $I19
  rx1502_done3627:
    rx1502_cur."!cursor_fail"()
    .return (rx1502_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_190_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1495
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1506_start
    .local string rx1506_tgt
    .local int rx1506_pos
    .local int rx1506_off
    .local int rx1506_eos
    .local int rx1506_rep
    .local pmc rx1506_cur
    .local pmc rx1506_curclass
    .local pmc rx1506_bstack
    .local pmc rx1506_cstack
    rx1506_start = self."!cursor_start_all"()
    set rx1506_cur, rx1506_start[0]
    set rx1506_tgt, rx1506_start[1]
    set rx1506_pos, rx1506_start[2]
    set rx1506_curclass, rx1506_start[3]
    set rx1506_bstack, rx1506_start[4]
    set $I19, rx1506_start[5]
    store_lex unicode:"$\x{a2}", rx1506_cur
    length rx1506_eos, rx1506_tgt
    eq $I19, 1, rx1506_restart3641
    gt rx1506_pos, rx1506_eos, rx1506_fail3642
    repr_get_attr_int $I11, self, rx1506_curclass, "$!from"
    ne $I11, -1, rxscan1507_done3648
    goto rxscan1507_scan3647
  rxscan1507_loop3646:
    inc rx1506_pos
    gt rx1506_pos, rx1506_eos, rx1506_fail3642
    repr_bind_attr_int rx1506_cur, rx1506_curclass, "$!from", rx1506_pos
  rxscan1507_scan3647:
    nqp_rxmark rx1506_bstack, rxscan1507_loop3646, rx1506_pos, 0
  rxscan1507_done3648:
    nqp_rxmark rx1506_bstack, rxcap1508_fail3650, rx1506_pos, 0
    add $I11, rx1506_pos, 1
    gt $I11, rx1506_eos, rx1506_fail3642
    substr $S10, rx1506_tgt, rx1506_pos, 1
    ne $S10, ucs4:"!", rx1506_fail3642
    add rx1506_pos, 1
    nqp_rxpeek $I19, rx1506_bstack, rxcap1508_fail3650
    inc $I19
    set $I11, rx1506_bstack[$I19]
    repr_bind_attr_int rx1506_cur, rx1506_curclass, "$!pos", rx1506_pos
    $P11 = rx1506_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1506_pos)
    rx1506_cstack = rx1506_cur."!cursor_capture"($P11, "sym")
    goto rxcap1508_done3649
  rxcap1508_fail3650:
    goto rx1506_fail3642
  rxcap1508_done3649:
    repr_bind_attr_int rx1506_cur, rx1506_curclass, "$!pos", rx1506_pos
    $P11 = rx1506_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1506_curclass, "$!pos"
    lt $I11, 0, rx1506_fail3642
    nqp_rxmark rx1506_bstack, rxsubrule1509_pass3651, -1, 0
  rxsubrule1509_pass3651:
    rx1506_cstack = rx1506_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1506_pos, $P11, rx1506_curclass, "$!pos"
    rx1506_cur."!cursor_pass"(rx1506_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1506_cur)
  rx1506_restart3641:
    repr_get_attr_obj rx1506_cstack, rx1506_cur, rx1506_curclass, "$!cstack"
  rx1506_fail3642:
    unless rx1506_bstack, rx1506_done3640
    pop $I19, rx1506_bstack
    if_null rx1506_cstack, rx1506_cstack_done3645
    unless rx1506_cstack, rx1506_cstack_done3645
    dec $I19
    set $P11, rx1506_cstack[$I19]
  rx1506_cstack_done3645:
    pop rx1506_rep, rx1506_bstack
    pop rx1506_pos, rx1506_bstack
    pop $I19, rx1506_bstack
    lt rx1506_pos, -1, rx1506_done3640
    lt rx1506_pos, 0, rx1506_fail3642
    eq $I19, 0, rx1506_fail3642
    nqp_islist $I20, rx1506_cstack
    unless $I20, rx1506_jump3643
    elements $I18, rx1506_bstack
    le $I18, 0, rx1506_cut3644
    dec $I18
    set $I18, rx1506_bstack[$I18]
  rx1506_cut3644:
    assign rx1506_cstack, $I18
  rx1506_jump3643:
    jump $I19
  rx1506_done3640:
    rx1506_cur."!cursor_fail"()
    .return (rx1506_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_191_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1496
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1510_start
    .local string rx1510_tgt
    .local int rx1510_pos
    .local int rx1510_off
    .local int rx1510_eos
    .local int rx1510_rep
    .local pmc rx1510_cur
    .local pmc rx1510_curclass
    .local pmc rx1510_bstack
    .local pmc rx1510_cstack
    rx1510_start = self."!cursor_start_all"()
    set rx1510_cur, rx1510_start[0]
    set rx1510_tgt, rx1510_start[1]
    set rx1510_pos, rx1510_start[2]
    set rx1510_curclass, rx1510_start[3]
    set rx1510_bstack, rx1510_start[4]
    set $I19, rx1510_start[5]
    store_lex unicode:"$\x{a2}", rx1510_cur
    length rx1510_eos, rx1510_tgt
    eq $I19, 1, rx1510_restart3654
    gt rx1510_pos, rx1510_eos, rx1510_fail3655
    repr_get_attr_int $I11, self, rx1510_curclass, "$!from"
    ne $I11, -1, rxscan1511_done3661
    goto rxscan1511_scan3660
  rxscan1511_loop3659:
    inc rx1510_pos
    gt rx1510_pos, rx1510_eos, rx1510_fail3655
    repr_bind_attr_int rx1510_cur, rx1510_curclass, "$!from", rx1510_pos
  rxscan1511_scan3660:
    nqp_rxmark rx1510_bstack, rxscan1511_loop3659, rx1510_pos, 0
  rxscan1511_done3661:
    nqp_rxmark rx1510_bstack, rxcap1512_fail3663, rx1510_pos, 0
    add $I11, rx1510_pos, 1
    gt $I11, rx1510_eos, rx1510_fail3655
    substr $S10, rx1510_tgt, rx1510_pos, 1
    ne $S10, ucs4:"|", rx1510_fail3655
    add rx1510_pos, 1
    nqp_rxpeek $I19, rx1510_bstack, rxcap1512_fail3663
    inc $I19
    set $I11, rx1510_bstack[$I19]
    repr_bind_attr_int rx1510_cur, rx1510_curclass, "$!pos", rx1510_pos
    $P11 = rx1510_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1510_pos)
    rx1510_cstack = rx1510_cur."!cursor_capture"($P11, "sym")
    goto rxcap1512_done3662
  rxcap1512_fail3663:
    goto rx1510_fail3655
  rxcap1512_done3662:
    repr_bind_attr_int rx1510_cur, rx1510_curclass, "$!pos", rx1510_pos
    $P11 = rx1510_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1510_curclass, "$!pos"
    lt $I11, 0, rx1510_fail3655
    nqp_rxmark rx1510_bstack, rxsubrule1513_pass3664, -1, 0
  rxsubrule1513_pass3664:
    rx1510_cstack = rx1510_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1510_pos, $P11, rx1510_curclass, "$!pos"
    rx1510_cur."!cursor_pass"(rx1510_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1510_cur)
  rx1510_restart3654:
    repr_get_attr_obj rx1510_cstack, rx1510_cur, rx1510_curclass, "$!cstack"
  rx1510_fail3655:
    unless rx1510_bstack, rx1510_done3653
    pop $I19, rx1510_bstack
    if_null rx1510_cstack, rx1510_cstack_done3658
    unless rx1510_cstack, rx1510_cstack_done3658
    dec $I19
    set $P11, rx1510_cstack[$I19]
  rx1510_cstack_done3658:
    pop rx1510_rep, rx1510_bstack
    pop rx1510_pos, rx1510_bstack
    pop $I19, rx1510_bstack
    lt rx1510_pos, -1, rx1510_done3653
    lt rx1510_pos, 0, rx1510_fail3655
    eq $I19, 0, rx1510_fail3655
    nqp_islist $I20, rx1510_cstack
    unless $I20, rx1510_jump3656
    elements $I18, rx1510_bstack
    le $I18, 0, rx1510_cut3657
    dec $I18
    set $I18, rx1510_bstack[$I18]
  rx1510_cut3657:
    assign rx1510_cstack, $I18
  rx1510_jump3656:
    jump $I19
  rx1510_done3653:
    rx1510_cur."!cursor_fail"()
    .return (rx1510_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_192_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1498
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1514_start
    .local string rx1514_tgt
    .local int rx1514_pos
    .local int rx1514_off
    .local int rx1514_eos
    .local int rx1514_rep
    .local pmc rx1514_cur
    .local pmc rx1514_curclass
    .local pmc rx1514_bstack
    .local pmc rx1514_cstack
    rx1514_start = self."!cursor_start_all"()
    set rx1514_cur, rx1514_start[0]
    set rx1514_tgt, rx1514_start[1]
    set rx1514_pos, rx1514_start[2]
    set rx1514_curclass, rx1514_start[3]
    set rx1514_bstack, rx1514_start[4]
    set $I19, rx1514_start[5]
    store_lex unicode:"$\x{a2}", rx1514_cur
    length rx1514_eos, rx1514_tgt
    eq $I19, 1, rx1514_restart3667
    gt rx1514_pos, rx1514_eos, rx1514_fail3668
    repr_get_attr_int $I11, self, rx1514_curclass, "$!from"
    ne $I11, -1, rxscan1515_done3674
    goto rxscan1515_scan3673
  rxscan1515_loop3672:
    inc rx1514_pos
    gt rx1514_pos, rx1514_eos, rx1514_fail3668
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!from", rx1514_pos
  rxscan1515_scan3673:
    nqp_rxmark rx1514_bstack, rxscan1515_loop3672, rx1514_pos, 0
  rxscan1515_done3674:
    nqp_rxmark rx1514_bstack, rxcap1516_fail3676, rx1514_pos, 0
    add $I11, rx1514_pos, 1
    gt $I11, rx1514_eos, rx1514_fail3668
    substr $S10, rx1514_tgt, rx1514_pos, 1
    ne $S10, ucs4:"*", rx1514_fail3668
    add rx1514_pos, 1
    nqp_rxpeek $I19, rx1514_bstack, rxcap1516_fail3676
    inc $I19
    set $I11, rx1514_bstack[$I19]
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!pos", rx1514_pos
    $P11 = rx1514_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1514_pos)
    rx1514_cstack = rx1514_cur."!cursor_capture"($P11, "sym")
    goto rxcap1516_done3675
  rxcap1516_fail3676:
    goto rx1514_fail3668
  rxcap1516_done3675:
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!pos", rx1514_pos
    $P11 = rx1514_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1514_curclass, "$!pos"
    lt $I11, 0, rx1514_fail3668
    nqp_rxmark rx1514_bstack, rxsubrule1517_pass3677, -1, 0
  rxsubrule1517_pass3677:
    rx1514_cstack = rx1514_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1514_pos, $P11, rx1514_curclass, "$!pos"
    rx1514_cur."!cursor_pass"(rx1514_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1514_cur)
  rx1514_restart3667:
    repr_get_attr_obj rx1514_cstack, rx1514_cur, rx1514_curclass, "$!cstack"
  rx1514_fail3668:
    unless rx1514_bstack, rx1514_done3666
    pop $I19, rx1514_bstack
    if_null rx1514_cstack, rx1514_cstack_done3671
    unless rx1514_cstack, rx1514_cstack_done3671
    dec $I19
    set $P11, rx1514_cstack[$I19]
  rx1514_cstack_done3671:
    pop rx1514_rep, rx1514_bstack
    pop rx1514_pos, rx1514_bstack
    pop $I19, rx1514_bstack
    lt rx1514_pos, -1, rx1514_done3666
    lt rx1514_pos, 0, rx1514_fail3668
    eq $I19, 0, rx1514_fail3668
    nqp_islist $I20, rx1514_cstack
    unless $I20, rx1514_jump3669
    elements $I18, rx1514_bstack
    le $I18, 0, rx1514_cut3670
    dec $I18
    set $I18, rx1514_bstack[$I18]
  rx1514_cut3670:
    assign rx1514_cstack, $I18
  rx1514_jump3669:
    jump $I19
  rx1514_done3666:
    rx1514_cur."!cursor_fail"()
    .return (rx1514_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_193_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1499
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1518_start
    .local string rx1518_tgt
    .local int rx1518_pos
    .local int rx1518_off
    .local int rx1518_eos
    .local int rx1518_rep
    .local pmc rx1518_cur
    .local pmc rx1518_curclass
    .local pmc rx1518_bstack
    .local pmc rx1518_cstack
    rx1518_start = self."!cursor_start_all"()
    set rx1518_cur, rx1518_start[0]
    set rx1518_tgt, rx1518_start[1]
    set rx1518_pos, rx1518_start[2]
    set rx1518_curclass, rx1518_start[3]
    set rx1518_bstack, rx1518_start[4]
    set $I19, rx1518_start[5]
    store_lex unicode:"$\x{a2}", rx1518_cur
    length rx1518_eos, rx1518_tgt
    eq $I19, 1, rx1518_restart3680
    gt rx1518_pos, rx1518_eos, rx1518_fail3681
    repr_get_attr_int $I11, self, rx1518_curclass, "$!from"
    ne $I11, -1, rxscan1519_done3687
    goto rxscan1519_scan3686
  rxscan1519_loop3685:
    inc rx1518_pos
    gt rx1518_pos, rx1518_eos, rx1518_fail3681
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!from", rx1518_pos
  rxscan1519_scan3686:
    nqp_rxmark rx1518_bstack, rxscan1519_loop3685, rx1518_pos, 0
  rxscan1519_done3687:
    nqp_rxmark rx1518_bstack, rxcap1520_fail3689, rx1518_pos, 0
    add $I11, rx1518_pos, 1
    gt $I11, rx1518_eos, rx1518_fail3681
    substr $S10, rx1518_tgt, rx1518_pos, 1
    ne $S10, ucs4:"/", rx1518_fail3681
    add rx1518_pos, 1
    nqp_rxpeek $I19, rx1518_bstack, rxcap1520_fail3689
    inc $I19
    set $I11, rx1518_bstack[$I19]
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!pos", rx1518_pos
    $P11 = rx1518_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1518_pos)
    rx1518_cstack = rx1518_cur."!cursor_capture"($P11, "sym")
    goto rxcap1520_done3688
  rxcap1520_fail3689:
    goto rx1518_fail3681
  rxcap1520_done3688:
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!pos", rx1518_pos
    $P11 = rx1518_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1518_curclass, "$!pos"
    lt $I11, 0, rx1518_fail3681
    nqp_rxmark rx1518_bstack, rxsubrule1521_pass3690, -1, 0
  rxsubrule1521_pass3690:
    rx1518_cstack = rx1518_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1518_pos, $P11, rx1518_curclass, "$!pos"
    rx1518_cur."!cursor_pass"(rx1518_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1518_cur)
  rx1518_restart3680:
    repr_get_attr_obj rx1518_cstack, rx1518_cur, rx1518_curclass, "$!cstack"
  rx1518_fail3681:
    unless rx1518_bstack, rx1518_done3679
    pop $I19, rx1518_bstack
    if_null rx1518_cstack, rx1518_cstack_done3684
    unless rx1518_cstack, rx1518_cstack_done3684
    dec $I19
    set $P11, rx1518_cstack[$I19]
  rx1518_cstack_done3684:
    pop rx1518_rep, rx1518_bstack
    pop rx1518_pos, rx1518_bstack
    pop $I19, rx1518_bstack
    lt rx1518_pos, -1, rx1518_done3679
    lt rx1518_pos, 0, rx1518_fail3681
    eq $I19, 0, rx1518_fail3681
    nqp_islist $I20, rx1518_cstack
    unless $I20, rx1518_jump3682
    elements $I18, rx1518_bstack
    le $I18, 0, rx1518_cut3683
    dec $I18
    set $I18, rx1518_bstack[$I18]
  rx1518_cut3683:
    assign rx1518_cstack, $I18
  rx1518_jump3682:
    jump $I19
  rx1518_done3679:
    rx1518_cur."!cursor_fail"()
    .return (rx1518_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_194_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1500
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1522_start
    .local string rx1522_tgt
    .local int rx1522_pos
    .local int rx1522_off
    .local int rx1522_eos
    .local int rx1522_rep
    .local pmc rx1522_cur
    .local pmc rx1522_curclass
    .local pmc rx1522_bstack
    .local pmc rx1522_cstack
    rx1522_start = self."!cursor_start_all"()
    set rx1522_cur, rx1522_start[0]
    set rx1522_tgt, rx1522_start[1]
    set rx1522_pos, rx1522_start[2]
    set rx1522_curclass, rx1522_start[3]
    set rx1522_bstack, rx1522_start[4]
    set $I19, rx1522_start[5]
    store_lex unicode:"$\x{a2}", rx1522_cur
    length rx1522_eos, rx1522_tgt
    eq $I19, 1, rx1522_restart3693
    gt rx1522_pos, rx1522_eos, rx1522_fail3694
    repr_get_attr_int $I11, self, rx1522_curclass, "$!from"
    ne $I11, -1, rxscan1523_done3700
    goto rxscan1523_scan3699
  rxscan1523_loop3698:
    inc rx1522_pos
    gt rx1522_pos, rx1522_eos, rx1522_fail3694
    repr_bind_attr_int rx1522_cur, rx1522_curclass, "$!from", rx1522_pos
  rxscan1523_scan3699:
    nqp_rxmark rx1522_bstack, rxscan1523_loop3698, rx1522_pos, 0
  rxscan1523_done3700:
    nqp_rxmark rx1522_bstack, rxcap1524_fail3702, rx1522_pos, 0
    add $I11, rx1522_pos, 1
    gt $I11, rx1522_eos, rx1522_fail3694
    substr $S10, rx1522_tgt, rx1522_pos, 1
    ne $S10, ucs4:"%", rx1522_fail3694
    add rx1522_pos, 1
    nqp_rxpeek $I19, rx1522_bstack, rxcap1524_fail3702
    inc $I19
    set $I11, rx1522_bstack[$I19]
    repr_bind_attr_int rx1522_cur, rx1522_curclass, "$!pos", rx1522_pos
    $P11 = rx1522_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1522_pos)
    rx1522_cstack = rx1522_cur."!cursor_capture"($P11, "sym")
    goto rxcap1524_done3701
  rxcap1524_fail3702:
    goto rx1522_fail3694
  rxcap1524_done3701:
    repr_bind_attr_int rx1522_cur, rx1522_curclass, "$!pos", rx1522_pos
    $P11 = rx1522_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1522_curclass, "$!pos"
    lt $I11, 0, rx1522_fail3694
    nqp_rxmark rx1522_bstack, rxsubrule1525_pass3703, -1, 0
  rxsubrule1525_pass3703:
    rx1522_cstack = rx1522_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1522_pos, $P11, rx1522_curclass, "$!pos"
    rx1522_cur."!cursor_pass"(rx1522_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1522_cur)
  rx1522_restart3693:
    repr_get_attr_obj rx1522_cstack, rx1522_cur, rx1522_curclass, "$!cstack"
  rx1522_fail3694:
    unless rx1522_bstack, rx1522_done3692
    pop $I19, rx1522_bstack
    if_null rx1522_cstack, rx1522_cstack_done3697
    unless rx1522_cstack, rx1522_cstack_done3697
    dec $I19
    set $P11, rx1522_cstack[$I19]
  rx1522_cstack_done3697:
    pop rx1522_rep, rx1522_bstack
    pop rx1522_pos, rx1522_bstack
    pop $I19, rx1522_bstack
    lt rx1522_pos, -1, rx1522_done3692
    lt rx1522_pos, 0, rx1522_fail3694
    eq $I19, 0, rx1522_fail3694
    nqp_islist $I20, rx1522_cstack
    unless $I20, rx1522_jump3695
    elements $I18, rx1522_bstack
    le $I18, 0, rx1522_cut3696
    dec $I18
    set $I18, rx1522_bstack[$I18]
  rx1522_cut3696:
    assign rx1522_cstack, $I18
  rx1522_jump3695:
    jump $I19
  rx1522_done3692:
    rx1522_cur."!cursor_fail"()
    .return (rx1522_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_195_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1501
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1526_start
    .local string rx1526_tgt
    .local int rx1526_pos
    .local int rx1526_off
    .local int rx1526_eos
    .local int rx1526_rep
    .local pmc rx1526_cur
    .local pmc rx1526_curclass
    .local pmc rx1526_bstack
    .local pmc rx1526_cstack
    rx1526_start = self."!cursor_start_all"()
    set rx1526_cur, rx1526_start[0]
    set rx1526_tgt, rx1526_start[1]
    set rx1526_pos, rx1526_start[2]
    set rx1526_curclass, rx1526_start[3]
    set rx1526_bstack, rx1526_start[4]
    set $I19, rx1526_start[5]
    store_lex unicode:"$\x{a2}", rx1526_cur
    length rx1526_eos, rx1526_tgt
    eq $I19, 1, rx1526_restart3706
    gt rx1526_pos, rx1526_eos, rx1526_fail3707
    repr_get_attr_int $I11, self, rx1526_curclass, "$!from"
    ne $I11, -1, rxscan1527_done3713
    goto rxscan1527_scan3712
  rxscan1527_loop3711:
    inc rx1526_pos
    gt rx1526_pos, rx1526_eos, rx1526_fail3707
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!from", rx1526_pos
  rxscan1527_scan3712:
    nqp_rxmark rx1526_bstack, rxscan1527_loop3711, rx1526_pos, 0
  rxscan1527_done3713:
    nqp_rxmark rx1526_bstack, rxcap1528_fail3715, rx1526_pos, 0
    add $I11, rx1526_pos, 2
    gt $I11, rx1526_eos, rx1526_fail3707
    substr $S10, rx1526_tgt, rx1526_pos, 2
    ne $S10, ucs4:"+&", rx1526_fail3707
    add rx1526_pos, 2
    nqp_rxpeek $I19, rx1526_bstack, rxcap1528_fail3715
    inc $I19
    set $I11, rx1526_bstack[$I19]
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1526_pos)
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "sym")
    goto rxcap1528_done3714
  rxcap1528_fail3715:
    goto rx1526_fail3707
  rxcap1528_done3714:
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1526_curclass, "$!pos"
    lt $I11, 0, rx1526_fail3707
    nqp_rxmark rx1526_bstack, rxsubrule1529_pass3716, -1, 0
  rxsubrule1529_pass3716:
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1526_pos, $P11, rx1526_curclass, "$!pos"
    rx1526_cur."!cursor_pass"(rx1526_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1526_cur)
  rx1526_restart3706:
    repr_get_attr_obj rx1526_cstack, rx1526_cur, rx1526_curclass, "$!cstack"
  rx1526_fail3707:
    unless rx1526_bstack, rx1526_done3705
    pop $I19, rx1526_bstack
    if_null rx1526_cstack, rx1526_cstack_done3710
    unless rx1526_cstack, rx1526_cstack_done3710
    dec $I19
    set $P11, rx1526_cstack[$I19]
  rx1526_cstack_done3710:
    pop rx1526_rep, rx1526_bstack
    pop rx1526_pos, rx1526_bstack
    pop $I19, rx1526_bstack
    lt rx1526_pos, -1, rx1526_done3705
    lt rx1526_pos, 0, rx1526_fail3707
    eq $I19, 0, rx1526_fail3707
    nqp_islist $I20, rx1526_cstack
    unless $I20, rx1526_jump3708
    elements $I18, rx1526_bstack
    le $I18, 0, rx1526_cut3709
    dec $I18
    set $I18, rx1526_bstack[$I18]
  rx1526_cut3709:
    assign rx1526_cstack, $I18
  rx1526_jump3708:
    jump $I19
  rx1526_done3705:
    rx1526_cur."!cursor_fail"()
    .return (rx1526_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_196_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1503
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1530_start
    .local string rx1530_tgt
    .local int rx1530_pos
    .local int rx1530_off
    .local int rx1530_eos
    .local int rx1530_rep
    .local pmc rx1530_cur
    .local pmc rx1530_curclass
    .local pmc rx1530_bstack
    .local pmc rx1530_cstack
    rx1530_start = self."!cursor_start_all"()
    set rx1530_cur, rx1530_start[0]
    set rx1530_tgt, rx1530_start[1]
    set rx1530_pos, rx1530_start[2]
    set rx1530_curclass, rx1530_start[3]
    set rx1530_bstack, rx1530_start[4]
    set $I19, rx1530_start[5]
    store_lex unicode:"$\x{a2}", rx1530_cur
    length rx1530_eos, rx1530_tgt
    eq $I19, 1, rx1530_restart3719
    gt rx1530_pos, rx1530_eos, rx1530_fail3720
    repr_get_attr_int $I11, self, rx1530_curclass, "$!from"
    ne $I11, -1, rxscan1531_done3726
    goto rxscan1531_scan3725
  rxscan1531_loop3724:
    inc rx1530_pos
    gt rx1530_pos, rx1530_eos, rx1530_fail3720
    repr_bind_attr_int rx1530_cur, rx1530_curclass, "$!from", rx1530_pos
  rxscan1531_scan3725:
    nqp_rxmark rx1530_bstack, rxscan1531_loop3724, rx1530_pos, 0
  rxscan1531_done3726:
    nqp_rxmark rx1530_bstack, rxcap1532_fail3728, rx1530_pos, 0
    add $I11, rx1530_pos, 1
    gt $I11, rx1530_eos, rx1530_fail3720
    substr $S10, rx1530_tgt, rx1530_pos, 1
    ne $S10, ucs4:"+", rx1530_fail3720
    add rx1530_pos, 1
    nqp_rxpeek $I19, rx1530_bstack, rxcap1532_fail3728
    inc $I19
    set $I11, rx1530_bstack[$I19]
    repr_bind_attr_int rx1530_cur, rx1530_curclass, "$!pos", rx1530_pos
    $P11 = rx1530_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1530_pos)
    rx1530_cstack = rx1530_cur."!cursor_capture"($P11, "sym")
    goto rxcap1532_done3727
  rxcap1532_fail3728:
    goto rx1530_fail3720
  rxcap1532_done3727:
    repr_bind_attr_int rx1530_cur, rx1530_curclass, "$!pos", rx1530_pos
    $P11 = rx1530_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1530_curclass, "$!pos"
    lt $I11, 0, rx1530_fail3720
    nqp_rxmark rx1530_bstack, rxsubrule1533_pass3729, -1, 0
  rxsubrule1533_pass3729:
    rx1530_cstack = rx1530_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1530_pos, $P11, rx1530_curclass, "$!pos"
    rx1530_cur."!cursor_pass"(rx1530_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1530_cur)
  rx1530_restart3719:
    repr_get_attr_obj rx1530_cstack, rx1530_cur, rx1530_curclass, "$!cstack"
  rx1530_fail3720:
    unless rx1530_bstack, rx1530_done3718
    pop $I19, rx1530_bstack
    if_null rx1530_cstack, rx1530_cstack_done3723
    unless rx1530_cstack, rx1530_cstack_done3723
    dec $I19
    set $P11, rx1530_cstack[$I19]
  rx1530_cstack_done3723:
    pop rx1530_rep, rx1530_bstack
    pop rx1530_pos, rx1530_bstack
    pop $I19, rx1530_bstack
    lt rx1530_pos, -1, rx1530_done3718
    lt rx1530_pos, 0, rx1530_fail3720
    eq $I19, 0, rx1530_fail3720
    nqp_islist $I20, rx1530_cstack
    unless $I20, rx1530_jump3721
    elements $I18, rx1530_bstack
    le $I18, 0, rx1530_cut3722
    dec $I18
    set $I18, rx1530_bstack[$I18]
  rx1530_cut3722:
    assign rx1530_cstack, $I18
  rx1530_jump3721:
    jump $I19
  rx1530_done3718:
    rx1530_cur."!cursor_fail"()
    .return (rx1530_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_197_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1504
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1534_start
    .local string rx1534_tgt
    .local int rx1534_pos
    .local int rx1534_off
    .local int rx1534_eos
    .local int rx1534_rep
    .local pmc rx1534_cur
    .local pmc rx1534_curclass
    .local pmc rx1534_bstack
    .local pmc rx1534_cstack
    rx1534_start = self."!cursor_start_all"()
    set rx1534_cur, rx1534_start[0]
    set rx1534_tgt, rx1534_start[1]
    set rx1534_pos, rx1534_start[2]
    set rx1534_curclass, rx1534_start[3]
    set rx1534_bstack, rx1534_start[4]
    set $I19, rx1534_start[5]
    store_lex unicode:"$\x{a2}", rx1534_cur
    length rx1534_eos, rx1534_tgt
    eq $I19, 1, rx1534_restart3732
    gt rx1534_pos, rx1534_eos, rx1534_fail3733
    repr_get_attr_int $I11, self, rx1534_curclass, "$!from"
    ne $I11, -1, rxscan1535_done3739
    goto rxscan1535_scan3738
  rxscan1535_loop3737:
    inc rx1534_pos
    gt rx1534_pos, rx1534_eos, rx1534_fail3733
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!from", rx1534_pos
  rxscan1535_scan3738:
    nqp_rxmark rx1534_bstack, rxscan1535_loop3737, rx1534_pos, 0
  rxscan1535_done3739:
    nqp_rxmark rx1534_bstack, rxcap1536_fail3741, rx1534_pos, 0
    add $I11, rx1534_pos, 1
    gt $I11, rx1534_eos, rx1534_fail3733
    substr $S10, rx1534_tgt, rx1534_pos, 1
    ne $S10, ucs4:"-", rx1534_fail3733
    add rx1534_pos, 1
    nqp_rxpeek $I19, rx1534_bstack, rxcap1536_fail3741
    inc $I19
    set $I11, rx1534_bstack[$I19]
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!pos", rx1534_pos
    $P11 = rx1534_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1534_pos)
    rx1534_cstack = rx1534_cur."!cursor_capture"($P11, "sym")
    goto rxcap1536_done3740
  rxcap1536_fail3741:
    goto rx1534_fail3733
  rxcap1536_done3740:
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!pos", rx1534_pos
    $P11 = rx1534_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1534_curclass, "$!pos"
    lt $I11, 0, rx1534_fail3733
    nqp_rxmark rx1534_bstack, rxsubrule1537_pass3742, -1, 0
  rxsubrule1537_pass3742:
    rx1534_cstack = rx1534_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1534_pos, $P11, rx1534_curclass, "$!pos"
    rx1534_cur."!cursor_pass"(rx1534_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1534_cur)
  rx1534_restart3732:
    repr_get_attr_obj rx1534_cstack, rx1534_cur, rx1534_curclass, "$!cstack"
  rx1534_fail3733:
    unless rx1534_bstack, rx1534_done3731
    pop $I19, rx1534_bstack
    if_null rx1534_cstack, rx1534_cstack_done3736
    unless rx1534_cstack, rx1534_cstack_done3736
    dec $I19
    set $P11, rx1534_cstack[$I19]
  rx1534_cstack_done3736:
    pop rx1534_rep, rx1534_bstack
    pop rx1534_pos, rx1534_bstack
    pop $I19, rx1534_bstack
    lt rx1534_pos, -1, rx1534_done3731
    lt rx1534_pos, 0, rx1534_fail3733
    eq $I19, 0, rx1534_fail3733
    nqp_islist $I20, rx1534_cstack
    unless $I20, rx1534_jump3734
    elements $I18, rx1534_bstack
    le $I18, 0, rx1534_cut3735
    dec $I18
    set $I18, rx1534_bstack[$I18]
  rx1534_cut3735:
    assign rx1534_cstack, $I18
  rx1534_jump3734:
    jump $I19
  rx1534_done3731:
    rx1534_cur."!cursor_fail"()
    .return (rx1534_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_198_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1505
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1538_start
    .local string rx1538_tgt
    .local int rx1538_pos
    .local int rx1538_off
    .local int rx1538_eos
    .local int rx1538_rep
    .local pmc rx1538_cur
    .local pmc rx1538_curclass
    .local pmc rx1538_bstack
    .local pmc rx1538_cstack
    rx1538_start = self."!cursor_start_all"()
    set rx1538_cur, rx1538_start[0]
    set rx1538_tgt, rx1538_start[1]
    set rx1538_pos, rx1538_start[2]
    set rx1538_curclass, rx1538_start[3]
    set rx1538_bstack, rx1538_start[4]
    set $I19, rx1538_start[5]
    store_lex unicode:"$\x{a2}", rx1538_cur
    length rx1538_eos, rx1538_tgt
    eq $I19, 1, rx1538_restart3745
    gt rx1538_pos, rx1538_eos, rx1538_fail3746
    repr_get_attr_int $I11, self, rx1538_curclass, "$!from"
    ne $I11, -1, rxscan1539_done3752
    goto rxscan1539_scan3751
  rxscan1539_loop3750:
    inc rx1538_pos
    gt rx1538_pos, rx1538_eos, rx1538_fail3746
    repr_bind_attr_int rx1538_cur, rx1538_curclass, "$!from", rx1538_pos
  rxscan1539_scan3751:
    nqp_rxmark rx1538_bstack, rxscan1539_loop3750, rx1538_pos, 0
  rxscan1539_done3752:
    nqp_rxmark rx1538_bstack, rxcap1540_fail3754, rx1538_pos, 0
    add $I11, rx1538_pos, 2
    gt $I11, rx1538_eos, rx1538_fail3746
    substr $S10, rx1538_tgt, rx1538_pos, 2
    ne $S10, ucs4:"+|", rx1538_fail3746
    add rx1538_pos, 2
    nqp_rxpeek $I19, rx1538_bstack, rxcap1540_fail3754
    inc $I19
    set $I11, rx1538_bstack[$I19]
    repr_bind_attr_int rx1538_cur, rx1538_curclass, "$!pos", rx1538_pos
    $P11 = rx1538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1538_pos)
    rx1538_cstack = rx1538_cur."!cursor_capture"($P11, "sym")
    goto rxcap1540_done3753
  rxcap1540_fail3754:
    goto rx1538_fail3746
  rxcap1540_done3753:
    repr_bind_attr_int rx1538_cur, rx1538_curclass, "$!pos", rx1538_pos
    $P11 = rx1538_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1538_curclass, "$!pos"
    lt $I11, 0, rx1538_fail3746
    nqp_rxmark rx1538_bstack, rxsubrule1541_pass3755, -1, 0
  rxsubrule1541_pass3755:
    rx1538_cstack = rx1538_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1538_pos, $P11, rx1538_curclass, "$!pos"
    rx1538_cur."!cursor_pass"(rx1538_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1538_cur)
  rx1538_restart3745:
    repr_get_attr_obj rx1538_cstack, rx1538_cur, rx1538_curclass, "$!cstack"
  rx1538_fail3746:
    unless rx1538_bstack, rx1538_done3744
    pop $I19, rx1538_bstack
    if_null rx1538_cstack, rx1538_cstack_done3749
    unless rx1538_cstack, rx1538_cstack_done3749
    dec $I19
    set $P11, rx1538_cstack[$I19]
  rx1538_cstack_done3749:
    pop rx1538_rep, rx1538_bstack
    pop rx1538_pos, rx1538_bstack
    pop $I19, rx1538_bstack
    lt rx1538_pos, -1, rx1538_done3744
    lt rx1538_pos, 0, rx1538_fail3746
    eq $I19, 0, rx1538_fail3746
    nqp_islist $I20, rx1538_cstack
    unless $I20, rx1538_jump3747
    elements $I18, rx1538_bstack
    le $I18, 0, rx1538_cut3748
    dec $I18
    set $I18, rx1538_bstack[$I18]
  rx1538_cut3748:
    assign rx1538_cstack, $I18
  rx1538_jump3747:
    jump $I19
  rx1538_done3744:
    rx1538_cur."!cursor_fail"()
    .return (rx1538_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_199_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1506
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1542_start
    .local string rx1542_tgt
    .local int rx1542_pos
    .local int rx1542_off
    .local int rx1542_eos
    .local int rx1542_rep
    .local pmc rx1542_cur
    .local pmc rx1542_curclass
    .local pmc rx1542_bstack
    .local pmc rx1542_cstack
    rx1542_start = self."!cursor_start_all"()
    set rx1542_cur, rx1542_start[0]
    set rx1542_tgt, rx1542_start[1]
    set rx1542_pos, rx1542_start[2]
    set rx1542_curclass, rx1542_start[3]
    set rx1542_bstack, rx1542_start[4]
    set $I19, rx1542_start[5]
    store_lex unicode:"$\x{a2}", rx1542_cur
    length rx1542_eos, rx1542_tgt
    eq $I19, 1, rx1542_restart3758
    gt rx1542_pos, rx1542_eos, rx1542_fail3759
    repr_get_attr_int $I11, self, rx1542_curclass, "$!from"
    ne $I11, -1, rxscan1543_done3765
    goto rxscan1543_scan3764
  rxscan1543_loop3763:
    inc rx1542_pos
    gt rx1542_pos, rx1542_eos, rx1542_fail3759
    repr_bind_attr_int rx1542_cur, rx1542_curclass, "$!from", rx1542_pos
  rxscan1543_scan3764:
    nqp_rxmark rx1542_bstack, rxscan1543_loop3763, rx1542_pos, 0
  rxscan1543_done3765:
    nqp_rxmark rx1542_bstack, rxcap1544_fail3767, rx1542_pos, 0
    add $I11, rx1542_pos, 2
    gt $I11, rx1542_eos, rx1542_fail3759
    substr $S10, rx1542_tgt, rx1542_pos, 2
    ne $S10, ucs4:"+^", rx1542_fail3759
    add rx1542_pos, 2
    nqp_rxpeek $I19, rx1542_bstack, rxcap1544_fail3767
    inc $I19
    set $I11, rx1542_bstack[$I19]
    repr_bind_attr_int rx1542_cur, rx1542_curclass, "$!pos", rx1542_pos
    $P11 = rx1542_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1542_pos)
    rx1542_cstack = rx1542_cur."!cursor_capture"($P11, "sym")
    goto rxcap1544_done3766
  rxcap1544_fail3767:
    goto rx1542_fail3759
  rxcap1544_done3766:
    repr_bind_attr_int rx1542_cur, rx1542_curclass, "$!pos", rx1542_pos
    $P11 = rx1542_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1542_curclass, "$!pos"
    lt $I11, 0, rx1542_fail3759
    nqp_rxmark rx1542_bstack, rxsubrule1545_pass3768, -1, 0
  rxsubrule1545_pass3768:
    rx1542_cstack = rx1542_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1542_pos, $P11, rx1542_curclass, "$!pos"
    rx1542_cur."!cursor_pass"(rx1542_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1542_cur)
  rx1542_restart3758:
    repr_get_attr_obj rx1542_cstack, rx1542_cur, rx1542_curclass, "$!cstack"
  rx1542_fail3759:
    unless rx1542_bstack, rx1542_done3757
    pop $I19, rx1542_bstack
    if_null rx1542_cstack, rx1542_cstack_done3762
    unless rx1542_cstack, rx1542_cstack_done3762
    dec $I19
    set $P11, rx1542_cstack[$I19]
  rx1542_cstack_done3762:
    pop rx1542_rep, rx1542_bstack
    pop rx1542_pos, rx1542_bstack
    pop $I19, rx1542_bstack
    lt rx1542_pos, -1, rx1542_done3757
    lt rx1542_pos, 0, rx1542_fail3759
    eq $I19, 0, rx1542_fail3759
    nqp_islist $I20, rx1542_cstack
    unless $I20, rx1542_jump3760
    elements $I18, rx1542_bstack
    le $I18, 0, rx1542_cut3761
    dec $I18
    set $I18, rx1542_bstack[$I18]
  rx1542_cut3761:
    assign rx1542_cstack, $I18
  rx1542_jump3760:
    jump $I19
  rx1542_done3757:
    rx1542_cur."!cursor_fail"()
    .return (rx1542_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_200_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1508
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1546_start
    .local string rx1546_tgt
    .local int rx1546_pos
    .local int rx1546_off
    .local int rx1546_eos
    .local int rx1546_rep
    .local pmc rx1546_cur
    .local pmc rx1546_curclass
    .local pmc rx1546_bstack
    .local pmc rx1546_cstack
    rx1546_start = self."!cursor_start_all"()
    set rx1546_cur, rx1546_start[0]
    set rx1546_tgt, rx1546_start[1]
    set rx1546_pos, rx1546_start[2]
    set rx1546_curclass, rx1546_start[3]
    set rx1546_bstack, rx1546_start[4]
    set $I19, rx1546_start[5]
    store_lex unicode:"$\x{a2}", rx1546_cur
    length rx1546_eos, rx1546_tgt
    eq $I19, 1, rx1546_restart3771
    gt rx1546_pos, rx1546_eos, rx1546_fail3772
    repr_get_attr_int $I11, self, rx1546_curclass, "$!from"
    ne $I11, -1, rxscan1547_done3778
    goto rxscan1547_scan3777
  rxscan1547_loop3776:
    inc rx1546_pos
    gt rx1546_pos, rx1546_eos, rx1546_fail3772
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!from", rx1546_pos
  rxscan1547_scan3777:
    nqp_rxmark rx1546_bstack, rxscan1547_loop3776, rx1546_pos, 0
  rxscan1547_done3778:
    nqp_rxmark rx1546_bstack, rxcap1548_fail3780, rx1546_pos, 0
    add $I11, rx1546_pos, 1
    gt $I11, rx1546_eos, rx1546_fail3772
    substr $S10, rx1546_tgt, rx1546_pos, 1
    ne $S10, ucs4:"~", rx1546_fail3772
    add rx1546_pos, 1
    nqp_rxpeek $I19, rx1546_bstack, rxcap1548_fail3780
    inc $I19
    set $I11, rx1546_bstack[$I19]
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1546_pos)
    rx1546_cstack = rx1546_cur."!cursor_capture"($P11, "sym")
    goto rxcap1548_done3779
  rxcap1548_fail3780:
    goto rx1546_fail3772
  rxcap1548_done3779:
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1546_curclass, "$!pos"
    lt $I11, 0, rx1546_fail3772
    nqp_rxmark rx1546_bstack, rxsubrule1549_pass3781, -1, 0
  rxsubrule1549_pass3781:
    rx1546_cstack = rx1546_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1546_pos, $P11, rx1546_curclass, "$!pos"
    rx1546_cur."!cursor_pass"(rx1546_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1546_cur)
  rx1546_restart3771:
    repr_get_attr_obj rx1546_cstack, rx1546_cur, rx1546_curclass, "$!cstack"
  rx1546_fail3772:
    unless rx1546_bstack, rx1546_done3770
    pop $I19, rx1546_bstack
    if_null rx1546_cstack, rx1546_cstack_done3775
    unless rx1546_cstack, rx1546_cstack_done3775
    dec $I19
    set $P11, rx1546_cstack[$I19]
  rx1546_cstack_done3775:
    pop rx1546_rep, rx1546_bstack
    pop rx1546_pos, rx1546_bstack
    pop $I19, rx1546_bstack
    lt rx1546_pos, -1, rx1546_done3770
    lt rx1546_pos, 0, rx1546_fail3772
    eq $I19, 0, rx1546_fail3772
    nqp_islist $I20, rx1546_cstack
    unless $I20, rx1546_jump3773
    elements $I18, rx1546_bstack
    le $I18, 0, rx1546_cut3774
    dec $I18
    set $I18, rx1546_bstack[$I18]
  rx1546_cut3774:
    assign rx1546_cstack, $I18
  rx1546_jump3773:
    jump $I19
  rx1546_done3770:
    rx1546_cur."!cursor_fail"()
    .return (rx1546_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_201_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1510
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1550_start
    .local string rx1550_tgt
    .local int rx1550_pos
    .local int rx1550_off
    .local int rx1550_eos
    .local int rx1550_rep
    .local pmc rx1550_cur
    .local pmc rx1550_curclass
    .local pmc rx1550_bstack
    .local pmc rx1550_cstack
    rx1550_start = self."!cursor_start_all"()
    set rx1550_cur, rx1550_start[0]
    set rx1550_tgt, rx1550_start[1]
    set rx1550_pos, rx1550_start[2]
    set rx1550_curclass, rx1550_start[3]
    set rx1550_bstack, rx1550_start[4]
    set $I19, rx1550_start[5]
    store_lex unicode:"$\x{a2}", rx1550_cur
    length rx1550_eos, rx1550_tgt
    eq $I19, 1, rx1550_restart3784
    gt rx1550_pos, rx1550_eos, rx1550_fail3785
    repr_get_attr_int $I11, self, rx1550_curclass, "$!from"
    ne $I11, -1, rxscan1551_done3791
    goto rxscan1551_scan3790
  rxscan1551_loop3789:
    inc rx1550_pos
    gt rx1550_pos, rx1550_eos, rx1550_fail3785
    repr_bind_attr_int rx1550_cur, rx1550_curclass, "$!from", rx1550_pos
  rxscan1551_scan3790:
    nqp_rxmark rx1550_bstack, rxscan1551_loop3789, rx1550_pos, 0
  rxscan1551_done3791:
    nqp_rxmark rx1550_bstack, rxcap1552_fail3793, rx1550_pos, 0
    add $I11, rx1550_pos, 2
    gt $I11, rx1550_eos, rx1550_fail3785
    substr $S10, rx1550_tgt, rx1550_pos, 2
    ne $S10, ucs4:"==", rx1550_fail3785
    add rx1550_pos, 2
    nqp_rxpeek $I19, rx1550_bstack, rxcap1552_fail3793
    inc $I19
    set $I11, rx1550_bstack[$I19]
    repr_bind_attr_int rx1550_cur, rx1550_curclass, "$!pos", rx1550_pos
    $P11 = rx1550_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1550_pos)
    rx1550_cstack = rx1550_cur."!cursor_capture"($P11, "sym")
    goto rxcap1552_done3792
  rxcap1552_fail3793:
    goto rx1550_fail3785
  rxcap1552_done3792:
    repr_bind_attr_int rx1550_cur, rx1550_curclass, "$!pos", rx1550_pos
    $P11 = rx1550_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1550_curclass, "$!pos"
    lt $I11, 0, rx1550_fail3785
    nqp_rxmark rx1550_bstack, rxsubrule1553_pass3794, -1, 0
  rxsubrule1553_pass3794:
    rx1550_cstack = rx1550_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1550_pos, $P11, rx1550_curclass, "$!pos"
    rx1550_cur."!cursor_pass"(rx1550_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1550_cur)
  rx1550_restart3784:
    repr_get_attr_obj rx1550_cstack, rx1550_cur, rx1550_curclass, "$!cstack"
  rx1550_fail3785:
    unless rx1550_bstack, rx1550_done3783
    pop $I19, rx1550_bstack
    if_null rx1550_cstack, rx1550_cstack_done3788
    unless rx1550_cstack, rx1550_cstack_done3788
    dec $I19
    set $P11, rx1550_cstack[$I19]
  rx1550_cstack_done3788:
    pop rx1550_rep, rx1550_bstack
    pop rx1550_pos, rx1550_bstack
    pop $I19, rx1550_bstack
    lt rx1550_pos, -1, rx1550_done3783
    lt rx1550_pos, 0, rx1550_fail3785
    eq $I19, 0, rx1550_fail3785
    nqp_islist $I20, rx1550_cstack
    unless $I20, rx1550_jump3786
    elements $I18, rx1550_bstack
    le $I18, 0, rx1550_cut3787
    dec $I18
    set $I18, rx1550_bstack[$I18]
  rx1550_cut3787:
    assign rx1550_cstack, $I18
  rx1550_jump3786:
    jump $I19
  rx1550_done3783:
    rx1550_cur."!cursor_fail"()
    .return (rx1550_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_202_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1511
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1554_start
    .local string rx1554_tgt
    .local int rx1554_pos
    .local int rx1554_off
    .local int rx1554_eos
    .local int rx1554_rep
    .local pmc rx1554_cur
    .local pmc rx1554_curclass
    .local pmc rx1554_bstack
    .local pmc rx1554_cstack
    rx1554_start = self."!cursor_start_all"()
    set rx1554_cur, rx1554_start[0]
    set rx1554_tgt, rx1554_start[1]
    set rx1554_pos, rx1554_start[2]
    set rx1554_curclass, rx1554_start[3]
    set rx1554_bstack, rx1554_start[4]
    set $I19, rx1554_start[5]
    store_lex unicode:"$\x{a2}", rx1554_cur
    length rx1554_eos, rx1554_tgt
    eq $I19, 1, rx1554_restart3797
    gt rx1554_pos, rx1554_eos, rx1554_fail3798
    repr_get_attr_int $I11, self, rx1554_curclass, "$!from"
    ne $I11, -1, rxscan1555_done3804
    goto rxscan1555_scan3803
  rxscan1555_loop3802:
    inc rx1554_pos
    gt rx1554_pos, rx1554_eos, rx1554_fail3798
    repr_bind_attr_int rx1554_cur, rx1554_curclass, "$!from", rx1554_pos
  rxscan1555_scan3803:
    nqp_rxmark rx1554_bstack, rxscan1555_loop3802, rx1554_pos, 0
  rxscan1555_done3804:
    nqp_rxmark rx1554_bstack, rxcap1556_fail3806, rx1554_pos, 0
    add $I11, rx1554_pos, 2
    gt $I11, rx1554_eos, rx1554_fail3798
    substr $S10, rx1554_tgt, rx1554_pos, 2
    ne $S10, ucs4:"!=", rx1554_fail3798
    add rx1554_pos, 2
    nqp_rxpeek $I19, rx1554_bstack, rxcap1556_fail3806
    inc $I19
    set $I11, rx1554_bstack[$I19]
    repr_bind_attr_int rx1554_cur, rx1554_curclass, "$!pos", rx1554_pos
    $P11 = rx1554_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1554_pos)
    rx1554_cstack = rx1554_cur."!cursor_capture"($P11, "sym")
    goto rxcap1556_done3805
  rxcap1556_fail3806:
    goto rx1554_fail3798
  rxcap1556_done3805:
    repr_bind_attr_int rx1554_cur, rx1554_curclass, "$!pos", rx1554_pos
    $P11 = rx1554_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1554_curclass, "$!pos"
    lt $I11, 0, rx1554_fail3798
    nqp_rxmark rx1554_bstack, rxsubrule1557_pass3807, -1, 0
  rxsubrule1557_pass3807:
    rx1554_cstack = rx1554_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1554_pos, $P11, rx1554_curclass, "$!pos"
    rx1554_cur."!cursor_pass"(rx1554_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1554_cur)
  rx1554_restart3797:
    repr_get_attr_obj rx1554_cstack, rx1554_cur, rx1554_curclass, "$!cstack"
  rx1554_fail3798:
    unless rx1554_bstack, rx1554_done3796
    pop $I19, rx1554_bstack
    if_null rx1554_cstack, rx1554_cstack_done3801
    unless rx1554_cstack, rx1554_cstack_done3801
    dec $I19
    set $P11, rx1554_cstack[$I19]
  rx1554_cstack_done3801:
    pop rx1554_rep, rx1554_bstack
    pop rx1554_pos, rx1554_bstack
    pop $I19, rx1554_bstack
    lt rx1554_pos, -1, rx1554_done3796
    lt rx1554_pos, 0, rx1554_fail3798
    eq $I19, 0, rx1554_fail3798
    nqp_islist $I20, rx1554_cstack
    unless $I20, rx1554_jump3799
    elements $I18, rx1554_bstack
    le $I18, 0, rx1554_cut3800
    dec $I18
    set $I18, rx1554_bstack[$I18]
  rx1554_cut3800:
    assign rx1554_cstack, $I18
  rx1554_jump3799:
    jump $I19
  rx1554_done3796:
    rx1554_cur."!cursor_fail"()
    .return (rx1554_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_203_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1512
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1558_start
    .local string rx1558_tgt
    .local int rx1558_pos
    .local int rx1558_off
    .local int rx1558_eos
    .local int rx1558_rep
    .local pmc rx1558_cur
    .local pmc rx1558_curclass
    .local pmc rx1558_bstack
    .local pmc rx1558_cstack
    rx1558_start = self."!cursor_start_all"()
    set rx1558_cur, rx1558_start[0]
    set rx1558_tgt, rx1558_start[1]
    set rx1558_pos, rx1558_start[2]
    set rx1558_curclass, rx1558_start[3]
    set rx1558_bstack, rx1558_start[4]
    set $I19, rx1558_start[5]
    store_lex unicode:"$\x{a2}", rx1558_cur
    length rx1558_eos, rx1558_tgt
    eq $I19, 1, rx1558_restart3810
    gt rx1558_pos, rx1558_eos, rx1558_fail3811
    repr_get_attr_int $I11, self, rx1558_curclass, "$!from"
    ne $I11, -1, rxscan1559_done3817
    goto rxscan1559_scan3816
  rxscan1559_loop3815:
    inc rx1558_pos
    gt rx1558_pos, rx1558_eos, rx1558_fail3811
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!from", rx1558_pos
  rxscan1559_scan3816:
    nqp_rxmark rx1558_bstack, rxscan1559_loop3815, rx1558_pos, 0
  rxscan1559_done3817:
    nqp_rxmark rx1558_bstack, rxcap1560_fail3819, rx1558_pos, 0
    add $I11, rx1558_pos, 2
    gt $I11, rx1558_eos, rx1558_fail3811
    substr $S10, rx1558_tgt, rx1558_pos, 2
    ne $S10, ucs4:"<=", rx1558_fail3811
    add rx1558_pos, 2
    nqp_rxpeek $I19, rx1558_bstack, rxcap1560_fail3819
    inc $I19
    set $I11, rx1558_bstack[$I19]
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1558_pos)
    rx1558_cstack = rx1558_cur."!cursor_capture"($P11, "sym")
    goto rxcap1560_done3818
  rxcap1560_fail3819:
    goto rx1558_fail3811
  rxcap1560_done3818:
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1558_curclass, "$!pos"
    lt $I11, 0, rx1558_fail3811
    nqp_rxmark rx1558_bstack, rxsubrule1561_pass3820, -1, 0
  rxsubrule1561_pass3820:
    rx1558_cstack = rx1558_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1558_pos, $P11, rx1558_curclass, "$!pos"
    rx1558_cur."!cursor_pass"(rx1558_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1558_cur)
  rx1558_restart3810:
    repr_get_attr_obj rx1558_cstack, rx1558_cur, rx1558_curclass, "$!cstack"
  rx1558_fail3811:
    unless rx1558_bstack, rx1558_done3809
    pop $I19, rx1558_bstack
    if_null rx1558_cstack, rx1558_cstack_done3814
    unless rx1558_cstack, rx1558_cstack_done3814
    dec $I19
    set $P11, rx1558_cstack[$I19]
  rx1558_cstack_done3814:
    pop rx1558_rep, rx1558_bstack
    pop rx1558_pos, rx1558_bstack
    pop $I19, rx1558_bstack
    lt rx1558_pos, -1, rx1558_done3809
    lt rx1558_pos, 0, rx1558_fail3811
    eq $I19, 0, rx1558_fail3811
    nqp_islist $I20, rx1558_cstack
    unless $I20, rx1558_jump3812
    elements $I18, rx1558_bstack
    le $I18, 0, rx1558_cut3813
    dec $I18
    set $I18, rx1558_bstack[$I18]
  rx1558_cut3813:
    assign rx1558_cstack, $I18
  rx1558_jump3812:
    jump $I19
  rx1558_done3809:
    rx1558_cur."!cursor_fail"()
    .return (rx1558_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_204_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1513
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1562_start
    .local string rx1562_tgt
    .local int rx1562_pos
    .local int rx1562_off
    .local int rx1562_eos
    .local int rx1562_rep
    .local pmc rx1562_cur
    .local pmc rx1562_curclass
    .local pmc rx1562_bstack
    .local pmc rx1562_cstack
    rx1562_start = self."!cursor_start_all"()
    set rx1562_cur, rx1562_start[0]
    set rx1562_tgt, rx1562_start[1]
    set rx1562_pos, rx1562_start[2]
    set rx1562_curclass, rx1562_start[3]
    set rx1562_bstack, rx1562_start[4]
    set $I19, rx1562_start[5]
    store_lex unicode:"$\x{a2}", rx1562_cur
    length rx1562_eos, rx1562_tgt
    eq $I19, 1, rx1562_restart3823
    gt rx1562_pos, rx1562_eos, rx1562_fail3824
    repr_get_attr_int $I11, self, rx1562_curclass, "$!from"
    ne $I11, -1, rxscan1563_done3830
    goto rxscan1563_scan3829
  rxscan1563_loop3828:
    inc rx1562_pos
    gt rx1562_pos, rx1562_eos, rx1562_fail3824
    repr_bind_attr_int rx1562_cur, rx1562_curclass, "$!from", rx1562_pos
  rxscan1563_scan3829:
    nqp_rxmark rx1562_bstack, rxscan1563_loop3828, rx1562_pos, 0
  rxscan1563_done3830:
    nqp_rxmark rx1562_bstack, rxcap1564_fail3832, rx1562_pos, 0
    add $I11, rx1562_pos, 2
    gt $I11, rx1562_eos, rx1562_fail3824
    substr $S10, rx1562_tgt, rx1562_pos, 2
    ne $S10, ucs4:">=", rx1562_fail3824
    add rx1562_pos, 2
    nqp_rxpeek $I19, rx1562_bstack, rxcap1564_fail3832
    inc $I19
    set $I11, rx1562_bstack[$I19]
    repr_bind_attr_int rx1562_cur, rx1562_curclass, "$!pos", rx1562_pos
    $P11 = rx1562_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1562_pos)
    rx1562_cstack = rx1562_cur."!cursor_capture"($P11, "sym")
    goto rxcap1564_done3831
  rxcap1564_fail3832:
    goto rx1562_fail3824
  rxcap1564_done3831:
    repr_bind_attr_int rx1562_cur, rx1562_curclass, "$!pos", rx1562_pos
    $P11 = rx1562_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1562_curclass, "$!pos"
    lt $I11, 0, rx1562_fail3824
    nqp_rxmark rx1562_bstack, rxsubrule1565_pass3833, -1, 0
  rxsubrule1565_pass3833:
    rx1562_cstack = rx1562_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1562_pos, $P11, rx1562_curclass, "$!pos"
    rx1562_cur."!cursor_pass"(rx1562_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1562_cur)
  rx1562_restart3823:
    repr_get_attr_obj rx1562_cstack, rx1562_cur, rx1562_curclass, "$!cstack"
  rx1562_fail3824:
    unless rx1562_bstack, rx1562_done3822
    pop $I19, rx1562_bstack
    if_null rx1562_cstack, rx1562_cstack_done3827
    unless rx1562_cstack, rx1562_cstack_done3827
    dec $I19
    set $P11, rx1562_cstack[$I19]
  rx1562_cstack_done3827:
    pop rx1562_rep, rx1562_bstack
    pop rx1562_pos, rx1562_bstack
    pop $I19, rx1562_bstack
    lt rx1562_pos, -1, rx1562_done3822
    lt rx1562_pos, 0, rx1562_fail3824
    eq $I19, 0, rx1562_fail3824
    nqp_islist $I20, rx1562_cstack
    unless $I20, rx1562_jump3825
    elements $I18, rx1562_bstack
    le $I18, 0, rx1562_cut3826
    dec $I18
    set $I18, rx1562_bstack[$I18]
  rx1562_cut3826:
    assign rx1562_cstack, $I18
  rx1562_jump3825:
    jump $I19
  rx1562_done3822:
    rx1562_cur."!cursor_fail"()
    .return (rx1562_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_205_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1514
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1566_start
    .local string rx1566_tgt
    .local int rx1566_pos
    .local int rx1566_off
    .local int rx1566_eos
    .local int rx1566_rep
    .local pmc rx1566_cur
    .local pmc rx1566_curclass
    .local pmc rx1566_bstack
    .local pmc rx1566_cstack
    rx1566_start = self."!cursor_start_all"()
    set rx1566_cur, rx1566_start[0]
    set rx1566_tgt, rx1566_start[1]
    set rx1566_pos, rx1566_start[2]
    set rx1566_curclass, rx1566_start[3]
    set rx1566_bstack, rx1566_start[4]
    set $I19, rx1566_start[5]
    store_lex unicode:"$\x{a2}", rx1566_cur
    length rx1566_eos, rx1566_tgt
    eq $I19, 1, rx1566_restart3836
    gt rx1566_pos, rx1566_eos, rx1566_fail3837
    repr_get_attr_int $I11, self, rx1566_curclass, "$!from"
    ne $I11, -1, rxscan1567_done3843
    goto rxscan1567_scan3842
  rxscan1567_loop3841:
    inc rx1566_pos
    gt rx1566_pos, rx1566_eos, rx1566_fail3837
    repr_bind_attr_int rx1566_cur, rx1566_curclass, "$!from", rx1566_pos
  rxscan1567_scan3842:
    nqp_rxmark rx1566_bstack, rxscan1567_loop3841, rx1566_pos, 0
  rxscan1567_done3843:
    nqp_rxmark rx1566_bstack, rxcap1568_fail3845, rx1566_pos, 0
    add $I11, rx1566_pos, 1
    gt $I11, rx1566_eos, rx1566_fail3837
    substr $S10, rx1566_tgt, rx1566_pos, 1
    ne $S10, ucs4:"<", rx1566_fail3837
    add rx1566_pos, 1
    nqp_rxpeek $I19, rx1566_bstack, rxcap1568_fail3845
    inc $I19
    set $I11, rx1566_bstack[$I19]
    repr_bind_attr_int rx1566_cur, rx1566_curclass, "$!pos", rx1566_pos
    $P11 = rx1566_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1566_pos)
    rx1566_cstack = rx1566_cur."!cursor_capture"($P11, "sym")
    goto rxcap1568_done3844
  rxcap1568_fail3845:
    goto rx1566_fail3837
  rxcap1568_done3844:
    repr_bind_attr_int rx1566_cur, rx1566_curclass, "$!pos", rx1566_pos
    $P11 = rx1566_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1566_curclass, "$!pos"
    lt $I11, 0, rx1566_fail3837
    nqp_rxmark rx1566_bstack, rxsubrule1569_pass3846, -1, 0
  rxsubrule1569_pass3846:
    rx1566_cstack = rx1566_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1566_pos, $P11, rx1566_curclass, "$!pos"
    rx1566_cur."!cursor_pass"(rx1566_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1566_cur)
  rx1566_restart3836:
    repr_get_attr_obj rx1566_cstack, rx1566_cur, rx1566_curclass, "$!cstack"
  rx1566_fail3837:
    unless rx1566_bstack, rx1566_done3835
    pop $I19, rx1566_bstack
    if_null rx1566_cstack, rx1566_cstack_done3840
    unless rx1566_cstack, rx1566_cstack_done3840
    dec $I19
    set $P11, rx1566_cstack[$I19]
  rx1566_cstack_done3840:
    pop rx1566_rep, rx1566_bstack
    pop rx1566_pos, rx1566_bstack
    pop $I19, rx1566_bstack
    lt rx1566_pos, -1, rx1566_done3835
    lt rx1566_pos, 0, rx1566_fail3837
    eq $I19, 0, rx1566_fail3837
    nqp_islist $I20, rx1566_cstack
    unless $I20, rx1566_jump3838
    elements $I18, rx1566_bstack
    le $I18, 0, rx1566_cut3839
    dec $I18
    set $I18, rx1566_bstack[$I18]
  rx1566_cut3839:
    assign rx1566_cstack, $I18
  rx1566_jump3838:
    jump $I19
  rx1566_done3835:
    rx1566_cur."!cursor_fail"()
    .return (rx1566_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_206_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1515
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1570_start
    .local string rx1570_tgt
    .local int rx1570_pos
    .local int rx1570_off
    .local int rx1570_eos
    .local int rx1570_rep
    .local pmc rx1570_cur
    .local pmc rx1570_curclass
    .local pmc rx1570_bstack
    .local pmc rx1570_cstack
    rx1570_start = self."!cursor_start_all"()
    set rx1570_cur, rx1570_start[0]
    set rx1570_tgt, rx1570_start[1]
    set rx1570_pos, rx1570_start[2]
    set rx1570_curclass, rx1570_start[3]
    set rx1570_bstack, rx1570_start[4]
    set $I19, rx1570_start[5]
    store_lex unicode:"$\x{a2}", rx1570_cur
    length rx1570_eos, rx1570_tgt
    eq $I19, 1, rx1570_restart3849
    gt rx1570_pos, rx1570_eos, rx1570_fail3850
    repr_get_attr_int $I11, self, rx1570_curclass, "$!from"
    ne $I11, -1, rxscan1571_done3856
    goto rxscan1571_scan3855
  rxscan1571_loop3854:
    inc rx1570_pos
    gt rx1570_pos, rx1570_eos, rx1570_fail3850
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!from", rx1570_pos
  rxscan1571_scan3855:
    nqp_rxmark rx1570_bstack, rxscan1571_loop3854, rx1570_pos, 0
  rxscan1571_done3856:
    nqp_rxmark rx1570_bstack, rxcap1572_fail3858, rx1570_pos, 0
    add $I11, rx1570_pos, 1
    gt $I11, rx1570_eos, rx1570_fail3850
    substr $S10, rx1570_tgt, rx1570_pos, 1
    ne $S10, ucs4:">", rx1570_fail3850
    add rx1570_pos, 1
    nqp_rxpeek $I19, rx1570_bstack, rxcap1572_fail3858
    inc $I19
    set $I11, rx1570_bstack[$I19]
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!pos", rx1570_pos
    $P11 = rx1570_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1570_pos)
    rx1570_cstack = rx1570_cur."!cursor_capture"($P11, "sym")
    goto rxcap1572_done3857
  rxcap1572_fail3858:
    goto rx1570_fail3850
  rxcap1572_done3857:
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!pos", rx1570_pos
    $P11 = rx1570_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1570_curclass, "$!pos"
    lt $I11, 0, rx1570_fail3850
    nqp_rxmark rx1570_bstack, rxsubrule1573_pass3859, -1, 0
  rxsubrule1573_pass3859:
    rx1570_cstack = rx1570_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1570_pos, $P11, rx1570_curclass, "$!pos"
    rx1570_cur."!cursor_pass"(rx1570_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1570_cur)
  rx1570_restart3849:
    repr_get_attr_obj rx1570_cstack, rx1570_cur, rx1570_curclass, "$!cstack"
  rx1570_fail3850:
    unless rx1570_bstack, rx1570_done3848
    pop $I19, rx1570_bstack
    if_null rx1570_cstack, rx1570_cstack_done3853
    unless rx1570_cstack, rx1570_cstack_done3853
    dec $I19
    set $P11, rx1570_cstack[$I19]
  rx1570_cstack_done3853:
    pop rx1570_rep, rx1570_bstack
    pop rx1570_pos, rx1570_bstack
    pop $I19, rx1570_bstack
    lt rx1570_pos, -1, rx1570_done3848
    lt rx1570_pos, 0, rx1570_fail3850
    eq $I19, 0, rx1570_fail3850
    nqp_islist $I20, rx1570_cstack
    unless $I20, rx1570_jump3851
    elements $I18, rx1570_bstack
    le $I18, 0, rx1570_cut3852
    dec $I18
    set $I18, rx1570_bstack[$I18]
  rx1570_cut3852:
    assign rx1570_cstack, $I18
  rx1570_jump3851:
    jump $I19
  rx1570_done3848:
    rx1570_cur."!cursor_fail"()
    .return (rx1570_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_207_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1516
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1574_start
    .local string rx1574_tgt
    .local int rx1574_pos
    .local int rx1574_off
    .local int rx1574_eos
    .local int rx1574_rep
    .local pmc rx1574_cur
    .local pmc rx1574_curclass
    .local pmc rx1574_bstack
    .local pmc rx1574_cstack
    rx1574_start = self."!cursor_start_all"()
    set rx1574_cur, rx1574_start[0]
    set rx1574_tgt, rx1574_start[1]
    set rx1574_pos, rx1574_start[2]
    set rx1574_curclass, rx1574_start[3]
    set rx1574_bstack, rx1574_start[4]
    set $I19, rx1574_start[5]
    store_lex unicode:"$\x{a2}", rx1574_cur
    length rx1574_eos, rx1574_tgt
    eq $I19, 1, rx1574_restart3862
    gt rx1574_pos, rx1574_eos, rx1574_fail3863
    repr_get_attr_int $I11, self, rx1574_curclass, "$!from"
    ne $I11, -1, rxscan1575_done3869
    goto rxscan1575_scan3868
  rxscan1575_loop3867:
    inc rx1574_pos
    gt rx1574_pos, rx1574_eos, rx1574_fail3863
    repr_bind_attr_int rx1574_cur, rx1574_curclass, "$!from", rx1574_pos
  rxscan1575_scan3868:
    nqp_rxmark rx1574_bstack, rxscan1575_loop3867, rx1574_pos, 0
  rxscan1575_done3869:
    nqp_rxmark rx1574_bstack, rxcap1576_fail3871, rx1574_pos, 0
    add $I11, rx1574_pos, 2
    gt $I11, rx1574_eos, rx1574_fail3863
    substr $S10, rx1574_tgt, rx1574_pos, 2
    ne $S10, ucs4:"eq", rx1574_fail3863
    add rx1574_pos, 2
    nqp_rxpeek $I19, rx1574_bstack, rxcap1576_fail3871
    inc $I19
    set $I11, rx1574_bstack[$I19]
    repr_bind_attr_int rx1574_cur, rx1574_curclass, "$!pos", rx1574_pos
    $P11 = rx1574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1574_pos)
    rx1574_cstack = rx1574_cur."!cursor_capture"($P11, "sym")
    goto rxcap1576_done3870
  rxcap1576_fail3871:
    goto rx1574_fail3863
  rxcap1576_done3870:
    repr_bind_attr_int rx1574_cur, rx1574_curclass, "$!pos", rx1574_pos
    $P11 = rx1574_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1574_curclass, "$!pos"
    lt $I11, 0, rx1574_fail3863
    nqp_rxmark rx1574_bstack, rxsubrule1577_pass3872, -1, 0
  rxsubrule1577_pass3872:
    rx1574_cstack = rx1574_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1574_pos, $P11, rx1574_curclass, "$!pos"
    rx1574_cur."!cursor_pass"(rx1574_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1574_cur)
  rx1574_restart3862:
    repr_get_attr_obj rx1574_cstack, rx1574_cur, rx1574_curclass, "$!cstack"
  rx1574_fail3863:
    unless rx1574_bstack, rx1574_done3861
    pop $I19, rx1574_bstack
    if_null rx1574_cstack, rx1574_cstack_done3866
    unless rx1574_cstack, rx1574_cstack_done3866
    dec $I19
    set $P11, rx1574_cstack[$I19]
  rx1574_cstack_done3866:
    pop rx1574_rep, rx1574_bstack
    pop rx1574_pos, rx1574_bstack
    pop $I19, rx1574_bstack
    lt rx1574_pos, -1, rx1574_done3861
    lt rx1574_pos, 0, rx1574_fail3863
    eq $I19, 0, rx1574_fail3863
    nqp_islist $I20, rx1574_cstack
    unless $I20, rx1574_jump3864
    elements $I18, rx1574_bstack
    le $I18, 0, rx1574_cut3865
    dec $I18
    set $I18, rx1574_bstack[$I18]
  rx1574_cut3865:
    assign rx1574_cstack, $I18
  rx1574_jump3864:
    jump $I19
  rx1574_done3861:
    rx1574_cur."!cursor_fail"()
    .return (rx1574_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_208_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1517
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1578_start
    .local string rx1578_tgt
    .local int rx1578_pos
    .local int rx1578_off
    .local int rx1578_eos
    .local int rx1578_rep
    .local pmc rx1578_cur
    .local pmc rx1578_curclass
    .local pmc rx1578_bstack
    .local pmc rx1578_cstack
    rx1578_start = self."!cursor_start_all"()
    set rx1578_cur, rx1578_start[0]
    set rx1578_tgt, rx1578_start[1]
    set rx1578_pos, rx1578_start[2]
    set rx1578_curclass, rx1578_start[3]
    set rx1578_bstack, rx1578_start[4]
    set $I19, rx1578_start[5]
    store_lex unicode:"$\x{a2}", rx1578_cur
    length rx1578_eos, rx1578_tgt
    eq $I19, 1, rx1578_restart3875
    gt rx1578_pos, rx1578_eos, rx1578_fail3876
    repr_get_attr_int $I11, self, rx1578_curclass, "$!from"
    ne $I11, -1, rxscan1579_done3882
    goto rxscan1579_scan3881
  rxscan1579_loop3880:
    inc rx1578_pos
    gt rx1578_pos, rx1578_eos, rx1578_fail3876
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!from", rx1578_pos
  rxscan1579_scan3881:
    nqp_rxmark rx1578_bstack, rxscan1579_loop3880, rx1578_pos, 0
  rxscan1579_done3882:
    nqp_rxmark rx1578_bstack, rxcap1580_fail3884, rx1578_pos, 0
    add $I11, rx1578_pos, 2
    gt $I11, rx1578_eos, rx1578_fail3876
    substr $S10, rx1578_tgt, rx1578_pos, 2
    ne $S10, ucs4:"ne", rx1578_fail3876
    add rx1578_pos, 2
    nqp_rxpeek $I19, rx1578_bstack, rxcap1580_fail3884
    inc $I19
    set $I11, rx1578_bstack[$I19]
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!pos", rx1578_pos
    $P11 = rx1578_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1578_pos)
    rx1578_cstack = rx1578_cur."!cursor_capture"($P11, "sym")
    goto rxcap1580_done3883
  rxcap1580_fail3884:
    goto rx1578_fail3876
  rxcap1580_done3883:
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!pos", rx1578_pos
    $P11 = rx1578_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1578_curclass, "$!pos"
    lt $I11, 0, rx1578_fail3876
    nqp_rxmark rx1578_bstack, rxsubrule1581_pass3885, -1, 0
  rxsubrule1581_pass3885:
    rx1578_cstack = rx1578_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1578_pos, $P11, rx1578_curclass, "$!pos"
    rx1578_cur."!cursor_pass"(rx1578_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1578_cur)
  rx1578_restart3875:
    repr_get_attr_obj rx1578_cstack, rx1578_cur, rx1578_curclass, "$!cstack"
  rx1578_fail3876:
    unless rx1578_bstack, rx1578_done3874
    pop $I19, rx1578_bstack
    if_null rx1578_cstack, rx1578_cstack_done3879
    unless rx1578_cstack, rx1578_cstack_done3879
    dec $I19
    set $P11, rx1578_cstack[$I19]
  rx1578_cstack_done3879:
    pop rx1578_rep, rx1578_bstack
    pop rx1578_pos, rx1578_bstack
    pop $I19, rx1578_bstack
    lt rx1578_pos, -1, rx1578_done3874
    lt rx1578_pos, 0, rx1578_fail3876
    eq $I19, 0, rx1578_fail3876
    nqp_islist $I20, rx1578_cstack
    unless $I20, rx1578_jump3877
    elements $I18, rx1578_bstack
    le $I18, 0, rx1578_cut3878
    dec $I18
    set $I18, rx1578_bstack[$I18]
  rx1578_cut3878:
    assign rx1578_cstack, $I18
  rx1578_jump3877:
    jump $I19
  rx1578_done3874:
    rx1578_cur."!cursor_fail"()
    .return (rx1578_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_209_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1518
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1582_start
    .local string rx1582_tgt
    .local int rx1582_pos
    .local int rx1582_off
    .local int rx1582_eos
    .local int rx1582_rep
    .local pmc rx1582_cur
    .local pmc rx1582_curclass
    .local pmc rx1582_bstack
    .local pmc rx1582_cstack
    rx1582_start = self."!cursor_start_all"()
    set rx1582_cur, rx1582_start[0]
    set rx1582_tgt, rx1582_start[1]
    set rx1582_pos, rx1582_start[2]
    set rx1582_curclass, rx1582_start[3]
    set rx1582_bstack, rx1582_start[4]
    set $I19, rx1582_start[5]
    store_lex unicode:"$\x{a2}", rx1582_cur
    length rx1582_eos, rx1582_tgt
    eq $I19, 1, rx1582_restart3888
    gt rx1582_pos, rx1582_eos, rx1582_fail3889
    repr_get_attr_int $I11, self, rx1582_curclass, "$!from"
    ne $I11, -1, rxscan1583_done3895
    goto rxscan1583_scan3894
  rxscan1583_loop3893:
    inc rx1582_pos
    gt rx1582_pos, rx1582_eos, rx1582_fail3889
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!from", rx1582_pos
  rxscan1583_scan3894:
    nqp_rxmark rx1582_bstack, rxscan1583_loop3893, rx1582_pos, 0
  rxscan1583_done3895:
    nqp_rxmark rx1582_bstack, rxcap1584_fail3897, rx1582_pos, 0
    add $I11, rx1582_pos, 2
    gt $I11, rx1582_eos, rx1582_fail3889
    substr $S10, rx1582_tgt, rx1582_pos, 2
    ne $S10, ucs4:"le", rx1582_fail3889
    add rx1582_pos, 2
    nqp_rxpeek $I19, rx1582_bstack, rxcap1584_fail3897
    inc $I19
    set $I11, rx1582_bstack[$I19]
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!pos", rx1582_pos
    $P11 = rx1582_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1582_pos)
    rx1582_cstack = rx1582_cur."!cursor_capture"($P11, "sym")
    goto rxcap1584_done3896
  rxcap1584_fail3897:
    goto rx1582_fail3889
  rxcap1584_done3896:
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!pos", rx1582_pos
    $P11 = rx1582_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1582_curclass, "$!pos"
    lt $I11, 0, rx1582_fail3889
    nqp_rxmark rx1582_bstack, rxsubrule1585_pass3898, -1, 0
  rxsubrule1585_pass3898:
    rx1582_cstack = rx1582_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1582_pos, $P11, rx1582_curclass, "$!pos"
    rx1582_cur."!cursor_pass"(rx1582_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1582_cur)
  rx1582_restart3888:
    repr_get_attr_obj rx1582_cstack, rx1582_cur, rx1582_curclass, "$!cstack"
  rx1582_fail3889:
    unless rx1582_bstack, rx1582_done3887
    pop $I19, rx1582_bstack
    if_null rx1582_cstack, rx1582_cstack_done3892
    unless rx1582_cstack, rx1582_cstack_done3892
    dec $I19
    set $P11, rx1582_cstack[$I19]
  rx1582_cstack_done3892:
    pop rx1582_rep, rx1582_bstack
    pop rx1582_pos, rx1582_bstack
    pop $I19, rx1582_bstack
    lt rx1582_pos, -1, rx1582_done3887
    lt rx1582_pos, 0, rx1582_fail3889
    eq $I19, 0, rx1582_fail3889
    nqp_islist $I20, rx1582_cstack
    unless $I20, rx1582_jump3890
    elements $I18, rx1582_bstack
    le $I18, 0, rx1582_cut3891
    dec $I18
    set $I18, rx1582_bstack[$I18]
  rx1582_cut3891:
    assign rx1582_cstack, $I18
  rx1582_jump3890:
    jump $I19
  rx1582_done3887:
    rx1582_cur."!cursor_fail"()
    .return (rx1582_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_210_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1519
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1586_start
    .local string rx1586_tgt
    .local int rx1586_pos
    .local int rx1586_off
    .local int rx1586_eos
    .local int rx1586_rep
    .local pmc rx1586_cur
    .local pmc rx1586_curclass
    .local pmc rx1586_bstack
    .local pmc rx1586_cstack
    rx1586_start = self."!cursor_start_all"()
    set rx1586_cur, rx1586_start[0]
    set rx1586_tgt, rx1586_start[1]
    set rx1586_pos, rx1586_start[2]
    set rx1586_curclass, rx1586_start[3]
    set rx1586_bstack, rx1586_start[4]
    set $I19, rx1586_start[5]
    store_lex unicode:"$\x{a2}", rx1586_cur
    length rx1586_eos, rx1586_tgt
    eq $I19, 1, rx1586_restart3901
    gt rx1586_pos, rx1586_eos, rx1586_fail3902
    repr_get_attr_int $I11, self, rx1586_curclass, "$!from"
    ne $I11, -1, rxscan1587_done3908
    goto rxscan1587_scan3907
  rxscan1587_loop3906:
    inc rx1586_pos
    gt rx1586_pos, rx1586_eos, rx1586_fail3902
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!from", rx1586_pos
  rxscan1587_scan3907:
    nqp_rxmark rx1586_bstack, rxscan1587_loop3906, rx1586_pos, 0
  rxscan1587_done3908:
    nqp_rxmark rx1586_bstack, rxcap1588_fail3910, rx1586_pos, 0
    add $I11, rx1586_pos, 2
    gt $I11, rx1586_eos, rx1586_fail3902
    substr $S10, rx1586_tgt, rx1586_pos, 2
    ne $S10, ucs4:"ge", rx1586_fail3902
    add rx1586_pos, 2
    nqp_rxpeek $I19, rx1586_bstack, rxcap1588_fail3910
    inc $I19
    set $I11, rx1586_bstack[$I19]
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1586_pos)
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "sym")
    goto rxcap1588_done3909
  rxcap1588_fail3910:
    goto rx1586_fail3902
  rxcap1588_done3909:
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1586_curclass, "$!pos"
    lt $I11, 0, rx1586_fail3902
    nqp_rxmark rx1586_bstack, rxsubrule1589_pass3911, -1, 0
  rxsubrule1589_pass3911:
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1586_pos, $P11, rx1586_curclass, "$!pos"
    rx1586_cur."!cursor_pass"(rx1586_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1586_cur)
  rx1586_restart3901:
    repr_get_attr_obj rx1586_cstack, rx1586_cur, rx1586_curclass, "$!cstack"
  rx1586_fail3902:
    unless rx1586_bstack, rx1586_done3900
    pop $I19, rx1586_bstack
    if_null rx1586_cstack, rx1586_cstack_done3905
    unless rx1586_cstack, rx1586_cstack_done3905
    dec $I19
    set $P11, rx1586_cstack[$I19]
  rx1586_cstack_done3905:
    pop rx1586_rep, rx1586_bstack
    pop rx1586_pos, rx1586_bstack
    pop $I19, rx1586_bstack
    lt rx1586_pos, -1, rx1586_done3900
    lt rx1586_pos, 0, rx1586_fail3902
    eq $I19, 0, rx1586_fail3902
    nqp_islist $I20, rx1586_cstack
    unless $I20, rx1586_jump3903
    elements $I18, rx1586_bstack
    le $I18, 0, rx1586_cut3904
    dec $I18
    set $I18, rx1586_bstack[$I18]
  rx1586_cut3904:
    assign rx1586_cstack, $I18
  rx1586_jump3903:
    jump $I19
  rx1586_done3900:
    rx1586_cur."!cursor_fail"()
    .return (rx1586_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_211_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1520
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1590_start
    .local string rx1590_tgt
    .local int rx1590_pos
    .local int rx1590_off
    .local int rx1590_eos
    .local int rx1590_rep
    .local pmc rx1590_cur
    .local pmc rx1590_curclass
    .local pmc rx1590_bstack
    .local pmc rx1590_cstack
    rx1590_start = self."!cursor_start_all"()
    set rx1590_cur, rx1590_start[0]
    set rx1590_tgt, rx1590_start[1]
    set rx1590_pos, rx1590_start[2]
    set rx1590_curclass, rx1590_start[3]
    set rx1590_bstack, rx1590_start[4]
    set $I19, rx1590_start[5]
    store_lex unicode:"$\x{a2}", rx1590_cur
    length rx1590_eos, rx1590_tgt
    eq $I19, 1, rx1590_restart3914
    gt rx1590_pos, rx1590_eos, rx1590_fail3915
    repr_get_attr_int $I11, self, rx1590_curclass, "$!from"
    ne $I11, -1, rxscan1591_done3921
    goto rxscan1591_scan3920
  rxscan1591_loop3919:
    inc rx1590_pos
    gt rx1590_pos, rx1590_eos, rx1590_fail3915
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!from", rx1590_pos
  rxscan1591_scan3920:
    nqp_rxmark rx1590_bstack, rxscan1591_loop3919, rx1590_pos, 0
  rxscan1591_done3921:
    nqp_rxmark rx1590_bstack, rxcap1592_fail3923, rx1590_pos, 0
    add $I11, rx1590_pos, 2
    gt $I11, rx1590_eos, rx1590_fail3915
    substr $S10, rx1590_tgt, rx1590_pos, 2
    ne $S10, ucs4:"lt", rx1590_fail3915
    add rx1590_pos, 2
    nqp_rxpeek $I19, rx1590_bstack, rxcap1592_fail3923
    inc $I19
    set $I11, rx1590_bstack[$I19]
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1590_pos)
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "sym")
    goto rxcap1592_done3922
  rxcap1592_fail3923:
    goto rx1590_fail3915
  rxcap1592_done3922:
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1590_curclass, "$!pos"
    lt $I11, 0, rx1590_fail3915
    nqp_rxmark rx1590_bstack, rxsubrule1593_pass3924, -1, 0
  rxsubrule1593_pass3924:
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1590_pos, $P11, rx1590_curclass, "$!pos"
    rx1590_cur."!cursor_pass"(rx1590_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1590_cur)
  rx1590_restart3914:
    repr_get_attr_obj rx1590_cstack, rx1590_cur, rx1590_curclass, "$!cstack"
  rx1590_fail3915:
    unless rx1590_bstack, rx1590_done3913
    pop $I19, rx1590_bstack
    if_null rx1590_cstack, rx1590_cstack_done3918
    unless rx1590_cstack, rx1590_cstack_done3918
    dec $I19
    set $P11, rx1590_cstack[$I19]
  rx1590_cstack_done3918:
    pop rx1590_rep, rx1590_bstack
    pop rx1590_pos, rx1590_bstack
    pop $I19, rx1590_bstack
    lt rx1590_pos, -1, rx1590_done3913
    lt rx1590_pos, 0, rx1590_fail3915
    eq $I19, 0, rx1590_fail3915
    nqp_islist $I20, rx1590_cstack
    unless $I20, rx1590_jump3916
    elements $I18, rx1590_bstack
    le $I18, 0, rx1590_cut3917
    dec $I18
    set $I18, rx1590_bstack[$I18]
  rx1590_cut3917:
    assign rx1590_cstack, $I18
  rx1590_jump3916:
    jump $I19
  rx1590_done3913:
    rx1590_cur."!cursor_fail"()
    .return (rx1590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_212_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1521
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1594_start
    .local string rx1594_tgt
    .local int rx1594_pos
    .local int rx1594_off
    .local int rx1594_eos
    .local int rx1594_rep
    .local pmc rx1594_cur
    .local pmc rx1594_curclass
    .local pmc rx1594_bstack
    .local pmc rx1594_cstack
    rx1594_start = self."!cursor_start_all"()
    set rx1594_cur, rx1594_start[0]
    set rx1594_tgt, rx1594_start[1]
    set rx1594_pos, rx1594_start[2]
    set rx1594_curclass, rx1594_start[3]
    set rx1594_bstack, rx1594_start[4]
    set $I19, rx1594_start[5]
    store_lex unicode:"$\x{a2}", rx1594_cur
    length rx1594_eos, rx1594_tgt
    eq $I19, 1, rx1594_restart3927
    gt rx1594_pos, rx1594_eos, rx1594_fail3928
    repr_get_attr_int $I11, self, rx1594_curclass, "$!from"
    ne $I11, -1, rxscan1595_done3934
    goto rxscan1595_scan3933
  rxscan1595_loop3932:
    inc rx1594_pos
    gt rx1594_pos, rx1594_eos, rx1594_fail3928
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!from", rx1594_pos
  rxscan1595_scan3933:
    nqp_rxmark rx1594_bstack, rxscan1595_loop3932, rx1594_pos, 0
  rxscan1595_done3934:
    nqp_rxmark rx1594_bstack, rxcap1596_fail3936, rx1594_pos, 0
    add $I11, rx1594_pos, 2
    gt $I11, rx1594_eos, rx1594_fail3928
    substr $S10, rx1594_tgt, rx1594_pos, 2
    ne $S10, ucs4:"gt", rx1594_fail3928
    add rx1594_pos, 2
    nqp_rxpeek $I19, rx1594_bstack, rxcap1596_fail3936
    inc $I19
    set $I11, rx1594_bstack[$I19]
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1594_pos)
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "sym")
    goto rxcap1596_done3935
  rxcap1596_fail3936:
    goto rx1594_fail3928
  rxcap1596_done3935:
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1594_curclass, "$!pos"
    lt $I11, 0, rx1594_fail3928
    nqp_rxmark rx1594_bstack, rxsubrule1597_pass3937, -1, 0
  rxsubrule1597_pass3937:
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1594_pos, $P11, rx1594_curclass, "$!pos"
    rx1594_cur."!cursor_pass"(rx1594_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1594_cur)
  rx1594_restart3927:
    repr_get_attr_obj rx1594_cstack, rx1594_cur, rx1594_curclass, "$!cstack"
  rx1594_fail3928:
    unless rx1594_bstack, rx1594_done3926
    pop $I19, rx1594_bstack
    if_null rx1594_cstack, rx1594_cstack_done3931
    unless rx1594_cstack, rx1594_cstack_done3931
    dec $I19
    set $P11, rx1594_cstack[$I19]
  rx1594_cstack_done3931:
    pop rx1594_rep, rx1594_bstack
    pop rx1594_pos, rx1594_bstack
    pop $I19, rx1594_bstack
    lt rx1594_pos, -1, rx1594_done3926
    lt rx1594_pos, 0, rx1594_fail3928
    eq $I19, 0, rx1594_fail3928
    nqp_islist $I20, rx1594_cstack
    unless $I20, rx1594_jump3929
    elements $I18, rx1594_bstack
    le $I18, 0, rx1594_cut3930
    dec $I18
    set $I18, rx1594_bstack[$I18]
  rx1594_cut3930:
    assign rx1594_cstack, $I18
  rx1594_jump3929:
    jump $I19
  rx1594_done3926:
    rx1594_cur."!cursor_fail"()
    .return (rx1594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_213_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1522
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1598_start
    .local string rx1598_tgt
    .local int rx1598_pos
    .local int rx1598_off
    .local int rx1598_eos
    .local int rx1598_rep
    .local pmc rx1598_cur
    .local pmc rx1598_curclass
    .local pmc rx1598_bstack
    .local pmc rx1598_cstack
    rx1598_start = self."!cursor_start_all"()
    set rx1598_cur, rx1598_start[0]
    set rx1598_tgt, rx1598_start[1]
    set rx1598_pos, rx1598_start[2]
    set rx1598_curclass, rx1598_start[3]
    set rx1598_bstack, rx1598_start[4]
    set $I19, rx1598_start[5]
    store_lex unicode:"$\x{a2}", rx1598_cur
    length rx1598_eos, rx1598_tgt
    eq $I19, 1, rx1598_restart3940
    gt rx1598_pos, rx1598_eos, rx1598_fail3941
    repr_get_attr_int $I11, self, rx1598_curclass, "$!from"
    ne $I11, -1, rxscan1599_done3947
    goto rxscan1599_scan3946
  rxscan1599_loop3945:
    inc rx1598_pos
    gt rx1598_pos, rx1598_eos, rx1598_fail3941
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!from", rx1598_pos
  rxscan1599_scan3946:
    nqp_rxmark rx1598_bstack, rxscan1599_loop3945, rx1598_pos, 0
  rxscan1599_done3947:
    nqp_rxmark rx1598_bstack, rxcap1600_fail3949, rx1598_pos, 0
    add $I11, rx1598_pos, 3
    gt $I11, rx1598_eos, rx1598_fail3941
    substr $S10, rx1598_tgt, rx1598_pos, 3
    ne $S10, ucs4:"=:=", rx1598_fail3941
    add rx1598_pos, 3
    nqp_rxpeek $I19, rx1598_bstack, rxcap1600_fail3949
    inc $I19
    set $I11, rx1598_bstack[$I19]
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1598_pos)
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "sym")
    goto rxcap1600_done3948
  rxcap1600_fail3949:
    goto rx1598_fail3941
  rxcap1600_done3948:
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1598_curclass, "$!pos"
    lt $I11, 0, rx1598_fail3941
    nqp_rxmark rx1598_bstack, rxsubrule1601_pass3950, -1, 0
  rxsubrule1601_pass3950:
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1598_pos, $P11, rx1598_curclass, "$!pos"
    rx1598_cur."!cursor_pass"(rx1598_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1598_cur)
  rx1598_restart3940:
    repr_get_attr_obj rx1598_cstack, rx1598_cur, rx1598_curclass, "$!cstack"
  rx1598_fail3941:
    unless rx1598_bstack, rx1598_done3939
    pop $I19, rx1598_bstack
    if_null rx1598_cstack, rx1598_cstack_done3944
    unless rx1598_cstack, rx1598_cstack_done3944
    dec $I19
    set $P11, rx1598_cstack[$I19]
  rx1598_cstack_done3944:
    pop rx1598_rep, rx1598_bstack
    pop rx1598_pos, rx1598_bstack
    pop $I19, rx1598_bstack
    lt rx1598_pos, -1, rx1598_done3939
    lt rx1598_pos, 0, rx1598_fail3941
    eq $I19, 0, rx1598_fail3941
    nqp_islist $I20, rx1598_cstack
    unless $I20, rx1598_jump3942
    elements $I18, rx1598_bstack
    le $I18, 0, rx1598_cut3943
    dec $I18
    set $I18, rx1598_bstack[$I18]
  rx1598_cut3943:
    assign rx1598_cstack, $I18
  rx1598_jump3942:
    jump $I19
  rx1598_done3939:
    rx1598_cur."!cursor_fail"()
    .return (rx1598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_214_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1523
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1602_start
    .local string rx1602_tgt
    .local int rx1602_pos
    .local int rx1602_off
    .local int rx1602_eos
    .local int rx1602_rep
    .local pmc rx1602_cur
    .local pmc rx1602_curclass
    .local pmc rx1602_bstack
    .local pmc rx1602_cstack
    rx1602_start = self."!cursor_start_all"()
    set rx1602_cur, rx1602_start[0]
    set rx1602_tgt, rx1602_start[1]
    set rx1602_pos, rx1602_start[2]
    set rx1602_curclass, rx1602_start[3]
    set rx1602_bstack, rx1602_start[4]
    set $I19, rx1602_start[5]
    store_lex unicode:"$\x{a2}", rx1602_cur
    length rx1602_eos, rx1602_tgt
    eq $I19, 1, rx1602_restart3953
    gt rx1602_pos, rx1602_eos, rx1602_fail3954
    repr_get_attr_int $I11, self, rx1602_curclass, "$!from"
    ne $I11, -1, rxscan1603_done3960
    goto rxscan1603_scan3959
  rxscan1603_loop3958:
    inc rx1602_pos
    gt rx1602_pos, rx1602_eos, rx1602_fail3954
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!from", rx1602_pos
  rxscan1603_scan3959:
    nqp_rxmark rx1602_bstack, rxscan1603_loop3958, rx1602_pos, 0
  rxscan1603_done3960:
    nqp_rxmark rx1602_bstack, rxcap1604_fail3962, rx1602_pos, 0
    add $I11, rx1602_pos, 2
    gt $I11, rx1602_eos, rx1602_fail3954
    substr $S10, rx1602_tgt, rx1602_pos, 2
    ne $S10, ucs4:"~~", rx1602_fail3954
    add rx1602_pos, 2
    nqp_rxpeek $I19, rx1602_bstack, rxcap1604_fail3962
    inc $I19
    set $I11, rx1602_bstack[$I19]
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1602_pos)
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "sym")
    goto rxcap1604_done3961
  rxcap1604_fail3962:
    goto rx1602_fail3954
  rxcap1604_done3961:
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1602_curclass, "$!pos"
    lt $I11, 0, rx1602_fail3954
    nqp_rxmark rx1602_bstack, rxsubrule1605_pass3963, -1, 0
  rxsubrule1605_pass3963:
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1602_pos, $P11, rx1602_curclass, "$!pos"
    rx1602_cur."!cursor_pass"(rx1602_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1602_cur)
  rx1602_restart3953:
    repr_get_attr_obj rx1602_cstack, rx1602_cur, rx1602_curclass, "$!cstack"
  rx1602_fail3954:
    unless rx1602_bstack, rx1602_done3952
    pop $I19, rx1602_bstack
    if_null rx1602_cstack, rx1602_cstack_done3957
    unless rx1602_cstack, rx1602_cstack_done3957
    dec $I19
    set $P11, rx1602_cstack[$I19]
  rx1602_cstack_done3957:
    pop rx1602_rep, rx1602_bstack
    pop rx1602_pos, rx1602_bstack
    pop $I19, rx1602_bstack
    lt rx1602_pos, -1, rx1602_done3952
    lt rx1602_pos, 0, rx1602_fail3954
    eq $I19, 0, rx1602_fail3954
    nqp_islist $I20, rx1602_cstack
    unless $I20, rx1602_jump3955
    elements $I18, rx1602_bstack
    le $I18, 0, rx1602_cut3956
    dec $I18
    set $I18, rx1602_bstack[$I18]
  rx1602_cut3956:
    assign rx1602_cstack, $I18
  rx1602_jump3955:
    jump $I19
  rx1602_done3952:
    rx1602_cur."!cursor_fail"()
    .return (rx1602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_215_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1525
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1606_start
    .local string rx1606_tgt
    .local int rx1606_pos
    .local int rx1606_off
    .local int rx1606_eos
    .local int rx1606_rep
    .local pmc rx1606_cur
    .local pmc rx1606_curclass
    .local pmc rx1606_bstack
    .local pmc rx1606_cstack
    rx1606_start = self."!cursor_start_all"()
    set rx1606_cur, rx1606_start[0]
    set rx1606_tgt, rx1606_start[1]
    set rx1606_pos, rx1606_start[2]
    set rx1606_curclass, rx1606_start[3]
    set rx1606_bstack, rx1606_start[4]
    set $I19, rx1606_start[5]
    store_lex unicode:"$\x{a2}", rx1606_cur
    length rx1606_eos, rx1606_tgt
    eq $I19, 1, rx1606_restart3966
    gt rx1606_pos, rx1606_eos, rx1606_fail3967
    repr_get_attr_int $I11, self, rx1606_curclass, "$!from"
    ne $I11, -1, rxscan1607_done3973
    goto rxscan1607_scan3972
  rxscan1607_loop3971:
    inc rx1606_pos
    gt rx1606_pos, rx1606_eos, rx1606_fail3967
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!from", rx1606_pos
  rxscan1607_scan3972:
    nqp_rxmark rx1606_bstack, rxscan1607_loop3971, rx1606_pos, 0
  rxscan1607_done3973:
    nqp_rxmark rx1606_bstack, rxcap1608_fail3975, rx1606_pos, 0
    add $I11, rx1606_pos, 2
    gt $I11, rx1606_eos, rx1606_fail3967
    substr $S10, rx1606_tgt, rx1606_pos, 2
    ne $S10, ucs4:"&&", rx1606_fail3967
    add rx1606_pos, 2
    nqp_rxpeek $I19, rx1606_bstack, rxcap1608_fail3975
    inc $I19
    set $I11, rx1606_bstack[$I19]
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1606_pos)
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "sym")
    goto rxcap1608_done3974
  rxcap1608_fail3975:
    goto rx1606_fail3967
  rxcap1608_done3974:
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1606_curclass, "$!pos"
    lt $I11, 0, rx1606_fail3967
    nqp_rxmark rx1606_bstack, rxsubrule1609_pass3976, -1, 0
  rxsubrule1609_pass3976:
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1606_pos, $P11, rx1606_curclass, "$!pos"
    rx1606_cur."!cursor_pass"(rx1606_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1606_cur)
  rx1606_restart3966:
    repr_get_attr_obj rx1606_cstack, rx1606_cur, rx1606_curclass, "$!cstack"
  rx1606_fail3967:
    unless rx1606_bstack, rx1606_done3965
    pop $I19, rx1606_bstack
    if_null rx1606_cstack, rx1606_cstack_done3970
    unless rx1606_cstack, rx1606_cstack_done3970
    dec $I19
    set $P11, rx1606_cstack[$I19]
  rx1606_cstack_done3970:
    pop rx1606_rep, rx1606_bstack
    pop rx1606_pos, rx1606_bstack
    pop $I19, rx1606_bstack
    lt rx1606_pos, -1, rx1606_done3965
    lt rx1606_pos, 0, rx1606_fail3967
    eq $I19, 0, rx1606_fail3967
    nqp_islist $I20, rx1606_cstack
    unless $I20, rx1606_jump3968
    elements $I18, rx1606_bstack
    le $I18, 0, rx1606_cut3969
    dec $I18
    set $I18, rx1606_bstack[$I18]
  rx1606_cut3969:
    assign rx1606_cstack, $I18
  rx1606_jump3968:
    jump $I19
  rx1606_done3965:
    rx1606_cur."!cursor_fail"()
    .return (rx1606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_216_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1527
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1610_start
    .local string rx1610_tgt
    .local int rx1610_pos
    .local int rx1610_off
    .local int rx1610_eos
    .local int rx1610_rep
    .local pmc rx1610_cur
    .local pmc rx1610_curclass
    .local pmc rx1610_bstack
    .local pmc rx1610_cstack
    rx1610_start = self."!cursor_start_all"()
    set rx1610_cur, rx1610_start[0]
    set rx1610_tgt, rx1610_start[1]
    set rx1610_pos, rx1610_start[2]
    set rx1610_curclass, rx1610_start[3]
    set rx1610_bstack, rx1610_start[4]
    set $I19, rx1610_start[5]
    store_lex unicode:"$\x{a2}", rx1610_cur
    length rx1610_eos, rx1610_tgt
    eq $I19, 1, rx1610_restart3979
    gt rx1610_pos, rx1610_eos, rx1610_fail3980
    repr_get_attr_int $I11, self, rx1610_curclass, "$!from"
    ne $I11, -1, rxscan1611_done3986
    goto rxscan1611_scan3985
  rxscan1611_loop3984:
    inc rx1610_pos
    gt rx1610_pos, rx1610_eos, rx1610_fail3980
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!from", rx1610_pos
  rxscan1611_scan3985:
    nqp_rxmark rx1610_bstack, rxscan1611_loop3984, rx1610_pos, 0
  rxscan1611_done3986:
    nqp_rxmark rx1610_bstack, rxcap1612_fail3988, rx1610_pos, 0
    add $I11, rx1610_pos, 2
    gt $I11, rx1610_eos, rx1610_fail3980
    substr $S10, rx1610_tgt, rx1610_pos, 2
    ne $S10, ucs4:"||", rx1610_fail3980
    add rx1610_pos, 2
    nqp_rxpeek $I19, rx1610_bstack, rxcap1612_fail3988
    inc $I19
    set $I11, rx1610_bstack[$I19]
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1610_pos)
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "sym")
    goto rxcap1612_done3987
  rxcap1612_fail3988:
    goto rx1610_fail3980
  rxcap1612_done3987:
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1610_curclass, "$!pos"
    lt $I11, 0, rx1610_fail3980
    nqp_rxmark rx1610_bstack, rxsubrule1613_pass3989, -1, 0
  rxsubrule1613_pass3989:
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1610_pos, $P11, rx1610_curclass, "$!pos"
    rx1610_cur."!cursor_pass"(rx1610_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1610_cur)
  rx1610_restart3979:
    repr_get_attr_obj rx1610_cstack, rx1610_cur, rx1610_curclass, "$!cstack"
  rx1610_fail3980:
    unless rx1610_bstack, rx1610_done3978
    pop $I19, rx1610_bstack
    if_null rx1610_cstack, rx1610_cstack_done3983
    unless rx1610_cstack, rx1610_cstack_done3983
    dec $I19
    set $P11, rx1610_cstack[$I19]
  rx1610_cstack_done3983:
    pop rx1610_rep, rx1610_bstack
    pop rx1610_pos, rx1610_bstack
    pop $I19, rx1610_bstack
    lt rx1610_pos, -1, rx1610_done3978
    lt rx1610_pos, 0, rx1610_fail3980
    eq $I19, 0, rx1610_fail3980
    nqp_islist $I20, rx1610_cstack
    unless $I20, rx1610_jump3981
    elements $I18, rx1610_bstack
    le $I18, 0, rx1610_cut3982
    dec $I18
    set $I18, rx1610_bstack[$I18]
  rx1610_cut3982:
    assign rx1610_cstack, $I18
  rx1610_jump3981:
    jump $I19
  rx1610_done3978:
    rx1610_cur."!cursor_fail"()
    .return (rx1610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_217_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1528
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1614_start
    .local string rx1614_tgt
    .local int rx1614_pos
    .local int rx1614_off
    .local int rx1614_eos
    .local int rx1614_rep
    .local pmc rx1614_cur
    .local pmc rx1614_curclass
    .local pmc rx1614_bstack
    .local pmc rx1614_cstack
    rx1614_start = self."!cursor_start_all"()
    set rx1614_cur, rx1614_start[0]
    set rx1614_tgt, rx1614_start[1]
    set rx1614_pos, rx1614_start[2]
    set rx1614_curclass, rx1614_start[3]
    set rx1614_bstack, rx1614_start[4]
    set $I19, rx1614_start[5]
    store_lex unicode:"$\x{a2}", rx1614_cur
    length rx1614_eos, rx1614_tgt
    eq $I19, 1, rx1614_restart3992
    gt rx1614_pos, rx1614_eos, rx1614_fail3993
    repr_get_attr_int $I11, self, rx1614_curclass, "$!from"
    ne $I11, -1, rxscan1615_done3999
    goto rxscan1615_scan3998
  rxscan1615_loop3997:
    inc rx1614_pos
    gt rx1614_pos, rx1614_eos, rx1614_fail3993
    repr_bind_attr_int rx1614_cur, rx1614_curclass, "$!from", rx1614_pos
  rxscan1615_scan3998:
    nqp_rxmark rx1614_bstack, rxscan1615_loop3997, rx1614_pos, 0
  rxscan1615_done3999:
    nqp_rxmark rx1614_bstack, rxcap1616_fail4001, rx1614_pos, 0
    add $I11, rx1614_pos, 2
    gt $I11, rx1614_eos, rx1614_fail3993
    substr $S10, rx1614_tgt, rx1614_pos, 2
    ne $S10, ucs4:"//", rx1614_fail3993
    add rx1614_pos, 2
    nqp_rxpeek $I19, rx1614_bstack, rxcap1616_fail4001
    inc $I19
    set $I11, rx1614_bstack[$I19]
    repr_bind_attr_int rx1614_cur, rx1614_curclass, "$!pos", rx1614_pos
    $P11 = rx1614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1614_pos)
    rx1614_cstack = rx1614_cur."!cursor_capture"($P11, "sym")
    goto rxcap1616_done4000
  rxcap1616_fail4001:
    goto rx1614_fail3993
  rxcap1616_done4000:
    repr_bind_attr_int rx1614_cur, rx1614_curclass, "$!pos", rx1614_pos
    $P11 = rx1614_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1614_curclass, "$!pos"
    lt $I11, 0, rx1614_fail3993
    nqp_rxmark rx1614_bstack, rxsubrule1617_pass4002, -1, 0
  rxsubrule1617_pass4002:
    rx1614_cstack = rx1614_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1614_pos, $P11, rx1614_curclass, "$!pos"
    rx1614_cur."!cursor_pass"(rx1614_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1614_cur)
  rx1614_restart3992:
    repr_get_attr_obj rx1614_cstack, rx1614_cur, rx1614_curclass, "$!cstack"
  rx1614_fail3993:
    unless rx1614_bstack, rx1614_done3991
    pop $I19, rx1614_bstack
    if_null rx1614_cstack, rx1614_cstack_done3996
    unless rx1614_cstack, rx1614_cstack_done3996
    dec $I19
    set $P11, rx1614_cstack[$I19]
  rx1614_cstack_done3996:
    pop rx1614_rep, rx1614_bstack
    pop rx1614_pos, rx1614_bstack
    pop $I19, rx1614_bstack
    lt rx1614_pos, -1, rx1614_done3991
    lt rx1614_pos, 0, rx1614_fail3993
    eq $I19, 0, rx1614_fail3993
    nqp_islist $I20, rx1614_cstack
    unless $I20, rx1614_jump3994
    elements $I18, rx1614_bstack
    le $I18, 0, rx1614_cut3995
    dec $I18
    set $I18, rx1614_bstack[$I18]
  rx1614_cut3995:
    assign rx1614_cstack, $I18
  rx1614_jump3994:
    jump $I19
  rx1614_done3991:
    rx1614_cur."!cursor_fail"()
    .return (rx1614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_218_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1530
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1618_start
    .local string rx1618_tgt
    .local int rx1618_pos
    .local int rx1618_off
    .local int rx1618_eos
    .local int rx1618_rep
    .local pmc rx1618_cur
    .local pmc rx1618_curclass
    .local pmc rx1618_bstack
    .local pmc rx1618_cstack
    rx1618_start = self."!cursor_start_all"()
    set rx1618_cur, rx1618_start[0]
    set rx1618_tgt, rx1618_start[1]
    set rx1618_pos, rx1618_start[2]
    set rx1618_curclass, rx1618_start[3]
    set rx1618_bstack, rx1618_start[4]
    set $I19, rx1618_start[5]
    store_lex unicode:"$\x{a2}", rx1618_cur
    length rx1618_eos, rx1618_tgt
    eq $I19, 1, rx1618_restart4005
    gt rx1618_pos, rx1618_eos, rx1618_fail4006
    repr_get_attr_int $I11, self, rx1618_curclass, "$!from"
    ne $I11, -1, rxscan1619_done4012
    goto rxscan1619_scan4011
  rxscan1619_loop4010:
    inc rx1618_pos
    index rx1618_pos, rx1618_tgt, ucs4:"??", rx1618_pos
    eq rx1618_pos, -1, rx1618_fail4006
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!from", rx1618_pos
  rxscan1619_scan4011:
    nqp_rxmark rx1618_bstack, rxscan1619_loop4010, rx1618_pos, 0
  rxscan1619_done4012:
    add $I11, rx1618_pos, 2
    gt $I11, rx1618_eos, rx1618_fail4006
    substr $S10, rx1618_tgt, rx1618_pos, 2
    ne $S10, ucs4:"??", rx1618_fail4006
    add rx1618_pos, 2
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1618_curclass, "$!pos"
    lt $I11, 0, rx1618_fail4006
    repr_get_attr_int rx1618_pos, $P11, rx1618_curclass, "$!pos"
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1618_curclass, "$!pos"
    lt $I11, 0, rx1618_fail4006
    nqp_rxmark rx1618_bstack, rxsubrule1621_pass4014, -1, 0
  rxsubrule1621_pass4014:
    rx1618_cstack = rx1618_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1618_pos, $P11, rx1618_curclass, "$!pos"
    add $I11, rx1618_pos, 2
    gt $I11, rx1618_eos, rx1618_fail4006
    substr $S10, rx1618_tgt, rx1618_pos, 2
    ne $S10, ucs4:"!!", rx1618_fail4006
    add rx1618_pos, 2
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1618_curclass, "$!pos"
    lt $I11, 0, rx1618_fail4006
    nqp_rxmark rx1618_bstack, rxsubrule1622_pass4015, -1, 0
  rxsubrule1622_pass4015:
    rx1618_cstack = rx1618_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1618_pos, $P11, rx1618_curclass, "$!pos"
    rx1618_cur."!cursor_pass"(rx1618_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1618_cur)
  rx1618_restart4005:
    repr_get_attr_obj rx1618_cstack, rx1618_cur, rx1618_curclass, "$!cstack"
  rx1618_fail4006:
    unless rx1618_bstack, rx1618_done4004
    pop $I19, rx1618_bstack
    if_null rx1618_cstack, rx1618_cstack_done4009
    unless rx1618_cstack, rx1618_cstack_done4009
    dec $I19
    set $P11, rx1618_cstack[$I19]
  rx1618_cstack_done4009:
    pop rx1618_rep, rx1618_bstack
    pop rx1618_pos, rx1618_bstack
    pop $I19, rx1618_bstack
    lt rx1618_pos, -1, rx1618_done4004
    lt rx1618_pos, 0, rx1618_fail4006
    eq $I19, 0, rx1618_fail4006
    nqp_islist $I20, rx1618_cstack
    unless $I20, rx1618_jump4007
    elements $I18, rx1618_bstack
    le $I18, 0, rx1618_cut4008
    dec $I18
    set $I18, rx1618_bstack[$I18]
  rx1618_cut4008:
    assign rx1618_cstack, $I18
  rx1618_jump4007:
    jump $I19
  rx1618_done4004:
    rx1618_cur."!cursor_fail"()
    .return (rx1618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_219_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1538
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1623_start
    .local string rx1623_tgt
    .local int rx1623_pos
    .local int rx1623_off
    .local int rx1623_eos
    .local int rx1623_rep
    .local pmc rx1623_cur
    .local pmc rx1623_curclass
    .local pmc rx1623_bstack
    .local pmc rx1623_cstack
    rx1623_start = self."!cursor_start_all"()
    set rx1623_cur, rx1623_start[0]
    set rx1623_tgt, rx1623_start[1]
    set rx1623_pos, rx1623_start[2]
    set rx1623_curclass, rx1623_start[3]
    set rx1623_bstack, rx1623_start[4]
    set $I19, rx1623_start[5]
    store_lex unicode:"$\x{a2}", rx1623_cur
    length rx1623_eos, rx1623_tgt
    eq $I19, 1, rx1623_restart4018
    gt rx1623_pos, rx1623_eos, rx1623_fail4019
    repr_get_attr_int $I11, self, rx1623_curclass, "$!from"
    ne $I11, -1, rxscan1624_done4025
    goto rxscan1624_scan4024
  rxscan1624_loop4023:
    inc rx1623_pos
    gt rx1623_pos, rx1623_eos, rx1623_fail4019
    repr_bind_attr_int rx1623_cur, rx1623_curclass, "$!from", rx1623_pos
  rxscan1624_scan4024:
    nqp_rxmark rx1623_bstack, rxscan1624_loop4023, rx1623_pos, 0
  rxscan1624_done4025:
    nqp_rxmark rx1623_bstack, rxcap1625_fail4027, rx1623_pos, 0
    add $I11, rx1623_pos, 1
    gt $I11, rx1623_eos, rx1623_fail4019
    substr $S10, rx1623_tgt, rx1623_pos, 1
    ne $S10, ucs4:"=", rx1623_fail4019
    add rx1623_pos, 1
    nqp_rxpeek $I19, rx1623_bstack, rxcap1625_fail4027
    inc $I19
    set $I11, rx1623_bstack[$I19]
    repr_bind_attr_int rx1623_cur, rx1623_curclass, "$!pos", rx1623_pos
    $P11 = rx1623_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1623_pos)
    rx1623_cstack = rx1623_cur."!cursor_capture"($P11, "sym")
    goto rxcap1625_done4026
  rxcap1625_fail4027:
    goto rx1623_fail4019
  rxcap1625_done4026:
    repr_bind_attr_int rx1623_cur, rx1623_curclass, "$!pos", rx1623_pos
    $P11 = rx1623_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1623_curclass, "$!pos"
    lt $I11, 0, rx1623_fail4019
    repr_get_attr_int rx1623_pos, $P11, rx1623_curclass, "$!pos"
    rx1623_cur."!cursor_pass"(rx1623_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1623_cur)
  rx1623_restart4018:
    repr_get_attr_obj rx1623_cstack, rx1623_cur, rx1623_curclass, "$!cstack"
  rx1623_fail4019:
    unless rx1623_bstack, rx1623_done4017
    pop $I19, rx1623_bstack
    if_null rx1623_cstack, rx1623_cstack_done4022
    unless rx1623_cstack, rx1623_cstack_done4022
    dec $I19
    set $P11, rx1623_cstack[$I19]
  rx1623_cstack_done4022:
    pop rx1623_rep, rx1623_bstack
    pop rx1623_pos, rx1623_bstack
    pop $I19, rx1623_bstack
    lt rx1623_pos, -1, rx1623_done4017
    lt rx1623_pos, 0, rx1623_fail4019
    eq $I19, 0, rx1623_fail4019
    nqp_islist $I20, rx1623_cstack
    unless $I20, rx1623_jump4020
    elements $I18, rx1623_bstack
    le $I18, 0, rx1623_cut4021
    dec $I18
    set $I18, rx1623_bstack[$I18]
  rx1623_cut4021:
    assign rx1623_cstack, $I18
  rx1623_jump4020:
    jump $I19
  rx1623_done4017:
    rx1623_cur."!cursor_fail"()
    .return (rx1623_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_220_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1541
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1627_start
    .local string rx1627_tgt
    .local int rx1627_pos
    .local int rx1627_off
    .local int rx1627_eos
    .local int rx1627_rep
    .local pmc rx1627_cur
    .local pmc rx1627_curclass
    .local pmc rx1627_bstack
    .local pmc rx1627_cstack
    rx1627_start = self."!cursor_start_all"()
    set rx1627_cur, rx1627_start[0]
    set rx1627_tgt, rx1627_start[1]
    set rx1627_pos, rx1627_start[2]
    set rx1627_curclass, rx1627_start[3]
    set rx1627_bstack, rx1627_start[4]
    set $I19, rx1627_start[5]
    store_lex unicode:"$\x{a2}", rx1627_cur
    length rx1627_eos, rx1627_tgt
    eq $I19, 1, rx1627_restart4031
    gt rx1627_pos, rx1627_eos, rx1627_fail4032
    repr_get_attr_int $I11, self, rx1627_curclass, "$!from"
    ne $I11, -1, rxscan1628_done4038
    goto rxscan1628_scan4037
  rxscan1628_loop4036:
    inc rx1627_pos
    gt rx1627_pos, rx1627_eos, rx1627_fail4032
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!from", rx1627_pos
  rxscan1628_scan4037:
    nqp_rxmark rx1627_bstack, rxscan1628_loop4036, rx1627_pos, 0
  rxscan1628_done4038:
    nqp_rxmark rx1627_bstack, rxcap1629_fail4040, rx1627_pos, 0
    add $I11, rx1627_pos, 2
    gt $I11, rx1627_eos, rx1627_fail4032
    substr $S10, rx1627_tgt, rx1627_pos, 2
    ne $S10, ucs4:":=", rx1627_fail4032
    add rx1627_pos, 2
    nqp_rxpeek $I19, rx1627_bstack, rxcap1629_fail4040
    inc $I19
    set $I11, rx1627_bstack[$I19]
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!pos", rx1627_pos
    $P11 = rx1627_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1627_pos)
    rx1627_cstack = rx1627_cur."!cursor_capture"($P11, "sym")
    goto rxcap1629_done4039
  rxcap1629_fail4040:
    goto rx1627_fail4032
  rxcap1629_done4039:
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!pos", rx1627_pos
    $P11 = rx1627_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1627_curclass, "$!pos"
    lt $I11, 0, rx1627_fail4032
    nqp_rxmark rx1627_bstack, rxsubrule1630_pass4041, -1, 0
  rxsubrule1630_pass4041:
    rx1627_cstack = rx1627_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1627_pos, $P11, rx1627_curclass, "$!pos"
    rx1627_cur."!cursor_pass"(rx1627_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1627_cur)
  rx1627_restart4031:
    repr_get_attr_obj rx1627_cstack, rx1627_cur, rx1627_curclass, "$!cstack"
  rx1627_fail4032:
    unless rx1627_bstack, rx1627_done4030
    pop $I19, rx1627_bstack
    if_null rx1627_cstack, rx1627_cstack_done4035
    unless rx1627_cstack, rx1627_cstack_done4035
    dec $I19
    set $P11, rx1627_cstack[$I19]
  rx1627_cstack_done4035:
    pop rx1627_rep, rx1627_bstack
    pop rx1627_pos, rx1627_bstack
    pop $I19, rx1627_bstack
    lt rx1627_pos, -1, rx1627_done4030
    lt rx1627_pos, 0, rx1627_fail4032
    eq $I19, 0, rx1627_fail4032
    nqp_islist $I20, rx1627_cstack
    unless $I20, rx1627_jump4033
    elements $I18, rx1627_bstack
    le $I18, 0, rx1627_cut4034
    dec $I18
    set $I18, rx1627_bstack[$I18]
  rx1627_cut4034:
    assign rx1627_cstack, $I18
  rx1627_jump4033:
    jump $I19
  rx1627_done4030:
    rx1627_cur."!cursor_fail"()
    .return (rx1627_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_221_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1542
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1631_start
    .local string rx1631_tgt
    .local int rx1631_pos
    .local int rx1631_off
    .local int rx1631_eos
    .local int rx1631_rep
    .local pmc rx1631_cur
    .local pmc rx1631_curclass
    .local pmc rx1631_bstack
    .local pmc rx1631_cstack
    rx1631_start = self."!cursor_start_all"()
    set rx1631_cur, rx1631_start[0]
    set rx1631_tgt, rx1631_start[1]
    set rx1631_pos, rx1631_start[2]
    set rx1631_curclass, rx1631_start[3]
    set rx1631_bstack, rx1631_start[4]
    set $I19, rx1631_start[5]
    store_lex unicode:"$\x{a2}", rx1631_cur
    length rx1631_eos, rx1631_tgt
    eq $I19, 1, rx1631_restart4044
    gt rx1631_pos, rx1631_eos, rx1631_fail4045
    repr_get_attr_int $I11, self, rx1631_curclass, "$!from"
    ne $I11, -1, rxscan1632_done4051
    goto rxscan1632_scan4050
  rxscan1632_loop4049:
    inc rx1631_pos
    gt rx1631_pos, rx1631_eos, rx1631_fail4045
    repr_bind_attr_int rx1631_cur, rx1631_curclass, "$!from", rx1631_pos
  rxscan1632_scan4050:
    nqp_rxmark rx1631_bstack, rxscan1632_loop4049, rx1631_pos, 0
  rxscan1632_done4051:
    nqp_rxmark rx1631_bstack, rxcap1633_fail4053, rx1631_pos, 0
    add $I11, rx1631_pos, 3
    gt $I11, rx1631_eos, rx1631_fail4045
    substr $S10, rx1631_tgt, rx1631_pos, 3
    ne $S10, ucs4:"::=", rx1631_fail4045
    add rx1631_pos, 3
    nqp_rxpeek $I19, rx1631_bstack, rxcap1633_fail4053
    inc $I19
    set $I11, rx1631_bstack[$I19]
    repr_bind_attr_int rx1631_cur, rx1631_curclass, "$!pos", rx1631_pos
    $P11 = rx1631_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1631_pos)
    rx1631_cstack = rx1631_cur."!cursor_capture"($P11, "sym")
    goto rxcap1633_done4052
  rxcap1633_fail4053:
    goto rx1631_fail4045
  rxcap1633_done4052:
    repr_bind_attr_int rx1631_cur, rx1631_curclass, "$!pos", rx1631_pos
    $P11 = rx1631_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1631_curclass, "$!pos"
    lt $I11, 0, rx1631_fail4045
    nqp_rxmark rx1631_bstack, rxsubrule1634_pass4054, -1, 0
  rxsubrule1634_pass4054:
    rx1631_cstack = rx1631_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1631_pos, $P11, rx1631_curclass, "$!pos"
    rx1631_cur."!cursor_pass"(rx1631_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1631_cur)
  rx1631_restart4044:
    repr_get_attr_obj rx1631_cstack, rx1631_cur, rx1631_curclass, "$!cstack"
  rx1631_fail4045:
    unless rx1631_bstack, rx1631_done4043
    pop $I19, rx1631_bstack
    if_null rx1631_cstack, rx1631_cstack_done4048
    unless rx1631_cstack, rx1631_cstack_done4048
    dec $I19
    set $P11, rx1631_cstack[$I19]
  rx1631_cstack_done4048:
    pop rx1631_rep, rx1631_bstack
    pop rx1631_pos, rx1631_bstack
    pop $I19, rx1631_bstack
    lt rx1631_pos, -1, rx1631_done4043
    lt rx1631_pos, 0, rx1631_fail4045
    eq $I19, 0, rx1631_fail4045
    nqp_islist $I20, rx1631_cstack
    unless $I20, rx1631_jump4046
    elements $I18, rx1631_bstack
    le $I18, 0, rx1631_cut4047
    dec $I18
    set $I18, rx1631_bstack[$I18]
  rx1631_cut4047:
    assign rx1631_cstack, $I18
  rx1631_jump4046:
    jump $I19
  rx1631_done4043:
    rx1631_cur."!cursor_fail"()
    .return (rx1631_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_222_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1544
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1635_start
    .local string rx1635_tgt
    .local int rx1635_pos
    .local int rx1635_off
    .local int rx1635_eos
    .local int rx1635_rep
    .local pmc rx1635_cur
    .local pmc rx1635_curclass
    .local pmc rx1635_bstack
    .local pmc rx1635_cstack
    rx1635_start = self."!cursor_start_all"()
    set rx1635_cur, rx1635_start[0]
    set rx1635_tgt, rx1635_start[1]
    set rx1635_pos, rx1635_start[2]
    set rx1635_curclass, rx1635_start[3]
    set rx1635_bstack, rx1635_start[4]
    set $I19, rx1635_start[5]
    store_lex unicode:"$\x{a2}", rx1635_cur
    length rx1635_eos, rx1635_tgt
    eq $I19, 1, rx1635_restart4057
    gt rx1635_pos, rx1635_eos, rx1635_fail4058
    repr_get_attr_int $I11, self, rx1635_curclass, "$!from"
    ne $I11, -1, rxscan1636_done4064
    goto rxscan1636_scan4063
  rxscan1636_loop4062:
    inc rx1635_pos
    gt rx1635_pos, rx1635_eos, rx1635_fail4058
    repr_bind_attr_int rx1635_cur, rx1635_curclass, "$!from", rx1635_pos
  rxscan1636_scan4063:
    nqp_rxmark rx1635_bstack, rxscan1636_loop4062, rx1635_pos, 0
  rxscan1636_done4064:
    nqp_rxmark rx1635_bstack, rxcap1637_fail4066, rx1635_pos, 0
    add $I11, rx1635_pos, 1
    gt $I11, rx1635_eos, rx1635_fail4058
    substr $S10, rx1635_tgt, rx1635_pos, 1
    ne $S10, ucs4:",", rx1635_fail4058
    add rx1635_pos, 1
    nqp_rxpeek $I19, rx1635_bstack, rxcap1637_fail4066
    inc $I19
    set $I11, rx1635_bstack[$I19]
    repr_bind_attr_int rx1635_cur, rx1635_curclass, "$!pos", rx1635_pos
    $P11 = rx1635_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1635_pos)
    rx1635_cstack = rx1635_cur."!cursor_capture"($P11, "sym")
    goto rxcap1637_done4065
  rxcap1637_fail4066:
    goto rx1635_fail4058
  rxcap1637_done4065:
    repr_bind_attr_int rx1635_cur, rx1635_curclass, "$!pos", rx1635_pos
    $P11 = rx1635_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1635_curclass, "$!pos"
    lt $I11, 0, rx1635_fail4058
    nqp_rxmark rx1635_bstack, rxsubrule1638_pass4067, -1, 0
  rxsubrule1638_pass4067:
    rx1635_cstack = rx1635_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1635_pos, $P11, rx1635_curclass, "$!pos"
    rx1635_cur."!cursor_pass"(rx1635_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1635_cur)
  rx1635_restart4057:
    repr_get_attr_obj rx1635_cstack, rx1635_cur, rx1635_curclass, "$!cstack"
  rx1635_fail4058:
    unless rx1635_bstack, rx1635_done4056
    pop $I19, rx1635_bstack
    if_null rx1635_cstack, rx1635_cstack_done4061
    unless rx1635_cstack, rx1635_cstack_done4061
    dec $I19
    set $P11, rx1635_cstack[$I19]
  rx1635_cstack_done4061:
    pop rx1635_rep, rx1635_bstack
    pop rx1635_pos, rx1635_bstack
    pop $I19, rx1635_bstack
    lt rx1635_pos, -1, rx1635_done4056
    lt rx1635_pos, 0, rx1635_fail4058
    eq $I19, 0, rx1635_fail4058
    nqp_islist $I20, rx1635_cstack
    unless $I20, rx1635_jump4059
    elements $I18, rx1635_bstack
    le $I18, 0, rx1635_cut4060
    dec $I18
    set $I18, rx1635_bstack[$I18]
  rx1635_cut4060:
    assign rx1635_cstack, $I18
  rx1635_jump4059:
    jump $I19
  rx1635_done4056:
    rx1635_cur."!cursor_fail"()
    .return (rx1635_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_223_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1546
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1639_start
    .local string rx1639_tgt
    .local int rx1639_pos
    .local int rx1639_off
    .local int rx1639_eos
    .local int rx1639_rep
    .local pmc rx1639_cur
    .local pmc rx1639_curclass
    .local pmc rx1639_bstack
    .local pmc rx1639_cstack
    rx1639_start = self."!cursor_start_all"()
    set rx1639_cur, rx1639_start[0]
    set rx1639_tgt, rx1639_start[1]
    set rx1639_pos, rx1639_start[2]
    set rx1639_curclass, rx1639_start[3]
    set rx1639_bstack, rx1639_start[4]
    set $I19, rx1639_start[5]
    store_lex unicode:"$\x{a2}", rx1639_cur
    length rx1639_eos, rx1639_tgt
    eq $I19, 1, rx1639_restart4070
    gt rx1639_pos, rx1639_eos, rx1639_fail4071
    repr_get_attr_int $I11, self, rx1639_curclass, "$!from"
    ne $I11, -1, rxscan1640_done4077
    goto rxscan1640_scan4076
  rxscan1640_loop4075:
    inc rx1639_pos
    gt rx1639_pos, rx1639_eos, rx1639_fail4071
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!from", rx1639_pos
  rxscan1640_scan4076:
    nqp_rxmark rx1639_bstack, rxscan1640_loop4075, rx1639_pos, 0
  rxscan1640_done4077:
    nqp_rxmark rx1639_bstack, rxcap1641_fail4079, rx1639_pos, 0
    add $I11, rx1639_pos, 4
    gt $I11, rx1639_eos, rx1639_fail4071
    substr $S10, rx1639_tgt, rx1639_pos, 4
    ne $S10, ucs4:"make", rx1639_fail4071
    add rx1639_pos, 4
    nqp_rxpeek $I19, rx1639_bstack, rxcap1641_fail4079
    inc $I19
    set $I11, rx1639_bstack[$I19]
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1639_pos)
    rx1639_cstack = rx1639_cur."!cursor_capture"($P11, "sym")
    goto rxcap1641_done4078
  rxcap1641_fail4079:
    goto rx1639_fail4071
  rxcap1641_done4078:
    ge rx1639_pos, rx1639_eos, rx1639_fail4071
    is_cclass $I11, .CCLASS_WHITESPACE, rx1639_tgt, rx1639_pos
    unless $I11, rx1639_fail4071
    add rx1639_pos, 1
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1639_curclass, "$!pos"
    lt $I11, 0, rx1639_fail4071
    nqp_rxmark rx1639_bstack, rxsubrule1642_pass4080, -1, 0
  rxsubrule1642_pass4080:
    rx1639_cstack = rx1639_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1639_pos, $P11, rx1639_curclass, "$!pos"
    rx1639_cur."!cursor_pass"(rx1639_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1639_cur)
  rx1639_restart4070:
    repr_get_attr_obj rx1639_cstack, rx1639_cur, rx1639_curclass, "$!cstack"
  rx1639_fail4071:
    unless rx1639_bstack, rx1639_done4069
    pop $I19, rx1639_bstack
    if_null rx1639_cstack, rx1639_cstack_done4074
    unless rx1639_cstack, rx1639_cstack_done4074
    dec $I19
    set $P11, rx1639_cstack[$I19]
  rx1639_cstack_done4074:
    pop rx1639_rep, rx1639_bstack
    pop rx1639_pos, rx1639_bstack
    pop $I19, rx1639_bstack
    lt rx1639_pos, -1, rx1639_done4069
    lt rx1639_pos, 0, rx1639_fail4071
    eq $I19, 0, rx1639_fail4071
    nqp_islist $I20, rx1639_cstack
    unless $I20, rx1639_jump4072
    elements $I18, rx1639_bstack
    le $I18, 0, rx1639_cut4073
    dec $I18
    set $I18, rx1639_bstack[$I18]
  rx1639_cut4073:
    assign rx1639_cstack, $I18
  rx1639_jump4072:
    jump $I19
  rx1639_done4069:
    rx1639_cur."!cursor_fail"()
    .return (rx1639_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<return>" :subid("cuid_224_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1547
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_436_1383915013.33774' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1643_start
    .local string rx1643_tgt
    .local int rx1643_pos
    .local int rx1643_off
    .local int rx1643_eos
    .local int rx1643_rep
    .local pmc rx1643_cur
    .local pmc rx1643_curclass
    .local pmc rx1643_bstack
    .local pmc rx1643_cstack
    rx1643_start = self."!cursor_start_all"()
    set rx1643_cur, rx1643_start[0]
    set rx1643_tgt, rx1643_start[1]
    set rx1643_pos, rx1643_start[2]
    set rx1643_curclass, rx1643_start[3]
    set rx1643_bstack, rx1643_start[4]
    set $I19, rx1643_start[5]
    store_lex unicode:"$\x{a2}", rx1643_cur
    length rx1643_eos, rx1643_tgt
    eq $I19, 1, rx1643_restart4083
    gt rx1643_pos, rx1643_eos, rx1643_fail4084
    repr_get_attr_int $I11, self, rx1643_curclass, "$!from"
    ne $I11, -1, rxscan1644_done4090
    goto rxscan1644_scan4089
  rxscan1644_loop4088:
    inc rx1643_pos
    gt rx1643_pos, rx1643_eos, rx1643_fail4084
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!from", rx1643_pos
  rxscan1644_scan4089:
    nqp_rxmark rx1643_bstack, rxscan1644_loop4088, rx1643_pos, 0
  rxscan1644_done4090:
    nqp_rxmark rx1643_bstack, rxcap1645_fail4092, rx1643_pos, 0
    add $I11, rx1643_pos, 6
    gt $I11, rx1643_eos, rx1643_fail4084
    substr $S10, rx1643_tgt, rx1643_pos, 6
    ne $S10, ucs4:"return", rx1643_fail4084
    add rx1643_pos, 6
    nqp_rxpeek $I19, rx1643_bstack, rxcap1645_fail4092
    inc $I19
    set $I11, rx1643_bstack[$I19]
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    $P11 = rx1643_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1643_pos)
    rx1643_cstack = rx1643_cur."!cursor_capture"($P11, "sym")
    goto rxcap1645_done4091
  rxcap1645_fail4092:
    goto rx1643_fail4084
  rxcap1645_done4091:
    nqp_rxmark rx1643_bstack, rxquantr1646_done4094, rx1643_pos, 0
  rxquantr1646_loop4093:
    ge rx1643_pos, rx1643_eos, rx1643_fail4084
    is_cclass $I11, .CCLASS_WHITESPACE, rx1643_tgt, rx1643_pos
    unless $I11, rx1643_fail4084
    add rx1643_pos, 1
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    $P11 = rx1643_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1643_curclass, "$!pos"
    lt $I11, 0, rx1643_fail4084
    nqp_rxmark rx1643_bstack, rxsubrule1647_pass4095, -1, 0
  rxsubrule1647_pass4095:
    rx1643_cstack = rx1643_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1643_pos, $P11, rx1643_curclass, "$!pos"
    nqp_rxpeek $I19, rx1643_bstack, rxquantr1646_done4094
    inc $I19
    inc $I19
    set rx1643_rep, rx1643_bstack[$I19]
    nqp_rxcommit rx1643_bstack, rxquantr1646_done4094
    inc rx1643_rep
  rxquantr1646_done4094:
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    store_lex unicode:"$\x{a2}", rx1643_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_436_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1643_cur."!cursor_pass"(rx1643_pos, "term:sym<return>", 'backtrack'=>1)
    .return (rx1643_cur)
  rx1643_restart4083:
    repr_get_attr_obj rx1643_cstack, rx1643_cur, rx1643_curclass, "$!cstack"
  rx1643_fail4084:
    unless rx1643_bstack, rx1643_done4082
    pop $I19, rx1643_bstack
    if_null rx1643_cstack, rx1643_cstack_done4087
    unless rx1643_cstack, rx1643_cstack_done4087
    dec $I19
    set $P11, rx1643_cstack[$I19]
  rx1643_cstack_done4087:
    pop rx1643_rep, rx1643_bstack
    pop rx1643_pos, rx1643_bstack
    pop $I19, rx1643_bstack
    lt rx1643_pos, -1, rx1643_done4082
    lt rx1643_pos, 0, rx1643_fail4084
    eq $I19, 0, rx1643_fail4084
    nqp_islist $I20, rx1643_cstack
    unless $I20, rx1643_jump4085
    elements $I18, rx1643_bstack
    le $I18, 0, rx1643_cut4086
    dec $I18
    set $I18, rx1643_bstack[$I18]
  rx1643_cut4086:
    assign rx1643_cstack, $I18
  rx1643_jump4085:
    jump $I19
  rx1643_done4082:
    rx1643_cur."!cursor_fail"()
    .return (rx1643_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1383915013.33774") :anon :lex :outer("cuid_224_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1547

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_225_1383915013.33774") :anon :lex :outer("cuid_410_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1549
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_194 
    .local pmc fb_tmp_195 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set fb_tmp_194, _lex_param_1
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if1648_else4096 
    set $P5002, fb_tmp_194[0]
    set $P5004, $P5002
    goto if1648_end4097
  if1648_else4096:
    null $P5003
    set $P5004, $P5003
  if1648_end4097:
    unless_null $P5004, vivi_16494098
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_16494098:
    set $P101, $P5004
    set fb_tmp_195, _lex_param_1
    repr_defined $I5002, fb_tmp_195
    unless $I5002 goto if1650_else4099 
    set $P5006, fb_tmp_195[1]
    set $P5008, $P5006
    goto if1650_end4100
  if1650_else4099:
    null $P5007
    set $P5008, $P5007
  if1650_end4100:
    unless_null $P5008, vivi_16514101
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_16514101:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_437_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1555
    .const 'Sub' $P5014 = 'cuid_226_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_227_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_229_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_230_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_232_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_233_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_234_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_235_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_236_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_237_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_238_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_239_1383915013.33774' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_240_1383915013.33774' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_226_1383915013.33774' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_227_1383915013.33774' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_229_1383915013.33774' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_230_1383915013.33774' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_232_1383915013.33774' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_233_1383915013.33774' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_234_1383915013.33774' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_235_1383915013.33774' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_236_1383915013.33774' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_237_1383915013.33774' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_238_1383915013.33774' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_239_1383915013.33774' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_240_1383915013.33774' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_226_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1556
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1652_start
    .local string rx1652_tgt
    .local int rx1652_pos
    .local int rx1652_off
    .local int rx1652_eos
    .local int rx1652_rep
    .local pmc rx1652_cur
    .local pmc rx1652_curclass
    .local pmc rx1652_bstack
    .local pmc rx1652_cstack
    rx1652_start = self."!cursor_start_all"()
    set rx1652_cur, rx1652_start[0]
    set rx1652_tgt, rx1652_start[1]
    set rx1652_pos, rx1652_start[2]
    set rx1652_curclass, rx1652_start[3]
    set rx1652_bstack, rx1652_start[4]
    set $I19, rx1652_start[5]
    store_lex unicode:"$\x{a2}", rx1652_cur
    length rx1652_eos, rx1652_tgt
    eq $I19, 1, rx1652_restart4104
    gt rx1652_pos, rx1652_eos, rx1652_fail4105
    repr_get_attr_int $I11, self, rx1652_curclass, "$!from"
    ne $I11, -1, rxscan1653_done4111
    goto rxscan1653_scan4110
  rxscan1653_loop4109:
    inc rx1652_pos
    gt rx1652_pos, rx1652_eos, rx1652_fail4105
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!from", rx1652_pos
  rxscan1653_scan4110:
    nqp_rxmark rx1652_bstack, rxscan1653_loop4109, rx1652_pos, 0
  rxscan1653_done4111:
    ge rx1652_pos, rx1652_eos, rx1652_fail4105
    substr $S11, rx1652_tgt, rx1652_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1652_fail4105
    inc rx1652_pos
    rx1652_cur."!cursor_pass"(rx1652_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1652_cur)
  rx1652_restart4104:
    repr_get_attr_obj rx1652_cstack, rx1652_cur, rx1652_curclass, "$!cstack"
  rx1652_fail4105:
    unless rx1652_bstack, rx1652_done4103
    pop $I19, rx1652_bstack
    if_null rx1652_cstack, rx1652_cstack_done4108
    unless rx1652_cstack, rx1652_cstack_done4108
    dec $I19
    set $P11, rx1652_cstack[$I19]
  rx1652_cstack_done4108:
    pop rx1652_rep, rx1652_bstack
    pop rx1652_pos, rx1652_bstack
    pop $I19, rx1652_bstack
    lt rx1652_pos, -1, rx1652_done4103
    lt rx1652_pos, 0, rx1652_fail4105
    eq $I19, 0, rx1652_fail4105
    nqp_islist $I20, rx1652_cstack
    unless $I20, rx1652_jump4106
    elements $I18, rx1652_bstack
    le $I18, 0, rx1652_cut4107
    dec $I18
    set $I18, rx1652_bstack[$I18]
  rx1652_cut4107:
    assign rx1652_cstack, $I18
  rx1652_jump4106:
    jump $I19
  rx1652_done4103:
    rx1652_cur."!cursor_fail"()
    .return (rx1652_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_227_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1560
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_228_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1654_start
    .local string rx1654_tgt
    .local int rx1654_pos
    .local int rx1654_off
    .local int rx1654_eos
    .local int rx1654_rep
    .local pmc rx1654_cur
    .local pmc rx1654_curclass
    .local pmc rx1654_bstack
    .local pmc rx1654_cstack
    rx1654_start = self."!cursor_start_all"()
    set rx1654_cur, rx1654_start[0]
    set rx1654_tgt, rx1654_start[1]
    set rx1654_pos, rx1654_start[2]
    set rx1654_curclass, rx1654_start[3]
    set rx1654_bstack, rx1654_start[4]
    set $I19, rx1654_start[5]
    store_lex unicode:"$\x{a2}", rx1654_cur
    length rx1654_eos, rx1654_tgt
    eq $I19, 1, rx1654_restart4114
    gt rx1654_pos, rx1654_eos, rx1654_fail4115
    repr_get_attr_int $I11, self, rx1654_curclass, "$!from"
    ne $I11, -1, rxscan1655_done4121
    goto rxscan1655_scan4120
  rxscan1655_loop4119:
    inc rx1654_pos
    index rx1654_pos, rx1654_tgt, ucs4:":", rx1654_pos
    eq rx1654_pos, -1, rx1654_fail4115
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!from", rx1654_pos
  rxscan1655_scan4120:
    nqp_rxmark rx1654_bstack, rxscan1655_loop4119, rx1654_pos, 0
  rxscan1655_done4121:
    add $I11, rx1654_pos, 1
    gt $I11, rx1654_eos, rx1654_fail4115
    substr $S10, rx1654_tgt, rx1654_pos, 1
    ne $S10, ucs4:":", rx1654_fail4115
    add rx1654_pos, 1
    .const 'Sub' $P5001 = 'cuid_228_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!pos", rx1654_pos
    $P11 = rx1654_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1654_curclass, "$!pos"
    lt $I11, 0, rx1654_fail4115
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!pos", rx1654_pos
    $P11 = rx1654_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1654_curclass, "$!pos"
    lt $I11, 0, rx1654_fail4115
    nqp_rxmark rx1654_bstack, rxsubrule1658_pass4132, -1, 0
  rxsubrule1658_pass4132:
    rx1654_cstack = rx1654_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1654_pos, $P11, rx1654_curclass, "$!pos"
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!pos", rx1654_pos
    $P11 = rx1654_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1654_curclass, "$!pos"
    lt $I11, 0, rx1654_fail4115
    repr_get_attr_int rx1654_pos, $P11, rx1654_curclass, "$!pos"
    add $I11, rx1654_pos, 1
    gt $I11, rx1654_eos, rx1654_fail4115
    substr $S10, rx1654_tgt, rx1654_pos, 1
    ne $S10, ucs4:";", rx1654_fail4115
    add rx1654_pos, 1
    rx1654_cur."!cursor_pass"(rx1654_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1654_cur)
  rx1654_restart4114:
    repr_get_attr_obj rx1654_cstack, rx1654_cur, rx1654_curclass, "$!cstack"
  rx1654_fail4115:
    unless rx1654_bstack, rx1654_done4113
    pop $I19, rx1654_bstack
    if_null rx1654_cstack, rx1654_cstack_done4118
    unless rx1654_cstack, rx1654_cstack_done4118
    dec $I19
    set $P11, rx1654_cstack[$I19]
  rx1654_cstack_done4118:
    pop rx1654_rep, rx1654_bstack
    pop rx1654_pos, rx1654_bstack
    pop $I19, rx1654_bstack
    lt rx1654_pos, -1, rx1654_done4113
    lt rx1654_pos, 0, rx1654_fail4115
    eq $I19, 0, rx1654_fail4115
    nqp_islist $I20, rx1654_cstack
    unless $I20, rx1654_jump4116
    elements $I18, rx1654_bstack
    le $I18, 0, rx1654_cut4117
    dec $I18
    set $I18, rx1654_bstack[$I18]
  rx1654_cut4117:
    assign rx1654_cstack, $I18
  rx1654_jump4116:
    jump $I19
  rx1654_done4113:
    rx1654_cur."!cursor_fail"()
    .return (rx1654_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_228_1383915013.33774") :anon :lex :outer("cuid_227_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1656_start
    .local string rx1656_tgt
    .local int rx1656_pos
    .local int rx1656_off
    .local int rx1656_eos
    .local int rx1656_rep
    .local pmc rx1656_cur
    .local pmc rx1656_curclass
    .local pmc rx1656_bstack
    .local pmc rx1656_cstack
    rx1656_start = self."!cursor_start_all"()
    set rx1656_cur, rx1656_start[0]
    set rx1656_tgt, rx1656_start[1]
    set rx1656_pos, rx1656_start[2]
    set rx1656_curclass, rx1656_start[3]
    set rx1656_bstack, rx1656_start[4]
    set $I19, rx1656_start[5]
    store_lex unicode:"$\x{a2}", rx1656_cur
    length rx1656_eos, rx1656_tgt
    eq $I19, 1, rx1656_restart4124
    gt rx1656_pos, rx1656_eos, rx1656_fail4125
    repr_get_attr_int $I11, self, rx1656_curclass, "$!from"
    ne $I11, -1, rxscan1657_done4131
    goto rxscan1657_scan4130
  rxscan1657_loop4129:
    inc rx1656_pos
    index rx1656_pos, rx1656_tgt, ucs4:"my", rx1656_pos
    eq rx1656_pos, -1, rx1656_fail4125
    repr_bind_attr_int rx1656_cur, rx1656_curclass, "$!from", rx1656_pos
  rxscan1657_scan4130:
    nqp_rxmark rx1656_bstack, rxscan1657_loop4129, rx1656_pos, 0
  rxscan1657_done4131:
    add $I11, rx1656_pos, 2
    gt $I11, rx1656_eos, rx1656_fail4125
    substr $S10, rx1656_tgt, rx1656_pos, 2
    ne $S10, ucs4:"my", rx1656_fail4125
    add rx1656_pos, 2
    rx1656_cur."!cursor_pass"(rx1656_pos, 'backtrack'=>1)
    .return (rx1656_cur)
  rx1656_restart4124:
    repr_get_attr_obj rx1656_cstack, rx1656_cur, rx1656_curclass, "$!cstack"
  rx1656_fail4125:
    unless rx1656_bstack, rx1656_done4123
    pop $I19, rx1656_bstack
    if_null rx1656_cstack, rx1656_cstack_done4128
    unless rx1656_cstack, rx1656_cstack_done4128
    dec $I19
    set $P11, rx1656_cstack[$I19]
  rx1656_cstack_done4128:
    pop rx1656_rep, rx1656_bstack
    pop rx1656_pos, rx1656_bstack
    pop $I19, rx1656_bstack
    lt rx1656_pos, -1, rx1656_done4123
    lt rx1656_pos, 0, rx1656_fail4125
    eq $I19, 0, rx1656_fail4125
    nqp_islist $I20, rx1656_cstack
    unless $I20, rx1656_jump4126
    elements $I18, rx1656_bstack
    le $I18, 0, rx1656_cut4127
    dec $I18
    set $I18, rx1656_bstack[$I18]
  rx1656_cut4127:
    assign rx1656_cstack, $I18
  rx1656_jump4126:
    jump $I19
  rx1656_done4123:
    rx1656_cur."!cursor_fail"()
    .return (rx1656_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_229_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1564
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1660_start
    .local string rx1660_tgt
    .local int rx1660_pos
    .local int rx1660_off
    .local int rx1660_eos
    .local int rx1660_rep
    .local pmc rx1660_cur
    .local pmc rx1660_curclass
    .local pmc rx1660_bstack
    .local pmc rx1660_cstack
    rx1660_start = self."!cursor_start_all"()
    set rx1660_cur, rx1660_start[0]
    set rx1660_tgt, rx1660_start[1]
    set rx1660_pos, rx1660_start[2]
    set rx1660_curclass, rx1660_start[3]
    set rx1660_bstack, rx1660_start[4]
    set $I19, rx1660_start[5]
    store_lex unicode:"$\x{a2}", rx1660_cur
    length rx1660_eos, rx1660_tgt
    eq $I19, 1, rx1660_restart4136
    gt rx1660_pos, rx1660_eos, rx1660_fail4137
    repr_get_attr_int $I11, self, rx1660_curclass, "$!from"
    ne $I11, -1, rxscan1661_done4143
    goto rxscan1661_scan4142
  rxscan1661_loop4141:
    inc rx1660_pos
    gt rx1660_pos, rx1660_eos, rx1660_fail4137
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!from", rx1660_pos
  rxscan1661_scan4142:
    nqp_rxmark rx1660_bstack, rxscan1661_loop4141, rx1660_pos, 0
  rxscan1661_done4143:
    ge rx1660_pos, rx1660_eos, rx1660_fail4137
    substr $S11, rx1660_tgt, rx1660_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1660_fail4137
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1660_curclass, "$!pos"
    lt $I11, 0, rx1660_fail4137
    nqp_rxmark rx1660_bstack, rxsubrule1662_pass4144, -1, 0
  rxsubrule1662_pass4144:
    rx1660_cstack = rx1660_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1660_pos, $P11, rx1660_curclass, "$!pos"
    rx1660_cur."!cursor_pass"(rx1660_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1660_cur)
  rx1660_restart4136:
    repr_get_attr_obj rx1660_cstack, rx1660_cur, rx1660_curclass, "$!cstack"
  rx1660_fail4137:
    unless rx1660_bstack, rx1660_done4135
    pop $I19, rx1660_bstack
    if_null rx1660_cstack, rx1660_cstack_done4140
    unless rx1660_cstack, rx1660_cstack_done4140
    dec $I19
    set $P11, rx1660_cstack[$I19]
  rx1660_cstack_done4140:
    pop rx1660_rep, rx1660_bstack
    pop rx1660_pos, rx1660_bstack
    pop $I19, rx1660_bstack
    lt rx1660_pos, -1, rx1660_done4135
    lt rx1660_pos, 0, rx1660_fail4137
    eq $I19, 0, rx1660_fail4137
    nqp_islist $I20, rx1660_cstack
    unless $I20, rx1660_jump4138
    elements $I18, rx1660_bstack
    le $I18, 0, rx1660_cut4139
    dec $I18
    set $I18, rx1660_bstack[$I18]
  rx1660_cut4139:
    assign rx1660_cstack, $I18
  rx1660_jump4138:
    jump $I19
  rx1660_done4135:
    rx1660_cur."!cursor_fail"()
    .return (rx1660_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_230_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1568
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_231_1383915013.33774' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1663_start
    .local string rx1663_tgt
    .local int rx1663_pos
    .local int rx1663_off
    .local int rx1663_eos
    .local int rx1663_rep
    .local pmc rx1663_cur
    .local pmc rx1663_curclass
    .local pmc rx1663_bstack
    .local pmc rx1663_cstack
    rx1663_start = self."!cursor_start_all"()
    set rx1663_cur, rx1663_start[0]
    set rx1663_tgt, rx1663_start[1]
    set rx1663_pos, rx1663_start[2]
    set rx1663_curclass, rx1663_start[3]
    set rx1663_bstack, rx1663_start[4]
    set $I19, rx1663_start[5]
    store_lex unicode:"$\x{a2}", rx1663_cur
    length rx1663_eos, rx1663_tgt
    eq $I19, 1, rx1663_restart4147
    gt rx1663_pos, rx1663_eos, rx1663_fail4148
    repr_get_attr_int $I11, self, rx1663_curclass, "$!from"
    ne $I11, -1, rxscan1664_done4154
    goto rxscan1664_scan4153
  rxscan1664_loop4152:
    inc rx1663_pos
    gt rx1663_pos, rx1663_eos, rx1663_fail4148
    repr_bind_attr_int rx1663_cur, rx1663_curclass, "$!from", rx1663_pos
  rxscan1664_scan4153:
    nqp_rxmark rx1663_bstack, rxscan1664_loop4152, rx1663_pos, 0
  rxscan1664_done4154:
    .const 'Sub' $P5001 = 'cuid_231_1383915013.33774' 
    capture_lex $P5001
    repr_bind_attr_int rx1663_cur, rx1663_curclass, "$!pos", rx1663_pos
    $P11 = rx1663_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1663_curclass, "$!pos"
    lt $I11, 0, rx1663_fail4148
    repr_bind_attr_int rx1663_cur, rx1663_curclass, "$!pos", rx1663_pos
    $P11 = rx1663_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1663_curclass, "$!pos"
    lt $I11, 0, rx1663_fail4148
    nqp_rxmark rx1663_bstack, rxsubrule1669_pass4169, -1, 0
  rxsubrule1669_pass4169:
    rx1663_cstack = rx1663_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1663_pos, $P11, rx1663_curclass, "$!pos"
    repr_bind_attr_int rx1663_cur, rx1663_curclass, "$!pos", rx1663_pos
    $P11 = rx1663_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx1663_curclass, "$!pos"
    lt $I11, 0, rx1663_fail4148
    repr_get_attr_int rx1663_pos, $P11, rx1663_curclass, "$!pos"
    rx1663_cur."!cursor_pass"(rx1663_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1663_cur)
  rx1663_restart4147:
    repr_get_attr_obj rx1663_cstack, rx1663_cur, rx1663_curclass, "$!cstack"
  rx1663_fail4148:
    unless rx1663_bstack, rx1663_done4146
    pop $I19, rx1663_bstack
    if_null rx1663_cstack, rx1663_cstack_done4151
    unless rx1663_cstack, rx1663_cstack_done4151
    dec $I19
    set $P11, rx1663_cstack[$I19]
  rx1663_cstack_done4151:
    pop rx1663_rep, rx1663_bstack
    pop rx1663_pos, rx1663_bstack
    pop $I19, rx1663_bstack
    lt rx1663_pos, -1, rx1663_done4146
    lt rx1663_pos, 0, rx1663_fail4148
    eq $I19, 0, rx1663_fail4148
    nqp_islist $I20, rx1663_cstack
    unless $I20, rx1663_jump4149
    elements $I18, rx1663_bstack
    le $I18, 0, rx1663_cut4150
    dec $I18
    set $I18, rx1663_bstack[$I18]
  rx1663_cut4150:
    assign rx1663_cstack, $I18
  rx1663_jump4149:
    jump $I19
  rx1663_done4146:
    rx1663_cur."!cursor_fail"()
    .return (rx1663_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_231_1383915013.33774") :anon :lex :outer("cuid_230_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1665_start
    .local string rx1665_tgt
    .local int rx1665_pos
    .local int rx1665_off
    .local int rx1665_eos
    .local int rx1665_rep
    .local pmc rx1665_cur
    .local pmc rx1665_curclass
    .local pmc rx1665_bstack
    .local pmc rx1665_cstack
    rx1665_start = self."!cursor_start_all"()
    set rx1665_cur, rx1665_start[0]
    set rx1665_tgt, rx1665_start[1]
    set rx1665_pos, rx1665_start[2]
    set rx1665_curclass, rx1665_start[3]
    set rx1665_bstack, rx1665_start[4]
    set $I19, rx1665_start[5]
    store_lex unicode:"$\x{a2}", rx1665_cur
    length rx1665_eos, rx1665_tgt
    eq $I19, 1, rx1665_restart4157
    gt rx1665_pos, rx1665_eos, rx1665_fail4158
    repr_get_attr_int $I11, self, rx1665_curclass, "$!from"
    ne $I11, -1, rxscan1666_done4164
    goto rxscan1666_scan4163
  rxscan1666_loop4162:
    inc rx1665_pos
    gt rx1665_pos, rx1665_eos, rx1665_fail4158
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!from", rx1665_pos
  rxscan1666_scan4163:
    nqp_rxmark rx1665_bstack, rxscan1666_loop4162, rx1665_pos, 0
  rxscan1666_done4164:
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!pos", rx1665_pos
    $P11 = rx1665_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1665_curclass, "$!pos"
    lt $I11, 0, rx1665_fail4158
    nqp_rxmark rx1665_bstack, rxsubrule1667_pass4165, -1, 0
  rxsubrule1667_pass4165:
    rx1665_cstack = rx1665_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1665_pos, $P11, rx1665_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1668_04167
    nqp_push_label $P11, alt1668_14168
    nqp_rxmark rx1665_bstack, alt1668_end4166, -1, 0
    rx1665_cur."!alt"(rx1665_pos, "alt_nfa__38_1383915021.53196", $P11)
    goto rx1665_fail4158
  alt1668_04167:
    ge rx1665_pos, rx1665_eos, rx1665_fail4158
    is_cclass $I11, .CCLASS_WORD, rx1665_tgt, rx1665_pos
    if $I11, rx1665_fail4158
    add rx1665_pos, 1
    ge rx1665_pos, rx1665_eos, rx1665_fail4158
    is_cclass $I11, .CCLASS_WORD, rx1665_tgt, rx1665_pos
    unless $I11, rx1665_fail4158
    add rx1665_pos, 1
    goto alt1668_end4166
  alt1668_14168:
    ge rx1665_pos, rx1665_eos, rx1665_fail4158
    is_cclass $I11, .CCLASS_WORD, rx1665_tgt, rx1665_pos
    unless $I11, rx1665_fail4158
    add rx1665_pos, 1
    goto alt1668_end4166
  alt1668_end4166:
    nqp_rxcommit rx1665_bstack, alt1668_end4166
    rx1665_cur."!cursor_pass"(rx1665_pos, 'backtrack'=>1)
    .return (rx1665_cur)
  rx1665_restart4157:
    repr_get_attr_obj rx1665_cstack, rx1665_cur, rx1665_curclass, "$!cstack"
  rx1665_fail4158:
    unless rx1665_bstack, rx1665_done4156
    pop $I19, rx1665_bstack
    if_null rx1665_cstack, rx1665_cstack_done4161
    unless rx1665_cstack, rx1665_cstack_done4161
    dec $I19
    set $P11, rx1665_cstack[$I19]
  rx1665_cstack_done4161:
    pop rx1665_rep, rx1665_bstack
    pop rx1665_pos, rx1665_bstack
    pop $I19, rx1665_bstack
    lt rx1665_pos, -1, rx1665_done4156
    lt rx1665_pos, 0, rx1665_fail4158
    eq $I19, 0, rx1665_fail4158
    nqp_islist $I20, rx1665_cstack
    unless $I20, rx1665_jump4159
    elements $I18, rx1665_bstack
    le $I18, 0, rx1665_cut4160
    dec $I18
    set $I18, rx1665_bstack[$I18]
  rx1665_cut4160:
    assign rx1665_cstack, $I18
  rx1665_jump4159:
    jump $I19
  rx1665_done4156:
    rx1665_cur."!cursor_fail"()
    .return (rx1665_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_232_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1572
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1671_start
    .local string rx1671_tgt
    .local int rx1671_pos
    .local int rx1671_off
    .local int rx1671_eos
    .local int rx1671_rep
    .local pmc rx1671_cur
    .local pmc rx1671_curclass
    .local pmc rx1671_bstack
    .local pmc rx1671_cstack
    rx1671_start = self."!cursor_start_all"()
    set rx1671_cur, rx1671_start[0]
    set rx1671_tgt, rx1671_start[1]
    set rx1671_pos, rx1671_start[2]
    set rx1671_curclass, rx1671_start[3]
    set rx1671_bstack, rx1671_start[4]
    set $I19, rx1671_start[5]
    store_lex unicode:"$\x{a2}", rx1671_cur
    length rx1671_eos, rx1671_tgt
    eq $I19, 1, rx1671_restart4173
    gt rx1671_pos, rx1671_eos, rx1671_fail4174
    repr_get_attr_int $I11, self, rx1671_curclass, "$!from"
    ne $I11, -1, rxscan1672_done4180
    goto rxscan1672_scan4179
  rxscan1672_loop4178:
    inc rx1671_pos
    gt rx1671_pos, rx1671_eos, rx1671_fail4174
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!from", rx1671_pos
  rxscan1672_scan4179:
    nqp_rxmark rx1671_bstack, rxscan1672_loop4178, rx1671_pos, 0
  rxscan1672_done4180:
    ge rx1671_pos, rx1671_eos, rx1671_fail4174
    substr $S11, rx1671_tgt, rx1671_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1671_fail4174
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail4174
    nqp_rxmark rx1671_bstack, rxsubrule1673_pass4181, -1, 0
  rxsubrule1673_pass4181:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    rx1671_cur."!cursor_pass"(rx1671_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1671_cur)
  rx1671_restart4173:
    repr_get_attr_obj rx1671_cstack, rx1671_cur, rx1671_curclass, "$!cstack"
  rx1671_fail4174:
    unless rx1671_bstack, rx1671_done4172
    pop $I19, rx1671_bstack
    if_null rx1671_cstack, rx1671_cstack_done4177
    unless rx1671_cstack, rx1671_cstack_done4177
    dec $I19
    set $P11, rx1671_cstack[$I19]
  rx1671_cstack_done4177:
    pop rx1671_rep, rx1671_bstack
    pop rx1671_pos, rx1671_bstack
    pop $I19, rx1671_bstack
    lt rx1671_pos, -1, rx1671_done4172
    lt rx1671_pos, 0, rx1671_fail4174
    eq $I19, 0, rx1671_fail4174
    nqp_islist $I20, rx1671_cstack
    unless $I20, rx1671_jump4175
    elements $I18, rx1671_bstack
    le $I18, 0, rx1671_cut4176
    dec $I18
    set $I18, rx1671_bstack[$I18]
  rx1671_cut4176:
    assign rx1671_cstack, $I18
  rx1671_jump4175:
    jump $I19
  rx1671_done4172:
    rx1671_cur."!cursor_fail"()
    .return (rx1671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_233_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1576
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1674_start
    .local string rx1674_tgt
    .local int rx1674_pos
    .local int rx1674_off
    .local int rx1674_eos
    .local int rx1674_rep
    .local pmc rx1674_cur
    .local pmc rx1674_curclass
    .local pmc rx1674_bstack
    .local pmc rx1674_cstack
    rx1674_start = self."!cursor_start_all"()
    set rx1674_cur, rx1674_start[0]
    set rx1674_tgt, rx1674_start[1]
    set rx1674_pos, rx1674_start[2]
    set rx1674_curclass, rx1674_start[3]
    set rx1674_bstack, rx1674_start[4]
    set $I19, rx1674_start[5]
    store_lex unicode:"$\x{a2}", rx1674_cur
    length rx1674_eos, rx1674_tgt
    eq $I19, 1, rx1674_restart4184
    gt rx1674_pos, rx1674_eos, rx1674_fail4185
    repr_get_attr_int $I11, self, rx1674_curclass, "$!from"
    ne $I11, -1, rxscan1675_done4191
    goto rxscan1675_scan4190
  rxscan1675_loop4189:
    inc rx1674_pos
    index rx1674_pos, rx1674_tgt, ucs4:"?", rx1674_pos
    eq rx1674_pos, -1, rx1674_fail4185
    repr_bind_attr_int rx1674_cur, rx1674_curclass, "$!from", rx1674_pos
  rxscan1675_scan4190:
    nqp_rxmark rx1674_bstack, rxscan1675_loop4189, rx1674_pos, 0
  rxscan1675_done4191:
    add $I11, rx1674_pos, 1
    gt $I11, rx1674_eos, rx1674_fail4185
    substr $S10, rx1674_tgt, rx1674_pos, 1
    ne $S10, ucs4:"?", rx1674_fail4185
    add rx1674_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1676_04193
    nqp_push_label $P11, alt1676_14194
    nqp_rxmark rx1674_bstack, alt1676_end4192, -1, 0
    rx1674_cur."!alt"(rx1674_pos, "alt_nfa__39_1383915021.56999", $P11)
    goto rx1674_fail4185
  alt1676_04193:
    ge rx1674_pos, rx1674_eos, rx1674_fail4185
    substr $S11, rx1674_tgt, rx1674_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1674_fail4185
    goto alt1676_end4192
  alt1676_14194:
    ge rx1674_pos, rx1674_eos, rx1674_fail4185
    substr $S11, rx1674_tgt, rx1674_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1674_fail4185
    repr_bind_attr_int rx1674_cur, rx1674_curclass, "$!pos", rx1674_pos
    $P11 = rx1674_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1674_curclass, "$!pos"
    lt $I11, 0, rx1674_fail4185
    nqp_rxmark rx1674_bstack, rxsubrule1677_pass4195, -1, 0
  rxsubrule1677_pass4195:
    rx1674_cstack = rx1674_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1674_pos, $P11, rx1674_curclass, "$!pos"
    goto alt1676_end4192
  alt1676_end4192:
    nqp_rxcommit rx1674_bstack, alt1676_end4192
    rx1674_cur."!cursor_pass"(rx1674_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1674_cur)
  rx1674_restart4184:
    repr_get_attr_obj rx1674_cstack, rx1674_cur, rx1674_curclass, "$!cstack"
  rx1674_fail4185:
    unless rx1674_bstack, rx1674_done4183
    pop $I19, rx1674_bstack
    if_null rx1674_cstack, rx1674_cstack_done4188
    unless rx1674_cstack, rx1674_cstack_done4188
    dec $I19
    set $P11, rx1674_cstack[$I19]
  rx1674_cstack_done4188:
    pop rx1674_rep, rx1674_bstack
    pop rx1674_pos, rx1674_bstack
    pop $I19, rx1674_bstack
    lt rx1674_pos, -1, rx1674_done4183
    lt rx1674_pos, 0, rx1674_fail4185
    eq $I19, 0, rx1674_fail4185
    nqp_islist $I20, rx1674_cstack
    unless $I20, rx1674_jump4186
    elements $I18, rx1674_bstack
    le $I18, 0, rx1674_cut4187
    dec $I18
    set $I18, rx1674_bstack[$I18]
  rx1674_cut4187:
    assign rx1674_cstack, $I18
  rx1674_jump4186:
    jump $I19
  rx1674_done4183:
    rx1674_cur."!cursor_fail"()
    .return (rx1674_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_234_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1577
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1678_start
    .local string rx1678_tgt
    .local int rx1678_pos
    .local int rx1678_off
    .local int rx1678_eos
    .local int rx1678_rep
    .local pmc rx1678_cur
    .local pmc rx1678_curclass
    .local pmc rx1678_bstack
    .local pmc rx1678_cstack
    rx1678_start = self."!cursor_start_all"()
    set rx1678_cur, rx1678_start[0]
    set rx1678_tgt, rx1678_start[1]
    set rx1678_pos, rx1678_start[2]
    set rx1678_curclass, rx1678_start[3]
    set rx1678_bstack, rx1678_start[4]
    set $I19, rx1678_start[5]
    store_lex unicode:"$\x{a2}", rx1678_cur
    length rx1678_eos, rx1678_tgt
    eq $I19, 1, rx1678_restart4198
    gt rx1678_pos, rx1678_eos, rx1678_fail4199
    repr_get_attr_int $I11, self, rx1678_curclass, "$!from"
    ne $I11, -1, rxscan1679_done4205
    goto rxscan1679_scan4204
  rxscan1679_loop4203:
    inc rx1678_pos
    index rx1678_pos, rx1678_tgt, ucs4:"!", rx1678_pos
    eq rx1678_pos, -1, rx1678_fail4199
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!from", rx1678_pos
  rxscan1679_scan4204:
    nqp_rxmark rx1678_bstack, rxscan1679_loop4203, rx1678_pos, 0
  rxscan1679_done4205:
    add $I11, rx1678_pos, 1
    gt $I11, rx1678_eos, rx1678_fail4199
    substr $S10, rx1678_tgt, rx1678_pos, 1
    ne $S10, ucs4:"!", rx1678_fail4199
    add rx1678_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1680_04207
    nqp_push_label $P11, alt1680_14208
    nqp_rxmark rx1678_bstack, alt1680_end4206, -1, 0
    rx1678_cur."!alt"(rx1678_pos, "alt_nfa__40_1383915021.58703", $P11)
    goto rx1678_fail4199
  alt1680_04207:
    ge rx1678_pos, rx1678_eos, rx1678_fail4199
    substr $S11, rx1678_tgt, rx1678_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1678_fail4199
    goto alt1680_end4206
  alt1680_14208:
    ge rx1678_pos, rx1678_eos, rx1678_fail4199
    substr $S11, rx1678_tgt, rx1678_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1678_fail4199
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1678_curclass, "$!pos"
    lt $I11, 0, rx1678_fail4199
    nqp_rxmark rx1678_bstack, rxsubrule1681_pass4209, -1, 0
  rxsubrule1681_pass4209:
    rx1678_cstack = rx1678_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1678_pos, $P11, rx1678_curclass, "$!pos"
    goto alt1680_end4206
  alt1680_end4206:
    nqp_rxcommit rx1678_bstack, alt1680_end4206
    rx1678_cur."!cursor_pass"(rx1678_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1678_cur)
  rx1678_restart4198:
    repr_get_attr_obj rx1678_cstack, rx1678_cur, rx1678_curclass, "$!cstack"
  rx1678_fail4199:
    unless rx1678_bstack, rx1678_done4197
    pop $I19, rx1678_bstack
    if_null rx1678_cstack, rx1678_cstack_done4202
    unless rx1678_cstack, rx1678_cstack_done4202
    dec $I19
    set $P11, rx1678_cstack[$I19]
  rx1678_cstack_done4202:
    pop rx1678_rep, rx1678_bstack
    pop rx1678_pos, rx1678_bstack
    pop $I19, rx1678_bstack
    lt rx1678_pos, -1, rx1678_done4197
    lt rx1678_pos, 0, rx1678_fail4199
    eq $I19, 0, rx1678_fail4199
    nqp_islist $I20, rx1678_cstack
    unless $I20, rx1678_jump4200
    elements $I18, rx1678_bstack
    le $I18, 0, rx1678_cut4201
    dec $I18
    set $I18, rx1678_bstack[$I18]
  rx1678_cut4201:
    assign rx1678_cstack, $I18
  rx1678_jump4200:
    jump $I19
  rx1678_done4197:
    rx1678_cur."!cursor_fail"()
    .return (rx1678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_235_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1579
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1682_start
    .local string rx1682_tgt
    .local int rx1682_pos
    .local int rx1682_off
    .local int rx1682_eos
    .local int rx1682_rep
    .local pmc rx1682_cur
    .local pmc rx1682_curclass
    .local pmc rx1682_bstack
    .local pmc rx1682_cstack
    rx1682_start = self."!cursor_start_all"()
    set rx1682_cur, rx1682_start[0]
    set rx1682_tgt, rx1682_start[1]
    set rx1682_pos, rx1682_start[2]
    set rx1682_curclass, rx1682_start[3]
    set rx1682_bstack, rx1682_start[4]
    set $I19, rx1682_start[5]
    store_lex unicode:"$\x{a2}", rx1682_cur
    length rx1682_eos, rx1682_tgt
    eq $I19, 1, rx1682_restart4212
    gt rx1682_pos, rx1682_eos, rx1682_fail4213
    repr_get_attr_int $I11, self, rx1682_curclass, "$!from"
    ne $I11, -1, rxscan1683_done4219
    goto rxscan1683_scan4218
  rxscan1683_loop4217:
    inc rx1682_pos
    gt rx1682_pos, rx1682_eos, rx1682_fail4213
    repr_bind_attr_int rx1682_cur, rx1682_curclass, "$!from", rx1682_pos
  rxscan1683_scan4218:
    nqp_rxmark rx1682_bstack, rxscan1683_loop4217, rx1682_pos, 0
  rxscan1683_done4219:
    nqp_rxmark rx1682_bstack, rxcap1684_fail4221, rx1682_pos, 0
    ge rx1682_pos, rx1682_eos, rx1682_fail4213
    substr $S11, rx1682_tgt, rx1682_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1682_fail4213
    inc rx1682_pos
    ge rx1682_pos, rx1682_eos, rx1682_fail4213
    substr $S11, rx1682_tgt, rx1682_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1682_fail4213
    nqp_rxpeek $I19, rx1682_bstack, rxcap1684_fail4221
    inc $I19
    set $I11, rx1682_bstack[$I19]
    repr_bind_attr_int rx1682_cur, rx1682_curclass, "$!pos", rx1682_pos
    $P11 = rx1682_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1682_pos)
    rx1682_cstack = rx1682_cur."!cursor_capture"($P11, "zw")
    goto rxcap1684_done4220
  rxcap1684_fail4221:
    goto rx1682_fail4213
  rxcap1684_done4220:
    repr_bind_attr_int rx1682_cur, rx1682_curclass, "$!pos", rx1682_pos
    $P11 = rx1682_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1682_curclass, "$!pos"
    lt $I11, 0, rx1682_fail4213
    nqp_rxmark rx1682_bstack, rxsubrule1685_pass4222, -1, 0
  rxsubrule1685_pass4222:
    rx1682_cstack = rx1682_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1682_pos, $P11, rx1682_curclass, "$!pos"
    rx1682_cur."!cursor_pass"(rx1682_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1682_cur)
  rx1682_restart4212:
    repr_get_attr_obj rx1682_cstack, rx1682_cur, rx1682_curclass, "$!cstack"
  rx1682_fail4213:
    unless rx1682_bstack, rx1682_done4211
    pop $I19, rx1682_bstack
    if_null rx1682_cstack, rx1682_cstack_done4216
    unless rx1682_cstack, rx1682_cstack_done4216
    dec $I19
    set $P11, rx1682_cstack[$I19]
  rx1682_cstack_done4216:
    pop rx1682_rep, rx1682_bstack
    pop rx1682_pos, rx1682_bstack
    pop $I19, rx1682_bstack
    lt rx1682_pos, -1, rx1682_done4211
    lt rx1682_pos, 0, rx1682_fail4213
    eq $I19, 0, rx1682_fail4213
    nqp_islist $I20, rx1682_cstack
    unless $I20, rx1682_jump4214
    elements $I18, rx1682_bstack
    le $I18, 0, rx1682_cut4215
    dec $I18
    set $I18, rx1682_bstack[$I18]
  rx1682_cut4215:
    assign rx1682_cstack, $I18
  rx1682_jump4214:
    jump $I19
  rx1682_done4211:
    rx1682_cur."!cursor_fail"()
    .return (rx1682_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_236_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1583
    .param pmc _lex_param_0 
    .lex "$*IN_REGEX_ASSERTION", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1686_start
    .local string rx1686_tgt
    .local int rx1686_pos
    .local int rx1686_off
    .local int rx1686_eos
    .local int rx1686_rep
    .local pmc rx1686_cur
    .local pmc rx1686_curclass
    .local pmc rx1686_bstack
    .local pmc rx1686_cstack
    rx1686_start = self."!cursor_start_all"()
    set rx1686_cur, rx1686_start[0]
    set rx1686_tgt, rx1686_start[1]
    set rx1686_pos, rx1686_start[2]
    set rx1686_curclass, rx1686_start[3]
    set rx1686_bstack, rx1686_start[4]
    set $I19, rx1686_start[5]
    store_lex unicode:"$\x{a2}", rx1686_cur
    length rx1686_eos, rx1686_tgt
    eq $I19, 1, rx1686_restart4225
    gt rx1686_pos, rx1686_eos, rx1686_fail4226
    repr_get_attr_int $I11, self, rx1686_curclass, "$!from"
    ne $I11, -1, rxscan1687_done4232
    goto rxscan1687_scan4231
  rxscan1687_loop4230:
    inc rx1686_pos
    gt rx1686_pos, rx1686_eos, rx1686_fail4226
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!from", rx1686_pos
  rxscan1687_scan4231:
    nqp_rxmark rx1686_bstack, rxscan1687_loop4230, rx1686_pos, 0
  rxscan1687_done4232:
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    store_lex unicode:"$\x{a2}", rx1686_cur
    box $P5002, 1
    set $P101, $P5002
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4226
    nqp_rxmark rx1686_bstack, rxsubrule1688_pass4233, -1, 0
  rxsubrule1688_pass4233:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    rx1686_cur."!cursor_pass"(rx1686_pos, "arglist", 'backtrack'=>1)
    .return (rx1686_cur)
  rx1686_restart4225:
    repr_get_attr_obj rx1686_cstack, rx1686_cur, rx1686_curclass, "$!cstack"
  rx1686_fail4226:
    unless rx1686_bstack, rx1686_done4224
    pop $I19, rx1686_bstack
    if_null rx1686_cstack, rx1686_cstack_done4229
    unless rx1686_cstack, rx1686_cstack_done4229
    dec $I19
    set $P11, rx1686_cstack[$I19]
  rx1686_cstack_done4229:
    pop rx1686_rep, rx1686_bstack
    pop rx1686_pos, rx1686_bstack
    pop $I19, rx1686_bstack
    lt rx1686_pos, -1, rx1686_done4224
    lt rx1686_pos, 0, rx1686_fail4226
    eq $I19, 0, rx1686_fail4226
    nqp_islist $I20, rx1686_cstack
    unless $I20, rx1686_jump4227
    elements $I18, rx1686_bstack
    le $I18, 0, rx1686_cut4228
    dec $I18
    set $I18, rx1686_bstack[$I18]
  rx1686_cut4228:
    assign rx1686_cstack, $I18
  rx1686_jump4227:
    jump $I19
  rx1686_done4224:
    rx1686_cur."!cursor_fail"()
    .return (rx1686_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_237_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1588
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1689_start
    .local string rx1689_tgt
    .local int rx1689_pos
    .local int rx1689_off
    .local int rx1689_eos
    .local int rx1689_rep
    .local pmc rx1689_cur
    .local pmc rx1689_curclass
    .local pmc rx1689_bstack
    .local pmc rx1689_cstack
    rx1689_start = self."!cursor_start_all"()
    set rx1689_cur, rx1689_start[0]
    set rx1689_tgt, rx1689_start[1]
    set rx1689_pos, rx1689_start[2]
    set rx1689_curclass, rx1689_start[3]
    set rx1689_bstack, rx1689_start[4]
    set $I19, rx1689_start[5]
    store_lex unicode:"$\x{a2}", rx1689_cur
    length rx1689_eos, rx1689_tgt
    eq $I19, 1, rx1689_restart4236
    gt rx1689_pos, rx1689_eos, rx1689_fail4237
    repr_get_attr_int $I11, self, rx1689_curclass, "$!from"
    ne $I11, -1, rxscan1690_done4243
    goto rxscan1690_scan4242
  rxscan1690_loop4241:
    inc rx1689_pos
    gt rx1689_pos, rx1689_eos, rx1689_fail4237
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!from", rx1689_pos
  rxscan1690_scan4242:
    nqp_rxmark rx1689_bstack, rxscan1690_loop4241, rx1689_pos, 0
  rxscan1690_done4243:
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4237
    nqp_rxmark rx1689_bstack, rxsubrule1691_pass4244, -1, 0
  rxsubrule1691_pass4244:
    rx1689_cstack = rx1689_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    nqp_rxmark rx1689_bstack, rxquantr1692_done4246, rx1689_pos, 0
  rxquantr1692_loop4245:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1693_04248
    nqp_push_label $P11, alt1693_14249
    nqp_push_label $P11, alt1693_24251
    nqp_push_label $P11, alt1693_34253
    nqp_push_label $P11, alt1693_44255
    nqp_rxmark rx1689_bstack, alt1693_end4247, -1, 0
    rx1689_cur."!alt"(rx1689_pos, "alt_nfa__41_1383915021.72004", $P11)
    goto rx1689_fail4237
  alt1693_04248:
    ge rx1689_pos, rx1689_eos, rx1689_fail4237
    substr $S11, rx1689_tgt, rx1689_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1689_fail4237
    goto alt1693_end4247
  alt1693_14249:
    add $I11, rx1689_pos, 1
    gt $I11, rx1689_eos, rx1689_fail4237
    substr $S10, rx1689_tgt, rx1689_pos, 1
    ne $S10, ucs4:"=", rx1689_fail4237
    add rx1689_pos, 1
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4237
    nqp_rxmark rx1689_bstack, rxsubrule1694_pass4250, -1, 0
  rxsubrule1694_pass4250:
    rx1689_cstack = rx1689_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    goto alt1693_end4247
  alt1693_24251:
    add $I11, rx1689_pos, 1
    gt $I11, rx1689_eos, rx1689_fail4237
    substr $S10, rx1689_tgt, rx1689_pos, 1
    ne $S10, ucs4:":", rx1689_fail4237
    add rx1689_pos, 1
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4237
    nqp_rxmark rx1689_bstack, rxsubrule1695_pass4252, -1, 0
  rxsubrule1695_pass4252:
    rx1689_cstack = rx1689_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    goto alt1693_end4247
  alt1693_34253:
    add $I11, rx1689_pos, 1
    gt $I11, rx1689_eos, rx1689_fail4237
    substr $S10, rx1689_tgt, rx1689_pos, 1
    ne $S10, ucs4:"(", rx1689_fail4237
    add rx1689_pos, 1
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4237
    nqp_rxmark rx1689_bstack, rxsubrule1696_pass4254, -1, 0
  rxsubrule1696_pass4254:
    rx1689_cstack = rx1689_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    add $I11, rx1689_pos, 1
    gt $I11, rx1689_eos, rx1689_fail4237
    substr $S10, rx1689_tgt, rx1689_pos, 1
    ne $S10, ucs4:")", rx1689_fail4237
    add rx1689_pos, 1
    goto alt1693_end4247
  alt1693_44255:
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4237
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4237
    nqp_rxmark rx1689_bstack, rxsubrule1698_pass4257, -1, 0
  rxsubrule1698_pass4257:
    rx1689_cstack = rx1689_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    goto alt1693_end4247
  alt1693_end4247:
    nqp_rxpeek $I19, rx1689_bstack, rxquantr1692_done4246
    inc $I19
    inc $I19
    set rx1689_rep, rx1689_bstack[$I19]
    nqp_rxcommit rx1689_bstack, rxquantr1692_done4246
    inc rx1689_rep
  rxquantr1692_done4246:
    rx1689_cur."!cursor_pass"(rx1689_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1689_cur)
  rx1689_restart4236:
    repr_get_attr_obj rx1689_cstack, rx1689_cur, rx1689_curclass, "$!cstack"
  rx1689_fail4237:
    unless rx1689_bstack, rx1689_done4235
    pop $I19, rx1689_bstack
    if_null rx1689_cstack, rx1689_cstack_done4240
    unless rx1689_cstack, rx1689_cstack_done4240
    dec $I19
    set $P11, rx1689_cstack[$I19]
  rx1689_cstack_done4240:
    pop rx1689_rep, rx1689_bstack
    pop rx1689_pos, rx1689_bstack
    pop $I19, rx1689_bstack
    lt rx1689_pos, -1, rx1689_done4235
    lt rx1689_pos, 0, rx1689_fail4237
    eq $I19, 0, rx1689_fail4237
    nqp_islist $I20, rx1689_cstack
    unless $I20, rx1689_jump4238
    elements $I18, rx1689_bstack
    le $I18, 0, rx1689_cut4239
    dec $I18
    set $I18, rx1689_bstack[$I18]
  rx1689_cut4239:
    assign rx1689_cstack, $I18
  rx1689_jump4238:
    jump $I19
  rx1689_done4235:
    rx1689_cur."!cursor_fail"()
    .return (rx1689_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_238_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1599
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1699_start
    .local string rx1699_tgt
    .local int rx1699_pos
    .local int rx1699_off
    .local int rx1699_eos
    .local int rx1699_rep
    .local pmc rx1699_cur
    .local pmc rx1699_curclass
    .local pmc rx1699_bstack
    .local pmc rx1699_cstack
    rx1699_start = self."!cursor_start_all"()
    set rx1699_cur, rx1699_start[0]
    set rx1699_tgt, rx1699_start[1]
    set rx1699_pos, rx1699_start[2]
    set rx1699_curclass, rx1699_start[3]
    set rx1699_bstack, rx1699_start[4]
    set $I19, rx1699_start[5]
    store_lex unicode:"$\x{a2}", rx1699_cur
    length rx1699_eos, rx1699_tgt
    eq $I19, 1, rx1699_restart4260
    gt rx1699_pos, rx1699_eos, rx1699_fail4261
    repr_get_attr_int $I11, self, rx1699_curclass, "$!from"
    ne $I11, -1, rxscan1700_done4267
    goto rxscan1700_scan4266
  rxscan1700_loop4265:
    inc rx1699_pos
    gt rx1699_pos, rx1699_eos, rx1699_fail4261
    repr_bind_attr_int rx1699_cur, rx1699_curclass, "$!from", rx1699_pos
  rxscan1700_scan4266:
    nqp_rxmark rx1699_bstack, rxscan1700_loop4265, rx1699_pos, 0
  rxscan1700_done4267:
    ge rx1699_pos, rx1699_eos, rx1699_fail4261
    substr $S11, rx1699_tgt, rx1699_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1699_fail4261
    repr_bind_attr_int rx1699_cur, rx1699_curclass, "$!pos", rx1699_pos
    $P11 = rx1699_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1699_curclass, "$!pos"
    lt $I11, 0, rx1699_fail4261
    nqp_rxmark rx1699_bstack, rxsubrule1701_pass4268, -1, 0
  rxsubrule1701_pass4268:
    rx1699_cstack = rx1699_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1699_pos, $P11, rx1699_curclass, "$!pos"
    rx1699_cur."!cursor_pass"(rx1699_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1699_cur)
  rx1699_restart4260:
    repr_get_attr_obj rx1699_cstack, rx1699_cur, rx1699_curclass, "$!cstack"
  rx1699_fail4261:
    unless rx1699_bstack, rx1699_done4259
    pop $I19, rx1699_bstack
    if_null rx1699_cstack, rx1699_cstack_done4264
    unless rx1699_cstack, rx1699_cstack_done4264
    dec $I19
    set $P11, rx1699_cstack[$I19]
  rx1699_cstack_done4264:
    pop rx1699_rep, rx1699_bstack
    pop rx1699_pos, rx1699_bstack
    pop $I19, rx1699_bstack
    lt rx1699_pos, -1, rx1699_done4259
    lt rx1699_pos, 0, rx1699_fail4261
    eq $I19, 0, rx1699_fail4261
    nqp_islist $I20, rx1699_cstack
    unless $I20, rx1699_jump4262
    elements $I18, rx1699_bstack
    le $I18, 0, rx1699_cut4263
    dec $I18
    set $I18, rx1699_bstack[$I18]
  rx1699_cut4263:
    assign rx1699_cstack, $I18
  rx1699_jump4262:
    jump $I19
  rx1699_done4259:
    rx1699_cur."!cursor_fail"()
    .return (rx1699_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_239_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1603
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1702_start
    .local string rx1702_tgt
    .local int rx1702_pos
    .local int rx1702_off
    .local int rx1702_eos
    .local int rx1702_rep
    .local pmc rx1702_cur
    .local pmc rx1702_curclass
    .local pmc rx1702_bstack
    .local pmc rx1702_cstack
    rx1702_start = self."!cursor_start_all"()
    set rx1702_cur, rx1702_start[0]
    set rx1702_tgt, rx1702_start[1]
    set rx1702_pos, rx1702_start[2]
    set rx1702_curclass, rx1702_start[3]
    set rx1702_bstack, rx1702_start[4]
    set $I19, rx1702_start[5]
    store_lex unicode:"$\x{a2}", rx1702_cur
    length rx1702_eos, rx1702_tgt
    eq $I19, 1, rx1702_restart4271
    gt rx1702_pos, rx1702_eos, rx1702_fail4272
    repr_get_attr_int $I11, self, rx1702_curclass, "$!from"
    ne $I11, -1, rxscan1703_done4278
    goto rxscan1703_scan4277
  rxscan1703_loop4276:
    inc rx1702_pos
    gt rx1702_pos, rx1702_eos, rx1702_fail4272
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!from", rx1702_pos
  rxscan1703_scan4277:
    nqp_rxmark rx1702_bstack, rxscan1703_loop4276, rx1702_pos, 0
  rxscan1703_done4278:
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!pos", rx1702_pos
    $P11 = rx1702_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1702_curclass, "$!pos"
    lt $I11, 0, rx1702_fail4272
    nqp_rxmark rx1702_bstack, rxsubrule1704_pass4279, -1, 0
  rxsubrule1704_pass4279:
    rx1702_cstack = rx1702_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1702_pos, $P11, rx1702_curclass, "$!pos"
    rx1702_cur."!cursor_pass"(rx1702_pos, "codeblock", 'backtrack'=>1)
    .return (rx1702_cur)
  rx1702_restart4271:
    repr_get_attr_obj rx1702_cstack, rx1702_cur, rx1702_curclass, "$!cstack"
  rx1702_fail4272:
    unless rx1702_bstack, rx1702_done4270
    pop $I19, rx1702_bstack
    if_null rx1702_cstack, rx1702_cstack_done4275
    unless rx1702_cstack, rx1702_cstack_done4275
    dec $I19
    set $P11, rx1702_cstack[$I19]
  rx1702_cstack_done4275:
    pop rx1702_rep, rx1702_bstack
    pop rx1702_pos, rx1702_bstack
    pop $I19, rx1702_bstack
    lt rx1702_pos, -1, rx1702_done4270
    lt rx1702_pos, 0, rx1702_fail4272
    eq $I19, 0, rx1702_fail4272
    nqp_islist $I20, rx1702_cstack
    unless $I20, rx1702_jump4273
    elements $I18, rx1702_bstack
    le $I18, 0, rx1702_cut4274
    dec $I18
    set $I18, rx1702_bstack[$I18]
  rx1702_cut4274:
    assign rx1702_cstack, $I18
  rx1702_jump4273:
    jump $I19
  rx1702_done4270:
    rx1702_cur."!cursor_fail"()
    .return (rx1702_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_240_1383915013.33774") :anon :lex :outer("cuid_437_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1607
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1705_start
    .local string rx1705_tgt
    .local int rx1705_pos
    .local int rx1705_off
    .local int rx1705_eos
    .local int rx1705_rep
    .local pmc rx1705_cur
    .local pmc rx1705_curclass
    .local pmc rx1705_bstack
    .local pmc rx1705_cstack
    rx1705_start = self."!cursor_start_all"()
    set rx1705_cur, rx1705_start[0]
    set rx1705_tgt, rx1705_start[1]
    set rx1705_pos, rx1705_start[2]
    set rx1705_curclass, rx1705_start[3]
    set rx1705_bstack, rx1705_start[4]
    set $I19, rx1705_start[5]
    store_lex unicode:"$\x{a2}", rx1705_cur
    length rx1705_eos, rx1705_tgt
    eq $I19, 1, rx1705_restart4282
    gt rx1705_pos, rx1705_eos, rx1705_fail4283
    repr_get_attr_int $I11, self, rx1705_curclass, "$!from"
    ne $I11, -1, rxscan1706_done4289
    goto rxscan1706_scan4288
  rxscan1706_loop4287:
    inc rx1705_pos
    gt rx1705_pos, rx1705_eos, rx1705_fail4283
    repr_bind_attr_int rx1705_cur, rx1705_curclass, "$!from", rx1705_pos
  rxscan1706_scan4288:
    nqp_rxmark rx1705_bstack, rxscan1706_loop4287, rx1705_pos, 0
  rxscan1706_done4289:
    repr_bind_attr_int rx1705_cur, rx1705_curclass, "$!pos", rx1705_pos
    $P11 = rx1705_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1705_curclass, "$!pos"
    lt $I11, 0, rx1705_fail4283
    nqp_rxmark rx1705_bstack, rxsubrule1707_pass4290, -1, 0
  rxsubrule1707_pass4290:
    rx1705_cstack = rx1705_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1705_pos, $P11, rx1705_curclass, "$!pos"
    rx1705_cur."!cursor_pass"(rx1705_pos, "arg", 'backtrack'=>1)
    .return (rx1705_cur)
  rx1705_restart4282:
    repr_get_attr_obj rx1705_cstack, rx1705_cur, rx1705_curclass, "$!cstack"
  rx1705_fail4283:
    unless rx1705_bstack, rx1705_done4281
    pop $I19, rx1705_bstack
    if_null rx1705_cstack, rx1705_cstack_done4286
    unless rx1705_cstack, rx1705_cstack_done4286
    dec $I19
    set $P11, rx1705_cstack[$I19]
  rx1705_cstack_done4286:
    pop rx1705_rep, rx1705_bstack
    pop rx1705_pos, rx1705_bstack
    pop $I19, rx1705_bstack
    lt rx1705_pos, -1, rx1705_done4281
    lt rx1705_pos, 0, rx1705_fail4283
    eq $I19, 0, rx1705_fail4283
    nqp_islist $I20, rx1705_cstack
    unless $I20, rx1705_jump4284
    elements $I18, rx1705_bstack
    le $I18, 0, rx1705_cut4285
    dec $I18
    set $I18, rx1705_bstack[$I18]
  rx1705_cut4285:
    assign rx1705_cstack, $I18
  rx1705_jump4284:
    jump $I19
  rx1705_done4281:
    rx1705_cur."!cursor_fail"()
    .return (rx1705_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_438_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1614
    .const 'Sub' $P5008 = 'cuid_241_1383915013.33774' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_242_1383915013.33774' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_243_1383915013.33774' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_244_1383915013.33774' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_245_1383915013.33774' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_246_1383915013.33774' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_247_1383915013.33774' 
    capture_lex $P5008 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_241_1383915013.33774' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_242_1383915013.33774' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_243_1383915013.33774' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_244_1383915013.33774' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_245_1383915013.33774' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_246_1383915013.33774' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_247_1383915013.33774' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_241_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1617
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$ast", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_196 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    new $P5003, 'ResizablePMCArray'
    set fb_tmp_196, _lex_param_1
    repr_defined $I5001, fb_tmp_196
    unless $I5001 goto if1708_else4291 
    set $P5004, fb_tmp_196[0]
    set $P5006, $P5004
    goto if1708_end4292
  if1708_else4291:
    null $P5005
    set $P5006, $P5005
  if1708_end4292:
    unless_null $P5006, vivi_17094293
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_17094293:
    push $P5003, $P5006
    repr_bind_attr_obj $P5001, $P5002, "@!block_stack", 0, $P5003
.annotate 'line', 1619
    nqp_decontainerize $P5008, _lex_param_0
    $P5008."visit_children"(_lex_param_1)
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_block" :subid("cuid_242_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1623
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
.annotate 'line', 1624
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    $P5003."push"(_lex_param_1)
.annotate 'line', 1626
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 1628
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!block_stack", 0
    $P5007."pop"()
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "find_lex" :subid("cuid_243_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1633
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_439_1383915013.33774' 
    capture_lex $P5009 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    set $I101, 0
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_4294
    .lex "RETURN", $P101
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    set $N5001, $P5003
    set $I5001, $N5001
    set $I101, $I5001
  while1710_test4296:
    set $N5002, $I101
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5007, $I5002
    set $P5006, $P5007
    unless $I5002 goto while1710_done4300 
  while1710_redo4298:
    .const 'Sub' $P5004 = 'cuid_439_1383915013.33774' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5006, $P5005
    goto while1710_test4296 
  while1710_done4300:
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    goto lexotic_4295
  lexotic_4294:
    .get_results ($P5008)
  lexotic_4295:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_439_1383915013.33774") :anon :lex :outer("cuid_243_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1635
    .lex "%sym", $P101 
    .local pmc fb_tmp_197 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $I5002, "$i"
    sub $I5001, $I5002, 1
    store_lex "$i", $I5001
.annotate 'line', 1637
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    repr_get_attr_obj $P5005, $P5002, $P5004, "@!block_stack", 0
    set fb_tmp_197, $P5005
    repr_defined $I5003, fb_tmp_197
    unless $I5003 goto if1711_else4301 
    find_lex $I5004, "$i"
    set $P5006, fb_tmp_197[$I5004]
    set $P5008, $P5006
    goto if1711_end4302
  if1711_else4301:
    null $P5007
    set $P5008, $P5007
  if1711_end4302:
    unless_null $P5008, vivi_17124303
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_17124303:
    find_lex $P5010, "$name"
    $P5011 = $P5008."symbol"($P5010)
    set $P101, $P5011
    set $N5001, $P101
    box $P5014, $N5001
    set $P5013, $P5014
    unless $N5001 goto if1713_end4305 
.annotate 'line', 1638
    $P5012 = "RETURN"($P101)
    set $P5013, $P5012
  if1713_end4305:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_244_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1645
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "%sym", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_198 
    new $P5001, 'Hash'
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4306
    .lex "RETURN", $P102
.annotate 'line', 1646
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."find_lex"(_lex_param_1)
    set $P101, $P5003
    get_id $I5003, $P101
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    get_id $I5004, $P5004
    iseq $I5002, $I5003, $I5004
    not $I5001, $I5002
    set $I5006, $I5001
    unless $I5001 goto if1715_end4311 
    exists $I5005, $P101["value"]
    set $I5006, $I5005
  if1715_end4311:
    unless $I5006 goto if1714_else4308 
.annotate 'line', 1647
    set fb_tmp_198, $P101
    repr_defined $I5007, fb_tmp_198
    unless $I5007 goto if1716_else4312 
    set $P5005, fb_tmp_198["value"]
    set $P5007, $P5005
    goto if1716_end4313
  if1716_else4312:
    null $P5006
    set $P5007, $P5006
  if1716_end4313:
    unless_null $P5007, vivi_17174314
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_17174314:
    $P5009 = "RETURN"($P5007)
    set $P5011, $P5009
    goto if1714_end4309
  if1714_else4308:
.annotate 'line', 1650
    set $S5002, _lex_param_1
    concat $S5001, "No compile-time value for ", $S5002
    box $P5010, $S5001
    die $P5010
    set $P5011, $P5010
  if1714_end4309:
    goto lexotic_4307
  lexotic_4306:
    .get_results ($P5011)
  lexotic_4307:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "visit_op" :subid("cuid_245_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1655
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_441_1383915013.33774' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_444_1383915013.33774' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_445_1383915013.33774' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_446_1383915013.33774' 
    capture_lex $P5043 
    .lex "&returns_int", $P101 
    .lex "$typeinfo", $P102 
    .lex "$asm", $P103 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_202 
    .const 'Sub' $P5001 = 'cuid_441_1383915013.33774' 
    capture_lex $P5001
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_4344
    .lex "RETURN", $P104
.annotate 'line', 1679
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 1681
    $P5005 = _lex_param_1."op"()
    set $S5001, $P5005
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if1732_else4346 
.annotate 'line', 1682
    $P5006 = _lex_param_1."op"()
    set $S5003, $P5006
    $P5007 = _lex_param_1."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if1732_end4347
  if1732_else4346:
    set $S5005, ""
  if1732_end4347:
    box $P5008, $S5005
    set $P102, $P5008
.annotate 'line', 1684
    $P5009 = _lex_param_1."op"()
    set $S5007, $P5009
    substr $S5006, $S5007, 0, 3
    box $P5010, $S5006
    set $P103, $P5010
    new $P5041, 'ExceptionHandler'
    set_label $P5041, catch_handler_17574389
    $P5041.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5041
.annotate 'line', 1686
    new $P5039, 'ExceptionHandler'
    set_label $P5039, catch_handler_17554387
    $P5039.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5039
    set $S5008, $P102
    iseq $I5005, $S5008, "_n"
    set $I5011, $I5005
    unless $I5005 goto if1734_end4351 
    set $S5009, $P103
    iseq $I5006, $S5009, "add"
    set $I5008, $I5006
    if $I5006 goto unless1736_end4355 
    set $S5010, $P103
    iseq $I5007, $S5010, "sub"
    set $I5008, $I5007
  unless1736_end4355:
    set $I5010, $I5008
    if $I5008 goto unless1735_end4353 
    set $S5011, $P103
    iseq $I5009, $S5011, "mul"
    set $I5010, $I5009
  unless1735_end4353:
    set $I5011, $I5010
  if1734_end4351:
    unless $I5011 goto if1733_else4348 
    .const 'Sub' $P5011 = 'cuid_444_1383915013.33774' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if1733_end4349
  if1733_else4348:
    set $S5012, $P102
    iseq $I5012, $S5012, "_i"
    unless $I5012 goto if1743_else4366 
.annotate 'line', 1696
.annotate 'line', 1697
    nqp_decontainerize $P5013, _lex_param_0
    $P5014 = $P5013."find_sym"("num")
    $P5015 = _lex_param_1."returns"($P5014)
    set $P5037, $P5015
    goto if1743_end4367
  if1743_else4366:
    set $S5013, $P102
    iseq $I5013, $S5013, "_s"
    unless $I5013 goto if1744_else4368 
.annotate 'line', 1698
.annotate 'line', 1699
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5016."find_sym"("str")
    $P5018 = _lex_param_1."returns"($P5017)
    set $P5036, $P5018
    goto if1744_end4369
  if1744_else4368:
.annotate 'line', 1700
    $P5019 = _lex_param_1."op"()
    set $S5014, $P5019
    iseq $I5014, $S5014, "handle"
    unless $I5014 goto if1745_else4370 
.annotate 'line', 1701
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."visit_handle"(_lex_param_1)
    $P5022 = "RETURN"($P5021)
    set $P5035, $P5022
    goto if1745_end4371
  if1745_else4370:
.annotate 'line', 1702
    $P5023 = _lex_param_1."op"()
    set $S5015, $P5023
    iseq $I5015, $S5015, "numify"
    box $P5034, $I5015
    set $P5033, $P5034
    unless $I5015 goto if1746_end4373 
    set fb_tmp_202, _lex_param_1
    repr_defined $I5017, fb_tmp_202
    unless $I5017 goto if1748_else4376 
    set $P5024, fb_tmp_202[0]
    set $P5026, $P5024
    goto if1748_end4377
  if1748_else4376:
    null $P5025
    set $P5026, $P5025
  if1748_end4377:
    unless_null $P5026, vivi_17494378
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_17494378:
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5016, $P5026, $P5028
    box $P5032, $I5016
    set $P5031, $P5032
    unless $I5016 goto if1747_end4375 
    .const 'Sub' $P5029 = 'cuid_445_1383915013.33774' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5031, $P5030
  if1747_end4375:
    set $P5033, $P5031
  if1746_end4373:
    set $P5035, $P5033
  if1745_end4371:
    set $P5036, $P5035
  if1744_end4369:
    set $P5037, $P5036
  if1743_end4367:
  if1733_end4349:
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5038
    pop_eh 
    goto skip_handler_17544386
  catch_handler_17554387:
    .get_results ($P5039) 
    .const 'Sub' $P10001 = 'cuid_446_1383915013.33774' 
    capture_lex $P10001
    $P10001($P5039)
    set $I10001, 1
    set $P5039["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5039
    pop_upto_eh $P5039
    pop_eh 
    set $P5040, $P10002
    goto skip_handler_17544386
  skip_handler_17544386:
    set $P5042, $P5040
    pop_eh 
    goto skip_handler_17564388
  catch_handler_17574389:
    .get_results ($P5041) 
    set $I10001, 1
    set $P5041["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5041
    pop_upto_eh $P5041
    pop_eh 
    set $P5042, $P10001
    goto skip_handler_17564388
  skip_handler_17564388:
    goto lexotic_4345
  lexotic_4344:
    .get_results (_lex_param_1)
  lexotic_4345:
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "returns_int" :subid("cuid_441_1383915013.33774") :anon :lex :outer("cuid_245_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1656
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_440_1383915013.33774' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_442_1383915013.33774' 
    capture_lex $P5016 
    .lex "$node", _lex_param_0 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_4315
    .lex "RETURN", $P101
.annotate 'line', 1657
    $P5001 = _lex_param_0."returns"()
    repr_get_primitive_type_spec $I5002, $P5001
    set $N5001, $I5002
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1718_end4318 
    $P5002 = "RETURN"(1)
  if1718_end4318:
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    type_check $I5003, _lex_param_0, $P5003
    unless $I5003 goto if1719_else4319 
    .const 'Sub' $P5004 = 'cuid_440_1383915013.33774' 
    capture_lex $P5004
    $P5005 = $P5004()
    goto if1719_end4320
  if1719_else4319:
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    type_check $I5004, _lex_param_0, $P5006
    unless $I5004 goto if1725_else4331 
.annotate 'line', 1669
    $P5007 = "RETURN"(1)
    set $P5014, $P5007
    goto if1725_end4332
  if1725_else4331:
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5005, _lex_param_0, $P5008
    set $I5007, $I5005
    unless $I5005 goto if1727_end4336 
.annotate 'line', 1671
    $P5009 = _lex_param_0."scope"()
    set $S5001, $P5009
    iseq $I5006, $S5001, "lexical"
    set $I5007, $I5006
  if1727_end4336:
    box $P5013, $I5007
    set $P5012, $P5013
    unless $I5007 goto if1726_end4334 
    .const 'Sub' $P5010 = 'cuid_442_1383915013.33774' 
    capture_lex $P5010
    $P5011 = $P5010()
    set $P5012, $P5011
  if1726_end4334:
    set $P5014, $P5012
  if1725_end4332:
  if1719_end4320:
    $P5015 = "RETURN"(0)
    goto lexotic_4316
  lexotic_4315:
    .get_results ($P5015)
  lexotic_4316:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_440_1383915013.33774") :anon :lex :outer("cuid_441_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1660
    .lex "$typeinfo", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1661
    find_lex $P5002, "$node"
    $P5003 = $P5002."op"()
    set $S5001, $P5003
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if1720_else4321 
.annotate 'line', 1662
    find_lex $P5004, "$node"
    $P5005 = $P5004."op"()
    set $S5003, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if1720_end4322
  if1720_else4321:
    set $S5005, ""
  if1720_end4322:
    box $P5008, $S5005
    set $P101, $P5008
    set $S5006, $P101
    iseq $I5005, $S5006, "_i"
    unless $I5005 goto if1721_else4323 
.annotate 'line', 1664
    $P5009 = "RETURN"(1)
    set $P5019, $P5009
    goto if1721_end4324
  if1721_else4323:
.annotate 'line', 1666
    find_lex $P5010, "$node"
    $P5011 = $P5010."op"()
    set $S5007, $P5011
    iseq $I5006, $S5007, "chars"
    set $I5008, $I5006
    if $I5006 goto unless1724_end4330 
    find_lex $P5012, "$node"
    $P5013 = $P5012."op"()
    set $S5008, $P5013
    iseq $I5007, $S5008, "ord"
    set $I5008, $I5007
  unless1724_end4330:
    set $I5010, $I5008
    if $I5008 goto unless1723_end4328 
    find_lex $P5014, "$node"
    $P5015 = $P5014."op"()
    set $S5009, $P5015
    iseq $I5009, $S5009, "elems"
    set $I5010, $I5009
  unless1723_end4328:
    box $P5018, $I5010
    set $P5017, $P5018
    unless $I5010 goto if1722_end4326 
    $P5016 = "RETURN"(1)
    set $P5017, $P5016
  if1722_end4326:
    set $P5019, $P5017
  if1721_end4324:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1383915013.33774") :anon :lex :outer("cuid_441_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1671
    .lex "%sym", $P101 
    .local pmc fb_tmp_199 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 1672
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."find_lex"($P5005)
    set $P101, $P5006
    exists $I5001, $P101["type"]
    set $I5005, $I5001
    unless $I5001 goto if1729_end4340 
    set fb_tmp_199, $P101
    repr_defined $I5004, fb_tmp_199
    unless $I5004 goto if1730_else4341 
    set $P5007, fb_tmp_199["type"]
    set $P5009, $P5007
    goto if1730_end4342
  if1730_else4341:
    null $P5008
    set $P5009, $P5008
  if1730_end4342:
    unless_null $P5009, vivi_17314343
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_17314343:
    repr_get_primitive_type_spec $I5003, $P5009
    set $N5001, $I5003
    set $N5002, 1
    iseq $I5002, $N5001, $N5002
    set $I5005, $I5002
  if1729_end4340:
    box $P5013, $I5005
    set $P5012, $P5013
    unless $I5005 goto if1728_end4338 
.annotate 'line', 1673
    $P5011 = "RETURN"(1)
    set $P5012, $P5011
  if1728_end4338:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_444_1383915013.33774") :anon :lex :outer("cuid_245_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1687
    .const 'Sub' $P5025 = 'cuid_443_1383915013.33774' 
    capture_lex $P5025 
    .lex "$newopn", $P101 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 1689
    find_lex $P5004, "$op"
    set fb_tmp_200, $P5004
    repr_defined $I5001, fb_tmp_200
    unless $I5001 goto if1739_else4360 
    set $P5005, fb_tmp_200[0]
    set $P5007, $P5005
    goto if1739_end4361
  if1739_else4360:
    null $P5006
    set $P5007, $P5006
  if1739_end4361:
    unless_null $P5007, vivi_17404362
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_17404362:
    $P5009 = "&returns_int"($P5007)
    set $P5016, $P5009
    unless $P5009 goto if1738_end4359 
    find_lex $P5010, "$op"
    set fb_tmp_201, $P5010
    repr_defined $I5002, fb_tmp_201
    unless $I5002 goto if1741_else4363 
    set $P5011, fb_tmp_201[1]
    set $P5013, $P5011
    goto if1741_end4364
  if1741_else4363:
    null $P5012
    set $P5013, $P5012
  if1741_end4364:
    unless_null $P5013, vivi_17424365
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_17424365:
    $P5015 = "&returns_int"($P5013)
    set $P5016, $P5015
  if1738_end4359:
    unless $P5016 goto if1737_else4356 
    .const 'Sub' $P5017 = 'cuid_443_1383915013.33774' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5024, $P5018
    goto if1737_end4357
  if1737_else4356:
.annotate 'line', 1693
.annotate 'line', 1694
    find_lex $P5019, "$op"
    find_lex $P5021, "self"
    nqp_decontainerize $P5020, $P5021
    $P5022 = $P5020."find_sym"("num")
    $P5023 = $P5019."returns"($P5022)
    set $P5024, $P5023
  if1737_end4357:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_443_1383915013.33774") :anon :lex :outer("cuid_444_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1689
    .lex "$newopn", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 1691
    find_lex $P5004, "$op"
    $P5004."op"($P101)
.annotate 'line', 1692
    find_lex $P5005, "$op"
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    $P5008 = $P5006."find_sym"("int")
    $P5009 = $P5005."returns"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1383915013.33774") :anon :lex :outer("cuid_245_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1705
    .lex "$sigil", $P101 
    .local pmc fb_tmp_203 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1706
    find_lex $P5002, "$op"
    set fb_tmp_203, $P5002
    repr_defined $I5001, fb_tmp_203
    unless $I5001 goto if1750_else4379 
    set $P5003, fb_tmp_203[0]
    set $P5005, $P5003
    goto if1750_end4380
  if1750_else4379:
    null $P5004
    set $P5005, $P5004
  if1750_end4380:
    unless_null $P5005, vivi_17514381
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_17514381:
    $P5007 = $P5005."name"()
    set $S5002, $P5007
    substr $S5001, $S5002, 0, 1
    box $P5008, $S5001
    set $P101, $P5008
    set $S5003, $P101
    iseq $I5002, $S5003, "@"
    set $I5004, $I5002
    if $I5002 goto unless1753_end4385 
    set $S5004, $P101
    iseq $I5003, $S5004, "%"
    set $I5004, $I5003
  unless1753_end4385:
    box $P5015, $I5004
    set $P5014, $P5015
    unless $I5004 goto if1752_end4383 
.annotate 'line', 1707
.annotate 'line', 1708
    find_lex $P5009, "$op"
    find_lex $P5011, "self"
    nqp_decontainerize $P5010, $P5011
    $P5012 = $P5010."find_sym"("int")
    $P5013 = $P5009."returns"($P5012)
    set $P5014, $P5013
  if1752_end4383:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1383915013.33774") :anon :lex :outer("cuid_245_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1712
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "visit_handle" :subid("cuid_246_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1719
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$handle", _lex_param_1 
.annotate 'line', 1720
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."visit_children"(_lex_param_1, 1 :named("skip_selectors"))
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_children" :subid("cuid_247_1383915013.33774") :anon :lex :outer("cuid_438_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1724
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("skip_selectors") :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5007 = 'cuid_447_1383915013.33774' 
    capture_lex $P5007 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$skip_selectors", _lex_param_2 
    if haz_param_5, default4410
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_2, $P5006
  default4410:
    set $I101, 0
    set $I101, 0
    nqp_isstr $I5001, _lex_param_1
    set $I5005, $I5001
    if $I5001 goto unless1758_end4391 
.annotate 'line', 1726
  while1759_test4392:
    set $N5001, $I101
    $P5001 = _lex_param_1."list"()
    set $N5002, $P5001
    islt $I5002, $N5001, $N5002
    set $I5004, $I5002
    unless $I5002 goto while1759_done4396 
  while1759_redo4394:
.annotate 'line', 1727
    set $P5002, _lex_param_2
    unless _lex_param_2 goto if1761_end4400 
    set $N5004, $I101
    set $N5005, 2
    mod $N5003, $N5004, $N5005
    box $P5003, $N5003
    set $P5002, $P5003
  if1761_end4400:
    if $P5002 goto unless1760_end4398 
    .const 'Sub' $P5004 = 'cuid_447_1383915013.33774' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless1760_end4398:
    add $I5003, $I101, 1
    set $I101, $I5003
    set $I5004, $I101
    goto while1759_test4392 
  while1759_done4396:
    set $I5005, $I5004
  unless1758_end4391:
    .return ($I5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1383915013.33774") :anon :lex :outer("cuid_247_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1728
    .lex "$visit", $P101 
    .local pmc fb_tmp_204 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$node"
    set fb_tmp_204, $P5002
    repr_defined $I5001, fb_tmp_204
    unless $I5001 goto if1762_else4401 
    find_lex $I5002, "$i"
    set $P5003, fb_tmp_204[$I5002]
    set $P5005, $P5003
    goto if1762_end4402
  if1762_else4401:
    null $P5004
    set $P5005, $P5004
  if1762_end4402:
    unless_null $P5005, vivi_17634403
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_17634403:
    set $P101, $P5005
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    type_check $I5003, $P101, $P5007
    unless $I5003 goto if1764_else4404 
.annotate 'line', 1730
    find_lex $P5008, "$node"
    find_lex $I5004, "$i"
.annotate 'line', 1731
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    $P5011 = $P5009."visit_op"($P101)
    set $P5008[$I5004], $P5011
    set $P5026, $P5011
    goto if1764_end4405
  if1764_else4404:
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 108
    type_check $I5005, $P101, $P5012
    unless $I5005 goto if1765_else4406 
.annotate 'line', 1732
    find_lex $P5013, "$node"
    find_lex $I5006, "$i"
.annotate 'line', 1733
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    $P5016 = $P5014."visit_block"($P101)
    set $P5013[$I5006], $P5016
    set $P5025, $P5016
    goto if1765_end4407
  if1765_else4406:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 69
    type_check $I5007, $P101, $P5017
    unless $I5007 goto if1766_else4408 
.annotate 'line', 1734
.annotate 'line', 1735
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    $P5020 = $P5018."visit_children"($P101, 1 :named("skip_selectors"))
    set $P5024, $P5020
    goto if1766_end4409
  if1766_else4408:
.annotate 'line', 1736
.annotate 'line', 1737
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."visit_children"($P101)
    set $P5024, $P5023
  if1766_end4409:
    set $P5025, $P5024
  if1765_end4407:
    set $P5026, $P5025
  if1764_end4405:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1747
    .const 'Sub' $P5124 = 'cuid_449_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_452_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_455_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_456_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_459_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_461_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_462_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_463_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_465_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_466_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_472_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_352_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_353_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_354_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_355_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_356_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_357_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_358_1383915013.33774' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_359_1383915013.33774' 
    capture_lex $P5124 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "&xblock_immediate", $P103 
    .lex "&block_immediate", $P104 
    .lex "&default_for", $P105 
    .lex "&default_value_for_prim", $P106 
    .lex "&colonpair_str", $P107 
    .lex "&import_HOW_exports", $P108 
    .lex "&set_block_handler", $P109 
    .lex "&only_star_block", $P110 
    .lex "&attach_multi_signature", $P111 
    .lex "&wrap_return_handler", $P112 
    .lex "&lexical_package_lookup", $P113 
    .const 'Sub' $P5001 = 'cuid_449_1383915013.33774' 
    capture_lex $P5001
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_452_1383915013.33774' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_455_1383915013.33774' 
    capture_lex $P5003
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_456_1383915013.33774' 
    capture_lex $P5004
    set $P106, $P5004
    .const 'Sub' $P5005 = 'cuid_459_1383915013.33774' 
    capture_lex $P5005
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_461_1383915013.33774' 
    capture_lex $P5006
    set $P108, $P5006
    .const 'Sub' $P5007 = 'cuid_462_1383915013.33774' 
    capture_lex $P5007
    set $P109, $P5007
    .const 'Sub' $P5008 = 'cuid_463_1383915013.33774' 
    capture_lex $P5008
    set $P110, $P5008
    .const 'Sub' $P5009 = 'cuid_465_1383915013.33774' 
    capture_lex $P5009
    set $P111, $P5009
    .const 'Sub' $P5010 = 'cuid_466_1383915013.33774' 
    capture_lex $P5010
    set $P112, $P5010
    .const 'Sub' $P5011 = 'cuid_472_1383915013.33774' 
    capture_lex $P5011
    set $P113, $P5011
    .const 'Sub' $P5012 = 'cuid_248_1383915013.33774' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_249_1383915013.33774' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_250_1383915013.33774' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_251_1383915013.33774' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_252_1383915013.33774' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_253_1383915013.33774' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_254_1383915013.33774' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_255_1383915013.33774' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_256_1383915013.33774' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_257_1383915013.33774' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_258_1383915013.33774' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_259_1383915013.33774' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_260_1383915013.33774' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_261_1383915013.33774' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_262_1383915013.33774' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_263_1383915013.33774' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_264_1383915013.33774' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_265_1383915013.33774' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_266_1383915013.33774' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_267_1383915013.33774' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_268_1383915013.33774' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_269_1383915013.33774' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_270_1383915013.33774' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_271_1383915013.33774' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_272_1383915013.33774' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_273_1383915013.33774' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_274_1383915013.33774' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_275_1383915013.33774' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_276_1383915013.33774' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_277_1383915013.33774' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_278_1383915013.33774' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_279_1383915013.33774' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_280_1383915013.33774' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_281_1383915013.33774' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_282_1383915013.33774' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_283_1383915013.33774' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_284_1383915013.33774' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_285_1383915013.33774' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_286_1383915013.33774' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_287_1383915013.33774' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_288_1383915013.33774' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_289_1383915013.33774' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_290_1383915013.33774' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_291_1383915013.33774' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_292_1383915013.33774' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_293_1383915013.33774' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_294_1383915013.33774' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_295_1383915013.33774' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_296_1383915013.33774' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_297_1383915013.33774' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_298_1383915013.33774' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_299_1383915013.33774' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_300_1383915013.33774' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_301_1383915013.33774' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_302_1383915013.33774' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_303_1383915013.33774' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_304_1383915013.33774' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_305_1383915013.33774' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_306_1383915013.33774' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_307_1383915013.33774' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_308_1383915013.33774' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_309_1383915013.33774' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_310_1383915013.33774' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_311_1383915013.33774' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_312_1383915013.33774' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_313_1383915013.33774' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_314_1383915013.33774' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_315_1383915013.33774' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_316_1383915013.33774' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_317_1383915013.33774' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_318_1383915013.33774' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_319_1383915013.33774' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_320_1383915013.33774' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_321_1383915013.33774' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_322_1383915013.33774' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_323_1383915013.33774' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_324_1383915013.33774' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_325_1383915013.33774' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_326_1383915013.33774' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_327_1383915013.33774' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_328_1383915013.33774' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_329_1383915013.33774' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_330_1383915013.33774' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_331_1383915013.33774' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_332_1383915013.33774' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_333_1383915013.33774' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_334_1383915013.33774' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_335_1383915013.33774' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_336_1383915013.33774' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_337_1383915013.33774' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_338_1383915013.33774' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_339_1383915013.33774' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_340_1383915013.33774' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_341_1383915013.33774' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_342_1383915013.33774' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_343_1383915013.33774' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_344_1383915013.33774' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_345_1383915013.33774' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_346_1383915013.33774' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_347_1383915013.33774' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_348_1383915013.33774' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_349_1383915013.33774' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_350_1383915013.33774' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_351_1383915013.33774' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_352_1383915013.33774' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_353_1383915013.33774' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_354_1383915013.33774' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_355_1383915013.33774' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_356_1383915013.33774' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_357_1383915013.33774' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_358_1383915013.33774' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_359_1383915013.33774' 
    capture_lex $P5123
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_449_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1748
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_205 
.annotate 'line', 1749
    set fb_tmp_205, _lex_param_0
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if1767_else4411 
    set $P5001, fb_tmp_205[1]
    set $P5003, $P5001
    goto if1767_end4412
  if1767_else4411:
    null $P5002
    set $P5003, $P5002
  if1767_end4412:
    unless_null $P5003, vivi_17684413
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  vivi_17684413:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_452_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1753
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_451_1383915013.33774' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1754
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1755
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1769_end4415 
    .const 'Sub' $P5002 = 'cuid_451_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1769_end4415:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1383915013.33774") :anon :lex :outer("cuid_452_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1755
    .const 'Sub' $P5013 = 'cuid_450_1383915013.33774' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1756
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1757
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4416:
    unless $P5008, for_done4418
    shift $P5012, $P5008
  for_redo4417:
    .const 'Sub' $P5011 = 'cuid_450_1383915013.33774' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4416
  for_done4418:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_450_1383915013.33774") :anon :lex :outer("cuid_451_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1757
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_455_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1763
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_454_1383915013.33774' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1770_else4419 
.annotate 'line', 1764
.annotate 'line', 1765
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1770_end4420
  if1770_else4419:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1771_else4421 
.annotate 'line', 1767
.annotate 'line', 1768
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1771_end4422
  if1771_else4421:
    .const 'Sub' $P5005 = 'cuid_454_1383915013.33774' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1771_end4422:
    set $P5008, $P5007
  if1770_end4420:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1383915013.33774") :anon :lex :outer("cuid_455_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1770
    .const 'Sub' $P5020 = 'cuid_453_1383915013.33774' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_206 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17784431
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1772
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17764429
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1773
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4423
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_206, $P5004
    repr_defined $I5001, fb_tmp_206
    unless $I5001 goto if1772_else4424 
    set $P5006, fb_tmp_206["$W"]
    set $P5008, $P5006
    goto if1772_end4425
  if1772_else4424:
    null $P5007
    set $P5008, $P5007
  if1772_end4425:
    unless_null $P5008, vivi_17734426
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_17734426:
    unless_null $P5008, vivi_17744427
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17744427:
    set $P5003, $P5008
  fallback4423:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17754428
  catch_handler_17764429:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_453_1383915013.33774' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17754428
  skip_handler_17754428:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17774430
  catch_handler_17784431:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17774430
  skip_handler_17774430:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1383915013.33774") :anon :lex :outer("cuid_454_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1774
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_456_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1780
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1779_else4432 
.annotate 'line', 1781
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1779_end4433
  if1779_else4432:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1780_else4434 
.annotate 'line', 1782
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 49
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1780_end4435
  if1780_else4434:
.annotate 'line', 1783
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1780_end4435:
    set $P5008, $P5007
  if1779_end4433:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_459_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1795
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_458_1383915013.33774' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1781_else4436 
    .const 'Sub' $P5002 = 'cuid_458_1383915013.33774' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1781_end4437
  if1781_else4436:
.annotate 'line', 1800
.annotate 'line', 1801
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1781_end4437:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1383915013.33774") :anon :lex :outer("cuid_459_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1796
    .const 'Sub' $P5010 = 'cuid_457_1383915013.33774' 
    capture_lex $P5010 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1798
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4438:
    unless $P5004, for_done4440
    shift $P5008, $P5004
  for_redo4439:
    .const 'Sub' $P5007 = 'cuid_457_1383915013.33774' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4438
  for_done4440:
.annotate 'line', 1799
    $P5009 = "&join"(" ", $P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1383915013.33774") :anon :lex :outer("cuid_458_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1798
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_461_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1987
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_460_1383915013.33774' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_207 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1782_end4442 
.annotate 'line', 1989
    set fb_tmp_207, _lex_param_0
    repr_defined $I5002, fb_tmp_207
    unless $I5002 goto if1783_else4443 
    set $P5005, fb_tmp_207["EXPORTHOW"]
    set $P5007, $P5005
    goto if1783_end4444
  if1783_else4443:
    null $P5006
    set $P5007, $P5006
  if1783_end4444:
    unless_null $P5007, vivi_17844445
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_17844445:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4451:
    unless $P5003, for_done4453
    shift $P5010, $P5003
  for_redo4452:
    .const 'Sub' $P5009 = 'cuid_460_1383915013.33774' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4451
  for_done4453:
    set $P5011, $P5001
  if1782_end4442:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1383915013.33774") :anon :lex :outer("cuid_461_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1990
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_208 
    .local pmc pkg_viv_tmp_42 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4446
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_42, $P5002
    set fb_tmp_208, pkg_viv_tmp_42
    repr_defined $I5001, fb_tmp_208
    unless $I5001 goto if1785_else4447 
    set $P5004, fb_tmp_208["%HOW"]
    set $P5006, $P5004
    goto if1785_end4448
  if1785_else4447:
    null $P5005
    set $P5006, $P5005
  if1785_end4448:
    unless_null $P5006, vivi_17864449
    new $P5007, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17864449:
    unless_null $P5006, vivi_17874450
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17874450:
    set $P5001, $P5006
  fallback4446:
.annotate 'line', 1991
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_462_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2089
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_209 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_210 
    .local pmc pkg_viv_tmp_44 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4456
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_43, $P5002
    set fb_tmp_209, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_209
    unless $I5002 goto if1789_else4457 
    set $P5004, fb_tmp_209["%HANDLERS"]
    set $P5006, $P5004
    goto if1789_end4458
  if1789_else4457:
    null $P5005
    set $P5006, $P5005
  if1789_end4458:
    unless_null $P5006, vivi_17904459
    new $P5007, 'Hash'
    set pkg_viv_tmp_43["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17904459:
    unless_null $P5006, vivi_17914460
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17914460:
    set $P5001, $P5006
  fallback4456:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1788_end4455 
.annotate 'line', 2090
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1788_end4455:
.annotate 'line', 2093
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1792_end4462 
.annotate 'line', 2094
.annotate 'line', 2095
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2096
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 2097
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 2100
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 2101
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 2102
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 2103
    $P5019 = _lex_param_1."arity"(1)
  unless1792_end4462:
.annotate 'line', 2105
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4463
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_44, $P5021
    set fb_tmp_210, pkg_viv_tmp_44
    repr_defined $I5003, fb_tmp_210
    unless $I5003 goto if1793_else4464 
    set $P5023, fb_tmp_210["%HANDLERS"]
    set $P5025, $P5023
    goto if1793_end4465
  if1793_else4464:
    null $P5024
    set $P5025, $P5024
  if1793_end4465:
    unless_null $P5025, vivi_17944466
    new $P5026, 'Hash'
    set pkg_viv_tmp_44["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17944466:
    unless_null $P5025, vivi_17954467
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17954467:
    set $P5020, $P5025
  fallback4463:
    set $S5005, _lex_param_2
.annotate 'line', 2106
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 2107
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2109
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 2111
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
.annotate 'line', 2112
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2114
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 2115
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 2116
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 2118
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5043 = $P5042."new"("null" :named("op"))
.annotate 'line', 2119
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5045 = $P5044."new"("null" :named("op"))
    $P5046 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"), $P5045 :named("moar"))
.annotate 'line', 2121
    $P5047 = "&default_for"("$")
    $P5048 = $P5028."new"($P5032, $P5046, $P5047)
    set $P5020[$S5005], $P5048
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_463_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2770
    .lex "$past", $P101 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2771
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4468
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_211, $P5003
    repr_defined $I5001, fb_tmp_211
    unless $I5001 goto if1796_else4469 
    set $P5005, fb_tmp_211["$W"]
    set $P5007, $P5005
    goto if1796_end4470
  if1796_else4469:
    null $P5006
    set $P5007, $P5006
  if1796_end4470:
    unless_null $P5007, vivi_17974471
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_17974471:
    unless_null $P5007, vivi_17984472
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17984472:
    set $P5002, $P5007
  fallback4468:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2772
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2774
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2776
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2778
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
.annotate 'line', 2780
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2781
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4473
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set fb_tmp_212, $P5021
    repr_defined $I5002, fb_tmp_212
    unless $I5002 goto if1799_else4474 
    set $P5023, fb_tmp_212["$W"]
    set $P5025, $P5023
    goto if1799_end4475
  if1799_else4474:
    null $P5024
    set $P5025, $P5024
  if1799_end4475:
    unless_null $P5025, vivi_18004476
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_18004476:
    unless_null $P5025, vivi_18014477
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_18014477:
    set $P5020, $P5025
  fallback4473:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2783
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2785
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2787
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2788
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5042 = $P5041."new"("savecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2791
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_465_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2796
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_464_1383915013.33774' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_213 
    .local pmc fb_tmp_216 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_213, _lex_param_1
    repr_defined $I5001, fb_tmp_213
    unless $I5001 goto if1802_else4478 
    set $P5008, fb_tmp_213[0]
    set $P5010, $P5008
    goto if1802_end4479
  if1802_else4478:
    null $P5009
    set $P5010, $P5009
  if1802_end4479:
    unless_null $P5010, vivi_18034480
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_18034480:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4499:
    unless $P5007, for_done4501
    shift $P5014, $P5007
  for_redo4500:
    .const 'Sub' $P5013 = 'cuid_464_1383915013.33774' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4499
  for_done4501:
.annotate 'line', 2808
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4502
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5016, $P5017
    set fb_tmp_216, $P5016
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if1814_else4503 
    set $P5018, fb_tmp_216["$W"]
    set $P5020, $P5018
    goto if1814_end4504
  if1814_else4503:
    null $P5019
    set $P5020, $P5019
  if1814_end4504:
    unless_null $P5020, vivi_18154505
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_18154505:
    unless_null $P5020, vivi_18164506
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_18164506:
    set $P5015, $P5020
  fallback4502:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1383915013.33774") :anon :lex :outer("cuid_465_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2799
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1806_end4486 
.annotate 'line', 2800
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1806_end4486:
    set $I5005, $I5003
    unless $I5003 goto if1805_end4484 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1805_end4484:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1804_end4482 
.annotate 'line', 2801
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1807_else4487 
    null $P5007
    set $P5009, $P5007
    goto if1807_end4488
  if1807_else4487:
.annotate 'line', 2803
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1807_end4488:
    $P5004."push"($P5009)
.annotate 'line', 2804
    find_lex $P5010, "$definednesses"
    set fb_tmp_214, _lex_param_0
    repr_defined $I5010, fb_tmp_214
    unless $I5010 goto if1809_else4491 
    set $P5011, fb_tmp_214["definedness"]
    set $P5013, $P5011
    goto if1809_end4492
  if1809_else4491:
    null $P5012
    set $P5013, $P5012
  if1809_end4492:
    unless_null $P5013, vivi_18104493
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_18104493:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1808_else4489 
    set $I5014, 1
    goto if1808_end4490
  if1808_else4489:
    set fb_tmp_215, _lex_param_0
    repr_defined $I5012, fb_tmp_215
    unless $I5012 goto if1812_else4496 
    set $P5015, fb_tmp_215["definedness"]
    set $P5017, $P5015
    goto if1812_end4497
  if1812_else4496:
    null $P5016
    set $P5017, $P5016
  if1812_end4497:
    unless_null $P5017, vivi_18134498
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_18134498:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1811_else4494 
    set $I5013, 2
    goto if1811_end4495
  if1811_else4494:
    set $I5013, 0
  if1811_end4495:
    set $I5014, $I5013
  if1808_end4490:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1804_end4482:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_466_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2811
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2812
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_472_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3332
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_469_1383915013.33774' 
    capture_lex $P5037 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_217 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4507
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1817_end4510 
.annotate 'line', 3334
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1817_end4510:
.annotate 'line', 3338
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3339
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
.annotate 'line', 3341
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1818_else4511 
.annotate 'line', 3346
.annotate 'line', 3347
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3349
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3351
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3353
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3355
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3357
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4513
    nqp_get_sc_object $P5020, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5019, $P5020
    set fb_tmp_217, $P5019
    repr_defined $I5003, fb_tmp_217
    unless $I5003 goto if1819_else4514 
    set $P5021, fb_tmp_217["$GLOBALish"]
    set $P5023, $P5021
    goto if1819_end4515
  if1819_else4514:
    null $P5022
    set $P5023, $P5022
  if1819_end4515:
    unless_null $P5023, vivi_18204516
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_18204516:
    unless_null $P5023, vivi_18214517
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_18214517:
    set $P5018, $P5023
  fallback4513:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3359
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3361
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1818_end4512
  if1818_else4511:
    .const 'Sub' $P5034 = 'cuid_469_1383915013.33774' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1818_end4512:
    $P5036 = "RETURN"($P102)
    goto lexotic_4508
  lexotic_4507:
    .get_results ($P5036)
  lexotic_4508:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1383915013.33774") :anon :lex :outer("cuid_472_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3367
    .const 'Sub' $P5053 = 'cuid_468_1383915013.33774' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_470_1383915013.33774' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_471_1383915013.33774' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_218 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 3369
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4520
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_218, $P5004
    repr_defined $I5001, fb_tmp_218
    unless $I5001 goto if1823_else4521 
    set $P5006, fb_tmp_218["$W"]
    set $P5008, $P5006
    goto if1823_end4522
  if1823_else4521:
    null $P5007
    set $P5008, $P5007
  if1823_end4522:
    unless_null $P5008, vivi_18244523
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_18244523:
    unless_null $P5008, vivi_18254524
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_18254524:
    set $P5003, $P5008
  fallback4520:
    find_lex $P5011, "@name"
    set fb_tmp_219, $P5011
    repr_defined $I5002, fb_tmp_219
    unless $I5002 goto if1826_else4525 
    set $P5012, fb_tmp_219[0]
    set $P5014, $P5012
    goto if1826_end4526
  if1826_else4525:
    null $P5013
    set $P5014, $P5013
  if1826_end4526:
    unless_null $P5014, vivi_18274527
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_18274527:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1822_else4518 
    .const 'Sub' $P5017 = 'cuid_468_1383915013.33774' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1822_end4519
  if1822_else4518:
.annotate 'line', 3378
.annotate 'line', 3379
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4535
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set fb_tmp_221, $P5021
    repr_defined $I5003, fb_tmp_221
    unless $I5003 goto if1833_else4536 
    set $P5023, fb_tmp_221["$GLOBALish"]
    set $P5025, $P5023
    goto if1833_end4537
  if1833_else4536:
    null $P5024
    set $P5025, $P5024
  if1833_end4537:
    unless_null $P5025, vivi_18344538
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_18344538:
    unless_null $P5025, vivi_18354539
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_18354539:
    set $P5020, $P5025
  fallback4535:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1822_end4519:
    find_lex $P5029, "@name"
    set fb_tmp_222, $P5029
    repr_defined $I5005, fb_tmp_222
    unless $I5005 goto if1837_else4542 
    set $P5030, fb_tmp_222[0]
    set $P5032, $P5030
    goto if1837_end4543
  if1837_else4542:
    null $P5031
    set $P5032, $P5031
  if1837_end4543:
    unless_null $P5032, vivi_18384544
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5032, $P5033
  vivi_18384544:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1836_end4541 
.annotate 'line', 3381
.annotate 'line', 3382
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1836_end4541:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4545:
    unless $P5038, for_done4547
    shift $P5041, $P5038
  for_redo4546:
    .const 'Sub' $P5040 = 'cuid_470_1383915013.33774' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4545
  for_done4547:
.annotate 'line', 3408
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1840_end4551 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1840_end4551:
    unless $I5008 goto if1839_else4548 
    .const 'Sub' $P5047 = 'cuid_471_1383915013.33774' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1839_end4549
  if1839_else4548:
.annotate 'line', 3423
.annotate 'line', 3424
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1839_end4549:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1383915013.33774") :anon :lex :outer("cuid_469_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3370
    .const 'Sub' $P5019 = 'cuid_467_1383915013.33774' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_220 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_18324534
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3371
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3372
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4528
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5006, $P5007
    set fb_tmp_220, $P5006
    repr_defined $I5001, fb_tmp_220
    unless $I5001 goto if1828_else4529 
    set $P5008, fb_tmp_220["$W"]
    set $P5010, $P5008
    goto if1828_end4530
  if1828_else4529:
    null $P5009
    set $P5010, $P5009
  if1828_end4530:
    unless_null $P5010, vivi_18294531
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_18294531:
    unless_null $P5010, vivi_18304532
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_18304532:
    set $P5005, $P5010
  fallback4528:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_18314533
  catch_handler_18324534:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_467_1383915013.33774' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_18314533
  skip_handler_18314533:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1383915013.33774") :anon :lex :outer("cuid_468_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3373
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3374
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1383915013.33774") :anon :lex :outer("cuid_469_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3384
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3385
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3386
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 3387
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3389
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3392
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3394
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3396
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3397
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3399
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3401
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3402
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3404
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
.annotate 'line', 3406
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    find_lex $P5031, "$path"
    $P5032 = $P5030."new"($P5031, $P101, "locallifetime" :named("op"))
    store_lex "$path", $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1383915013.33774") :anon :lex :outer("cuid_469_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3410
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3411
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3412
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3414
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_223, $P5008
    repr_defined $I5001, fb_tmp_223
    unless $I5001 goto if1841_else4552 
    set $P5009, fb_tmp_223[0]
    set $P5011, $P5009
    goto if1841_end4553
  if1841_else4552:
    null $P5010
    set $P5011, $P5010
  if1841_end4553:
    unless_null $P5011, vivi_18424554
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_18424554:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3416
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3418
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_224, $P5018
    repr_defined $I5002, fb_tmp_224
    unless $I5002 goto if1843_else4555 
    set $P5019, fb_tmp_224[1]
    set $P5021, $P5019
    goto if1843_end4556
  if1843_else4555:
    null $P5020
    set $P5021, $P5020
  if1843_end4556:
    unless_null $P5021, vivi_18444557
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_18444557:
.annotate 'line', 3420
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_248_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1786
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_225 
    unless_null _lex_param_1, fallback4560
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback4560:
    set fb_tmp_225, _lex_param_1
    repr_defined $I5001, fb_tmp_225
    unless $I5001 goto if1845_else4558 
    set $P5002, fb_tmp_225["comp_unit"]
    set $P5004, $P5002
    goto if1845_end4559
  if1845_else4558:
    null $P5003
    set $P5004, $P5003
  if1845_end4559:
    unless_null $P5004, vivi_18464561
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_18464561:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_249_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1788
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
.annotate 'line', 1789
    unless_null _lex_param_1, fallback4566
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback4566:
    set fb_tmp_226, _lex_param_1
    repr_defined $I5001, fb_tmp_226
    unless $I5001 goto if1848_else4564 
    set $P5002, fb_tmp_226["colonpair"]
    set $P5004, $P5002
    goto if1848_end4565
  if1848_else4564:
    null $P5003
    set $P5004, $P5003
  if1848_end4565:
    unless_null $P5004, vivi_18494567
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_18494567:
    unless $P5004 goto if1847_else4562 
    unless_null _lex_param_1, fallback4570
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback4570:
    set fb_tmp_227, _lex_param_1
    repr_defined $I5002, fb_tmp_227
    unless $I5002 goto if1850_else4568 
    set $P5007, fb_tmp_227["identifier"]
    set $P5009, $P5007
    goto if1850_end4569
  if1850_else4568:
    null $P5008
    set $P5009, $P5008
  if1850_end4569:
    unless_null $P5009, vivi_18514571
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_18514571:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1790
    unless_null _lex_param_1, fallback4574
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5011
  fallback4574:
    set fb_tmp_228, _lex_param_1
    repr_defined $I5003, fb_tmp_228
    unless $I5003 goto if1852_else4572 
    set $P5012, fb_tmp_228["colonpair"]
    set $P5014, $P5012
    goto if1852_end4573
  if1852_else4572:
    null $P5013
    set $P5014, $P5013
  if1852_end4573:
    unless_null $P5014, vivi_18534575
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_18534575:
    $P5016 = $P5014."ast"()
    $P5017 = $P5016."named"()
    set $S5007, $P5017
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1791
    unless_null _lex_param_1, fallback4578
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5018
  fallback4578:
    set fb_tmp_229, _lex_param_1
    repr_defined $I5004, fb_tmp_229
    unless $I5004 goto if1854_else4576 
    set $P5019, fb_tmp_229["colonpair"]
    set $P5021, $P5019
    goto if1854_end4577
  if1854_else4576:
    null $P5020
    set $P5021, $P5020
  if1854_end4577:
    unless_null $P5021, vivi_18554579
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_18554579:
    $P5023 = $P5021."ast"()
    $P5024 = "&colonpair_str"($P5023)
    set $S5008, $P5024
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1847_end4563
  if1847_else4562:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1847_end4563:
    $P5025 = _lex_param_1."!make"($S5010)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_250_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1805
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 1806
    unless_null _lex_param_1, fallback4582
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5004
  fallback4582:
    set fb_tmp_230, _lex_param_1
    repr_defined $I5001, fb_tmp_230
    unless $I5001 goto if1856_else4580 
    set $P5005, fb_tmp_230["statementlist"]
    set $P5007, $P5005
    goto if1856_end4581
  if1856_else4580:
    null $P5006
    set $P5007, $P5006
  if1856_end4581:
    unless_null $P5007, vivi_18574583
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_18574583:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1807
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4584
    nqp_get_sc_object $P5012, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5011, $P5012
    set fb_tmp_231, $P5011
    repr_defined $I5002, fb_tmp_231
    unless $I5002 goto if1858_else4585 
    set $P5013, fb_tmp_231["$W"]
    set $P5015, $P5013
    goto if1858_end4586
  if1858_else4585:
    null $P5014
    set $P5015, $P5014
  if1858_end4586:
    unless_null $P5015, vivi_18594587
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_18594587:
    unless_null $P5015, vivi_18604588
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18604588:
    set $P5010, $P5015
  fallback4584:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4591
    nqp_get_sc_object $P5021, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5020, $P5021
    set fb_tmp_232, $P5020
    repr_defined $I5003, fb_tmp_232
    unless $I5003 goto if1862_else4592 
    set $P5022, fb_tmp_232["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1862_end4593
  if1862_else4592:
    null $P5023
    set $P5024, $P5023
  if1862_end4593:
    unless_null $P5024, vivi_18634594
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_18634594:
    unless_null $P5024, vivi_18644595
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18644595:
    set $P5019, $P5024
  fallback4591:
    if $P5019 goto unless1861_end4590 
.annotate 'line', 1812
.annotate 'line', 1813
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1861_end4590:
.annotate 'line', 1820
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4598
    nqp_get_sc_object $P5034, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5033, $P5034
    set fb_tmp_233, $P5033
    repr_defined $I5004, fb_tmp_233
    unless $I5004 goto if1866_else4599 
    set $P5035, fb_tmp_233["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1866_end4600
  if1866_else4599:
    null $P5036
    set $P5037, $P5036
  if1866_end4600:
    unless_null $P5037, vivi_18674601
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_18674601:
    unless_null $P5037, vivi_18684602
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18684602:
    set $P5032, $P5037
  fallback4598:
    unless $P5032 goto if1865_end4597 
.annotate 'line', 1821
.annotate 'line', 1822
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 1824
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1825
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 1826
    find_dynamic_lex $P5044, "$*MAIN_SUB"
    unless_null $P5044, fallback4603
    nqp_get_sc_object $P5046, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5045, $P5046
    set fb_tmp_234, $P5045
    repr_defined $I5005, fb_tmp_234
    unless $I5005 goto if1869_else4604 
    set $P5047, fb_tmp_234["$MAIN_SUB"]
    set $P5049, $P5047
    goto if1869_end4605
  if1869_else4604:
    null $P5048
    set $P5049, $P5048
  if1869_end4605:
    unless_null $P5049, vivi_18704606
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_18704606:
    unless_null $P5049, vivi_18714607
    die "Contextual $*MAIN_SUB not found"
    box $P5051, "Contextual $*MAIN_SUB not found"
    set $P5049, $P5051
  vivi_18714607:
    set $P5044, $P5049
  fallback4603:
    $P5052 = $P5044."name"()
    set $S5002, $P5052
    concat $S5001, "&", $S5002
.annotate 'line', 1827
    nqp_get_sc_object $P5053, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5054 = $P5053."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5055 = $P5043."new"($P5054, "call" :named("op"), $S5001 :named("name"))
    $P5056 = $P5040."new"($P5042, $P5055, "if" :named("op"))
    $P5057 = $P101."push"($P5056)
  if1865_end4597:
.annotate 'line', 1833
    $P102."push"($P101)
.annotate 'line', 1836
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4608
    nqp_get_sc_object $P5060, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5059, $P5060
    set fb_tmp_235, $P5059
    repr_defined $I5006, fb_tmp_235
    unless $I5006 goto if1872_else4609 
    set $P5061, fb_tmp_235["$W"]
    set $P5063, $P5061
    goto if1872_end4610
  if1872_else4609:
    null $P5062
    set $P5063, $P5062
  if1872_end4610:
    unless_null $P5063, vivi_18734611
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5063, $P5064
  vivi_18734611:
    unless_null $P5063, vivi_18744612
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_18744612:
    set $P5058, $P5063
  fallback4608:
    $P5066 = $P5058."libs"()
    $P102."push"($P5066)
.annotate 'line', 1839
    nqp_get_sc_object $P5067, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 120
.annotate 'line', 1843
    find_dynamic_lex $P5068, "$*W"
    unless_null $P5068, fallback4613
    nqp_get_sc_object $P5070, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5069, $P5070
    set fb_tmp_236, $P5069
    repr_defined $I5007, fb_tmp_236
    unless $I5007 goto if1875_else4614 
    set $P5071, fb_tmp_236["$W"]
    set $P5073, $P5071
    goto if1875_end4615
  if1875_else4614:
    null $P5072
    set $P5073, $P5072
  if1875_end4615:
    unless_null $P5073, vivi_18764616
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5073, $P5074
  vivi_18764616:
    unless_null $P5073, vivi_18774617
    die "Contextual $*W not found"
    box $P5075, "Contextual $*W not found"
    set $P5073, $P5075
  vivi_18774617:
    set $P5068, $P5073
  fallback4613:
    $P5076 = $P5068."sc"()
.annotate 'line', 1844
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback4618
    nqp_get_sc_object $P5079, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5078, $P5079
    set fb_tmp_237, $P5078
    repr_defined $I5008, fb_tmp_237
    unless $I5008 goto if1878_else4619 
    set $P5080, fb_tmp_237["$W"]
    set $P5082, $P5080
    goto if1878_end4620
  if1878_else4619:
    null $P5081
    set $P5082, $P5081
  if1878_end4620:
    unless_null $P5082, vivi_18794621
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_18794621:
    unless_null $P5082, vivi_18804622
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_18804622:
    set $P5077, $P5082
  fallback4618:
    $P5085 = $P5077."code_ref_blocks"()
.annotate 'line', 1845
    find_dynamic_lex $P5086, "$*W"
    unless_null $P5086, fallback4623
    nqp_get_sc_object $P5088, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5087, $P5088
    set fb_tmp_238, $P5087
    repr_defined $I5009, fb_tmp_238
    unless $I5009 goto if1881_else4624 
    set $P5089, fb_tmp_238["$W"]
    set $P5091, $P5089
    goto if1881_end4625
  if1881_else4624:
    null $P5090
    set $P5091, $P5090
  if1881_end4625:
    unless_null $P5091, vivi_18824626
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5091, $P5092
  vivi_18824626:
    unless_null $P5091, vivi_18834627
    die "Contextual $*W not found"
    box $P5093, "Contextual $*W not found"
    set $P5091, $P5093
  vivi_18834627:
    set $P5086, $P5091
  fallback4623:
    $P5094 = $P5086."is_precompilation_mode"()
.annotate 'line', 1846
    find_dynamic_lex $P5095, "$*W"
    unless_null $P5095, fallback4628
    nqp_get_sc_object $P5097, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5096, $P5097
    set fb_tmp_239, $P5096
    repr_defined $I5010, fb_tmp_239
    unless $I5010 goto if1884_else4629 
    set $P5098, fb_tmp_239["$W"]
    set $P5100, $P5098
    goto if1884_end4630
  if1884_else4629:
    null $P5099
    set $P5100, $P5099
  if1884_end4630:
    unless_null $P5100, vivi_18854631
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5100, $P5101
  vivi_18854631:
    unless_null $P5100, vivi_18864632
    die "Contextual $*W not found"
    box $P5102, "Contextual $*W not found"
    set $P5100, $P5102
  vivi_18864632:
    set $P5095, $P5100
  fallback4628:
    $P5103 = $P5095."load_dependency_tasks"()
.annotate 'line', 1847
    find_dynamic_lex $P5104, "$*W"
    unless_null $P5104, fallback4633
    nqp_get_sc_object $P5106, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5105, $P5106
    set fb_tmp_240, $P5105
    repr_defined $I5011, fb_tmp_240
    unless $I5011 goto if1887_else4634 
    set $P5107, fb_tmp_240["$W"]
    set $P5109, $P5107
    goto if1887_end4635
  if1887_else4634:
    null $P5108
    set $P5109, $P5108
  if1887_end4635:
    unless_null $P5109, vivi_18884636
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5109, $P5110
  vivi_18884636:
    unless_null $P5109, vivi_18894637
    die "Contextual $*W not found"
    box $P5111, "Contextual $*W not found"
    set $P5109, $P5111
  vivi_18894637:
    set $P5104, $P5109
  fallback4633:
    $P5112 = $P5104."fixup_tasks"()
.annotate 'line', 1852
    nqp_get_sc_object $P5113, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 1854
    nqp_get_sc_object $P5114, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    $P5115 = $P5114."new"($P102 :named("value"))
    $P5116 = $P5113."new"($P5115, "call" :named("op"))
.annotate 'line', 1859
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 1860
    nqp_get_sc_object $P5118, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 1862
    nqp_get_sc_object $P5119, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 60
    $P5120 = $P5119."new"($P102 :named("value"))
.annotate 'line', 1863
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5122 = $P5121."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5123 = $P5118."new"($P5120, $P5122, "call" :named("op"))
    $P5124 = $P5117."new"($P5123)
    $P5125 = $P5067."new"($P102, "nqp" :named("hll"), $P5076 :named("sc"), $P5085 :named("code_ref_blocks"), $P5094 :named("compilation_mode"), $P5103 :named("pre_deserialize"), $P5112 :named("post_deserialize"), $P5116 :named("load"), $P5124 :named("main"))
    set $P103, $P5125
.annotate 'line', 1872
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback4638
    nqp_get_sc_object $P5128, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5127, $P5128
    set fb_tmp_241, $P5127
    repr_defined $I5012, fb_tmp_241
    unless $I5012 goto if1890_else4639 
    set $P5129, fb_tmp_241["$W"]
    set $P5131, $P5129
    goto if1890_end4640
  if1890_else4639:
    null $P5130
    set $P5131, $P5130
  if1890_end4640:
    unless_null $P5131, vivi_18914641
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5131, $P5132
  vivi_18914641:
    unless_null $P5131, vivi_18924642
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_18924642:
    set $P5126, $P5131
  fallback4638:
    $P5126."cleanup"()
.annotate 'line', 1874
    $P5134 = _lex_param_1."!make"($P103)
    .return ($P5134) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_251_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1877
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_473_1383915013.33774' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1878
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4647
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5004
  fallback4647:
    set fb_tmp_242, _lex_param_1
    repr_defined $I5001, fb_tmp_242
    unless $I5001 goto if1894_else4645 
    set $P5005, fb_tmp_242["statement"]
    set $P5007, $P5005
    goto if1894_end4646
  if1894_else4645:
    null $P5006
    set $P5007, $P5006
  if1894_end4646:
    unless_null $P5007, vivi_18954648
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_18954648:
    unless $P5007 goto if1893_else4643 
.annotate 'line', 1879
    unless_null _lex_param_1, fallback4651
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback4651:
    set fb_tmp_243, _lex_param_1
    repr_defined $I5002, fb_tmp_243
    unless $I5002 goto if1896_else4649 
    set $P5013, fb_tmp_243["statement"]
    set $P5015, $P5013
    goto if1896_end4650
  if1896_else4649:
    null $P5014
    set $P5015, $P5014
  if1896_end4650:
    unless_null $P5015, vivi_18974652
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_18974652:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4671:
    unless $P5011, for_done4673
    shift $P5018, $P5011
  for_redo4672:
    .const 'Sub' $P5017 = 'cuid_473_1383915013.33774' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4671
  for_done4673:
    goto if1893_end4644
  if1893_else4643:
.annotate 'line', 1888
.annotate 'line', 1889
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1893_end4644:
.annotate 'line', 1891
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1383915013.33774") :anon :lex :outer("cuid_251_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1880
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1881
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_244, $P101
    repr_defined $I5002, fb_tmp_244
    unless $I5002 goto if1899_else4655 
    set $P5003, fb_tmp_244["sink"]
    set $P5005, $P5003
    goto if1899_end4656
  if1899_else4655:
    null $P5004
    set $P5005, $P5004
  if1899_end4656:
    unless_null $P5005, vivi_19004657
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_19004657:
    defined $I5001, $P5005
    unless $I5001 goto if1898_end4654 
    set fb_tmp_245, $P101
    repr_defined $I5003, fb_tmp_245
    unless $I5003 goto if1901_else4658 
    set $P5007, fb_tmp_245["sink"]
    set $P5009, $P5007
    goto if1901_end4659
  if1901_else4658:
    null $P5008
    set $P5009, $P5008
  if1901_end4659:
    unless_null $P5009, vivi_19024660
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_19024660:
    set $P101, $P5009
  if1898_end4654:
    set fb_tmp_246, $P101
    repr_defined $I5004, fb_tmp_246
    unless $I5004 goto if1904_else4663 
    set $P5011, fb_tmp_246["bareblock"]
    set $P5013, $P5011
    goto if1904_end4664
  if1904_else4663:
    null $P5012
    set $P5013, $P5012
  if1904_end4664:
    unless_null $P5013, vivi_19054665
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_19054665:
    unless $P5013 goto if1903_end4662 
.annotate 'line', 1883
    set fb_tmp_247, $P101
    repr_defined $I5005, fb_tmp_247
    unless $I5005 goto if1906_else4666 
    set $P5015, fb_tmp_247[0]
    set $P5017, $P5015
    goto if1906_end4667
  if1906_else4666:
    null $P5016
    set $P5017, $P5016
  if1906_end4667:
    unless_null $P5017, vivi_19074668
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_19074668:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1903_end4662:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1908_end4670 
.annotate 'line', 1884
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1908_end4670:
.annotate 'line', 1885
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_252_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_6 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_474_1383915013.33774' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    if haz_param_6, default4729
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_2, $P5023
  default4729:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4678
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback4678:
    set fb_tmp_248, _lex_param_1
    repr_defined $I5001, fb_tmp_248
    unless $I5001 goto if1910_else4676 
    set $P5003, fb_tmp_248["EXPR"]
    set $P5005, $P5003
    goto if1910_end4677
  if1910_else4676:
    null $P5004
    set $P5005, $P5004
  if1910_end4677:
    unless_null $P5005, vivi_19114679
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_19114679:
    unless $P5005 goto if1909_else4674 
    .const 'Sub' $P5007 = 'cuid_474_1383915013.33774' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1909_end4675
  if1909_else4674:
    unless_null _lex_param_1, fallback4723
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5009
  fallback4723:
    set fb_tmp_259, _lex_param_1
    repr_defined $I5002, fb_tmp_259
    unless $I5002 goto if1936_else4721 
    set $P5010, fb_tmp_259["statement_control"]
    set $P5012, $P5010
    goto if1936_end4722
  if1936_else4721:
    null $P5011
    set $P5012, $P5011
  if1936_end4722:
    unless_null $P5012, vivi_19374724
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_19374724:
    unless $P5012 goto if1935_else4719 
.annotate 'line', 1917
    unless_null _lex_param_1, fallback4727
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5014
  fallback4727:
    set fb_tmp_260, _lex_param_1
    repr_defined $I5003, fb_tmp_260
    unless $I5003 goto if1938_else4725 
    set $P5015, fb_tmp_260["statement_control"]
    set $P5017, $P5015
    goto if1938_end4726
  if1938_else4725:
    null $P5016
    set $P5017, $P5016
  if1938_end4726:
    unless_null $P5017, vivi_19394728
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_19394728:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1935_end4720
  if1935_else4719:
.annotate 'line', 1918
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1935_end4720:
  if1909_end4675:
.annotate 'line', 1919
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1383915013.33774") :anon :lex :outer("cuid_252_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1896
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    .local pmc fb_tmp_252 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc fb_tmp_258 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4682
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  fallback4682:
    set fb_tmp_249, $P5003
    repr_defined $I5001, fb_tmp_249
    unless $I5001 goto if1912_else4680 
    set $P5005, fb_tmp_249["statement_mod_cond"]
    set $P5007, $P5005
    goto if1912_end4681
  if1912_else4680:
    null $P5006
    set $P5007, $P5006
  if1912_end4681:
    unless_null $P5007, vivi_19134683
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_19134683:
    set $P101, $P5007
    find_lex $P5009, "$/"
    unless_null $P5009, fallback4686
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  fallback4686:
    set fb_tmp_250, $P5009
    repr_defined $I5002, fb_tmp_250
    unless $I5002 goto if1914_else4684 
    set $P5011, fb_tmp_250["statement_mod_loop"]
    set $P5013, $P5011
    goto if1914_end4685
  if1914_else4684:
    null $P5012
    set $P5013, $P5012
  if1914_end4685:
    unless_null $P5013, vivi_19154687
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_19154687:
    set $P102, $P5013
.annotate 'line', 1899
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4690
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  fallback4690:
    set fb_tmp_251, $P5015
    repr_defined $I5003, fb_tmp_251
    unless $I5003 goto if1916_else4688 
    set $P5017, fb_tmp_251["EXPR"]
    set $P5019, $P5017
    goto if1916_end4689
  if1916_else4688:
    null $P5018
    set $P5019, $P5018
  if1916_end4689:
    unless_null $P5019, vivi_19174691
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_19174691:
    $P5021 = $P5019."ast"()
    store_lex "$past", $P5021
    unless $P101 goto if1918_end4693 
.annotate 'line', 1900
.annotate 'line', 1901
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    set fb_tmp_252, $P101
    repr_defined $I5004, fb_tmp_252
    unless $I5004 goto if1919_else4694 
    set $P5023, fb_tmp_252["cond"]
    set $P5025, $P5023
    goto if1919_end4695
  if1919_else4694:
    null $P5024
    set $P5025, $P5024
  if1919_end4695:
    unless_null $P5025, vivi_19204696
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_19204696:
    $P5027 = $P5025."ast"()
    find_lex $P5028, "$past"
    set fb_tmp_253, $P101
    repr_defined $I5005, fb_tmp_253
    unless $I5005 goto if1921_else4697 
    set $P5029, fb_tmp_253["sym"]
    set $P5031, $P5029
    goto if1921_end4698
  if1921_else4697:
    null $P5030
    set $P5031, $P5030
  if1921_end4698:
    unless_null $P5031, vivi_19224699
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_19224699:
    set $S5001, $P5031
    find_lex $P5033, "$/"
    $P5034 = $P5022."new"($P5027, $P5028, $S5001 :named("op"), $P5033 :named("node"))
    store_lex "$past", $P5034
  if1918_end4693:
    set $P5073, $P102
    unless $P102 goto if1923_end4701 
.annotate 'line', 1903
    set fb_tmp_254, $P102
    repr_defined $I5007, fb_tmp_254
    unless $I5007 goto if1925_else4704 
    set $P5035, fb_tmp_254["sym"]
    set $P5037, $P5035
    goto if1925_end4705
  if1925_else4704:
    null $P5036
    set $P5037, $P5036
  if1925_end4705:
    unless_null $P5037, vivi_19264706
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_19264706:
    set $S5002, $P5037
    iseq $I5006, $S5002, "for"
    unless $I5006 goto if1924_else4702 
.annotate 'line', 1904
.annotate 'line', 1905
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 108
.annotate 'line', 1906
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5041 = $P5040."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5042, "$past"
    $P5043 = $P5039."new"($P5041, $P5042, "immediate" :named("blocktype"))
    store_lex "$past", $P5043
.annotate 'line', 1908
    find_lex $P5044, "$past"
    $P5044."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1909
    find_lex $P5045, "$past"
    $P5045."arity"(1)
.annotate 'line', 1910
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    set fb_tmp_255, $P102
    repr_defined $I5008, fb_tmp_255
    unless $I5008 goto if1927_else4707 
    set $P5047, fb_tmp_255["cond"]
    set $P5049, $P5047
    goto if1927_end4708
  if1927_else4707:
    null $P5048
    set $P5049, $P5048
  if1927_end4708:
    unless_null $P5049, vivi_19284709
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_19284709:
    $P5051 = $P5049."ast"()
    find_lex $P5052, "$past"
    set fb_tmp_256, $P102
    repr_defined $I5009, fb_tmp_256
    unless $I5009 goto if1929_else4710 
    set $P5053, fb_tmp_256["sym"]
    set $P5055, $P5053
    goto if1929_end4711
  if1929_else4710:
    null $P5054
    set $P5055, $P5054
  if1929_end4711:
    unless_null $P5055, vivi_19304712
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5055, $P5056
  vivi_19304712:
    set $S5003, $P5055
    find_lex $P5057, "$/"
    $P5058 = $P5046."new"($P5051, $P5052, $S5003 :named("op"), $P5057 :named("node"))
    store_lex "$past", $P5058
    set $P5072, $P5058
    goto if1924_end4703
  if1924_else4702:
.annotate 'line', 1912
.annotate 'line', 1913
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    set fb_tmp_257, $P102
    repr_defined $I5010, fb_tmp_257
    unless $I5010 goto if1931_else4713 
    set $P5060, fb_tmp_257["cond"]
    set $P5062, $P5060
    goto if1931_end4714
  if1931_else4713:
    null $P5061
    set $P5062, $P5061
  if1931_end4714:
    unless_null $P5062, vivi_19324715
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5062, $P5063
  vivi_19324715:
    $P5064 = $P5062."ast"()
    find_lex $P5065, "$past"
    set fb_tmp_258, $P102
    repr_defined $I5011, fb_tmp_258
    unless $I5011 goto if1933_else4716 
    set $P5066, fb_tmp_258["sym"]
    set $P5068, $P5066
    goto if1933_end4717
  if1933_else4716:
    null $P5067
    set $P5068, $P5067
  if1933_end4717:
    unless_null $P5068, vivi_19344718
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5068, $P5069
  vivi_19344718:
    set $S5004, $P5068
    find_lex $P5070, "$/"
    $P5071 = $P5059."new"($P5064, $P5065, $S5004 :named("op"), $P5070 :named("node"))
    store_lex "$past", $P5071
    set $P5072, $P5071
  if1924_end4703:
    set $P5073, $P5072
  if1923_end4701:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_253_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1922
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
.annotate 'line', 1923
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    unless_null _lex_param_1, fallback4732
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback4732:
    set fb_tmp_261, _lex_param_1
    repr_defined $I5001, fb_tmp_261
    unless $I5001 goto if1940_else4730 
    set $P5003, fb_tmp_261["EXPR"]
    set $P5005, $P5003
    goto if1940_end4731
  if1940_else4730:
    null $P5004
    set $P5005, $P5004
  if1940_end4731:
    unless_null $P5005, vivi_19414733
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_19414733:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4736
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback4736:
    set fb_tmp_262, _lex_param_1
    repr_defined $I5002, fb_tmp_262
    unless $I5002 goto if1942_else4734 
    set $P5009, fb_tmp_262["pblock"]
    set $P5011, $P5009
    goto if1942_end4735
  if1942_else4734:
    null $P5010
    set $P5011, $P5010
  if1942_end4735:
    unless_null $P5011, vivi_19434737
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_19434737:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_254_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1926
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_263 
.annotate 'line', 1927
    unless_null _lex_param_1, fallback4740
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback4740:
    set fb_tmp_263, _lex_param_1
    repr_defined $I5001, fb_tmp_263
    unless $I5001 goto if1944_else4738 
    set $P5002, fb_tmp_263["blockoid"]
    set $P5004, $P5002
    goto if1944_end4739
  if1944_else4738:
    null $P5003
    set $P5004, $P5003
  if1944_end4739:
    unless_null $P5004, vivi_19454741
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_19454741:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_255_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1930
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_264 
.annotate 'line', 1931
    unless_null _lex_param_1, fallback4744
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback4744:
    set fb_tmp_264, _lex_param_1
    repr_defined $I5001, fb_tmp_264
    unless $I5001 goto if1946_else4742 
    set $P5002, fb_tmp_264["blockoid"]
    set $P5004, $P5002
    goto if1946_end4743
  if1946_else4742:
    null $P5003
    set $P5004, $P5003
  if1946_end4743:
    unless_null $P5004, vivi_19474745
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_19474745:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_256_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1934
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_476_1383915013.33774' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_272 
    .local pmc fb_tmp_273 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1935
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4746
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_265, $P5003
    repr_defined $I5001, fb_tmp_265
    unless $I5001 goto if1948_else4747 
    set $P5005, fb_tmp_265["$W"]
    set $P5007, $P5005
    goto if1948_end4748
  if1948_else4747:
    null $P5006
    set $P5007, $P5006
  if1948_end4748:
    unless_null $P5007, vivi_19494749
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_19494749:
    unless_null $P5007, vivi_19504750
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19504750:
    set $P5002, $P5007
  fallback4746:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4755
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5011
  fallback4755:
    set fb_tmp_266, _lex_param_1
    repr_defined $I5002, fb_tmp_266
    unless $I5002 goto if1952_else4753 
    set $P5012, fb_tmp_266["statementlist"]
    set $P5014, $P5012
    goto if1952_end4754
  if1952_else4753:
    null $P5013
    set $P5014, $P5013
  if1952_end4754:
    unless_null $P5014, vivi_19534756
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_19534756:
    unless $P5014 goto if1951_else4751 
    .const 'Sub' $P5016 = 'cuid_476_1383915013.33774' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1951_end4752
  if1951_else4751:
.annotate 'line', 1950
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4790
    nqp_get_sc_object $P5020, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5019, $P5020
    set fb_tmp_272, $P5019
    repr_defined $I5003, fb_tmp_272
    unless $I5003 goto if1971_else4791 
    set $P5021, fb_tmp_272["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1971_end4792
  if1971_else4791:
    null $P5022
    set $P5023, $P5022
  if1971_end4792:
    unless_null $P5023, vivi_19724793
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_19724793:
    unless_null $P5023, vivi_19734794
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19734794:
    set $P5018, $P5023
  fallback4790:
    unless $P5018 goto if1970_end4789 
.annotate 'line', 1951
.annotate 'line', 1952
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1970_end4789:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1955
    unless_null _lex_param_1, fallback4797
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5029
  fallback4797:
    set fb_tmp_273, _lex_param_1
    repr_defined $I5004, fb_tmp_273
    unless $I5004 goto if1974_else4795 
    set $P5030, fb_tmp_273["you_are_here"]
    set $P5032, $P5030
    goto if1974_end4796
  if1974_else4795:
    null $P5031
    set $P5032, $P5031
  if1974_end4796:
    unless_null $P5032, vivi_19754798
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5032, $P5033
  vivi_19754798:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1951_end4752:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1383915013.33774") :anon :lex :outer("cuid_256_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1936
    .const 'Sub' $P5055 = 'cuid_475_1383915013.33774' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_268 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_269 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_270 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_271 
    .local pmc pkg_viv_tmp_35 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1937
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4759
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback4759:
    set fb_tmp_267, $P5002
    repr_defined $I5001, fb_tmp_267
    unless $I5001 goto if1954_else4757 
    set $P5004, fb_tmp_267["statementlist"]
    set $P5006, $P5004
    goto if1954_end4758
  if1954_else4757:
    null $P5005
    set $P5006, $P5005
  if1954_end4758:
    unless_null $P5006, vivi_19554760
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_19554760:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4763
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_33, $P5010
    set fb_tmp_268, pkg_viv_tmp_33
    repr_defined $I5002, fb_tmp_268
    unless $I5002 goto if1957_else4764 
    set $P5012, fb_tmp_268["%HANDLERS"]
    set $P5014, $P5012
    goto if1957_end4765
  if1957_else4764:
    null $P5013
    set $P5014, $P5013
  if1957_end4765:
    unless_null $P5014, vivi_19584766
    new $P5015, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19584766:
    unless_null $P5014, vivi_19594767
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19594767:
    set $P5009, $P5014
  fallback4763:
    unless $P5009 goto if1956_end4762 
.annotate 'line', 1938
.annotate 'line', 1939
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4768
    nqp_get_sc_object $P5024, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_34, $P5023
    set fb_tmp_269, pkg_viv_tmp_34
    repr_defined $I5003, fb_tmp_269
    unless $I5003 goto if1960_else4769 
    set $P5025, fb_tmp_269["%HANDLERS"]
    set $P5027, $P5025
    goto if1960_end4770
  if1960_else4769:
    null $P5026
    set $P5027, $P5026
  if1960_end4770:
    unless_null $P5027, vivi_19614771
    new $P5028, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19614771:
    unless_null $P5027, vivi_19624772
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19624772:
    set $P5022, $P5027
  fallback4768:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4773:
    unless $P5021, for_done4775
    shift $P5031, $P5021
  for_redo4774:
    .const 'Sub' $P5030 = 'cuid_475_1383915013.33774' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4773
  for_done4775:
  if1956_end4762:
.annotate 'line', 1945
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1946
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4778
    nqp_get_sc_object $P5037, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_36, $P5036
    set fb_tmp_270, pkg_viv_tmp_36
    repr_defined $I5004, fb_tmp_270
    unless $I5004 goto if1964_else4779 
    set $P5038, fb_tmp_270["%HANDLERS"]
    set $P5040, $P5038
    goto if1964_end4780
  if1964_else4779:
    null $P5039
    set $P5040, $P5039
  if1964_end4780:
    unless_null $P5040, vivi_19654781
    new $P5041, 'Hash'
    set pkg_viv_tmp_36["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19654781:
    unless_null $P5040, vivi_19664782
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19664782:
    set $P5035, $P5040
  fallback4778:
    unless $P5035 goto if1963_end4777 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4783
    nqp_get_sc_object $P5046, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_35, $P5045
    set fb_tmp_271, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_271
    unless $I5005 goto if1967_else4784 
    set $P5047, fb_tmp_271["%HANDLERS"]
    set $P5049, $P5047
    goto if1967_end4785
  if1967_else4784:
    null $P5048
    set $P5049, $P5048
  if1967_end4785:
    unless_null $P5049, vivi_19684786
    new $P5050, 'Hash'
    set pkg_viv_tmp_35["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19684786:
    unless_null $P5049, vivi_19694787
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19694787:
    set $P5044, $P5049
  fallback4783:
    set $P5043["handlers"], $P5044
  if1963_end4777:
.annotate 'line', 1948
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1383915013.33774") :anon :lex :outer("cuid_476_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1940
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1941
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1942
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_257_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1959
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_274 
.annotate 'line', 1960
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4799
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_274, $P5002
    repr_defined $I5001, fb_tmp_274
    unless $I5001 goto if1976_else4800 
    set $P5004, fb_tmp_274["$W"]
    set $P5006, $P5004
    goto if1976_end4801
  if1976_else4800:
    null $P5005
    set $P5006, $P5005
  if1976_end4801:
    unless_null $P5006, vivi_19774802
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_19774802:
    unless_null $P5006, vivi_19784803
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19784803:
    set $P5001, $P5006
  fallback4799:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_258_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1963
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_478_1383915013.33774' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc fb_tmp_277 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_295 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4810
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_37, $P5002
    set fb_tmp_277, pkg_viv_tmp_37
    repr_defined $I5004, fb_tmp_277
    unless $I5004 goto if1982_else4811 
    set $P5004, fb_tmp_277["%COMPILING"]
    set $P5006, $P5004
    goto if1982_end4812
  if1982_else4811:
    null $P5005
    set $P5006, $P5005
  if1982_end4812:
    unless_null $P5006, vivi_19834813
    new $P5007, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19834813:
    unless_null $P5006, vivi_19844814
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19844814:
    set $P5001, $P5006
  fallback4810:
    set fb_tmp_276, $P5001
    repr_defined $I5003, fb_tmp_276
    unless $I5003 goto if1981_else4808 
    set $P5009, fb_tmp_276["%?OPTIONS"]
    set $P5011, $P5009
    goto if1981_end4809
  if1981_else4808:
    null $P5010
    set $P5011, $P5010
  if1981_end4809:
    unless_null $P5011, vivi_19854815
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_19854815:
    set fb_tmp_275, $P5011
    repr_defined $I5002, fb_tmp_275
    unless $I5002 goto if1980_else4806 
    set $P5013, fb_tmp_275["outer_ctx"]
    set $P5015, $P5013
    goto if1980_end4807
  if1980_else4806:
    null $P5014
    set $P5015, $P5014
  if1980_end4807:
    unless_null $P5015, vivi_19864816
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_19864816:
    defined $I5001, $P5015
    if $I5001 goto unless1979_end4805 
    .const 'Sub' $P5017 = 'cuid_478_1383915013.33774' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1979_end4805:
.annotate 'line', 1984
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4893
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set fb_tmp_295, $P5021
    repr_defined $I5005, fb_tmp_295
    unless $I5005 goto if2033_else4894 
    set $P5023, fb_tmp_295["$W"]
    set $P5025, $P5023
    goto if2033_end4895
  if2033_else4894:
    null $P5024
    set $P5025, $P5024
  if2033_end4895:
    unless_null $P5025, vivi_20344896
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_20344896:
    unless_null $P5025, vivi_20354897
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_20354897:
    set $P5020, $P5025
  fallback4893:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1383915013.33774") :anon :lex :outer("cuid_258_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1964
    .const 'Sub' $P5100 = 'cuid_477_1383915013.33774' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc fb_tmp_284 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 1967
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4817
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_278, $P5003
    repr_defined $I5001, fb_tmp_278
    unless $I5001 goto if1987_else4818 
    set $P5005, fb_tmp_278["$W"]
    set $P5007, $P5005
    goto if1987_end4819
  if1987_else4818:
    null $P5006
    set $P5007, $P5006
  if1987_end4819:
    unless_null $P5007, vivi_19884820
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_19884820:
    unless_null $P5007, vivi_19894821
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19894821:
    set $P5002, $P5007
  fallback4817:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4827
    nqp_get_sc_object $P5013, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_38, $P5012
    set fb_tmp_281, pkg_viv_tmp_38
    repr_defined $I5005, fb_tmp_281
    unless $I5005 goto if1992_else4828 
    set $P5014, fb_tmp_281["%COMPILING"]
    set $P5016, $P5014
    goto if1992_end4829
  if1992_else4828:
    null $P5015
    set $P5016, $P5015
  if1992_end4829:
    unless_null $P5016, vivi_19934830
    new $P5017, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19934830:
    unless_null $P5016, vivi_19944831
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19944831:
    set $P5011, $P5016
  fallback4827:
    set fb_tmp_280, $P5011
    repr_defined $I5004, fb_tmp_280
    unless $I5004 goto if1991_else4825 
    set $P5019, fb_tmp_280["%?OPTIONS"]
    set $P5021, $P5019
    goto if1991_end4826
  if1991_else4825:
    null $P5020
    set $P5021, $P5020
  if1991_end4826:
    unless_null $P5021, vivi_19954832
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_19954832:
    set fb_tmp_279, $P5021
    repr_defined $I5003, fb_tmp_279
    unless $I5003 goto if1990_else4823 
    set $P5023, fb_tmp_279["setting"]
    set $P5025, $P5023
    goto if1990_end4824
  if1990_else4823:
    null $P5024
    set $P5025, $P5024
  if1990_end4824:
    unless_null $P5025, vivi_19964833
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_19964833:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4822
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4822:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4840
    nqp_get_sc_object $P5031, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_39, $P5030
    set fb_tmp_284, pkg_viv_tmp_39
    repr_defined $I5009, fb_tmp_284
    unless $I5009 goto if2000_else4841 
    set $P5032, fb_tmp_284["%COMPILING"]
    set $P5034, $P5032
    goto if2000_end4842
  if2000_else4841:
    null $P5033
    set $P5034, $P5033
  if2000_end4842:
    unless_null $P5034, vivi_20014843
    new $P5035, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_20014843:
    unless_null $P5034, vivi_20024844
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_20024844:
    set $P5029, $P5034
  fallback4840:
    set fb_tmp_283, $P5029
    repr_defined $I5008, fb_tmp_283
    unless $I5008 goto if1999_else4838 
    set $P5037, fb_tmp_283["%?OPTIONS"]
    set $P5039, $P5037
    goto if1999_end4839
  if1999_else4838:
    null $P5038
    set $P5039, $P5038
  if1999_end4839:
    unless_null $P5039, vivi_20034845
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5039, $P5040
  vivi_20034845:
    set fb_tmp_282, $P5039
    repr_defined $I5007, fb_tmp_282
    unless $I5007 goto if1998_else4836 
    set $P5041, fb_tmp_282["setting"]
    set $P5043, $P5041
    goto if1998_end4837
  if1998_else4836:
    null $P5042
    set $P5043, $P5042
  if1998_end4837:
    unless_null $P5043, vivi_20044846
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5043, $P5044
  vivi_20044846:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1997_end4835 
.annotate 'line', 1972
.annotate 'line', 1973
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4853
    nqp_get_sc_object $P5047, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_40, $P5046
    set fb_tmp_287, pkg_viv_tmp_40
    repr_defined $I5012, fb_tmp_287
    unless $I5012 goto if2008_else4854 
    set $P5048, fb_tmp_287["%COMPILING"]
    set $P5050, $P5048
    goto if2008_end4855
  if2008_else4854:
    null $P5049
    set $P5050, $P5049
  if2008_end4855:
    unless_null $P5050, vivi_20094856
    new $P5051, 'Hash'
    set pkg_viv_tmp_40["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_20094856:
    unless_null $P5050, vivi_20104857
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_20104857:
    set $P5045, $P5050
  fallback4853:
    set fb_tmp_286, $P5045
    repr_defined $I5011, fb_tmp_286
    unless $I5011 goto if2007_else4851 
    set $P5053, fb_tmp_286["%?OPTIONS"]
    set $P5055, $P5053
    goto if2007_end4852
  if2007_else4851:
    null $P5054
    set $P5055, $P5054
  if2007_end4852:
    unless_null $P5055, vivi_20114858
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5055, $P5056
  vivi_20114858:
    set fb_tmp_285, $P5055
    repr_defined $I5010, fb_tmp_285
    unless $I5010 goto if2006_else4849 
    set $P5057, fb_tmp_285["no-regex-lib"]
    set $P5059, $P5057
    goto if2006_end4850
  if2006_else4849:
    null $P5058
    set $P5059, $P5058
  if2006_end4850:
    unless_null $P5059, vivi_20124859
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5059, $P5060
  vivi_20124859:
    set $P5097, $P5059
    if $P5059 goto unless2005_end4848 
.annotate 'line', 1974
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4866
    nqp_get_sc_object $P5063, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_41, $P5062
    set fb_tmp_290, pkg_viv_tmp_41
    repr_defined $I5015, fb_tmp_290
    unless $I5015 goto if2016_else4867 
    set $P5064, fb_tmp_290["%COMPILING"]
    set $P5066, $P5064
    goto if2016_end4868
  if2016_else4867:
    null $P5065
    set $P5066, $P5065
  if2016_end4868:
    unless_null $P5066, vivi_20174869
    new $P5067, 'Hash'
    set pkg_viv_tmp_41["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_20174869:
    unless_null $P5066, vivi_20184870
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_20184870:
    set $P5061, $P5066
  fallback4866:
    set fb_tmp_289, $P5061
    repr_defined $I5014, fb_tmp_289
    unless $I5014 goto if2015_else4864 
    set $P5069, fb_tmp_289["%?OPTIONS"]
    set $P5071, $P5069
    goto if2015_end4865
  if2015_else4864:
    null $P5070
    set $P5071, $P5070
  if2015_end4865:
    unless_null $P5071, vivi_20194871
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5071, $P5072
  vivi_20194871:
    set fb_tmp_288, $P5071
    repr_defined $I5013, fb_tmp_288
    unless $I5013 goto if2014_else4862 
    set $P5073, fb_tmp_288["custom-regex-lib"]
    set $P5075, $P5073
    goto if2014_end4863
  if2014_else4862:
    null $P5074
    set $P5075, $P5074
  if2014_end4863:
    unless_null $P5075, vivi_20204872
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5075, $P5076
  vivi_20204872:
    unless $P5075 goto if2013_else4860 
    .const 'Sub' $P5077 = 'cuid_477_1383915013.33774' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if2013_end4861
  if2013_else4860:
.annotate 'line', 1978
.annotate 'line', 1979
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4883
    nqp_get_sc_object $P5081, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5080, $P5081
    set fb_tmp_293, $P5080
    repr_defined $I5016, fb_tmp_293
    unless $I5016 goto if2027_else4884 
    set $P5082, fb_tmp_293["$W"]
    set $P5084, $P5082
    goto if2027_end4885
  if2027_else4884:
    null $P5083
    set $P5084, $P5083
  if2027_end4885:
    unless_null $P5084, vivi_20284886
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5084, $P5085
  vivi_20284886:
    unless_null $P5084, vivi_20294887
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_20294887:
    set $P5079, $P5084
  fallback4883:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4888
    nqp_get_sc_object $P5089, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5088, $P5089
    set fb_tmp_294, $P5088
    repr_defined $I5017, fb_tmp_294
    unless $I5017 goto if2030_else4889 
    set $P5090, fb_tmp_294["$GLOBALish"]
    set $P5092, $P5090
    goto if2030_end4890
  if2030_else4889:
    null $P5091
    set $P5092, $P5091
  if2030_end4890:
    unless_null $P5092, vivi_20314891
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5092, $P5093
  vivi_20314891:
    unless_null $P5092, vivi_20324892
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_20324892:
    set $P5087, $P5092
  fallback4888:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if2013_end4861:
    set $P5097, $P5096
  unless2005_end4848:
    set $P5098, $P5097
  unless1997_end4835:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1383915013.33774") :anon :lex :outer("cuid_478_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1975
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_291 
    .local pmc fb_tmp_292 
.annotate 'line', 1976
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4873
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_291, $P5002
    repr_defined $I5001, fb_tmp_291
    unless $I5001 goto if2021_else4874 
    set $P5004, fb_tmp_291["$W"]
    set $P5006, $P5004
    goto if2021_end4875
  if2021_else4874:
    null $P5005
    set $P5006, $P5005
  if2021_end4875:
    unless_null $P5006, vivi_20224876
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_20224876:
    unless_null $P5006, vivi_20234877
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20234877:
    set $P5001, $P5006
  fallback4873:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4878
    nqp_get_sc_object $P5011, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5010, $P5011
    set fb_tmp_292, $P5010
    repr_defined $I5002, fb_tmp_292
    unless $I5002 goto if2024_else4879 
    set $P5012, fb_tmp_292["$GLOBALish"]
    set $P5014, $P5012
    goto if2024_end4880
  if2024_else4879:
    null $P5013
    set $P5014, $P5013
  if2024_end4880:
    unless_null $P5014, vivi_20254881
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_20254881:
    unless_null $P5014, vivi_20264882
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_20264882:
    set $P5009, $P5014
  fallback4878:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_259_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1996
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1997
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_260_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2002
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2003
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4898
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_296, $P5003
    repr_defined $I5001, fb_tmp_296
    unless $I5001 goto if2036_else4899 
    set $P5005, fb_tmp_296["$W"]
    set $P5007, $P5005
    goto if2036_end4900
  if2036_else4899:
    null $P5006
    set $P5007, $P5006
  if2036_end4900:
    unless_null $P5007, vivi_20374901
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_20374901:
    unless_null $P5007, vivi_20384902
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_20384902:
    set $P5002, $P5007
  fallback4898:
    unless_null _lex_param_1, fallback4905
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5010
  fallback4905:
    set fb_tmp_297, _lex_param_1
    repr_defined $I5002, fb_tmp_297
    unless $I5002 goto if2039_else4903 
    set $P5011, fb_tmp_297["name"]
    set $P5013, $P5011
    goto if2039_end4904
  if2039_else4903:
    null $P5012
    set $P5013, $P5012
  if2039_end4904:
    unless_null $P5013, vivi_20404906
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_20404906:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4907
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5016, $P5017
    set fb_tmp_298, $P5016
    repr_defined $I5003, fb_tmp_298
    unless $I5003 goto if2041_else4908 
    set $P5018, fb_tmp_298["$GLOBALish"]
    set $P5020, $P5018
    goto if2041_end4909
  if2041_else4908:
    null $P5019
    set $P5020, $P5019
  if2041_end4909:
    unless_null $P5020, vivi_20424910
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_20424910:
    unless_null $P5020, vivi_20434911
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_20434911:
    set $P5015, $P5020
  fallback4907:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2044_end4913 
.annotate 'line', 2004
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2046_end4917 
    set fb_tmp_299, $P101
    repr_defined $I5007, fb_tmp_299
    unless $I5007 goto if2047_else4918 
    set $P5025, fb_tmp_299["EXPORT"]
    set $P5027, $P5025
    goto if2047_end4919
  if2047_else4918:
    null $P5026
    set $P5027, $P5026
  if2047_end4919:
    unless_null $P5027, vivi_20484920
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5027, $P5028
  vivi_20484920:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2046_end4917:
    unless $I5008 goto if2045_end4915 
.annotate 'line', 2005
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4921
    nqp_get_sc_object $P5031, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5030, $P5031
    set fb_tmp_300, $P5030
    repr_defined $I5009, fb_tmp_300
    unless $I5009 goto if2049_else4922 
    set $P5032, fb_tmp_300["$W"]
    set $P5034, $P5032
    goto if2049_end4923
  if2049_else4922:
    null $P5033
    set $P5034, $P5033
  if2049_end4923:
    unless_null $P5034, vivi_20504924
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  vivi_20504924:
    unless_null $P5034, vivi_20514925
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20514925:
    set $P5029, $P5034
  fallback4921:
    set fb_tmp_302, $P101
    repr_defined $I5011, fb_tmp_302
    unless $I5011 goto if2053_else4928 
    set $P5039, fb_tmp_302["EXPORT"]
    set $P5041, $P5039
    goto if2053_end4929
  if2053_else4928:
    null $P5040
    set $P5041, $P5040
  if2053_end4929:
    unless_null $P5041, vivi_20544930
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5041, $P5042
  vivi_20544930:
    get_who $P5038, $P5041
    set fb_tmp_301, $P5038
    repr_defined $I5010, fb_tmp_301
    unless $I5010 goto if2052_else4926 
    set $P5043, fb_tmp_301["DEFAULT"]
    set $P5045, $P5043
    goto if2052_end4927
  if2052_else4926:
    null $P5044
    set $P5045, $P5044
  if2052_end4927:
    unless_null $P5045, vivi_20554931
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  vivi_20554931:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2045_end4915:
.annotate 'line', 2008
    $P5048 = "&import_HOW_exports"($P101)
  if2044_end4913:
.annotate 'line', 2010
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_261_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2013
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_479_1383915013.33774' 
    capture_lex $P5038 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4934
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback4934:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5001, fb_tmp_303
    unless $I5001 goto if2056_else4932 
    set $P5004, fb_tmp_303["xblock"]
    set $P5006, $P5004
    goto if2056_end4933
  if2056_else4932:
    null $P5005
    set $P5006, $P5005
  if2056_end4933:
    unless_null $P5006, vivi_20574935
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_20574935:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 2015
    unless_null _lex_param_1, fallback4940
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5009
  fallback4940:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5003, fb_tmp_305
    unless $I5003 goto if2059_else4938 
    set $P5010, fb_tmp_305["xblock"]
    set $P5012, $P5010
    goto if2059_end4939
  if2059_else4938:
    null $P5011
    set $P5012, $P5011
  if2059_end4939:
    unless_null $P5012, vivi_20604941
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_20604941:
    set fb_tmp_304, $P5012
    repr_defined $I5002, fb_tmp_304
    unless $I5002 goto if2058_else4936 
    set $I5004, $P101
    set $P5014, fb_tmp_304[$I5004]
    set $P5016, $P5014
    goto if2058_end4937
  if2058_else4936:
    null $P5015
    set $P5016, $P5015
  if2058_end4937:
    unless_null $P5016, vivi_20614942
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_20614942:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4947
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5020
  fallback4947:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5005, fb_tmp_306
    unless $I5005 goto if2063_else4945 
    set $P5021, fb_tmp_306["else"]
    set $P5023, $P5021
    goto if2063_end4946
  if2063_else4945:
    null $P5022
    set $P5023, $P5022
  if2063_end4946:
    unless_null $P5023, vivi_20644948
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_20644948:
    unless $P5023 goto if2062_end4944 
.annotate 'line', 2016
.annotate 'line', 2017
    unless_null _lex_param_1, fallback4951
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5025
  fallback4951:
    set fb_tmp_307, _lex_param_1
    repr_defined $I5006, fb_tmp_307
    unless $I5006 goto if2065_else4949 
    set $P5026, fb_tmp_307["else"]
    set $P5028, $P5026
    goto if2065_end4950
  if2065_else4949:
    null $P5027
    set $P5028, $P5027
  if2065_end4950:
    unless_null $P5028, vivi_20664952
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_20664952:
    $P5030 = $P5028."ast"()
    $P5031 = "&block_immediate"($P5030)
    $P5032 = $P102."push"($P5031)
  if2062_end4944:
  while2067_test4953:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5007, $N5004, $N5005
    box $P5036, $I5007
    set $P5035, $P5036
    unless $I5007 goto while2067_done4957 
  while2067_redo4955:
    .const 'Sub' $P5033 = 'cuid_479_1383915013.33774' 
    capture_lex $P5033
    $P5034 = $P5033()
    set $P5035, $P5034
    goto while2067_test4953 
  while2067_done4957:
.annotate 'line', 2026
    $P5037 = _lex_param_1."!make"($P102)
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1383915013.33774") :anon :lex :outer("cuid_261_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2020
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_308 
    .local pmc fb_tmp_309 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 2023
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4962
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  fallback4962:
    set fb_tmp_309, $P5003
    repr_defined $I5002, fb_tmp_309
    unless $I5002 goto if2069_else4960 
    set $P5005, fb_tmp_309["xblock"]
    set $P5007, $P5005
    goto if2069_end4961
  if2069_else4960:
    null $P5006
    set $P5007, $P5006
  if2069_end4961:
    unless_null $P5007, vivi_20704963
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_20704963:
    set fb_tmp_308, $P5007
    repr_defined $I5001, fb_tmp_308
    unless $I5001 goto if2068_else4958 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_308[$I5003]
    set $P5012, $P5009
    goto if2068_end4959
  if2068_else4958:
    null $P5011
    set $P5012, $P5011
  if2068_end4959:
    unless_null $P5012, vivi_20714964
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_20714964:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 2024
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_262_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2029
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_310 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2030
    unless_null _lex_param_1, fallback4967
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback4967:
    set fb_tmp_310, _lex_param_1
    repr_defined $I5001, fb_tmp_310
    unless $I5001 goto if2072_else4965 
    set $P5003, fb_tmp_310["xblock"]
    set $P5005, $P5003
    goto if2072_end4966
  if2072_else4965:
    null $P5004
    set $P5005, $P5004
  if2072_end4966:
    unless_null $P5005, vivi_20734968
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_20734968:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 2031
    $P101."op"("unless")
.annotate 'line', 2032
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_263_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    .local pmc fb_tmp_313 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2036
    unless_null _lex_param_1, fallback4971
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback4971:
    set fb_tmp_311, _lex_param_1
    repr_defined $I5001, fb_tmp_311
    unless $I5001 goto if2074_else4969 
    set $P5003, fb_tmp_311["xblock"]
    set $P5005, $P5003
    goto if2074_end4970
  if2074_else4969:
    null $P5004
    set $P5005, $P5004
  if2074_end4970:
    unless_null $P5005, vivi_20754972
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_20754972:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 2037
    unless_null _lex_param_1, fallback4975
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5009
  fallback4975:
    set fb_tmp_312, _lex_param_1
    repr_defined $I5002, fb_tmp_312
    unless $I5002 goto if2076_else4973 
    set $P5010, fb_tmp_312["sym"]
    set $P5012, $P5010
    goto if2076_end4974
  if2076_else4973:
    null $P5011
    set $P5012, $P5011
  if2076_end4974:
    unless_null $P5012, vivi_20774976
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_20774976:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4979
    nqp_get_sc_object $P5016, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5015, $P5016
    set fb_tmp_313, $P5015
    repr_defined $I5003, fb_tmp_313
    unless $I5003 goto if2079_else4980 
    set $P5017, fb_tmp_313["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2079_end4981
  if2079_else4980:
    null $P5018
    set $P5019, $P5018
  if2079_end4981:
    unless_null $P5019, vivi_20804982
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_20804982:
    unless_null $P5019, vivi_20814983
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20814983:
    set $P5014, $P5019
  fallback4979:
    if $P5014 goto unless2078_end4978 
.annotate 'line', 2038
.annotate 'line', 2039
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2078_end4978:
.annotate 'line', 2041
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_264_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2044
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_314 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
    .local pmc fb_tmp_319 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4986
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback4986:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2082_else4984 
    set $P5004, fb_tmp_314["wu"]
    set $P5006, $P5004
    goto if2082_end4985
  if2082_else4984:
    null $P5005
    set $P5006, $P5005
  if2082_end4985:
    unless_null $P5006, vivi_20834987
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_20834987:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4992
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5009
  fallback4992:
    set fb_tmp_315, _lex_param_1
    repr_defined $I5002, fb_tmp_315
    unless $I5002 goto if2085_else4990 
    set $P5010, fb_tmp_315["xblock"]
    set $P5012, $P5010
    goto if2085_end4991
  if2085_else4990:
    null $P5011
    set $P5012, $P5011
  if2085_end4991:
    unless_null $P5012, vivi_20864993
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_20864993:
    unless $P5012 goto if2084_else4988 
.annotate 'line', 2047
.annotate 'line', 2048
    unless_null _lex_param_1, fallback4996
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5014
  fallback4996:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5003, fb_tmp_316
    unless $I5003 goto if2087_else4994 
    set $P5015, fb_tmp_316["xblock"]
    set $P5017, $P5015
    goto if2087_end4995
  if2087_else4994:
    null $P5016
    set $P5017, $P5016
  if2087_end4995:
    unless_null $P5017, vivi_20884997
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_20884997:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 2049
    $P5021 = $P102."op"($P101)
    goto if2084_end4989
  if2084_else4988:
.annotate 'line', 2051
.annotate 'line', 2052
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    unless_null _lex_param_1, fallback5000
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5023
  fallback5000:
    set fb_tmp_317, _lex_param_1
    repr_defined $I5004, fb_tmp_317
    unless $I5004 goto if2089_else4998 
    set $P5024, fb_tmp_317["EXPR"]
    set $P5026, $P5024
    goto if2089_end4999
  if2089_else4998:
    null $P5025
    set $P5026, $P5025
  if2089_end4999:
    unless_null $P5026, vivi_20905001
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_20905001:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback5004
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5029
  fallback5004:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5005, fb_tmp_318
    unless $I5005 goto if2091_else5002 
    set $P5030, fb_tmp_318["pblock"]
    set $P5032, $P5030
    goto if2091_end5003
  if2091_else5002:
    null $P5031
    set $P5032, $P5031
  if2091_end5003:
    unless_null $P5032, vivi_20925005
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5032, $P5033
  vivi_20925005:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2084_end4989:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback5008
    nqp_get_sc_object $P5039, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5038, $P5039
    set fb_tmp_319, $P5038
    repr_defined $I5006, fb_tmp_319
    unless $I5006 goto if2094_else5009 
    set $P5040, fb_tmp_319["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2094_end5010
  if2094_else5009:
    null $P5041
    set $P5042, $P5041
  if2094_end5010:
    unless_null $P5042, vivi_20955011
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5042, $P5043
  vivi_20955011:
    unless_null $P5042, vivi_20965012
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20965012:
    set $P5037, $P5042
  fallback5008:
    if $P5037 goto unless2093_end5007 
.annotate 'line', 2055
.annotate 'line', 2056
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2093_end5007:
.annotate 'line', 2058
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_265_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2061
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_320 
    .local pmc fb_tmp_321 
    .local pmc fb_tmp_322 
    .local pmc fb_tmp_323 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 2062
    unless_null _lex_param_1, fallback5015
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback5015:
    set fb_tmp_320, _lex_param_1
    repr_defined $I5001, fb_tmp_320
    unless $I5001 goto if2097_else5013 
    set $P5004, fb_tmp_320["xblock"]
    set $P5006, $P5004
    goto if2097_end5014
  if2097_else5013:
    null $P5005
    set $P5006, $P5005
  if2097_end5014:
    unless_null $P5006, vivi_20985016
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_20985016:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2063
    $P101."op"("for")
    set fb_tmp_321, $P101
    repr_defined $I5002, fb_tmp_321
    unless $I5002 goto if2099_else5017 
    set $P5009, fb_tmp_321[1]
    set $P5011, $P5009
    goto if2099_end5018
  if2099_else5017:
    null $P5010
    set $P5011, $P5010
  if2099_end5018:
    unless_null $P5011, vivi_21005019
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_21005019:
    set $P102, $P5011
.annotate 'line', 2065
    $P5013 = $P102."arity"()
    if $P5013 goto unless2101_end5021 
.annotate 'line', 2066
    set fb_tmp_322, $P102
    repr_defined $I5003, fb_tmp_322
    unless $I5003 goto if2102_else5022 
    set $P5014, fb_tmp_322[0]
    set $P5016, $P5014
    goto if2102_end5023
  if2102_else5022:
    null $P5015
    set $P5016, $P5015
  if2102_end5023:
    unless_null $P5016, vivi_21035024
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_21035024:
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 2067
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 2068
    $P5020 = $P102."arity"(1)
  unless2101_end5021:
.annotate 'line', 2070
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback5027
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set fb_tmp_323, $P5022
    repr_defined $I5004, fb_tmp_323
    unless $I5004 goto if2105_else5028 
    set $P5024, fb_tmp_323["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2105_end5029
  if2105_else5028:
    null $P5025
    set $P5026, $P5025
  if2105_end5029:
    unless_null $P5026, vivi_21065030
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_21065030:
    unless_null $P5026, vivi_21075031
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_21075031:
    set $P5021, $P5026
  fallback5027:
    if $P5021 goto unless2104_end5026 
.annotate 'line', 2071
.annotate 'line', 2072
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2104_end5026:
.annotate 'line', 2074
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_266_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2077
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_324 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2078
    unless_null _lex_param_1, fallback5034
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback5034:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5001, fb_tmp_324
    unless $I5001 goto if2108_else5032 
    set $P5003, fb_tmp_324["block"]
    set $P5005, $P5003
    goto if2108_end5033
  if2108_else5032:
    null $P5004
    set $P5005, $P5004
  if2108_end5033:
    unless_null $P5005, vivi_21095035
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_21095035:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2079
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 2080
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_267_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2084
    unless_null _lex_param_1, fallback5038
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback5038:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2110_else5036 
    set $P5003, fb_tmp_325["block"]
    set $P5005, $P5003
    goto if2110_end5037
  if2110_else5036:
    null $P5004
    set $P5005, $P5004
  if2110_end5037:
    unless_null $P5005, vivi_21115039
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_21115039:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2085
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 2086
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_268_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_326 
    .local pmc fb_tmp_327 
.annotate 'line', 2125
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5040
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_326, $P5002
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2112_else5041 
    set $P5004, fb_tmp_326["$W"]
    set $P5006, $P5004
    goto if2112_end5042
  if2112_else5041:
    null $P5005
    set $P5006, $P5005
  if2112_end5042:
    unless_null $P5006, vivi_21135043
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_21135043:
    unless_null $P5006, vivi_21145044
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_21145044:
    set $P5001, $P5006
  fallback5040:
    unless_null _lex_param_1, fallback5047
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5009
  fallback5047:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5002, fb_tmp_327
    unless $I5002 goto if2115_else5045 
    set $P5010, fb_tmp_327["blorst"]
    set $P5012, $P5010
    goto if2115_end5046
  if2115_else5045:
    null $P5011
    set $P5012, $P5011
  if2115_end5046:
    unless_null $P5012, vivi_21165048
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_21165048:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_269_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2128
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_328 
    .local pmc fb_tmp_329 
.annotate 'line', 2129
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5049
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_328, $P5002
    repr_defined $I5001, fb_tmp_328
    unless $I5001 goto if2117_else5050 
    set $P5004, fb_tmp_328["$W"]
    set $P5006, $P5004
    goto if2117_end5051
  if2117_else5050:
    null $P5005
    set $P5006, $P5005
  if2117_end5051:
    unless_null $P5006, vivi_21185052
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_21185052:
    unless_null $P5006, vivi_21195053
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_21195053:
    set $P5001, $P5006
  fallback5049:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback5056
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5010
  fallback5056:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5002, fb_tmp_329
    unless $I5002 goto if2120_else5054 
    set $P5011, fb_tmp_329["blorst"]
    set $P5013, $P5011
    goto if2120_end5055
  if2120_else5054:
    null $P5012
    set $P5013, $P5012
  if2120_end5055:
    unless_null $P5013, vivi_21215057
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_21215057:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 2130
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_270_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2133
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    .local pmc fb_tmp_332 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_5058
    .lex "RETURN", $P102
.annotate 'line', 2134
    unless_null _lex_param_1, fallback5062
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback5062:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5001, fb_tmp_330
    unless $I5001 goto if2122_else5060 
    set $P5003, fb_tmp_330["blorst"]
    set $P5005, $P5003
    goto if2122_end5061
  if2122_else5060:
    null $P5004
    set $P5005, $P5004
  if2122_end5061:
    unless_null $P5005, vivi_21235063
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_21235063:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 108
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2124_end5065 
.annotate 'line', 2135
    set fb_tmp_331, $P101
    repr_defined $I5003, fb_tmp_331
    unless $I5003 goto if2127_else5070 
    set $P5009, fb_tmp_331["handlers"]
    set $P5011, $P5009
    goto if2127_end5071
  if2127_else5070:
    null $P5010
    set $P5011, $P5010
  if2127_end5071:
    unless_null $P5011, vivi_21285072
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_21285072:
    set $P5017, $P5011
    unless $P5011 goto if2126_end5069 
    set fb_tmp_332, $P101
    repr_defined $I5005, fb_tmp_332
    unless $I5005 goto if2129_else5073 
    set $P5013, fb_tmp_332["handlers"]
    set $P5015, $P5013
    goto if2129_end5074
  if2129_else5073:
    null $P5014
    set $P5015, $P5014
  if2129_end5074:
    unless_null $P5015, vivi_21305075
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_21305075:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2126_end5069:
    unless $P5017 goto if2125_else5066 
.annotate 'line', 2136
.annotate 'line', 2137
    _lex_param_1."!make"($P101)
    $P5019 = "RETURN"(1)
    set $P5021, $P5019
    goto if2125_end5067
  if2125_else5066:
.annotate 'line', 2140
.annotate 'line', 2141
    $P5020 = $P101."blocktype"("immediate")
    set $P5021, $P5020
  if2125_end5067:
  if2124_end5065:
.annotate 'line', 2144
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2148
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 2149
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
.annotate 'line', 2150
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2152
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5027 = $P5026."new"("exception" :named("op"))
.annotate 'line', 2153
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5029 = $P5028."new"("handled" :named("value"))
.annotate 'line', 2154
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5031 = $P5030."new"(1 :named("value"))
    $P5032 = $P5025."new"($P5027, $P5029, $P5031, "bindkey_i" :named("op"))
.annotate 'line', 2156
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5034 = $P5033."new"("null" :named("op"))
.annotate 'line', 2157
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5036 = $P5035."new"("null" :named("op"))
    $P5037 = $P5024."new"($P5032 :named("parrot"), $P5034 :named("jvm"), $P5036 :named("moar"))
.annotate 'line', 2159
    $P5038 = "&default_for"("$")
    $P5039 = $P5023."new"($P5037, $P5038)
    $P5040 = $P5022."new"($P101, "CATCH", $P5039, "handle" :named("op"))
    $P5041 = _lex_param_1."!make"($P5040)
    goto lexotic_5059
  lexotic_5058:
    .get_results ($P5041)
  lexotic_5059:
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_271_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2163
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
    .local pmc fb_tmp_335 
.annotate 'line', 2164
    unless_null _lex_param_1, fallback5080
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5080:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5001, fb_tmp_333
    unless $I5001 goto if2132_else5078 
    set $P5002, fb_tmp_333["block"]
    set $P5004, $P5002
    goto if2132_end5079
  if2132_else5078:
    null $P5003
    set $P5004, $P5003
  if2132_end5079:
    unless_null $P5004, vivi_21335081
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21335081:
    unless $P5004 goto if2131_else5076 
.annotate 'line', 2165
    unless_null _lex_param_1, fallback5084
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5084:
    set fb_tmp_334, _lex_param_1
    repr_defined $I5002, fb_tmp_334
    unless $I5002 goto if2134_else5082 
    set $P5007, fb_tmp_334["block"]
    set $P5009, $P5007
    goto if2134_end5083
  if2134_else5082:
    null $P5008
    set $P5009, $P5008
  if2134_end5083:
    unless_null $P5009, vivi_21355085
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_21355085:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2131_end5077
  if2131_else5076:
.annotate 'line', 2166
    unless_null _lex_param_1, fallback5088
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5013
  fallback5088:
    set fb_tmp_335, _lex_param_1
    repr_defined $I5003, fb_tmp_335
    unless $I5003 goto if2136_else5086 
    set $P5014, fb_tmp_335["statement"]
    set $P5016, $P5014
    goto if2136_end5087
  if2136_else5086:
    null $P5015
    set $P5016, $P5015
  if2136_end5087:
    unless_null $P5016, vivi_21375089
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_21375089:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2131_end5077:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_272_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2171
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_336 
    unless_null _lex_param_1, fallback5092
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5092:
    set fb_tmp_336, _lex_param_1
    repr_defined $I5001, fb_tmp_336
    unless $I5001 goto if2138_else5090 
    set $P5002, fb_tmp_336["cond"]
    set $P5004, $P5002
    goto if2138_end5091
  if2138_else5090:
    null $P5003
    set $P5004, $P5003
  if2138_end5091:
    unless_null $P5004, vivi_21395093
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21395093:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_273_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_337 
    unless_null _lex_param_1, fallback5096
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5096:
    set fb_tmp_337, _lex_param_1
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if2140_else5094 
    set $P5002, fb_tmp_337["cond"]
    set $P5004, $P5002
    goto if2140_end5095
  if2140_else5094:
    null $P5003
    set $P5004, $P5003
  if2140_end5095:
    unless_null $P5004, vivi_21415097
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21415097:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_274_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_338 
    unless_null _lex_param_1, fallback5100
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5100:
    set fb_tmp_338, _lex_param_1
    repr_defined $I5001, fb_tmp_338
    unless $I5001 goto if2142_else5098 
    set $P5002, fb_tmp_338["cond"]
    set $P5004, $P5002
    goto if2142_end5099
  if2142_else5098:
    null $P5003
    set $P5004, $P5003
  if2142_end5099:
    unless_null $P5004, vivi_21435101
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21435101:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_275_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2175
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_339 
    unless_null _lex_param_1, fallback5104
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5104:
    set fb_tmp_339, _lex_param_1
    repr_defined $I5001, fb_tmp_339
    unless $I5001 goto if2144_else5102 
    set $P5002, fb_tmp_339["cond"]
    set $P5004, $P5002
    goto if2144_end5103
  if2144_else5102:
    null $P5003
    set $P5004, $P5003
  if2144_end5103:
    unless_null $P5004, vivi_21455105
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21455105:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_276_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2179
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_340 
    unless_null _lex_param_1, fallback5108
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5108:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2146_else5106 
    set $P5002, fb_tmp_340["fatarrow"]
    set $P5004, $P5002
    goto if2146_end5107
  if2146_else5106:
    null $P5003
    set $P5004, $P5003
  if2146_end5107:
    unless_null $P5004, vivi_21475109
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21475109:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_277_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2180
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_341 
    unless_null _lex_param_1, fallback5112
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5112:
    set fb_tmp_341, _lex_param_1
    repr_defined $I5001, fb_tmp_341
    unless $I5001 goto if2148_else5110 
    set $P5002, fb_tmp_341["colonpair"]
    set $P5004, $P5002
    goto if2148_end5111
  if2148_else5110:
    null $P5003
    set $P5004, $P5003
  if2148_end5111:
    unless_null $P5004, vivi_21495113
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21495113:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_278_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2181
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_342 
    unless_null _lex_param_1, fallback5116
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5116:
    set fb_tmp_342, _lex_param_1
    repr_defined $I5001, fb_tmp_342
    unless $I5001 goto if2150_else5114 
    set $P5002, fb_tmp_342["variable"]
    set $P5004, $P5002
    goto if2150_end5115
  if2150_else5114:
    null $P5003
    set $P5004, $P5003
  if2150_end5115:
    unless_null $P5004, vivi_21515117
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21515117:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_279_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2182
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_343 
    unless_null _lex_param_1, fallback5120
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5120:
    set fb_tmp_343, _lex_param_1
    repr_defined $I5001, fb_tmp_343
    unless $I5001 goto if2152_else5118 
    set $P5002, fb_tmp_343["package_declarator"]
    set $P5004, $P5002
    goto if2152_end5119
  if2152_else5118:
    null $P5003
    set $P5004, $P5003
  if2152_end5119:
    unless_null $P5004, vivi_21535121
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21535121:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_280_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2183
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_344 
    unless_null _lex_param_1, fallback5124
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5124:
    set fb_tmp_344, _lex_param_1
    repr_defined $I5001, fb_tmp_344
    unless $I5001 goto if2154_else5122 
    set $P5002, fb_tmp_344["scope_declarator"]
    set $P5004, $P5002
    goto if2154_end5123
  if2154_else5122:
    null $P5003
    set $P5004, $P5003
  if2154_end5123:
    unless_null $P5004, vivi_21555125
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21555125:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_281_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2184
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_345 
    unless_null _lex_param_1, fallback5128
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5128:
    set fb_tmp_345, _lex_param_1
    repr_defined $I5001, fb_tmp_345
    unless $I5001 goto if2156_else5126 
    set $P5002, fb_tmp_345["routine_declarator"]
    set $P5004, $P5002
    goto if2156_end5127
  if2156_else5126:
    null $P5003
    set $P5004, $P5003
  if2156_end5127:
    unless_null $P5004, vivi_21575129
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21575129:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_282_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2185
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_346 
    unless_null _lex_param_1, fallback5132
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5132:
    set fb_tmp_346, _lex_param_1
    repr_defined $I5001, fb_tmp_346
    unless $I5001 goto if2158_else5130 
    set $P5002, fb_tmp_346["regex_declarator"]
    set $P5004, $P5002
    goto if2158_end5131
  if2158_else5130:
    null $P5003
    set $P5004, $P5003
  if2158_end5131:
    unless_null $P5004, vivi_21595133
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21595133:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_283_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2186
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_347 
    unless_null _lex_param_1, fallback5136
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5136:
    set fb_tmp_347, _lex_param_1
    repr_defined $I5001, fb_tmp_347
    unless $I5001 goto if2160_else5134 
    set $P5002, fb_tmp_347["statement_prefix"]
    set $P5004, $P5002
    goto if2160_end5135
  if2160_else5134:
    null $P5003
    set $P5004, $P5003
  if2160_end5135:
    unless_null $P5004, vivi_21615137
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21615137:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_284_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2187
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_348 
.annotate 'line', 2188
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    unless_null _lex_param_1, fallback5140
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback5140:
    set fb_tmp_348, _lex_param_1
    repr_defined $I5001, fb_tmp_348
    unless $I5001 goto if2162_else5138 
    set $P5003, fb_tmp_348["pblock"]
    set $P5005, $P5003
    goto if2162_end5139
  if2162_else5138:
    null $P5004
    set $P5005, $P5004
  if2162_end5139:
    unless_null $P5005, vivi_21635141
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_21635141:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_285_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2191
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2192
    unless_null _lex_param_1, fallback5144
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback5144:
    set fb_tmp_349, _lex_param_1
    repr_defined $I5001, fb_tmp_349
    unless $I5001 goto if2164_else5142 
    set $P5003, fb_tmp_349["val"]
    set $P5005, $P5003
    goto if2164_end5143
  if2164_else5142:
    null $P5004
    set $P5005, $P5004
  if2164_end5143:
    unless_null $P5005, vivi_21655145
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_21655145:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2193
    unless_null _lex_param_1, fallback5148
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback5148:
    set fb_tmp_350, _lex_param_1
    repr_defined $I5002, fb_tmp_350
    unless $I5002 goto if2166_else5146 
    set $P5009, fb_tmp_350["key"]
    set $P5011, $P5009
    goto if2166_end5147
  if2166_else5146:
    null $P5010
    set $P5011, $P5010
  if2166_end5147:
    unless_null $P5011, vivi_21675149
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_21675149:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2194
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_286_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2197
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_480_1383915013.33774' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    unless_null _lex_param_1, fallback5154
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5154:
    set fb_tmp_351, _lex_param_1
    repr_defined $I5001, fb_tmp_351
    unless $I5001 goto if2169_else5152 
    set $P5002, fb_tmp_351["variable"]
    set $P5004, $P5002
    goto if2169_end5153
  if2169_else5152:
    null $P5003
    set $P5004, $P5003
  if2169_end5153:
    unless_null $P5004, vivi_21705155
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_21705155:
    unless $P5004 goto if2168_else5150 
.annotate 'line', 2198
.annotate 'line', 2199
    unless_null _lex_param_1, fallback5158
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5158:
    set fb_tmp_352, _lex_param_1
    repr_defined $I5002, fb_tmp_352
    unless $I5002 goto if2171_else5156 
    set $P5007, fb_tmp_352["variable"]
    set $P5009, $P5007
    goto if2171_end5157
  if2171_else5156:
    null $P5008
    set $P5009, $P5008
  if2171_end5157:
    unless_null $P5009, vivi_21725159
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_21725159:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback5164
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback5164:
    set fb_tmp_354, _lex_param_1
    repr_defined $I5004, fb_tmp_354
    unless $I5004 goto if2174_else5162 
    set $P5013, fb_tmp_354["variable"]
    set $P5015, $P5013
    goto if2174_end5163
  if2174_else5162:
    null $P5014
    set $P5015, $P5014
  if2174_end5163:
    unless_null $P5015, vivi_21755165
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_21755165:
    set fb_tmp_353, $P5015
    repr_defined $I5003, fb_tmp_353
    unless $I5003 goto if2173_else5160 
    set $P5017, fb_tmp_353["desigilname"]
    set $P5019, $P5017
    goto if2173_end5161
  if2173_else5160:
    null $P5018
    set $P5019, $P5018
  if2173_end5161:
    unless_null $P5019, vivi_21765166
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_21765166:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2200
    unless_null _lex_param_1, fallback5169
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5021
  fallback5169:
    set fb_tmp_355, _lex_param_1
    repr_defined $I5005, fb_tmp_355
    unless $I5005 goto if2177_else5167 
    set $P5022, fb_tmp_355["variable"]
    set $P5024, $P5022
    goto if2177_end5168
  if2177_else5167:
    null $P5023
    set $P5024, $P5023
  if2177_end5168:
    unless_null $P5024, vivi_21785170
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_21785170:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2168_end5151
  if2168_else5150:
    .const 'Sub' $P5028 = 'cuid_480_1383915013.33774' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2168_end5151:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1383915013.33774") :anon :lex :outer("cuid_286_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2201
    .lex "$past", $P101 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5175
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback5175:
    set fb_tmp_356, $P5002
    repr_defined $I5001, fb_tmp_356
    unless $I5001 goto if2180_else5173 
    set $P5004, fb_tmp_356["circumfix"]
    set $P5006, $P5004
    goto if2180_end5174
  if2180_else5173:
    null $P5005
    set $P5006, $P5005
  if2180_end5174:
    unless_null $P5006, vivi_21815176
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_21815176:
    unless $P5006 goto if2179_else5171 
.annotate 'line', 2203
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5179
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  fallback5179:
    set fb_tmp_357, $P5008
    repr_defined $I5002, fb_tmp_357
    unless $I5002 goto if2182_else5177 
    set $P5010, fb_tmp_357["circumfix"]
    set $P5012, $P5010
    goto if2182_end5178
  if2182_else5177:
    null $P5011
    set $P5012, $P5011
  if2182_end5178:
    unless_null $P5012, vivi_21835180
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_21835180:
    $P5014 = $P5012."ast"()
    set $P5023, $P5014
    goto if2179_end5172
  if2179_else5171:
.annotate 'line', 2204
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5183
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  fallback5183:
    set fb_tmp_358, $P5016
    repr_defined $I5004, fb_tmp_358
    unless $I5004 goto if2184_else5181 
    set $P5018, fb_tmp_358["not"]
    set $P5020, $P5018
    goto if2184_end5182
  if2184_else5181:
    null $P5019
    set $P5020, $P5019
  if2184_end5182:
    unless_null $P5020, vivi_21855184
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_21855184:
    isfalse $I5003, $P5020
    $P5022 = $P5015."new"($I5003 :named("value"))
    set $P5023, $P5022
  if2179_end5172:
    set $P101, $P5023
.annotate 'line', 2205
    find_lex $P5024, "$/"
    unless_null $P5024, fallback5187
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  fallback5187:
    set fb_tmp_359, $P5024
    repr_defined $I5005, fb_tmp_359
    unless $I5005 goto if2186_else5185 
    set $P5026, fb_tmp_359["identifier"]
    set $P5028, $P5026
    goto if2186_end5186
  if2186_else5185:
    null $P5027
    set $P5028, $P5027
  if2186_end5186:
    unless_null $P5028, vivi_21875188
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_21875188:
    set $S5001, $P5028
    $P101."named"($S5001)
.annotate 'line', 2206
    find_dynamic_lex $P5030, "$/"
    $P5031 = $P5030."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_287_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2210
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_482_1383915013.33774' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback5193
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback5193:
    set fb_tmp_360, _lex_param_1
    repr_defined $I5001, fb_tmp_360
    unless $I5001 goto if2189_else5191 
    set $P5003, fb_tmp_360["postcircumfix"]
    set $P5005, $P5003
    goto if2189_end5192
  if2189_else5191:
    null $P5004
    set $P5005, $P5004
  if2189_end5192:
    unless_null $P5005, vivi_21905194
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_21905194:
    unless $P5005 goto if2188_else5189 
.annotate 'line', 2212
.annotate 'line', 2213
    unless_null _lex_param_1, fallback5197
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5007
  fallback5197:
    set fb_tmp_361, _lex_param_1
    repr_defined $I5002, fb_tmp_361
    unless $I5002 goto if2191_else5195 
    set $P5008, fb_tmp_361["postcircumfix"]
    set $P5010, $P5008
    goto if2191_end5196
  if2191_else5195:
    null $P5009
    set $P5010, $P5009
  if2191_end5196:
    unless_null $P5010, vivi_21925198
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_21925198:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2214
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
.annotate 'line', 2215
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2188_end5190
  if2188_else5189:
    .const 'Sub' $P5017 = 'cuid_482_1383915013.33774' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2188_end5190:
.annotate 'line', 2296
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1383915013.33774") :anon :lex :outer("cuid_287_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2218
    .const 'Sub' $P5081 = 'cuid_481_1383915013.33774' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_485_1383915013.33774' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_486_1383915013.33774' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_487_1383915013.33774' 
    capture_lex $P5081 
    .lex "@name", $P101 
    .local pmc fb_tmp_362 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2219
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2194_else5201 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2194_end5202
  if2194_else5201:
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5007
  if2194_end5202:
    get_who $P5002, $P5008
    set fb_tmp_362, $P5002
    repr_defined $I5001, fb_tmp_362
    unless $I5001 goto if2193_else5199 
    set $P5009, fb_tmp_362["Compiler"]
    set $P5011, $P5009
    goto if2193_end5200
  if2193_else5199:
    null $P5010
    set $P5011, $P5010
  if2193_end5200:
    unless_null $P5011, vivi_21955203
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_21955203:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2196_else5204 
.annotate 'line', 2220
    find_lex $P5015, "$/"
    unless_null $P5015, fallback5210
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  fallback5210:
    set fb_tmp_363, $P5015
    repr_defined $I5004, fb_tmp_363
    unless $I5004 goto if2198_else5208 
    set $P5017, fb_tmp_363["twigil"]
    set $P5019, $P5017
    goto if2198_end5209
  if2198_else5208:
    null $P5018
    set $P5019, $P5018
  if2198_end5209:
    unless_null $P5019, vivi_21995211
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_21995211:
    unless $P5019 goto if2197_end5207 
.annotate 'line', 2221
.annotate 'line', 2222
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2197_end5207:
.annotate 'line', 2224
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5080, $P5025
    goto if2196_end5205
  if2196_else5204:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback5216
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  fallback5216:
    set fb_tmp_364, $P5026
    repr_defined $I5006, fb_tmp_364
    unless $I5006 goto if2201_else5214 
    set $P5028, fb_tmp_364["twigil"]
    set $P5030, $P5028
    goto if2201_end5215
  if2201_else5214:
    null $P5029
    set $P5030, $P5029
  if2201_end5215:
    unless_null $P5030, vivi_22025217
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5030, $P5031
  vivi_22025217:
    set $S5002, $P5030
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2200_else5212 
    .const 'Sub' $P5032 = 'cuid_481_1383915013.33774' 
    capture_lex $P5032
    $P5033 = $P5032()
    set $P5079, $P5033
    goto if2200_end5213
  if2200_else5212:
    find_lex $P5034, "$/"
    unless_null $P5034, fallback5230
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  fallback5230:
    set fb_tmp_367, $P5034
    repr_defined $I5008, fb_tmp_367
    unless $I5008 goto if2208_else5228 
    set $P5036, fb_tmp_367["twigil"]
    set $P5038, $P5036
    goto if2208_end5229
  if2208_else5228:
    null $P5037
    set $P5038, $P5037
  if2208_end5229:
    unless_null $P5038, vivi_22095231
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5038, $P5039
  vivi_22095231:
    set $S5003, $P5038
    iseq $I5007, $S5003, "!"
    unless $I5007 goto if2207_else5226 
    .const 'Sub' $P5040 = 'cuid_485_1383915013.33774' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5078, $P5041
    goto if2207_end5227
  if2207_else5226:
    find_lex $P5042, "$/"
    unless_null $P5042, fallback5280
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5042, $P5043
  fallback5280:
    set fb_tmp_374, $P5042
    repr_defined $I5009, fb_tmp_374
    unless $I5009 goto if2234_else5278 
    set $P5044, fb_tmp_374["semilist"]
    set $P5046, $P5044
    goto if2234_end5279
  if2234_else5278:
    null $P5045
    set $P5046, $P5045
  if2234_end5279:
    unless_null $P5046, vivi_22355281
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5046, $P5047
  vivi_22355281:
    unless $P5046 goto if2233_else5276 
    .const 'Sub' $P5048 = 'cuid_486_1383915013.33774' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5077, $P5049
    goto if2233_end5277
  if2233_else5276:
.annotate 'line', 2281
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback5300
    nqp_get_sc_object $P5052, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5051, $P5052
    set fb_tmp_378, $P5051
    repr_defined $I5010, fb_tmp_378
    unless $I5010 goto if2245_else5301 
    set $P5053, fb_tmp_378["$W"]
    set $P5055, $P5053
    goto if2245_end5302
  if2245_else5301:
    null $P5054
    set $P5055, $P5054
  if2245_end5302:
    unless_null $P5055, vivi_22465303
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5055, $P5056
  vivi_22465303:
    unless_null $P5055, vivi_22475304
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_22475304:
    set $P5050, $P5055
  fallback5300:
    set fb_tmp_379, $P101
    repr_defined $I5011, fb_tmp_379
    unless $I5011 goto if2248_else5305 
    set $P5058, fb_tmp_379[0]
    set $P5060, $P5058
    goto if2248_end5306
  if2248_else5305:
    null $P5059
    set $P5060, $P5059
  if2248_end5306:
    unless_null $P5060, vivi_22495307
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5060, $P5061
  vivi_22495307:
    set $S5004, $P5060
    $P5062 = $P5050."is_package"($S5004)
    unless $P5062 goto if2244_else5298 
.annotate 'line', 2282
    find_lex $P5063, "$/"
    $P5064 = "&lexical_package_lookup"($P101, $P5063)
    store_lex "$past", $P5064
.annotate 'line', 2283
    find_lex $P5065, "$past"
    find_lex $P5066, "$/"
    unless_null $P5066, fallback5310
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5066, $P5067
  fallback5310:
    set fb_tmp_380, $P5066
    repr_defined $I5012, fb_tmp_380
    unless $I5012 goto if2250_else5308 
    set $P5068, fb_tmp_380["sigil"]
    set $P5070, $P5068
    goto if2250_end5309
  if2250_else5308:
    null $P5069
    set $P5070, $P5069
  if2250_end5309:
    unless_null $P5070, vivi_22515311
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5070, $P5071
  vivi_22515311:
    $P5072 = "&default_for"($P5070)
    $P5073 = $P5065."fallback"($P5072)
    set $P5076, $P5073
    goto if2244_end5299
  if2244_else5298:
    .const 'Sub' $P5074 = 'cuid_487_1383915013.33774' 
    capture_lex $P5074
    $P5075 = $P5074()
    set $P5076, $P5075
  if2244_end5299:
    set $P5077, $P5076
  if2233_end5277:
    set $P5078, $P5077
  if2207_end5227:
    set $P5079, $P5078
  if2200_end5213:
    set $P5080, $P5079
  if2196_end5205:
    .return ($P5080) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1383915013.33774") :anon :lex :outer("cuid_482_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2226
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2227
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2229
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback5220
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  fallback5220:
    set fb_tmp_365, $P5005
    repr_defined $I5001, fb_tmp_365
    unless $I5001 goto if2203_else5218 
    set $P5007, fb_tmp_365["sigil"]
    set $P5009, $P5007
    goto if2203_end5219
  if2203_else5218:
    null $P5008
    set $P5009, $P5008
  if2203_end5219:
    unless_null $P5009, vivi_22045221
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_22045221:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback5224
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  fallback5224:
    set fb_tmp_366, $P5011
    repr_defined $I5002, fb_tmp_366
    unless $I5002 goto if2205_else5222 
    set $P5013, fb_tmp_366["desigilname"]
    set $P5015, $P5013
    goto if2205_end5223
  if2205_else5222:
    null $P5014
    set $P5015, $P5014
  if2205_end5223:
    unless_null $P5015, vivi_22065225
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_22065225:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2230
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2232
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2234
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
.annotate 'line', 2235
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1383915013.33774") :anon :lex :outer("cuid_482_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2239
    .const 'Sub' $P5052 = 'cuid_484_1383915013.33774' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 2240
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback5234
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5007, $P5008
    set fb_tmp_368, $P5007
    repr_defined $I5002, fb_tmp_368
    unless $I5002 goto if2211_else5235 
    set $P5009, fb_tmp_368["$PKGDECL"]
    set $P5011, $P5009
    goto if2211_end5236
  if2211_else5235:
    null $P5010
    set $P5011, $P5010
  if2211_end5236:
    unless_null $P5011, vivi_22125237
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_22125237:
    unless_null $P5011, vivi_22135238
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_22135238:
    set $P5006, $P5011
  fallback5234:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2210_else5232 
.annotate 'line', 2242
.annotate 'line', 2243
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2244
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback5239
    nqp_get_sc_object $P5018, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5017, $P5018
    set fb_tmp_369, $P5017
    repr_defined $I5003, fb_tmp_369
    unless $I5003 goto if2214_else5240 
    set $P5019, fb_tmp_369["$PACKAGE"]
    set $P5021, $P5019
    goto if2214_end5241
  if2214_else5240:
    null $P5020
    set $P5021, $P5020
  if2214_end5241:
    unless_null $P5021, vivi_22155242
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_22155242:
    unless_null $P5021, vivi_22165243
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_22165243:
    set $P5016, $P5021
  fallback5239:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2210_end5233
  if2210_else5232:
.annotate 'line', 2246
.annotate 'line', 2247
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback5244
    nqp_get_sc_object $P5028, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5027, $P5028
    set fb_tmp_370, $P5027
    repr_defined $I5004, fb_tmp_370
    unless $I5004 goto if2217_else5245 
    set $P5029, fb_tmp_370["$PACKAGE"]
    set $P5031, $P5029
    goto if2217_end5246
  if2217_else5245:
    null $P5030
    set $P5031, $P5030
  if2217_end5246:
    unless_null $P5031, vivi_22185247
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_22185247:
    unless_null $P5031, vivi_22195248
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_22195248:
    set $P5026, $P5031
  fallback5244:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2210_end5233:
.annotate 'line', 2249
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
.annotate 'line', 2251
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2252
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback5251
    nqp_get_sc_object $P5043, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5042, $P5043
    set fb_tmp_371, $P5042
    repr_defined $I5005, fb_tmp_371
    unless $I5005 goto if2221_else5252 
    set $P5044, fb_tmp_371["$IN_DECL"]
    set $P5046, $P5044
    goto if2221_end5253
  if2221_else5252:
    null $P5045
    set $P5046, $P5045
  if2221_end5253:
    unless_null $P5046, vivi_22225254
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5046, $P5047
  vivi_22225254:
    unless_null $P5046, vivi_22235255
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_22235255:
    set $P5041, $P5046
  fallback5251:
    set $P5051, $P5041
    if $P5041 goto unless2220_end5250 
    .const 'Sub' $P5049 = 'cuid_484_1383915013.33774' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2220_end5250:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1383915013.33774") :anon :lex :outer("cuid_485_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2257
    .const 'Sub' $P5036 = 'cuid_483_1383915013.33774' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_373 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2259
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback5256
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5007, $P5008
    set fb_tmp_372, $P5007
    repr_defined $I5001, fb_tmp_372
    unless $I5001 goto if2224_else5257 
    set $P5009, fb_tmp_372["$PACKAGE"]
    set $P5011, $P5009
    goto if2224_end5258
  if2224_else5257:
    null $P5010
    set $P5011, $P5010
  if2224_end5258:
    unless_null $P5011, vivi_22255259
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_22255259:
    unless_null $P5011, vivi_22265260
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_22265260:
    set $P5006, $P5011
  fallback5256:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback5261
    nqp_get_sc_object $P5016, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5015, $P5016
    set fb_tmp_373, $P5015
    repr_defined $I5002, fb_tmp_373
    unless $I5002 goto if2227_else5262 
    set $P5017, fb_tmp_373["$PACKAGE"]
    set $P5019, $P5017
    goto if2227_end5263
  if2227_else5262:
    null $P5018
    set $P5019, $P5018
  if2227_end5263:
    unless_null $P5019, vivi_22285264
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_22285264:
    unless_null $P5019, vivi_22295265
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_22295265:
    set $P5014, $P5019
  fallback5261:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers5268
    push_eh $P5024
  for_next5269:
    unless $P5004, for_done5271
    shift $P5025, $P5004
  for_redo5270:
    .const 'Sub' $P5023 = 'cuid_483_1383915013.33774' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next5269
  for_handlers5268:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next5269
    eq $P5024, .CONTROL_LOOP_REDO, for_redo5270
  for_done5271:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2231_else5272 
.annotate 'line', 2265
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2232_end5275 
.annotate 'line', 2266
.annotate 'line', 2267
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2232_end5275:
    set $P5035, $P5029
    goto if2231_end5273
  if2231_else5272:
.annotate 'line', 2270
.annotate 'line', 2271
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2231_end5273:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1383915013.33774") :anon :lex :outer("cuid_484_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2259
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2260
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2230_end5267 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2230_end5267:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1383915013.33774") :anon :lex :outer("cuid_482_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2275
    .lex "$name", $P101 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5286
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback5286:
    set fb_tmp_375, $P5002
    repr_defined $I5002, fb_tmp_375
    unless $I5002 goto if2237_else5284 
    set $P5004, fb_tmp_375["sigil"]
    set $P5006, $P5004
    goto if2237_end5285
  if2237_else5284:
    null $P5005
    set $P5006, $P5005
  if2237_end5285:
    unless_null $P5006, vivi_22385287
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_22385287:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2236_else5282 
    set $S5004, "list"
    goto if2236_end5283
  if2236_else5282:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5292
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  fallback5292:
    set fb_tmp_376, $P5008
    repr_defined $I5004, fb_tmp_376
    unless $I5004 goto if2240_else5290 
    set $P5010, fb_tmp_376["sigil"]
    set $P5012, $P5010
    goto if2240_end5291
  if2240_else5290:
    null $P5011
    set $P5012, $P5011
  if2240_end5291:
    unless_null $P5012, vivi_22415293
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_22415293:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2239_else5288 
    set $S5003, "hash"
    goto if2239_end5289
  if2239_else5288:
    set $S5003, "item"
  if2239_end5289:
    set $S5004, $S5003
  if2236_end5283:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2279
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5296
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  fallback5296:
    set fb_tmp_377, $P5016
    repr_defined $I5005, fb_tmp_377
    unless $I5005 goto if2242_else5294 
    set $P5018, fb_tmp_377["semilist"]
    set $P5020, $P5018
    goto if2242_end5295
  if2242_else5294:
    null $P5019
    set $P5020, $P5019
  if2242_end5295:
    unless_null $P5020, vivi_22435297
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_22435297:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1383915013.33774") :anon :lex :outer("cuid_482_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2285
    .lex "$name", $P101 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2286
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5324
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5006, $P5007
    set fb_tmp_381, $P5006
    repr_defined $I5002, fb_tmp_381
    unless $I5002 goto if2258_else5325 
    set $P5008, fb_tmp_381["$IN_DECL"]
    set $P5010, $P5008
    goto if2258_end5326
  if2258_else5325:
    null $P5009
    set $P5010, $P5009
  if2258_end5326:
    unless_null $P5010, vivi_22595327
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_22595327:
    unless_null $P5010, vivi_22605328
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22605328:
    set $P5005, $P5010
  fallback5324:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2257_end5323 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2257_end5323:
    set $I5006, $I5004
    if $I5004 goto unless2256_end5321 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2256_end5321:
    set $I5008, $I5006
    if $I5006 goto unless2255_end5319 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2255_end5319:
    set $I5011, $I5008
    if $I5008 goto unless2254_end5317 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5331
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  fallback5331:
    set fb_tmp_382, $P5013
    repr_defined $I5010, fb_tmp_382
    unless $I5010 goto if2261_else5329 
    set $P5015, fb_tmp_382["twigil"]
    set $P5017, $P5015
    goto if2261_end5330
  if2261_else5329:
    null $P5016
    set $P5017, $P5016
  if2261_end5330:
    unless_null $P5017, vivi_22625332
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_22625332:
    set $S5006, $P5017
    iseq $I5009, $S5006, "?"
    set $I5011, $I5009
  unless2254_end5317:
    box $P5029, $I5011
    set $P5028, $P5029
    if $I5011 goto unless2253_end5315 
.annotate 'line', 2288
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback5333
    nqp_get_sc_object $P5021, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5020, $P5021
    set fb_tmp_383, $P5020
    repr_defined $I5012, fb_tmp_383
    unless $I5012 goto if2263_else5334 
    set $P5022, fb_tmp_383["$W"]
    set $P5024, $P5022
    goto if2263_end5335
  if2263_else5334:
    null $P5023
    set $P5024, $P5023
  if2263_end5335:
    unless_null $P5024, vivi_22645336
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_22645336:
    unless_null $P5024, vivi_22655337
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_22655337:
    set $P5019, $P5024
  fallback5333:
    $P5027 = $P5019."is_lexical"($P101)
    set $P5028, $P5027
  unless2253_end5315:
    unless $P5028 goto if2252_else5312 
.annotate 'line', 2289
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5031 = $P5030."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5031
    set $P5035, $P5031
    goto if2252_end5313
  if2252_else5312:
.annotate 'line', 2291
.annotate 'line', 2292
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5034 = $P5033."panic"($S5007)
    set $P5035, $P5034
  if2252_end5313:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_288_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2299
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_384 
    unless_null _lex_param_1, fallback5340
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5340:
    set fb_tmp_384, _lex_param_1
    repr_defined $I5001, fb_tmp_384
    unless $I5001 goto if2266_else5338 
    set $P5002, fb_tmp_384["package_def"]
    set $P5004, $P5002
    goto if2266_end5339
  if2266_else5338:
    null $P5003
    set $P5004, $P5003
  if2266_end5339:
    unless_null $P5004, vivi_22675341
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_22675341:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_289_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_385 
    unless_null _lex_param_1, fallback5344
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5344:
    set fb_tmp_385, _lex_param_1
    repr_defined $I5001, fb_tmp_385
    unless $I5001 goto if2268_else5342 
    set $P5002, fb_tmp_385["package_def"]
    set $P5004, $P5002
    goto if2268_end5343
  if2268_else5342:
    null $P5003
    set $P5004, $P5003
  if2268_end5343:
    unless_null $P5004, vivi_22695345
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_22695345:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_290_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_386 
    unless_null _lex_param_1, fallback5348
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5348:
    set fb_tmp_386, _lex_param_1
    repr_defined $I5001, fb_tmp_386
    unless $I5001 goto if2270_else5346 
    set $P5002, fb_tmp_386["package_def"]
    set $P5004, $P5002
    goto if2270_end5347
  if2270_else5346:
    null $P5003
    set $P5004, $P5003
  if2270_end5347:
    unless_null $P5004, vivi_22715349
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_22715349:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_291_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_387 
    unless_null _lex_param_1, fallback5352
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5352:
    set fb_tmp_387, _lex_param_1
    repr_defined $I5001, fb_tmp_387
    unless $I5001 goto if2272_else5350 
    set $P5002, fb_tmp_387["package_def"]
    set $P5004, $P5002
    goto if2272_end5351
  if2272_else5350:
    null $P5003
    set $P5004, $P5003
  if2272_end5351:
    unless_null $P5004, vivi_22735353
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_22735353:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_292_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2303
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_388 
    unless_null _lex_param_1, fallback5356
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5356:
    set fb_tmp_388, _lex_param_1
    repr_defined $I5001, fb_tmp_388
    unless $I5001 goto if2274_else5354 
    set $P5002, fb_tmp_388["package_def"]
    set $P5004, $P5002
    goto if2274_end5355
  if2274_else5354:
    null $P5003
    set $P5004, $P5003
  if2274_end5355:
    unless_null $P5004, vivi_22755357
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_22755357:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_293_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_389 
    unless_null _lex_param_1, fallback5360
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5360:
    set fb_tmp_389, _lex_param_1
    repr_defined $I5001, fb_tmp_389
    unless $I5001 goto if2276_else5358 
    set $P5002, fb_tmp_389["package_def"]
    set $P5004, $P5002
    goto if2276_end5359
  if2276_else5358:
    null $P5003
    set $P5004, $P5003
  if2276_end5359:
    unless_null $P5004, vivi_22775361
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_22775361:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_294_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2306
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 2309
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5362
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_390, $P5004
    repr_defined $I5001, fb_tmp_390
    unless $I5001 goto if2278_else5363 
    set $P5006, fb_tmp_390["$W"]
    set $P5008, $P5006
    goto if2278_end5364
  if2278_else5363:
    null $P5007
    set $P5008, $P5007
  if2278_end5364:
    unless_null $P5008, vivi_22795365
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_22795365:
    unless_null $P5008, vivi_22805366
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22805366:
    set $P5003, $P5008
  fallback5362:
    unless_null _lex_param_1, fallback5371
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5011
  fallback5371:
    set fb_tmp_392, _lex_param_1
    repr_defined $I5003, fb_tmp_392
    unless $I5003 goto if2282_else5369 
    set $P5012, fb_tmp_392["metaclass"]
    set $P5014, $P5012
    goto if2282_end5370
  if2282_else5369:
    null $P5013
    set $P5014, $P5013
  if2282_end5370:
    unless_null $P5014, vivi_22835372
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_22835372:
    set fb_tmp_391, $P5014
    repr_defined $I5002, fb_tmp_391
    unless $I5002 goto if2281_else5367 
    set $P5016, fb_tmp_391["identifier"]
    set $P5018, $P5016
    goto if2281_end5368
  if2281_else5367:
    null $P5017
    set $P5018, $P5017
  if2281_end5368:
    unless_null $P5018, vivi_22845373
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_22845373:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2310
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5374
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set fb_tmp_393, $P5022
    repr_defined $I5004, fb_tmp_393
    unless $I5004 goto if2285_else5375 
    set $P5024, fb_tmp_393["$W"]
    set $P5026, $P5024
    goto if2285_end5376
  if2285_else5375:
    null $P5025
    set $P5026, $P5025
  if2285_end5376:
    unless_null $P5026, vivi_22865377
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_22865377:
    unless_null $P5026, vivi_22875378
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22875378:
    set $P5021, $P5026
  fallback5374:
    unless_null _lex_param_1, fallback5381
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5029
  fallback5381:
    set fb_tmp_394, _lex_param_1
    repr_defined $I5005, fb_tmp_394
    unless $I5005 goto if2288_else5379 
    set $P5030, fb_tmp_394["name"]
    set $P5032, $P5030
    goto if2288_end5380
  if2288_else5379:
    null $P5031
    set $P5032, $P5031
  if2288_end5380:
    unless_null $P5032, vivi_22895382
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5032, $P5033
  vivi_22895382:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5387
    nqp_get_sc_object $P5037, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5036, $P5037
    set fb_tmp_395, $P5036
    repr_defined $I5007, fb_tmp_395
    unless $I5007 goto if2292_else5388 
    set $P5038, fb_tmp_395["$SCOPE"]
    set $P5040, $P5038
    goto if2292_end5389
  if2292_else5388:
    null $P5039
    set $P5040, $P5039
  if2292_end5389:
    unless_null $P5040, vivi_22935390
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5041
  vivi_22935390:
    unless_null $P5040, vivi_22945391
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22945391:
    set $P5035, $P5040
  fallback5387:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2291_end5386 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5392
    nqp_get_sc_object $P5045, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5044, $P5045
    set fb_tmp_396, $P5044
    repr_defined $I5009, fb_tmp_396
    unless $I5009 goto if2295_else5393 
    set $P5046, fb_tmp_396["$SCOPE"]
    set $P5048, $P5046
    goto if2295_end5394
  if2295_else5393:
    null $P5047
    set $P5048, $P5047
  if2295_end5394:
    unless_null $P5048, vivi_22965395
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5048, $P5049
  vivi_22965395:
    unless_null $P5048, vivi_22975396
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22975396:
    set $P5043, $P5048
  fallback5392:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2291_end5386:
    unless $I5010 goto if2290_else5383 
.annotate 'line', 2313
.annotate 'line', 2314
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5397
    nqp_get_sc_object $P5053, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5052, $P5053
    set fb_tmp_397, $P5052
    repr_defined $I5011, fb_tmp_397
    unless $I5011 goto if2298_else5398 
    set $P5054, fb_tmp_397["$W"]
    set $P5056, $P5054
    goto if2298_end5399
  if2298_else5398:
    null $P5055
    set $P5056, $P5055
  if2298_end5399:
    unless_null $P5056, vivi_22995400
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5056, $P5057
  vivi_22995400:
    unless_null $P5056, vivi_23005401
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_23005401:
    set $P5051, $P5056
  fallback5397:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5402
    nqp_get_sc_object $P5061, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5060, $P5061
    set fb_tmp_398, $P5060
    repr_defined $I5012, fb_tmp_398
    unless $I5012 goto if2301_else5403 
    set $P5062, fb_tmp_398["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2301_end5404
  if2301_else5403:
    null $P5063
    set $P5064, $P5063
  if2301_end5404:
    unless_null $P5064, vivi_23025405
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5064, $P5065
  vivi_23025405:
    unless_null $P5064, vivi_23035406
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_23035406:
    set $P5059, $P5064
  fallback5402:
    unless_null _lex_param_1, fallback5411
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5067
  fallback5411:
    set fb_tmp_400, _lex_param_1
    repr_defined $I5014, fb_tmp_400
    unless $I5014 goto if2305_else5409 
    set $P5068, fb_tmp_400["name"]
    set $P5070, $P5068
    goto if2305_end5410
  if2305_else5409:
    null $P5069
    set $P5070, $P5069
  if2305_end5410:
    unless_null $P5070, vivi_23065412
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5070, $P5071
  vivi_23065412:
    set fb_tmp_399, $P5070
    repr_defined $I5013, fb_tmp_399
    unless $I5013 goto if2304_else5407 
    set $P5072, fb_tmp_399["identifier"]
    set $P5074, $P5072
    goto if2304_end5408
  if2304_else5407:
    null $P5073
    set $P5074, $P5073
  if2304_end5408:
    unless_null $P5074, vivi_23075413
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5074, $P5075
  vivi_23075413:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5420
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5076
  fallback5420:
    set fb_tmp_402, _lex_param_1
    repr_defined $I5017, fb_tmp_402
    unless $I5017 goto if2310_else5418 
    set $P5077, fb_tmp_402["name"]
    set $P5079, $P5077
    goto if2310_end5419
  if2310_else5418:
    null $P5078
    set $P5079, $P5078
  if2310_end5419:
    unless_null $P5079, vivi_23115421
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5079, $P5080
  vivi_23115421:
    set fb_tmp_401, $P5079
    repr_defined $I5016, fb_tmp_401
    unless $I5016 goto if2309_else5416 
    set $P5081, fb_tmp_401["identifier"]
    set $P5083, $P5081
    goto if2309_end5417
  if2309_else5416:
    null $P5082
    set $P5083, $P5082
  if2309_end5417:
    unless_null $P5083, vivi_23125422
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5083, $P5084
  vivi_23125422:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2308_end5415 
.annotate 'line', 2315
.annotate 'line', 2316
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5423
    nqp_get_sc_object $P5087, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5086, $P5087
    set fb_tmp_403, $P5086
    repr_defined $I5018, fb_tmp_403
    unless $I5018 goto if2313_else5424 
    set $P5088, fb_tmp_403["$W"]
    set $P5090, $P5088
    goto if2313_end5425
  if2313_else5424:
    null $P5089
    set $P5090, $P5089
  if2313_end5425:
    unless_null $P5090, vivi_23145426
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5090, $P5091
  vivi_23145426:
    unless_null $P5090, vivi_23155427
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_23155427:
    set $P5085, $P5090
  fallback5423:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5428
    nqp_get_sc_object $P5095, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5094, $P5095
    set fb_tmp_404, $P5094
    repr_defined $I5019, fb_tmp_404
    unless $I5019 goto if2316_else5429 
    set $P5096, fb_tmp_404["$W"]
    set $P5098, $P5096
    goto if2316_end5430
  if2316_else5429:
    null $P5097
    set $P5098, $P5097
  if2316_end5430:
    unless_null $P5098, vivi_23175431
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5098, $P5099
  vivi_23175431:
    unless_null $P5098, vivi_23185432
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_23185432:
    set $P5093, $P5098
  fallback5428:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5439
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5102
  fallback5439:
    set fb_tmp_407, _lex_param_1
    repr_defined $I5022, fb_tmp_407
    unless $I5022 goto if2321_else5437 
    set $P5103, fb_tmp_407["name"]
    set $P5105, $P5103
    goto if2321_end5438
  if2321_else5437:
    null $P5104
    set $P5105, $P5104
  if2321_end5438:
    unless_null $P5105, vivi_23225440
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5105, $P5106
  vivi_23225440:
    set fb_tmp_406, $P5105
    repr_defined $I5021, fb_tmp_406
    unless $I5021 goto if2320_else5435 
    set $P5107, fb_tmp_406["identifier"]
    set $P5109, $P5107
    goto if2320_end5436
  if2320_else5435:
    null $P5108
    set $P5109, $P5108
  if2320_end5436:
    unless_null $P5109, vivi_23235441
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5109, $P5110
  vivi_23235441:
    set fb_tmp_405, $P5109
    repr_defined $I5020, fb_tmp_405
    unless $I5020 goto if2319_else5433 
    set $P5111, fb_tmp_405[0]
    set $P5113, $P5111
    goto if2319_end5434
  if2319_else5433:
    null $P5112
    set $P5113, $P5112
  if2319_end5434:
    unless_null $P5113, vivi_23245442
    nqp_get_sc_object $P5114, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5113, $P5114
  vivi_23245442:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2308_end5415:
    goto if2290_end5384
  if2290_else5383:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5445
    nqp_get_sc_object $P5120, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5119, $P5120
    set fb_tmp_408, $P5119
    repr_defined $I5024, fb_tmp_408
    unless $I5024 goto if2326_else5446 
    set $P5121, fb_tmp_408["$SCOPE"]
    set $P5123, $P5121
    goto if2326_end5447
  if2326_else5446:
    null $P5122
    set $P5123, $P5122
  if2326_end5447:
    unless_null $P5123, vivi_23275448
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5123, $P5124
  vivi_23275448:
    unless_null $P5123, vivi_23285449
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_23285449:
    set $P5118, $P5123
  fallback5445:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2325_else5443 
.annotate 'line', 2319
    unless_null _lex_param_1, fallback5456
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5126
  fallback5456:
    set fb_tmp_410, _lex_param_1
    repr_defined $I5027, fb_tmp_410
    unless $I5027 goto if2331_else5454 
    set $P5127, fb_tmp_410["name"]
    set $P5129, $P5127
    goto if2331_end5455
  if2331_else5454:
    null $P5128
    set $P5129, $P5128
  if2331_end5455:
    unless_null $P5129, vivi_23325457
    nqp_get_sc_object $P5130, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5129, $P5130
  vivi_23325457:
    set fb_tmp_409, $P5129
    repr_defined $I5026, fb_tmp_409
    unless $I5026 goto if2330_else5452 
    set $P5131, fb_tmp_409["identifier"]
    set $P5133, $P5131
    goto if2330_end5453
  if2330_else5452:
    null $P5132
    set $P5133, $P5132
  if2330_end5453:
    unless_null $P5133, vivi_23335458
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5133, $P5134
  vivi_23335458:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2329_end5451 
.annotate 'line', 2320
.annotate 'line', 2321
    unless_null _lex_param_1, fallback5461
    nqp_get_sc_object $P5135, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5135
  fallback5461:
    set fb_tmp_411, _lex_param_1
    repr_defined $I5028, fb_tmp_411
    unless $I5028 goto if2334_else5459 
    set $P5136, fb_tmp_411["name"]
    set $P5138, $P5136
    goto if2334_end5460
  if2334_else5459:
    null $P5137
    set $P5138, $P5137
  if2334_end5460:
    unless_null $P5138, vivi_23355462
    nqp_get_sc_object $P5139, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5138, $P5139
  vivi_23355462:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2329_end5451:
.annotate 'line', 2323
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5463
    nqp_get_sc_object $P5144, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5143, $P5144
    set fb_tmp_412, $P5143
    repr_defined $I5029, fb_tmp_412
    unless $I5029 goto if2336_else5464 
    set $P5145, fb_tmp_412["$W"]
    set $P5147, $P5145
    goto if2336_end5465
  if2336_else5464:
    null $P5146
    set $P5147, $P5146
  if2336_end5465:
    unless_null $P5147, vivi_23375466
    nqp_get_sc_object $P5148, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5147, $P5148
  vivi_23375466:
    unless_null $P5147, vivi_23385467
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23385467:
    set $P5142, $P5147
  fallback5463:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5468
    nqp_get_sc_object $P5152, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5151, $P5152
    set fb_tmp_413, $P5151
    repr_defined $I5030, fb_tmp_413
    unless $I5030 goto if2339_else5469 
    set $P5153, fb_tmp_413["$W"]
    set $P5155, $P5153
    goto if2339_end5470
  if2339_else5469:
    null $P5154
    set $P5155, $P5154
  if2339_end5470:
    unless_null $P5155, vivi_23405471
    nqp_get_sc_object $P5156, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5155, $P5156
  vivi_23405471:
    unless_null $P5155, vivi_23415472
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23415472:
    set $P5150, $P5155
  fallback5468:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5479
    nqp_get_sc_object $P5159, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5159
  fallback5479:
    set fb_tmp_416, _lex_param_1
    repr_defined $I5033, fb_tmp_416
    unless $I5033 goto if2344_else5477 
    set $P5160, fb_tmp_416["name"]
    set $P5162, $P5160
    goto if2344_end5478
  if2344_else5477:
    null $P5161
    set $P5162, $P5161
  if2344_end5478:
    unless_null $P5162, vivi_23455480
    nqp_get_sc_object $P5163, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5162, $P5163
  vivi_23455480:
    set fb_tmp_415, $P5162
    repr_defined $I5032, fb_tmp_415
    unless $I5032 goto if2343_else5475 
    set $P5164, fb_tmp_415["identifier"]
    set $P5166, $P5164
    goto if2343_end5476
  if2343_else5475:
    null $P5165
    set $P5166, $P5165
  if2343_end5476:
    unless_null $P5166, vivi_23465481
    nqp_get_sc_object $P5167, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5166, $P5167
  vivi_23465481:
    set fb_tmp_414, $P5166
    repr_defined $I5031, fb_tmp_414
    unless $I5031 goto if2342_else5473 
    set $P5168, fb_tmp_414[0]
    set $P5170, $P5168
    goto if2342_end5474
  if2342_else5473:
    null $P5169
    set $P5170, $P5169
  if2342_end5474:
    unless_null $P5170, vivi_23475482
    nqp_get_sc_object $P5171, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5170, $P5171
  vivi_23475482:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2325_end5444
  if2325_else5443:
.annotate 'line', 2325
.annotate 'line', 2326
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5483
    nqp_get_sc_object $P5176, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5175, $P5176
    set fb_tmp_417, $P5175
    repr_defined $I5034, fb_tmp_417
    unless $I5034 goto if2348_else5484 
    set $P5177, fb_tmp_417["$SCOPE"]
    set $P5179, $P5177
    goto if2348_end5485
  if2348_else5484:
    null $P5178
    set $P5179, $P5178
  if2348_end5485:
    unless_null $P5179, vivi_23495486
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5179, $P5180
  vivi_23495486:
    unless_null $P5179, vivi_23505487
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23505487:
    set $P5174, $P5179
  fallback5483:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2325_end5444:
  if2290_end5384:
.annotate 'line', 2329
    nqp_get_sc_object $P5184, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_295_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2332
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5165 = 'cuid_489_1383915013.33774' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_490_1383915013.33774' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_491_1383915013.33774' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_492_1383915013.33774' 
    capture_lex $P5165 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc fb_tmp_421 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    .local pmc fb_tmp_451 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
    .local pmc fb_tmp_457 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    unless_null _lex_param_1, fallback5492
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5492:
    set fb_tmp_419, _lex_param_1
    repr_defined $I5002, fb_tmp_419
    unless $I5002 goto if2352_else5490 
    set $P5007, fb_tmp_419["name"]
    set $P5009, $P5007
    goto if2352_end5491
  if2352_else5490:
    null $P5008
    set $P5009, $P5008
  if2352_end5491:
    unless_null $P5009, vivi_23535493
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_23535493:
    set fb_tmp_418, $P5009
    repr_defined $I5001, fb_tmp_418
    unless $I5001 goto if2351_else5488 
    set $P5011, fb_tmp_418["identifier"]
    set $P5013, $P5011
    goto if2351_end5489
  if2351_else5488:
    null $P5012
    set $P5013, $P5012
  if2351_end5489:
    unless_null $P5013, vivi_23545494
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_23545494:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2335
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5497
    nqp_get_sc_object $P5019, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_45, $P5018
    set fb_tmp_421, pkg_viv_tmp_45
    repr_defined $I5004, fb_tmp_421
    unless $I5004 goto if2356_else5498 
    set $P5020, fb_tmp_421["%HOW"]
    set $P5022, $P5020
    goto if2356_end5499
  if2356_else5498:
    null $P5021
    set $P5022, $P5021
  if2356_end5499:
    unless_null $P5022, vivi_23575500
    new $P5023, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23575500:
    unless_null $P5022, vivi_23585501
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23585501:
    set $P5017, $P5022
  fallback5497:
    set fb_tmp_420, $P5017
    repr_defined $I5003, fb_tmp_420
    unless $I5003 goto if2355_else5495 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5502
    nqp_get_sc_object $P5028, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5027, $P5028
    set fb_tmp_422, $P5027
    repr_defined $I5005, fb_tmp_422
    unless $I5005 goto if2359_else5503 
    set $P5029, fb_tmp_422["$PKGDECL"]
    set $P5031, $P5029
    goto if2359_end5504
  if2359_else5503:
    null $P5030
    set $P5031, $P5030
  if2359_end5504:
    unless_null $P5031, vivi_23605505
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_23605505:
    unless_null $P5031, vivi_23615506
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23615506:
    set $P5026, $P5031
  fallback5502:
    set $S5002, $P5026
    set $P5025, fb_tmp_420[$S5002]
    set $P5035, $P5025
    goto if2355_end5496
  if2355_else5495:
    null $P5034
    set $P5035, $P5034
  if2355_end5496:
    unless_null $P5035, vivi_23625507
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5035, $P5036
  vivi_23625507:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5512
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5037
  fallback5512:
    set fb_tmp_423, _lex_param_1
    repr_defined $I5006, fb_tmp_423
    unless $I5006 goto if2364_else5510 
    set $P5038, fb_tmp_423["blockoid"]
    set $P5040, $P5038
    goto if2364_end5511
  if2364_else5510:
    null $P5039
    set $P5040, $P5039
  if2364_end5511:
    unless_null $P5040, vivi_23655513
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5041
  vivi_23655513:
    unless $P5040 goto if2363_else5508 
.annotate 'line', 2340
.annotate 'line', 2341
    unless_null _lex_param_1, fallback5516
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5042
  fallback5516:
    set fb_tmp_424, _lex_param_1
    repr_defined $I5007, fb_tmp_424
    unless $I5007 goto if2366_else5514 
    set $P5043, fb_tmp_424["blockoid"]
    set $P5045, $P5043
    goto if2366_end5515
  if2366_else5514:
    null $P5044
    set $P5045, $P5044
  if2366_end5515:
    unless_null $P5045, vivi_23675517
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  vivi_23675517:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2363_end5509
  if2363_else5508:
.annotate 'line', 2343
.annotate 'line', 2344
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5518
    nqp_get_sc_object $P5050, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5049, $P5050
    set fb_tmp_425, $P5049
    repr_defined $I5008, fb_tmp_425
    unless $I5008 goto if2368_else5519 
    set $P5051, fb_tmp_425["$W"]
    set $P5053, $P5051
    goto if2368_end5520
  if2368_else5519:
    null $P5052
    set $P5053, $P5052
  if2368_end5520:
    unless_null $P5053, vivi_23695521
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5053, $P5054
  vivi_23695521:
    unless_null $P5053, vivi_23705522
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23705522:
    set $P5048, $P5053
  fallback5518:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2345
    unless_null _lex_param_1, fallback5525
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5057
  fallback5525:
    set fb_tmp_426, _lex_param_1
    repr_defined $I5009, fb_tmp_426
    unless $I5009 goto if2371_else5523 
    set $P5058, fb_tmp_426["statementlist"]
    set $P5060, $P5058
    goto if2371_end5524
  if2371_else5523:
    null $P5059
    set $P5060, $P5059
  if2371_end5524:
    unless_null $P5060, vivi_23725526
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5060, $P5061
  vivi_23725526:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2363_end5509:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2374_end5530 
.annotate 'line', 2352
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2374_end5530:
    unless $P5065 goto if2373_else5527 
    .const 'Sub' $P5067 = 'cuid_489_1383915013.33774' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2373_end5528
  if2373_else5527:
.annotate 'line', 2367
.annotate 'line', 2368
    $P5069 = $P104."blocktype"("immediate")
  if2373_end5528:
    unless_null _lex_param_1, fallback5561
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5070
  fallback5561:
    set fb_tmp_432, _lex_param_1
    repr_defined $I5011, fb_tmp_432
    unless $I5011 goto if2389_else5559 
    set $P5071, fb_tmp_432["parent"]
    set $P5073, $P5071
    goto if2389_end5560
  if2389_else5559:
    null $P5072
    set $P5073, $P5072
  if2389_end5560:
    unless_null $P5073, vivi_23905562
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5073, $P5074
  vivi_23905562:
    unless $P5073 goto if2388_else5557 
    .const 'Sub' $P5075 = 'cuid_490_1383915013.33774' 
    capture_lex $P5075
    $P5076 = $P5075()
    goto if2388_end5558
  if2388_else5557:
    can $I5012, $P103, "set_default_parent"
    box $P5080, $I5012
    set $P5079, $P5080
    unless $I5012 goto if2409_end5594 
    .const 'Sub' $P5077 = 'cuid_491_1383915013.33774' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
  if2409_end5594:
  if2388_end5558:
    unless_null _lex_param_1, fallback5621
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5081
  fallback5621:
    set fb_tmp_443, _lex_param_1
    repr_defined $I5013, fb_tmp_443
    unless $I5013 goto if2424_else5619 
    set $P5082, fb_tmp_443["role"]
    set $P5084, $P5082
    goto if2424_end5620
  if2424_else5619:
    null $P5083
    set $P5084, $P5083
  if2424_end5620:
    unless_null $P5084, vivi_24255622
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5084, $P5085
  vivi_24255622:
    unless $P5084 goto if2423_end5618 
.annotate 'line', 2393
    unless_null _lex_param_1, fallback5625
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5089
  fallback5625:
    set fb_tmp_444, _lex_param_1
    repr_defined $I5014, fb_tmp_444
    unless $I5014 goto if2426_else5623 
    set $P5090, fb_tmp_444["role"]
    set $P5092, $P5090
    goto if2426_end5624
  if2426_else5623:
    null $P5091
    set $P5092, $P5091
  if2426_end5624:
    unless_null $P5092, vivi_24275626
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5092, $P5093
  vivi_24275626:
    set $P5086, $P5092
    iter $P5088, $P5092
  for_next5649:
    unless $P5088, for_done5651
    shift $P5095, $P5088
  for_redo5650:
    .const 'Sub' $P5094 = 'cuid_492_1383915013.33774' 
    capture_lex $P5094
    $P5086 = $P5094($P5095)
    goto for_next5649
  for_done5651:
  if2423_end5618:
.annotate 'line', 2411
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback5652
    nqp_get_sc_object $P5098, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5097, $P5098
    set fb_tmp_449, $P5097
    repr_defined $I5015, fb_tmp_449
    unless $I5015 goto if2442_else5653 
    set $P5099, fb_tmp_449["$W"]
    set $P5101, $P5099
    goto if2442_end5654
  if2442_else5653:
    null $P5100
    set $P5101, $P5100
  if2442_end5654:
    unless_null $P5101, vivi_24435655
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5101, $P5102
  vivi_24435655:
    unless_null $P5101, vivi_24445656
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_24445656:
    set $P5096, $P5101
  fallback5652:
    find_dynamic_lex $P5104, "$*PACKAGE"
    unless_null $P5104, fallback5657
    nqp_get_sc_object $P5106, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5105, $P5106
    set fb_tmp_450, $P5105
    repr_defined $I5016, fb_tmp_450
    unless $I5016 goto if2445_else5658 
    set $P5107, fb_tmp_450["$PACKAGE"]
    set $P5109, $P5107
    goto if2445_end5659
  if2445_else5658:
    null $P5108
    set $P5109, $P5108
  if2445_end5659:
    unless_null $P5109, vivi_24465660
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5109, $P5110
  vivi_24465660:
    unless_null $P5109, vivi_24475661
    die "Contextual $*PACKAGE not found"
    box $P5111, "Contextual $*PACKAGE not found"
    set $P5109, $P5111
  vivi_24475661:
    set $P5104, $P5109
  fallback5657:
    $P5096."pkg_compose"($P5104)
    find_dynamic_lex $P5112, "$*PKGDECL"
    unless_null $P5112, fallback5666
    nqp_get_sc_object $P5114, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5113, $P5114
    set fb_tmp_451, $P5113
    repr_defined $I5018, fb_tmp_451
    unless $I5018 goto if2450_else5667 
    set $P5115, fb_tmp_451["$PKGDECL"]
    set $P5117, $P5115
    goto if2450_end5668
  if2450_else5667:
    null $P5116
    set $P5117, $P5116
  if2450_end5668:
    unless_null $P5117, vivi_24515669
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5117, $P5118
  vivi_24515669:
    unless_null $P5117, vivi_24525670
    die "Contextual $*PKGDECL not found"
    box $P5119, "Contextual $*PKGDECL not found"
    set $P5117, $P5119
  vivi_24525670:
    set $P5112, $P5117
  fallback5666:
    set $S5003, $P5112
    iseq $I5017, $S5003, "grammar"
    set $I5021, $I5017
    unless $I5017 goto if2449_end5665 
    find_dynamic_lex $P5120, "$*PACKAGE"
    unless_null $P5120, fallback5671
    nqp_get_sc_object $P5122, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5121, $P5122
    set fb_tmp_452, $P5121
    repr_defined $I5020, fb_tmp_452
    unless $I5020 goto if2453_else5672 
    set $P5123, fb_tmp_452["$PACKAGE"]
    set $P5125, $P5123
    goto if2453_end5673
  if2453_else5672:
    null $P5124
    set $P5125, $P5124
  if2453_end5673:
    unless_null $P5125, vivi_24545674
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5125, $P5126
  vivi_24545674:
    unless_null $P5125, vivi_24555675
    die "Contextual $*PACKAGE not found"
    box $P5127, "Contextual $*PACKAGE not found"
    set $P5125, $P5127
  vivi_24555675:
    set $P5120, $P5125
  fallback5671:
    can $I5019, $P5120, "!precompute_nfas"
    set $I5021, $I5019
  if2449_end5665:
    unless $I5021 goto if2448_end5663 
.annotate 'line', 2414
.annotate 'line', 2415
    find_dynamic_lex $P5128, "$*PACKAGE"
    unless_null $P5128, fallback5676
    nqp_get_sc_object $P5130, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5129, $P5130
    set fb_tmp_453, $P5129
    repr_defined $I5022, fb_tmp_453
    unless $I5022 goto if2456_else5677 
    set $P5131, fb_tmp_453["$PACKAGE"]
    set $P5133, $P5131
    goto if2456_end5678
  if2456_else5677:
    null $P5132
    set $P5133, $P5132
  if2456_end5678:
    unless_null $P5133, vivi_24575679
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5133, $P5134
  vivi_24575679:
    unless_null $P5133, vivi_24585680
    die "Contextual $*PACKAGE not found"
    box $P5135, "Contextual $*PACKAGE not found"
    set $P5133, $P5135
  vivi_24585680:
    set $P5128, $P5133
  fallback5676:
    $P5136 = $P5128."!precompute_nfas"()
  if2448_end5663:
    unless_null _lex_param_1, fallback5685
    nqp_get_sc_object $P5137, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5137
  fallback5685:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5023, fb_tmp_454
    unless $I5023 goto if2460_else5683 
    set $P5138, fb_tmp_454["export"]
    set $P5140, $P5138
    goto if2460_end5684
  if2460_else5683:
    null $P5139
    set $P5140, $P5139
  if2460_end5684:
    unless_null $P5140, vivi_24615686
    nqp_get_sc_object $P5141, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5140, $P5141
  vivi_24615686:
    unless $P5140 goto if2459_end5682 
.annotate 'line', 2419
    find_dynamic_lex $P5144, "$*EXPORT"
    unless_null $P5144, fallback5689
    nqp_get_sc_object $P5146, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5145, $P5146
    set fb_tmp_456, $P5145
    repr_defined $I5025, fb_tmp_456
    unless $I5025 goto if2463_else5690 
    set $P5147, fb_tmp_456["$EXPORT"]
    set $P5149, $P5147
    goto if2463_end5691
  if2463_else5690:
    null $P5148
    set $P5149, $P5148
  if2463_end5691:
    unless_null $P5149, vivi_24645692
    nqp_get_sc_object $P5150, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5149, $P5150
  vivi_24645692:
    unless_null $P5149, vivi_24655693
    die "Contextual $*EXPORT not found"
    box $P5151, "Contextual $*EXPORT not found"
    set $P5149, $P5151
  vivi_24655693:
    set $P5144, $P5149
  fallback5689:
    get_who $P5143, $P5144
    set fb_tmp_455, $P5143
    repr_defined $I5024, fb_tmp_455
    unless $I5024 goto if2462_else5687 
    set $P5152, fb_tmp_455["DEFAULT"]
    set $P5154, $P5152
    goto if2462_end5688
  if2462_else5687:
    null $P5153
    set $P5154, $P5153
  if2462_end5688:
    unless_null $P5154, vivi_24665694
    nqp_get_sc_object $P5155, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5154, $P5155
  vivi_24665694:
    get_who $P5142, $P5154
    set $S5004, $P102
    find_dynamic_lex $P5156, "$*PACKAGE"
    unless_null $P5156, fallback5695
    nqp_get_sc_object $P5158, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5157, $P5158
    set fb_tmp_457, $P5157
    repr_defined $I5026, fb_tmp_457
    unless $I5026 goto if2467_else5696 
    set $P5159, fb_tmp_457["$PACKAGE"]
    set $P5161, $P5159
    goto if2467_end5697
  if2467_else5696:
    null $P5160
    set $P5161, $P5160
  if2467_end5697:
    unless_null $P5161, vivi_24685698
    nqp_get_sc_object $P5162, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5161, $P5162
  vivi_24685698:
    unless_null $P5161, vivi_24695699
    die "Contextual $*PACKAGE not found"
    box $P5163, "Contextual $*PACKAGE not found"
    set $P5161, $P5163
  vivi_24695699:
    set $P5156, $P5161
  fallback5695:
    set $P5142[$S5004], $P5156
  if2459_end5682:
.annotate 'line', 2423
    $P5164 = _lex_param_1."!make"($P104)
    .return ($P5164) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1383915013.33774") :anon :lex :outer("cuid_295_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2352
    .const 'Sub' $P5051 = 'cuid_488_1383915013.33774' 
    capture_lex $P5051 
    .lex "$params", $P101 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2353
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration_static")
.annotate 'line', 2354
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 2355
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5535
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  fallback5535:
    set fb_tmp_427, $P5007
    repr_defined $I5001, fb_tmp_427
    unless $I5001 goto if2376_else5533 
    set $P5009, fb_tmp_427["role_params"]
    set $P5011, $P5009
    goto if2376_end5534
  if2376_else5533:
    null $P5010
    set $P5011, $P5010
  if2376_end5534:
    unless_null $P5011, vivi_23775536
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_23775536:
    unless $P5011 goto if2375_end5532 
.annotate 'line', 2357
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5541
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  fallback5541:
    set fb_tmp_429, $P5016
    repr_defined $I5003, fb_tmp_429
    unless $I5003 goto if2379_else5539 
    set $P5018, fb_tmp_429["role_params"]
    set $P5020, $P5018
    goto if2379_end5540
  if2379_else5539:
    null $P5019
    set $P5020, $P5019
  if2379_end5540:
    unless_null $P5020, vivi_23805542
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_23805542:
    set fb_tmp_428, $P5020
    repr_defined $I5002, fb_tmp_428
    unless $I5002 goto if2378_else5537 
    set $P5022, fb_tmp_428["variable"]
    set $P5024, $P5022
    goto if2378_end5538
  if2378_else5537:
    null $P5023
    set $P5024, $P5023
  if2378_end5538:
    unless_null $P5024, vivi_23815543
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_23815543:
    set $P5013, $P5024
    iter $P5015, $P5024
  for_next5544:
    unless $P5015, for_done5546
    shift $P5027, $P5015
  for_redo5545:
    .const 'Sub' $P5026 = 'cuid_488_1383915013.33774' 
    capture_lex $P5026
    $P5013 = $P5026($P5027)
    goto for_next5544
  for_done5546:
  if2375_end5532:
.annotate 'line', 2362
    find_lex $P5028, "$past"
    $P5028."unshift"($P101)
.annotate 'line', 2363
    find_lex $P5029, "$past"
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5031 = $P5030."new"("curlexpad" :named("op"))
    $P5029."push"($P5031)
.annotate 'line', 2364
    find_lex $P5032, "$past"
    $P5032."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2365
    find_dynamic_lex $P5033, "$*W"
    unless_null $P5033, fallback5547
    nqp_get_sc_object $P5035, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5034, $P5035
    set fb_tmp_430, $P5034
    repr_defined $I5004, fb_tmp_430
    unless $I5004 goto if2382_else5548 
    set $P5036, fb_tmp_430["$W"]
    set $P5038, $P5036
    goto if2382_end5549
  if2382_else5548:
    null $P5037
    set $P5038, $P5037
  if2382_end5549:
    unless_null $P5038, vivi_23835550
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5038, $P5039
  vivi_23835550:
    unless_null $P5038, vivi_23845551
    die "Contextual $*W not found"
    box $P5040, "Contextual $*W not found"
    set $P5038, $P5040
  vivi_23845551:
    set $P5033, $P5038
  fallback5547:
    find_dynamic_lex $P5041, "$*PACKAGE"
    unless_null $P5041, fallback5552
    nqp_get_sc_object $P5043, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5042, $P5043
    set fb_tmp_431, $P5042
    repr_defined $I5005, fb_tmp_431
    unless $I5005 goto if2385_else5553 
    set $P5044, fb_tmp_431["$PACKAGE"]
    set $P5046, $P5044
    goto if2385_end5554
  if2385_else5553:
    null $P5045
    set $P5046, $P5045
  if2385_end5554:
    unless_null $P5046, vivi_23865555
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5046, $P5047
  vivi_23865555:
    unless_null $P5046, vivi_23875556
    die "Contextual $*PACKAGE not found"
    box $P5048, "Contextual $*PACKAGE not found"
    set $P5046, $P5048
  vivi_23875556:
    set $P5041, $P5046
  fallback5552:
    find_lex $P5049, "$past"
    $P5050 = $P5033."pkg_set_body_block"($P5041, $P5049)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1383915013.33774") :anon :lex :outer("cuid_489_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2358
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2359
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1383915013.33774") :anon :lex :outer("cuid_295_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2372
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_438 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_23995576
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2375
.annotate 'line', 2376
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5563
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_433, $P5004
    repr_defined $I5001, fb_tmp_433
    unless $I5001 goto if2391_else5564 
    set $P5006, fb_tmp_433["$W"]
    set $P5008, $P5006
    goto if2391_end5565
  if2391_else5564:
    null $P5007
    set $P5008, $P5007
  if2391_end5565:
    unless_null $P5008, vivi_23925566
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_23925566:
    unless_null $P5008, vivi_23935567
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23935567:
    set $P5003, $P5008
  fallback5563:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5572
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  fallback5572:
    set fb_tmp_435, $P5012
    repr_defined $I5003, fb_tmp_435
    unless $I5003 goto if2395_else5570 
    set $P5014, fb_tmp_435["parent"]
    set $P5016, $P5014
    goto if2395_end5571
  if2395_else5570:
    null $P5015
    set $P5016, $P5015
  if2395_end5571:
    unless_null $P5016, vivi_23965573
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_23965573:
    set fb_tmp_434, $P5016
    repr_defined $I5002, fb_tmp_434
    unless $I5002 goto if2394_else5568 
    set $P5018, fb_tmp_434["identifier"]
    set $P5020, $P5018
    goto if2394_end5569
  if2394_else5568:
    null $P5019
    set $P5020, $P5019
  if2394_end5569:
    unless_null $P5020, vivi_23975574
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_23975574:
    repr_clone $P5011, $P5020
    $P5022 = $P5003."find_sym"($P5011)
    set $P101, $P5022
    box $P5023, 1
    set $P102, $P5023
    set $P5025, $P102
    pop_eh 
    goto skip_handler_23985575
  catch_handler_23995576:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_23985575
  skip_handler_23985575:
    unless $P102 goto if2400_else5577 
.annotate 'line', 2379
.annotate 'line', 2380
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback5579
    nqp_get_sc_object $P5028, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5027, $P5028
    set fb_tmp_436, $P5027
    repr_defined $I5004, fb_tmp_436
    unless $I5004 goto if2401_else5580 
    set $P5029, fb_tmp_436["$W"]
    set $P5031, $P5029
    goto if2401_end5581
  if2401_else5580:
    null $P5030
    set $P5031, $P5030
  if2401_end5581:
    unless_null $P5031, vivi_24025582
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_24025582:
    unless_null $P5031, vivi_24035583
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_24035583:
    set $P5026, $P5031
  fallback5579:
    find_dynamic_lex $P5034, "$*PACKAGE"
    unless_null $P5034, fallback5584
    nqp_get_sc_object $P5036, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5035, $P5036
    set fb_tmp_437, $P5035
    repr_defined $I5005, fb_tmp_437
    unless $I5005 goto if2404_else5585 
    set $P5037, fb_tmp_437["$PACKAGE"]
    set $P5039, $P5037
    goto if2404_end5586
  if2404_else5585:
    null $P5038
    set $P5039, $P5038
  if2404_end5586:
    unless_null $P5039, vivi_24055587
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5039, $P5040
  vivi_24055587:
    unless_null $P5039, vivi_24065588
    die "Contextual $*PACKAGE not found"
    box $P5041, "Contextual $*PACKAGE not found"
    set $P5039, $P5041
  vivi_24065588:
    set $P5034, $P5039
  fallback5584:
    $P5042 = $P5026."pkg_add_parent_or_role"($P5034, "add_parent", $P101)
    set $P5052, $P5042
    goto if2400_end5578
  if2400_else5577:
.annotate 'line', 2382
.annotate 'line', 2383
    find_lex $P5043, "$/"
    $P5044 = $P5043."CURSOR"()
    find_lex $P5045, "$/"
    unless_null $P5045, fallback5591
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  fallback5591:
    set fb_tmp_438, $P5045
    repr_defined $I5006, fb_tmp_438
    unless $I5006 goto if2407_else5589 
    set $P5047, fb_tmp_438["parent"]
    set $P5049, $P5047
    goto if2407_end5590
  if2407_else5589:
    null $P5048
    set $P5049, $P5048
  if2407_end5590:
    unless_null $P5049, vivi_24085592
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_24085592:
    set $S5003, $P5049
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5051 = $P5044."panic"($S5001)
    set $P5052, $P5051
  if2400_end5578:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1383915013.33774") :anon :lex :outer("cuid_295_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2386
    .lex "$default", $P101 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5597
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_439, $P5003
    repr_defined $I5002, fb_tmp_439
    unless $I5002 goto if2411_else5598 
    set $P5005, fb_tmp_439["$PKGDECL"]
    set $P5007, $P5005
    goto if2411_end5599
  if2411_else5598:
    null $P5006
    set $P5007, $P5006
  if2411_end5599:
    unless_null $P5007, vivi_24125600
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_24125600:
    unless_null $P5007, vivi_24135601
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_24135601:
    set $P5002, $P5007
  fallback5597:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2410_else5595 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2410_end5596
  if2410_else5595:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2410_end5596:
    set $P101, $P5014
.annotate 'line', 2388
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5602
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5016, $P5017
    set fb_tmp_440, $P5016
    repr_defined $I5003, fb_tmp_440
    unless $I5003 goto if2414_else5603 
    set $P5018, fb_tmp_440["$W"]
    set $P5020, $P5018
    goto if2414_end5604
  if2414_else5603:
    null $P5019
    set $P5020, $P5019
  if2414_end5604:
    unless_null $P5020, vivi_24155605
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_24155605:
    unless_null $P5020, vivi_24165606
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_24165606:
    set $P5015, $P5020
  fallback5602:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5607
    nqp_get_sc_object $P5025, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5024, $P5025
    set fb_tmp_441, $P5024
    repr_defined $I5004, fb_tmp_441
    unless $I5004 goto if2417_else5608 
    set $P5026, fb_tmp_441["$PACKAGE"]
    set $P5028, $P5026
    goto if2417_end5609
  if2417_else5608:
    null $P5027
    set $P5028, $P5027
  if2417_end5609:
    unless_null $P5028, vivi_24185610
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_24185610:
    unless_null $P5028, vivi_24195611
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_24195611:
    set $P5023, $P5028
  fallback5607:
.annotate 'line', 2389
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5612
    nqp_get_sc_object $P5033, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5032, $P5033
    set fb_tmp_442, $P5032
    repr_defined $I5005, fb_tmp_442
    unless $I5005 goto if2420_else5613 
    set $P5034, fb_tmp_442["$W"]
    set $P5036, $P5034
    goto if2420_end5614
  if2420_else5613:
    null $P5035
    set $P5036, $P5035
  if2420_end5614:
    unless_null $P5036, vivi_24215615
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5036, $P5037
  vivi_24215615:
    unless_null $P5036, vivi_24225616
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_24225616:
    set $P5031, $P5036
  fallback5612:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1383915013.33774") :anon :lex :outer("cuid_295_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2394
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24345636
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2397
.annotate 'line', 2398
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5627
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_445, $P5004
    repr_defined $I5001, fb_tmp_445
    unless $I5001 goto if2428_else5628 
    set $P5006, fb_tmp_445["$W"]
    set $P5008, $P5006
    goto if2428_end5629
  if2428_else5628:
    null $P5007
    set $P5008, $P5007
  if2428_end5629:
    unless_null $P5008, vivi_24295630
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_24295630:
    unless_null $P5008, vivi_24305631
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24305631:
    set $P5003, $P5008
  fallback5627:
    set fb_tmp_446, _lex_param_0
    repr_defined $I5002, fb_tmp_446
    unless $I5002 goto if2431_else5632 
    set $P5012, fb_tmp_446["identifier"]
    set $P5014, $P5012
    goto if2431_end5633
  if2431_else5632:
    null $P5013
    set $P5014, $P5013
  if2431_end5633:
    unless_null $P5014, vivi_24325634
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_24325634:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24335635
  catch_handler_24345636:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24335635
  skip_handler_24335635:
    unless $P102 goto if2435_else5637 
.annotate 'line', 2401
.annotate 'line', 2402
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5639
    nqp_get_sc_object $P5022, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5021, $P5022
    set fb_tmp_447, $P5021
    repr_defined $I5003, fb_tmp_447
    unless $I5003 goto if2436_else5640 
    set $P5023, fb_tmp_447["$W"]
    set $P5025, $P5023
    goto if2436_end5641
  if2436_else5640:
    null $P5024
    set $P5025, $P5024
  if2436_end5641:
    unless_null $P5025, vivi_24375642
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5025, $P5026
  vivi_24375642:
    unless_null $P5025, vivi_24385643
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24385643:
    set $P5020, $P5025
  fallback5639:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5644
    nqp_get_sc_object $P5030, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5029, $P5030
    set fb_tmp_448, $P5029
    repr_defined $I5004, fb_tmp_448
    unless $I5004 goto if2439_else5645 
    set $P5031, fb_tmp_448["$PACKAGE"]
    set $P5033, $P5031
    goto if2439_end5646
  if2439_else5645:
    null $P5032
    set $P5033, $P5032
  if2439_end5646:
    unless_null $P5033, vivi_24405647
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5033, $P5034
  vivi_24405647:
    unless_null $P5033, vivi_24415648
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24415648:
    set $P5028, $P5033
  fallback5644:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2435_end5638
  if2435_else5637:
.annotate 'line', 2404
.annotate 'line', 2405
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2435_end5638:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_296_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2426
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_493_1383915013.33774' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_458 
    unless_null _lex_param_1, fallback5702
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5004
  fallback5702:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5001, fb_tmp_458
    unless $I5001 goto if2470_else5700 
    set $P5005, fb_tmp_458["variable"]
    set $P5007, $P5005
    goto if2470_end5701
  if2470_else5700:
    null $P5006
    set $P5007, $P5006
  if2470_end5701:
    unless_null $P5007, vivi_24715703
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_24715703:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5709:
    unless $P5003, for_done5711
    shift $P5010, $P5003
  for_redo5710:
    .const 'Sub' $P5009 = 'cuid_493_1383915013.33774' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5709
  for_done5711:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1383915013.33774") :anon :lex :outer("cuid_296_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2427
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_459 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2428
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2429
    $P101."scope"("lexical")
.annotate 'line', 2430
    $P101."decl"("param")
.annotate 'line', 2431
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5704
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_459, $P5004
    repr_defined $I5001, fb_tmp_459
    unless $I5001 goto if2472_else5705 
    set $P5006, fb_tmp_459["$W"]
    set $P5008, $P5006
    goto if2472_end5706
  if2472_else5705:
    null $P5007
    set $P5008, $P5007
  if2472_end5706:
    unless_null $P5008, vivi_24735707
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_24735707:
    unless_null $P5008, vivi_24745708
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24745708:
    set $P5003, $P5008
  fallback5704:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_297_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2435
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_460 
    unless_null _lex_param_1, fallback5714
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5714:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5001, fb_tmp_460
    unless $I5001 goto if2475_else5712 
    set $P5002, fb_tmp_460["scoped"]
    set $P5004, $P5002
    goto if2475_end5713
  if2475_else5712:
    null $P5003
    set $P5004, $P5003
  if2475_end5713:
    unless_null $P5004, vivi_24765715
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_24765715:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_298_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_461 
    unless_null _lex_param_1, fallback5718
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5718:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5001, fb_tmp_461
    unless $I5001 goto if2477_else5716 
    set $P5002, fb_tmp_461["scoped"]
    set $P5004, $P5002
    goto if2477_end5717
  if2477_else5716:
    null $P5003
    set $P5004, $P5003
  if2477_end5717:
    unless_null $P5004, vivi_24785719
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_24785719:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_299_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2437
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_462 
    unless_null _lex_param_1, fallback5722
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5722:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5001, fb_tmp_462
    unless $I5001 goto if2479_else5720 
    set $P5002, fb_tmp_462["scoped"]
    set $P5004, $P5002
    goto if2479_end5721
  if2479_else5720:
    null $P5003
    set $P5004, $P5003
  if2479_end5721:
    unless_null $P5004, vivi_24805723
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_24805723:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_300_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    .local pmc fb_tmp_467 
.annotate 'line', 2440
    unless_null _lex_param_1, fallback5728
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5728:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5001, fb_tmp_463
    unless $I5001 goto if2482_else5726 
    set $P5002, fb_tmp_463["declarator"]
    set $P5004, $P5002
    goto if2482_end5727
  if2482_else5726:
    null $P5003
    set $P5004, $P5003
  if2482_end5727:
    unless_null $P5004, vivi_24835729
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_24835729:
    unless $P5004 goto if2481_else5724 
    unless_null _lex_param_1, fallback5732
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5732:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5002, fb_tmp_464
    unless $I5002 goto if2484_else5730 
    set $P5007, fb_tmp_464["declarator"]
    set $P5009, $P5007
    goto if2484_end5731
  if2484_else5730:
    null $P5008
    set $P5009, $P5008
  if2484_end5731:
    unless_null $P5009, vivi_24855733
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_24855733:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2481_end5725
  if2481_else5724:
    unless_null _lex_param_1, fallback5738
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback5738:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5003, fb_tmp_465
    unless $I5003 goto if2487_else5736 
    set $P5013, fb_tmp_465["multi_declarator"]
    set $P5015, $P5013
    goto if2487_end5737
  if2487_else5736:
    null $P5014
    set $P5015, $P5014
  if2487_end5737:
    unless_null $P5015, vivi_24885739
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_24885739:
    unless $P5015 goto if2486_else5734 
.annotate 'line', 2441
    unless_null _lex_param_1, fallback5742
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5017
  fallback5742:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5004, fb_tmp_466
    unless $I5004 goto if2489_else5740 
    set $P5018, fb_tmp_466["multi_declarator"]
    set $P5020, $P5018
    goto if2489_end5741
  if2489_else5740:
    null $P5019
    set $P5020, $P5019
  if2489_end5741:
    unless_null $P5020, vivi_24905743
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_24905743:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2486_end5735
  if2486_else5734:
.annotate 'line', 2442
    unless_null _lex_param_1, fallback5746
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5023
  fallback5746:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5005, fb_tmp_467
    unless $I5005 goto if2491_else5744 
    set $P5024, fb_tmp_467["package_declarator"]
    set $P5026, $P5024
    goto if2491_end5745
  if2491_else5744:
    null $P5025
    set $P5026, $P5025
  if2491_end5745:
    unless_null $P5026, vivi_24925747
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_24925747:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2486_end5735:
    set $P5030, $P5029
  if2481_end5725:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_301_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2445
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
.annotate 'line', 2446
    unless_null _lex_param_1, fallback5752
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5752:
    set fb_tmp_468, _lex_param_1
    repr_defined $I5001, fb_tmp_468
    unless $I5001 goto if2494_else5750 
    set $P5002, fb_tmp_468["routine_declarator"]
    set $P5004, $P5002
    goto if2494_end5751
  if2494_else5750:
    null $P5003
    set $P5004, $P5003
  if2494_end5751:
    unless_null $P5004, vivi_24955753
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_24955753:
    unless $P5004 goto if2493_else5748 
.annotate 'line', 2447
    unless_null _lex_param_1, fallback5756
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5756:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5002, fb_tmp_469
    unless $I5002 goto if2496_else5754 
    set $P5007, fb_tmp_469["routine_declarator"]
    set $P5009, $P5007
    goto if2496_end5755
  if2496_else5754:
    null $P5008
    set $P5009, $P5008
  if2496_end5755:
    unless_null $P5009, vivi_24975757
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_24975757:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2493_end5749
  if2493_else5748:
.annotate 'line', 2448
    unless_null _lex_param_1, fallback5760
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback5760:
    set fb_tmp_470, _lex_param_1
    repr_defined $I5003, fb_tmp_470
    unless $I5003 goto if2498_else5758 
    set $P5013, fb_tmp_470["variable_declarator"]
    set $P5015, $P5013
    goto if2498_end5759
  if2498_else5758:
    null $P5014
    set $P5015, $P5014
  if2498_end5759:
    unless_null $P5015, vivi_24995761
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_24995761:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2493_end5749:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_302_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2451
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_473 
    unless_null _lex_param_1, fallback5766
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5766:
    set fb_tmp_471, _lex_param_1
    repr_defined $I5001, fb_tmp_471
    unless $I5001 goto if2501_else5764 
    set $P5002, fb_tmp_471["declarator"]
    set $P5004, $P5002
    goto if2501_end5765
  if2501_else5764:
    null $P5003
    set $P5004, $P5003
  if2501_end5765:
    unless_null $P5004, vivi_25025767
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_25025767:
    unless $P5004 goto if2500_else5762 
    unless_null _lex_param_1, fallback5770
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5770:
    set fb_tmp_472, _lex_param_1
    repr_defined $I5002, fb_tmp_472
    unless $I5002 goto if2503_else5768 
    set $P5007, fb_tmp_472["declarator"]
    set $P5009, $P5007
    goto if2503_end5769
  if2503_else5768:
    null $P5008
    set $P5009, $P5008
  if2503_end5769:
    unless_null $P5009, vivi_25045771
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_25045771:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2500_end5763
  if2500_else5762:
    unless_null _lex_param_1, fallback5774
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback5774:
    set fb_tmp_473, _lex_param_1
    repr_defined $I5003, fb_tmp_473
    unless $I5003 goto if2505_else5772 
    set $P5013, fb_tmp_473["routine_def"]
    set $P5015, $P5013
    goto if2505_end5773
  if2505_else5772:
    null $P5014
    set $P5015, $P5014
  if2505_end5773:
    unless_null $P5015, vivi_25065775
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_25065775:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2500_end5763:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_303_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2452
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    unless_null _lex_param_1, fallback5780
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5780:
    set fb_tmp_474, _lex_param_1
    repr_defined $I5001, fb_tmp_474
    unless $I5001 goto if2508_else5778 
    set $P5002, fb_tmp_474["declarator"]
    set $P5004, $P5002
    goto if2508_end5779
  if2508_else5778:
    null $P5003
    set $P5004, $P5003
  if2508_end5779:
    unless_null $P5004, vivi_25095781
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_25095781:
    unless $P5004 goto if2507_else5776 
    unless_null _lex_param_1, fallback5784
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5784:
    set fb_tmp_475, _lex_param_1
    repr_defined $I5002, fb_tmp_475
    unless $I5002 goto if2510_else5782 
    set $P5007, fb_tmp_475["declarator"]
    set $P5009, $P5007
    goto if2510_end5783
  if2510_else5782:
    null $P5008
    set $P5009, $P5008
  if2510_end5783:
    unless_null $P5009, vivi_25115785
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_25115785:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2507_end5777
  if2507_else5776:
    unless_null _lex_param_1, fallback5788
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback5788:
    set fb_tmp_476, _lex_param_1
    repr_defined $I5003, fb_tmp_476
    unless $I5003 goto if2512_else5786 
    set $P5013, fb_tmp_476["routine_def"]
    set $P5015, $P5013
    goto if2512_end5787
  if2512_else5786:
    null $P5014
    set $P5015, $P5014
  if2512_end5787:
    unless_null $P5015, vivi_25135789
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_25135789:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2507_end5777:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_304_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_477 
    unless_null _lex_param_1, fallback5792
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5792:
    set fb_tmp_477, _lex_param_1
    repr_defined $I5001, fb_tmp_477
    unless $I5001 goto if2514_else5790 
    set $P5002, fb_tmp_477["declarator"]
    set $P5004, $P5002
    goto if2514_end5791
  if2514_else5790:
    null $P5003
    set $P5004, $P5003
  if2514_end5791:
    unless_null $P5004, vivi_25155793
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_25155793:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_305_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2456
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_494_1383915013.33774' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_496_1383915013.33774' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_497_1383915013.33774' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P105, $P5005
.annotate 'line', 2457
    unless_null _lex_param_1, fallback5796
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback5796:
    set fb_tmp_478, _lex_param_1
    repr_defined $I5001, fb_tmp_478
    unless $I5001 goto if2516_else5794 
    set $P5007, fb_tmp_478["variable"]
    set $P5009, $P5007
    goto if2516_end5795
  if2516_else5794:
    null $P5008
    set $P5009, $P5008
  if2516_end5795:
    unless_null $P5009, vivi_25175797
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_25175797:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5802
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback5802:
    set fb_tmp_480, _lex_param_1
    repr_defined $I5003, fb_tmp_480
    unless $I5003 goto if2519_else5800 
    set $P5013, fb_tmp_480["variable"]
    set $P5015, $P5013
    goto if2519_end5801
  if2519_else5800:
    null $P5014
    set $P5015, $P5014
  if2519_end5801:
    unless_null $P5015, vivi_25205803
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_25205803:
    set fb_tmp_479, $P5015
    repr_defined $I5002, fb_tmp_479
    unless $I5002 goto if2518_else5798 
    set $P5017, fb_tmp_479["sigil"]
    set $P5019, $P5017
    goto if2518_end5799
  if2518_else5798:
    null $P5018
    set $P5019, $P5018
  if2518_end5799:
    unless_null $P5019, vivi_25215804
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_25215804:
    set $P102, $P5019
.annotate 'line', 2459
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2460
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5805
    nqp_get_sc_object $P5024, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5023, $P5024
    set fb_tmp_481, $P5023
    repr_defined $I5004, fb_tmp_481
    unless $I5004 goto if2522_else5806 
    set $P5025, fb_tmp_481["$W"]
    set $P5027, $P5025
    goto if2522_end5807
  if2522_else5806:
    null $P5026
    set $P5027, $P5026
  if2522_end5807:
    unless_null $P5027, vivi_25235808
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5027, $P5028
  vivi_25235808:
    unless_null $P5027, vivi_25245809
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_25245809:
    set $P5022, $P5027
  fallback5805:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2529_end5818 
.annotate 'line', 2462
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2529_end5818:
    unless $P5039 goto if2528_end5816 
.annotate 'line', 2463
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2528_end5816:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5821
    nqp_get_sc_object $P5044, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5043, $P5044
    set fb_tmp_483, $P5043
    repr_defined $I5007, fb_tmp_483
    unless $I5007 goto if2531_else5822 
    set $P5045, fb_tmp_483["$SCOPE"]
    set $P5047, $P5045
    goto if2531_end5823
  if2531_else5822:
    null $P5046
    set $P5047, $P5046
  if2531_end5823:
    unless_null $P5047, vivi_25325824
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5047, $P5048
  vivi_25325824:
    unless_null $P5047, vivi_25335825
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25335825:
    set $P5042, $P5047
  fallback5821:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2530_else5819 
    .const 'Sub' $P5050 = 'cuid_494_1383915013.33774' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2530_end5820
  if2530_else5819:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5903
    nqp_get_sc_object $P5054, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5053, $P5054
    set fb_tmp_498, $P5053
    repr_defined $I5009, fb_tmp_498
    unless $I5009 goto if2579_else5904 
    set $P5055, fb_tmp_498["$SCOPE"]
    set $P5057, $P5055
    goto if2579_end5905
  if2579_else5904:
    null $P5056
    set $P5057, $P5056
  if2579_end5905:
    unless_null $P5057, vivi_25805906
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5057, $P5058
  vivi_25805906:
    unless_null $P5057, vivi_25815907
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25815907:
    set $P5052, $P5057
  fallback5903:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2578_else5901 
.annotate 'line', 2493
    unless_null _lex_param_1, fallback5912
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5060
  fallback5912:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5010, fb_tmp_499
    unless $I5010 goto if2583_else5910 
    set $P5061, fb_tmp_499["typename"]
    set $P5063, $P5061
    goto if2583_end5911
  if2583_else5910:
    null $P5062
    set $P5063, $P5062
  if2583_end5911:
    unless_null $P5063, vivi_25845913
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5063, $P5064
  vivi_25845913:
    unless $P5063 goto if2582_end5909 
.annotate 'line', 2497
.annotate 'line', 2498
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2582_end5909:
    unless_null _lex_param_1, fallback5916
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5067
  fallback5916:
    set fb_tmp_500, _lex_param_1
    repr_defined $I5011, fb_tmp_500
    unless $I5011 goto if2585_else5914 
    set $P5068, fb_tmp_500["variable"]
    set $P5070, $P5068
    goto if2585_end5915
  if2585_else5914:
    null $P5069
    set $P5070, $P5069
  if2585_end5915:
    unless_null $P5070, vivi_25865917
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5070, $P5071
  vivi_25865917:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2501
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2502
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2578_end5902
  if2578_else5901:
    .const 'Sub' $P5076 = 'cuid_496_1383915013.33774' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2578_end5902:
  if2530_end5820:
    unless_null _lex_param_1, fallback5944
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5079
  fallback5944:
    set fb_tmp_505, _lex_param_1
    repr_defined $I5012, fb_tmp_505
    unless $I5012 goto if2600_else5942 
    set $P5080, fb_tmp_505["trait"]
    set $P5082, $P5080
    goto if2600_end5943
  if2600_else5942:
    null $P5081
    set $P5082, $P5081
  if2600_end5943:
    unless_null $P5082, vivi_26015945
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_26015945:
    unless $P5082 goto if2599_end5941 
.annotate 'line', 2531
    unless_null _lex_param_1, fallback5948
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5087
  fallback5948:
    set fb_tmp_506, _lex_param_1
    repr_defined $I5013, fb_tmp_506
    unless $I5013 goto if2602_else5946 
    set $P5088, fb_tmp_506["trait"]
    set $P5090, $P5088
    goto if2602_end5947
  if2602_else5946:
    null $P5089
    set $P5090, $P5089
  if2602_end5947:
    unless_null $P5090, vivi_26035949
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5090, $P5091
  vivi_26035949:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5950:
    unless $P5086, for_done5952
    shift $P5093, $P5086
  for_redo5951:
    .const 'Sub' $P5092 = 'cuid_497_1383915013.33774' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5950
  for_done5952:
  if2599_end5941:
.annotate 'line', 2535
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1383915013.33774") :anon :lex :outer("cuid_305_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2465
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_484 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc fb_tmp_496 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_497 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5828
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_46, $P5004
    set fb_tmp_484, pkg_viv_tmp_46
    repr_defined $I5002, fb_tmp_484
    unless $I5002 goto if2535_else5829 
    set $P5006, fb_tmp_484["%HOW"]
    set $P5008, $P5006
    goto if2535_end5830
  if2535_else5829:
    null $P5007
    set $P5008, $P5007
  if2535_end5830:
    unless_null $P5008, vivi_25365831
    new $P5009, 'Hash'
    set pkg_viv_tmp_46["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25365831:
    unless_null $P5008, vivi_25375832
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25375832:
    set $P5003, $P5008
  fallback5828:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5833
    nqp_get_sc_object $P5013, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5012, $P5013
    set fb_tmp_485, $P5012
    repr_defined $I5003, fb_tmp_485
    unless $I5003 goto if2538_else5834 
    set $P5014, fb_tmp_485["$PKGDECL"]
    set $P5016, $P5014
    goto if2538_end5835
  if2538_else5834:
    null $P5015
    set $P5016, $P5015
  if2538_end5835:
    unless_null $P5016, vivi_25395836
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_25395836:
    unless_null $P5016, vivi_25405837
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25405837:
    set $P5011, $P5016
  fallback5833:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2534_end5827 
.annotate 'line', 2467
.annotate 'line', 2468
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5838
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set fb_tmp_486, $P5022
    repr_defined $I5004, fb_tmp_486
    unless $I5004 goto if2541_else5839 
    set $P5024, fb_tmp_486["$PKGDECL"]
    set $P5026, $P5024
    goto if2541_end5840
  if2541_else5839:
    null $P5025
    set $P5026, $P5025
  if2541_end5840:
    unless_null $P5026, vivi_25425841
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_25425841:
    unless_null $P5026, vivi_25435842
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25435842:
    set $P5021, $P5026
  fallback5838:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2534_end5827:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5847
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  fallback5847:
    set fb_tmp_487, $P5031
    repr_defined $I5005, fb_tmp_487
    unless $I5005 goto if2545_else5845 
    set $P5033, fb_tmp_487["typename"]
    set $P5035, $P5033
    goto if2545_end5846
  if2545_else5845:
    null $P5034
    set $P5035, $P5034
  if2545_end5846:
    unless_null $P5035, vivi_25465848
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5035, $P5036
  vivi_25465848:
    unless $P5035 goto if2544_end5844 
.annotate 'line', 2475
.annotate 'line', 2476
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5849
    nqp_get_sc_object $P5039, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5038, $P5039
    set fb_tmp_488, $P5038
    repr_defined $I5006, fb_tmp_488
    unless $I5006 goto if2547_else5850 
    set $P5040, fb_tmp_488["$W"]
    set $P5042, $P5040
    goto if2547_end5851
  if2547_else5850:
    null $P5041
    set $P5042, $P5041
  if2547_end5851:
    unless_null $P5042, vivi_25485852
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5042, $P5043
  vivi_25485852:
    unless_null $P5042, vivi_25495853
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25495853:
    set $P5037, $P5042
  fallback5849:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5856
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5046, $P5047
  fallback5856:
    set fb_tmp_489, $P5046
    repr_defined $I5007, fb_tmp_489
    unless $I5007 goto if2550_else5854 
    set $P5048, fb_tmp_489["typename"]
    set $P5050, $P5048
    goto if2550_end5855
  if2550_else5854:
    null $P5049
    set $P5050, $P5049
  if2550_end5855:
    unless_null $P5050, vivi_25515857
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5050, $P5051
  vivi_25515857:
    set $S5005, $P5050
    box $P5052, $S5005
    push $P5045, $P5052
    $P5053 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5053
  if2544_end5844:
    find_lex $P5054, "$sigil"
    set $S5006, $P5054
    iseq $I5008, $S5006, "$"
    set $I5010, $I5008
    if $I5008 goto unless2553_end5861 
    find_lex $P5055, "$sigil"
    set $S5007, $P5055
    iseq $I5009, $S5007, "&"
    set $I5010, $I5009
  unless2553_end5861:
    unless $I5010 goto if2552_end5859 
.annotate 'line', 2478
    find_lex $P5056, "$/"
    unless_null $P5056, fallback5866
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5056, $P5057
  fallback5866:
    set fb_tmp_490, $P5056
    repr_defined $I5011, fb_tmp_490
    unless $I5011 goto if2555_else5864 
    set $P5058, fb_tmp_490["typename"]
    set $P5060, $P5058
    goto if2555_end5865
  if2555_else5864:
    null $P5059
    set $P5060, $P5059
  if2555_end5865:
    unless_null $P5060, vivi_25565867
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5060, $P5061
  vivi_25565867:
    unless $P5060 goto if2554_else5862 
.annotate 'line', 2479
    set fb_tmp_491, $P102
    repr_defined $I5012, fb_tmp_491
    unless $I5012 goto if2557_else5868 
    set $P5062, fb_tmp_491["type"]
    set $P5064, $P5062
    goto if2557_end5869
  if2557_else5868:
    null $P5063
    set $P5064, $P5063
  if2557_end5869:
    unless_null $P5064, vivi_25585870
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5064, $P5065
  vivi_25585870:
    set $P102["default"], $P5064
    set $P5079, $P5064
    goto if2554_end5863
  if2554_else5862:
.annotate 'line', 2482
    new $P5077, 'ExceptionHandler'
    set_label $P5077, catch_handler_25635877
    $P5077.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5077
.annotate 'line', 2483
    find_dynamic_lex $P5066, "$*W"
    unless_null $P5066, fallback5871
    nqp_get_sc_object $P5068, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5067, $P5068
    set fb_tmp_492, $P5067
    repr_defined $I5013, fb_tmp_492
    unless $I5013 goto if2559_else5872 
    set $P5069, fb_tmp_492["$W"]
    set $P5071, $P5069
    goto if2559_end5873
  if2559_else5872:
    null $P5070
    set $P5071, $P5070
  if2559_end5873:
    unless_null $P5071, vivi_25605874
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5071, $P5072
  vivi_25605874:
    unless_null $P5071, vivi_25615875
    die "Contextual $*W not found"
    box $P5073, "Contextual $*W not found"
    set $P5071, $P5073
  vivi_25615875:
    set $P5066, $P5071
  fallback5871:
    new $P5074, 'ResizablePMCArray'
    box $P5075, "NQPMu"
    push $P5074, $P5075
    $P5076 = $P5066."find_sym"($P5074)
    set $P102["default"], $P5076
    set $P5078, $P5076
    pop_eh 
    goto skip_handler_25625876
  catch_handler_25635877:
    .get_results ($P5077) 
    set $I10001, 1
    set $P5077["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5077
    pop_upto_eh $P5077
    pop_eh 
    set $P5078, $P10001
    goto skip_handler_25625876
  skip_handler_25625876:
    set $P5079, $P5078
  if2554_end5863:
  if2552_end5859:
.annotate 'line', 2488
    find_dynamic_lex $P5080, "$*W"
    unless_null $P5080, fallback5878
    nqp_get_sc_object $P5082, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5081, $P5082
    set fb_tmp_493, $P5081
    repr_defined $I5014, fb_tmp_493
    unless $I5014 goto if2564_else5879 
    set $P5083, fb_tmp_493["$W"]
    set $P5085, $P5083
    goto if2564_end5880
  if2564_else5879:
    null $P5084
    set $P5085, $P5084
  if2564_end5880:
    unless_null $P5085, vivi_25655881
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5085, $P5086
  vivi_25655881:
    unless_null $P5085, vivi_25665882
    die "Contextual $*W not found"
    box $P5087, "Contextual $*W not found"
    set $P5085, $P5087
  vivi_25665882:
    set $P5080, $P5085
  fallback5878:
    find_dynamic_lex $P5088, "$*PACKAGE"
    unless_null $P5088, fallback5883
    nqp_get_sc_object $P5090, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5089, $P5090
    set fb_tmp_494, $P5089
    repr_defined $I5015, fb_tmp_494
    unless $I5015 goto if2567_else5884 
    set $P5091, fb_tmp_494["$PACKAGE"]
    set $P5093, $P5091
    goto if2567_end5885
  if2567_else5884:
    null $P5092
    set $P5093, $P5092
  if2567_end5885:
    unless_null $P5093, vivi_25685886
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5093, $P5094
  vivi_25685886:
    unless_null $P5093, vivi_25695887
    die "Contextual $*PACKAGE not found"
    box $P5095, "Contextual $*PACKAGE not found"
    set $P5093, $P5095
  vivi_25695887:
    set $P5088, $P5093
  fallback5883:
    find_dynamic_lex $P5096, "%*HOW"
    unless_null $P5096, fallback5890
    nqp_get_sc_object $P5098, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_47, $P5097
    set fb_tmp_496, pkg_viv_tmp_47
    repr_defined $I5017, fb_tmp_496
    unless $I5017 goto if2571_else5891 
    set $P5099, fb_tmp_496["%HOW"]
    set $P5101, $P5099
    goto if2571_end5892
  if2571_else5891:
    null $P5100
    set $P5101, $P5100
  if2571_end5892:
    unless_null $P5101, vivi_25725893
    new $P5102, 'Hash'
    set pkg_viv_tmp_47["%HOW"], $P5102
    set $P5101, $P5102
  vivi_25725893:
    unless_null $P5101, vivi_25735894
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_25735894:
    set $P5096, $P5101
  fallback5890:
    set fb_tmp_495, $P5096
    repr_defined $I5016, fb_tmp_495
    unless $I5016 goto if2570_else5888 
    find_dynamic_lex $P5105, "$*PKGDECL"
    unless_null $P5105, fallback5895
    nqp_get_sc_object $P5107, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5106, $P5107
    set fb_tmp_497, $P5106
    repr_defined $I5018, fb_tmp_497
    unless $I5018 goto if2574_else5896 
    set $P5108, fb_tmp_497["$PKGDECL"]
    set $P5110, $P5108
    goto if2574_end5897
  if2574_else5896:
    null $P5109
    set $P5110, $P5109
  if2574_end5897:
    unless_null $P5110, vivi_25755898
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5110, $P5111
  vivi_25755898:
    unless_null $P5110, vivi_25765899
    die "Contextual $*PKGDECL not found"
    box $P5112, "Contextual $*PKGDECL not found"
    set $P5110, $P5112
  vivi_25765899:
    set $P5105, $P5110
  fallback5895:
    set $S5009, $P5105
    concat $S5008, $S5009, "-attr"
    set $P5104, fb_tmp_495[$S5008]
    set $P5114, $P5104
    goto if2570_end5889
  if2570_else5888:
    null $P5113
    set $P5114, $P5113
  if2570_end5889:
    unless_null $P5114, vivi_25775900
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5114, $P5115
  vivi_25775900:
    $P5116 = $P5080."pkg_add_attribute"($P5088, $P5114, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5116
.annotate 'line', 2491
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
    $P5118 = $P5117."new"()
    store_lex "$past", $P5118
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1383915013.33774") :anon :lex :outer("cuid_305_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2504
    .const 'Sub' $P5052 = 'cuid_495_1383915013.33774' 
    capture_lex $P5052 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5922
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  fallback5922:
    set fb_tmp_501, $P5003
    repr_defined $I5001, fb_tmp_501
    unless $I5001 goto if2588_else5920 
    set $P5005, fb_tmp_501["typename"]
    set $P5007, $P5005
    goto if2588_end5921
  if2588_else5920:
    null $P5006
    set $P5007, $P5006
  if2588_end5921:
    unless_null $P5007, vivi_25895923
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_25895923:
    unless $P5007 goto if2587_else5918 
.annotate 'line', 2507
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2590_end5925 
.annotate 'line', 2508
.annotate 'line', 2509
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2590_end5925:
.annotate 'line', 2511
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5926
    nqp_get_sc_object $P5015, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5014, $P5015
    set fb_tmp_502, $P5014
    repr_defined $I5003, fb_tmp_502
    unless $I5003 goto if2591_else5927 
    set $P5016, fb_tmp_502["$W"]
    set $P5018, $P5016
    goto if2591_end5928
  if2591_else5927:
    null $P5017
    set $P5018, $P5017
  if2591_end5928:
    unless_null $P5018, vivi_25925929
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_25925929:
    unless_null $P5018, vivi_25935930
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25935930:
    set $P5013, $P5018
  fallback5926:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5933
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  fallback5933:
    set fb_tmp_503, $P5022
    repr_defined $I5004, fb_tmp_503
    unless $I5004 goto if2594_else5931 
    set $P5024, fb_tmp_503["typename"]
    set $P5026, $P5024
    goto if2594_end5932
  if2594_else5931:
    null $P5025
    set $P5026, $P5025
  if2594_end5932:
    unless_null $P5026, vivi_25955934
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_25955934:
    set $S5002, $P5026
    box $P5028, $S5002
    push $P5021, $P5028
    $P5029 = $P5013."find_sym"($P5021)
    set $P101, $P5029
    repr_get_primitive_type_spec $I5005, $P101
    unless $I5005 goto if2596_else5935 
    .const 'Sub' $P5030 = 'cuid_495_1383915013.33774' 
    capture_lex $P5030
    $P5031 = $P5030($I5005)
    set $P5035, $P5031
    goto if2596_end5936
  if2596_else5935:
.annotate 'line', 2515
.annotate 'line', 2516
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    $P5034 = $P5033."panic"("Only native types are currently supported/checked")
    set $P5035, $P5034
  if2596_end5936:
    goto if2587_end5919
  if2587_else5918:
.annotate 'line', 2519
.annotate 'line', 2520
    find_lex $P5036, "$sigil"
    $P5037 = "&default_for"($P5036)
    set $P102, $P5037
  if2587_end5919:
.annotate 'line', 2522
    find_lex $P5038, "$BLOCK"
    set fb_tmp_504, $P5038
    repr_defined $I5006, fb_tmp_504
    unless $I5006 goto if2597_else5937 
    set $P5039, fb_tmp_504[0]
    set $P5041, $P5039
    goto if2597_end5938
  if2597_else5937:
    null $P5040
    set $P5041, $P5040
  if2597_end5938:
    unless_null $P5041, vivi_25985939
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5041, $P5042
  vivi_25985939:
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    find_lex $P5044, "$/"
.annotate 'line', 2524
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_lex $P5046, "$name"
    $P5047 = $P5045."new"($P5046 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5048 = $P5043."new"($P5047, $P102, "bind" :named("op"), $P5044 :named("node"))
    $P5041."push"($P5048)
.annotate 'line', 2527
    find_lex $P5049, "$BLOCK"
    find_lex $P5050, "$name"
    $P5051 = $P5049."symbol"($P5050, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1383915013.33774") :anon :lex :outer("cuid_496_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2512
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2513
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1383915013.33774") :anon :lex :outer("cuid_305_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2532
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_306_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2538
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_507 
    unless_null _lex_param_1, fallback5955
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5955:
    set fb_tmp_507, _lex_param_1
    repr_defined $I5001, fb_tmp_507
    unless $I5001 goto if2604_else5953 
    set $P5002, fb_tmp_507["routine_def"]
    set $P5004, $P5002
    goto if2604_end5954
  if2604_else5953:
    null $P5003
    set $P5004, $P5003
  if2604_end5954:
    unless_null $P5004, vivi_26055956
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_26055956:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_307_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2539
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_508 
    unless_null _lex_param_1, fallback5959
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback5959:
    set fb_tmp_508, _lex_param_1
    repr_defined $I5001, fb_tmp_508
    unless $I5001 goto if2606_else5957 
    set $P5002, fb_tmp_508["method_def"]
    set $P5004, $P5002
    goto if2606_end5958
  if2606_else5957:
    null $P5003
    set $P5004, $P5003
  if2606_end5958:
    unless_null $P5004, vivi_26075960
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_26075960:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_308_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2541
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_501_1383915013.33774' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_504_1383915013.33774' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5965
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5004
  fallback5965:
    set fb_tmp_509, _lex_param_1
    repr_defined $I5001, fb_tmp_509
    unless $I5001 goto if2609_else5963 
    set $P5005, fb_tmp_509["onlystar"]
    set $P5007, $P5005
    goto if2609_end5964
  if2609_else5963:
    null $P5006
    set $P5007, $P5006
  if2609_end5964:
    unless_null $P5007, vivi_26105966
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_26105966:
    unless $P5007 goto if2608_else5961 
.annotate 'line', 2545
.annotate 'line', 2546
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2608_end5962
  if2608_else5961:
.annotate 'line', 2548
.annotate 'line', 2549
    unless_null _lex_param_1, fallback5969
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5010
  fallback5969:
    set fb_tmp_510, _lex_param_1
    repr_defined $I5002, fb_tmp_510
    unless $I5002 goto if2611_else5967 
    set $P5011, fb_tmp_510["blockoid"]
    set $P5013, $P5011
    goto if2611_end5968
  if2611_else5967:
    null $P5012
    set $P5013, $P5012
  if2611_end5968:
    unless_null $P5013, vivi_26125970
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_26125970:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5973
    nqp_get_sc_object $P5018, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5017, $P5018
    set fb_tmp_511, $P5017
    repr_defined $I5003, fb_tmp_511
    unless $I5003 goto if2614_else5974 
    set $P5019, fb_tmp_511["$RETURN_USED"]
    set $P5021, $P5019
    goto if2614_end5975
  if2614_else5974:
    null $P5020
    set $P5021, $P5020
  if2614_end5975:
    unless_null $P5021, vivi_26155976
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_26155976:
    unless_null $P5021, vivi_26165977
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_26165977:
    set $P5016, $P5021
  fallback5973:
    set $P5029, $P5016
    unless $P5016 goto if2613_end5972 
.annotate 'line', 2550
.annotate 'line', 2551
    set fb_tmp_512, $P101
    repr_defined $I5004, fb_tmp_512
    unless $I5004 goto if2617_else5978 
    set $P5024, fb_tmp_512[1]
    set $P5026, $P5024
    goto if2617_end5979
  if2617_else5978:
    null $P5025
    set $P5026, $P5025
  if2617_end5979:
    unless_null $P5026, vivi_26185980
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_26185980:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2613_end5972:
  if2608_end5962:
.annotate 'line', 2554
    $P101."blocktype"("declaration")
    set $P102, $P101
    unless_null _lex_param_1, fallback5985
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5030
  fallback5985:
    set fb_tmp_513, _lex_param_1
    repr_defined $I5005, fb_tmp_513
    unless $I5005 goto if2620_else5983 
    set $P5031, fb_tmp_513["deflongname"]
    set $P5033, $P5031
    goto if2620_end5984
  if2620_else5983:
    null $P5032
    set $P5033, $P5032
  if2620_end5984:
    unless_null $P5033, vivi_26215986
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5033, $P5034
  vivi_26215986:
    unless $P5033 goto if2619_else5981 
    .const 'Sub' $P5035 = 'cuid_501_1383915013.33774' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2619_end5982
  if2619_else5981:
.annotate 'line', 2674
.annotate 'line', 2675
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback6158
    nqp_get_sc_object $P5039, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5038, $P5039
    set fb_tmp_546, $P5038
    repr_defined $I5006, fb_tmp_546
    unless $I5006 goto if2721_else6159 
    set $P5040, fb_tmp_546["$W"]
    set $P5042, $P5040
    goto if2721_end6160
  if2721_else6159:
    null $P5041
    set $P5042, $P5041
  if2721_end6160:
    unless_null $P5042, vivi_27226161
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5042, $P5043
  vivi_27226161:
    unless_null $P5042, vivi_27236162
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_27236162:
    set $P5037, $P5042
  fallback6158:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2720_end6157 
.annotate 'line', 2676
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback6163
    nqp_get_sc_object $P5048, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5047, $P5048
    set fb_tmp_547, $P5047
    repr_defined $I5007, fb_tmp_547
    unless $I5007 goto if2724_else6164 
    set $P5049, fb_tmp_547["$W"]
    set $P5051, $P5049
    goto if2724_end6165
  if2724_else6164:
    null $P5050
    set $P5051, $P5050
  if2724_end6165:
    unless_null $P5051, vivi_27256166
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5051, $P5052
  vivi_27256166:
    unless_null $P5051, vivi_27266167
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_27266167:
    set $P5046, $P5051
  fallback6163:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2720_end6157:
  if2619_end5982:
.annotate 'line', 2680
    nqp_get_sc_object $P5056, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2683
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6172
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5058
  fallback6172:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5008, fb_tmp_548
    unless $I5008 goto if2728_else6170 
    set $P5059, fb_tmp_548["trait"]
    set $P5061, $P5059
    goto if2728_end6171
  if2728_else6170:
    null $P5060
    set $P5061, $P5060
  if2728_end6171:
    unless_null $P5061, vivi_27296173
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5061, $P5062
  vivi_27296173:
    set $P5073, $P5061
    unless $P5061 goto if2727_end6169 
.annotate 'line', 2686
    unless_null _lex_param_1, fallback6176
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5066
  fallback6176:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5009, fb_tmp_549
    unless $I5009 goto if2730_else6174 
    set $P5067, fb_tmp_549["trait"]
    set $P5069, $P5067
    goto if2730_end6175
  if2730_else6174:
    null $P5068
    set $P5069, $P5068
  if2730_end6175:
    unless_null $P5069, vivi_27316177
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5069, $P5070
  vivi_27316177:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next6178:
    unless $P5065, for_done6180
    shift $P5072, $P5065
  for_redo6179:
    .const 'Sub' $P5071 = 'cuid_504_1383915013.33774' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next6178
  for_done6180:
    set $P5073, $P5063
  if2727_end6169:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1383915013.33774") :anon :lex :outer("cuid_308_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2557
    .const 'Sub' $P5088 = 'cuid_500_1383915013.33774' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_502_1383915013.33774' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_503_1383915013.33774' 
    capture_lex $P5088 
    .lex "$name", $P101 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5989
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback5989:
    set fb_tmp_514, $P5002
    repr_defined $I5001, fb_tmp_514
    unless $I5001 goto if2622_else5987 
    set $P5004, fb_tmp_514["sigil"]
    set $P5006, $P5004
    goto if2622_end5988
  if2622_else5987:
    null $P5005
    set $P5006, $P5005
  if2622_end5988:
    unless_null $P5006, vivi_26235990
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_26235990:
    set $S5002, $P5006
.annotate 'line', 2558
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5993
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  fallback5993:
    set fb_tmp_515, $P5008
    repr_defined $I5002, fb_tmp_515
    unless $I5002 goto if2624_else5991 
    set $P5010, fb_tmp_515["deflongname"]
    set $P5012, $P5010
    goto if2624_end5992
  if2624_else5991:
    null $P5011
    set $P5012, $P5011
  if2624_end5992:
    unless_null $P5012, vivi_26255994
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_26255994:
    $P5014 = $P5012."ast"()
    set $S5003, $P5014
    concat $S5001, $S5002, $S5003
    box $P5015, $S5001
    set $P101, $P5015
.annotate 'line', 2559
    find_lex $P5016, "$past"
    $P5016."name"($P101)
    find_dynamic_lex $P5017, "$*SCOPE"
    unless_null $P5017, fallback6001
    nqp_get_sc_object $P5019, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5018, $P5019
    set fb_tmp_516, $P5018
    repr_defined $I5004, fb_tmp_516
    unless $I5004 goto if2629_else6002 
    set $P5020, fb_tmp_516["$SCOPE"]
    set $P5022, $P5020
    goto if2629_end6003
  if2629_else6002:
    null $P5021
    set $P5022, $P5021
  if2629_end6003:
    unless_null $P5022, vivi_26306004
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_26306004:
    unless_null $P5022, vivi_26316005
    die "Contextual $*SCOPE not found"
    box $P5024, "Contextual $*SCOPE not found"
    set $P5022, $P5024
  vivi_26316005:
    set $P5017, $P5022
  fallback6001:
    set $S5004, $P5017
    iseq $I5003, $S5004, ""
    set $I5007, $I5003
    if $I5003 goto unless2628_end6000 
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback6006
    nqp_get_sc_object $P5027, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5026, $P5027
    set fb_tmp_517, $P5026
    repr_defined $I5006, fb_tmp_517
    unless $I5006 goto if2632_else6007 
    set $P5028, fb_tmp_517["$SCOPE"]
    set $P5030, $P5028
    goto if2632_end6008
  if2632_else6007:
    null $P5029
    set $P5030, $P5029
  if2632_end6008:
    unless_null $P5030, vivi_26336009
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5030, $P5031
  vivi_26336009:
    unless_null $P5030, vivi_26346010
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26346010:
    set $P5025, $P5030
  fallback6006:
    set $S5005, $P5025
    iseq $I5005, $S5005, "my"
    set $I5007, $I5005
  unless2628_end6000:
    set $I5010, $I5007
    if $I5007 goto unless2627_end5998 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback6011
    nqp_get_sc_object $P5035, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5034, $P5035
    set fb_tmp_518, $P5034
    repr_defined $I5009, fb_tmp_518
    unless $I5009 goto if2635_else6012 
    set $P5036, fb_tmp_518["$SCOPE"]
    set $P5038, $P5036
    goto if2635_end6013
  if2635_else6012:
    null $P5037
    set $P5038, $P5037
  if2635_end6013:
    unless_null $P5038, vivi_26366014
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5038, $P5039
  vivi_26366014:
    unless_null $P5038, vivi_26376015
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26376015:
    set $P5033, $P5038
  fallback6011:
    set $S5006, $P5033
    iseq $I5008, $S5006, "our"
    set $I5010, $I5008
  unless2627_end5998:
    unless $I5010 goto if2626_else5995 
.annotate 'line', 2560
    find_dynamic_lex $P5041, "$*MULTINESS"
    unless_null $P5041, fallback6018
    nqp_get_sc_object $P5043, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5042, $P5043
    set fb_tmp_519, $P5042
    repr_defined $I5012, fb_tmp_519
    unless $I5012 goto if2639_else6019 
    set $P5044, fb_tmp_519["$MULTINESS"]
    set $P5046, $P5044
    goto if2639_end6020
  if2639_else6019:
    null $P5045
    set $P5046, $P5045
  if2639_end6020:
    unless_null $P5046, vivi_26406021
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5046, $P5047
  vivi_26406021:
    unless_null $P5046, vivi_26416022
    die "Contextual $*MULTINESS not found"
    box $P5048, "Contextual $*MULTINESS not found"
    set $P5046, $P5048
  vivi_26416022:
    set $P5041, $P5046
  fallback6018:
    set $S5007, $P5041
    iseq $I5011, $S5007, "multi"
    unless $I5011 goto if2638_else6016 
    .const 'Sub' $P5049 = 'cuid_500_1383915013.33774' 
    capture_lex $P5049
    $P5050 = $P5049()
    goto if2638_end6017
  if2638_else6016:
    find_dynamic_lex $P5051, "$*MULTINESS"
    unless_null $P5051, fallback6078
    nqp_get_sc_object $P5053, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5052, $P5053
    set fb_tmp_530, $P5052
    repr_defined $I5014, fb_tmp_530
    unless $I5014 goto if2673_else6079 
    set $P5054, fb_tmp_530["$MULTINESS"]
    set $P5056, $P5054
    goto if2673_end6080
  if2673_else6079:
    null $P5055
    set $P5056, $P5055
  if2673_end6080:
    unless_null $P5056, vivi_26746081
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5056, $P5057
  vivi_26746081:
    unless_null $P5056, vivi_26756082
    die "Contextual $*MULTINESS not found"
    box $P5058, "Contextual $*MULTINESS not found"
    set $P5056, $P5058
  vivi_26756082:
    set $P5051, $P5056
  fallback6078:
    set $S5008, $P5051
    iseq $I5013, $S5008, "proto"
    unless $I5013 goto if2672_else6076 
    .const 'Sub' $P5059 = 'cuid_502_1383915013.33774' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if2672_end6077
  if2672_else6076:
    .const 'Sub' $P5061 = 'cuid_503_1383915013.33774' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if2672_end6077:
  if2638_end6017:
.annotate 'line', 2663
    nqp_get_sc_object $P5064, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5065 = $P5064."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5065
    goto if2626_end5996
  if2626_else5995:
.annotate 'line', 2665
.annotate 'line', 2666
    find_lex $P5066, "$/"
    $P5067 = $P5066."CURSOR"()
    find_dynamic_lex $P5068, "$*SCOPE"
    unless_null $P5068, fallback6142
    nqp_get_sc_object $P5070, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5069, $P5070
    set fb_tmp_544, $P5069
    repr_defined $I5015, fb_tmp_544
    unless $I5015 goto if2712_else6143 
    set $P5071, fb_tmp_544["$SCOPE"]
    set $P5073, $P5071
    goto if2712_end6144
  if2712_else6143:
    null $P5072
    set $P5073, $P5072
  if2712_end6144:
    unless_null $P5073, vivi_27136145
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5073, $P5074
  vivi_27136145:
    unless_null $P5073, vivi_27146146
    die "Contextual $*SCOPE not found"
    box $P5075, "Contextual $*SCOPE not found"
    set $P5073, $P5075
  vivi_27146146:
    set $P5068, $P5073
  fallback6142:
    set $S5012, $P5068
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5076 = $P5067."panic"($S5011)
  if2626_end5996:
    set $S5013, $P101
    iseq $I5016, $S5013, "MAIN"
    set $I5019, $I5016
    unless $I5016 goto if2716_end6150 
    find_dynamic_lex $P5077, "$*MULTINESS"
    unless_null $P5077, fallback6151
    nqp_get_sc_object $P5079, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5078, $P5079
    set fb_tmp_545, $P5078
    repr_defined $I5018, fb_tmp_545
    unless $I5018 goto if2717_else6152 
    set $P5080, fb_tmp_545["$MULTINESS"]
    set $P5082, $P5080
    goto if2717_end6153
  if2717_else6152:
    null $P5081
    set $P5082, $P5081
  if2717_end6153:
    unless_null $P5082, vivi_27186154
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_27186154:
    unless_null $P5082, vivi_27196155
    die "Contextual $*MULTINESS not found"
    box $P5084, "Contextual $*MULTINESS not found"
    set $P5082, $P5084
  vivi_27196155:
    set $P5077, $P5082
  fallback6151:
    set $S5014, $P5077
    isne $I5017, $S5014, "multi"
    set $I5019, $I5017
  if2716_end6150:
    box $P5087, $I5019
    set $P5086, $P5087
    unless $I5019 goto if2715_end6148 
.annotate 'line', 2670
    find_lex $P5085, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5085
    set $P5086, $P5085
  if2715_end6148:
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1383915013.33774") :anon :lex :outer("cuid_501_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2561
    .const 'Sub' $P5063 = 'cuid_499_1383915013.33774' 
    capture_lex $P5063 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback6025
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5006, $P5007
    set fb_tmp_520, $P5006
    repr_defined $I5002, fb_tmp_520
    unless $I5002 goto if2643_else6026 
    set $P5008, fb_tmp_520["$SCOPE"]
    set $P5010, $P5008
    goto if2643_end6027
  if2643_else6026:
    null $P5009
    set $P5010, $P5009
  if2643_end6027:
    unless_null $P5010, vivi_26446028
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_26446028:
    unless_null $P5010, vivi_26456029
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26456029:
    set $P5005, $P5010
  fallback6025:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2642_end6024 
.annotate 'line', 2563
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2642_end6024:
.annotate 'line', 2565
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback6030
    nqp_get_sc_object $P5016, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5015, $P5016
    set fb_tmp_521, $P5015
    repr_defined $I5003, fb_tmp_521
    unless $I5003 goto if2646_else6031 
    set $P5017, fb_tmp_521["$W"]
    set $P5019, $P5017
    goto if2646_end6032
  if2646_else6031:
    null $P5018
    set $P5019, $P5018
  if2646_end6032:
    unless_null $P5019, vivi_26476033
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_26476033:
    unless_null $P5019, vivi_26486034
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26486034:
    set $P5014, $P5019
  fallback6030:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_522, $P102
    repr_defined $I5004, fb_tmp_522
    unless $I5004 goto if2650_else6037 
    set $P5025, fb_tmp_522["proto"]
    set $P5027, $P5025
    goto if2650_end6038
  if2650_else6037:
    null $P5026
    set $P5027, $P5026
  if2650_end6038:
    unless_null $P5027, vivi_26516039
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5027, $P5028
  vivi_26516039:
    unless $P5027 goto if2649_else6035 
.annotate 'line', 2566
    set fb_tmp_523, $P102
    repr_defined $I5005, fb_tmp_523
    unless $I5005 goto if2652_else6040 
    set $P5029, fb_tmp_523["value"]
    set $P5031, $P5029
    goto if2652_end6041
  if2652_else6040:
    null $P5030
    set $P5031, $P5030
  if2652_end6041:
    unless_null $P5031, vivi_26536042
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_26536042:
    set $P101, $P5031
    goto if2649_end6036
  if2649_else6035:
    .const 'Sub' $P5033 = 'cuid_499_1383915013.33774' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2649_end6036:
.annotate 'line', 2595
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback6063
    nqp_get_sc_object $P5037, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5036, $P5037
    set fb_tmp_527, $P5036
    repr_defined $I5006, fb_tmp_527
    unless $I5006 goto if2664_else6064 
    set $P5038, fb_tmp_527["$W"]
    set $P5040, $P5038
    goto if2664_end6065
  if2664_else6064:
    null $P5039
    set $P5040, $P5039
  if2664_end6065:
    unless_null $P5040, vivi_26656066
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5041
  vivi_26656066:
    unless_null $P5040, vivi_26666067
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26666067:
    set $P5035, $P5040
  fallback6063:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2596
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2599
    $P101."add_dispatchee"($P103)
.annotate 'line', 2605
    find_lex $P5047, "$past"
    $P5047."blocktype"("declaration_static")
.annotate 'line', 2606
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback6068
    nqp_get_sc_object $P5050, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5049, $P5050
    set fb_tmp_528, $P5049
    repr_defined $I5007, fb_tmp_528
    unless $I5007 goto if2667_else6069 
    set $P5051, fb_tmp_528["$W"]
    set $P5053, $P5051
    goto if2667_end6070
  if2667_else6069:
    null $P5052
    set $P5053, $P5052
  if2667_end6070:
    unless_null $P5053, vivi_26686071
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5053, $P5054
  vivi_26686071:
    unless_null $P5053, vivi_26696072
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_26696072:
    set $P5048, $P5053
  fallback6068:
    $P5056 = $P5048."cur_lexpad"()
    set $P104, $P5056
.annotate 'line', 2607
    set fb_tmp_529, $P104
    repr_defined $I5008, fb_tmp_529
    unless $I5008 goto if2670_else6073 
    set $P5057, fb_tmp_529[0]
    set $P5059, $P5057
    goto if2670_end6074
  if2670_else6073:
    null $P5058
    set $P5059, $P5058
  if2670_end6074:
    unless_null $P5059, vivi_26716075
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5059, $P5060
  vivi_26716075:
    find_lex $P5061, "$past"
    $P5062 = $P5059."push"($P5061)
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1383915013.33774") :anon :lex :outer("cuid_500_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2571
    .const 'Sub' $P5020 = 'cuid_498_1383915013.33774' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_524 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2574
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback6043
    nqp_get_sc_object $P5007, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5006, $P5007
    set fb_tmp_524, $P5006
    repr_defined $I5001, fb_tmp_524
    unless $I5001 goto if2654_else6044 
    set $P5008, fb_tmp_524["$W"]
    set $P5010, $P5008
    goto if2654_end6045
  if2654_else6044:
    null $P5009
    set $P5010, $P5009
  if2654_end6045:
    unless_null $P5010, vivi_26556046
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_26556046:
    unless_null $P5010, vivi_26566047
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26566047:
    set $P5005, $P5010
  fallback6043:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next6058:
    unless $P5004, for_done6060
    shift $P5015, $P5004
  for_redo6059:
    .const 'Sub' $P5014 = 'cuid_498_1383915013.33774' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next6058
  for_done6060:
    if $P101 goto unless2663_end6062 
.annotate 'line', 2586
.annotate 'line', 2587
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2663_end6062:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1383915013.33774") :anon :lex :outer("cuid_499_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2574
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_526 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2575
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_525, $P101
    repr_defined $I5001, fb_tmp_525
    unless $I5001 goto if2658_else6050 
    set $P5004, fb_tmp_525["proto"]
    set $P5006, $P5004
    goto if2658_end6051
  if2658_else6050:
    null $P5005
    set $P5006, $P5005
  if2658_end6051:
    unless_null $P5006, vivi_26596052
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_26596052:
    unless $P5006 goto if2657_else6048 
.annotate 'line', 2576
    set fb_tmp_526, $P101
    repr_defined $I5002, fb_tmp_526
    unless $I5002 goto if2660_else6053 
    set $P5008, fb_tmp_526["value"]
    set $P5010, $P5008
    goto if2660_end6054
  if2660_else6053:
    null $P5009
    set $P5010, $P5009
  if2660_end6054:
    unless_null $P5010, vivi_26616055
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_26616055:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2657_end6049
  if2657_else6048:
    set $P5016, $P101
    unless $P101 goto if2662_end6057 
.annotate 'line', 2580
.annotate 'line', 2581
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2662_end6057:
    set $P5017, $P5016
  if2657_end6049:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1383915013.33774") :anon :lex :outer("cuid_501_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2609
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback6085
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_531, $P5004
    repr_defined $I5002, fb_tmp_531
    unless $I5002 goto if2677_else6086 
    set $P5006, fb_tmp_531["$SCOPE"]
    set $P5008, $P5006
    goto if2677_end6087
  if2677_else6086:
    null $P5007
    set $P5008, $P5007
  if2677_end6087:
    unless_null $P5008, vivi_26786088
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_26786088:
    unless_null $P5008, vivi_26796089
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26796089:
    set $P5003, $P5008
  fallback6085:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2676_end6084 
.annotate 'line', 2613
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2676_end6084:
.annotate 'line', 2614
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback6090
    nqp_get_sc_object $P5014, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5013, $P5014
    set fb_tmp_532, $P5013
    repr_defined $I5003, fb_tmp_532
    unless $I5003 goto if2680_else6091 
    set $P5015, fb_tmp_532["$W"]
    set $P5017, $P5015
    goto if2680_end6092
  if2680_else6091:
    null $P5016
    set $P5017, $P5016
  if2680_end6092:
    unless_null $P5017, vivi_26816093
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_26816093:
    unless_null $P5017, vivi_26826094
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26826094:
    set $P5012, $P5017
  fallback6090:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2615
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback6095
    nqp_get_sc_object $P5025, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5024, $P5025
    set fb_tmp_533, $P5024
    repr_defined $I5004, fb_tmp_533
    unless $I5004 goto if2683_else6096 
    set $P5026, fb_tmp_533["$W"]
    set $P5028, $P5026
    goto if2683_end6097
  if2683_else6096:
    null $P5027
    set $P5028, $P5027
  if2683_end6097:
    unless_null $P5028, vivi_26846098
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_26846098:
    unless_null $P5028, vivi_26856099
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26856099:
    set $P5023, $P5028
  fallback6095:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2616
    set fb_tmp_534, $P102
    repr_defined $I5005, fb_tmp_534
    unless $I5005 goto if2686_else6100 
    set $P5032, fb_tmp_534[0]
    set $P5034, $P5032
    goto if2686_end6101
  if2686_else6100:
    null $P5033
    set $P5034, $P5033
  if2686_end6101:
    unless_null $P5034, vivi_26876102
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  vivi_26876102:
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2618
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2621
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2625
    find_lex $P5043, "$block"
    set fb_tmp_535, $P5043
    repr_defined $I5006, fb_tmp_535
    unless $I5006 goto if2688_else6103 
    set $P5044, fb_tmp_535[0]
    set $P5046, $P5044
    goto if2688_end6104
  if2688_else6103:
    null $P5045
    set $P5046, $P5045
  if2688_end6104:
    unless_null $P5046, vivi_26896105
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5046, $P5047
  vivi_26896105:
    nqp_get_sc_object $P5048, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2627
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2628
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2630
    find_lex $P5054, "$block"
    set fb_tmp_536, $P5054
    repr_defined $I5007, fb_tmp_536
    unless $I5007 goto if2690_else6106 
    set $P5055, fb_tmp_536[0]
    set $P5057, $P5055
    goto if2690_end6107
  if2690_else6106:
    null $P5056
    set $P5057, $P5056
  if2690_end6107:
    unless_null $P5057, vivi_26916108
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5057, $P5058
  vivi_26916108:
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2632
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2633
    nqp_get_sc_object $P5062, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5063, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1383915013.33774") :anon :lex :outer("cuid_501_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2636
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2637
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6109
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_537, $P5003
    repr_defined $I5001, fb_tmp_537
    unless $I5001 goto if2692_else6110 
    set $P5005, fb_tmp_537["$W"]
    set $P5007, $P5005
    goto if2692_end6111
  if2692_else6110:
    null $P5006
    set $P5007, $P5006
  if2692_end6111:
    unless_null $P5007, vivi_26936112
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_26936112:
    unless_null $P5007, vivi_26946113
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26946113:
    set $P5002, $P5007
  fallback6109:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2638
    set fb_tmp_538, $P101
    repr_defined $I5002, fb_tmp_538
    unless $I5002 goto if2695_else6114 
    set $P5011, fb_tmp_538[0]
    set $P5013, $P5011
    goto if2695_end6115
  if2695_else6114:
    null $P5012
    set $P5013, $P5012
  if2695_end6115:
    unless_null $P5013, vivi_26966116
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_26966116:
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2640
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2643
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback6119
    nqp_get_sc_object $P5024, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5023, $P5024
    set fb_tmp_539, $P5023
    repr_defined $I5004, fb_tmp_539
    unless $I5004 goto if2698_else6120 
    set $P5025, fb_tmp_539["$SCOPE"]
    set $P5027, $P5025
    goto if2698_end6121
  if2698_else6120:
    null $P5026
    set $P5027, $P5026
  if2698_end6121:
    unless_null $P5027, vivi_26996122
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5027, $P5028
  vivi_26996122:
    unless_null $P5027, vivi_27006123
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_27006123:
    set $P5022, $P5027
  fallback6119:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5074, $I5003
    set $P5073, $P5074
    unless $I5003 goto if2697_end6118 
.annotate 'line', 2644
.annotate 'line', 2647
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback6124
    nqp_get_sc_object $P5032, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5031, $P5032
    set fb_tmp_540, $P5031
    repr_defined $I5005, fb_tmp_540
    unless $I5005 goto if2701_else6125 
    set $P5033, fb_tmp_540["$W"]
    set $P5035, $P5033
    goto if2701_end6126
  if2701_else6125:
    null $P5034
    set $P5035, $P5034
  if2701_end6126:
    unless_null $P5035, vivi_27026127
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5035, $P5036
  vivi_27026127:
    unless_null $P5035, vivi_27036128
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_27036128:
    set $P5030, $P5035
  fallback6124:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback6129
    nqp_get_sc_object $P5040, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5039, $P5040
    set fb_tmp_541, $P5039
    repr_defined $I5006, fb_tmp_541
    unless $I5006 goto if2704_else6130 
    set $P5041, fb_tmp_541["$PACKAGE"]
    set $P5043, $P5041
    goto if2704_end6131
  if2704_else6130:
    null $P5042
    set $P5043, $P5042
  if2704_end6131:
    unless_null $P5043, vivi_27056132
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5043, $P5044
  vivi_27056132:
    unless_null $P5043, vivi_27066133
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_27066133:
    set $P5038, $P5043
  fallback6129:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2648
    set fb_tmp_542, $P101
    repr_defined $I5007, fb_tmp_542
    unless $I5007 goto if2707_else6134 
    set $P5048, fb_tmp_542[0]
    set $P5050, $P5048
    goto if2707_end6135
  if2707_else6134:
    null $P5049
    set $P5050, $P5049
  if2707_end6135:
    unless_null $P5050, vivi_27086136
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5050, $P5051
  vivi_27086136:
    nqp_get_sc_object $P5052, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2650
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2651
    nqp_get_sc_object $P5057, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5050."push"($P5060)
.annotate 'line', 2656
    find_lex $P5061, "$past"
    $P5061."blocktype"("declaration_static")
.annotate 'line', 2660
    find_dynamic_lex $P5062, "$*W"
    unless_null $P5062, fallback6137
    nqp_get_sc_object $P5064, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5063, $P5064
    set fb_tmp_543, $P5063
    repr_defined $I5008, fb_tmp_543
    unless $I5008 goto if2709_else6138 
    set $P5065, fb_tmp_543["$W"]
    set $P5067, $P5065
    goto if2709_end6139
  if2709_else6138:
    null $P5066
    set $P5067, $P5066
  if2709_end6139:
    unless_null $P5067, vivi_27106140
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5067, $P5068
  vivi_27106140:
    unless_null $P5067, vivi_27116141
    die "Contextual $*W not found"
    box $P5069, "Contextual $*W not found"
    set $P5067, $P5069
  vivi_27116141:
    set $P5062, $P5067
  fallback6137:
    find_lex $P5070, "$past"
    find_lex $P5071, "$name"
    $P5072 = $P5062."create_code"($P5070, $P5071, 0)
    set $P5073, $P5072
  if2697_end6118:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1383915013.33774") :anon :lex :outer("cuid_308_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2687
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_309_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2691
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5113 = 'cuid_505_1383915013.33774' 
    capture_lex $P5113 
    .const 'Sub' $P5113 = 'cuid_506_1383915013.33774' 
    capture_lex $P5113 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6185
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5004
  fallback6185:
    set fb_tmp_550, _lex_param_1
    repr_defined $I5001, fb_tmp_550
    unless $I5001 goto if2733_else6183 
    set $P5005, fb_tmp_550["onlystar"]
    set $P5007, $P5005
    goto if2733_end6184
  if2733_else6183:
    null $P5006
    set $P5007, $P5006
  if2733_end6184:
    unless_null $P5007, vivi_27346186
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_27346186:
    unless $P5007 goto if2732_else6181 
.annotate 'line', 2695
.annotate 'line', 2696
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2732_end6182
  if2732_else6181:
.annotate 'line', 2698
.annotate 'line', 2699
    unless_null _lex_param_1, fallback6189
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5010
  fallback6189:
    set fb_tmp_551, _lex_param_1
    repr_defined $I5002, fb_tmp_551
    unless $I5002 goto if2735_else6187 
    set $P5011, fb_tmp_551["blockoid"]
    set $P5013, $P5011
    goto if2735_end6188
  if2735_else6187:
    null $P5012
    set $P5013, $P5012
  if2735_end6188:
    unless_null $P5013, vivi_27366190
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_27366190:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback6193
    nqp_get_sc_object $P5018, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5017, $P5018
    set fb_tmp_552, $P5017
    repr_defined $I5003, fb_tmp_552
    unless $I5003 goto if2738_else6194 
    set $P5019, fb_tmp_552["$RETURN_USED"]
    set $P5021, $P5019
    goto if2738_end6195
  if2738_else6194:
    null $P5020
    set $P5021, $P5020
  if2738_end6195:
    unless_null $P5021, vivi_27396196
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_27396196:
    unless_null $P5021, vivi_27406197
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27406197:
    set $P5016, $P5021
  fallback6193:
    set $P5029, $P5016
    unless $P5016 goto if2737_end6192 
.annotate 'line', 2700
.annotate 'line', 2701
    set fb_tmp_553, $P101
    repr_defined $I5004, fb_tmp_553
    unless $I5004 goto if2741_else6198 
    set $P5024, fb_tmp_553[1]
    set $P5026, $P5024
    goto if2741_end6199
  if2741_else6198:
    null $P5025
    set $P5026, $P5025
  if2741_end6199:
    unless_null $P5026, vivi_27426200
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_27426200:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2737_end6192:
  if2732_end6182:
.annotate 'line', 2704
    $P101."blocktype"("declaration_static")
    set fb_tmp_554, $P101
    repr_defined $I5005, fb_tmp_554
    unless $I5005 goto if2744_else6203 
    set $P5030, fb_tmp_554["signature_has_invocant"]
    set $P5032, $P5030
    goto if2744_end6204
  if2744_else6203:
    null $P5031
    set $P5032, $P5031
  if2744_end6204:
    unless_null $P5032, vivi_27456205
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5032, $P5033
  vivi_27456205:
    if $P5032 goto unless2743_end6202 
.annotate 'line', 2707
.annotate 'line', 2708
    set fb_tmp_555, $P101
    repr_defined $I5006, fb_tmp_555
    unless $I5006 goto if2746_else6206 
    set $P5034, fb_tmp_555[0]
    set $P5036, $P5034
    goto if2746_end6207
  if2746_else6206:
    null $P5035
    set $P5036, $P5035
  if2746_end6207:
    unless_null $P5036, vivi_27476208
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5036, $P5037
  vivi_27476208:
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback6209
    nqp_get_sc_object $P5041, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5040, $P5041
    set fb_tmp_556, $P5040
    repr_defined $I5007, fb_tmp_556
    unless $I5007 goto if2748_else6210 
    set $P5042, fb_tmp_556["$PACKAGE"]
    set $P5044, $P5042
    goto if2748_end6211
  if2748_else6210:
    null $P5043
    set $P5044, $P5043
  if2748_end6211:
    unless_null $P5044, vivi_27496212
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5044, $P5045
  vivi_27496212:
    unless_null $P5044, vivi_27506213
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27506213:
    set $P5039, $P5044
  fallback6209:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2743_end6202:
.annotate 'line', 2713
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback6218
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5050
  fallback6218:
    set fb_tmp_557, _lex_param_1
    repr_defined $I5008, fb_tmp_557
    unless $I5008 goto if2752_else6216 
    set $P5051, fb_tmp_557["deflongname"]
    set $P5053, $P5051
    goto if2752_end6217
  if2752_else6216:
    null $P5052
    set $P5053, $P5052
  if2752_end6217:
    unless_null $P5053, vivi_27536219
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5053, $P5054
  vivi_27536219:
    unless $P5053 goto if2751_else6214 
.annotate 'line', 2717
    unless_null _lex_param_1, fallback6222
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5055
  fallback6222:
    set fb_tmp_558, _lex_param_1
    repr_defined $I5009, fb_tmp_558
    unless $I5009 goto if2754_else6220 
    set $P5056, fb_tmp_558["private"]
    set $P5058, $P5056
    goto if2754_end6221
  if2754_else6220:
    null $P5057
    set $P5058, $P5057
  if2754_end6221:
    unless_null $P5058, vivi_27556223
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5058, $P5059
  vivi_27556223:
    set $S5002, $P5058
.annotate 'line', 2718
    unless_null _lex_param_1, fallback6226
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5060
  fallback6226:
    set fb_tmp_559, _lex_param_1
    repr_defined $I5010, fb_tmp_559
    unless $I5010 goto if2756_else6224 
    set $P5061, fb_tmp_559["deflongname"]
    set $P5063, $P5061
    goto if2756_end6225
  if2756_else6224:
    null $P5062
    set $P5063, $P5062
  if2756_end6225:
    unless_null $P5063, vivi_27576227
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5063, $P5064
  vivi_27576227:
    $P5065 = $P5063."ast"()
    set $S5003, $P5065
    concat $S5001, $S5002, $S5003
    box $P5066, $S5001
    set $P102, $P5066
    goto if2751_end6215
  if2751_else6214:
    unless_null _lex_param_1, fallback6232
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5067
  fallback6232:
    set fb_tmp_560, _lex_param_1
    repr_defined $I5011, fb_tmp_560
    unless $I5011 goto if2759_else6230 
    set $P5068, fb_tmp_560["latename"]
    set $P5070, $P5068
    goto if2759_end6231
  if2759_else6230:
    null $P5069
    set $P5070, $P5069
  if2759_end6231:
    unless_null $P5070, vivi_27606233
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5070, $P5071
  vivi_27606233:
    set $P5088, $P5070
    unless $P5070 goto if2758_end6229 
.annotate 'line', 2720
    find_dynamic_lex $P5072, "$*PKGDECL"
    unless_null $P5072, fallback6236
    nqp_get_sc_object $P5074, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5073, $P5074
    set fb_tmp_561, $P5073
    repr_defined $I5013, fb_tmp_561
    unless $I5013 goto if2762_else6237 
    set $P5075, fb_tmp_561["$PKGDECL"]
    set $P5077, $P5075
    goto if2762_end6238
  if2762_else6237:
    null $P5076
    set $P5077, $P5076
  if2762_end6238:
    unless_null $P5077, vivi_27636239
    nqp_get_sc_object $P5078, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5077, $P5078
  vivi_27636239:
    unless_null $P5077, vivi_27646240
    die "Contextual $*PKGDECL not found"
    box $P5079, "Contextual $*PKGDECL not found"
    set $P5077, $P5079
  vivi_27646240:
    set $P5072, $P5077
  fallback6236:
    set $S5004, $P5072
    isne $I5012, $S5004, "role"
    unless $I5012 goto if2761_end6235 
.annotate 'line', 2721
.annotate 'line', 2722
    $P5080 = _lex_param_1."CURSOR"()
    $P5081 = $P5080."panic"("Late-bound method name only valid in role")
  if2761_end6235:
    unless_null _lex_param_1, fallback6243
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5082
  fallback6243:
    set fb_tmp_562, _lex_param_1
    repr_defined $I5014, fb_tmp_562
    unless $I5014 goto if2765_else6241 
    set $P5083, fb_tmp_562["latename"]
    set $P5085, $P5083
    goto if2765_end6242
  if2765_else6241:
    null $P5084
    set $P5085, $P5084
  if2765_end6242:
    unless_null $P5085, vivi_27666244
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5085, $P5086
  vivi_27666244:
    set $S5006, $P5085
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5087, $S5005
    set $P102, $P5087
    set $P5088, $P102
  if2758_end6229:
  if2751_end6215:
    set $S5007, $P102
    isne $I5015, $S5007, ""
    unless $I5015 goto if2767_end6246 
    .const 'Sub' $P5089 = 'cuid_505_1383915013.33774' 
    capture_lex $P5089
    $P5090 = $P5089()
  if2767_end6246:
.annotate 'line', 2760
    nqp_get_sc_object $P5091, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5092 = $P5091."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5092
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_574, $P101
    repr_defined $I5016, fb_tmp_574
    unless $I5016 goto if2803_else6306 
    set $P5093, fb_tmp_574["code_obj"]
    set $P5095, $P5093
    goto if2803_end6307
  if2803_else6306:
    null $P5094
    set $P5095, $P5094
  if2803_end6307:
    unless_null $P5095, vivi_28046308
    nqp_get_sc_object $P5096, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5095, $P5096
  vivi_28046308:
    set $P103["code_obj"], $P5095
.annotate 'line', 2764
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6313
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5097
  fallback6313:
    set fb_tmp_575, _lex_param_1
    repr_defined $I5017, fb_tmp_575
    unless $I5017 goto if2806_else6311 
    set $P5098, fb_tmp_575["trait"]
    set $P5100, $P5098
    goto if2806_end6312
  if2806_else6311:
    null $P5099
    set $P5100, $P5099
  if2806_end6312:
    unless_null $P5100, vivi_28076314
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5100, $P5101
  vivi_28076314:
    set $P5112, $P5100
    unless $P5100 goto if2805_end6310 
.annotate 'line', 2765
    unless_null _lex_param_1, fallback6317
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5105
  fallback6317:
    set fb_tmp_576, _lex_param_1
    repr_defined $I5018, fb_tmp_576
    unless $I5018 goto if2808_else6315 
    set $P5106, fb_tmp_576["trait"]
    set $P5108, $P5106
    goto if2808_end6316
  if2808_else6315:
    null $P5107
    set $P5108, $P5107
  if2808_end6316:
    unless_null $P5108, vivi_28096318
    nqp_get_sc_object $P5109, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5108, $P5109
  vivi_28096318:
    set $P5102, $P5108
    iter $P5104, $P5108
  for_next6319:
    unless $P5104, for_done6321
    shift $P5111, $P5104
  for_redo6320:
    .const 'Sub' $P5110 = 'cuid_506_1383915013.33774' 
    capture_lex $P5110
    $P5102 = $P5110($P5111)
    goto for_next6319
  for_done6321:
    set $P5112, $P5102
  if2805_end6310:
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1383915013.33774") :anon :lex :outer("cuid_309_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2726
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 2728
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6249
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5007, $P5008
    set fb_tmp_563, $P5007
    repr_defined $I5002, fb_tmp_563
    unless $I5002 goto if2769_else6250 
    set $P5009, fb_tmp_563["$MULTINESS"]
    set $P5011, $P5009
    goto if2769_end6251
  if2769_else6250:
    null $P5010
    set $P5011, $P5010
  if2769_end6251:
    unless_null $P5011, vivi_27706252
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_27706252:
    unless_null $P5011, vivi_27716253
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27716253:
    set $P5006, $P5011
  fallback6249:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2768_else6247 
    set $S5002, "add_multi_method"
    goto if2768_end6248
  if2768_else6247:
    set $S5002, "add_method"
  if2768_end6248:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6254
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5016, $P5017
    set fb_tmp_564, $P5016
    repr_defined $I5004, fb_tmp_564
    unless $I5004 goto if2772_else6255 
    set $P5018, fb_tmp_564["$MULTINESS"]
    set $P5020, $P5018
    goto if2772_end6256
  if2772_else6255:
    null $P5019
    set $P5020, $P5019
  if2772_end6256:
    unless_null $P5020, vivi_27736257
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_27736257:
    unless_null $P5020, vivi_27746258
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27746258:
    set $P5015, $P5020
  fallback6254:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2733
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6259
    nqp_get_sc_object $P5026, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5025, $P5026
    set fb_tmp_565, $P5025
    repr_defined $I5005, fb_tmp_565
    unless $I5005 goto if2775_else6260 
    set $P5027, fb_tmp_565["$W"]
    set $P5029, $P5027
    goto if2775_end6261
  if2775_else6260:
    null $P5028
    set $P5029, $P5028
  if2775_end6261:
    unless_null $P5029, vivi_27766262
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5029, $P5030
  vivi_27766262:
    unless_null $P5029, vivi_27776263
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27776263:
    set $P5024, $P5029
  fallback6259:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6266
    nqp_get_sc_object $P5037, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5036, $P5037
    set fb_tmp_566, $P5036
    repr_defined $I5007, fb_tmp_566
    unless $I5007 goto if2779_else6267 
    set $P5038, fb_tmp_566["$MULTINESS"]
    set $P5040, $P5038
    goto if2779_end6268
  if2779_else6267:
    null $P5039
    set $P5040, $P5039
  if2779_end6268:
    unless_null $P5040, vivi_27806269
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5041
  vivi_27806269:
    unless_null $P5040, vivi_27816270
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27816270:
    set $P5035, $P5040
  fallback6266:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2778_end6265 
.annotate 'line', 2734
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2778_end6265:
.annotate 'line', 2735
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6271
    nqp_get_sc_object $P5047, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5046, $P5047
    set fb_tmp_567, $P5046
    repr_defined $I5008, fb_tmp_567
    unless $I5008 goto if2782_else6272 
    set $P5048, fb_tmp_567["$W"]
    set $P5050, $P5048
    goto if2782_end6273
  if2782_else6272:
    null $P5049
    set $P5050, $P5049
  if2782_end6273:
    unless_null $P5050, vivi_27836274
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5050, $P5051
  vivi_27836274:
    unless_null $P5050, vivi_27846275
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27846275:
    set $P5045, $P5050
  fallback6271:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6276
    nqp_get_sc_object $P5055, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5054, $P5055
    set fb_tmp_568, $P5054
    repr_defined $I5009, fb_tmp_568
    unless $I5009 goto if2785_else6277 
    set $P5056, fb_tmp_568["$PACKAGE"]
    set $P5058, $P5056
    goto if2785_end6278
  if2785_else6277:
    null $P5057
    set $P5058, $P5057
  if2785_end6278:
    unless_null $P5058, vivi_27866279
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5058, $P5059
  vivi_27866279:
    unless_null $P5058, vivi_27876280
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27876280:
    set $P5053, $P5058
  fallback6276:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6283
    nqp_get_sc_object $P5065, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5064, $P5065
    set fb_tmp_569, $P5064
    repr_defined $I5011, fb_tmp_569
    unless $I5011 goto if2789_else6284 
    set $P5066, fb_tmp_569["$SCOPE"]
    set $P5068, $P5066
    goto if2789_end6285
  if2789_else6284:
    null $P5067
    set $P5068, $P5067
  if2789_end6285:
    unless_null $P5068, vivi_27906286
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5068, $P5069
  vivi_27906286:
    unless_null $P5068, vivi_27916287
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27916287:
    set $P5063, $P5068
  fallback6283:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2788_end6282 
.annotate 'line', 2739
.annotate 'line', 2740
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6288
    nqp_get_sc_object $P5073, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5072, $P5073
    set fb_tmp_570, $P5072
    repr_defined $I5012, fb_tmp_570
    unless $I5012 goto if2792_else6289 
    set $P5074, fb_tmp_570["$W"]
    set $P5076, $P5074
    goto if2792_end6290
  if2792_else6289:
    null $P5075
    set $P5076, $P5075
  if2792_end6290:
    unless_null $P5076, vivi_27936291
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5076, $P5077
  vivi_27936291:
    unless_null $P5076, vivi_27946292
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_27946292:
    set $P5071, $P5076
  fallback6288:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6293
    nqp_get_sc_object $P5081, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5080, $P5081
    set fb_tmp_571, $P5080
    repr_defined $I5013, fb_tmp_571
    unless $I5013 goto if2795_else6294 
    set $P5082, fb_tmp_571["$PACKAGE"]
    set $P5084, $P5082
    goto if2795_end6295
  if2795_else6294:
    null $P5083
    set $P5084, $P5083
  if2795_end6295:
    unless_null $P5084, vivi_27966296
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5084, $P5085
  vivi_27966296:
    unless_null $P5084, vivi_27976297
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_27976297:
    set $P5079, $P5084
  fallback6293:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2788_end6282:
    set $P5115, $P102
    unless $P102 goto if2798_end6299 
.annotate 'line', 2745
.annotate 'line', 2746
    find_lex $P5090, "$past"
    set fb_tmp_572, $P5090
    repr_defined $I5014, fb_tmp_572
    unless $I5014 goto if2799_else6300 
    set $P5091, fb_tmp_572[0]
    set $P5093, $P5091
    goto if2799_end6301
  if2799_else6300:
    null $P5092
    set $P5093, $P5092
  if2799_end6301:
    unless_null $P5093, vivi_28006302
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5093, $P5094
  vivi_28006302:
    nqp_get_sc_object $P5095, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2748
    nqp_get_sc_object $P5096, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2749
    nqp_get_sc_object $P5098, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2751
    find_lex $P5101, "$past"
    set fb_tmp_573, $P5101
    repr_defined $I5015, fb_tmp_573
    unless $I5015 goto if2801_else6303 
    set $P5102, fb_tmp_573[0]
    set $P5104, $P5102
    goto if2801_end6304
  if2801_else6303:
    null $P5103
    set $P5104, $P5103
  if2801_end6304:
    unless_null $P5104, vivi_28026305
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5104, $P5105
  vivi_28026305:
    nqp_get_sc_object $P5106, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2753
    nqp_get_sc_object $P5107, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2754
    nqp_get_sc_object $P5109, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    nqp_get_sc_object $P5110, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2798_end6299:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1383915013.33774") :anon :lex :outer("cuid_309_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2766
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_310_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2818
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_507_1383915013.33774' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_508_1383915013.33774' 
    capture_lex $P5039 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 2819
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6322
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_577, $P5004
    repr_defined $I5001, fb_tmp_577
    unless $I5001 goto if2810_else6323 
    set $P5006, fb_tmp_577["$W"]
    set $P5008, $P5006
    goto if2810_end6324
  if2810_else6323:
    null $P5007
    set $P5008, $P5007
  if2810_end6324:
    unless_null $P5008, vivi_28116325
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_28116325:
    unless_null $P5008, vivi_28126326
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_28126326:
    set $P5003, $P5008
  fallback6322:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_578, $P101
    repr_defined $I5002, fb_tmp_578
    unless $I5002 goto if2813_else6327 
    set $P5012, fb_tmp_578[0]
    set $P5014, $P5012
    goto if2813_end6328
  if2813_else6327:
    null $P5013
    set $P5014, $P5013
  if2813_end6328:
    unless_null $P5014, vivi_28146329
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_28146329:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6334
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5016
  fallback6334:
    set fb_tmp_579, _lex_param_1
    repr_defined $I5003, fb_tmp_579
    unless $I5003 goto if2816_else6332 
    set $P5017, fb_tmp_579["invocant"]
    set $P5019, $P5017
    goto if2816_end6333
  if2816_else6332:
    null $P5018
    set $P5019, $P5018
  if2816_end6333:
    unless_null $P5019, vivi_28176335
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_28176335:
    unless $P5019 goto if2815_end6331 
    .const 'Sub' $P5021 = 'cuid_507_1383915013.33774' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2815_end6331:
    unless_null _lex_param_1, fallback6344
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5023
  fallback6344:
    set fb_tmp_581, _lex_param_1
    repr_defined $I5004, fb_tmp_581
    unless $I5004 goto if2821_else6342 
    set $P5024, fb_tmp_581["parameter"]
    set $P5026, $P5024
    goto if2821_end6343
  if2821_else6342:
    null $P5025
    set $P5026, $P5025
  if2821_end6343:
    unless_null $P5026, vivi_28226345
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_28226345:
    set $P5038, $P5026
    unless $P5026 goto if2820_end6341 
.annotate 'line', 2831
    unless_null _lex_param_1, fallback6348
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5031
  fallback6348:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5005, fb_tmp_582
    unless $I5005 goto if2823_else6346 
    set $P5032, fb_tmp_582["parameter"]
    set $P5034, $P5032
    goto if2823_end6347
  if2823_else6346:
    null $P5033
    set $P5034, $P5033
  if2823_end6347:
    unless_null $P5034, vivi_28246349
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  vivi_28246349:
    set $P5028, $P5034
    iter $P5030, $P5034
  for_next6350:
    unless $P5030, for_done6352
    shift $P5037, $P5030
  for_redo6351:
    .const 'Sub' $P5036 = 'cuid_508_1383915013.33774' 
    capture_lex $P5036
    $P5028 = $P5036($P5037)
    goto for_next6350
  for_done6352:
    set $P5038, $P5028
  if2820_end6341:
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1383915013.33774") :anon :lex :outer("cuid_310_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2821
    .lex "$inv", $P101 
    .local pmc fb_tmp_580 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2822
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6338
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback6338:
    set fb_tmp_580, $P5002
    repr_defined $I5001, fb_tmp_580
    unless $I5001 goto if2818_else6336 
    set $P5004, fb_tmp_580["invocant"]
    set $P5006, $P5004
    goto if2818_end6337
  if2818_else6336:
    null $P5005
    set $P5006, $P5005
  if2818_end6337:
    unless_null $P5006, vivi_28196339
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_28196339:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2823
    find_lex $P5009, "$BLOCKINIT"
    $P5009."push"($P101)
.annotate 'line', 2824
    find_lex $P5010, "$BLOCKINIT"
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2826
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5013 = $P5012."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2827
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5015 = $P101."name"()
    $P5016 = $P5014."new"("lexical" :named("scope"), $P5015 :named("name"))
    $P5017 = $P5011."new"($P5013, $P5016, "bind" :named("op"))
    $P5010."push"($P5017)
    find_lex $P5018, "$BLOCK"
    box $P5019, 1
    set $P5018["signature_has_invocant"], $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1383915013.33774") :anon :lex :outer("cuid_310_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2832
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_311_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2836
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_510_1383915013.33774' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6355
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback6355:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5001, fb_tmp_583
    unless $I5001 goto if2825_else6353 
    set $P5004, fb_tmp_583["quant"]
    set $P5006, $P5004
    goto if2825_end6354
  if2825_else6353:
    null $P5005
    set $P5006, $P5005
  if2825_end6354:
    unless_null $P5006, vivi_28266356
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_28266356:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6361
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback6361:
    set fb_tmp_584, _lex_param_1
    repr_defined $I5002, fb_tmp_584
    unless $I5002 goto if2828_else6359 
    set $P5009, fb_tmp_584["named_param"]
    set $P5011, $P5009
    goto if2828_end6360
  if2828_else6359:
    null $P5010
    set $P5011, $P5010
  if2828_end6360:
    unless_null $P5011, vivi_28296362
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_28296362:
    unless $P5011 goto if2827_else6357 
.annotate 'line', 2839
.annotate 'line', 2840
    unless_null _lex_param_1, fallback6365
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5013
  fallback6365:
    set fb_tmp_585, _lex_param_1
    repr_defined $I5003, fb_tmp_585
    unless $I5003 goto if2830_else6363 
    set $P5014, fb_tmp_585["named_param"]
    set $P5016, $P5014
    goto if2830_end6364
  if2830_else6363:
    null $P5015
    set $P5016, $P5015
  if2830_end6364:
    unless_null $P5016, vivi_28316366
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_28316366:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2832_end6368 
.annotate 'line', 2841
.annotate 'line', 2842
    unless_null _lex_param_1, fallback6375
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5019
  fallback6375:
    set fb_tmp_588, _lex_param_1
    repr_defined $I5007, fb_tmp_588
    unless $I5007 goto if2835_else6373 
    set $P5020, fb_tmp_588["named_param"]
    set $P5022, $P5020
    goto if2835_end6374
  if2835_else6373:
    null $P5021
    set $P5022, $P5021
  if2835_end6374:
    unless_null $P5022, vivi_28366376
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_28366376:
    set fb_tmp_587, $P5022
    repr_defined $I5006, fb_tmp_587
    unless $I5006 goto if2834_else6371 
    set $P5024, fb_tmp_587["param_var"]
    set $P5026, $P5024
    goto if2834_end6372
  if2834_else6371:
    null $P5025
    set $P5026, $P5025
  if2834_end6372:
    unless_null $P5026, vivi_28376377
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_28376377:
    set fb_tmp_586, $P5026
    repr_defined $I5005, fb_tmp_586
    unless $I5005 goto if2833_else6369 
    set $P5028, fb_tmp_586["sigil"]
    set $P5030, $P5028
    goto if2833_end6370
  if2833_else6369:
    null $P5029
    set $P5030, $P5029
  if2833_end6370:
    unless_null $P5030, vivi_28386378
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5030, $P5031
  vivi_28386378:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2832_end6368:
    goto if2827_end6358
  if2827_else6357:
.annotate 'line', 2845
.annotate 'line', 2846
    unless_null _lex_param_1, fallback6381
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5036
  fallback6381:
    set fb_tmp_589, _lex_param_1
    repr_defined $I5008, fb_tmp_589
    unless $I5008 goto if2839_else6379 
    set $P5037, fb_tmp_589["param_var"]
    set $P5039, $P5037
    goto if2839_end6380
  if2839_else6379:
    null $P5038
    set $P5039, $P5038
  if2839_end6380:
    unless_null $P5039, vivi_28406382
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5039, $P5040
  vivi_28406382:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2841_else6383 
.annotate 'line', 2847
.annotate 'line', 2848
    $P102."slurpy"(1)
.annotate 'line', 2849
    unless_null _lex_param_1, fallback6389
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5042
  fallback6389:
    set fb_tmp_591, _lex_param_1
    repr_defined $I5012, fb_tmp_591
    unless $I5012 goto if2843_else6387 
    set $P5043, fb_tmp_591["param_var"]
    set $P5045, $P5043
    goto if2843_end6388
  if2843_else6387:
    null $P5044
    set $P5045, $P5044
  if2843_end6388:
    unless_null $P5045, vivi_28446390
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  vivi_28446390:
    set fb_tmp_590, $P5045
    repr_defined $I5011, fb_tmp_590
    unless $I5011 goto if2842_else6385 
    set $P5047, fb_tmp_590["sigil"]
    set $P5049, $P5047
    goto if2842_end6386
  if2842_else6385:
    null $P5048
    set $P5049, $P5048
  if2842_end6386:
    unless_null $P5049, vivi_28456391
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_28456391:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2841_end6384
  if2841_else6383:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2846_end6393 
.annotate 'line', 2851
.annotate 'line', 2852
    unless_null _lex_param_1, fallback6398
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5052
  fallback6398:
    set fb_tmp_593, _lex_param_1
    repr_defined $I5015, fb_tmp_593
    unless $I5015 goto if2848_else6396 
    set $P5053, fb_tmp_593["param_var"]
    set $P5055, $P5053
    goto if2848_end6397
  if2848_else6396:
    null $P5054
    set $P5055, $P5054
  if2848_end6397:
    unless_null $P5055, vivi_28496399
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5055, $P5056
  vivi_28496399:
    set fb_tmp_592, $P5055
    repr_defined $I5014, fb_tmp_592
    unless $I5014 goto if2847_else6394 
    set $P5057, fb_tmp_592["sigil"]
    set $P5059, $P5057
    goto if2847_end6395
  if2847_else6394:
    null $P5058
    set $P5059, $P5058
  if2847_end6395:
    unless_null $P5059, vivi_28506400
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5059, $P5060
  vivi_28506400:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2846_end6393:
    set $P5065, $P5063
  if2841_end6384:
  if2827_end6358:
    unless_null _lex_param_1, fallback6405
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5066
  fallback6405:
    set fb_tmp_594, _lex_param_1
    repr_defined $I5016, fb_tmp_594
    unless $I5016 goto if2852_else6403 
    set $P5067, fb_tmp_594["default_value"]
    set $P5069, $P5067
    goto if2852_end6404
  if2852_else6403:
    null $P5068
    set $P5069, $P5068
  if2852_end6404:
    unless_null $P5069, vivi_28536406
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5069, $P5070
  vivi_28536406:
    unless $P5069 goto if2851_end6402 
.annotate 'line', 2855
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2854_end6408 
.annotate 'line', 2856
.annotate 'line', 2857
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2854_end6408:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2855_end6410 
.annotate 'line', 2859
.annotate 'line', 2860
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2855_end6410:
.annotate 'line', 2862
    unless_null _lex_param_1, fallback6417
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5075
  fallback6417:
    set fb_tmp_597, _lex_param_1
    repr_defined $I5021, fb_tmp_597
    unless $I5021 goto if2858_else6415 
    set $P5076, fb_tmp_597["default_value"]
    set $P5078, $P5076
    goto if2858_end6416
  if2858_else6415:
    null $P5077
    set $P5078, $P5077
  if2858_end6416:
    unless_null $P5078, vivi_28596418
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5078, $P5079
  vivi_28596418:
    set fb_tmp_596, $P5078
    repr_defined $I5020, fb_tmp_596
    unless $I5020 goto if2857_else6413 
    set $P5080, fb_tmp_596[0]
    set $P5082, $P5080
    goto if2857_end6414
  if2857_else6413:
    null $P5081
    set $P5082, $P5081
  if2857_end6414:
    unless_null $P5082, vivi_28606419
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5082, $P5083
  vivi_28606419:
    set fb_tmp_595, $P5082
    repr_defined $I5019, fb_tmp_595
    unless $I5019 goto if2856_else6411 
    set $P5084, fb_tmp_595["EXPR"]
    set $P5086, $P5084
    goto if2856_end6412
  if2856_else6411:
    null $P5085
    set $P5086, $P5085
  if2856_end6412:
    unless_null $P5086, vivi_28616420
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5086, $P5087
  vivi_28616420:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2851_end6402:
.annotate 'line', 2864
    $P5090 = $P102."default"()
    if $P5090 goto unless2862_end6422 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6423
    nqp_get_sc_object $P5093, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5092, $P5093
    set fb_tmp_598, $P5092
    repr_defined $I5022, fb_tmp_598
    unless $I5022 goto if2863_else6424 
    set $P5094, fb_tmp_598["$W"]
    set $P5096, $P5094
    goto if2863_end6425
  if2863_else6424:
    null $P5095
    set $P5096, $P5095
  if2863_end6425:
    unless_null $P5096, vivi_28646426
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5096, $P5097
  vivi_28646426:
    unless_null $P5096, vivi_28656427
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28656427:
    set $P5091, $P5096
  fallback6423:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6428
    nqp_get_sc_object $P5102, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5101, $P5102
    set fb_tmp_599, $P5101
    repr_defined $I5023, fb_tmp_599
    unless $I5023 goto if2866_else6429 
    set $P5103, fb_tmp_599["$W"]
    set $P5105, $P5103
    goto if2866_end6430
  if2866_else6429:
    null $P5104
    set $P5105, $P5104
  if2866_end6430:
    unless_null $P5105, vivi_28676431
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5105, $P5106
  vivi_28676431:
    unless_null $P5105, vivi_28686432
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28686432:
    set $P5100, $P5105
  fallback6428:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2862_end6422:
    unless_null _lex_param_1, fallback6437
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5111
  fallback6437:
    set fb_tmp_600, _lex_param_1
    repr_defined $I5024, fb_tmp_600
    unless $I5024 goto if2870_else6435 
    set $P5112, fb_tmp_600["typename"]
    set $P5114, $P5112
    goto if2870_end6436
  if2870_else6435:
    null $P5113
    set $P5114, $P5113
  if2870_end6436:
    unless_null $P5114, vivi_28716438
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5114, $P5115
  vivi_28716438:
    unless $P5114 goto if2869_end6434 
    .const 'Sub' $P5116 = 'cuid_510_1383915013.33774' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2869_end6434:
    unless_null _lex_param_1, fallback6465
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5118
  fallback6465:
    set fb_tmp_605, _lex_param_1
    repr_defined $I5025, fb_tmp_605
    unless $I5025 goto if2885_else6463 
    set $P5119, fb_tmp_605["definedness"]
    set $P5121, $P5119
    goto if2885_end6464
  if2885_else6463:
    null $P5120
    set $P5121, $P5120
  if2885_end6464:
    unless_null $P5121, vivi_28866466
    nqp_get_sc_object $P5122, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5121, $P5122
  vivi_28866466:
    unless $P5121 goto if2884_end6462 
.annotate 'line', 2879
    unless_null _lex_param_1, fallback6471
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5123
  fallback6471:
    set fb_tmp_607, _lex_param_1
    repr_defined $I5027, fb_tmp_607
    unless $I5027 goto if2888_else6469 
    set $P5124, fb_tmp_607["definedness"]
    set $P5126, $P5124
    goto if2888_end6470
  if2888_else6469:
    null $P5125
    set $P5126, $P5125
  if2888_end6470:
    unless_null $P5126, vivi_28896472
    nqp_get_sc_object $P5127, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5126, $P5127
  vivi_28896472:
    set fb_tmp_606, $P5126
    repr_defined $I5026, fb_tmp_606
    unless $I5026 goto if2887_else6467 
    set $P5128, fb_tmp_606[0]
    set $P5130, $P5128
    goto if2887_end6468
  if2887_else6467:
    null $P5129
    set $P5130, $P5129
  if2887_end6468:
    unless_null $P5130, vivi_28906473
    nqp_get_sc_object $P5131, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5130, $P5131
  vivi_28906473:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2884_end6462:
.annotate 'line', 2883
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1383915013.33774") :anon :lex :outer("cuid_311_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2867
    .const 'Sub' $P5019 = 'cuid_509_1383915013.33774' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_601 
    .local pmc fb_tmp_602 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2868
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6443
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback6443:
    set fb_tmp_602, $P5002
    repr_defined $I5002, fb_tmp_602
    unless $I5002 goto if2873_else6441 
    set $P5004, fb_tmp_602["typename"]
    set $P5006, $P5004
    goto if2873_end6442
  if2873_else6441:
    null $P5005
    set $P5006, $P5005
  if2873_end6442:
    unless_null $P5006, vivi_28746444
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_28746444:
    set fb_tmp_601, $P5006
    repr_defined $I5001, fb_tmp_601
    unless $I5001 goto if2872_else6439 
    set $P5008, fb_tmp_601[0]
    set $P5010, $P5008
    goto if2872_end6440
  if2872_else6439:
    null $P5009
    set $P5010, $P5009
  if2872_end6440:
    unless_null $P5010, vivi_28756445
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_28756445:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2869
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2876_end6447 
    .const 'Sub' $P5015 = 'cuid_509_1383915013.33774' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2876_end6447:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1383915013.33774") :anon :lex :outer("cuid_510_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2870
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_603 
    .local pmc fb_tmp_604 
.annotate 'line', 2871
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6448
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_603, $P5002
    repr_defined $I5001, fb_tmp_603
    unless $I5001 goto if2877_else6449 
    set $P5004, fb_tmp_603["$W"]
    set $P5006, $P5004
    goto if2877_end6450
  if2877_else6449:
    null $P5005
    set $P5006, $P5005
  if2877_end6450:
    unless_null $P5006, vivi_28786451
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_28786451:
    unless_null $P5006, vivi_28796452
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28796452:
    set $P5001, $P5006
  fallback6448:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2872
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2881_end6456 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6459
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  fallback6459:
    set fb_tmp_604, $P5015
    repr_defined $I5003, fb_tmp_604
    unless $I5003 goto if2882_else6457 
    set $P5017, fb_tmp_604["default_value"]
    set $P5019, $P5017
    goto if2882_end6458
  if2882_else6457:
    null $P5018
    set $P5019, $P5018
  if2882_end6458:
    unless_null $P5019, vivi_28836460
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_28836460:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2881_end6456:
    set $P5026, $P5021
    unless $P5021 goto if2880_end6454 
.annotate 'line', 2873
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2880_end6454:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_312_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2886
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_608 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2888
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2890
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6474
    nqp_get_sc_object $P5008, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5007, $P5008
    set fb_tmp_608, $P5007
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2891_else6475 
    set $P5009, fb_tmp_608["$W"]
    set $P5011, $P5009
    goto if2891_end6476
  if2891_else6475:
    null $P5010
    set $P5011, $P5010
  if2891_end6476:
    unless_null $P5011, vivi_28926477
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_28926477:
    unless_null $P5011, vivi_28936478
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28936478:
    set $P5006, $P5011
  fallback6474:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2891
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_313_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2895
    unless_null _lex_param_1, fallback6481
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback6481:
    set fb_tmp_609, _lex_param_1
    repr_defined $I5001, fb_tmp_609
    unless $I5001 goto if2894_else6479 
    set $P5003, fb_tmp_609["param_var"]
    set $P5005, $P5003
    goto if2894_end6480
  if2894_else6479:
    null $P5004
    set $P5005, $P5004
  if2894_end6480:
    unless_null $P5005, vivi_28956482
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_28956482:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2896
    unless_null _lex_param_1, fallback6487
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback6487:
    set fb_tmp_611, _lex_param_1
    repr_defined $I5003, fb_tmp_611
    unless $I5003 goto if2897_else6485 
    set $P5009, fb_tmp_611["param_var"]
    set $P5011, $P5009
    goto if2897_end6486
  if2897_else6485:
    null $P5010
    set $P5011, $P5010
  if2897_end6486:
    unless_null $P5011, vivi_28986488
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_28986488:
    set fb_tmp_610, $P5011
    repr_defined $I5002, fb_tmp_610
    unless $I5002 goto if2896_else6483 
    set $P5013, fb_tmp_610["name"]
    set $P5015, $P5013
    goto if2896_end6484
  if2896_else6483:
    null $P5014
    set $P5015, $P5014
  if2896_end6484:
    unless_null $P5015, vivi_28996489
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_28996489:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2897
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_314_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2900
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_511_1383915013.33774' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 2904
    nqp_get_sc_object $P5003, "B70A3A6C61478A243495E9368C50A2B67630EC67-1383914954.73819", 127
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_29046496
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_511_1383915013.33774' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_29036495
  catch_handler_29046496:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_29036495
  skip_handler_29036495:
    set $P5012, $P102
    if $P102 goto unless2905_end6498 
.annotate 'line', 2911
.annotate 'line', 2912
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2905_end6498:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1383915013.33774") :anon :lex :outer("cuid_314_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2906
    .lex "$sym", $P101 
    .local pmc fb_tmp_612 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 2907
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6490
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_612, $P5003
    repr_defined $I5001, fb_tmp_612
    unless $I5001 goto if2900_else6491 
    set $P5005, fb_tmp_612["$W"]
    set $P5007, $P5005
    goto if2900_end6492
  if2900_else6491:
    null $P5006
    set $P5007, $P5006
  if2900_end6492:
    unless_null $P5007, vivi_29016493
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_29016493:
    unless_null $P5007, vivi_29026494
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_29026494:
    set $P5002, $P5007
  fallback6490:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2908
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_315_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2916
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_613 
.annotate 'line', 2917
    unless_null _lex_param_1, fallback6501
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback6501:
    set fb_tmp_613, _lex_param_1
    repr_defined $I5001, fb_tmp_613
    unless $I5001 goto if2906_else6499 
    set $P5002, fb_tmp_613["trait_mod"]
    set $P5004, $P5002
    goto if2906_end6500
  if2906_else6499:
    null $P5003
    set $P5004, $P5003
  if2906_end6500:
    unless_null $P5004, vivi_29076502
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_29076502:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_316_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2920
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_513_1383915013.33774' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_515_1383915013.33774' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_516_1383915013.33774' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_517_1383915013.33774' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_518_1383915013.33774' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_629 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_640 
    unless_null _lex_param_1, fallback6507
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback6507:
    set fb_tmp_614, _lex_param_1
    repr_defined $I5002, fb_tmp_614
    unless $I5002 goto if2909_else6505 
    set $P5002, fb_tmp_614["longname"]
    set $P5004, $P5002
    goto if2909_end6506
  if2909_else6505:
    null $P5003
    set $P5004, $P5003
  if2909_end6506:
    unless_null $P5004, vivi_29106508
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_29106508:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2908_else6503 
    .const 'Sub' $P5006 = 'cuid_513_1383915013.33774' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2908_end6504
  if2908_else6503:
    unless_null _lex_param_1, fallback6549
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback6549:
    set fb_tmp_623, _lex_param_1
    repr_defined $I5004, fb_tmp_623
    unless $I5004 goto if2933_else6547 
    set $P5009, fb_tmp_623["longname"]
    set $P5011, $P5009
    goto if2933_end6548
  if2933_else6547:
    null $P5010
    set $P5011, $P5010
  if2933_end6548:
    unless_null $P5011, vivi_29346550
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_29346550:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2932_else6545 
    .const 'Sub' $P5013 = 'cuid_515_1383915013.33774' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2932_end6546
  if2932_else6545:
    unless_null _lex_param_1, fallback6577
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5015
  fallback6577:
    set fb_tmp_629, _lex_param_1
    repr_defined $I5006, fb_tmp_629
    unless $I5006 goto if2949_else6575 
    set $P5016, fb_tmp_629["longname"]
    set $P5018, $P5016
    goto if2949_end6576
  if2949_else6575:
    null $P5017
    set $P5018, $P5017
  if2949_end6576:
    unless_null $P5018, vivi_29506578
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_29506578:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2948_else6573 
.annotate 'line', 2946
.annotate 'line', 2947
    .const 'Sub' $P5021 = 'cuid_516_1383915013.33774' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2948_end6574
  if2948_else6573:
    unless_null _lex_param_1, fallback6588
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5023
  fallback6588:
    set fb_tmp_631, _lex_param_1
    repr_defined $I5008, fb_tmp_631
    unless $I5008 goto if2955_else6586 
    set $P5024, fb_tmp_631["longname"]
    set $P5026, $P5024
    goto if2955_end6587
  if2955_else6586:
    null $P5025
    set $P5026, $P5025
  if2955_end6587:
    unless_null $P5026, vivi_29566589
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_29566589:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2954_else6584 
.annotate 'line', 2949
.annotate 'line', 2950
    .const 'Sub' $P5029 = 'cuid_517_1383915013.33774' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2954_end6585
  if2954_else6584:
    unless_null _lex_param_1, fallback6599
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5031
  fallback6599:
    set fb_tmp_633, _lex_param_1
    repr_defined $I5010, fb_tmp_633
    unless $I5010 goto if2961_else6597 
    set $P5032, fb_tmp_633["longname"]
    set $P5034, $P5032
    goto if2961_end6598
  if2961_else6597:
    null $P5033
    set $P5034, $P5033
  if2961_end6598:
    unless_null $P5034, vivi_29626600
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  vivi_29626600:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2960_else6595 
.annotate 'line', 2952
.annotate 'line', 2953
    .const 'Sub' $P5037 = 'cuid_518_1383915013.33774' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2960_end6596
  if2960_else6595:
.annotate 'line', 2960
.annotate 'line', 2961
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6626
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5040
  fallback6626:
    set fb_tmp_640, _lex_param_1
    repr_defined $I5011, fb_tmp_640
    unless $I5011 goto if2977_else6624 
    set $P5041, fb_tmp_640["longname"]
    set $P5043, $P5041
    goto if2977_end6625
  if2977_else6624:
    null $P5042
    set $P5043, $P5042
  if2977_end6625:
    unless_null $P5043, vivi_29786627
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5043, $P5044
  vivi_29786627:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2960_end6596:
    set $P5047, $P5046
  if2954_end6585:
    set $P5048, $P5047
  if2948_end6574:
    set $P5049, $P5048
  if2932_end6546:
    set $P5050, $P5049
  if2908_end6504:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_513_1383915013.33774") :anon :lex :outer("cuid_316_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2921
    .const 'Sub' $P5043 = 'cuid_512_1383915013.33774' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    .local pmc fb_tmp_618 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P104, $P5004
.annotate 'line', 2923
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6513
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  fallback6513:
    set fb_tmp_616, $P5005
    repr_defined $I5002, fb_tmp_616
    unless $I5002 goto if2912_else6511 
    set $P5007, fb_tmp_616["circumfix"]
    set $P5009, $P5007
    goto if2912_end6512
  if2912_else6511:
    null $P5008
    set $P5009, $P5008
  if2912_end6512:
    unless_null $P5009, vivi_29136514
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_29136514:
    set fb_tmp_615, $P5009
    repr_defined $I5001, fb_tmp_615
    unless $I5001 goto if2911_else6509 
    set $P5011, fb_tmp_615[0]
    set $P5013, $P5011
    goto if2911_end6510
  if2911_else6509:
    null $P5012
    set $P5013, $P5012
  if2911_end6510:
    unless_null $P5013, vivi_29146515
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_29146515:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2925
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2915_end6517 
.annotate 'line', 2924
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2915_end6517:
.annotate 'line', 2926
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6518
    nqp_get_sc_object $P5024, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5023, $P5024
    set fb_tmp_617, $P5023
    repr_defined $I5003, fb_tmp_617
    unless $I5003 goto if2916_else6519 
    set $P5025, fb_tmp_617["$PACKAGE"]
    set $P5027, $P5025
    goto if2916_end6520
  if2916_else6519:
    null $P5026
    set $P5027, $P5026
  if2916_end6520:
    unless_null $P5027, vivi_29176521
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5027, $P5028
  vivi_29176521:
    unless_null $P5027, vivi_29186522
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_29186522:
    set $P5022, $P5027
  fallback6518:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6523
    nqp_get_sc_object $P5032, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5031, $P5032
    set fb_tmp_618, $P5031
    repr_defined $I5005, fb_tmp_618
    unless $I5005 goto if2919_else6524 
    set $P5033, fb_tmp_618["$SCOPE"]
    set $P5035, $P5033
    goto if2919_end6525
  if2919_else6524:
    null $P5034
    set $P5035, $P5034
  if2919_end6525:
    unless_null $P5035, vivi_29206526
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5035, $P5036
  vivi_29206526:
    unless_null $P5035, vivi_29216527
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_29216527:
    set $P5030, $P5035
  fallback6523:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2929
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_512_1383915013.33774' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1383915013.33774") :anon :lex :outer("cuid_513_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2929
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
    .local pmc fb_tmp_622 
.annotate 'line', 2930
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6528
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_619, $P5002
    repr_defined $I5001, fb_tmp_619
    unless $I5001 goto if2922_else6529 
    set $P5004, fb_tmp_619["$W"]
    set $P5006, $P5004
    goto if2922_end6530
  if2922_else6529:
    null $P5005
    set $P5006, $P5005
  if2922_end6530:
    unless_null $P5006, vivi_29236531
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_29236531:
    unless_null $P5006, vivi_29246532
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29246532:
    set $P5001, $P5006
  fallback6528:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2931
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_620, $P5012
    repr_defined $I5003, fb_tmp_620
    unless $I5003 goto if2925_else6534 
    set $P5013, fb_tmp_620["code_obj"]
    set $P5015, $P5013
    goto if2925_end6535
  if2925_else6534:
    null $P5014
    set $P5015, $P5014
  if2925_end6535:
    unless_null $P5015, vivi_29266536
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_29266536:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6533
.annotate 'line', 2932
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6537
    nqp_get_sc_object $P5019, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5018, $P5019
    set fb_tmp_621, $P5018
    repr_defined $I5004, fb_tmp_621
    unless $I5004 goto if2927_else6538 
    set $P5020, fb_tmp_621["$W"]
    set $P5022, $P5020
    goto if2927_end6539
  if2927_else6538:
    null $P5021
    set $P5022, $P5021
  if2927_end6539:
    unless_null $P5022, vivi_29286540
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_29286540:
    unless_null $P5022, vivi_29296541
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29296541:
    set $P5017, $P5022
  fallback6537:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_622, $P5025
    repr_defined $I5005, fb_tmp_622
    unless $I5005 goto if2930_else6542 
    set $P5026, fb_tmp_622["block_past"]
    set $P5028, $P5026
    goto if2930_end6543
  if2930_else6542:
    null $P5027
    set $P5028, $P5027
  if2930_end6543:
    unless_null $P5028, vivi_29316544
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_29316544:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6533:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_515_1383915013.33774") :anon :lex :outer("cuid_316_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2935
    .const 'Sub' $P5033 = 'cuid_514_1383915013.33774' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 2937
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6555
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  fallback6555:
    set fb_tmp_625, $P5004
    repr_defined $I5002, fb_tmp_625
    unless $I5002 goto if2936_else6553 
    set $P5006, fb_tmp_625["circumfix"]
    set $P5008, $P5006
    goto if2936_end6554
  if2936_else6553:
    null $P5007
    set $P5008, $P5007
  if2936_end6554:
    unless_null $P5008, vivi_29376556
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_29376556:
    set fb_tmp_624, $P5008
    repr_defined $I5001, fb_tmp_624
    unless $I5001 goto if2935_else6551 
    set $P5010, fb_tmp_624[0]
    set $P5012, $P5010
    goto if2935_end6552
  if2935_else6551:
    null $P5011
    set $P5012, $P5011
  if2935_end6552:
    unless_null $P5012, vivi_29386557
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_29386557:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2939
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2939_end6559 
.annotate 'line', 2938
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2939_end6559:
.annotate 'line', 2940
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6560
    nqp_get_sc_object $P5023, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5022, $P5023
    set fb_tmp_626, $P5022
    repr_defined $I5003, fb_tmp_626
    unless $I5003 goto if2940_else6561 
    set $P5024, fb_tmp_626["$PACKAGE"]
    set $P5026, $P5024
    goto if2940_end6562
  if2940_else6561:
    null $P5025
    set $P5026, $P5025
  if2940_end6562:
    unless_null $P5026, vivi_29416563
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_29416563:
    unless_null $P5026, vivi_29426564
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29426564:
    set $P5021, $P5026
  fallback6560:
    set $P103, $P5021
.annotate 'line', 2942
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_514_1383915013.33774' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_514_1383915013.33774") :anon :lex :outer("cuid_515_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2942
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
.annotate 'line', 2943
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6565
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_627, $P5002
    repr_defined $I5001, fb_tmp_627
    unless $I5001 goto if2943_else6566 
    set $P5004, fb_tmp_627["$W"]
    set $P5006, $P5004
    goto if2943_end6567
  if2943_else6566:
    null $P5005
    set $P5006, $P5005
  if2943_end6567:
    unless_null $P5006, vivi_29446568
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_29446568:
    unless_null $P5006, vivi_29456569
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29456569:
    set $P5001, $P5006
  fallback6565:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_628, _lex_param_0
    repr_defined $I5002, fb_tmp_628
    unless $I5002 goto if2946_else6570 
    set $P5011, fb_tmp_628["variable"]
    set $P5013, $P5011
    goto if2946_end6571
  if2946_else6570:
    null $P5012
    set $P5013, $P5012
  if2946_end6571:
    unless_null $P5013, vivi_29476572
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_29476572:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_516_1383915013.33774") :anon :lex :outer("cuid_316_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2947
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_630 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6579
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_630, $P5002
    repr_defined $I5001, fb_tmp_630
    unless $I5001 goto if2951_else6580 
    set $P5004, fb_tmp_630["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2951_end6581
  if2951_else6580:
    null $P5005
    set $P5006, $P5005
  if2951_end6581:
    unless_null $P5006, vivi_29526582
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_29526582:
    unless_null $P5006, vivi_29536583
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29536583:
    set $P5001, $P5006
  fallback6579:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_517_1383915013.33774") :anon :lex :outer("cuid_316_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2950
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_632 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6590
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set fb_tmp_632, $P5002
    repr_defined $I5001, fb_tmp_632
    unless $I5001 goto if2957_else6591 
    set $P5004, fb_tmp_632["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2957_end6592
  if2957_else6591:
    null $P5005
    set $P5006, $P5005
  if2957_end6592:
    unless_null $P5006, vivi_29586593
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_29586593:
    unless_null $P5006, vivi_29596594
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29596594:
    set $P5001, $P5006
  fallback6590:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_518_1383915013.33774") :anon :lex :outer("cuid_316_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2953
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 2954
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2955
    set fb_tmp_634, $P101
    repr_defined $I5001, fb_tmp_634
    unless $I5001 goto if2963_else6601 
    set $P5004, fb_tmp_634["block_past"]
    set $P5006, $P5004
    goto if2963_end6602
  if2963_else6601:
    null $P5005
    set $P5006, $P5005
  if2963_end6602:
    unless_null $P5006, vivi_29646603
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_29646603:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6606
    nqp_get_sc_object $P5013, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5012, $P5013
    set fb_tmp_636, $P5012
    repr_defined $I5003, fb_tmp_636
    unless $I5003 goto if2966_else6607 
    set $P5014, fb_tmp_636["$EXPORT"]
    set $P5016, $P5014
    goto if2966_end6608
  if2966_else6607:
    null $P5015
    set $P5016, $P5015
  if2966_end6608:
    unless_null $P5016, vivi_29676609
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_29676609:
    unless_null $P5016, vivi_29686610
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29686610:
    set $P5011, $P5016
  fallback6606:
    get_who $P5010, $P5011
    set fb_tmp_635, $P5010
    repr_defined $I5002, fb_tmp_635
    unless $I5002 goto if2965_else6604 
    set $P5019, fb_tmp_635["DEFAULT"]
    set $P5021, $P5019
    goto if2965_end6605
  if2965_else6604:
    null $P5020
    set $P5021, $P5020
  if2965_end6605:
    unless_null $P5021, vivi_29696611
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_29696611:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_637, $P101
    repr_defined $I5005, fb_tmp_637
    unless $I5005 goto if2970_else6613 
    set $P5024, fb_tmp_637["code_obj"]
    set $P5026, $P5024
    goto if2970_end6614
  if2970_else6613:
    null $P5025
    set $P5026, $P5025
  if2970_end6614:
    unless_null $P5026, vivi_29716615
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5026, $P5027
  vivi_29716615:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6612
.annotate 'line', 2957
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6616
    nqp_get_sc_object $P5030, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5029, $P5030
    set fb_tmp_638, $P5029
    repr_defined $I5006, fb_tmp_638
    unless $I5006 goto if2972_else6617 
    set $P5031, fb_tmp_638["$W"]
    set $P5033, $P5031
    goto if2972_end6618
  if2972_else6617:
    null $P5032
    set $P5033, $P5032
  if2972_end6618:
    unless_null $P5033, vivi_29736619
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5033, $P5034
  vivi_29736619:
    unless_null $P5033, vivi_29746620
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29746620:
    set $P5028, $P5033
  fallback6616:
    set fb_tmp_639, $P101
    repr_defined $I5007, fb_tmp_639
    unless $I5007 goto if2975_else6621 
    set $P5036, fb_tmp_639["block_past"]
    set $P5038, $P5036
    goto if2975_end6622
  if2975_else6621:
    null $P5037
    set $P5038, $P5037
  if2975_end6622:
    unless_null $P5038, vivi_29766623
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5038, $P5039
  vivi_29766623:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6612:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_317_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2965
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_7 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_520_1383915013.33774' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    if haz_param_7, default6744
    nqp_get_sc_object $P5073, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_2, $P5073
  default6744:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6632
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback6632:
    set fb_tmp_641, _lex_param_1
    repr_defined $I5001, fb_tmp_641
    unless $I5001 goto if2980_else6630 
    set $P5004, fb_tmp_641["deflongname"]
    set $P5006, $P5004
    goto if2980_end6631
  if2980_else6630:
    null $P5005
    set $P5006, $P5005
  if2980_end6631:
    unless_null $P5006, vivi_29816633
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_29816633:
    unless $P5006 goto if2979_else6628 
.annotate 'line', 2967
.annotate 'line', 2968
    unless_null _lex_param_1, fallback6636
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback6636:
    set fb_tmp_642, _lex_param_1
    repr_defined $I5002, fb_tmp_642
    unless $I5002 goto if2982_else6634 
    set $P5009, fb_tmp_642["deflongname"]
    set $P5011, $P5009
    goto if2982_end6635
  if2982_else6634:
    null $P5010
    set $P5011, $P5010
  if2982_end6635:
    unless_null $P5011, vivi_29836637
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_29836637:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2979_end6629
  if2979_else6628:
.annotate 'line', 2970
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6640
    nqp_get_sc_object $P5017, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5016, $P5017
    set fb_tmp_643, $P5016
    repr_defined $I5004, fb_tmp_643
    unless $I5004 goto if2985_else6641 
    set $P5018, fb_tmp_643["$PKGDECL"]
    set $P5020, $P5018
    goto if2985_end6642
  if2985_else6641:
    null $P5019
    set $P5020, $P5019
  if2985_end6642:
    unless_null $P5020, vivi_29866643
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_29866643:
    unless_null $P5020, vivi_29876644
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29876644:
    set $P5015, $P5020
  fallback6640:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2984_end6639 
.annotate 'line', 2971
.annotate 'line', 2972
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2984_end6639:
    unless_null _lex_param_1, fallback6647
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5025
  fallback6647:
    set fb_tmp_644, _lex_param_1
    repr_defined $I5005, fb_tmp_644
    unless $I5005 goto if2988_else6645 
    set $P5026, fb_tmp_644["latename"]
    set $P5028, $P5026
    goto if2988_end6646
  if2988_else6645:
    null $P5027
    set $P5028, $P5027
  if2988_end6646:
    unless_null $P5028, vivi_29896648
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_29896648:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2979_end6629:
    unless_null _lex_param_1, fallback6653
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5031
  fallback6653:
    set fb_tmp_645, _lex_param_1
    repr_defined $I5006, fb_tmp_645
    unless $I5006 goto if2991_else6651 
    set $P5032, fb_tmp_645["proto"]
    set $P5034, $P5032
    goto if2991_end6652
  if2991_else6651:
    null $P5033
    set $P5034, $P5033
  if2991_end6652:
    unless_null $P5034, vivi_29926654
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5034, $P5035
  vivi_29926654:
    unless $P5034 goto if2990_else6649 
.annotate 'line', 2977
.annotate 'line', 2978
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 108
.annotate 'line', 2980
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2981
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2982
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration_static" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2989
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6655
    nqp_get_sc_object $P5046, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5045, $P5046
    set fb_tmp_646, $P5045
    repr_defined $I5007, fb_tmp_646
    unless $I5007 goto if2993_else6656 
    set $P5047, fb_tmp_646["$W"]
    set $P5049, $P5047
    goto if2993_end6657
  if2993_else6656:
    null $P5048
    set $P5049, $P5048
  if2993_end6657:
    unless_null $P5049, vivi_29946658
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_29946658:
    unless_null $P5049, vivi_29956659
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_29956659:
    set $P5044, $P5049
  fallback6655:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6660
    nqp_get_sc_object $P5054, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5053, $P5054
    set fb_tmp_647, $P5053
    repr_defined $I5008, fb_tmp_647
    unless $I5008 goto if2996_else6661 
    set $P5055, fb_tmp_647["$PACKAGE"]
    set $P5057, $P5055
    goto if2996_end6662
  if2996_else6661:
    null $P5056
    set $P5057, $P5056
  if2996_end6662:
    unless_null $P5057, vivi_29976663
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5057, $P5058
  vivi_29976663:
    unless_null $P5057, vivi_29986664
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_29986664:
    set $P5052, $P5057
  fallback6660:
.annotate 'line', 2990
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6665
    nqp_get_sc_object $P5062, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5061, $P5062
    set fb_tmp_648, $P5061
    repr_defined $I5009, fb_tmp_648
    unless $I5009 goto if2999_else6666 
    set $P5063, fb_tmp_648["$W"]
    set $P5065, $P5063
    goto if2999_end6667
  if2999_else6666:
    null $P5064
    set $P5065, $P5064
  if2999_end6667:
    unless_null $P5065, vivi_30006668
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5065, $P5066
  vivi_30006668:
    unless_null $P5065, vivi_30016669
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_30016669:
    set $P5060, $P5065
  fallback6665:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2990_end6650
  if2990_else6649:
    .const 'Sub' $P5070 = 'cuid_520_1383915013.33774' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2990_end6650:
.annotate 'line', 3031
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_520_1383915013.33774") :anon :lex :outer("cuid_317_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2992
    .const 'Sub' $P5128 = 'cuid_519_1383915013.33774' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 2993
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6670
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5005, $P5006
    set fb_tmp_649, $P5005
    repr_defined $I5001, fb_tmp_649
    unless $I5001 goto if3002_else6671 
    set $P5007, fb_tmp_649["$W"]
    set $P5009, $P5007
    goto if3002_end6672
  if3002_else6671:
    null $P5008
    set $P5009, $P5008
  if3002_end6672:
    unless_null $P5009, vivi_30036673
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_30036673:
    unless_null $P5009, vivi_30046674
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_30046674:
    set $P5004, $P5009
  fallback6670:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2994
    set fb_tmp_650, $P101
    repr_defined $I5002, fb_tmp_650
    unless $I5002 goto if3005_else6675 
    set $P5013, fb_tmp_650[0]
    set $P5015, $P5013
    goto if3005_end6676
  if3005_else6675:
    null $P5014
    set $P5015, $P5014
  if3005_end6676:
    unless_null $P5015, vivi_30066677
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_30066677:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2995
    set fb_tmp_651, $P101
    repr_defined $I5003, fb_tmp_651
    unless $I5003 goto if3007_else6678 
    set $P5019, fb_tmp_651[0]
    set $P5021, $P5019
    goto if3007_end6679
  if3007_else6678:
    null $P5020
    set $P5021, $P5020
  if3007_end6679:
    unless_null $P5021, vivi_30086680
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_30086680:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 2997
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2998
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2999
    set fb_tmp_652, $P101
    repr_defined $I5004, fb_tmp_652
    unless $I5004 goto if3009_else6681 
    set $P5029, fb_tmp_652[0]
    set $P5031, $P5029
    goto if3009_end6682
  if3009_else6681:
    null $P5030
    set $P5031, $P5030
  if3009_end6682:
    unless_null $P5031, vivi_30106683
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_30106683:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3000
    set fb_tmp_653, $P101
    repr_defined $I5005, fb_tmp_653
    unless $I5005 goto if3011_else6684 
    set $P5035, fb_tmp_653[0]
    set $P5037, $P5035
    goto if3011_end6685
  if3011_else6684:
    null $P5036
    set $P5037, $P5036
  if3011_end6685:
    unless_null $P5037, vivi_30126686
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_30126686:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3001
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3002
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6689
    nqp_get_sc_object $P5043, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_48, $P5042
    set fb_tmp_655, pkg_viv_tmp_48
    repr_defined $I5007, fb_tmp_655
    unless $I5007 goto if3014_else6690 
    set $P5044, fb_tmp_655["%RX"]
    set $P5046, $P5044
    goto if3014_end6691
  if3014_else6690:
    null $P5045
    set $P5046, $P5045
  if3014_end6691:
    unless_null $P5046, vivi_30156692
    new $P5047, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5047
    set $P5046, $P5047
  vivi_30156692:
    unless_null $P5046, vivi_30166693
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_30166693:
    set $P5041, $P5046
  fallback6689:
    set fb_tmp_654, $P5041
    repr_defined $I5006, fb_tmp_654
    unless $I5006 goto if3013_else6687 
    set $P5049, fb_tmp_654["code"]
    set $P5051, $P5049
    goto if3013_end6688
  if3013_else6687:
    null $P5050
    set $P5051, $P5050
  if3013_end6688:
    unless_null $P5051, vivi_30176694
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5051, $P5052
  vivi_30176694:
    set $P102, $P5051
.annotate 'line', 3004
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6697
    nqp_get_sc_object $P5055, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_49, $P5054
    set fb_tmp_657, pkg_viv_tmp_49
    repr_defined $I5009, fb_tmp_657
    unless $I5009 goto if3019_else6698 
    set $P5056, fb_tmp_657["%LANG"]
    set $P5058, $P5056
    goto if3019_end6699
  if3019_else6698:
    null $P5057
    set $P5058, $P5057
  if3019_end6699:
    unless_null $P5058, vivi_30206700
    new $P5059, 'Hash'
    set pkg_viv_tmp_49["%LANG"], $P5059
    set $P5058, $P5059
  vivi_30206700:
    unless_null $P5058, vivi_30216701
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_30216701:
    set $P5053, $P5058
  fallback6697:
    set fb_tmp_656, $P5053
    repr_defined $I5008, fb_tmp_656
    unless $I5008 goto if3018_else6695 
    set $P5061, fb_tmp_656["Regex-actions"]
    set $P5063, $P5061
    goto if3018_end6696
  if3018_else6695:
    null $P5062
    set $P5063, $P5062
  if3018_end6696:
    unless_null $P5063, vivi_30226702
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5063, $P5064
  vivi_30226702:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6705
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5065, $P5066
  fallback6705:
    set fb_tmp_658, $P5065
    repr_defined $I5010, fb_tmp_658
    unless $I5010 goto if3023_else6703 
    set $P5067, fb_tmp_658["p6regex"]
    set $P5069, $P5067
    goto if3023_end6704
  if3023_else6703:
    null $P5068
    set $P5069, $P5068
  if3023_end6704:
    unless_null $P5069, vivi_30246706
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5069, $P5070
  vivi_30246706:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 3005
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6711
    nqp_get_sc_object $P5076, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5075, $P5076
    set fb_tmp_659, $P5075
    repr_defined $I5011, fb_tmp_659
    unless $I5011 goto if3027_else6712 
    set $P5077, fb_tmp_659["$PKGDECL"]
    set $P5079, $P5077
    goto if3027_end6713
  if3027_else6712:
    null $P5078
    set $P5079, $P5078
  if3027_end6713:
    unless_null $P5079, vivi_30286714
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5079, $P5080
  vivi_30286714:
    unless_null $P5079, vivi_30296715
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30296715:
    set $P5074, $P5079
  fallback6711:
    set $P5091, $P5074
    unless $P5074 goto if3026_end6710 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6716
    nqp_get_sc_object $P5085, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5084, $P5085
    set fb_tmp_660, $P5084
    repr_defined $I5013, fb_tmp_660
    unless $I5013 goto if3030_else6717 
    set $P5086, fb_tmp_660["$PACKAGE"]
    set $P5088, $P5086
    goto if3030_end6718
  if3030_else6717:
    null $P5087
    set $P5088, $P5087
  if3030_end6718:
    unless_null $P5088, vivi_30316719
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5088, $P5089
  vivi_30316719:
    unless_null $P5088, vivi_30326720
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30326720:
    set $P5083, $P5088
  fallback6716:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if3026_end6710:
    unless $P5091 goto if3025_end6708 
.annotate 'line', 3007
.annotate 'line', 3010
    $P101."blocktype"("declaration_static")
.annotate 'line', 3011
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6721
    nqp_get_sc_object $P5095, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5094, $P5095
    set fb_tmp_661, $P5094
    repr_defined $I5014, fb_tmp_661
    unless $I5014 goto if3033_else6722 
    set $P5096, fb_tmp_661["$W"]
    set $P5098, $P5096
    goto if3033_end6723
  if3033_else6722:
    null $P5097
    set $P5098, $P5097
  if3033_end6723:
    unless_null $P5098, vivi_30346724
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5098, $P5099
  vivi_30346724:
    unless_null $P5098, vivi_30356725
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30356725:
    set $P5093, $P5098
  fallback6721:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6726
    nqp_get_sc_object $P5103, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5102, $P5103
    set fb_tmp_662, $P5102
    repr_defined $I5015, fb_tmp_662
    unless $I5015 goto if3036_else6727 
    set $P5104, fb_tmp_662["$PACKAGE"]
    set $P5106, $P5104
    goto if3036_end6728
  if3036_else6727:
    null $P5105
    set $P5106, $P5105
  if3036_end6728:
    unless_null $P5106, vivi_30376729
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5106, $P5107
  vivi_30376729:
    unless_null $P5106, vivi_30386730
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30386730:
    set $P5101, $P5106
  fallback6726:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if3025_end6708:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6733
    nqp_get_sc_object $P5113, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5112, $P5113
    set fb_tmp_663, $P5112
    repr_defined $I5017, fb_tmp_663
    unless $I5017 goto if3040_else6734 
    set $P5114, fb_tmp_663["$PKGDECL"]
    set $P5116, $P5114
    goto if3040_end6735
  if3040_else6734:
    null $P5115
    set $P5116, $P5115
  if3040_end6735:
    unless_null $P5116, vivi_30416736
    nqp_get_sc_object $P5117, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5116, $P5117
  vivi_30416736:
    unless_null $P5116, vivi_30426737
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30426737:
    set $P5111, $P5116
  fallback6733:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3039_end6732 
    .const 'Sub' $P5119 = 'cuid_519_1383915013.33774' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3039_end6732:
.annotate 'line', 3025
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3027
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_519_1383915013.33774") :anon :lex :outer("cuid_520_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3016
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_664 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3017
    nqp_get_sc_object $P5002, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1383914944.49584", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 3018
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6740
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  fallback6740:
    set fb_tmp_664, $P5004
    repr_defined $I5001, fb_tmp_664
    unless $I5001 goto if3043_else6738 
    set $P5006, fb_tmp_664["p6regex"]
    set $P5008, $P5006
    goto if3043_end6739
  if3043_else6738:
    null $P5007
    set $P5008, $P5007
  if3043_end6739:
    unless_null $P5008, vivi_30446741
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_30446741:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 3019
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3045_end6743 
.annotate 'line', 3020
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3045_end6743:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_318_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6749
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback6749:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5001, fb_tmp_665
    unless $I5001 goto if3047_else6747 
    set $P5003, fb_tmp_665["args"]
    set $P5005, $P5003
    goto if3047_end6748
  if3047_else6747:
    null $P5004
    set $P5005, $P5004
  if3047_end6748:
    unless_null $P5005, vivi_30486750
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_30486750:
    unless $P5005 goto if3046_else6745 
.annotate 'line', 3036
    unless_null _lex_param_1, fallback6755
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5007
  fallback6755:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5003, fb_tmp_667
    unless $I5003 goto if3050_else6753 
    set $P5008, fb_tmp_667["args"]
    set $P5010, $P5008
    goto if3050_end6754
  if3050_else6753:
    null $P5009
    set $P5010, $P5009
  if3050_end6754:
    unless_null $P5010, vivi_30516756
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_30516756:
    set fb_tmp_666, $P5010
    repr_defined $I5002, fb_tmp_666
    unless $I5002 goto if3049_else6751 
    set $P5012, fb_tmp_666[0]
    set $P5014, $P5012
    goto if3049_end6752
  if3049_else6751:
    null $P5013
    set $P5014, $P5013
  if3049_end6752:
    unless_null $P5014, vivi_30526757
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_30526757:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3046_end6746
  if3046_else6745:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3046_end6746:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6762
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5020
  fallback6762:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5004, fb_tmp_668
    unless $I5004 goto if3054_else6760 
    set $P5021, fb_tmp_668["quote"]
    set $P5023, $P5021
    goto if3054_end6761
  if3054_else6760:
    null $P5022
    set $P5023, $P5022
  if3054_end6761:
    unless_null $P5023, vivi_30556763
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_30556763:
    unless $P5023 goto if3053_else6758 
.annotate 'line', 3037
.annotate 'line', 3038
    unless_null _lex_param_1, fallback6766
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5025
  fallback6766:
    set fb_tmp_669, _lex_param_1
    repr_defined $I5005, fb_tmp_669
    unless $I5005 goto if3056_else6764 
    set $P5026, fb_tmp_669["quote"]
    set $P5028, $P5026
    goto if3056_end6765
  if3056_else6764:
    null $P5027
    set $P5028, $P5027
  if3056_end6765:
    unless_null $P5028, vivi_30576767
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_30576767:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 3039
    $P5031 = $P101."op"("callmethod")
    goto if3053_end6759
  if3053_else6758:
    unless_null _lex_param_1, fallback6772
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5032
  fallback6772:
    set fb_tmp_670, _lex_param_1
    repr_defined $I5007, fb_tmp_670
    unless $I5007 goto if3059_else6770 
    set $P5033, fb_tmp_670["longname"]
    set $P5035, $P5033
    goto if3059_end6771
  if3059_else6770:
    null $P5034
    set $P5035, $P5034
  if3059_end6771:
    unless_null $P5035, vivi_30606773
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5035, $P5036
  vivi_30606773:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3058_else6768 
.annotate 'line', 3041
.annotate 'line', 3042
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3058_end6769
  if3058_else6768:
    unless_null _lex_param_1, fallback6778
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5038
  fallback6778:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5009, fb_tmp_671
    unless $I5009 goto if3062_else6776 
    set $P5039, fb_tmp_671["longname"]
    set $P5041, $P5039
    goto if3062_end6777
  if3062_else6776:
    null $P5040
    set $P5041, $P5040
  if3062_end6777:
    unless_null $P5041, vivi_30636779
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5041, $P5042
  vivi_30636779:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3061_else6774 
.annotate 'line', 3044
.annotate 'line', 3045
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3061_end6775
  if3061_else6774:
    unless_null _lex_param_1, fallback6784
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5044
  fallback6784:
    set fb_tmp_672, _lex_param_1
    repr_defined $I5011, fb_tmp_672
    unless $I5011 goto if3065_else6782 
    set $P5045, fb_tmp_672["longname"]
    set $P5047, $P5045
    goto if3065_end6783
  if3065_else6782:
    null $P5046
    set $P5047, $P5046
  if3065_end6783:
    unless_null $P5047, vivi_30666785
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5047, $P5048
  vivi_30666785:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3064_else6780 
.annotate 'line', 3047
.annotate 'line', 3048
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3064_end6781
  if3064_else6780:
    unless_null _lex_param_1, fallback6790
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5050
  fallback6790:
    set fb_tmp_673, _lex_param_1
    repr_defined $I5013, fb_tmp_673
    unless $I5013 goto if3068_else6788 
    set $P5051, fb_tmp_673["longname"]
    set $P5053, $P5051
    goto if3068_end6789
  if3068_else6788:
    null $P5052
    set $P5053, $P5052
  if3068_end6789:
    unless_null $P5053, vivi_30696791
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5053, $P5054
  vivi_30696791:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3067_else6786 
.annotate 'line', 3050
.annotate 'line', 3051
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3067_end6787
  if3067_else6786:
.annotate 'line', 3053
.annotate 'line', 3054
    unless_null _lex_param_1, fallback6794
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5056
  fallback6794:
    set fb_tmp_674, _lex_param_1
    repr_defined $I5014, fb_tmp_674
    unless $I5014 goto if3070_else6792 
    set $P5057, fb_tmp_674["longname"]
    set $P5059, $P5057
    goto if3070_end6793
  if3070_else6792:
    null $P5058
    set $P5059, $P5058
  if3070_end6793:
    unless_null $P5059, vivi_30716795
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5059, $P5060
  vivi_30716795:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 3055
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3067_end6787:
    set $P5063, $P5062
  if3064_end6781:
    set $P5064, $P5063
  if3061_end6775:
    set $P5065, $P5064
  if3058_end6769:
  if3053_end6759:
.annotate 'line', 3057
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_319_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3063
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3064
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_320_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3067
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_675 
    .local pmc fb_tmp_676 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3068
    unless_null _lex_param_1, fallback6798
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback6798:
    set fb_tmp_675, _lex_param_1
    repr_defined $I5001, fb_tmp_675
    unless $I5001 goto if3072_else6796 
    set $P5003, fb_tmp_675["args"]
    set $P5005, $P5003
    goto if3072_end6797
  if3072_else6796:
    null $P5004
    set $P5005, $P5004
  if3072_end6797:
    unless_null $P5005, vivi_30736799
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_30736799:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3069
    unless_null _lex_param_1, fallback6802
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback6802:
    set fb_tmp_676, _lex_param_1
    repr_defined $I5002, fb_tmp_676
    unless $I5002 goto if3074_else6800 
    set $P5009, fb_tmp_676["deflongname"]
    set $P5011, $P5009
    goto if3074_end6801
  if3074_else6800:
    null $P5010
    set $P5011, $P5010
  if3074_end6801:
    unless_null $P5011, vivi_30756803
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_30756803:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 3070
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_321_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3073
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_521_1383915013.33774' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_523_1383915013.33774' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    .local pmc fb_tmp_689 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 3076
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6806
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5004, $P5005
    set fb_tmp_677, $P5004
    repr_defined $I5001, fb_tmp_677
    unless $I5001 goto if3077_else6807 
    set $P5006, fb_tmp_677["$W"]
    set $P5008, $P5006
    goto if3077_end6808
  if3077_else6807:
    null $P5007
    set $P5008, $P5007
  if3077_end6808:
    unless_null $P5008, vivi_30786809
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_30786809:
    unless_null $P5008, vivi_30796810
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30796810:
    set $P5003, $P5008
  fallback6806:
    unless_null _lex_param_1, fallback6813
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5011
  fallback6813:
    set fb_tmp_678, _lex_param_1
    repr_defined $I5002, fb_tmp_678
    unless $I5002 goto if3080_else6811 
    set $P5012, fb_tmp_678["name"]
    set $P5014, $P5012
    goto if3080_end6812
  if3080_else6811:
    null $P5013
    set $P5014, $P5013
  if3080_end6812:
    unless_null $P5014, vivi_30816814
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_30816814:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3076_else6804 
    unless_null _lex_param_1, fallback6819
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5017
  fallback6819:
    set fb_tmp_679, _lex_param_1
    repr_defined $I5003, fb_tmp_679
    unless $I5003 goto if3083_else6817 
    set $P5018, fb_tmp_679["args"]
    set $P5020, $P5018
    goto if3083_end6818
  if3083_else6817:
    null $P5019
    set $P5020, $P5019
  if3083_end6818:
    unless_null $P5020, vivi_30846820
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5020, $P5021
  vivi_30846820:
    if $P5020 goto unless3082_end6816 
.annotate 'line', 3077
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30926833
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_521_1383915013.33774' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30916832
  catch_handler_30926833:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30916832
  skip_handler_30916832:
  unless3082_end6816:
    set $P5033, $P101
    if $P101 goto unless3093_end6835 
.annotate 'line', 3085
.annotate 'line', 3086
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    unless_null _lex_param_1, fallback6838
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5027
  fallback6838:
    set fb_tmp_682, _lex_param_1
    repr_defined $I5004, fb_tmp_682
    unless $I5004 goto if3094_else6836 
    set $P5028, fb_tmp_682["name"]
    set $P5030, $P5028
    goto if3094_end6837
  if3094_else6836:
    null $P5029
    set $P5030, $P5029
  if3094_end6837:
    unless_null $P5030, vivi_30956839
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5030, $P5031
  vivi_30956839:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3093_end6835:
    goto if3076_end6805
  if3076_else6804:
    .const 'Sub' $P5034 = 'cuid_523_1383915013.33774' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3076_end6805:
    set $P102, $P101
    unless_null _lex_param_1, fallback6868
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5036
  fallback6868:
    set fb_tmp_687, _lex_param_1
    repr_defined $I5005, fb_tmp_687
    unless $I5005 goto if3111_else6866 
    set $P5037, fb_tmp_687["args"]
    set $P5039, $P5037
    goto if3111_end6867
  if3111_else6866:
    null $P5038
    set $P5039, $P5038
  if3111_end6867:
    unless_null $P5039, vivi_31126869
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5039, $P5040
  vivi_31126869:
    unless $P5039 goto if3110_end6865 
.annotate 'line', 3106
.annotate 'line', 3107
    unless_null _lex_param_1, fallback6874
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5041
  fallback6874:
    set fb_tmp_689, _lex_param_1
    repr_defined $I5007, fb_tmp_689
    unless $I5007 goto if3114_else6872 
    set $P5042, fb_tmp_689["args"]
    set $P5044, $P5042
    goto if3114_end6873
  if3114_else6872:
    null $P5043
    set $P5044, $P5043
  if3114_end6873:
    unless_null $P5044, vivi_31156875
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5044, $P5045
  vivi_31156875:
    set fb_tmp_688, $P5044
    repr_defined $I5006, fb_tmp_688
    unless $I5006 goto if3113_else6870 
    set $P5046, fb_tmp_688[0]
    set $P5048, $P5046
    goto if3113_end6871
  if3113_else6870:
    null $P5047
    set $P5048, $P5047
  if3113_end6871:
    unless_null $P5048, vivi_31166876
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5048, $P5049
  vivi_31166876:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 3108
    $P5051 = $P102."unshift"($P101)
  if3110_end6865:
.annotate 'line', 3110
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_521_1383915013.33774") :anon :lex :outer("cuid_321_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3078
    .lex "$sym", $P101 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3079
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6821
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_680, $P5003
    repr_defined $I5001, fb_tmp_680
    unless $I5001 goto if3085_else6822 
    set $P5005, fb_tmp_680["$W"]
    set $P5007, $P5005
    goto if3085_end6823
  if3085_else6822:
    null $P5006
    set $P5007, $P5006
  if3085_end6823:
    unless_null $P5007, vivi_30866824
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_30866824:
    unless_null $P5007, vivi_30876825
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30876825:
    set $P5002, $P5007
  fallback6821:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6828
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  fallback6828:
    set fb_tmp_681, $P5011
    repr_defined $I5002, fb_tmp_681
    unless $I5002 goto if3088_else6826 
    set $P5013, fb_tmp_681["name"]
    set $P5015, $P5013
    goto if3088_end6827
  if3088_else6826:
    null $P5014
    set $P5015, $P5014
  if3088_end6827:
    unless_null $P5015, vivi_30896829
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_30896829:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3090_end6831 
.annotate 'line', 3080
.annotate 'line', 3081
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3090_end6831:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_523_1383915013.33774") :anon :lex :outer("cuid_321_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3089
    .const 'Sub' $P5027 = 'cuid_522_1383915013.33774' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6844
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  fallback6844:
    set fb_tmp_684, $P5003
    repr_defined $I5002, fb_tmp_684
    unless $I5002 goto if3097_else6842 
    set $P5005, fb_tmp_684["name"]
    set $P5007, $P5005
    goto if3097_end6843
  if3097_else6842:
    null $P5006
    set $P5007, $P5006
  if3097_end6843:
    unless_null $P5007, vivi_30986845
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_30986845:
    set fb_tmp_683, $P5007
    repr_defined $I5001, fb_tmp_683
    unless $I5001 goto if3096_else6840 
    set $P5009, fb_tmp_683["identifier"]
    set $P5011, $P5009
    goto if3096_end6841
  if3096_else6840:
    null $P5010
    set $P5011, $P5010
  if3096_end6841:
    unless_null $P5011, vivi_30996846
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_30996846:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6851
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  fallback6851:
    set fb_tmp_685, $P5013
    repr_defined $I5003, fb_tmp_685
    unless $I5003 goto if3101_else6849 
    set $P5015, fb_tmp_685["args"]
    set $P5017, $P5015
    goto if3101_end6850
  if3101_else6849:
    null $P5016
    set $P5017, $P5016
  if3101_end6850:
    unless_null $P5017, vivi_31026852
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_31026852:
    if $P5017 goto unless3100_end6848 
.annotate 'line', 3091
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_31086861
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_522_1383915013.33774' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_31076860
  catch_handler_31086861:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_31076860
  skip_handler_31076860:
  unless3100_end6848:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3109_end6863 
.annotate 'line', 3099
.annotate 'line', 3100
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3109_end6863:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_522_1383915013.33774") :anon :lex :outer("cuid_523_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3092
    .lex "$sym", $P101 
    .local pmc fb_tmp_686 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3093
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6853
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_686, $P5003
    repr_defined $I5001, fb_tmp_686
    unless $I5001 goto if3103_else6854 
    set $P5005, fb_tmp_686["$W"]
    set $P5007, $P5005
    goto if3103_end6855
  if3103_else6854:
    null $P5006
    set $P5007, $P5006
  if3103_end6855:
    unless_null $P5007, vivi_31046856
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_31046856:
    unless_null $P5007, vivi_31056857
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_31056857:
    set $P5002, $P5007
  fallback6853:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3106_end6859 
.annotate 'line', 3094
.annotate 'line', 3095
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3106_end6859:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_322_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3113
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6881
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback6881:
    set fb_tmp_690, _lex_param_1
    repr_defined $I5001, fb_tmp_690
    unless $I5001 goto if3118_else6879 
    set $P5004, fb_tmp_690["args"]
    set $P5006, $P5004
    goto if3118_end6880
  if3118_else6879:
    null $P5005
    set $P5006, $P5005
  if3118_end6880:
    unless_null $P5006, vivi_31196882
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_31196882:
    unless $P5006 goto if3117_else6877 
.annotate 'line', 3114
    unless_null _lex_param_1, fallback6887
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback6887:
    set fb_tmp_692, _lex_param_1
    repr_defined $I5003, fb_tmp_692
    unless $I5003 goto if3121_else6885 
    set $P5009, fb_tmp_692["args"]
    set $P5011, $P5009
    goto if3121_end6886
  if3121_else6885:
    null $P5010
    set $P5011, $P5010
  if3121_end6886:
    unless_null $P5011, vivi_31226888
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_31226888:
    set fb_tmp_691, $P5011
    repr_defined $I5002, fb_tmp_691
    unless $I5002 goto if3120_else6883 
    set $P5013, fb_tmp_691[0]
    set $P5015, $P5013
    goto if3120_end6884
  if3120_else6883:
    null $P5014
    set $P5015, $P5014
  if3120_end6884:
    unless_null $P5015, vivi_31236889
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_31236889:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3117_end6878
  if3117_else6877:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3117_end6878:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6892
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5021
  fallback6892:
    set fb_tmp_693, _lex_param_1
    repr_defined $I5004, fb_tmp_693
    unless $I5004 goto if3124_else6890 
    set $P5022, fb_tmp_693["op"]
    set $P5024, $P5022
    goto if3124_end6891
  if3124_else6890:
    null $P5023
    set $P5024, $P5023
  if3124_end6891:
    unless_null $P5024, vivi_31256893
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_31256893:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
.annotate 'line', 3116
    set $S5002, $P102
    split $P5027, "__", $S5002
    $P5028 = "&join"(" ", $P5027)
    set $P102, $P5028
.annotate 'line', 3117
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_323_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3120
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_694 
.annotate 'line', 3121
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    unless_null _lex_param_1, fallback6896
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback6896:
    set fb_tmp_694, _lex_param_1
    repr_defined $I5001, fb_tmp_694
    unless $I5001 goto if3126_else6894 
    set $P5003, fb_tmp_694["const"]
    set $P5005, $P5003
    goto if3126_end6895
  if3126_else6894:
    null $P5004
    set $P5005, $P5004
  if3126_end6895:
    unless_null $P5005, vivi_31276897
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_31276897:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_324_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_698 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6900
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5004
  fallback6900:
    set fb_tmp_695, _lex_param_1
    repr_defined $I5001, fb_tmp_695
    unless $I5001 goto if3128_else6898 
    set $P5005, fb_tmp_695["op"]
    set $P5007, $P5005
    goto if3128_end6899
  if3128_else6898:
    null $P5006
    set $P5007, $P5006
  if3128_end6899:
    unless_null $P5007, vivi_31296901
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_31296901:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6906
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5010
  fallback6906:
    set fb_tmp_696, _lex_param_1
    repr_defined $I5002, fb_tmp_696
    unless $I5002 goto if3131_else6904 
    set $P5011, fb_tmp_696["args"]
    set $P5013, $P5011
    goto if3131_end6905
  if3131_else6904:
    null $P5012
    set $P5013, $P5012
  if3131_end6905:
    unless_null $P5013, vivi_31326907
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_31326907:
    unless $P5013 goto if3130_else6902 
.annotate 'line', 3126
    unless_null _lex_param_1, fallback6912
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5015
  fallback6912:
    set fb_tmp_698, _lex_param_1
    repr_defined $I5004, fb_tmp_698
    unless $I5004 goto if3134_else6910 
    set $P5016, fb_tmp_698["args"]
    set $P5018, $P5016
    goto if3134_end6911
  if3134_else6910:
    null $P5017
    set $P5018, $P5017
  if3134_end6911:
    unless_null $P5018, vivi_31356913
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_31356913:
    set fb_tmp_697, $P5018
    repr_defined $I5003, fb_tmp_697
    unless $I5003 goto if3133_else6908 
    set $P5020, fb_tmp_697[0]
    set $P5022, $P5020
    goto if3133_end6909
  if3133_else6908:
    null $P5021
    set $P5022, $P5021
  if3133_end6909:
    unless_null $P5022, vivi_31366914
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5022, $P5023
  vivi_31366914:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3130_end6903
  if3130_else6902:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3130_end6903:
    set $P102, $P5027
.annotate 'line', 3127
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 3128
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_325_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_699 
.annotate 'line', 3132
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    unless_null _lex_param_1, fallback6917
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback6917:
    set fb_tmp_699, _lex_param_1
    repr_defined $I5001, fb_tmp_699
    unless $I5001 goto if3137_else6915 
    set $P5003, fb_tmp_699["const"]
    set $P5005, $P5003
    goto if3137_end6916
  if3137_else6915:
    null $P5004
    set $P5005, $P5004
  if3137_end6916:
    unless_null $P5005, vivi_31386918
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_31386918:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_326_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3135
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "$stmts", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_700 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 3136
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
    $P5004 = $P5003."unique"("dispatch_cap")
    set $P101, $P5004
.annotate 'line', 3137
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 3138
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3140
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5008 = $P5007."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3141
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5010 = $P5009."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5011 = $P5006."new"($P5008, $P5010, "bind" :named("op"))
.annotate 'line', 3143
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3145
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3147
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3149
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
.annotate 'line', 3151
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5017 = $P5016."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3152
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback6919
    nqp_get_sc_object $P5021, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5020, $P5021
    set fb_tmp_700, $P5020
    repr_defined $I5001, fb_tmp_700
    unless $I5001 goto if3139_else6920 
    set $P5022, fb_tmp_700["$W"]
    set $P5024, $P5022
    goto if3139_end6921
  if3139_else6920:
    null $P5023
    set $P5024, $P5023
  if3139_end6921:
    unless_null $P5024, vivi_31406922
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5024, $P5025
  vivi_31406922:
    unless_null $P5024, vivi_31416923
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_31416923:
    set $P5019, $P5024
  fallback6919:
    new $P5027, 'ResizablePMCArray'
    box $P5028, "NQPRoutine"
    push $P5027, $P5028
    $P5029 = $P5019."find_sym"($P5027)
    $P5030 = $P5018."new"($P5029 :named("value"))
    $P5031 = $P5015."new"($P5017, $P5030, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 3154
    nqp_get_sc_object $P5032, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5033 = $P5032."new"($P101 :named("name"), "local" :named("scope"))
    $P5034 = $P5014."new"($P5031, $P5033, "multicachefind" :named("op"))
.annotate 'line', 3156
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3158
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5037 = $P5036."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3159
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5039 = $P5038."new"($P101 :named("name"), "local" :named("scope"))
    $P5040 = $P5035."new"($P5037, $P5039, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5041 = $P5013."new"($P5034, $P5040, "ifnull" :named("op"))
.annotate 'line', 3162
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5043 = $P5042."new"($P101 :named("name"), "local" :named("scope"))
    $P5044 = $P5012."new"($P5041, $P5043, "invokewithcapture" :named("op"))
    $P5045 = $P5005."new"($P5011, $P5044)
    set $P102, $P5045
.annotate 'line', 3164
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5047 = $P5046."new"($P102, $P101, "locallifetime" :named("op"))
    $P5048 = _lex_param_1."!make"($P5047)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_327_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3167
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    unless_null _lex_param_1, fallback6926
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback6926:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if3142_else6924 
    set $P5002, fb_tmp_701["arglist"]
    set $P5004, $P5002
    goto if3142_end6925
  if3142_else6924:
    null $P5003
    set $P5004, $P5003
  if3142_end6925:
    unless_null $P5004, vivi_31436927
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_31436927:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_328_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3169
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_525_1383915013.33774' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_702 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    .local pmc fb_tmp_711 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 3170
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6932
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback6932:
    set fb_tmp_702, _lex_param_1
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if3145_else6930 
    set $P5007, fb_tmp_702["EXPR"]
    set $P5009, $P5007
    goto if3145_end6931
  if3145_else6930:
    null $P5008
    set $P5009, $P5008
  if3145_end6931:
    unless_null $P5009, vivi_31466933
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_31466933:
    unless $P5009 goto if3144_end6929 
    .const 'Sub' $P5011 = 'cuid_525_1383915013.33774' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3144_end6929:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3179
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3152_test6947:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3152_done6951 
  while3152_redo6949:
.annotate 'line', 3180
    set fb_tmp_704, $P101
    repr_defined $I5004, fb_tmp_704
    unless $I5004 goto if3155_else6956 
    set $I5005, $P102
    set $P5016, fb_tmp_704[$I5005]
    set $P5018, $P5016
    goto if3155_end6957
  if3155_else6956:
    null $P5017
    set $P5018, $P5017
  if3155_end6957:
    unless_null $P5018, vivi_31566958
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5018, $P5019
  vivi_31566958:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3154_end6955 
.annotate 'line', 3181
    set fb_tmp_705, $P101
    repr_defined $I5007, fb_tmp_705
    unless $I5007 goto if3157_else6959 
    set $I5008, $P102
    set $P5021, fb_tmp_705[$I5008]
    set $P5023, $P5021
    goto if3157_end6960
  if3157_else6959:
    null $P5022
    set $P5023, $P5022
  if3157_end6960:
    unless_null $P5023, vivi_31586961
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_31586961:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3154_end6955:
    unless $I5009 goto if3153_end6953 
    set $I5010, $P102
    set fb_tmp_707, $P101
    repr_defined $I5012, fb_tmp_707
    unless $I5012 goto if3160_else6964 
    set $I5013, $P102
    set $P5026, fb_tmp_707[$I5013]
    set $P5028, $P5026
    goto if3160_end6965
  if3160_else6964:
    null $P5027
    set $P5028, $P5027
  if3160_end6965:
    unless_null $P5028, vivi_31616966
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5028, $P5029
  vivi_31616966:
    set fb_tmp_706, $P5028
    repr_defined $I5011, fb_tmp_706
    unless $I5011 goto if3159_else6962 
    set $P5030, fb_tmp_706[0]
    set $P5032, $P5030
    goto if3159_end6963
  if3159_else6962:
    null $P5031
    set $P5032, $P5031
  if3159_end6963:
    unless_null $P5032, vivi_31626967
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5032, $P5033
  vivi_31626967:
    set $P101[$I5010], $P5032
.annotate 'line', 3183
    set fb_tmp_708, $P101
    repr_defined $I5014, fb_tmp_708
    unless $I5014 goto if3163_else6968 
    set $I5015, $P102
    set $P5034, fb_tmp_708[$I5015]
    set $P5036, $P5034
    goto if3163_end6969
  if3163_else6968:
    null $P5035
    set $P5036, $P5035
  if3163_end6969:
    unless_null $P5036, vivi_31646970
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5036, $P5037
  vivi_31646970:
    $P5036."flat"(1)
    set fb_tmp_709, $P101
    repr_defined $I5017, fb_tmp_709
    unless $I5017 goto if3167_else6975 
    set $I5018, $P102
    set $P5038, fb_tmp_709[$I5018]
    set $P5040, $P5038
    goto if3167_end6976
  if3167_else6975:
    null $P5039
    set $P5040, $P5039
  if3167_end6976:
    unless_null $P5040, vivi_31686977
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5040, $P5041
  vivi_31686977:
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3166_end6974 
.annotate 'line', 3185
    set fb_tmp_710, $P101
    repr_defined $I5020, fb_tmp_710
    unless $I5020 goto if3169_else6978 
    set $I5021, $P102
    set $P5043, fb_tmp_710[$I5021]
    set $P5045, $P5043
    goto if3169_end6979
  if3169_else6978:
    null $P5044
    set $P5045, $P5044
  if3169_end6979:
    unless_null $P5045, vivi_31706980
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  vivi_31706980:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3166_end6974:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3165_end6972 
.annotate 'line', 3184
    set fb_tmp_711, $P101
    repr_defined $I5023, fb_tmp_711
    unless $I5023 goto if3171_else6981 
    set $I5024, $P102
    set $P5048, fb_tmp_711[$I5024]
    set $P5050, $P5048
    goto if3171_end6982
  if3171_else6981:
    null $P5049
    set $P5050, $P5049
  if3171_end6982:
    unless_null $P5050, vivi_31726983
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5050, $P5051
  vivi_31726983:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3165_end6972:
  if3153_end6953:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3152_test6947 
  while3152_done6951:
.annotate 'line', 3189
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_525_1383915013.33774") :anon :lex :outer("cuid_328_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3171
    .const 'Sub' $P5021 = 'cuid_524_1383915013.33774' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_703 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3172
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6936
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5002, $P5003
  fallback6936:
    set fb_tmp_703, $P5002
    repr_defined $I5001, fb_tmp_703
    unless $I5001 goto if3147_else6934 
    set $P5004, fb_tmp_703["EXPR"]
    set $P5006, $P5004
    goto if3147_end6935
  if3147_else6934:
    null $P5005
    set $P5006, $P5005
  if3147_end6935:
    unless_null $P5006, vivi_31486937
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_31486937:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3151_end6943 
.annotate 'line', 3173
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3151_end6943:
    set $I5006, $I5004
    unless $I5004 goto if3150_end6941 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3150_end6941:
    unless $I5006 goto if3149_else6938 
.annotate 'line', 3174
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6944:
    unless $P5014, for_done6946
    shift $P5017, $P5014
  for_redo6945:
    .const 'Sub' $P5016 = 'cuid_524_1383915013.33774' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6944
  for_done6946:
    set $P5020, $P5012
    goto if3149_end6939
  if3149_else6938:
.annotate 'line', 3176
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3149_end6939:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_524_1383915013.33774") :anon :lex :outer("cuid_525_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3174
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_329_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3192
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_712 
    unless_null _lex_param_1, fallback6986
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback6986:
    set fb_tmp_712, _lex_param_1
    repr_defined $I5001, fb_tmp_712
    unless $I5001 goto if3173_else6984 
    set $P5002, fb_tmp_712["multi_declarator"]
    set $P5004, $P5002
    goto if3173_end6985
  if3173_else6984:
    null $P5003
    set $P5004, $P5003
  if3173_end6985:
    unless_null $P5004, vivi_31746987
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_31746987:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_330_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3194
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_713 
    unless_null _lex_param_1, fallback6990
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback6990:
    set fb_tmp_713, _lex_param_1
    repr_defined $I5001, fb_tmp_713
    unless $I5001 goto if3175_else6988 
    set $P5002, fb_tmp_713["value"]
    set $P5004, $P5002
    goto if3175_end6989
  if3175_else6988:
    null $P5003
    set $P5004, $P5003
  if3175_end6989:
    unless_null $P5004, vivi_31766991
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_31766991:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_331_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3196
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_715 
    .local pmc fb_tmp_716 
.annotate 'line', 3197
    unless_null _lex_param_1, fallback6996
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback6996:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5001, fb_tmp_714
    unless $I5001 goto if3178_else6994 
    set $P5002, fb_tmp_714["EXPR"]
    set $P5004, $P5002
    goto if3178_end6995
  if3178_else6994:
    null $P5003
    set $P5004, $P5003
  if3178_end6995:
    unless_null $P5004, vivi_31796997
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_31796997:
    unless $P5004 goto if3177_else6992 
.annotate 'line', 3198
    unless_null _lex_param_1, fallback7002
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback7002:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5003, fb_tmp_716
    unless $I5003 goto if3181_else7000 
    set $P5007, fb_tmp_716["EXPR"]
    set $P5009, $P5007
    goto if3181_end7001
  if3181_else7000:
    null $P5008
    set $P5009, $P5008
  if3181_end7001:
    unless_null $P5009, vivi_31827003
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_31827003:
    set fb_tmp_715, $P5009
    repr_defined $I5002, fb_tmp_715
    unless $I5002 goto if3180_else6998 
    set $P5011, fb_tmp_715[0]
    set $P5013, $P5011
    goto if3180_end6999
  if3180_else6998:
    null $P5012
    set $P5013, $P5012
  if3180_end6999:
    unless_null $P5013, vivi_31837004
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5013, $P5014
  vivi_31837004:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3177_end6993
  if3177_else6992:
.annotate 'line', 3199
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3177_end6993:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_332_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3202
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback7009
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7009:
    set fb_tmp_717, _lex_param_1
    repr_defined $I5001, fb_tmp_717
    unless $I5001 goto if3185_else7007 
    set $P5003, fb_tmp_717["EXPR"]
    set $P5005, $P5003
    goto if3185_end7008
  if3185_else7007:
    null $P5004
    set $P5005, $P5004
  if3185_end7008:
    unless_null $P5005, vivi_31867010
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_31867010:
    unless $P5005 goto if3184_else7005 
.annotate 'line', 3204
.annotate 'line', 3205
    unless_null _lex_param_1, fallback7015
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5007
  fallback7015:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5003, fb_tmp_719
    unless $I5003 goto if3188_else7013 
    set $P5008, fb_tmp_719["EXPR"]
    set $P5010, $P5008
    goto if3188_end7014
  if3188_else7013:
    null $P5009
    set $P5010, $P5009
  if3188_end7014:
    unless_null $P5010, vivi_31897016
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_31897016:
    set fb_tmp_718, $P5010
    repr_defined $I5002, fb_tmp_718
    unless $I5002 goto if3187_else7011 
    set $P5012, fb_tmp_718[0]
    set $P5014, $P5012
    goto if3187_end7012
  if3187_else7011:
    null $P5013
    set $P5014, $P5013
  if3187_end7012:
    unless_null $P5014, vivi_31907017
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5014, $P5015
  vivi_31907017:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3192_end7021 
.annotate 'line', 3206
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3192_end7021:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3191_end7019 
.annotate 'line', 3207
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3191_end7019:
    goto if3184_end7006
  if3184_else7005:
.annotate 'line', 3210
.annotate 'line', 3211
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3184_end7006:
.annotate 'line', 3213
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3214
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_333_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3217
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_720 
    unless_null _lex_param_1, fallback7024
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7024:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5001, fb_tmp_720
    unless $I5001 goto if3193_else7022 
    set $P5002, fb_tmp_720["quote_EXPR"]
    set $P5004, $P5002
    goto if3193_end7023
  if3193_else7022:
    null $P5003
    set $P5004, $P5003
  if3193_end7023:
    unless_null $P5004, vivi_31947025
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_31947025:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_334_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3218
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
    unless_null _lex_param_1, fallback7028
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7028:
    set fb_tmp_721, _lex_param_1
    repr_defined $I5001, fb_tmp_721
    unless $I5001 goto if3195_else7026 
    set $P5002, fb_tmp_721["quote_EXPR"]
    set $P5004, $P5002
    goto if3195_end7027
  if3195_else7026:
    null $P5003
    set $P5004, $P5003
  if3195_end7027:
    unless_null $P5004, vivi_31967029
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_31967029:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_335_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3220
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_526_1383915013.33774' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_727 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    .local pmc fb_tmp_730 
    unless_null _lex_param_1, fallback7040
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7040:
    set fb_tmp_725, _lex_param_1
    repr_defined $I5005, fb_tmp_725
    unless $I5005 goto if3201_else7038 
    set $P5002, fb_tmp_725["pblock"]
    set $P5004, $P5002
    goto if3201_end7039
  if3201_else7038:
    null $P5003
    set $P5004, $P5003
  if3201_end7039:
    unless_null $P5004, vivi_32027041
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32027041:
    set fb_tmp_724, $P5004
    repr_defined $I5004, fb_tmp_724
    unless $I5004 goto if3200_else7036 
    set $P5006, fb_tmp_724["blockoid"]
    set $P5008, $P5006
    goto if3200_end7037
  if3200_else7036:
    null $P5007
    set $P5008, $P5007
  if3200_end7037:
    unless_null $P5008, vivi_32037042
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_32037042:
    set fb_tmp_723, $P5008
    repr_defined $I5003, fb_tmp_723
    unless $I5003 goto if3199_else7034 
    set $P5010, fb_tmp_723["statementlist"]
    set $P5012, $P5010
    goto if3199_end7035
  if3199_else7034:
    null $P5011
    set $P5012, $P5011
  if3199_end7035:
    unless_null $P5012, vivi_32047043
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_32047043:
    set fb_tmp_722, $P5012
    repr_defined $I5002, fb_tmp_722
    unless $I5002 goto if3198_else7032 
    set $P5014, fb_tmp_722["statement"]
    set $P5016, $P5014
    goto if3198_end7033
  if3198_else7032:
    null $P5015
    set $P5016, $P5015
  if3198_end7033:
    unless_null $P5016, vivi_32057044
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_32057044:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3197_else7030 
    .const 'Sub' $P5018 = 'cuid_526_1383915013.33774' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3197_end7031
  if3197_else7030:
    unless_null _lex_param_1, fallback7057
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5020
  fallback7057:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5008, fb_tmp_729
    unless $I5008 goto if3211_else7055 
    set $P5021, fb_tmp_729["pblock"]
    set $P5023, $P5021
    goto if3211_end7056
  if3211_else7055:
    null $P5022
    set $P5023, $P5022
  if3211_end7056:
    unless_null $P5023, vivi_32127058
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_32127058:
    set fb_tmp_728, $P5023
    repr_defined $I5007, fb_tmp_728
    unless $I5007 goto if3210_else7053 
    set $P5025, fb_tmp_728["blockoid"]
    set $P5027, $P5025
    goto if3210_end7054
  if3210_else7053:
    null $P5026
    set $P5027, $P5026
  if3210_end7054:
    unless_null $P5027, vivi_32137059
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5027, $P5028
  vivi_32137059:
    set fb_tmp_727, $P5027
    repr_defined $I5006, fb_tmp_727
    unless $I5006 goto if3209_else7051 
    set $P5029, fb_tmp_727["you_are_here"]
    set $P5031, $P5029
    goto if3209_end7052
  if3209_else7051:
    null $P5030
    set $P5031, $P5030
  if3209_end7052:
    unless_null $P5031, vivi_32147060
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_32147060:
    unless $P5031 goto if3208_else7049 
.annotate 'line', 3226
.annotate 'line', 3227
    unless_null _lex_param_1, fallback7063
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5033
  fallback7063:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5009, fb_tmp_730
    unless $I5009 goto if3215_else7061 
    set $P5034, fb_tmp_730["pblock"]
    set $P5036, $P5034
    goto if3215_end7062
  if3215_else7061:
    null $P5035
    set $P5036, $P5035
  if3215_end7062:
    unless_null $P5036, vivi_32167064
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5036, $P5037
  vivi_32167064:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3208_end7050
  if3208_else7049:
.annotate 'line', 3229
.annotate 'line', 3230
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3208_end7050:
    set $P5043, $P5042
  if3197_end7031:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_526_1383915013.33774") :anon :lex :outer("cuid_335_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3221
    .lex "$past", $P101 
    .local pmc fb_tmp_726 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3222
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    find_lex $P5003, "$/"
    unless_null $P5003, fallback7047
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  fallback7047:
    set fb_tmp_726, $P5003
    repr_defined $I5001, fb_tmp_726
    unless $I5001 goto if3206_else7045 
    set $P5005, fb_tmp_726["pblock"]
    set $P5007, $P5005
    goto if3206_end7046
  if3206_else7045:
    null $P5006
    set $P5007, $P5006
  if3206_end7046:
    unless_null $P5007, vivi_32077048
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_32077048:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3224
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_336_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3234
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_731 
    unless_null _lex_param_1, fallback7067
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7067:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5001, fb_tmp_731
    unless $I5001 goto if3217_else7065 
    set $P5002, fb_tmp_731["statement"]
    set $P5004, $P5002
    goto if3217_end7066
  if3217_else7065:
    null $P5003
    set $P5004, $P5003
  if3217_end7066:
    unless_null $P5004, vivi_32187068
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32187068:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_337_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3236
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_732 
.annotate 'line', 3237
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
    unless_null _lex_param_1, fallback7071
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7071:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5001, fb_tmp_732
    unless $I5001 goto if3219_else7069 
    set $P5003, fb_tmp_732["EXPR"]
    set $P5005, $P5003
    goto if3219_end7070
  if3219_else7069:
    null $P5004
    set $P5005, $P5004
  if3219_end7070:
    unless_null $P5005, vivi_32207072
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32207072:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_338_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3240
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
.annotate 'line', 3241
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
    unless_null _lex_param_1, fallback7075
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7075:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3221_else7073 
    set $P5003, fb_tmp_733["EXPR"]
    set $P5005, $P5003
    goto if3221_end7074
  if3221_else7073:
    null $P5004
    set $P5005, $P5004
  if3221_end7074:
    unless_null $P5005, vivi_32227076
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32227076:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_339_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3244
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
.annotate 'line', 3245
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 84
    unless_null _lex_param_1, fallback7079
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7079:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3223_else7077 
    set $P5003, fb_tmp_734["quote_EXPR"]
    set $P5005, $P5003
    goto if3223_end7078
  if3223_else7077:
    null $P5004
    set $P5005, $P5004
  if3223_end7078:
    unless_null $P5005, vivi_32247080
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32247080:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_340_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3248
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_735 
.annotate 'line', 3249
    unless_null _lex_param_1, fallback7083
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7083:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5001, fb_tmp_735
    unless $I5001 goto if3225_else7081 
    set $P5002, fb_tmp_735["arglist"]
    set $P5004, $P5002
    goto if3225_end7082
  if3225_else7081:
    null $P5003
    set $P5004, $P5003
  if3225_end7082:
    unless_null $P5004, vivi_32267084
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32267084:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_341_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3252
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
    .local pmc fb_tmp_738 
.annotate 'line', 3253
    unless_null _lex_param_1, fallback7089
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7089:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5001, fb_tmp_736
    unless $I5001 goto if3228_else7087 
    set $P5002, fb_tmp_736["quote"]
    set $P5004, $P5002
    goto if3228_end7088
  if3228_else7087:
    null $P5003
    set $P5004, $P5003
  if3228_end7088:
    unless_null $P5004, vivi_32297090
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32297090:
    unless $P5004 goto if3227_else7085 
    unless_null _lex_param_1, fallback7093
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5006
  fallback7093:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5002, fb_tmp_737
    unless $I5002 goto if3230_else7091 
    set $P5007, fb_tmp_737["quote"]
    set $P5009, $P5007
    goto if3230_end7092
  if3230_else7091:
    null $P5008
    set $P5009, $P5008
  if3230_end7092:
    unless_null $P5009, vivi_32317094
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_32317094:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3227_end7086
  if3227_else7085:
    unless_null _lex_param_1, fallback7097
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5012
  fallback7097:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5003, fb_tmp_738
    unless $I5003 goto if3232_else7095 
    set $P5013, fb_tmp_738["number"]
    set $P5015, $P5013
    goto if3232_end7096
  if3232_else7095:
    null $P5014
    set $P5015, $P5014
  if3232_end7096:
    unless_null $P5015, vivi_32337098
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_32337098:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3227_end7086:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_342_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3256
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc fb_tmp_743 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback7103
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7103:
    set fb_tmp_739, _lex_param_1
    repr_defined $I5001, fb_tmp_739
    unless $I5001 goto if3235_else7101 
    set $P5003, fb_tmp_739["dec_number"]
    set $P5005, $P5003
    goto if3235_end7102
  if3235_else7101:
    null $P5004
    set $P5005, $P5004
  if3235_end7102:
    unless_null $P5005, vivi_32367104
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32367104:
    unless $P5005 goto if3234_else7099 
.annotate 'line', 3257
    unless_null _lex_param_1, fallback7107
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5007
  fallback7107:
    set fb_tmp_740, _lex_param_1
    repr_defined $I5002, fb_tmp_740
    unless $I5002 goto if3237_else7105 
    set $P5008, fb_tmp_740["dec_number"]
    set $P5010, $P5008
    goto if3237_end7106
  if3237_else7105:
    null $P5009
    set $P5010, $P5009
  if3237_end7106:
    unless_null $P5010, vivi_32387108
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_32387108:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3234_end7100
  if3234_else7099:
    unless_null _lex_param_1, fallback7111
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5013
  fallback7111:
    set fb_tmp_741, _lex_param_1
    repr_defined $I5003, fb_tmp_741
    unless $I5003 goto if3239_else7109 
    set $P5014, fb_tmp_741["integer"]
    set $P5016, $P5014
    goto if3239_end7110
  if3239_else7109:
    null $P5015
    set $P5016, $P5015
  if3239_end7110:
    unless_null $P5016, vivi_32407112
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5016, $P5017
  vivi_32407112:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3234_end7100:
    set $P101, $P5019
    unless_null _lex_param_1, fallback7117
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5020
  fallback7117:
    set fb_tmp_742, _lex_param_1
    repr_defined $I5005, fb_tmp_742
    unless $I5005 goto if3242_else7115 
    set $P5021, fb_tmp_742["sign"]
    set $P5023, $P5021
    goto if3242_end7116
  if3242_else7115:
    null $P5022
    set $P5023, $P5022
  if3242_end7116:
    unless_null $P5023, vivi_32437118
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5023, $P5024
  vivi_32437118:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3241_end7114 
.annotate 'line', 3258
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3241_end7114:
.annotate 'line', 3259
    unless_null _lex_param_1, fallback7123
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5026
  fallback7123:
    set fb_tmp_743, _lex_param_1
    repr_defined $I5006, fb_tmp_743
    unless $I5006 goto if3245_else7121 
    set $P5027, fb_tmp_743["dec_number"]
    set $P5029, $P5027
    goto if3245_end7122
  if3245_else7121:
    null $P5028
    set $P5029, $P5028
  if3245_end7122:
    unless_null $P5029, vivi_32467124
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5029, $P5030
  vivi_32467124:
    unless $P5029 goto if3244_else7119 
.annotate 'line', 3260
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 49
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3244_end7120
  if3244_else7119:
.annotate 'line', 3261
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3244_end7120:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_343_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3264
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_744 
    unless_null _lex_param_1, fallback7127
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7127:
    set fb_tmp_744, _lex_param_1
    repr_defined $I5001, fb_tmp_744
    unless $I5001 goto if3247_else7125 
    set $P5002, fb_tmp_744["quote_EXPR"]
    set $P5004, $P5002
    goto if3247_end7126
  if3247_else7125:
    null $P5003
    set $P5004, $P5003
  if3247_end7126:
    unless_null $P5004, vivi_32487128
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32487128:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_344_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3265
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_745 
    unless_null _lex_param_1, fallback7131
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7131:
    set fb_tmp_745, _lex_param_1
    repr_defined $I5001, fb_tmp_745
    unless $I5001 goto if3249_else7129 
    set $P5002, fb_tmp_745["quote_EXPR"]
    set $P5004, $P5002
    goto if3249_end7130
  if3249_else7129:
    null $P5003
    set $P5004, $P5003
  if3249_end7130:
    unless_null $P5004, vivi_32507132
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32507132:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_345_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3266
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_746 
    unless_null _lex_param_1, fallback7135
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7135:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5001, fb_tmp_746
    unless $I5001 goto if3251_else7133 
    set $P5002, fb_tmp_746["quote_EXPR"]
    set $P5004, $P5002
    goto if3251_end7134
  if3251_else7133:
    null $P5003
    set $P5004, $P5003
  if3251_end7134:
    unless_null $P5004, vivi_32527136
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32527136:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_346_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3267
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    unless_null _lex_param_1, fallback7139
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7139:
    set fb_tmp_747, _lex_param_1
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3253_else7137 
    set $P5002, fb_tmp_747["quote_EXPR"]
    set $P5004, $P5002
    goto if3253_end7138
  if3253_else7137:
    null $P5003
    set $P5004, $P5003
  if3253_end7138:
    unless_null $P5004, vivi_32547140
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32547140:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_347_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3268
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_748 
    unless_null _lex_param_1, fallback7143
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7143:
    set fb_tmp_748, _lex_param_1
    repr_defined $I5001, fb_tmp_748
    unless $I5001 goto if3255_else7141 
    set $P5002, fb_tmp_748["quote_EXPR"]
    set $P5004, $P5002
    goto if3255_end7142
  if3255_else7141:
    null $P5003
    set $P5004, $P5003
  if3255_end7142:
    unless_null $P5004, vivi_32567144
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32567144:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_348_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_749 
.annotate 'line', 3270
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 93
    unless_null _lex_param_1, fallback7147
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7147:
    set fb_tmp_749, _lex_param_1
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if3257_else7145 
    set $P5003, fb_tmp_749["quote_EXPR"]
    set $P5005, $P5003
    goto if3257_end7146
  if3257_else7145:
    null $P5004
    set $P5005, $P5004
  if3257_end7146:
    unless_null $P5005, vivi_32587148
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32587148:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_349_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3273
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
    .local pmc fb_tmp_754 
    .local pmc fb_tmp_755 
    .local pmc fb_tmp_756 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_757 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P103, $P5003
.annotate 'line', 3274
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback7149
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5005, $P5006
    set fb_tmp_750, $P5005
    repr_defined $I5001, fb_tmp_750
    unless $I5001 goto if3259_else7150 
    set $P5007, fb_tmp_750["$W"]
    set $P5009, $P5007
    goto if3259_end7151
  if3259_else7150:
    null $P5008
    set $P5009, $P5008
  if3259_end7151:
    unless_null $P5009, vivi_32607152
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5009, $P5010
  vivi_32607152:
    unless_null $P5009, vivi_32617153
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32617153:
    set $P5004, $P5009
  fallback7149:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3275
    set fb_tmp_751, $P101
    repr_defined $I5002, fb_tmp_751
    unless $I5002 goto if3262_else7154 
    set $P5013, fb_tmp_751[0]
    set $P5015, $P5013
    goto if3262_end7155
  if3262_else7154:
    null $P5014
    set $P5015, $P5014
  if3262_end7155:
    unless_null $P5015, vivi_32637156
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5015, $P5016
  vivi_32637156:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3276
    set fb_tmp_752, $P101
    repr_defined $I5003, fb_tmp_752
    unless $I5003 goto if3264_else7157 
    set $P5019, fb_tmp_752[0]
    set $P5021, $P5019
    goto if3264_end7158
  if3264_else7157:
    null $P5020
    set $P5021, $P5020
  if3264_end7158:
    unless_null $P5021, vivi_32657159
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_32657159:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3278
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3279
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3280
    set fb_tmp_753, $P101
    repr_defined $I5004, fb_tmp_753
    unless $I5004 goto if3266_else7160 
    set $P5029, fb_tmp_753[0]
    set $P5031, $P5029
    goto if3266_end7161
  if3266_else7160:
    null $P5030
    set $P5031, $P5030
  if3266_end7161:
    unless_null $P5031, vivi_32677162
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5031, $P5032
  vivi_32677162:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3281
    set fb_tmp_754, $P101
    repr_defined $I5005, fb_tmp_754
    unless $I5005 goto if3268_else7163 
    set $P5035, fb_tmp_754[0]
    set $P5037, $P5035
    goto if3268_end7164
  if3268_else7163:
    null $P5036
    set $P5037, $P5036
  if3268_end7164:
    unless_null $P5037, vivi_32697165
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_32697165:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3282
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3283
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3285
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback7168
    nqp_get_sc_object $P5043, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_50, $P5042
    set fb_tmp_756, pkg_viv_tmp_50
    repr_defined $I5007, fb_tmp_756
    unless $I5007 goto if3271_else7169 
    set $P5044, fb_tmp_756["%LANG"]
    set $P5046, $P5044
    goto if3271_end7170
  if3271_else7169:
    null $P5045
    set $P5046, $P5045
  if3271_end7170:
    unless_null $P5046, vivi_32727171
    new $P5047, 'Hash'
    set pkg_viv_tmp_50["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32727171:
    unless_null $P5046, vivi_32737172
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32737172:
    set $P5041, $P5046
  fallback7168:
    set fb_tmp_755, $P5041
    repr_defined $I5006, fb_tmp_755
    unless $I5006 goto if3270_else7166 
    set $P5049, fb_tmp_755["Regex-actions"]
    set $P5051, $P5049
    goto if3270_end7167
  if3270_else7166:
    null $P5050
    set $P5051, $P5050
  if3270_end7167:
    unless_null $P5051, vivi_32747173
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5051, $P5052
  vivi_32747173:
    unless_null _lex_param_1, fallback7176
    nqp_get_sc_object $P5053, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5053
  fallback7176:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5008, fb_tmp_757
    unless $I5008 goto if3275_else7174 
    set $P5054, fb_tmp_757["p6regex"]
    set $P5056, $P5054
    goto if3275_end7175
  if3275_else7174:
    null $P5055
    set $P5056, $P5055
  if3275_end7175:
    unless_null $P5056, vivi_32767177
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5056, $P5057
  vivi_32767177:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3286
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3288
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3293
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_350_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3296
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
    unless_null _lex_param_1, fallback7180
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7180:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3277_else7178 
    set $P5002, fb_tmp_758["variable"]
    set $P5004, $P5002
    goto if3277_end7179
  if3277_else7178:
    null $P5003
    set $P5004, $P5003
  if3277_end7179:
    unless_null $P5004, vivi_32787181
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32787181:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_351_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3297
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
.annotate 'line', 3298
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3299
    unless_null _lex_param_1, fallback7184
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7184:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3279_else7182 
    set $P5003, fb_tmp_759["block"]
    set $P5005, $P5003
    goto if3279_end7183
  if3279_else7182:
    null $P5004
    set $P5005, $P5004
  if3279_end7183:
    unless_null $P5005, vivi_32807185
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32807185:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_352_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_353_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3306
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_760 
    unless_null _lex_param_1, fallback7188
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7188:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5001, fb_tmp_760
    unless $I5001 goto if3281_else7186 
    set $P5002, fb_tmp_760["dotty"]
    set $P5004, $P5002
    goto if3281_end7187
  if3281_else7186:
    null $P5003
    set $P5004, $P5003
  if3281_end7187:
    unless_null $P5004, vivi_32827189
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_32827189:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<return>" :subid("cuid_354_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_761 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_763 
.annotate 'line', 3309
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    unless_null _lex_param_1, fallback7194
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7194:
    set fb_tmp_761, _lex_param_1
    repr_defined $I5001, fb_tmp_761
    unless $I5001 goto if3284_else7192 
    set $P5003, fb_tmp_761["EXPR"]
    set $P5005, $P5003
    goto if3284_end7193
  if3284_else7192:
    null $P5004
    set $P5005, $P5004
  if3284_end7193:
    unless_null $P5005, vivi_32857195
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32857195:
    unless $P5005 goto if3283_else7190 
.annotate 'line', 3310
    unless_null _lex_param_1, fallback7198
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5007
  fallback7198:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5002, fb_tmp_762
    unless $I5002 goto if3286_else7196 
    set $P5008, fb_tmp_762["EXPR"]
    set $P5010, $P5008
    goto if3286_end7197
  if3286_else7196:
    null $P5009
    set $P5010, $P5009
  if3286_end7197:
    unless_null $P5010, vivi_32877199
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5010, $P5011
  vivi_32877199:
    $P5012 = $P5010."ast"()
    set $P5026, $P5012
    goto if3283_end7191
  if3283_else7190:
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 64
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback7200
    nqp_get_sc_object $P5016, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5015, $P5016
    set fb_tmp_763, $P5015
    repr_defined $I5003, fb_tmp_763
    unless $I5003 goto if3288_else7201 
    set $P5017, fb_tmp_763["$W"]
    set $P5019, $P5017
    goto if3288_end7202
  if3288_else7201:
    null $P5018
    set $P5019, $P5018
  if3288_end7202:
    unless_null $P5019, vivi_32897203
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5019, $P5020
  vivi_32897203:
    unless_null $P5019, vivi_32907204
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_32907204:
    set $P5014, $P5019
  fallback7200:
    new $P5022, 'ResizablePMCArray'
    box $P5023, "NQPMu"
    push $P5022, $P5023
    $P5024 = $P5014."find_sym"($P5022)
    $P5025 = $P5013."new"($P5024 :named("value"))
    set $P5026, $P5025
  if3283_end7191:
    $P5027 = $P5001."new"($P5026, "call" :named("op"), "RETURN" :named("name"))
    $P5028 = _lex_param_1."!make"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_355_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3313
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3314
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3315
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_356_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3322
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_357_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3323
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_358_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3324
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_359_1383915013.33774") :anon :lex :outer("cuid_448_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3326
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3327
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_527_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3432
    .const 'Sub' $P5015 = 'cuid_360_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_361_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_362_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_363_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_364_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_365_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_366_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_367_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_368_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_369_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_370_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_371_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_372_1383915013.33774' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_373_1383915013.33774' 
    capture_lex $P5015 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_360_1383915013.33774' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_361_1383915013.33774' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_362_1383915013.33774' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_363_1383915013.33774' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_364_1383915013.33774' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_365_1383915013.33774' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_366_1383915013.33774' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_367_1383915013.33774' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_368_1383915013.33774' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_369_1383915013.33774' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_370_1383915013.33774' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_371_1383915013.33774' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_372_1383915013.33774' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_373_1383915013.33774' 
    capture_lex $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_360_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3434
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_764 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3435
    unless_null _lex_param_1, fallback7207
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7207:
    set fb_tmp_764, _lex_param_1
    repr_defined $I5001, fb_tmp_764
    unless $I5001 goto if3291_else7205 
    set $P5003, fb_tmp_764["statement"]
    set $P5005, $P5003
    goto if3291_end7206
  if3291_else7205:
    null $P5004
    set $P5005, $P5004
  if3291_end7206:
    unless_null $P5005, vivi_32927208
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32927208:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3436
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_361_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3440
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_765 
.annotate 'line', 3441
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    unless_null _lex_param_1, fallback7211
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7211:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5001, fb_tmp_765
    unless $I5001 goto if3293_else7209 
    set $P5003, fb_tmp_765["codeblock"]
    set $P5005, $P5003
    goto if3293_end7210
  if3293_else7209:
    null $P5004
    set $P5005, $P5004
  if3293_end7210:
    unless_null $P5005, vivi_32947212
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_32947212:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_362_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3445
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_766 
    .local pmc fb_tmp_767 
.annotate 'line', 3446
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
.annotate 'line', 3447
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3448
    unless_null _lex_param_1, fallback7215
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5005
  fallback7215:
    set fb_tmp_766, _lex_param_1
    repr_defined $I5001, fb_tmp_766
    unless $I5001 goto if3295_else7213 
    set $P5006, fb_tmp_766["var"]
    set $P5008, $P5006
    goto if3295_end7214
  if3295_else7213:
    null $P5007
    set $P5008, $P5007
  if3295_end7214:
    unless_null $P5008, vivi_32967216
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_32967216:
    $P5010 = $P5008."ast"()
.annotate 'line', 3449
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 43
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback7219
    nqp_get_sc_object $P5014, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5013, $P5014
    set fb_tmp_767, $P5013
    repr_defined $I5002, fb_tmp_767
    unless $I5002 goto if3298_else7220 
    set $P5015, fb_tmp_767["$SEQ"]
    set $P5017, $P5015
    goto if3298_end7221
  if3298_else7220:
    null $P5016
    set $P5017, $P5016
  if3298_end7221:
    unless_null $P5017, vivi_32997222
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_32997222:
    unless_null $P5017, vivi_33007223
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_33007223:
    set $P5012, $P5017
  fallback7219:
    unless $P5012 goto if3297_else7217 
    set $I5003, 1
    goto if3297_end7218
  if3297_else7217:
    set $I5003, 0
  if3297_end7218:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_363_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_768 
.annotate 'line', 3454
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
.annotate 'line', 3455
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3456
    unless_null _lex_param_1, fallback7226
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5005
  fallback7226:
    set fb_tmp_768, _lex_param_1
    repr_defined $I5001, fb_tmp_768
    unless $I5001 goto if3301_else7224 
    set $P5006, fb_tmp_768["codeblock"]
    set $P5008, $P5006
    goto if3301_end7225
  if3301_else7224:
    null $P5007
    set $P5008, $P5007
  if3301_end7225:
    unless_null $P5008, vivi_33027227
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_33027227:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_364_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3460
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
.annotate 'line', 3461
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    unless_null _lex_param_1, fallback7230
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5002
  fallback7230:
    set fb_tmp_769, _lex_param_1
    repr_defined $I5001, fb_tmp_769
    unless $I5001 goto if3303_else7228 
    set $P5003, fb_tmp_769["codeblock"]
    set $P5005, $P5003
    goto if3303_end7229
  if3303_else7228:
    null $P5004
    set $P5005, $P5004
  if3303_end7229:
    unless_null $P5005, vivi_33047231
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5005, $P5006
  vivi_33047231:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback7234
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5008
  fallback7234:
    set fb_tmp_770, _lex_param_1
    repr_defined $I5003, fb_tmp_770
    unless $I5003 goto if3305_else7232 
    set $P5009, fb_tmp_770["zw"]
    set $P5011, $P5009
    goto if3305_end7233
  if3305_else7232:
    null $P5010
    set $P5011, $P5010
  if3305_end7233:
    unless_null $P5011, vivi_33067235
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_33067235:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_365_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3466
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_771 
.annotate 'line', 3467
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
.annotate 'line', 3468
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3469
    unless_null _lex_param_1, fallback7238
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5005
  fallback7238:
    set fb_tmp_771, _lex_param_1
    repr_defined $I5001, fb_tmp_771
    unless $I5001 goto if3307_else7236 
    set $P5006, fb_tmp_771["var"]
    set $P5008, $P5006
    goto if3307_end7237
  if3307_else7236:
    null $P5007
    set $P5008, $P5007
  if3307_end7237:
    unless_null $P5008, vivi_33087239
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5008, $P5009
  vivi_33087239:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_366_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3473
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_772 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
.annotate 'line', 3474
    unless_null _lex_param_1, fallback7242
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback7242:
    set fb_tmp_772, _lex_param_1
    repr_defined $I5001, fb_tmp_772
    unless $I5001 goto if3309_else7240 
    set $P5004, fb_tmp_772["block"]
    set $P5006, $P5004
    goto if3309_end7241
  if3309_else7240:
    null $P5005
    set $P5006, $P5005
  if3309_end7241:
    unless_null $P5006, vivi_33107243
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_33107243:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3475
    $P101."blocktype"("immediate")
.annotate 'line', 3477
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 98
.annotate 'line', 3478
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3480
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3481
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 86
.annotate 'line', 3482
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 74
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3489
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_367_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3492
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_529_1383915013.33774' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_530_1383915013.33774' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_776 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    .local pmc fb_tmp_783 
    .local pmc fb_tmp_784 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    .local pmc fb_tmp_787 
    .local pmc fb_tmp_788 
    .local pmc fb_tmp_789 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback7246
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5003
  fallback7246:
    set fb_tmp_773, _lex_param_1
    repr_defined $I5001, fb_tmp_773
    unless $I5001 goto if3311_else7244 
    set $P5004, fb_tmp_773["longname"]
    set $P5006, $P5004
    goto if3311_end7245
  if3311_else7244:
    null $P5005
    set $P5006, $P5005
  if3311_end7245:
    unless_null $P5006, vivi_33127247
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5006, $P5007
  vivi_33127247:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback7252
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5009
  fallback7252:
    set fb_tmp_774, _lex_param_1
    repr_defined $I5002, fb_tmp_774
    unless $I5002 goto if3314_else7250 
    set $P5010, fb_tmp_774["assertion"]
    set $P5012, $P5010
    goto if3314_end7251
  if3314_else7250:
    null $P5011
    set $P5012, $P5011
  if3314_end7251:
    unless_null $P5012, vivi_33157253
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5012, $P5013
  vivi_33157253:
    unless $P5012 goto if3313_else7248 
.annotate 'line', 3495
.annotate 'line', 3496
    unless_null _lex_param_1, fallback7258
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5014
  fallback7258:
    set fb_tmp_776, _lex_param_1
    repr_defined $I5004, fb_tmp_776
    unless $I5004 goto if3317_else7256 
    set $P5015, fb_tmp_776["assertion"]
    set $P5017, $P5015
    goto if3317_end7257
  if3317_else7256:
    null $P5016
    set $P5017, $P5016
  if3317_end7257:
    unless_null $P5017, vivi_33187259
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5017, $P5018
  vivi_33187259:
    set fb_tmp_775, $P5017
    repr_defined $I5003, fb_tmp_775
    unless $I5003 goto if3316_else7254 
    set $P5019, fb_tmp_775[0]
    set $P5021, $P5019
    goto if3316_end7255
  if3316_else7254:
    null $P5020
    set $P5021, $P5020
  if3316_end7255:
    unless_null $P5021, vivi_33197260
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5021, $P5022
  vivi_33197260:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3497
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3313_end7249
  if3313_else7248:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3320_else7261 
    .const 'Sub' $P5026 = 'cuid_529_1383915013.33774' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3320_end7262
  if3320_else7261:
.annotate 'line', 3520
.annotate 'line', 3521
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
.annotate 'line', 3523
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 12
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 55
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback7281
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5034
  fallback7281:
    set fb_tmp_779, _lex_param_1
    repr_defined $I5006, fb_tmp_779
    unless $I5006 goto if3330_else7279 
    set $P5035, fb_tmp_779["arglist"]
    set $P5037, $P5035
    goto if3330_end7280
  if3330_else7279:
    null $P5036
    set $P5037, $P5036
  if3330_end7280:
    unless_null $P5037, vivi_33317282
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5037, $P5038
  vivi_33317282:
    unless $P5037 goto if3329_else7277 
.annotate 'line', 3524
.annotate 'line', 3525
    unless_null _lex_param_1, fallback7287
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5042
  fallback7287:
    set fb_tmp_781, _lex_param_1
    repr_defined $I5008, fb_tmp_781
    unless $I5008 goto if3333_else7285 
    set $P5043, fb_tmp_781["arglist"]
    set $P5045, $P5043
    goto if3333_end7286
  if3333_else7285:
    null $P5044
    set $P5045, $P5044
  if3333_end7286:
    unless_null $P5045, vivi_33347288
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5045, $P5046
  vivi_33347288:
    set fb_tmp_780, $P5045
    repr_defined $I5007, fb_tmp_780
    unless $I5007 goto if3332_else7283 
    set $P5047, fb_tmp_780[0]
    set $P5049, $P5047
    goto if3332_end7284
  if3332_else7283:
    null $P5048
    set $P5049, $P5048
  if3332_end7284:
    unless_null $P5049, vivi_33357289
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5049, $P5050
  vivi_33357289:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next7293:
    unless $P5041, for_done7295
    shift $P5054, $P5041
  for_redo7294:
    .const 'Sub' $P5053 = 'cuid_530_1383915013.33774' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next7293
  for_done7295:
    set $P5098, $P5039
    goto if3329_end7278
  if3329_else7277:
    unless_null _lex_param_1, fallback7300
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5055
  fallback7300:
    set fb_tmp_783, _lex_param_1
    repr_defined $I5009, fb_tmp_783
    unless $I5009 goto if3339_else7298 
    set $P5056, fb_tmp_783["nibbler"]
    set $P5058, $P5056
    goto if3339_end7299
  if3339_else7298:
    null $P5057
    set $P5058, $P5057
  if3339_end7299:
    unless_null $P5058, vivi_33407301
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5058, $P5059
  vivi_33407301:
    set $P5097, $P5058
    unless $P5058 goto if3338_end7297 
.annotate 'line', 3527
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3341_else7302 
.annotate 'line', 3529
    set fb_tmp_784, $P102
    repr_defined $I5011, fb_tmp_784
    unless $I5011 goto if3342_else7304 
    set $P5060, fb_tmp_784[0]
    set $P5062, $P5060
    goto if3342_end7305
  if3342_else7304:
    null $P5061
    set $P5062, $P5061
  if3342_end7305:
    unless_null $P5062, vivi_33437306
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5062, $P5063
  vivi_33437306:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback7311
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5066
  fallback7311:
    set fb_tmp_786, _lex_param_1
    repr_defined $I5013, fb_tmp_786
    unless $I5013 goto if3345_else7309 
    set $P5067, fb_tmp_786["nibbler"]
    set $P5069, $P5067
    goto if3345_end7310
  if3345_else7309:
    null $P5068
    set $P5069, $P5068
  if3345_end7310:
    unless_null $P5069, vivi_33467312
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5069, $P5070
  vivi_33467312:
    set fb_tmp_785, $P5069
    repr_defined $I5012, fb_tmp_785
    unless $I5012 goto if3344_else7307 
    set $P5071, fb_tmp_785[0]
    set $P5073, $P5071
    goto if3344_end7308
  if3344_else7307:
    null $P5072
    set $P5073, $P5072
  if3344_end7308:
    unless_null $P5073, vivi_33477313
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5073, $P5074
  vivi_33477313:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3341_end7303
  if3341_else7302:
.annotate 'line', 3530
    set fb_tmp_787, $P102
    repr_defined $I5014, fb_tmp_787
    unless $I5014 goto if3348_else7314 
    set $P5079, fb_tmp_787[0]
    set $P5081, $P5079
    goto if3348_end7315
  if3348_else7314:
    null $P5080
    set $P5081, $P5080
  if3348_end7315:
    unless_null $P5081, vivi_33497316
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5081, $P5082
  vivi_33497316:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback7321
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5084
  fallback7321:
    set fb_tmp_789, _lex_param_1
    repr_defined $I5016, fb_tmp_789
    unless $I5016 goto if3351_else7319 
    set $P5085, fb_tmp_789["nibbler"]
    set $P5087, $P5085
    goto if3351_end7320
  if3351_else7319:
    null $P5086
    set $P5087, $P5086
  if3351_end7320:
    unless_null $P5087, vivi_33527322
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5087, $P5088
  vivi_33527322:
    set fb_tmp_788, $P5087
    repr_defined $I5015, fb_tmp_788
    unless $I5015 goto if3350_else7317 
    set $P5089, fb_tmp_788[0]
    set $P5091, $P5089
    goto if3350_end7318
  if3350_else7317:
    null $P5090
    set $P5091, $P5090
  if3350_end7318:
    unless_null $P5091, vivi_33537323
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5091, $P5092
  vivi_33537323:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3341_end7303:
    set $P5097, $P5096
  if3338_end7297:
    set $P5098, $P5097
  if3329_end7278:
    set $P5099, $P5098
  if3320_end7262:
  if3313_end7249:
.annotate 'line', 3533
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_529_1383915013.33774") :anon :lex :outer("cuid_367_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3499
    .const 'Sub' $P5025 = 'cuid_528_1383915013.33774' 
    capture_lex $P5025 
    .lex "$fullrxname", $S101 
    .lex "$rxname", $S102 
    .lex "$loc", $I101 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc pkg_viv_tmp_51 
    set $S101, ""
    set $S102, ""
    set $I101, 0
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback7265
    nqp_get_sc_object $P5003, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_51, $P5002
    set fb_tmp_778, pkg_viv_tmp_51
    repr_defined $I5002, fb_tmp_778
    unless $I5002 goto if3322_else7266 
    set $P5004, fb_tmp_778["%RX"]
    set $P5006, $P5004
    goto if3322_end7267
  if3322_else7266:
    null $P5005
    set $P5006, $P5005
  if3322_end7267:
    unless_null $P5006, vivi_33237268
    new $P5007, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5007
    set $P5006, $P5007
  vivi_33237268:
    unless_null $P5006, vivi_33247269
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_33247269:
    set $P5001, $P5006
  fallback7265:
    set fb_tmp_777, $P5001
    repr_defined $I5001, fb_tmp_777
    unless $I5001 goto if3321_else7263 
    set $P5009, fb_tmp_777["name"]
    set $P5011, $P5009
    goto if3321_end7264
  if3321_else7263:
    null $P5010
    set $P5011, $P5010
  if3321_end7264:
    unless_null $P5011, vivi_33257270
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5011, $P5012
  vivi_33257270:
    set $S5001, $P5011
    set $S101, $S5001
    set $S102, ""
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    isge $I5004, $N5001, $N5002
    unless $I5004 goto if3326_else7271 
.annotate 'line', 3503
    add $I5005, $I101, 5
    substr $S5002, $S101, $I5005
    set $S102, $S5002
    length $I5007, $S102
    sub $I5006, $I5007, 1
    substr $S5003, $S102, 0, $I5006
    set $S102, $S5003
    goto if3326_end7272
  if3326_else7271:
    .const 'Sub' $P5013 = 'cuid_528_1383915013.33774' 
    capture_lex $P5013
    $P5014 = $P5013()
  if3326_end7272:
    set $N5003, $I101
    set $N5004, 0
    isge $I5008, $N5003, $N5004
    unless $I5008 goto if3328_else7275 
.annotate 'line', 3512
.annotate 'line', 3513
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    find_lex $P5016, "$/"
.annotate 'line', 3514
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217", 34
    find_lex $P5018, "$/"
    $P5019 = $P5017."new"($S102, "literal" :named("rxtype"), $P5018 :named("node"))
    $P5020 = $P5015."new"($P5019, "sym" :named("name"), "subcapture" :named("rxtype"), $P5016 :named("node"))
    store_lex "$qast", $P5020
    set $P5024, $P5020
    goto if3328_end7276
  if3328_else7275:
.annotate 'line', 3516
.annotate 'line', 3517
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."panic"("<sym> only valid in multiregexes")
    set $P5024, $P5023
  if3328_end7276:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_528_1383915013.33774") :anon :lex :outer("cuid_529_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3507
    .lex "$angleloc", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
    find_lex $S5001, "$fullrxname"
    index $I5001, $S5001, ":", 0
    store_lex "$loc", $I5001
    find_lex $S5002, "$fullrxname"
    find_lex $I5003, "$loc"
    index $I5002, $S5002, "<", $I5003
    box $P5002, $I5002
    set $P101, $P5002
    find_lex $I5005, "$loc"
    set $N5001, $I5005
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    box $P5004, $I5004
    set $P5003, $P5004
    if $I5004 goto unless3327_end7274 
    find_lex $S5004, "$fullrxname"
    find_lex $I5007, "$loc"
    add $I5006, $I5007, 1
    set $N5005, $P101
    find_lex $I5008, "$loc"
    set $N5006, $I5008
    sub $N5004, $N5005, $N5006
    set $N5007, 1
    sub $N5003, $N5004, $N5007
    set $I5009, $N5003
    substr $S5003, $S5004, $I5006, $I5009
    store_lex "$rxname", $S5003
    box $P5005, $S5003
    set $P5003, $P5005
  unless3327_end7274:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_530_1383915013.33774") :anon :lex :outer("cuid_367_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3525
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_782 
    find_lex $P5001, "$qast"
    set fb_tmp_782, $P5001
    repr_defined $I5001, fb_tmp_782
    unless $I5001 goto if3336_else7290 
    set $P5002, fb_tmp_782[0]
    set $P5004, $P5002
    goto if3336_end7291
  if3336_else7290:
    null $P5003
    set $P5004, $P5003
  if3336_end7291:
    unless_null $P5004, vivi_33377292
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_33377292:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_368_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3536
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_790 
    unless_null _lex_param_1, fallback7326
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7326:
    set fb_tmp_790, _lex_param_1
    repr_defined $I5001, fb_tmp_790
    unless $I5001 goto if3354_else7324 
    set $P5002, fb_tmp_790["arglist"]
    set $P5004, $P5002
    goto if3354_end7325
  if3354_else7324:
    null $P5003
    set $P5004, $P5003
  if3354_end7325:
    unless_null $P5004, vivi_33557327
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_33557327:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_369_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3538
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_791 
.annotate 'line', 3539
    unless_null _lex_param_1, fallback7330
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set _lex_param_1, $P5001
  fallback7330:
    set fb_tmp_791, _lex_param_1
    repr_defined $I5001, fb_tmp_791
    unless $I5001 goto if3356_else7328 
    set $P5002, fb_tmp_791["quote_EXPR"]
    set $P5004, $P5002
    goto if3356_end7329
  if3356_else7328:
    null $P5003
    set $P5004, $P5003
  if3356_end7329:
    unless_null $P5004, vivi_33577331
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5004, $P5005
  vivi_33577331:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_370_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3542
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_792 
    .local pmc fb_tmp_793 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_794 
    .local pmc fb_tmp_795 
    .local pmc pkg_viv_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P101, $P5001
.annotate 'line', 3543
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7332
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5003, $P5004
    set fb_tmp_792, $P5003
    repr_defined $I5001, fb_tmp_792
    unless $I5001 goto if3358_else7333 
    set $P5005, fb_tmp_792["$W"]
    set $P5007, $P5005
    goto if3358_end7334
  if3358_else7333:
    null $P5006
    set $P5007, $P5006
  if3358_end7334:
    unless_null $P5007, vivi_33597335
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5007, $P5008
  vivi_33597335:
    unless_null $P5007, vivi_33607336
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33607336:
    set $P5002, $P5007
  fallback7332:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback7339
    nqp_get_sc_object $P5013, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_52, $P5012
    set fb_tmp_793, pkg_viv_tmp_52
    repr_defined $I5003, fb_tmp_793
    unless $I5003 goto if3362_else7340 
    set $P5014, fb_tmp_793["%RX"]
    set $P5016, $P5014
    goto if3362_end7341
  if3362_else7340:
    null $P5015
    set $P5016, $P5015
  if3362_end7341:
    unless_null $P5016, vivi_33637342
    new $P5017, 'Hash'
    set pkg_viv_tmp_52["%RX"], $P5017
    set $P5016, $P5017
  vivi_33637342:
    unless_null $P5016, vivi_33647343
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33647343:
    set $P5011, $P5016
  fallback7339:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3361_end7338 
.annotate 'line', 3544
.annotate 'line', 3545
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback7346
    nqp_get_sc_object $P5021, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_53, $P5020
    set fb_tmp_795, pkg_viv_tmp_53
    repr_defined $I5005, fb_tmp_795
    unless $I5005 goto if3366_else7347 
    set $P5022, fb_tmp_795["%RX"]
    set $P5024, $P5022
    goto if3366_end7348
  if3366_else7347:
    null $P5023
    set $P5024, $P5023
  if3366_end7348:
    unless_null $P5024, vivi_33677349
    new $P5025, 'Hash'
    set pkg_viv_tmp_53["%RX"], $P5025
    set $P5024, $P5025
  vivi_33677349:
    unless_null $P5024, vivi_33687350
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33687350:
    set $P5019, $P5024
  fallback7346:
    set fb_tmp_794, $P5019
    repr_defined $I5004, fb_tmp_794
    unless $I5004 goto if3365_else7344 
    set $P5027, fb_tmp_794["code"]
    set $P5029, $P5027
    goto if3365_end7345
  if3365_else7344:
    null $P5028
    set $P5029, $P5028
  if3365_end7345:
    unless_null $P5029, vivi_33697351
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5029, $P5030
  vivi_33697351:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3361_end7338:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_371_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3550
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3551
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_372_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3554
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3555
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_373_1383915013.33774") :anon :lex :outer("cuid_527_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3558
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_531_1383915013.33774' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next7352:
    unless $P5004, for_done7354
    shift $P5006, $P5004
  for_redo7353:
    .const 'Sub' $P5005 = 'cuid_531_1383915013.33774' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next7352
  for_done7354:
.annotate 'line', 3563
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_531_1383915013.33774") :anon :lex :outer("cuid_373_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3560
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3561
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_532_1383915013.33774") :anon :lex :outer("cuid_375_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3570
    .const 'Sub' $P5002 = 'cuid_374_1383915013.33774' 
    capture_lex $P5002 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_374_1383915013.33774' 
    capture_lex $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_374_1383915013.33774") :anon :lex :outer("cuid_532_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3571
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_796 
    set fb_tmp_796, _lex_param_2
    repr_defined $I5002, fb_tmp_796
    unless $I5002 goto if3371_else7357 
    set $P5001, fb_tmp_796["optimize"]
    set $P5003, $P5001
    goto if3371_end7358
  if3371_else7357:
    null $P5002
    set $P5003, $P5002
  if3371_end7358:
    unless_null $P5003, vivi_33727359
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449", 26
    set $P5003, $P5004
  vivi_33727359:
    set $S5001, $P5003
    iseq $I5001, $S5001, "off"
    unless $I5001 goto if3370_else7355 
    set $P5008, _lex_param_1
    goto if3370_end7356
  if3370_else7355:
.annotate 'line', 3574
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    $P5006 = $P5005."new"()
    $P5007 = $P5006."optimize"(_lex_param_1, _lex_param_2 :flat :named)
    set $P5008, $P5007
  if3370_end7356:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_534_1383915013.33774") :load :init
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .const 'Sub' $P5001 = 'cuid_533_1383915013.33774' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_375_1383915013.33774" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    nqp_create_sc $P5001, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("gen/parrot/stage2/NQP.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1383914944.49584"
    push $P5004, "gen/parrot/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1383914936.15449"
    push $P5004, "gen/parrot/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "add_object"
    push $P5004, "B70A3A6C61478A243495E9368C50A2B67630EC67-1383914954.73819"
    push $P5004, "gen/parrot/stage2/NQPHLL.nqp"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_fail"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "term:sym<name>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "term:sym<return>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "A25436BBD8E0FDF14BC40920C4910ECF82BD6374-1383915002.61174"
    push $P5004, "gen/parrot/stage2/NQPP6QRegex.nqp"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termseq"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "SIGOK"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "sigmaybe"
    push $P5004, "sigmaybe:sym<normspace>"
    push $P5004, "sigmaybe:sym<sigwhite>"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<unsp>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "cclass_backslash"
    push $P5004, "cclass_backslash:sym<s>"
    push $P5004, "cclass_backslash:sym<b>"
    push $P5004, "cclass_backslash:sym<e>"
    push $P5004, "cclass_backslash:sym<f>"
    push $P5004, "cclass_backslash:sym<h>"
    push $P5004, "cclass_backslash:sym<r>"
    push $P5004, "cclass_backslash:sym<t>"
    push $P5004, "cclass_backslash:sym<v>"
    push $P5004, "cclass_backslash:sym<o>"
    push $P5004, "cclass_backslash:sym<x>"
    push $P5004, "cclass_backslash:sym<c>"
    push $P5004, "cclass_backslash:sym<any>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "optimize"
    push $P5004, "visit_block"
    push $P5004, "find_lex"
    push $P5004, "visit_op"
    push $P5004, "visit_handle"
    push $P5004, "visit_children"
    push $P5004, "@!block_stack"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "recursion_limit"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, "-'"
    push $P5004, "alt_nfa__1_1383915016.50082"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__3_1383915016.53756"
    push $P5004, "alt_nfa__2_1383915016.51994"
    push $P5004, "alt_nfa__5_1383915016.69393"
    push $P5004, "alt_nfa__4_1383915016.67077"
    push $P5004, ")]}"
    push $P5004, "alt_nfa__6_1383915016.94036"
    push $P5004, "alt_nfa__8_1383915016.97831"
    push $P5004, "])}"
    push $P5004, "alt_nfa__7_1383915016.95173"
    push $P5004, "{"
    push $P5004, "alt_nfa__9_1383915017.03203"
    push $P5004, "alt_nfa__10_1383915017.04281"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__11_1383915017.23114"
    push $P5004, "wu"
    push $P5004, "alt_nfa__12_1383915017.33759"
    push $P5004, "alt_nfa__13_1383915017.3388"
    push $P5004, "alt_nfa__14_1383915017.33976"
    push $P5004, "alt_nfa__15_1383915017.44668"
    push $P5004, "alt_nfa__16_1383915017.44713"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1383915017.58869"
    push $P5004, "alt_nfa__18_1383915017.60688"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1383915017.72211"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1383915017.8243"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1383915018.59793"
    push $P5004, "alt_nfa__22_1383915018.62546"
    push $P5004, "alt_nfa__23_1383915018.72619"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1383915018.79749"
    push $P5004, "invocant"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__25_1383915019.04752"
    push $P5004, "alt_nfa__26_1383915019.04811"
    push $P5004, "alt_nfa__27_1383915019.04878"
    push $P5004, "/!"
    push $P5004, "alt_nfa__28_1383915019.07081"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__29_1383915019.29482"
    push $P5004, "alt_nfa__30_1383915019.36219"
    push $P5004, "alt_nfa__31_1383915019.36349"
    push $P5004, "'\""
    push $P5004, "alt_nfa__32_1383915019.40773"
    push $P5004, "alt_nfa__33_1383915019.40826"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__34_1383915019.56669"
    push $P5004, "alt_nfa__35_1383915019.58431"
    push $P5004, "sign"
    push $P5004, "+-"
    push $P5004, "alt_nfa__36_1383915019.60304"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "("
    push $P5004, "$"
    push $P5004, "\\"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "alt_nfa__37_1383915020.03826"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__38_1383915021.53196"
    push $P5004, "alt_nfa__39_1383915021.56999"
    push $P5004, "alt_nfa__40_1383915021.58703"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__41_1383915021.72004"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "82C8134F4F1F98F3955D960634CCE916B8CF0355-1383914928.04611"
    push $P5004, "gen/parrot/stage2/nqpmo.nqp"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1383914955.75464"
    push $P5004, "alt_nfa__2_1383914955.81866"
    push $P5004, "alt_nfa__3_1383914955.96268"
    push $P5004, "alt_nfa__4_1383914955.96359"
    push $P5004, "alt_nfa__5_1383914956.001"
    push $P5004, "alt_nfa__6_1383914956.20842"
    push $P5004, "alt_nfa__7_1383914956.23174"
    push $P5004, "alt_nfa__8_1383914956.30432"
    push $P5004, "alt_nfa__9_1383914956.3785"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1383915002.88335"
    push $P5004, "alt_nfa__2_1383915002.9417"
    push $P5004, "alt_nfa__3_1383915003.18343"
    push $P5004, "alt_nfa__4_1383915003.21352"
    push $P5004, "alt_nfa__5_1383915003.23366"
    push $P5004, "alt_nfa__6_1383915003.46913"
    push $P5004, "alt_nfa__7_1383915003.58003"
    push $P5004, "alt_nfa__8_1383915003.77246"
    push $P5004, "alt_nfa__9_1383915003.77334"
    push $P5004, "alt_nfa__10_1383915003.7954"
    push $P5004, "alt_nfa__11_1383915003.94026"
    push $P5004, "alt_nfa__12_1383915003.95648"
    push $P5004, "alt_nfa__13_1383915004.18941"
    push $P5004, "alt_nfa__14_1383915004.31507"
    push $P5004, "alt_nfa__15_1383915004.33768"
    push $P5004, "alt_nfa__16_1383915004.5028"
    push $P5004, "alt_nfa__17_1383915004.63524"
    push $P5004, "alt_nfa__18_1383915004.6586"
    push $P5004, "alt_nfa__19_1383915004.70322"
    push $P5004, "alt_nfa__20_1383915004.72358"
    push $P5004, "alt_nfa__21_1383915004.78478"
    push $P5004, "alt_nfa__22_1383915004.80123"
    push $P5004, "alt_nfa__23_1383915004.97734"
    push $P5004, "alt_nfa__24_1383915004.97843"
    push $P5004, "alt_nfa__25_1383915004.97902"
    push $P5004, "alt_nfa__27_1383915005.06821"
    push $P5004, "alt_nfa__28_1383915005.06902"
    push $P5004, "alt_nfa__26_1383915004.99249"
    push $P5004, "NQP::Optimizer"
    push $P5004, "block_stack"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1383914940.28217"
    push $P5004, "gen/parrot/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "04C456E07E9573519FF155C734F8E36BD7F87C46-1383914969.41592"
    push $P5004, "gen/parrot/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Backend"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "Optimizer"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, ")}]"
    push $P5004, "&|~"
    push $P5004, ":"
    .const 'Sub' $P5005 = 'cuid_533_1383915013.33774' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3374_end7363 
    die "Repossession conflicts occurred during deserialization"
  if3374_end7363:
    .const 'Sub' $P5001 = "cuid_1_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 37
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 231
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 232
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_228_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 252
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 253
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_248_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 365
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 366
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_360_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 379
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 380
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_373_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 381
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_374_1383915013.33774" 
    nqp_get_sc_object $P5002, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 383
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_375_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "GLOBALish"
    push $P5002, "$?PACKAGE"
    push $P5002, "EXPORT"
    push $P5002, "ParseShared"
    push $P5002, "NQPCursorRole"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 0
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 1
    push $P5003, $P5006
    nqp_get_sc_object $P5007, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1383914944.49584", 32
    push $P5003, $P5007
    nqp_get_sc_object $P5008, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1383914944.49584", 35
    push $P5003, $P5008
    new $P5009, 'ResizableIntegerArray'
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5009)
    .const "LexInfo" $P5001 = "cuid_386_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 3
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_410_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 38
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_437_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 230
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 230
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_438_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 246
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_448_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 254
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 254
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_527_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 367
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 367
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_532_1383915013.33774"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 382
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B7816CBB8953FF1F31D1B76F55EB20F5E75D709F-1383915013.43315", 382
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5007 = $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_533_1383915013.33774") :anon :lex :outer("cuid_534_1383915013.33774")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_373_1383915013.33774" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_374_1383915013.33774" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_535_1383915013.33774") :load
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .const 'Sub' $P5001 = "cuid_375_1383915013.33774" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_536_1383915013.33774") :main
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_375_1383915013.33774" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end