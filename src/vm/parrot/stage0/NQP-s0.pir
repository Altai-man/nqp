.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1382959278.72036") :anon :lex
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5049 = 'cuid_376_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_377_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_378_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_379_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_380_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_381_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_382_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_383_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_384_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_385_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_386_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_410_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_436_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_437_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_447_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_526_1382959278.72036' 
    capture_lex $P5049 
    .const 'Sub' $P5049 = 'cuid_531_1382959278.72036' 
    capture_lex $P5049 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "ParseShared", $P105 
    .lex "NQPCursorRole", $P106 
    .lex "$nqpcomp", $P107 
    .lex "@clo", $P108 
    .lex "&MAIN", $P109 
    .lex "&hll-config", $P110 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P107, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P108, $P5003
    .const 'Sub' $P5004 = 'cuid_376_1382959278.72036' 
    capture_lex $P5004
    set $P109, $P5004
    .const 'Sub' $P5005 = 'cuid_377_1382959278.72036' 
    capture_lex $P5005
    set $P110, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
.annotate 'line', 5
    nqp_get_sc_object $P5010, "E2F59F9241F21BC72C1091E6F9B5588294F77486-1382959255.19431", 60
    $P5011 = $P5010."operations"()
    set $P104, $P5011
.annotate 'line', 7
    .const 'Sub' $P5013 = 'cuid_378_1382959278.72036' 
    capture_lex $P5013
    newclosure $P5012, $P5013
    $P104."add_hll_op"("nqp", "preinc", $P5012)
.annotate 'line', 22
    .const 'Sub' $P5015 = 'cuid_379_1382959278.72036' 
    capture_lex $P5015
    newclosure $P5014, $P5015
    $P104."add_hll_op"("nqp", "predec", $P5014)
.annotate 'line', 37
    .const 'Sub' $P5017 = 'cuid_380_1382959278.72036' 
    capture_lex $P5017
    newclosure $P5016, $P5017
    $P104."add_hll_op"("nqp", "postinc", $P5016)
.annotate 'line', 61
    .const 'Sub' $P5019 = 'cuid_381_1382959278.72036' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "postdec", $P5018)
.annotate 'line', 85
    .const 'Sub' $P5021 = 'cuid_382_1382959278.72036' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "numify", $P5020)
.annotate 'line', 89
    .const 'Sub' $P5023 = 'cuid_383_1382959278.72036' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "stringify", $P5022)
.annotate 'line', 93
    .const 'Sub' $P5025 = 'cuid_384_1382959278.72036' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "falsey", $P5024)
.annotate 'line', 110
    .const 'Sub' $P5027 = 'cuid_385_1382959278.72036' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "backendconfig", $P5026)
    .const 'Sub' $P5028 = 'cuid_386_1382959278.72036' 
    capture_lex $P5028
    $P5029 = $P5028()
    .const 'Sub' $P5030 = 'cuid_410_1382959278.72036' 
    capture_lex $P5030
    $P5031 = $P5030()
    .const 'Sub' $P5032 = 'cuid_436_1382959278.72036' 
    capture_lex $P5032
    $P5033 = $P5032()
    .const 'Sub' $P5034 = 'cuid_437_1382959278.72036' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_447_1382959278.72036' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_526_1382959278.72036' 
    capture_lex $P5038
    $P5039 = $P5038()
    .const 'Sub' $P5040 = 'cuid_531_1382959278.72036' 
    capture_lex $P5040
    $P5041 = $P5040()
.annotate 'line', 3578
    nqp_get_sc_object $P5042, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 382
    $P5043 = $P5042."new"()
    set $P107, $P5043
.annotate 'line', 3579
    $P107."language"("nqp")
.annotate 'line', 3580
    nqp_get_sc_object $P5044, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P107."parsegrammar"($P5044)
.annotate 'line', 3581
    nqp_get_sc_object $P5045, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 254
    $P107."parseactions"($P5045)
.annotate 'line', 3582
    $P5046 = $P107."config"()
    "&hll-config"($P5046)
.annotate 'line', 3584
    $P107."addstage"("optimize", "ast" :named("after"))
.annotate 'line', 3587
    $P5047 = $P107."commandline_options"()
    set $P108, $P5047
.annotate 'line', 3588
    $P108."push"("parsetrace")
.annotate 'line', 3589
    $P108."push"("setting=s")
.annotate 'line', 3590
    $P108."push"("setting-path=s")
.annotate 'line', 3591
    $P108."push"("module-path=s")
.annotate 'line', 3592
    $P108."push"("no-regex-lib")
.annotate 'line', 3593
    $P108."push"("stable-sc")
.annotate 'line', 3594
    $P108."push"("optimize=s")
.annotate 'line', 3595
    $P108."push"("vmlibs=s")
.annotate 'line', 3596
    $P108."push"("dynext=s")
    unless _lex_param_0 goto if3362_end7340 
    $P5048 = "&MAIN"(_lex_param_0 :flat)
  if3362_end7340:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_376_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3599
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3601
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3608
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_377_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3612
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.10-155-g0d34a3e"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-10-28T11:21:18Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 7
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set fb_tmp_1, _lex_param_1
    repr_defined $I5001, fb_tmp_1
    unless $I5001 goto if12_else14 
    set $P5002, fb_tmp_1[0]
    set $P5004, $P5002
    goto if12_end15
  if12_else14:
    null $P5003
    set $P5004, $P5003
  if12_end15:
    unless_null $P5004, vivi_1316
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_1316:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless14_end18 
.annotate 'line', 9
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless14_end18:
.annotate 'line', 12
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 15
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 18
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 22
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set fb_tmp_2, _lex_param_1
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if15_else19 
    set $P5002, fb_tmp_2[0]
    set $P5004, $P5002
    goto if15_end20
  if15_else19:
    null $P5003
    set $P5004, $P5003
  if15_end20:
    unless_null $P5004, vivi_1621
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_1621:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless17_end23 
.annotate 'line', 24
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless17_end23:
.annotate 'line', 27
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 30
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 33
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 37
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set fb_tmp_3, _lex_param_1
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if18_else24 
    set $P5003, fb_tmp_3[0]
    set $P5005, $P5003
    goto if18_end25
  if18_else24:
    null $P5004
    set $P5005, $P5004
  if18_end25:
    unless_null $P5005, vivi_1926
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_1926:
    set $P101, $P5005
.annotate 'line', 39
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless20_end28 
.annotate 'line', 40
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless20_end28:
.annotate 'line', 43
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 103
.annotate 'line', 45
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 47
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 50
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 53
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 55
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 56
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set fb_tmp_4, _lex_param_1
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if21_else29 
    set $P5003, fb_tmp_4[0]
    set $P5005, $P5003
    goto if21_end30
  if21_else29:
    null $P5004
    set $P5005, $P5004
  if21_end30:
    unless_null $P5005, vivi_2231
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_2231:
    set $P101, $P5005
.annotate 'line', 63
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless23_end33 
.annotate 'line', 64
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless23_end33:
.annotate 'line', 67
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 103
.annotate 'line', 69
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 71
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 74
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 77
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 79
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 80
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 85
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_5 
.annotate 'line', 86
    set fb_tmp_5, _lex_param_1
    repr_defined $I5001, fb_tmp_5
    unless $I5001 goto if24_else34 
    set $P5001, fb_tmp_5[0]
    set $P5003, $P5001
    goto if24_end35
  if24_else34:
    null $P5002
    set $P5003, $P5002
  if24_end35:
    unless_null $P5003, vivi_2536
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  vivi_2536:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 89
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_6 
.annotate 'line', 90
    set fb_tmp_6, _lex_param_1
    repr_defined $I5001, fb_tmp_6
    unless $I5001 goto if26_else37 
    set $P5001, fb_tmp_6[0]
    set $P5003, $P5001
    goto if26_end38
  if26_else37:
    null $P5002
    set $P5003, $P5002
  if26_end38:
    unless_null $P5003, vivi_2739
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  vivi_2739:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 93
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 94
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback40
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5005, $P5006
    set fb_tmp_7, $P5005
    repr_defined $I5001, fb_tmp_7
    unless $I5001 goto if28_else41 
    set $P5007, fb_tmp_7["$REGALLOC"]
    set $P5009, $P5007
    goto if28_end42
  if28_else41:
    null $P5008
    set $P5009, $P5008
  if28_end42:
    unless_null $P5009, vivi_2943
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_2943:
    unless_null $P5009, vivi_3044
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_3044:
    set $P5004, $P5009
  fallback40:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 95
    nqp_get_sc_object $P5013, "E2F59F9241F21BC72C1091E6F9B5588294F77486-1382959255.19431", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 96
    set fb_tmp_8, _lex_param_1
    repr_defined $I5002, fb_tmp_8
    unless $I5002 goto if31_else45 
    set $P5015, fb_tmp_8[0]
    set $P5017, $P5015
    goto if31_end46
  if31_else45:
    null $P5016
    set $P5017, $P5016
  if31_end46:
    unless_null $P5017, vivi_3247
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_3247:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 97
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if33_else48 
.annotate 'line', 98
    $P102."push"($P103)
.annotate 'line', 99
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if33_end49
  if33_else48:
.annotate 'line', 101
.annotate 'line', 102
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 103
    $P102."push"($P103)
.annotate 'line', 104
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if33_end49:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 110
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 111
.annotate 'line', 112
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
.annotate 'line', 113
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5003 = $P5002."new"("list" :named("op"))
.annotate 'line', 114
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
.annotate 'line', 115
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5007 = $P5006."new"("IGLOBALS_CONFIG_HASH" :named("pirconst"))
    $P5008 = $P5001."new"($P5005, $P5007, "positional" :named("scope"), $P5003 :named("fallback"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 124
    .const 'Sub' $P5033 = 'cuid_387_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_1_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_2_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_3_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_4_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_5_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_6_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_7_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_8_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_9_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_10_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_11_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_17_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_18_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_19_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_20_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_21_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_22_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_23_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_24_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_25_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_26_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_27_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_28_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_29_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_30_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_31_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_32_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_33_1382959278.72036' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_34_1382959278.72036' 
    capture_lex $P5033 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "$loader", $P103 
    .lex "&compilee_list", $P104 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_387_1382959278.72036' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_1_1382959278.72036' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_2_1382959278.72036' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_3_1382959278.72036' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_4_1382959278.72036' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_5_1382959278.72036' 
    capture_lex $P5007
    get_hll_global $P5008, "ModuleLoader"
    set $P103, $P5008
    .const 'Sub' $P5009 = 'cuid_6_1382959278.72036' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_7_1382959278.72036' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_8_1382959278.72036' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_9_1382959278.72036' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_10_1382959278.72036' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_11_1382959278.72036' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_17_1382959278.72036' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_18_1382959278.72036' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_19_1382959278.72036' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_20_1382959278.72036' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_21_1382959278.72036' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_22_1382959278.72036' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_23_1382959278.72036' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_24_1382959278.72036' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_25_1382959278.72036' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_26_1382959278.72036' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_27_1382959278.72036' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_28_1382959278.72036' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_29_1382959278.72036' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_30_1382959278.72036' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_31_1382959278.72036' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_32_1382959278.72036' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_33_1382959278.72036' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_34_1382959278.72036' 
    capture_lex $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "compilee_list" :subid("cuid_387_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 643
    .param pmc _lex_param_0 :optional 
    .param int haz_param_1 :opt_flag 
    .lex "@orig", _lex_param_0 
    if haz_param_1, default52
    new $P5003, 'ResizablePMCArray'
    set _lex_param_0, $P5003
  default52:
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if34_else50 
    set $P5002, _lex_param_0
    goto if34_end51
  if34_else50:
    new $P5001, 'ResizablePMCArray'
    set $P5002, $P5001
  if34_end51:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 149
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_388_1382959278.72036' 
    capture_lex $P5039 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_9 
    .local pmc fb_tmp_10 
    .local pmc fb_tmp_11 
    .local pmc pkg_viv_tmp_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", 7, $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", 8, $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", 9, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", 10, $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", 11, $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", 12, $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback59
    nqp_get_sc_object $P5021, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_1, $P5020
    set fb_tmp_11, pkg_viv_tmp_1
    repr_defined $I5004, fb_tmp_11
    unless $I5004 goto if38_else60 
    set $P5022, fb_tmp_11["%COMPILING"]
    set $P5024, $P5022
    goto if38_end61
  if38_else60:
    null $P5023
    set $P5024, $P5023
  if38_end61:
    unless_null $P5024, vivi_3962
    new $P5025, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5025
    set $P5024, $P5025
  vivi_3962:
    unless_null $P5024, vivi_4063
    die "Contextual %*COMPILING not found"
    box $P5026, "Contextual %*COMPILING not found"
    set $P5024, $P5026
  vivi_4063:
    set $P5019, $P5024
  fallback59:
    set fb_tmp_10, $P5019
    repr_defined $I5003, fb_tmp_10
    unless $I5003 goto if37_else57 
    set $P5027, fb_tmp_10["%?OPTIONS"]
    set $P5029, $P5027
    goto if37_end58
  if37_else57:
    null $P5028
    set $P5029, $P5028
  if37_end58:
    unless_null $P5029, vivi_4164
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5029, $P5030
  vivi_4164:
    set fb_tmp_9, $P5029
    repr_defined $I5002, fb_tmp_9
    unless $I5002 goto if36_else55 
    set $P5031, fb_tmp_9["dynext"]
    set $P5033, $P5031
    goto if36_end56
  if36_else55:
    null $P5032
    set $P5033, $P5032
  if36_end56:
    unless_null $P5033, vivi_4265
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5033, $P5034
  vivi_4265:
    defined $I5001, $P5033
    box $P5038, $I5001
    set $P5037, $P5038
    unless $I5001 goto if35_end54 
    .const 'Sub' $P5035 = 'cuid_388_1382959278.72036' 
    capture_lex $P5035
    $P5036 = $P5035()
    set $P5037, $P5036
  if35_end54:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1382959278.72036") :anon :lex :outer("cuid_1_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 157
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_12 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_15 
    .local pmc fb_tmp_16 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback70
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_14, pkg_viv_tmp_2
    repr_defined $I5003, fb_tmp_14
    unless $I5003 goto if45_else71 
    set $P5006, fb_tmp_14["%COMPILING"]
    set $P5008, $P5006
    goto if45_end72
  if45_else71:
    null $P5007
    set $P5008, $P5007
  if45_end72:
    unless_null $P5008, vivi_4673
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_4673:
    unless_null $P5008, vivi_4774
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_4774:
    set $P5003, $P5008
  fallback70:
    set fb_tmp_13, $P5003
    repr_defined $I5002, fb_tmp_13
    unless $I5002 goto if44_else68 
    set $P5011, fb_tmp_13["%?OPTIONS"]
    set $P5013, $P5011
    goto if44_end69
  if44_else68:
    null $P5012
    set $P5013, $P5012
  if44_end69:
    unless_null $P5013, vivi_4875
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_4875:
    set fb_tmp_12, $P5013
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if43_else66 
    set $P5015, fb_tmp_12["dynext"]
    set $P5017, $P5015
    goto if43_end67
  if43_else66:
    null $P5016
    set $P5017, $P5016
  if43_end67:
    unless_null $P5017, vivi_4976
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_4976:
    set $P101, $P5017
    getinterp $P5019
    set fb_tmp_16, $P5019
    repr_defined $I5005, fb_tmp_16
    unless $I5005 goto if51_else79 
    set $P5020, fb_tmp_16[.IGLOBALS_LIB_PATHS]
    set $P5022, $P5020
    goto if51_end80
  if51_else79:
    null $P5021
    set $P5022, $P5021
  if51_end80:
    unless_null $P5022, vivi_5281
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_5281:
    set fb_tmp_15, $P5022
    repr_defined $I5004, fb_tmp_15
    unless $I5004 goto if50_else77 
    set $P5024, fb_tmp_15[.PARROT_LIB_PATH_DYNEXT]
    set $P5026, $P5024
    goto if50_end78
  if50_else77:
    null $P5025
    set $P5026, $P5025
  if50_end78:
    unless_null $P5026, vivi_5382
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_5382:
    set $P102, $P5026
.annotate 'line', 161
    $P5028 = $P102."push"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 166
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_17 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 168
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 108
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS", 7
    set $N5001, $P5008
    unless $N5001 goto if54_end84 
.annotate 'line', 169
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS", 7
    set fb_tmp_17, $P5011
    repr_defined $I5001, fb_tmp_17
    unless $I5001 goto if55_else85 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS", 7
    set $N5002, $P5015
    set $I5003, $N5002
    sub $I5002, $I5003, 1
    set $P5012, fb_tmp_17[$I5002]
    set $P5017, $P5012
    goto if55_end86
  if55_else85:
    null $P5016
    set $P5017, $P5016
  if55_end86:
    unless_null $P5017, vivi_5687
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_5687:
    set $P101["outer"], $P5017
  if54_end84:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS", 7
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS", 7
    set $N5003, $P5024
    set $I5004, $N5003
    set $P5021[$I5004], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 177
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 178
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 7
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 182
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_18 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 7
    set fb_tmp_18, $P5003
    repr_defined $I5001, fb_tmp_18
    unless $I5001 goto if57_else88 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS", 7
    set $N5001, $P5007
    set $I5003, $N5001
    sub $I5002, $I5003, 1
    set $P5004, fb_tmp_18[$I5002]
    set $P5009, $P5004
    goto if57_end89
  if57_else88:
    null $P5008
    set $P5009, $P5008
  if57_end89:
    unless_null $P5009, vivi_5890
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_5890:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 187
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS", 7
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 189
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 199
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_389_1382959278.72036' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_91
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if59_end94 
    .const 'Sub' $P5001 = 'cuid_389_1382959278.72036' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if59_end94:
    goto lexotic_92
  lexotic_91:
    .get_results ($P5003)
  lexotic_92:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1382959278.72036") :anon :lex :outer("cuid_6_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 201
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_21 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback97
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_3, $P5004
    set fb_tmp_20, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_20
    unless $I5002 goto if61_else98 
    set $P5006, fb_tmp_20["%COMPILING"]
    set $P5008, $P5006
    goto if61_end99
  if61_else98:
    null $P5007
    set $P5008, $P5007
  if61_end99:
    unless_null $P5008, vivi_62100
    new $P5009, 'Hash'
    set pkg_viv_tmp_3["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_62100:
    unless_null $P5008, vivi_63101
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_63101:
    set $P5003, $P5008
  fallback97:
    set fb_tmp_19, $P5003
    repr_defined $I5001, fb_tmp_19
    unless $I5001 goto if60_else95 
    set $P5011, fb_tmp_19["%?OPTIONS"]
    set $P5013, $P5011
    goto if60_end96
  if60_else95:
    null $P5012
    set $P5013, $P5012
  if60_end96:
    unless_null $P5013, vivi_64102
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_64102:
.annotate 'line', 206
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 210
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 212
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback103
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set fb_tmp_21, $P5021
    repr_defined $I5003, fb_tmp_21
    unless $I5003 goto if65_else104 
    set $P5023, fb_tmp_21["$UNIT"]
    set $P5025, $P5023
    goto if65_end105
  if65_else104:
    null $P5024
    set $P5025, $P5024
  if65_end105:
    unless_null $P5025, vivi_66106
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_66106:
    unless_null $P5025, vivi_67107
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_67107:
    set $P5020, $P5025
  fallback103:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 213
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 215
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 217
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 219
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 221
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if68_else108 
.annotate 'line', 222
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 223
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 225
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
.annotate 'line', 226
    nqp_get_sc_object $P5047, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 227
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 228
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5052 = $P5051."new"("ModuleLoader.moarvm" :named("value"))
    $P5053 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"), $P5052 :named("moar"))
    $P5054 = $P5045."new"($P5053, "loadbytecode" :named("op"))
    $P5055 = $P5044."new"($P5054, $P102)
    $P5056 = $P5042."add_load_dependency_task"($P5055 :named("deserialize_past"))
    goto if68_end109
  if68_else108:
.annotate 'line', 233
.annotate 'line', 234
    find_lex $P5058, "self"
    nqp_decontainerize $P5057, $P5058
    $P5059 = $P5057."add_fixup_task"($P102 :named("fixup_past"))
  if68_end109:
    getattribute $P5060, $P101, 'lex_pad'
    $P5061 = "RETURN"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 243
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_110
    .lex "RETURN", $P102
.annotate 'line', 245
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 248
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if69_end113 
.annotate 'line', 249
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 250
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 252
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
.annotate 'line', 253
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 254
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 255
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5015 = $P5014."new"("ModuleLoader.moarvm" :named("value"))
    $P5016 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"), $P5015 :named("moar"))
    $P5017 = $P5008."new"($P5016, "loadbytecode" :named("op"))
.annotate 'line', 257
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 259
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 261
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5021 = $P5020."new"("ModuleLoader" :named("value"))
    $P5022 = $P5019."new"($P5021, "getcurhllsym" :named("op"))
.annotate 'line', 263
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5024 = $P5023."new"(_lex_param_1 :named("value"))
    $P5025 = $P5018."new"($P5022, $P5024, "callmethod" :named("op"), "load_module" :named("name"))
    $P5026 = $P5007."new"($P5017, $P5025)
    $P5027 = $P5006."add_load_dependency_task"($P5026 :named("deserialize_past"))
  if69_end113:
    getattribute $P5028, $P101, 'lex_pad'
    $P5029 = "RETURN"($P5028)
    goto lexotic_111
  lexotic_110:
    .get_results ($P5029)
  lexotic_111:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 270
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_390_1382959278.72036' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 271
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next114:
    unless $P5006, for_done116
    shift $P5008, $P5006
  for_redo115:
    .const 'Sub' $P5007 = 'cuid_390_1382959278.72036' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next114
  for_done116:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1382959278.72036") :anon :lex :outer("cuid_8_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 272
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 273
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 279
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_392_1382959278.72036' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 281
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next136:
    unless $P5008, for_done138
    shift $P5010, $P5008
  for_redo137:
    .const 'Sub' $P5009 = 'cuid_392_1382959278.72036' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next136
  for_done138:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1382959278.72036") :anon :lex :outer("cuid_9_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 285
    .param pmc _lex_param_0 
    .const 'Sub' $P5011 = 'cuid_391_1382959278.72036' 
    capture_lex $P5011 
    .lex "$part", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set $S5001, _lex_param_0
    box $P5002, $S5001
    set $P101, $P5002
    find_lex $P5004, "$target"
    get_who $P5003, $P5004
    set $S5002, $P101
    exists $I5001, $P5003[$S5002]
    unless $I5001 goto if70_else117 
.annotate 'line', 287
    find_lex $P5007, "$target"
    get_who $P5006, $P5007
    set $S5003, $P101
    set $P5005, $P5006[$S5003]
    store_lex "$target", $P5005
    set $P5010, $P5005
    goto if70_end118
  if70_else117:
    .const 'Sub' $P5008 = 'cuid_391_1382959278.72036' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if70_end118:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1382959278.72036") :anon :lex :outer("cuid_392_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 290
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_22 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_23 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_24 
    .local pmc pkg_viv_tmp_6 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback121
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_22, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_22
    unless $I5002 goto if72_else122 
    set $P5006, fb_tmp_22["%HOW"]
    set $P5008, $P5006
    goto if72_end123
  if72_else122:
    null $P5007
    set $P5008, $P5007
  if72_end123:
    unless_null $P5008, vivi_73124
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5009
    set $P5008, $P5009
  vivi_73124:
    unless_null $P5008, vivi_74125
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_74125:
    set $P5003, $P5008
  fallback121:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if71_else119 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback126
    nqp_get_sc_object $P5014, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_5, $P5013
    set fb_tmp_23, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_23
    unless $I5003 goto if75_else127 
    set $P5015, fb_tmp_23["%HOW"]
    set $P5017, $P5015
    goto if75_end128
  if75_else127:
    null $P5016
    set $P5017, $P5016
  if75_end128:
    unless_null $P5017, vivi_76129
    new $P5018, 'Hash'
    set pkg_viv_tmp_5["%HOW"], $P5018
    set $P5017, $P5018
  vivi_76129:
    unless_null $P5017, vivi_77130
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_77130:
    set $P5012, $P5017
  fallback126:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if71_end120
  if71_else119:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback131
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_6, $P5022
    set fb_tmp_24, pkg_viv_tmp_6
    repr_defined $I5004, fb_tmp_24
    unless $I5004 goto if78_else132 
    set $P5024, fb_tmp_24["%HOW"]
    set $P5026, $P5024
    goto if78_end133
  if78_else132:
    null $P5025
    set $P5026, $P5025
  if78_end133:
    unless_null $P5026, vivi_79134
    new $P5027, 'Hash'
    set pkg_viv_tmp_6["%HOW"], $P5027
    set $P5026, $P5027
  vivi_79134:
    unless_null $P5026, vivi_80135
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_80135:
    set $P5021, $P5026
  fallback131:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if71_end120:
    set $P101, $P5029
.annotate 'line', 294
    find_lex $P5030, "$part"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 295
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$part"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_25 
.annotate 'line', 305
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 306
    set fb_tmp_25, _lex_param_1
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if81_else139 
    set $P5001, fb_tmp_25[0]
    set $P5003, $P5001
    goto if81_end140
  if81_else139:
    null $P5002
    set $P5003, $P5002
  if81_end140:
    unless_null $P5003, vivi_82141
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  vivi_82141:
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5006 = $P5005."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "static" :named("decl"), _lex_param_3 :named("value"))
    $P5007 = $P5003."push"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 313
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 314
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 316
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 317
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 318
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 320
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 325
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_2 :opt_flag 
    .const 'Sub' $P5083 = 'cuid_12_1382959278.72036' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_396_1382959278.72036' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_397_1382959278.72036' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_398_1382959278.72036' 
    capture_lex $P5083 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    if haz_param_2, default252
    box $P5082, "NQPRoutine"
    set _lex_param_4, $P5082
  default252:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_142
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_90155
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 329
.annotate 'line', 330
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 331
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback144
    nqp_get_sc_object $P5015, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5014, $P5015
    set fb_tmp_26, $P5014
    repr_defined $I5002, fb_tmp_26
    unless $I5002 goto if83_else145 
    set $P5016, fb_tmp_26["$PACKAGE"]
    set $P5018, $P5016
    goto if83_end146
  if83_else145:
    null $P5017
    set $P5018, $P5017
  if83_end146:
    unless_null $P5018, vivi_84147
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_84147:
    unless_null $P5018, vivi_85148
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_85148:
    set $P5013, $P5018
  fallback144:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback149
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set fb_tmp_27, $P5022
    repr_defined $I5003, fb_tmp_27
    unless $I5003 goto if86_else150 
    set $P5024, fb_tmp_27["$PACKAGE"]
    set $P5026, $P5024
    goto if86_end151
  if86_else150:
    null $P5025
    set $P5026, $P5025
  if86_end151:
    unless_null $P5026, vivi_87152
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_87152:
    unless_null $P5026, vivi_88153
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_88153:
    set $P5021, $P5026
  fallback149:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_89154
  catch_handler_90155:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_89154
  skip_handler_89154:
    .const 'Sub' $P5034 = 'cuid_12_1382959278.72036' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if131_end229 
.annotate 'line', 380
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if131_end229:
.annotate 'line', 385
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_45, _lex_param_1
    repr_defined $I5005, fb_tmp_45
    unless $I5005 goto if133_else232 
    set $P5038, fb_tmp_45["compile_time_dummy"]
    set $P5040, $P5038
    goto if133_end233
  if133_else232:
    null $P5039
    set $P5040, $P5039
  if133_end233:
    unless_null $P5040, vivi_134234
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5041
  vivi_134234:
    defined $I5004, $P5040
    unless $I5004 goto if132_else230 
.annotate 'line', 388
    set fb_tmp_46, _lex_param_1
    repr_defined $I5006, fb_tmp_46
    unless $I5006 goto if135_else235 
    set $P5042, fb_tmp_46["compile_time_dummy"]
    set $P5044, $P5042
    goto if135_end236
  if135_else235:
    null $P5043
    set $P5044, $P5043
  if135_end236:
    unless_null $P5044, vivi_136237
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5044, $P5045
  vivi_136237:
    set $P106, $P5044
    goto if132_end231
  if132_else230:
.annotate 'line', 391
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 399
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx", 11
.annotate 'line', 400
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if137_end239 
.annotate 'line', 406
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list", 10
.annotate 'line', 407
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 408
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if138_else240 
    .const 'Sub' $P5059 = 'cuid_396_1382959278.72036' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if138_end241
  if138_else240:
    .const 'Sub' $P5061 = 'cuid_397_1382959278.72036' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if138_end241:
    set $P5064, $P5063
  if137_end239:
  if132_end231:
.annotate 'line', 448
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if143_else248 
    .const 'Sub' $P5066 = 'cuid_398_1382959278.72036' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5081, $P5067
    goto if143_end249
  if143_else248:
.annotate 'line', 487
.annotate 'line', 490
    nqp_get_sc_object $P5068, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 492
    nqp_get_sc_object $P5069, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 494
    nqp_get_sc_object $P5070, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 495
    nqp_get_sc_object $P5074, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 497
    nqp_get_sc_object $P5077, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    $P5080 = "RETURN"($P106)
    set $P5081, $P5080
  if143_end249:
    goto lexotic_143
  lexotic_142:
    .get_results ($P5081)
  lexotic_143:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1382959278.72036") :anon :lex :outer("cuid_17_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 338
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5051 = 'cuid_395_1382959278.72036' 
    capture_lex $P5051 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc pkg_viv_tmp_7 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P106, $P5006
.annotate 'line', 340
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 342
.annotate 'line', 343
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 120
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    find_dynamic_lex $P5015, "$*LINEPOSCACHE"
    unless_null $P5015, fallback156
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5016, $P5017
    set fb_tmp_28, $P5016
    repr_defined $I5001, fb_tmp_28
    unless $I5001 goto if91_else157 
    set $P5018, fb_tmp_28["$LINEPOSCACHE"]
    set $P5020, $P5018
    goto if91_end158
  if91_else157:
    null $P5019
    set $P5020, $P5019
  if91_end158:
    unless_null $P5020, vivi_92159
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_92159:
    unless_null $P5020, vivi_93160
    die "Contextual $*LINEPOSCACHE not found"
    box $P5022, "Contextual $*LINEPOSCACHE not found"
    set $P5020, $P5022
  vivi_93160:
    set $P5015, $P5020
  fallback156:
    find_dynamic_lex $P5023, "%*COMPILING"
    unless_null $P5023, fallback167
    nqp_get_sc_object $P5025, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_7, $P5024
    set fb_tmp_31, pkg_viv_tmp_7
    repr_defined $I5004, fb_tmp_31
    unless $I5004 goto if97_else168 
    set $P5026, fb_tmp_31["%COMPILING"]
    set $P5028, $P5026
    goto if97_end169
  if97_else168:
    null $P5027
    set $P5028, $P5027
  if97_end169:
    unless_null $P5028, vivi_98170
    new $P5029, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5029
    set $P5028, $P5029
  vivi_98170:
    unless_null $P5028, vivi_99171
    die "Contextual %*COMPILING not found"
    box $P5030, "Contextual %*COMPILING not found"
    set $P5028, $P5030
  vivi_99171:
    set $P5023, $P5028
  fallback167:
    set fb_tmp_30, $P5023
    repr_defined $I5003, fb_tmp_30
    unless $I5003 goto if96_else165 
    set $P5031, fb_tmp_30["%?OPTIONS"]
    set $P5033, $P5031
    goto if96_end166
  if96_else165:
    null $P5032
    set $P5033, $P5032
  if96_end166:
    unless_null $P5033, vivi_100172
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5033, $P5034
  vivi_100172:
    set fb_tmp_29, $P5033
    repr_defined $I5002, fb_tmp_29
    unless $I5002 goto if95_else163 
    set $P5035, fb_tmp_29["bootstrap"]
    set $P5037, $P5035
    goto if95_end164
  if95_else163:
    null $P5036
    set $P5037, $P5036
  if95_end164:
    unless_null $P5037, vivi_101173
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_101173:
    unless $P5037 goto if94_else161 
    set $I5005, 1
    goto if94_end162
  if94_else161:
    set $I5005, 0
  if94_end162:
    $P5039 = $P101."compile"($P5014, "ast" :named("from"), 1 :named("compunit_ok"), $P5015 :named("lineposcache"), $I5005 :named("bootstrap"))
    set $P102, $P5039
.annotate 'line', 348
    $P5040 = $P101."backend"()
    $P5041 = $P5040."compunit_coderefs"($P102)
    set $P103, $P5041
    elements $I5006, $P103
    box $P5042, $I5006
    set $P104, $P5042
    box $P5043, 0
    set $P105, $P5043
  while102_test174:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5007, $N5001, $N5002
    box $P5047, $I5007
    set $P5046, $P5047
    unless $I5007 goto while102_done178 
  while102_redo176:
    .const 'Sub' $P5044 = 'cuid_395_1382959278.72036' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5046, $P5045
    goto while102_test174 
  while102_done178:
.annotate 'line', 374
    $P5048 = $P101."backend"()
    $P5049 = $P5048."compunit_mainline"($P102)
    set $P106, $P5049
.annotate 'line', 375
    $P5050 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1382959278.72036") :anon :lex :outer("cuid_12_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 351
    .const 'Sub' $P5017 = 'cuid_394_1382959278.72036' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_32 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_32, $P5002
    repr_defined $I5001, fb_tmp_32
    unless $I5001 goto if103_else179 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_32[$I5002]
    set $P5006, $P5003
    goto if103_end180
  if103_else179:
    null $P5005
    set $P5006, $P5005
  if103_end180:
    unless_null $P5006, vivi_104181
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_104181:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up", 8
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if105_end183 
    .const 'Sub' $P5013 = 'cuid_394_1382959278.72036' 
    capture_lex $P5013
    $P5014 = $P5013()
  if105_end183:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1382959278.72036") :anon :lex :outer("cuid_395_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 353
    .const 'Sub' $P5089 = 'cuid_393_1382959278.72036' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 357
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up", 8
    set fb_tmp_33, $P5006
    repr_defined $I5001, fb_tmp_33
    unless $I5001 goto if106_else184 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_33[$S5001]
    set $P5010, $P5007
    goto if106_end185
  if106_else184:
    null $P5009
    set $P5010, $P5009
  if106_end185:
    unless_null $P5010, vivi_107186
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_107186:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types", 9
    set fb_tmp_34, $P5016
    repr_defined $I5002, fb_tmp_34
    unless $I5002 goto if108_else187 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_34[$S5002]
    set $P5020, $P5017
    goto if108_end188
  if108_else187:
    null $P5019
    set $P5020, $P5019
  if108_end188:
    unless_null $P5020, vivi_109189
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_109189:
    find_lex $P5022, "@allcodes"
    set fb_tmp_35, $P5022
    repr_defined $I5003, fb_tmp_35
    unless $I5003 goto if110_else190 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_35[$I5004]
    set $P5026, $P5023
    goto if110_end191
  if110_else190:
    null $P5025
    set $P5026, $P5025
  if110_end191:
    unless_null $P5026, vivi_111192
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_111192:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types", 9
    set fb_tmp_36, $P5031
    repr_defined $I5005, fb_tmp_36
    unless $I5005 goto if112_else193 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_36[$S5003]
    set $P5035, $P5032
    goto if112_end194
  if112_else193:
    null $P5034
    set $P5035, $P5034
  if112_end194:
    unless_null $P5035, vivi_113195
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5035, $P5036
  vivi_113195:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up", 8
    set fb_tmp_37, $P5044
    repr_defined $I5006, fb_tmp_37
    unless $I5006 goto if114_else196 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_37[$S5004]
    set $P5048, $P5045
    goto if114_end197
  if114_else196:
    null $P5047
    set $P5048, $P5047
  if114_end197:
    unless_null $P5048, vivi_115198
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5048, $P5049
  vivi_115198:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next208:
    unless $P5040, for_done210
    shift $P5051, $P5040
  for_redo209:
    .const 'Sub' $P5050 = 'cuid_393_1382959278.72036' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next208
  for_done210:
    find_lex $P5052, "@allcodes"
    set fb_tmp_41, $P5052
    repr_defined $I5007, fb_tmp_41
    unless $I5007 goto if122_else211 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_41[$I5008]
    set $P5056, $P5053
    goto if122_end212
  if122_else211:
    null $P5055
    set $P5056, $P5055
  if122_end212:
    unless_null $P5056, vivi_123213
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5056, $P5057
  vivi_123213:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 365
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx", 11
    set fb_tmp_42, $P5063
    repr_defined $I5009, fb_tmp_42
    unless $I5009 goto if124_else214 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_42[$S5005]
    set $P5067, $P5064
    goto if124_end215
  if124_else214:
    null $P5066
    set $P5067, $P5066
  if124_end215:
    unless_null $P5067, vivi_125216
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5067, $P5068
  vivi_125216:
    find_lex $P5069, "@allcodes"
    set fb_tmp_43, $P5069
    repr_defined $I5010, fb_tmp_43
    unless $I5010 goto if126_else217 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_43[$I5011]
    set $P5073, $P5070
    goto if126_end218
  if126_else217:
    null $P5072
    set $P5073, $P5072
  if126_end218:
    unless_null $P5073, vivi_127219
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5073, $P5074
  vivi_127219:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list", 10
    set fb_tmp_44, $P5078
    repr_defined $I5012, fb_tmp_44
    unless $I5012 goto if128_else220 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_44[$S5006]
    set $P5082, $P5079
    goto if128_end221
  if128_else220:
    null $P5081
    set $P5082, $P5081
  if128_end221:
    unless_null $P5082, vivi_129222
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_129222:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while130_handlers226
    push_eh $P5087
  while130_test223:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while130_done227 
  while130_redo225:
.annotate 'line', 369
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while130_test223 
  while130_handlers226:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while130_test223
    eq $P5087, .CONTROL_LOOP_REDO, while130_redo225
  while130_done227:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1382959278.72036") :anon :lex :outer("cuid_394_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 360
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_38 
    .local pmc fb_tmp_39 
    .local pmc fb_tmp_40 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types", 9
    set fb_tmp_38, $P5004
    repr_defined $I5001, fb_tmp_38
    unless $I5001 goto if116_else199 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_38[$S5001]
    set $P5008, $P5005
    goto if116_end200
  if116_else199:
    null $P5007
    set $P5008, $P5007
  if116_end200:
    unless_null $P5008, vivi_117201
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_117201:
    find_lex $P5011, "@allcodes"
    set fb_tmp_39, $P5011
    repr_defined $I5002, fb_tmp_39
    unless $I5002 goto if118_else202 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_39[$I5003]
    set $P5015, $P5012
    goto if118_end203
  if118_else202:
    null $P5014
    set $P5015, $P5014
  if118_end203:
    unless_null $P5015, vivi_119204
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_119204:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types", 9
    set fb_tmp_40, $P5020
    repr_defined $I5004, fb_tmp_40
    unless $I5004 goto if120_else205 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_40[$S5002]
    set $P5024, $P5021
    goto if120_end206
  if120_else205:
    null $P5023
    set $P5024, $P5023
  if120_end206:
    unless_null $P5024, vivi_121207
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_121207:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1382959278.72036") :anon :lex :outer("cuid_17_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 408
    .const 'Sub' $P5012 = 'cuid_13_1382959278.72036' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1382959278.72036' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1382959278.72036' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 12
    .const 'Sub' $P5011 = 'cuid_14_1382959278.72036' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1382959278.72036") :anon :lex :outer("cuid_396_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 409
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_47 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 410
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up", 8
    set fb_tmp_47, $P5005
    repr_defined $I5001, fb_tmp_47
    unless $I5001 goto if139_else242 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_47[$S5001]
    set $P5010, $P5006
    goto if139_end243
  if139_else242:
    null $P5009
    set $P5010, $P5009
  if139_end243:
    unless_null $P5010, vivi_140244
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_140244:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1382959278.72036") :anon :lex :outer("cuid_396_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 416

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1382959278.72036") :anon :lex :outer("cuid_17_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 420
    .const 'Sub' $P5012 = 'cuid_15_1382959278.72036' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1382959278.72036' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1382959278.72036' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 12
    .const 'Sub' $P5011 = 'cuid_16_1382959278.72036' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1382959278.72036") :anon :lex :outer("cuid_397_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 421
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_48 
.annotate 'line', 423
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 424
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 426
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 428
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 429
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 430
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 431
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 433
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 437
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up", 8
    set fb_tmp_48, $P5025
    repr_defined $I5001, fb_tmp_48
    unless $I5001 goto if141_else245 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_48[$S5001]
    set $P5030, $P5026
    goto if141_end246
  if141_else245:
    null $P5029
    set $P5030, $P5029
  if141_end246:
    unless_null $P5030, vivi_142247
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5030, $P5031
  vivi_142247:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1382959278.72036") :anon :lex :outer("cuid_397_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 440

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1382959278.72036") :anon :lex :outer("cuid_17_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 452
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if144_end251 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
.annotate 'line', 455
    $P5008 = "&compilee_list"()
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if144_end251:
.annotate 'line', 457
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 460
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 461
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 463
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 464
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 468
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 470
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 471
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 472
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 473
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 475
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 477
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 478
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up", 8
.annotate 'line', 482
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types", 9
.annotate 'line', 483
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 505
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_4 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_3, default259
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_2, $P5006
  default259:
    if haz_param_4, default260
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_3, $P5007
  default260:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_253
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if145_end256 
.annotate 'line', 508
    set $P101["name"], _lex_param_2
  if145_end256:
    defined $I5002, _lex_param_3
    unless $I5002 goto if146_end258 
.annotate 'line', 509
    set $P101["repr"], _lex_param_3
  if146_end258:
.annotate 'line', 510
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 511
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    $P5005 = "RETURN"($P102)
    goto lexotic_254
  lexotic_253:
    .get_results ($P5005)
  lexotic_254:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 522
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 523
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 524
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 529
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 530
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 534
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 535
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 536
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
.annotate 'line', 539
    $P5013 = "&compilee_list"(_lex_param_2)
    setattribute $P103, $P101, "$!types", $P5013
.annotate 'line', 541
    $P5014 = "&compilee_list"(_lex_param_3)
    setattribute $P103, $P101, "$!definednesses", $P5014
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 546
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 548
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 551
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 555
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 556
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 559
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 560
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 564
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 565
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 569
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_401_1382959278.72036' 
    capture_lex $P5030 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_261
    .lex "RETURN", $P106
.annotate 'line', 571
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 108
.annotate 'line', 572
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS", 7
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while147_test263:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while147_done267 
  while147_redo265:
    .const 'Sub' $P5014 = 'cuid_401_1382959278.72036' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while147_test263 
  while147_done267:
.annotate 'line', 596
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback289
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set fb_tmp_53, $P5022
    repr_defined $I5002, fb_tmp_53
    unless $I5002 goto if159_else290 
    set $P5024, fb_tmp_53["$GLOBALish"]
    set $P5026, $P5024
    goto if159_end291
  if159_else290:
    null $P5025
    set $P5026, $P5025
  if159_end291:
    unless_null $P5026, vivi_160292
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_160292:
    unless_null $P5026, vivi_161293
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_161293:
    set $P5021, $P5026
  fallback289:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 599
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 604
    $P101."shift"()
    $P5029 = "RETURN"($P101)
    goto lexotic_262
  lexotic_261:
    .get_results ($P5029)
  lexotic_262:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1382959278.72036") :anon :lex :outer("cuid_26_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 577
    .const 'Sub' $P5019 = 'cuid_400_1382959278.72036' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_49 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 579
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_49, $P5007
    repr_defined $I5001, fb_tmp_49
    unless $I5001 goto if148_else268 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_49[$I5002]
    set $P5011, $P5008
    goto if148_end269
  if148_else268:
    null $P5010
    set $P5011, $P5010
  if148_end269:
    unless_null $P5011, vivi_149270
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_149270:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next286:
    unless $P5016, for_done288
    shift $P5018, $P5016
  for_redo287:
    .const 'Sub' $P5017 = 'cuid_400_1382959278.72036' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next286
  for_done288:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1382959278.72036") :anon :lex :outer("cuid_401_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 580
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_399_1382959278.72036' 
    capture_lex $P5012 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_50 
    find_lex $P5001, "%seen"
    set fb_tmp_50, $P5001
    repr_defined $I5002, fb_tmp_50
    unless $I5002 goto if152_else275 
.annotate 'line', 581
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_50[$S5001]
    set $P5005, $P5002
    goto if152_end276
  if152_else275:
    null $P5004
    set $P5005, $P5004
  if152_end276:
    unless_null $P5005, vivi_153277
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_153277:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if151_end274 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if151_end274:
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if150_end272 
    .const 'Sub' $P5008 = 'cuid_399_1382959278.72036' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if150_end272:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1382959278.72036") :anon :lex :outer("cuid_400_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 581
    .lex "$value", $P101 
    .local pmc fb_tmp_51 
    .local pmc fb_tmp_52 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 582
    find_lex $P5002, "$_"
    $P5003 = $P5002."value"()
    set fb_tmp_51, $P5003
    repr_defined $I5001, fb_tmp_51
    unless $I5001 goto if154_else278 
    set $P5004, fb_tmp_51["value"]
    set $P5006, $P5004
    goto if154_end279
  if154_else278:
    null $P5005
    set $P5006, $P5005
  if154_end279:
    unless_null $P5006, vivi_155280
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_155280:
    set $P101, $P5006
    nqp_get_sc_for_object $P5008, $P101
    isnull $I5002, $P5008
    if $I5002 goto unless156_end282 
.annotate 'line', 583
.annotate 'line', 584
    find_lex $P5009, "$wrapper"
    set fb_tmp_52, $P5009
    repr_defined $I5003, fb_tmp_52
    unless $I5003 goto if157_else283 
    set $P5010, fb_tmp_52[0]
    set $P5012, $P5010
    goto if157_end284
  if157_else283:
    null $P5011
    set $P5012, $P5011
  if157_end284:
    unless_null $P5012, vivi_158285
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_158285:
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 586
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_lex $P5016, "$_"
    $P5017 = $P5016."key"()
    $P5018 = $P5015."new"($P5017 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 587
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5020 = $P5019."new"($P101 :named("value"))
    $P5021 = $P5014."new"($P5018, $P5020, "bind" :named("op"))
    $P5022 = $P5012."push"($P5021)
  unless156_end282:
    find_lex $P5023, "%seen"
.annotate 'line', 590
    find_lex $P5024, "$_"
    $P5025 = $P5024."key"()
    set $S5001, $P5025
    box $P5026, 1
    set $P5023[$S5001], $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 609
    .param pmc _lex_param_0 
    .const 'Sub' $P5048 = 'cuid_402_1382959278.72036' 
    capture_lex $P5048 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_54 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_57 
    .local pmc fb_tmp_58 
    .local pmc fb_tmp_59 
    .local pmc pkg_viv_tmp_9 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback300
    nqp_get_sc_object $P5010, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_8, $P5009
    set fb_tmp_56, pkg_viv_tmp_8
    repr_defined $I5003, fb_tmp_56
    unless $I5003 goto if165_else301 
    set $P5011, fb_tmp_56["%COMPILING"]
    set $P5013, $P5011
    goto if165_end302
  if165_else301:
    null $P5012
    set $P5013, $P5012
  if165_end302:
    unless_null $P5013, vivi_166303
    new $P5014, 'Hash'
    set pkg_viv_tmp_8["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_166303:
    unless_null $P5013, vivi_167304
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_167304:
    set $P5008, $P5013
  fallback300:
    set fb_tmp_55, $P5008
    repr_defined $I5002, fb_tmp_55
    unless $I5002 goto if164_else298 
    set $P5016, fb_tmp_55["%?OPTIONS"]
    set $P5018, $P5016
    goto if164_end299
  if164_else298:
    null $P5017
    set $P5018, $P5017
  if164_end299:
    unless_null $P5018, vivi_168305
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_168305:
    set fb_tmp_54, $P5018
    repr_defined $I5001, fb_tmp_54
    unless $I5001 goto if163_else296 
    set $P5020, fb_tmp_54["vmlibs"]
    set $P5022, $P5020
    goto if163_end297
  if163_else296:
    null $P5021
    set $P5022, $P5021
  if163_end297:
    unless_null $P5022, vivi_169306
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_169306:
    unless $P5022 goto if162_end295 
.annotate 'line', 612
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback311
    nqp_get_sc_object $P5030, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_9, $P5029
    set fb_tmp_59, pkg_viv_tmp_9
    repr_defined $I5006, fb_tmp_59
    unless $I5006 goto if172_else312 
    set $P5031, fb_tmp_59["%COMPILING"]
    set $P5033, $P5031
    goto if172_end313
  if172_else312:
    null $P5032
    set $P5033, $P5032
  if172_end313:
    unless_null $P5033, vivi_173314
    new $P5034, 'Hash'
    set pkg_viv_tmp_9["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_173314:
    unless_null $P5033, vivi_174315
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_174315:
    set $P5028, $P5033
  fallback311:
    set fb_tmp_58, $P5028
    repr_defined $I5005, fb_tmp_58
    unless $I5005 goto if171_else309 
    set $P5036, fb_tmp_58["%?OPTIONS"]
    set $P5038, $P5036
    goto if171_end310
  if171_else309:
    null $P5037
    set $P5038, $P5037
  if171_end310:
    unless_null $P5038, vivi_175316
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5038, $P5039
  vivi_175316:
    set fb_tmp_57, $P5038
    repr_defined $I5004, fb_tmp_57
    unless $I5004 goto if170_else307 
    set $P5040, fb_tmp_57["vmlibs"]
    set $P5042, $P5040
    goto if170_end308
  if170_else307:
    null $P5041
    set $P5042, $P5041
  if170_end308:
    unless_null $P5042, vivi_176317
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5042, $P5043
  vivi_176317:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next318:
    unless $P5026, for_done320
    shift $P5045, $P5026
  for_redo319:
    .const 'Sub' $P5044 = 'cuid_402_1382959278.72036' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next318
  for_done320:
  if162_end295:
.annotate 'line', 617
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5047 = $P5046."new"($P101 :named("loadlibs"))
    .return ($P5047) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1382959278.72036") :anon :lex :outer("cuid_27_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 613
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 614
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 621
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 622
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
.annotate 'line', 623
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 624
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 625
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 626
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 628
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 629
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 630
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 632
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5022 = $P5021."new"("null" :named("op"))
.annotate 'line', 633
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5024 = $P5023."new"("null" :named("op"))
    $P5025 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"), $P5024 :named("moar"))
    $P5026 = $P5001."add_load_dependency_task"($P5025 :named("deserialize_past"))
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 638
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_403_1382959278.72036' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks", 12
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next321:
    unless $P5003, for_done323
    shift $P5008, $P5003
  for_redo322:
    .const 'Sub' $P5007 = 'cuid_403_1382959278.72036' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next321
  for_done323:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1382959278.72036") :anon :lex :outer("cuid_29_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 639
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 649
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 650
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 655
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 656
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 661
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_404_1382959278.72036' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_324
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS", 7
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while177_test326:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while177_done330 
  while177_redo328:
    .const 'Sub' $P5006 = 'cuid_404_1382959278.72036' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while177_test326 
  while177_done330:
    box $P5010, 0
    goto lexotic_325
  lexotic_324:
    .get_results ($P5010)
  lexotic_325:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1382959278.72036") :anon :lex :outer("cuid_32_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 663
    .lex "%sym", $P101 
    .local pmc fb_tmp_60 
    .local pmc fb_tmp_61 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 665
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_60, $P5007
    repr_defined $I5001, fb_tmp_60
    unless $I5001 goto if178_else331 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_60[$I5002]
    set $P5011, $P5008
    goto if178_end332
  if178_else331:
    null $P5010
    set $P5011, $P5010
  if178_end332:
    unless_null $P5011, vivi_179333
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_179333:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5022, $N5004
    set $P5021, $P5022
    unless $N5004 goto if180_end335 
.annotate 'line', 666
    set fb_tmp_61, $P101
    repr_defined $I5004, fb_tmp_61
    unless $I5004 goto if181_else336 
    set $P5015, fb_tmp_61["scope"]
    set $P5017, $P5015
    goto if181_end337
  if181_else336:
    null $P5016
    set $P5017, $P5016
  if181_end337:
    unless_null $P5017, vivi_182338
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_182338:
    set $S5001, $P5017
    find_lex $P5019, "$wanted_scope"
    set $S5002, $P5019
    iseq $I5003, $S5001, $S5002
    $P5020 = "RETURN"($I5003)
    set $P5021, $P5020
  if180_end335:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 674
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_184340
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 676
.annotate 'line', 677
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_183339
  catch_handler_184340:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_183339
  skip_handler_183339:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1382959278.72036") :anon :lex :outer("cuid_386_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 686
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_406_1382959278.72036' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_408_1382959278.72036' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_409_1382959278.72036' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_65 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_341
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless185_end344 
.annotate 'line', 688
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless185_end344:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if186_end346 
    .const 'Sub' $P5003 = 'cuid_406_1382959278.72036' 
    capture_lex $P5003
    $P5004 = $P5003()
  if186_end346:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback365
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5006, $P5007
    set fb_tmp_65, $P5006
    repr_defined $I5002, fb_tmp_65
    unless $I5002 goto if196_else366 
    set $P5008, fb_tmp_65["$GLOBALish"]
    set $P5010, $P5008
    goto if196_end367
  if196_else366:
    null $P5009
    set $P5010, $P5009
  if196_end367:
    unless_null $P5010, vivi_197368
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_197368:
    unless_null $P5010, vivi_198369
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_198369:
    set $P5005, $P5010
  fallback365:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if199_end371 
    .const 'Sub' $P5013 = 'cuid_408_1382959278.72036' 
    capture_lex $P5013
    $P5014 = $P5013()
  if199_end371:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next395:
    unless $P5017, for_done397
    shift $P5019, $P5017
  for_redo396:
    .const 'Sub' $P5018 = 'cuid_409_1382959278.72036' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next395
  for_done397:
    goto lexotic_342
  lexotic_341:
    .get_results ($P101)
  lexotic_342:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1382959278.72036") :anon :lex :outer("cuid_34_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 692
    .const 'Sub' $P5017 = 'cuid_405_1382959278.72036' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_62 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_62, $P5003
    repr_defined $I5001, fb_tmp_62
    unless $I5001 goto if187_else347 
    set $P5004, fb_tmp_62[0]
    set $P5006, $P5004
    goto if187_end348
  if187_else347:
    null $P5005
    set $P5006, $P5005
  if187_end348:
    unless_null $P5006, vivi_188349
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_188349:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 7
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while189_test350:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while189_done354 
  while189_redo352:
    .const 'Sub' $P5013 = 'cuid_405_1382959278.72036' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while189_test350 
  while189_done354:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1382959278.72036") :anon :lex :outer("cuid_406_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 695
    .lex "%sym", $P101 
    .local pmc fb_tmp_63 
    .local pmc fb_tmp_64 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 697
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_63, $P5007
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if190_else355 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_63[$I5002]
    set $P5011, $P5008
    goto if190_end356
  if190_else355:
    null $P5010
    set $P5011, $P5010
  if190_end356:
    unless_null $P5011, vivi_191357
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_191357:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5024, $N5004
    set $P5023, $P5024
    unless $N5004 goto if192_end359 
.annotate 'line', 698
    exists $I5003, $P101["value"]
    unless $I5003 goto if193_else360 
.annotate 'line', 699
    set fb_tmp_64, $P101
    repr_defined $I5004, fb_tmp_64
    unless $I5004 goto if194_else362 
    set $P5015, fb_tmp_64["value"]
    set $P5017, $P5015
    goto if194_end363
  if194_else362:
    null $P5016
    set $P5017, $P5016
  if194_end363:
    unless_null $P5017, vivi_195364
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_195364:
    $P5019 = "RETURN"($P5017)
    set $P5022, $P5019
    goto if193_end361
  if193_else360:
.annotate 'line', 702
    find_lex $P5020, "$final_name"
    set $S5002, $P5020
    concat $S5001, "No compile-time value for ", $S5002
    box $P5021, $S5001
    die $P5021
    set $P5022, $P5021
  if193_end361:
    set $P5023, $P5022
  if192_end359:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1382959278.72036") :anon :lex :outer("cuid_34_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 713
    .const 'Sub' $P5017 = 'cuid_407_1382959278.72036' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_66 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_66, $P5003
    repr_defined $I5001, fb_tmp_66
    unless $I5001 goto if200_else372 
    set $P5004, fb_tmp_66[0]
    set $P5006, $P5004
    goto if200_end373
  if200_else372:
    null $P5005
    set $P5006, $P5005
  if200_end373:
    unless_null $P5006, vivi_201374
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_201374:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 7
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while202_test375:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while202_done379 
  while202_redo377:
    .const 'Sub' $P5013 = 'cuid_407_1382959278.72036' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while202_test375 
  while202_done379:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1382959278.72036") :anon :lex :outer("cuid_408_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 716
    .lex "%sym", $P101 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 718
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 7
    set fb_tmp_67, $P5007
    repr_defined $I5001, fb_tmp_67
    unless $I5001 goto if203_else380 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_67[$I5002]
    set $P5011, $P5008
    goto if203_end381
  if203_else380:
    null $P5010
    set $P5011, $P5010
  if203_end381:
    unless_null $P5011, vivi_204382
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_204382:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if205_end384 
.annotate 'line', 719
    exists $I5003, $P101["value"]
    unless $I5003 goto if206_else385 
.annotate 'line', 720
    set fb_tmp_68, $P101
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if207_else387 
    set $P5015, fb_tmp_68["value"]
    set $P5017, $P5015
    goto if207_end388
  if207_else387:
    null $P5016
    set $P5017, $P5016
  if207_end388:
    unless_null $P5017, vivi_208389
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_208389:
    store_lex "$result", $P5017
.annotate 'line', 722
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if206_end386
  if206_else385:
.annotate 'line', 725
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if206_end386:
    set $P5024, $P5023
  if205_end384:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1382959278.72036") :anon :lex :outer("cuid_34_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 733
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_69 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if209_else390 
.annotate 'line', 734
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_69, $P5003
    repr_defined $I5002, fb_tmp_69
    unless $I5002 goto if210_else392 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_69[$S5002]
    set $P5007, $P5005
    goto if210_end393
  if210_else392:
    null $P5006
    set $P5007, $P5006
  if210_end393:
    unless_null $P5007, vivi_211394
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_211394:
    store_lex "$result", $P5007
    set $P5012, $P5007
    goto if209_end391
  if209_else390:
.annotate 'line', 737
.annotate 'line', 739
    find_lex $P5009, "@name"
    $P5010 = "&join"("::", $P5009)
    set $S5004, $P5010
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5011, $S5003
    die $P5011
    set $P5012, $P5011
  if209_end391:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 748
    .const 'Sub' $P5199 = 'cuid_35_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_48_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_66_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_91_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_92_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_130_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_133_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_222_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_224_1382959278.72036' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_225_1382959278.72036' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1436
.annotate 'line', 1437
    nqp_get_sc_object $P5001, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1438
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1439
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1440
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1441
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1442
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1443
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1444
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5008."O"(":prec<m=>, :assoc<non>", "%relational")
.annotate 'line', 1445
    nqp_get_sc_object $P5009, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1446
    nqp_get_sc_object $P5010, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1447
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1448
    nqp_get_sc_object $P5012, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1449
    nqp_get_sc_object $P5013, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1450
    nqp_get_sc_object $P5014, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1451
    nqp_get_sc_object $P5015, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 748
    .const 'Sub' $P5016 = 'cuid_35_1382959278.72036' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1382959278.72036' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1382959278.72036' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1382959278.72036' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1382959278.72036' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1382959278.72036' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1382959278.72036' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1382959278.72036' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1382959278.72036' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1382959278.72036' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_48_1382959278.72036' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_50_1382959278.72036' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_51_1382959278.72036' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_52_1382959278.72036' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_53_1382959278.72036' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_54_1382959278.72036' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_55_1382959278.72036' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_56_1382959278.72036' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_57_1382959278.72036' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_58_1382959278.72036' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_59_1382959278.72036' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_60_1382959278.72036' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_61_1382959278.72036' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_62_1382959278.72036' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_63_1382959278.72036' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_64_1382959278.72036' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_65_1382959278.72036' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_66_1382959278.72036' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_68_1382959278.72036' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_69_1382959278.72036' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_70_1382959278.72036' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_71_1382959278.72036' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_72_1382959278.72036' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_73_1382959278.72036' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_74_1382959278.72036' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_75_1382959278.72036' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_76_1382959278.72036' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_77_1382959278.72036' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_79_1382959278.72036' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_80_1382959278.72036' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_81_1382959278.72036' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_82_1382959278.72036' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_83_1382959278.72036' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_84_1382959278.72036' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_85_1382959278.72036' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_86_1382959278.72036' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_87_1382959278.72036' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_88_1382959278.72036' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_89_1382959278.72036' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_90_1382959278.72036' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_91_1382959278.72036' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_92_1382959278.72036' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_95_1382959278.72036' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_96_1382959278.72036' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_97_1382959278.72036' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_98_1382959278.72036' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_99_1382959278.72036' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_100_1382959278.72036' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_101_1382959278.72036' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_102_1382959278.72036' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_103_1382959278.72036' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_104_1382959278.72036' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_105_1382959278.72036' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_106_1382959278.72036' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_107_1382959278.72036' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_108_1382959278.72036' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_109_1382959278.72036' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_110_1382959278.72036' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_111_1382959278.72036' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_112_1382959278.72036' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_113_1382959278.72036' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_114_1382959278.72036' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_115_1382959278.72036' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_116_1382959278.72036' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_117_1382959278.72036' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_118_1382959278.72036' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_119_1382959278.72036' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_120_1382959278.72036' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_121_1382959278.72036' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_122_1382959278.72036' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_123_1382959278.72036' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_124_1382959278.72036' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_125_1382959278.72036' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_126_1382959278.72036' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_127_1382959278.72036' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_128_1382959278.72036' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_129_1382959278.72036' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_130_1382959278.72036' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_131_1382959278.72036' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_132_1382959278.72036' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_133_1382959278.72036' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_134_1382959278.72036' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_135_1382959278.72036' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_136_1382959278.72036' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_137_1382959278.72036' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_138_1382959278.72036' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_139_1382959278.72036' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_140_1382959278.72036' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_141_1382959278.72036' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_142_1382959278.72036' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_143_1382959278.72036' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_144_1382959278.72036' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_145_1382959278.72036' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_146_1382959278.72036' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_147_1382959278.72036' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_148_1382959278.72036' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_149_1382959278.72036' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_150_1382959278.72036' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_151_1382959278.72036' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_152_1382959278.72036' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_153_1382959278.72036' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_154_1382959278.72036' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_155_1382959278.72036' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_156_1382959278.72036' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_157_1382959278.72036' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_158_1382959278.72036' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_159_1382959278.72036' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_160_1382959278.72036' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_161_1382959278.72036' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_162_1382959278.72036' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_163_1382959278.72036' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_164_1382959278.72036' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_165_1382959278.72036' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_166_1382959278.72036' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_167_1382959278.72036' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_168_1382959278.72036' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_169_1382959278.72036' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_170_1382959278.72036' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_171_1382959278.72036' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_172_1382959278.72036' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_173_1382959278.72036' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_174_1382959278.72036' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_175_1382959278.72036' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_176_1382959278.72036' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_177_1382959278.72036' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_178_1382959278.72036' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_179_1382959278.72036' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_180_1382959278.72036' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_181_1382959278.72036' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_182_1382959278.72036' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_183_1382959278.72036' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_184_1382959278.72036' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_185_1382959278.72036' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_186_1382959278.72036' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_187_1382959278.72036' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_188_1382959278.72036' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_189_1382959278.72036' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_190_1382959278.72036' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_191_1382959278.72036' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_192_1382959278.72036' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_193_1382959278.72036' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_194_1382959278.72036' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_195_1382959278.72036' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_196_1382959278.72036' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_197_1382959278.72036' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_198_1382959278.72036' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_199_1382959278.72036' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_200_1382959278.72036' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_201_1382959278.72036' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_202_1382959278.72036' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_203_1382959278.72036' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_204_1382959278.72036' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_205_1382959278.72036' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_206_1382959278.72036' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_207_1382959278.72036' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_208_1382959278.72036' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_209_1382959278.72036' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_210_1382959278.72036' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_211_1382959278.72036' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_212_1382959278.72036' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_213_1382959278.72036' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_214_1382959278.72036' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_215_1382959278.72036' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_216_1382959278.72036' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_217_1382959278.72036' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_218_1382959278.72036' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_219_1382959278.72036' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_220_1382959278.72036' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_221_1382959278.72036' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_222_1382959278.72036' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_223_1382959278.72036' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_224_1382959278.72036' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_225_1382959278.72036' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 749
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "$*IN_REGEX_ASSERTION", $P112 
    .lex "%*HANDLERS", $P113 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_70 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_71 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_72 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_73 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_74 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_75 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_76 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_77 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_78 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_79 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_80 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_84 
    .local pmc pkg_viv_tmp_19 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P111, $P5011
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P112, $P5012
    new $P5013, 'Hash'
    set $P113, $P5013
    unless_null $P101, fallback403
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_11, $P5021
    set fb_tmp_71, pkg_viv_tmp_11
    repr_defined $I5002, fb_tmp_71
    unless $I5002 goto if215_else404 
    set $P5023, fb_tmp_71["%LANG"]
    set $P5025, $P5023
    goto if215_end405
  if215_else404:
    null $P5024
    set $P5025, $P5024
  if215_end405:
    unless_null $P5025, vivi_216406
    new $P5026, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5026
    set $P5025, $P5026
  vivi_216406:
    unless_null $P5025, vivi_217407
    die "Contextual %*LANG not found"
    box $P5027, "Contextual %*LANG not found"
    set $P5025, $P5027
  vivi_217407:
    set $P101, $P5025
  fallback403:
    nqp_get_sc_object $P5029, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    set pkg_lookup_tmp_1, $P5029
    get_who $P5030, pkg_lookup_tmp_1
    exists $I5004, $P5030["NQP"]
    unless $I5004 goto if219_else410 
    get_who $P5032, pkg_lookup_tmp_1
    set $P5031, $P5032["NQP"]
    set $P5034, $P5031
    goto if219_end411
  if219_else410:
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5033
  if219_end411:
    get_who $P5028, $P5034
    set fb_tmp_72, $P5028
    repr_defined $I5003, fb_tmp_72
    unless $I5003 goto if218_else408 
    set $P5035, fb_tmp_72["Regex"]
    set $P5037, $P5035
    goto if218_end409
  if218_else408:
    null $P5036
    set $P5037, $P5036
  if218_end409:
    unless_null $P5037, vivi_220412
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_220412:
    set $P101["Regex"], $P5037
    unless_null $P101, fallback413
    nqp_get_sc_object $P5040, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_12, $P5039
    set fb_tmp_73, pkg_viv_tmp_12
    repr_defined $I5005, fb_tmp_73
    unless $I5005 goto if221_else414 
    set $P5041, fb_tmp_73["%LANG"]
    set $P5043, $P5041
    goto if221_end415
  if221_else414:
    null $P5042
    set $P5043, $P5042
  if221_end415:
    unless_null $P5043, vivi_222416
    new $P5044, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5044
    set $P5043, $P5044
  vivi_222416:
    unless_null $P5043, vivi_223417
    die "Contextual %*LANG not found"
    box $P5045, "Contextual %*LANG not found"
    set $P5043, $P5045
  vivi_223417:
    set $P101, $P5043
  fallback413:
    nqp_get_sc_object $P5047, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    set pkg_lookup_tmp_2, $P5047
    get_who $P5048, pkg_lookup_tmp_2
    exists $I5007, $P5048["NQP"]
    unless $I5007 goto if225_else420 
    get_who $P5050, pkg_lookup_tmp_2
    set $P5049, $P5050["NQP"]
    set $P5052, $P5049
    goto if225_end421
  if225_else420:
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5052, $P5051
  if225_end421:
    get_who $P5046, $P5052
    set fb_tmp_74, $P5046
    repr_defined $I5006, fb_tmp_74
    unless $I5006 goto if224_else418 
    set $P5053, fb_tmp_74["RegexActions"]
    set $P5055, $P5053
    goto if224_end419
  if224_else418:
    null $P5054
    set $P5055, $P5054
  if224_end419:
    unless_null $P5055, vivi_226422
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5055, $P5056
  vivi_226422:
    set $P101["Regex-actions"], $P5055
    unless_null $P101, fallback423
    nqp_get_sc_object $P5058, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5057, $P5058
    set pkg_viv_tmp_13, $P5057
    set fb_tmp_75, pkg_viv_tmp_13
    repr_defined $I5008, fb_tmp_75
    unless $I5008 goto if227_else424 
    set $P5059, fb_tmp_75["%LANG"]
    set $P5061, $P5059
    goto if227_end425
  if227_else424:
    null $P5060
    set $P5061, $P5060
  if227_end425:
    unless_null $P5061, vivi_228426
    new $P5062, 'Hash'
    set pkg_viv_tmp_13["%LANG"], $P5062
    set $P5061, $P5062
  vivi_228426:
    unless_null $P5061, vivi_229427
    die "Contextual %*LANG not found"
    box $P5063, "Contextual %*LANG not found"
    set $P5061, $P5063
  vivi_229427:
    set $P101, $P5061
  fallback423:
    nqp_get_sc_object $P5064, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    set $P101["MAIN"], $P5064
    unless_null $P101, fallback428
    nqp_get_sc_object $P5066, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_14, $P5065
    set fb_tmp_76, pkg_viv_tmp_14
    repr_defined $I5009, fb_tmp_76
    unless $I5009 goto if230_else429 
    set $P5067, fb_tmp_76["%LANG"]
    set $P5069, $P5067
    goto if230_end430
  if230_else429:
    null $P5068
    set $P5069, $P5068
  if230_end430:
    unless_null $P5069, vivi_231431
    new $P5070, 'Hash'
    set pkg_viv_tmp_14["%LANG"], $P5070
    set $P5069, $P5070
  vivi_231431:
    unless_null $P5069, vivi_232432
    die "Contextual %*LANG not found"
    box $P5071, "Contextual %*LANG not found"
    set $P5069, $P5071
  vivi_232432:
    set $P101, $P5069
  fallback428:
    nqp_get_sc_object $P5073, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    set pkg_lookup_tmp_3, $P5073
    get_who $P5074, pkg_lookup_tmp_3
    exists $I5011, $P5074["NQP"]
    unless $I5011 goto if234_else435 
    get_who $P5076, pkg_lookup_tmp_3
    set $P5075, $P5076["NQP"]
    set $P5078, $P5075
    goto if234_end436
  if234_else435:
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5078, $P5077
  if234_end436:
    get_who $P5072, $P5078
    set fb_tmp_77, $P5072
    repr_defined $I5010, fb_tmp_77
    unless $I5010 goto if233_else433 
    set $P5079, fb_tmp_77["Actions"]
    set $P5081, $P5079
    goto if233_end434
  if233_else433:
    null $P5080
    set $P5081, $P5080
  if233_end434:
    unless_null $P5081, vivi_235437
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5081, $P5082
  vivi_235437:
    set $P101["MAIN-actions"], $P5081
    unless_null $P102, fallback443
    nqp_get_sc_object $P5091, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5090, $P5091
    set pkg_viv_tmp_16, $P5090
    set fb_tmp_79, pkg_viv_tmp_16
    repr_defined $I5013, fb_tmp_79
    unless $I5013 goto if239_else444 
    set $P5092, fb_tmp_79["%HOW"]
    set $P5094, $P5092
    goto if239_end445
  if239_else444:
    null $P5093
    set $P5094, $P5093
  if239_end445:
    unless_null $P5094, vivi_240446
    new $P5095, 'Hash'
    set pkg_viv_tmp_16["%HOW"], $P5095
    set $P5094, $P5095
  vivi_240446:
    unless_null $P5094, vivi_241447
    die "Contextual %*HOW not found"
    box $P5096, "Contextual %*HOW not found"
    set $P5094, $P5096
  vivi_241447:
    set $P102, $P5094
  fallback443:
    get_knowhow $P5097
    set $P102["knowhow"], $P5097
    unless_null $P102, fallback448
    nqp_get_sc_object $P5099, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_17, $P5098
    set fb_tmp_80, pkg_viv_tmp_17
    repr_defined $I5014, fb_tmp_80
    unless $I5014 goto if242_else449 
    set $P5100, fb_tmp_80["%HOW"]
    set $P5102, $P5100
    goto if242_end450
  if242_else449:
    null $P5101
    set $P5102, $P5101
  if242_end450:
    unless_null $P5102, vivi_243451
    new $P5103, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5103
    set $P5102, $P5103
  vivi_243451:
    unless_null $P5102, vivi_244452
    die "Contextual %*HOW not found"
    box $P5104, "Contextual %*HOW not found"
    set $P5102, $P5104
  vivi_244452:
    set $P102, $P5102
  fallback448:
    get_knowhow_attribute $P5105
    set $P102["knowhow-attr"], $P5105
    find_dynamic_lex $P5106, "$?FILES"
    set $P103, $P5106
.annotate 'line', 768
    nqp_decontainerize $P5107, _lex_param_0
    $P5108 = $P5107."target"()
    set $S5003, $P5108
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5109, "%*COMPILING"
    unless_null $P5109, fallback459
    nqp_get_sc_object $P5111, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_18, $P5110
    set fb_tmp_83, pkg_viv_tmp_18
    repr_defined $I5017, fb_tmp_83
    unless $I5017 goto if248_else460 
    set $P5112, fb_tmp_83["%COMPILING"]
    set $P5114, $P5112
    goto if248_end461
  if248_else460:
    null $P5113
    set $P5114, $P5113
  if248_end461:
    unless_null $P5114, vivi_249462
    new $P5115, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5115
    set $P5114, $P5115
  vivi_249462:
    unless_null $P5114, vivi_250463
    die "Contextual %*COMPILING not found"
    box $P5116, "Contextual %*COMPILING not found"
    set $P5114, $P5116
  vivi_250463:
    set $P5109, $P5114
  fallback459:
    set fb_tmp_82, $P5109
    repr_defined $I5016, fb_tmp_82
    unless $I5016 goto if247_else457 
    set $P5117, fb_tmp_82["%?OPTIONS"]
    set $P5119, $P5117
    goto if247_end458
  if247_else457:
    null $P5118
    set $P5119, $P5118
  if247_end458:
    unless_null $P5119, vivi_251464
    nqp_get_sc_object $P5120, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5119, $P5120
  vivi_251464:
    set fb_tmp_81, $P5119
    repr_defined $I5015, fb_tmp_81
    unless $I5015 goto if246_else455 
    set $P5121, fb_tmp_81["stable-sc"]
    set $P5123, $P5121
    goto if246_end456
  if246_else455:
    null $P5122
    set $P5123, $P5122
  if246_end456:
    unless_null $P5123, vivi_252465
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5123, $P5124
  vivi_252465:
    unless $P5123 goto if245_else453 
    set $S5006, ""
    goto if245_end454
  if245_else453:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if245_end454:
    concat $S5001, $S5002, $S5006
    box $P5125, $S5001
    set $P104, $P5125
    isnull $I5018, $P103
    unless $I5018 goto if253_else466 
.annotate 'line', 771
    nqp_get_sc_object $P5126, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    $P5127 = $P5126."new"($P104 :named("handle"))
    set $P5130, $P5127
    goto if253_end467
  if253_else466:
.annotate 'line', 772
    nqp_get_sc_object $P5128, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    $P5129 = $P5128."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5130, $P5129
  if253_end467:
    set $P105, $P5130
    box $P5131, ""
    set $P106, $P5131
    box $P5132, ""
    set $P107, $P5132
    box $P5133, ""
    set $P108, $P5133
    box $P5134, 0
    set $P109, $P5134
    box $P5135, 0
    set $P110, $P5135
    box $P5136, 0
    set $P111, $P5136
    box $P5137, 0
    set $P112, $P5137
.annotate 'line', 782
    nqp_decontainerize $P5145, _lex_param_0
    $P5146 = $P5145."comp_unit"()
    .return ($P5146) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 787
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx257_start
    .local string rx257_tgt
    .local int rx257_pos
    .local int rx257_off
    .local int rx257_eos
    .local int rx257_rep
    .local pmc rx257_cur
    .local pmc rx257_curclass
    .local pmc rx257_bstack
    .local pmc rx257_cstack
    rx257_start = self."!cursor_start_all"()
    set rx257_cur, rx257_start[0]
    set rx257_tgt, rx257_start[1]
    set rx257_pos, rx257_start[2]
    set rx257_curclass, rx257_start[3]
    set rx257_bstack, rx257_start[4]
    set $I19, rx257_start[5]
    store_lex unicode:"$\x{a2}", rx257_cur
    length rx257_eos, rx257_tgt
    eq $I19, 1, rx257_restart475
    gt rx257_pos, rx257_eos, rx257_fail476
    repr_get_attr_int $I11, self, rx257_curclass, "$!from"
    ne $I11, -1, rxscan258_done482
    goto rxscan258_scan481
  rxscan258_loop480:
    inc rx257_pos
    gt rx257_pos, rx257_eos, rx257_fail476
    repr_bind_attr_int rx257_cur, rx257_curclass, "$!from", rx257_pos
  rxscan258_scan481:
    nqp_rxmark rx257_bstack, rxscan258_loop480, rx257_pos, 0
  rxscan258_done482:
    repr_bind_attr_int rx257_cur, rx257_curclass, "$!pos", rx257_pos
    $P11 = rx257_cur."ident"()
    repr_get_attr_int $I11, $P11, rx257_curclass, "$!pos"
    lt $I11, 0, rx257_fail476
    repr_get_attr_int rx257_pos, $P11, rx257_curclass, "$!pos"
    nqp_rxmark rx257_bstack, rxquantr260_done485, rx257_pos, 0
  rxquantr260_loop484:
    ge rx257_pos, rx257_eos, rx257_fail476
    substr $S11, rx257_tgt, rx257_pos, 1
    index $I11, ucs4:"-'", $S11
    lt $I11, 0, rx257_fail476
    inc rx257_pos
    repr_bind_attr_int rx257_cur, rx257_curclass, "$!pos", rx257_pos
    $P11 = rx257_cur."ident"()
    repr_get_attr_int $I11, $P11, rx257_curclass, "$!pos"
    lt $I11, 0, rx257_fail476
    repr_get_attr_int rx257_pos, $P11, rx257_curclass, "$!pos"
    nqp_rxpeek $I19, rx257_bstack, rxquantr260_done485
    inc $I19
    inc $I19
    set rx257_rep, rx257_bstack[$I19]
    nqp_rxcommit rx257_bstack, rxquantr260_done485
    inc rx257_rep
    nqp_rxmark rx257_bstack, rxquantr260_done485, rx257_pos, rx257_rep
    goto rxquantr260_loop484
  rxquantr260_done485:
    rx257_cur."!cursor_pass"(rx257_pos, "identifier", 'backtrack'=>1)
    .return (rx257_cur)
  rx257_restart475:
    repr_get_attr_obj rx257_cstack, rx257_cur, rx257_curclass, "$!cstack"
  rx257_fail476:
    unless rx257_bstack, rx257_done474
    pop $I19, rx257_bstack
    if_null rx257_cstack, rx257_cstack_done479
    unless rx257_cstack, rx257_cstack_done479
    dec $I19
    set $P11, rx257_cstack[$I19]
  rx257_cstack_done479:
    pop rx257_rep, rx257_bstack
    pop rx257_pos, rx257_bstack
    pop $I19, rx257_bstack
    lt rx257_pos, -1, rx257_done474
    lt rx257_pos, 0, rx257_fail476
    eq $I19, 0, rx257_fail476
    nqp_islist $I20, rx257_cstack
    unless $I20, rx257_jump477
    elements $I18, rx257_bstack
    le $I18, 0, rx257_cut478
    dec $I18
    set $I18, rx257_bstack[$I18]
  rx257_cut478:
    assign rx257_cstack, $I18
  rx257_jump477:
    jump $I19
  rx257_done474:
    rx257_cur."!cursor_fail"()
    .return (rx257_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 789
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx262_start
    .local string rx262_tgt
    .local int rx262_pos
    .local int rx262_off
    .local int rx262_eos
    .local int rx262_rep
    .local pmc rx262_cur
    .local pmc rx262_curclass
    .local pmc rx262_bstack
    .local pmc rx262_cstack
    rx262_start = self."!cursor_start_all"()
    set rx262_cur, rx262_start[0]
    set rx262_tgt, rx262_start[1]
    set rx262_pos, rx262_start[2]
    set rx262_curclass, rx262_start[3]
    set rx262_bstack, rx262_start[4]
    set $I19, rx262_start[5]
    store_lex unicode:"$\x{a2}", rx262_cur
    length rx262_eos, rx262_tgt
    eq $I19, 1, rx262_restart489
    gt rx262_pos, rx262_eos, rx262_fail490
    repr_get_attr_int $I11, self, rx262_curclass, "$!from"
    ne $I11, -1, rxscan263_done496
    goto rxscan263_scan495
  rxscan263_loop494:
    inc rx262_pos
    gt rx262_pos, rx262_eos, rx262_fail490
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!from", rx262_pos
  rxscan263_scan495:
    nqp_rxmark rx262_bstack, rxscan263_loop494, rx262_pos, 0
  rxscan263_done496:
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail490
    nqp_rxmark rx262_bstack, rxsubrule264_pass497, -1, 0
  rxsubrule264_pass497:
    rx262_cstack = rx262_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx262_pos, $P11, rx262_curclass, "$!pos"
    nqp_rxmark rx262_bstack, rxquantr265_done499, rx262_pos, 0
  rxquantr265_loop498:
    add $I11, rx262_pos, 2
    gt $I11, rx262_eos, rx262_fail490
    substr $S10, rx262_tgt, rx262_pos, 2
    ne $S10, ucs4:"::", rx262_fail490
    add rx262_pos, 2
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail490
    nqp_rxmark rx262_bstack, rxsubrule266_pass500, -1, 0
  rxsubrule266_pass500:
    rx262_cstack = rx262_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx262_pos, $P11, rx262_curclass, "$!pos"
    nqp_rxpeek $I19, rx262_bstack, rxquantr265_done499
    inc $I19
    inc $I19
    set rx262_rep, rx262_bstack[$I19]
    nqp_rxcommit rx262_bstack, rxquantr265_done499
    inc rx262_rep
    nqp_rxmark rx262_bstack, rxquantr265_done499, rx262_pos, rx262_rep
    goto rxquantr265_loop498
  rxquantr265_done499:
    rx262_cur."!cursor_pass"(rx262_pos, "name", 'backtrack'=>1)
    .return (rx262_cur)
  rx262_restart489:
    repr_get_attr_obj rx262_cstack, rx262_cur, rx262_curclass, "$!cstack"
  rx262_fail490:
    unless rx262_bstack, rx262_done488
    pop $I19, rx262_bstack
    if_null rx262_cstack, rx262_cstack_done493
    unless rx262_cstack, rx262_cstack_done493
    dec $I19
    set $P11, rx262_cstack[$I19]
  rx262_cstack_done493:
    pop rx262_rep, rx262_bstack
    pop rx262_pos, rx262_bstack
    pop $I19, rx262_bstack
    lt rx262_pos, -1, rx262_done488
    lt rx262_pos, 0, rx262_fail490
    eq $I19, 0, rx262_fail490
    nqp_islist $I20, rx262_cstack
    unless $I20, rx262_jump491
    elements $I18, rx262_bstack
    le $I18, 0, rx262_cut492
    dec $I18
    set $I18, rx262_bstack[$I18]
  rx262_cut492:
    assign rx262_cstack, $I18
  rx262_jump491:
    jump $I19
  rx262_done488:
    rx262_cur."!cursor_fail"()
    .return (rx262_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 791
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx267_start
    .local string rx267_tgt
    .local int rx267_pos
    .local int rx267_off
    .local int rx267_eos
    .local int rx267_rep
    .local pmc rx267_cur
    .local pmc rx267_curclass
    .local pmc rx267_bstack
    .local pmc rx267_cstack
    rx267_start = self."!cursor_start_all"()
    set rx267_cur, rx267_start[0]
    set rx267_tgt, rx267_start[1]
    set rx267_pos, rx267_start[2]
    set rx267_curclass, rx267_start[3]
    set rx267_bstack, rx267_start[4]
    set $I19, rx267_start[5]
    store_lex unicode:"$\x{a2}", rx267_cur
    length rx267_eos, rx267_tgt
    eq $I19, 1, rx267_restart503
    gt rx267_pos, rx267_eos, rx267_fail504
    repr_get_attr_int $I11, self, rx267_curclass, "$!from"
    ne $I11, -1, rxscan268_done510
    goto rxscan268_scan509
  rxscan268_loop508:
    inc rx267_pos
    gt rx267_pos, rx267_eos, rx267_fail504
    repr_bind_attr_int rx267_cur, rx267_curclass, "$!from", rx267_pos
  rxscan268_scan509:
    nqp_rxmark rx267_bstack, rxscan268_loop508, rx267_pos, 0
  rxscan268_done510:
    repr_bind_attr_int rx267_cur, rx267_curclass, "$!pos", rx267_pos
    $P11 = rx267_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx267_curclass, "$!pos"
    lt $I11, 0, rx267_fail504
    nqp_rxmark rx267_bstack, rxsubrule269_pass511, -1, 0
  rxsubrule269_pass511:
    rx267_cstack = rx267_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx267_pos, $P11, rx267_curclass, "$!pos"
    nqp_rxmark rx267_bstack, rxquantr270_done513, rx267_pos, 0
  rxquantr270_loop512:
    repr_bind_attr_int rx267_cur, rx267_curclass, "$!pos", rx267_pos
    $P11 = rx267_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx267_curclass, "$!pos"
    lt $I11, 0, rx267_fail504
    goto rxsubrule271_pass514
  rxsubrule271_back515:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx267_curclass, "$!pos"
    lt $I11, 0, rx267_fail504
  rxsubrule271_pass514:
    rx267_cstack = rx267_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule271_back515
    push rx267_bstack, $I11
    push rx267_bstack, 0
    push rx267_bstack, rx267_pos
    elements $I11, rx267_cstack
    push rx267_bstack, $I11
    repr_get_attr_int rx267_pos, $P11, rx267_curclass, "$!pos"
    nqp_rxpeek $I19, rx267_bstack, rxquantr270_done513
    inc $I19
    inc $I19
    set rx267_rep, rx267_bstack[$I19]
    nqp_rxcommit rx267_bstack, rxquantr270_done513
    inc rx267_rep
  rxquantr270_done513:
    rx267_cur."!cursor_pass"(rx267_pos, "deflongname", 'backtrack'=>1)
    .return (rx267_cur)
  rx267_restart503:
    repr_get_attr_obj rx267_cstack, rx267_cur, rx267_curclass, "$!cstack"
  rx267_fail504:
    unless rx267_bstack, rx267_done502
    pop $I19, rx267_bstack
    if_null rx267_cstack, rx267_cstack_done507
    unless rx267_cstack, rx267_cstack_done507
    dec $I19
    set $P11, rx267_cstack[$I19]
  rx267_cstack_done507:
    pop rx267_rep, rx267_bstack
    pop rx267_pos, rx267_bstack
    pop $I19, rx267_bstack
    lt rx267_pos, -1, rx267_done502
    lt rx267_pos, 0, rx267_fail504
    eq $I19, 0, rx267_fail504
    nqp_islist $I20, rx267_cstack
    unless $I20, rx267_jump505
    elements $I18, rx267_bstack
    le $I18, 0, rx267_cut506
    dec $I18
    set $I18, rx267_bstack[$I18]
  rx267_cut506:
    assign rx267_cstack, $I18
  rx267_jump505:
    jump $I19
  rx267_done502:
    rx267_cur."!cursor_fail"()
    .return (rx267_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 795
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx272_start
    .local string rx272_tgt
    .local int rx272_pos
    .local int rx272_off
    .local int rx272_eos
    .local int rx272_rep
    .local pmc rx272_cur
    .local pmc rx272_curclass
    .local pmc rx272_bstack
    .local pmc rx272_cstack
    rx272_start = self."!cursor_start_all"()
    set rx272_cur, rx272_start[0]
    set rx272_tgt, rx272_start[1]
    set rx272_pos, rx272_start[2]
    set rx272_curclass, rx272_start[3]
    set rx272_bstack, rx272_start[4]
    set $I19, rx272_start[5]
    store_lex unicode:"$\x{a2}", rx272_cur
    length rx272_eos, rx272_tgt
    eq $I19, 1, rx272_restart518
    gt rx272_pos, rx272_eos, rx272_fail519
    repr_get_attr_int $I11, self, rx272_curclass, "$!from"
    ne $I11, -1, rxscan273_done525
    goto rxscan273_scan524
  rxscan273_loop523:
    inc rx272_pos
    gt rx272_pos, rx272_eos, rx272_fail519
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!from", rx272_pos
  rxscan273_scan524:
    nqp_rxmark rx272_bstack, rxscan273_loop523, rx272_pos, 0
  rxscan273_done525:
    nqp_rxmark rx272_bstack, rxquantr274_done527, rx272_pos, 0
  rxquantr274_loop526:
    nqp_rxmark rx272_bstack, rxquantr275_done529, rx272_pos, 0
  rxquantr275_loop528:
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."unv"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
    goto rxsubrule276_pass530
  rxsubrule276_back531:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
  rxsubrule276_pass530:
    rx272_cstack = rx272_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule276_back531
    push rx272_bstack, $I11
    push rx272_bstack, 0
    push rx272_bstack, rx272_pos
    elements $I11, rx272_cstack
    push rx272_bstack, $I11
    repr_get_attr_int rx272_pos, $P11, rx272_curclass, "$!pos"
    nqp_rxpeek $I19, rx272_bstack, rxquantr275_done529
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr275_done529
    inc rx272_rep
  rxquantr275_done529:
    is_cclass $I11, .CCLASS_NEWLINE, rx272_tgt, rx272_pos
    if $I11, rxanchor277_done532
    ne rx272_pos, rx272_eos, rx272_fail519
    eq rx272_pos, 0, rxanchor277_done532
    sub $I11, rx272_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx272_tgt, $I11
    if $I11, rx272_fail519
  rxanchor277_done532:
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."ws"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
    repr_get_attr_int rx272_pos, $P11, rx272_curclass, "$!pos"
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail519
    nqp_rxpeek $I19, rx272_bstack, rxquantr274_done527
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr274_done527
    inc rx272_rep
  rxquantr274_done527:
    rx272_cur."!cursor_pass"(rx272_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx272_cur)
  rx272_restart518:
    repr_get_attr_obj rx272_cstack, rx272_cur, rx272_curclass, "$!cstack"
  rx272_fail519:
    unless rx272_bstack, rx272_done517
    pop $I19, rx272_bstack
    if_null rx272_cstack, rx272_cstack_done522
    unless rx272_cstack, rx272_cstack_done522
    dec $I19
    set $P11, rx272_cstack[$I19]
  rx272_cstack_done522:
    pop rx272_rep, rx272_bstack
    pop rx272_pos, rx272_bstack
    pop $I19, rx272_bstack
    lt rx272_pos, -1, rx272_done517
    lt rx272_pos, 0, rx272_fail519
    eq $I19, 0, rx272_fail519
    nqp_islist $I20, rx272_cstack
    unless $I20, rx272_jump520
    elements $I18, rx272_bstack
    le $I18, 0, rx272_cut521
    dec $I18
    set $I18, rx272_bstack[$I18]
  rx272_cut521:
    assign rx272_cstack, $I18
  rx272_jump520:
    jump $I19
  rx272_done517:
    rx272_cur."!cursor_fail"()
    .return (rx272_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 801
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx279_start
    .local string rx279_tgt
    .local int rx279_pos
    .local int rx279_off
    .local int rx279_eos
    .local int rx279_rep
    .local pmc rx279_cur
    .local pmc rx279_curclass
    .local pmc rx279_bstack
    .local pmc rx279_cstack
    rx279_start = self."!cursor_start_all"()
    set rx279_cur, rx279_start[0]
    set rx279_tgt, rx279_start[1]
    set rx279_pos, rx279_start[2]
    set rx279_curclass, rx279_start[3]
    set rx279_bstack, rx279_start[4]
    set $I19, rx279_start[5]
    store_lex unicode:"$\x{a2}", rx279_cur
    length rx279_eos, rx279_tgt
    eq $I19, 1, rx279_restart536
    gt rx279_pos, rx279_eos, rx279_fail537
    repr_get_attr_int $I11, self, rx279_curclass, "$!from"
    ne $I11, -1, rxscan280_done543
    goto rxscan280_scan542
  rxscan280_loop541:
    inc rx279_pos
    gt rx279_pos, rx279_eos, rx279_fail537
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!from", rx279_pos
  rxscan280_scan542:
    nqp_rxmark rx279_bstack, rxscan280_loop541, rx279_pos, 0
  rxscan280_done543:
  alt281_0545:
    nqp_rxmark rx279_bstack, alt281_1546, rx279_pos, 0
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    lt $I11, 0, rx279_fail537
    goto alt281_end544
  alt281_1546:
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."ww"()
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    ge $I11, 0, rx279_fail537
    nqp_rxmark rx279_bstack, rxquantr282_done548, rx279_pos, 0
  rxquantr282_loop547:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt283_0550
    nqp_push_label $P11, alt283_1553
    nqp_push_label $P11, alt283_2556
    nqp_push_label $P11, alt283_3559
    nqp_rxmark rx279_bstack, alt283_end549, -1, 0
    rx279_cur."!alt"(rx279_pos, "alt_nfa__1_1382959280.41643", $P11)
    goto rx279_fail537
  alt283_0550:
    nqp_rxmark rx279_bstack, rxquantr284_done552, -1, 0
  rxquantr284_loop551:
    ge rx279_pos, rx279_eos, rx279_fail537
    substr $S11, rx279_tgt, rx279_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx279_fail537
    inc rx279_pos
    nqp_rxpeek $I19, rx279_bstack, rxquantr284_done552
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr284_done552
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr284_done552, rx279_pos, rx279_rep
    goto rxquantr284_loop551
  rxquantr284_done552:
    goto alt283_end549
  alt283_1553:
    add $I11, rx279_pos, 1
    gt $I11, rx279_eos, rx279_fail537
    substr $S10, rx279_tgt, rx279_pos, 1
    ne $S10, ucs4:"#", rx279_fail537
    add rx279_pos, 1
    nqp_rxmark rx279_bstack, rxquantr285_done555, rx279_pos, 0
  rxquantr285_loop554:
    ge rx279_pos, rx279_eos, rx279_fail537
    is_cclass $I11, .CCLASS_NEWLINE, rx279_tgt, rx279_pos
    if $I11, rx279_fail537
    substr $S10, rx279_tgt, rx279_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx279_pos, $I11
    add rx279_pos, 1
    nqp_rxpeek $I19, rx279_bstack, rxquantr285_done555
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr285_done555
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr285_done555, rx279_pos, rx279_rep
    goto rxquantr285_loop554
  rxquantr285_done555:
    goto alt283_end549
  alt283_2556:
    eq rx279_pos, 0, rxanchor286_done557
    ge rx279_pos, rx279_eos, rx279_fail537
    sub $I11, rx279_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx279_tgt, $I11
    unless $I11, rx279_fail537
  rxanchor286_done557:
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    lt $I11, 0, rx279_fail537
    repr_get_attr_int rx279_pos, $P11, rx279_curclass, "$!pos"
    goto alt283_end549
  alt283_3559:
    nqp_rxmark rx279_bstack, rxquantr288_done561, -1, 0
  rxquantr288_loop560:
    ge rx279_pos, rx279_eos, rx279_fail537
    substr $S11, rx279_tgt, rx279_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx279_fail537
    inc rx279_pos
    nqp_rxpeek $I19, rx279_bstack, rxquantr288_done561
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr288_done561
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr288_done561, rx279_pos, rx279_rep
    goto rxquantr288_loop560
  rxquantr288_done561:
    goto alt283_end549
  alt283_end549:
    nqp_rxpeek $I19, rx279_bstack, rxquantr282_done548
    inc $I19
    inc $I19
    set rx279_rep, rx279_bstack[$I19]
    nqp_rxcommit rx279_bstack, rxquantr282_done548
    inc rx279_rep
    nqp_rxmark rx279_bstack, rxquantr282_done548, rx279_pos, rx279_rep
    goto rxquantr282_loop547
  rxquantr282_done548:
    repr_bind_attr_int rx279_cur, rx279_curclass, "$!pos", rx279_pos
    $P11 = rx279_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx279_curclass, "$!pos"
    lt $I11, 0, rx279_fail537
  alt281_end544:
    rx279_cur."!cursor_pass"(rx279_pos, "ws", 'backtrack'=>1)
    .return (rx279_cur)
  rx279_restart536:
    repr_get_attr_obj rx279_cstack, rx279_cur, rx279_curclass, "$!cstack"
  rx279_fail537:
    unless rx279_bstack, rx279_done535
    pop $I19, rx279_bstack
    if_null rx279_cstack, rx279_cstack_done540
    unless rx279_cstack, rx279_cstack_done540
    dec $I19
    set $P11, rx279_cstack[$I19]
  rx279_cstack_done540:
    pop rx279_rep, rx279_bstack
    pop rx279_pos, rx279_bstack
    pop $I19, rx279_bstack
    lt rx279_pos, -1, rx279_done535
    lt rx279_pos, 0, rx279_fail537
    eq $I19, 0, rx279_fail537
    nqp_islist $I20, rx279_cstack
    unless $I20, rx279_jump538
    elements $I18, rx279_bstack
    le $I18, 0, rx279_cut539
    dec $I18
    set $I18, rx279_bstack[$I18]
  rx279_cut539:
    assign rx279_cstack, $I18
  rx279_jump538:
    jump $I19
  rx279_done535:
    rx279_cur."!cursor_fail"()
    .return (rx279_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 812
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx289_start
    .local string rx289_tgt
    .local int rx289_pos
    .local int rx289_off
    .local int rx289_eos
    .local int rx289_rep
    .local pmc rx289_cur
    .local pmc rx289_curclass
    .local pmc rx289_bstack
    .local pmc rx289_cstack
    rx289_start = self."!cursor_start_all"()
    set rx289_cur, rx289_start[0]
    set rx289_tgt, rx289_start[1]
    set rx289_pos, rx289_start[2]
    set rx289_curclass, rx289_start[3]
    set rx289_bstack, rx289_start[4]
    set $I19, rx289_start[5]
    store_lex unicode:"$\x{a2}", rx289_cur
    length rx289_eos, rx289_tgt
    eq $I19, 1, rx289_restart564
    gt rx289_pos, rx289_eos, rx289_fail565
    repr_get_attr_int $I11, self, rx289_curclass, "$!from"
    ne $I11, -1, rxscan290_done571
    goto rxscan290_scan570
  rxscan290_loop569:
    inc rx289_pos
    gt rx289_pos, rx289_eos, rx289_fail565
    repr_bind_attr_int rx289_cur, rx289_curclass, "$!from", rx289_pos
  rxscan290_scan570:
    nqp_rxmark rx289_bstack, rxscan290_loop569, rx289_pos, 0
  rxscan290_done571:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt291_0573
    nqp_push_label $P11, alt291_1591
    nqp_push_label $P11, alt291_2596
    nqp_rxmark rx289_bstack, alt291_end572, -1, 0
    rx289_cur."!alt"(rx289_pos, "alt_nfa__3_1382959280.43572", $P11)
    goto rx289_fail565
  alt291_0573:
    eq rx289_pos, 0, rxanchor292_done574
    ge rx289_pos, rx289_eos, rx289_fail565
    sub $I11, rx289_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx289_tgt, $I11
    unless $I11, rx289_fail565
  rxanchor292_done574:
    .const 'Sub' $P5001 = 'cuid_42_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx289_cur, rx289_curclass, "$!pos", rx289_pos
    $P11 = rx289_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx289_curclass, "$!pos"
    lt $I11, 0, rx289_fail565
    repr_bind_attr_int rx289_cur, rx289_curclass, "$!pos", rx289_pos
    $P11 = rx289_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx289_curclass, "$!pos"
    lt $I11, 0, rx289_fail565
    repr_get_attr_int rx289_pos, $P11, rx289_curclass, "$!pos"
    goto alt291_end572
  alt291_1591:
    nqp_rxmark rx289_bstack, rxquantr298_done593, rx289_pos, 0
  rxquantr298_loop592:
    ge rx289_pos, rx289_eos, rx289_fail565
    substr $S11, rx289_tgt, rx289_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx289_fail565
    inc rx289_pos
    nqp_rxpeek $I19, rx289_bstack, rxquantr298_done593
    inc $I19
    inc $I19
    set rx289_rep, rx289_bstack[$I19]
    nqp_rxcommit rx289_bstack, rxquantr298_done593
    inc rx289_rep
    nqp_rxmark rx289_bstack, rxquantr298_done593, rx289_pos, rx289_rep
    goto rxquantr298_loop592
  rxquantr298_done593:
    add $I11, rx289_pos, 1
    gt $I11, rx289_eos, rx289_fail565
    substr $S10, rx289_tgt, rx289_pos, 1
    ne $S10, ucs4:"#", rx289_fail565
    add rx289_pos, 1
    nqp_rxmark rx289_bstack, rxquantr299_done595, rx289_pos, 0
  rxquantr299_loop594:
    ge rx289_pos, rx289_eos, rx289_fail565
    is_cclass $I11, .CCLASS_NEWLINE, rx289_tgt, rx289_pos
    if $I11, rx289_fail565
    substr $S10, rx289_tgt, rx289_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx289_pos, $I11
    add rx289_pos, 1
    nqp_rxpeek $I19, rx289_bstack, rxquantr299_done595
    inc $I19
    inc $I19
    set rx289_rep, rx289_bstack[$I19]
    nqp_rxcommit rx289_bstack, rxquantr299_done595
    inc rx289_rep
    nqp_rxmark rx289_bstack, rxquantr299_done595, rx289_pos, rx289_rep
    goto rxquantr299_loop594
  rxquantr299_done595:
    goto alt291_end572
  alt291_2596:
    nqp_rxmark rx289_bstack, rxquantr300_done598, -1, 0
  rxquantr300_loop597:
    ge rx289_pos, rx289_eos, rx289_fail565
    substr $S11, rx289_tgt, rx289_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx289_fail565
    inc rx289_pos
    nqp_rxpeek $I19, rx289_bstack, rxquantr300_done598
    inc $I19
    inc $I19
    set rx289_rep, rx289_bstack[$I19]
    nqp_rxcommit rx289_bstack, rxquantr300_done598
    inc rx289_rep
    nqp_rxmark rx289_bstack, rxquantr300_done598, rx289_pos, rx289_rep
    goto rxquantr300_loop597
  rxquantr300_done598:
    goto alt291_end572
  alt291_end572:
    nqp_rxcommit rx289_bstack, alt291_end572
    rx289_cur."!cursor_pass"(rx289_pos, "unv", 'backtrack'=>1)
    .return (rx289_cur)
  rx289_restart564:
    repr_get_attr_obj rx289_cstack, rx289_cur, rx289_curclass, "$!cstack"
  rx289_fail565:
    unless rx289_bstack, rx289_done563
    pop $I19, rx289_bstack
    if_null rx289_cstack, rx289_cstack_done568
    unless rx289_cstack, rx289_cstack_done568
    dec $I19
    set $P11, rx289_cstack[$I19]
  rx289_cstack_done568:
    pop rx289_rep, rx289_bstack
    pop rx289_pos, rx289_bstack
    pop $I19, rx289_bstack
    lt rx289_pos, -1, rx289_done563
    lt rx289_pos, 0, rx289_fail565
    eq $I19, 0, rx289_fail565
    nqp_islist $I20, rx289_cstack
    unless $I20, rx289_jump566
    elements $I18, rx289_bstack
    le $I18, 0, rx289_cut567
    dec $I18
    set $I18, rx289_bstack[$I18]
  rx289_cut567:
    assign rx289_cstack, $I18
  rx289_jump566:
    jump $I19
  rx289_done563:
    rx289_cur."!cursor_fail"()
    .return (rx289_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1382959278.72036") :anon :lex :outer("cuid_41_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx293_start
    .local string rx293_tgt
    .local int rx293_pos
    .local int rx293_off
    .local int rx293_eos
    .local int rx293_rep
    .local pmc rx293_cur
    .local pmc rx293_curclass
    .local pmc rx293_bstack
    .local pmc rx293_cstack
    rx293_start = self."!cursor_start_all"()
    set rx293_cur, rx293_start[0]
    set rx293_tgt, rx293_start[1]
    set rx293_pos, rx293_start[2]
    set rx293_curclass, rx293_start[3]
    set rx293_bstack, rx293_start[4]
    set $I19, rx293_start[5]
    store_lex unicode:"$\x{a2}", rx293_cur
    length rx293_eos, rx293_tgt
    eq $I19, 1, rx293_restart577
    gt rx293_pos, rx293_eos, rx293_fail578
    repr_get_attr_int $I11, self, rx293_curclass, "$!from"
    ne $I11, -1, rxscan294_done584
    goto rxscan294_scan583
  rxscan294_loop582:
    inc rx293_pos
    gt rx293_pos, rx293_eos, rx293_fail578
    repr_bind_attr_int rx293_cur, rx293_curclass, "$!from", rx293_pos
  rxscan294_scan583:
    nqp_rxmark rx293_bstack, rxscan294_loop582, rx293_pos, 0
  rxscan294_done584:
    nqp_rxmark rx293_bstack, rxquantr295_done586, rx293_pos, 0
  rxquantr295_loop585:
    ge rx293_pos, rx293_eos, rx293_fail578
    substr $S11, rx293_tgt, rx293_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx293_fail578
    inc rx293_pos
    nqp_rxpeek $I19, rx293_bstack, rxquantr295_done586
    inc $I19
    inc $I19
    set rx293_rep, rx293_bstack[$I19]
    nqp_rxcommit rx293_bstack, rxquantr295_done586
    inc rx293_rep
    nqp_rxmark rx293_bstack, rxquantr295_done586, rx293_pos, rx293_rep
    goto rxquantr295_loop585
  rxquantr295_done586:
    add $I11, rx293_pos, 1
    gt $I11, rx293_eos, rx293_fail578
    substr $S10, rx293_tgt, rx293_pos, 1
    ne $S10, ucs4:"=", rx293_fail578
    add rx293_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt296_0588
    nqp_push_label $P11, alt296_1589
    nqp_rxmark rx293_bstack, alt296_end587, -1, 0
    rx293_cur."!alt"(rx293_pos, "alt_nfa__2_1382959280.42648", $P11)
    goto rx293_fail578
  alt296_0588:
    ge rx293_pos, rx293_eos, rx293_fail578
    is_cclass $I11, .CCLASS_WORD, rx293_tgt, rx293_pos
    unless $I11, rx293_fail578
    add rx293_pos, 1
    goto alt296_end587
  alt296_1589:
    add $I11, rx293_pos, 1
    gt $I11, rx293_eos, rx293_fail578
    substr $S10, rx293_tgt, rx293_pos, 1
    ne $S10, ucs4:"\\", rx293_fail578
    add rx293_pos, 1
    goto alt296_end587
  alt296_end587:
    nqp_rxcommit rx293_bstack, alt296_end587
    rx293_cur."!cursor_pass"(rx293_pos, 'backtrack'=>1)
    .return (rx293_cur)
  rx293_restart577:
    repr_get_attr_obj rx293_cstack, rx293_cur, rx293_curclass, "$!cstack"
  rx293_fail578:
    unless rx293_bstack, rx293_done576
    pop $I19, rx293_bstack
    if_null rx293_cstack, rx293_cstack_done581
    unless rx293_cstack, rx293_cstack_done581
    dec $I19
    set $P11, rx293_cstack[$I19]
  rx293_cstack_done581:
    pop rx293_rep, rx293_bstack
    pop rx293_pos, rx293_bstack
    pop $I19, rx293_bstack
    lt rx293_pos, -1, rx293_done576
    lt rx293_pos, 0, rx293_fail578
    eq $I19, 0, rx293_fail578
    nqp_islist $I20, rx293_cstack
    unless $I20, rx293_jump579
    elements $I18, rx293_bstack
    le $I18, 0, rx293_cut580
    dec $I18
    set $I18, rx293_bstack[$I18]
  rx293_cut580:
    assign rx293_cstack, $I18
  rx293_jump579:
    jump $I19
  rx293_done576:
    rx293_cur."!cursor_fail"()
    .return (rx293_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 821
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_411_1382959278.72036' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_44_1382959278.72036' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx301_start
    .local string rx301_tgt
    .local int rx301_pos
    .local int rx301_off
    .local int rx301_eos
    .local int rx301_rep
    .local pmc rx301_cur
    .local pmc rx301_curclass
    .local pmc rx301_bstack
    .local pmc rx301_cstack
    rx301_start = self."!cursor_start_all"()
    set rx301_cur, rx301_start[0]
    set rx301_tgt, rx301_start[1]
    set rx301_pos, rx301_start[2]
    set rx301_curclass, rx301_start[3]
    set rx301_bstack, rx301_start[4]
    set $I19, rx301_start[5]
    store_lex unicode:"$\x{a2}", rx301_cur
    length rx301_eos, rx301_tgt
    eq $I19, 1, rx301_restart601
    gt rx301_pos, rx301_eos, rx301_fail602
    repr_get_attr_int $I11, self, rx301_curclass, "$!from"
    ne $I11, -1, rxscan302_done608
    goto rxscan302_scan607
  rxscan302_loop606:
    inc rx301_pos
    gt rx301_pos, rx301_eos, rx301_fail602
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!from", rx301_pos
  rxscan302_scan607:
    nqp_rxmark rx301_bstack, rxscan302_loop606, rx301_pos, 0
  rxscan302_done608:
    eq rx301_pos, 0, rxanchor303_done609
    ge rx301_pos, rx301_eos, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, $I11
    unless $I11, rx301_fail602
  rxanchor303_done609:
    nqp_rxmark rx301_bstack, rxquantr304_done611, rx301_pos, 0
  rxquantr304_loop610:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr304_done611
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr304_done611
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr304_done611, rx301_pos, rx301_rep
    goto rxquantr304_loop610
  rxquantr304_done611:
    add $I11, rx301_pos, 1
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 1
    ne $S10, ucs4:"=", rx301_fail602
    add rx301_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt305_0613
    nqp_push_label $P11, alt305_1632
    nqp_push_label $P11, alt305_2651
    nqp_push_label $P11, alt305_3673
    nqp_push_label $P11, alt305_4697
    nqp_rxmark rx301_bstack, alt305_end612, -1, 0
    rx301_cur."!alt"(rx301_pos, "alt_nfa__5_1382959280.5181", $P11)
    goto rx301_fail602
  alt305_0613:
    add $I11, rx301_pos, 5
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 5
    ne $S10, ucs4:"begin", rx301_fail602
    add rx301_pos, 5
    nqp_rxmark rx301_bstack, rxquantr306_done615, -1, 0
  rxquantr306_loop614:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr306_done615
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr306_done615
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr306_done615, rx301_pos, rx301_rep
    goto rxquantr306_loop614
  rxquantr306_done615:
    add $I11, rx301_pos, 3
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 3
    ne $S10, ucs4:"END", rx301_fail602
    add rx301_pos, 3
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
  alt308_0618:
    nqp_rxmark rx301_bstack, alt308_1629, rx301_pos, 0
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf309_loop619, rx301_pos, rx301_rep
    goto rxquantf309_done620
  rxquantf309_loop619:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf309_loop619, rx301_pos, rx301_rep
  rxquantf309_done620:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr310_done623, rx301_pos, 0
  rxquantr310_loop622:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr310_done623
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr310_done623
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr310_done623, rx301_pos, rx301_rep
    goto rxquantr310_loop622
  rxquantr310_done623:
    add $I11, rx301_pos, 4
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 4
    ne $S10, ucs4:"=end", rx301_fail602
    add rx301_pos, 4
    nqp_rxmark rx301_bstack, rxquantr311_done625, -1, 0
  rxquantr311_loop624:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr311_done625
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr311_done625
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr311_done625, rx301_pos, rx301_rep
    goto rxquantr311_loop624
  rxquantr311_done625:
    add $I11, rx301_pos, 3
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 3
    ne $S10, ucs4:"END", rx301_fail602
    add rx301_pos, 3
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr313_done628, rx301_pos, 0
  rxquantr313_loop627:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr313_done628
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr313_done628
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr313_done628, rx301_pos, rx301_rep
    goto rxquantr313_loop627
  rxquantr313_done628:
    goto alt308_end617
  alt308_1629:
    nqp_rxmark rx301_bstack, rxquantr314_done631, rx301_pos, 0
  rxquantr314_loop630:
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr314_done631
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr314_done631
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr314_done631, rx301_pos, rx301_rep
    goto rxquantr314_loop630
  rxquantr314_done631:
  alt308_end617:
    goto alt305_end612
  alt305_1632:
    add $I11, rx301_pos, 5
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 5
    ne $S10, ucs4:"begin", rx301_fail602
    add rx301_pos, 5
    nqp_rxmark rx301_bstack, rxquantr315_done634, -1, 0
  rxquantr315_loop633:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr315_done634
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr315_done634
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr315_done634, rx301_pos, rx301_rep
    goto rxquantr315_loop633
  rxquantr315_done634:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    nqp_rxmark rx301_bstack, rxsubrule316_pass635, -1, 0
  rxsubrule316_pass635:
    rx301_cstack = rx301_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt317_0637:
    nqp_rxmark rx301_bstack, alt317_1649, rx301_pos, 0
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf318_loop638, rx301_pos, rx301_rep
    goto rxquantf318_done639
  rxquantf318_loop638:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf318_loop638, rx301_pos, rx301_rep
  rxquantf318_done639:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr319_done642, rx301_pos, 0
  rxquantr319_loop641:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr319_done642
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr319_done642
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr319_done642, rx301_pos, rx301_rep
    goto rxquantr319_loop641
  rxquantr319_done642:
    add $I11, rx301_pos, 4
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 4
    ne $S10, ucs4:"=end", rx301_fail602
    add rx301_pos, 4
    nqp_rxmark rx301_bstack, rxquantr320_done644, -1, 0
  rxquantr320_loop643:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr320_done644
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr320_done644
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr320_done644, rx301_pos, rx301_rep
    goto rxquantr320_loop643
  rxquantr320_done644:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr323_done648, rx301_pos, 0
  rxquantr323_loop647:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr323_done648
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr323_done648
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr323_done648, rx301_pos, rx301_rep
    goto rxquantr323_loop647
  rxquantr323_done648:
    goto alt317_end636
  alt317_1649:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt317_end636:
    goto alt305_end612
  alt305_2651:
    add $I11, rx301_pos, 5
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 5
    ne $S10, ucs4:"begin", rx301_fail602
    add rx301_pos, 5
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr326_done654, rx301_pos, 0
  rxquantr326_loop653:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr326_done654
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr326_done654
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr326_done654, rx301_pos, rx301_rep
    goto rxquantr326_loop653
  rxquantr326_done654:
  alt327_0656:
    nqp_rxmark rx301_bstack, alt327_1658, rx301_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rxanchor328_done657
    ne rx301_pos, rx301_eos, rx301_fail602
    eq rx301_pos, 0, rxanchor328_done657
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, $I11
    if $I11, rx301_fail602
  rxanchor328_done657:
    goto alt327_end655
  alt327_1658:
    nqp_rxmark rx301_bstack, alt327_2659, rx301_pos, 0
    add $I11, rx301_pos, 1
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 1
    ne $S10, ucs4:"#", rx301_fail602
    add rx301_pos, 1
    goto alt327_end655
  alt327_2659:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt327_end655:
  alt330_0662:
    nqp_rxmark rx301_bstack, alt330_1671, rx301_pos, 0
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf331_loop663, rx301_pos, rx301_rep
    goto rxquantf331_done664
  rxquantf331_loop663:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf331_loop663, rx301_pos, rx301_rep
  rxquantf331_done664:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr332_done667, rx301_pos, 0
  rxquantr332_loop666:
    ge rx301_pos, rx301_eos, rx301_fail602
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail602
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr332_done667
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr332_done667
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr332_done667, rx301_pos, rx301_rep
    goto rxquantr332_loop666
  rxquantr332_done667:
    add $I11, rx301_pos, 4
    gt $I11, rx301_eos, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 4
    ne $S10, ucs4:"=end", rx301_fail602
    add rx301_pos, 4
    le rx301_pos, 0, rx301_fail602
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail602
    nqp_rxmark rx301_bstack, rxquantr334_done670, rx301_pos, 0
  rxquantr334_loop669:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr334_done670
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr334_done670
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr334_done670, rx301_pos, rx301_rep
    goto rxquantr334_loop669
  rxquantr334_done670:
    goto alt330_end661
  alt330_1671:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt330_end661:
    goto alt305_end612
  alt305_3673:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    nqp_rxmark rx301_bstack, rxsubrule336_pass674, -1, 0
  rxsubrule336_pass674:
    rx301_cstack = rx301_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    store_lex unicode:"$\x{a2}", rx301_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_411_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    set rx301_rep, 0
    nqp_rxmark rx301_bstack, rxquantf337_loop675, rx301_pos, rx301_rep
    goto rxquantf337_done676
  rxquantf337_loop675:
    set $I12, rx301_rep
    ge rx301_pos, rx301_eos, rx301_fail602
    add rx301_pos, 1
    set rx301_rep, $I12
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantf337_loop675, rx301_pos, rx301_rep
  rxquantf337_done676:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    .const 'Sub' $P5004 = 'cuid_44_1382959278.72036' 
    capture_lex $P5004
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    goto alt305_end612
  alt305_4697:
  alt345_0699:
    nqp_rxmark rx301_bstack, alt345_1700, rx301_pos, 0
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_WHITESPACE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail602
    add rx301_pos, 1
    goto alt345_end698
  alt345_1700:
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail602
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
  alt345_end698:
    nqp_rxmark rx301_bstack, rxquantr347_done703, rx301_pos, 0
  rxquantr347_loop702:
    ge rx301_pos, rx301_eos, rx301_fail602
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    if $I11, rx301_fail602
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    nqp_rxpeek $I19, rx301_bstack, rxquantr347_done703
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr347_done703
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr347_done703, rx301_pos, rx301_rep
    goto rxquantr347_loop702
  rxquantr347_done703:
    goto alt305_end612
  alt305_end612:
    nqp_rxcommit rx301_bstack, alt305_end612
    rx301_cur."!cursor_pass"(rx301_pos, "pod_comment", 'backtrack'=>1)
    .return (rx301_cur)
  rx301_restart601:
    repr_get_attr_obj rx301_cstack, rx301_cur, rx301_curclass, "$!cstack"
  rx301_fail602:
    unless rx301_bstack, rx301_done600
    pop $I19, rx301_bstack
    if_null rx301_cstack, rx301_cstack_done605
    unless rx301_cstack, rx301_cstack_done605
    dec $I19
    set $P11, rx301_cstack[$I19]
  rx301_cstack_done605:
    pop rx301_rep, rx301_bstack
    pop rx301_pos, rx301_bstack
    pop $I19, rx301_bstack
    lt rx301_pos, -1, rx301_done600
    lt rx301_pos, 0, rx301_fail602
    eq $I19, 0, rx301_fail602
    nqp_islist $I20, rx301_cstack
    unless $I20, rx301_jump603
    elements $I18, rx301_bstack
    le $I18, 0, rx301_cut604
    dec $I18
    set $I18, rx301_bstack[$I18]
  rx301_cut604:
    assign rx301_cstack, $I18
  rx301_jump603:
    jump $I19
  rx301_done600:
    rx301_cur."!cursor_fail"()
    .return (rx301_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1382959278.72036") :anon :lex :outer("cuid_43_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 837

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1382959278.72036") :anon :lex :outer("cuid_43_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx338_start
    .local string rx338_tgt
    .local int rx338_pos
    .local int rx338_off
    .local int rx338_eos
    .local int rx338_rep
    .local pmc rx338_cur
    .local pmc rx338_curclass
    .local pmc rx338_bstack
    .local pmc rx338_cstack
    rx338_start = self."!cursor_start_all"()
    set rx338_cur, rx338_start[0]
    set rx338_tgt, rx338_start[1]
    set rx338_pos, rx338_start[2]
    set rx338_curclass, rx338_start[3]
    set rx338_bstack, rx338_start[4]
    set $I19, rx338_start[5]
    store_lex unicode:"$\x{a2}", rx338_cur
    length rx338_eos, rx338_tgt
    eq $I19, 1, rx338_restart680
    gt rx338_pos, rx338_eos, rx338_fail681
    repr_get_attr_int $I11, self, rx338_curclass, "$!from"
    ne $I11, -1, rxscan339_done687
    goto rxscan339_scan686
  rxscan339_loop685:
    inc rx338_pos
    gt rx338_pos, rx338_eos, rx338_fail681
    repr_bind_attr_int rx338_cur, rx338_curclass, "$!from", rx338_pos
  rxscan339_scan686:
    nqp_rxmark rx338_bstack, rxscan339_loop685, rx338_pos, 0
  rxscan339_done687:
    nqp_rxmark rx338_bstack, rxquantr340_done689, rx338_pos, 0
  rxquantr340_loop688:
    ge rx338_pos, rx338_eos, rx338_fail681
    substr $S11, rx338_tgt, rx338_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx338_fail681
    inc rx338_pos
    nqp_rxpeek $I19, rx338_bstack, rxquantr340_done689
    inc $I19
    inc $I19
    set rx338_rep, rx338_bstack[$I19]
    nqp_rxcommit rx338_bstack, rxquantr340_done689
    inc rx338_rep
    nqp_rxmark rx338_bstack, rxquantr340_done689, rx338_pos, rx338_rep
    goto rxquantr340_loop688
  rxquantr340_done689:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt341_0691
    nqp_push_label $P11, alt341_1696
    nqp_rxmark rx338_bstack, alt341_end690, -1, 0
    rx338_cur."!alt"(rx338_pos, "alt_nfa__4_1382959280.50544", $P11)
    goto rx338_fail681
  alt341_0691:
    add $I11, rx338_pos, 1
    gt $I11, rx338_eos, rx338_fail681
    substr $S10, rx338_tgt, rx338_pos, 1
    ne $S10, ucs4:"=", rx338_fail681
    add rx338_pos, 1
    nqp_rxmark rx338_bstack, rxquantr342_done693, rx338_pos, 0
  rxquantr342_loop692:
    add $I11, rx338_pos, 3
    gt $I11, rx338_eos, rx338_fail681
    substr $S10, rx338_tgt, rx338_pos, 3
    ne $S10, ucs4:"cut", rx338_fail681
    add rx338_pos, 3
    le rx338_pos, 0, rx338_fail681
    is_cclass $I11, .CCLASS_WORD, rx338_tgt, rx338_pos
    if $I11, rx338_fail681
    sub $I11, rx338_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx338_tgt, $I11
    unless $I11, rx338_fail681
    repr_bind_attr_int rx338_cur, rx338_curclass, "$!pos", rx338_pos
    $P11 = rx338_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx338_curclass, "$!pos"
    lt $I11, 0, rx338_fail681
    repr_get_attr_int rx338_pos, $P11, rx338_curclass, "$!pos"
    nqp_rxpeek $I19, rx338_bstack, rxquantr342_done693
    inc $I19
    inc $I19
    set rx338_rep, rx338_bstack[$I19]
    nqp_rxcommit rx338_bstack, rxquantr342_done693
    inc rx338_rep
  rxquantr342_done693:
    goto alt341_end690
  alt341_1696:
    ge rx338_pos, rx338_eos, rx338_fail681
    is_cclass $I11, .CCLASS_NEWLINE, rx338_tgt, rx338_pos
    unless $I11, rx338_fail681
    substr $S10, rx338_tgt, rx338_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx338_pos, $I11
    add rx338_pos, 1
    goto alt341_end690
  alt341_end690:
    nqp_rxcommit rx338_bstack, alt341_end690
    rx338_cur."!cursor_pass"(rx338_pos, 'backtrack'=>1)
    .return (rx338_cur)
  rx338_restart680:
    repr_get_attr_obj rx338_cstack, rx338_cur, rx338_curclass, "$!cstack"
  rx338_fail681:
    unless rx338_bstack, rx338_done679
    pop $I19, rx338_bstack
    if_null rx338_cstack, rx338_cstack_done684
    unless rx338_cstack, rx338_cstack_done684
    dec $I19
    set $P11, rx338_cstack[$I19]
  rx338_cstack_done684:
    pop rx338_rep, rx338_bstack
    pop rx338_pos, rx338_bstack
    pop $I19, rx338_bstack
    lt rx338_pos, -1, rx338_done679
    lt rx338_pos, 0, rx338_fail681
    eq $I19, 0, rx338_fail681
    nqp_islist $I20, rx338_cstack
    unless $I20, rx338_jump682
    elements $I18, rx338_bstack
    le $I18, 0, rx338_cut683
    dec $I18
    set $I18, rx338_bstack[$I18]
  rx338_cut683:
    assign rx338_cstack, $I18
  rx338_jump682:
    jump $I19
  rx338_done679:
    rx338_cur."!cursor_fail"()
    .return (rx338_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 852
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_412_1382959278.72036' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_413_1382959278.72036' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_415_1382959278.72036' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_416_1382959278.72036' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_99 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx348_start
    .local string rx348_tgt
    .local int rx348_pos
    .local int rx348_off
    .local int rx348_eos
    .local int rx348_rep
    .local pmc rx348_cur
    .local pmc rx348_curclass
    .local pmc rx348_bstack
    .local pmc rx348_cstack
    rx348_start = self."!cursor_start_all"()
    set rx348_cur, rx348_start[0]
    set rx348_tgt, rx348_start[1]
    set rx348_pos, rx348_start[2]
    set rx348_curclass, rx348_start[3]
    set rx348_bstack, rx348_start[4]
    set $I19, rx348_start[5]
    store_lex unicode:"$\x{a2}", rx348_cur
    length rx348_eos, rx348_tgt
    eq $I19, 1, rx348_restart706
    gt rx348_pos, rx348_eos, rx348_fail707
    repr_get_attr_int $I11, self, rx348_curclass, "$!from"
    ne $I11, -1, rxscan349_done713
    goto rxscan349_scan712
  rxscan349_loop711:
    inc rx348_pos
    gt rx348_pos, rx348_eos, rx348_fail707
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!from", rx348_pos
  rxscan349_scan712:
    nqp_rxmark rx348_bstack, rxscan349_loop711, rx348_pos, 0
  rxscan349_done713:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    unless_null $P103, fallback714
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5010, $P5011
    set fb_tmp_85, $P5010
    repr_defined $I5001, fb_tmp_85
    unless $I5001 goto if350_else715 
    set $P5012, fb_tmp_85["$MAIN_SUB"]
    set $P5014, $P5012
    goto if350_end716
  if350_else715:
    null $P5013
    set $P5014, $P5013
  if350_end716:
    unless_null $P5014, vivi_351717
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_351717:
    unless_null $P5014, vivi_352718
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_352718:
    set $P103, $P5014
  fallback714:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
.annotate 'line', 857
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback719
    nqp_get_sc_object $P5019, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5018, $P5019
    set fb_tmp_86, $P5018
    repr_defined $I5002, fb_tmp_86
    unless $I5002 goto if353_else720 
    set $P5020, fb_tmp_86["$W"]
    set $P5022, $P5020
    goto if353_end721
  if353_else720:
    null $P5021
    set $P5022, $P5021
  if353_end721:
    unless_null $P5022, vivi_354722
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_354722:
    unless_null $P5022, vivi_355723
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_355723:
    set $P5017, $P5022
  fallback719:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
.annotate 'line', 861
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback724
    nqp_get_sc_object $P5028, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5027, $P5028
    set fb_tmp_87, $P5027
    repr_defined $I5003, fb_tmp_87
    unless $I5003 goto if356_else725 
    set $P5029, fb_tmp_87["$W"]
    set $P5031, $P5029
    goto if356_end726
  if356_else725:
    null $P5030
    set $P5031, $P5030
  if356_end726:
    unless_null $P5031, vivi_357727
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_357727:
    unless_null $P5031, vivi_358728
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_358728:
    set $P5026, $P5031
  fallback724:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback731
    nqp_get_sc_object $P5036, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_20, $P5035
    set fb_tmp_89, pkg_viv_tmp_20
    repr_defined $I5005, fb_tmp_89
    unless $I5005 goto if360_else732 
    set $P5037, fb_tmp_89["%HOW"]
    set $P5039, $P5037
    goto if360_end733
  if360_else732:
    null $P5038
    set $P5039, $P5038
  if360_end733:
    unless_null $P5039, vivi_361734
    new $P5040, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5040
    set $P5039, $P5040
  vivi_361734:
    unless_null $P5039, vivi_362735
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_362735:
    set $P5034, $P5039
  fallback731:
    set fb_tmp_88, $P5034
    repr_defined $I5004, fb_tmp_88
    unless $I5004 goto if359_else729 
    set $P5042, fb_tmp_88["knowhow"]
    set $P5044, $P5042
    goto if359_end730
  if359_else729:
    null $P5043
    set $P5044, $P5043
  if359_end730:
    unless_null $P5044, vivi_363736
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5044, $P5045
  vivi_363736:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_412_1382959278.72036' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    unless_null $P105, fallback762
    nqp_get_sc_object $P5051, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5050, $P5051
    set fb_tmp_95, $P5050
    repr_defined $I5006, fb_tmp_95
    unless $I5006 goto if379_else763 
    set $P5052, fb_tmp_95["$GLOBALish"]
    set $P5054, $P5052
    goto if379_end764
  if379_else763:
    null $P5053
    set $P5054, $P5053
  if379_end764:
    unless_null $P5054, vivi_380765
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5054, $P5055
  vivi_380765:
    unless_null $P5054, vivi_381766
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_381766:
    set $P105, $P5054
  fallback762:
    set $P106, $P105
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_413_1382959278.72036' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    unless_null $P107, fallback782
    nqp_get_sc_object $P5061, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5060, $P5061
    set fb_tmp_99, $P5060
    repr_defined $I5007, fb_tmp_99
    unless $I5007 goto if391_else783 
    set $P5062, fb_tmp_99["$EXPORT"]
    set $P5064, $P5062
    goto if391_end784
  if391_else783:
    null $P5063
    set $P5064, $P5063
  if391_end784:
    unless_null $P5064, vivi_392785
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5064, $P5065
  vivi_392785:
    unless_null $P5064, vivi_393786
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_393786:
    set $P107, $P5064
  fallback782:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_415_1382959278.72036' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    store_lex unicode:"$\x{a2}", rx348_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_416_1382959278.72036' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    $P11 = rx348_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx348_curclass, "$!pos"
    lt $I11, 0, rx348_fail707
    repr_get_attr_int rx348_pos, $P11, rx348_curclass, "$!pos"
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    $P11 = rx348_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx348_curclass, "$!pos"
    lt $I11, 0, rx348_fail707
    nqp_rxmark rx348_bstack, rxsubrule440_pass862, -1, 0
  rxsubrule440_pass862:
    rx348_cstack = rx348_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx348_pos, $P11, rx348_curclass, "$!pos"
  alt441_0864:
    nqp_rxmark rx348_bstack, alt441_1866, rx348_pos, 0
    lt rx348_pos, rx348_eos, rx348_fail707
    goto alt441_end863
  alt441_1866:
    repr_bind_attr_int rx348_cur, rx348_curclass, "$!pos", rx348_pos
    $P11 = rx348_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx348_curclass, "$!pos"
    lt $I11, 0, rx348_fail707
    repr_get_attr_int rx348_pos, $P11, rx348_curclass, "$!pos"
  alt441_end863:
    rx348_cur."!cursor_pass"(rx348_pos, "comp_unit", 'backtrack'=>1)
    .return (rx348_cur)
  rx348_restart706:
    repr_get_attr_obj rx348_cstack, rx348_cur, rx348_curclass, "$!cstack"
  rx348_fail707:
    unless rx348_bstack, rx348_done705
    pop $I19, rx348_bstack
    if_null rx348_cstack, rx348_cstack_done710
    unless rx348_cstack, rx348_cstack_done710
    dec $I19
    set $P11, rx348_cstack[$I19]
  rx348_cstack_done710:
    pop rx348_rep, rx348_bstack
    pop rx348_pos, rx348_bstack
    pop $I19, rx348_bstack
    lt rx348_pos, -1, rx348_done705
    lt rx348_pos, 0, rx348_fail707
    eq $I19, 0, rx348_fail707
    nqp_islist $I20, rx348_cstack
    unless $I20, rx348_jump708
    elements $I18, rx348_bstack
    le $I18, 0, rx348_cut709
    dec $I18
    set $I18, rx348_bstack[$I18]
  rx348_cut709:
    assign rx348_cstack, $I18
  rx348_jump708:
    jump $I19
  rx348_done705:
    rx348_cur."!cursor_fail"()
    .return (rx348_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1382959278.72036") :anon :lex :outer("cuid_45_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 862
    .local pmc fb_tmp_90 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
.annotate 'line', 863
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback737
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_90, $P5003
    repr_defined $I5001, fb_tmp_90
    unless $I5001 goto if364_else738 
    set $P5005, fb_tmp_90["$GLOBALish"]
    set $P5007, $P5005
    goto if364_end739
  if364_else738:
    null $P5006
    set $P5007, $P5006
  if364_end739:
    unless_null $P5007, vivi_365740
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_365740:
    unless_null $P5007, vivi_366741
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_366741:
    set $P5002, $P5007
  fallback737:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback742
    nqp_get_sc_object $P5012, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5011, $P5012
    set fb_tmp_91, $P5011
    repr_defined $I5002, fb_tmp_91
    unless $I5002 goto if367_else743 
    set $P5013, fb_tmp_91["$GLOBALish"]
    set $P5015, $P5013
    goto if367_end744
  if367_else743:
    null $P5014
    set $P5015, $P5014
  if367_end744:
    unless_null $P5015, vivi_368745
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_368745:
    unless_null $P5015, vivi_369746
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_369746:
    set $P5010, $P5015
  fallback742:
    $P5001."compose"($P5010)
.annotate 'line', 864
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback747
    nqp_get_sc_object $P5020, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5019, $P5020
    set fb_tmp_92, $P5019
    repr_defined $I5003, fb_tmp_92
    unless $I5003 goto if370_else748 
    set $P5021, fb_tmp_92["$W"]
    set $P5023, $P5021
    goto if370_end749
  if370_else748:
    null $P5022
    set $P5023, $P5022
  if370_end749:
    unless_null $P5023, vivi_371750
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_371750:
    unless_null $P5023, vivi_372751
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_372751:
    set $P5018, $P5023
  fallback747:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback752
    nqp_get_sc_object $P5028, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5027, $P5028
    set fb_tmp_93, $P5027
    repr_defined $I5004, fb_tmp_93
    unless $I5004 goto if373_else753 
    set $P5029, fb_tmp_93["$UNIT"]
    set $P5031, $P5029
    goto if373_end754
  if373_else753:
    null $P5030
    set $P5031, $P5030
  if373_end754:
    unless_null $P5031, vivi_374755
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_374755:
    unless_null $P5031, vivi_375756
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_375756:
    set $P5026, $P5031
  fallback752:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback757
    nqp_get_sc_object $P5036, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5035, $P5036
    set fb_tmp_94, $P5035
    repr_defined $I5005, fb_tmp_94
    unless $I5005 goto if376_else758 
    set $P5037, fb_tmp_94["$GLOBALish"]
    set $P5039, $P5037
    goto if376_end759
  if376_else758:
    null $P5038
    set $P5039, $P5038
  if376_end759:
    unless_null $P5039, vivi_377760
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5039, $P5040
  vivi_377760:
    unless_null $P5039, vivi_378761
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_378761:
    set $P5034, $P5039
  fallback757:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1382959278.72036") :anon :lex :outer("cuid_45_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 869
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback767
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_96, $P5002
    repr_defined $I5001, fb_tmp_96
    unless $I5001 goto if382_else768 
    set $P5004, fb_tmp_96["$W"]
    set $P5006, $P5004
    goto if382_end769
  if382_else768:
    null $P5005
    set $P5006, $P5005
  if382_end769:
    unless_null $P5006, vivi_383770
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_383770:
    unless_null $P5006, vivi_384771
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_384771:
    set $P5001, $P5006
  fallback767:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback772
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5010, $P5011
    set fb_tmp_97, $P5010
    repr_defined $I5002, fb_tmp_97
    unless $I5002 goto if385_else773 
    set $P5012, fb_tmp_97["$UNIT"]
    set $P5014, $P5012
    goto if385_end774
  if385_else773:
    null $P5013
    set $P5014, $P5013
  if385_end774:
    unless_null $P5014, vivi_386775
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_386775:
    unless_null $P5014, vivi_387776
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_387776:
    set $P5009, $P5014
  fallback772:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback777
    nqp_get_sc_object $P5019, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5018, $P5019
    set fb_tmp_98, $P5018
    repr_defined $I5003, fb_tmp_98
    unless $I5003 goto if388_else778 
    set $P5020, fb_tmp_98["$PACKAGE"]
    set $P5022, $P5020
    goto if388_end779
  if388_else778:
    null $P5021
    set $P5022, $P5021
  if388_end779:
    unless_null $P5022, vivi_389780
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_389780:
    unless_null $P5022, vivi_390781
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_390781:
    set $P5017, $P5022
  fallback777:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1382959278.72036") :anon :lex :outer("cuid_45_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 873
    .const 'Sub' $P5021 = 'cuid_414_1382959278.72036' 
    capture_lex $P5021 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc pkg_viv_tmp_21 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback793
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_102, pkg_viv_tmp_21
    repr_defined $I5004, fb_tmp_102
    unless $I5004 goto if397_else794 
    set $P5004, fb_tmp_102["%COMPILING"]
    set $P5006, $P5004
    goto if397_end795
  if397_else794:
    null $P5005
    set $P5006, $P5005
  if397_end795:
    unless_null $P5006, vivi_398796
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_398796:
    unless_null $P5006, vivi_399797
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_399797:
    set $P5001, $P5006
  fallback793:
    set fb_tmp_101, $P5001
    repr_defined $I5003, fb_tmp_101
    unless $I5003 goto if396_else791 
    set $P5009, fb_tmp_101["%?OPTIONS"]
    set $P5011, $P5009
    goto if396_end792
  if396_else791:
    null $P5010
    set $P5011, $P5010
  if396_end792:
    unless_null $P5011, vivi_400798
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_400798:
    set fb_tmp_100, $P5011
    repr_defined $I5002, fb_tmp_100
    unless $I5002 goto if395_else789 
    set $P5013, fb_tmp_100["setting"]
    set $P5015, $P5013
    goto if395_end790
  if395_else789:
    null $P5014
    set $P5015, $P5014
  if395_end790:
    unless_null $P5015, vivi_401799
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_401799:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless394_end788 
    .const 'Sub' $P5017 = 'cuid_414_1382959278.72036' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless394_end788:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1382959278.72036") :anon :lex :outer("cuid_415_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 874
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_114 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 875
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback800
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_103, $P5003
    repr_defined $I5001, fb_tmp_103
    unless $I5001 goto if402_else801 
    set $P5005, fb_tmp_103["$W"]
    set $P5007, $P5005
    goto if402_end802
  if402_else801:
    null $P5006
    set $P5007, $P5006
  if402_end802:
    unless_null $P5007, vivi_403803
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_403803:
    unless_null $P5007, vivi_404804
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_404804:
    set $P5002, $P5007
  fallback800:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback807
    nqp_get_sc_object $P5012, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_22, $P5011
    set fb_tmp_105, pkg_viv_tmp_22
    repr_defined $I5003, fb_tmp_105
    unless $I5003 goto if406_else808 
    set $P5013, fb_tmp_105["%HOW"]
    set $P5015, $P5013
    goto if406_end809
  if406_else808:
    null $P5014
    set $P5015, $P5014
  if406_end809:
    unless_null $P5015, vivi_407810
    new $P5016, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5016
    set $P5015, $P5016
  vivi_407810:
    unless_null $P5015, vivi_408811
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_408811:
    set $P5010, $P5015
  fallback807:
    set fb_tmp_104, $P5010
    repr_defined $I5002, fb_tmp_104
    unless $I5002 goto if405_else805 
    set $P5018, fb_tmp_104["knowhow"]
    set $P5020, $P5018
    goto if405_end806
  if405_else805:
    null $P5019
    set $P5020, $P5019
  if405_end806:
    unless_null $P5020, vivi_409812
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_409812:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 876
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback813
    nqp_get_sc_object $P5026, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5025, $P5026
    set fb_tmp_106, $P5025
    repr_defined $I5004, fb_tmp_106
    unless $I5004 goto if410_else814 
    set $P5027, fb_tmp_106["$EXPORT"]
    set $P5029, $P5027
    goto if410_end815
  if410_else814:
    null $P5028
    set $P5029, $P5028
  if410_end815:
    unless_null $P5029, vivi_411816
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5029, $P5030
  vivi_411816:
    unless_null $P5029, vivi_412817
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_412817:
    set $P5024, $P5029
  fallback813:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback818
    nqp_get_sc_object $P5034, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5033, $P5034
    set fb_tmp_107, $P5033
    repr_defined $I5005, fb_tmp_107
    unless $I5005 goto if413_else819 
    set $P5035, fb_tmp_107["$EXPORT"]
    set $P5037, $P5035
    goto if413_end820
  if413_else819:
    null $P5036
    set $P5037, $P5036
  if413_end820:
    unless_null $P5037, vivi_414821
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_414821:
    unless_null $P5037, vivi_415822
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_415822:
    set $P5032, $P5037
  fallback818:
    $P5023."compose"($P5032)
.annotate 'line', 877
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback823
    nqp_get_sc_object $P5042, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5041, $P5042
    set fb_tmp_108, $P5041
    repr_defined $I5006, fb_tmp_108
    unless $I5006 goto if416_else824 
    set $P5043, fb_tmp_108["$W"]
    set $P5045, $P5043
    goto if416_end825
  if416_else824:
    null $P5044
    set $P5045, $P5044
  if416_end825:
    unless_null $P5045, vivi_417826
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  vivi_417826:
    unless_null $P5045, vivi_418827
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_418827:
    set $P5040, $P5045
  fallback823:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback828
    nqp_get_sc_object $P5050, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5049, $P5050
    set fb_tmp_109, $P5049
    repr_defined $I5007, fb_tmp_109
    unless $I5007 goto if419_else829 
    set $P5051, fb_tmp_109["$UNIT"]
    set $P5053, $P5051
    goto if419_end830
  if419_else829:
    null $P5052
    set $P5053, $P5052
  if419_end830:
    unless_null $P5053, vivi_420831
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5053, $P5054
  vivi_420831:
    unless_null $P5053, vivi_421832
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_421832:
    set $P5048, $P5053
  fallback828:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback833
    nqp_get_sc_object $P5058, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5057, $P5058
    set fb_tmp_110, $P5057
    repr_defined $I5008, fb_tmp_110
    unless $I5008 goto if422_else834 
    set $P5059, fb_tmp_110["$EXPORT"]
    set $P5061, $P5059
    goto if422_end835
  if422_else834:
    null $P5060
    set $P5061, $P5060
  if422_end835:
    unless_null $P5061, vivi_423836
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5061, $P5062
  vivi_423836:
    unless_null $P5061, vivi_424837
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_424837:
    set $P5056, $P5061
  fallback833:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 878
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback838
    nqp_get_sc_object $P5066, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5065, $P5066
    set fb_tmp_111, $P5065
    repr_defined $I5009, fb_tmp_111
    unless $I5009 goto if425_else839 
    set $P5067, fb_tmp_111["$W"]
    set $P5069, $P5067
    goto if425_end840
  if425_else839:
    null $P5068
    set $P5069, $P5068
  if425_end840:
    unless_null $P5069, vivi_426841
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5069, $P5070
  vivi_426841:
    unless_null $P5069, vivi_427842
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_427842:
    set $P5064, $P5069
  fallback838:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback845
    nqp_get_sc_object $P5074, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_23, $P5073
    set fb_tmp_113, pkg_viv_tmp_23
    repr_defined $I5011, fb_tmp_113
    unless $I5011 goto if429_else846 
    set $P5075, fb_tmp_113["%HOW"]
    set $P5077, $P5075
    goto if429_end847
  if429_else846:
    null $P5076
    set $P5077, $P5076
  if429_end847:
    unless_null $P5077, vivi_430848
    new $P5078, 'Hash'
    set pkg_viv_tmp_23["%HOW"], $P5078
    set $P5077, $P5078
  vivi_430848:
    unless_null $P5077, vivi_431849
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_431849:
    set $P5072, $P5077
  fallback845:
    set fb_tmp_112, $P5072
    repr_defined $I5010, fb_tmp_112
    unless $I5010 goto if428_else843 
    set $P5080, fb_tmp_112["knowhow"]
    set $P5082, $P5080
    goto if428_end844
  if428_else843:
    null $P5081
    set $P5082, $P5081
  if428_end844:
    unless_null $P5082, vivi_432850
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_432850:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 879
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback851
    nqp_get_sc_object $P5089, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5088, $P5089
    set fb_tmp_114, $P5088
    repr_defined $I5012, fb_tmp_114
    unless $I5012 goto if433_else852 
    set $P5090, fb_tmp_114["$EXPORT"]
    set $P5092, $P5090
    goto if433_end853
  if433_else852:
    null $P5091
    set $P5092, $P5091
  if433_end853:
    unless_null $P5092, vivi_434854
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5092, $P5093
  vivi_434854:
    unless_null $P5092, vivi_435855
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_435855:
    set $P5087, $P5092
  fallback851:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1382959278.72036") :anon :lex :outer("cuid_45_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 884
    .local pmc fb_tmp_115 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback856
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_115, $P5002
    repr_defined $I5001, fb_tmp_115
    unless $I5001 goto if436_else857 
    set $P5004, fb_tmp_115["$W"]
    set $P5006, $P5004
    goto if436_end858
  if436_else857:
    null $P5005
    set $P5006, $P5005
  if436_end858:
    unless_null $P5006, vivi_437859
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_437859:
    unless_null $P5006, vivi_438860
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_438860:
    set $P5001, $P5006
  fallback856:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 892
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_47_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx444_start
    .local string rx444_tgt
    .local int rx444_pos
    .local int rx444_off
    .local int rx444_eos
    .local int rx444_rep
    .local pmc rx444_cur
    .local pmc rx444_curclass
    .local pmc rx444_bstack
    .local pmc rx444_cstack
    rx444_start = self."!cursor_start_all"()
    set rx444_cur, rx444_start[0]
    set rx444_tgt, rx444_start[1]
    set rx444_pos, rx444_start[2]
    set rx444_curclass, rx444_start[3]
    set rx444_bstack, rx444_start[4]
    set $I19, rx444_start[5]
    store_lex unicode:"$\x{a2}", rx444_cur
    length rx444_eos, rx444_tgt
    eq $I19, 1, rx444_restart870
    gt rx444_pos, rx444_eos, rx444_fail871
    repr_get_attr_int $I11, self, rx444_curclass, "$!from"
    ne $I11, -1, rxscan445_done877
    goto rxscan445_scan876
  rxscan445_loop875:
    inc rx444_pos
    gt rx444_pos, rx444_eos, rx444_fail871
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!from", rx444_pos
  rxscan445_scan876:
    nqp_rxmark rx444_bstack, rxscan445_loop875, rx444_pos, 0
  rxscan445_done877:
    add $I11, rx444_pos, 0
    gt $I11, rx444_eos, rx444_fail871
    substr $S10, rx444_tgt, rx444_pos, 0
    ne $S10, ucs4:"", rx444_fail871
    add rx444_pos, 0
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule446_pass878
  rxsubrule446_back879:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule446_pass878:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule446_back879
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt447_0881
    nqp_push_label $P11, alt447_1885
    nqp_push_label $P11, alt447_2898
    nqp_rxmark rx444_bstack, alt447_end880, -1, 0
    rx444_cur."!alt"(rx444_pos, "alt_nfa__6_1382959280.61809", $P11)
    goto rx444_fail871
  alt447_0881:
    lt rx444_pos, rx444_eos, rx444_fail871
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule449_pass883
  rxsubrule449_back884:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule449_pass883:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule449_back884
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    goto alt447_end880
  alt447_1885:
    .const 'Sub' $P5001 = 'cuid_47_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule452_pass896
  rxsubrule452_back897:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule452_pass896:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule452_back897
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    goto alt447_end880
  alt447_2898:
    nqp_rxmark rx444_bstack, rxquantg453_done900, rx444_pos, 0
  rxquantg453_loop899:
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."statement"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule454_pass901
  rxsubrule454_back902:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule454_pass901:
    rx444_cstack = rx444_cur."!cursor_capture"($P11, "statement")
    set_addr $I11, rxsubrule454_back902
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule455_pass903
  rxsubrule455_back904:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule455_pass903:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule455_back904
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule456_pass905
  rxsubrule456_back906:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule456_pass905:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule456_back906
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule457_pass907
  rxsubrule457_back908:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule457_pass907:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule457_back908
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    nqp_rxmark rx444_bstack, rxquantg453_done900, rx444_pos, rx444_rep
    goto rxquantg453_loop899
  rxquantg453_done900:
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule458_pass909
  rxsubrule458_back910:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule458_pass909:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule458_back910
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    goto alt447_end880
  alt447_end880:
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!pos", rx444_pos
    $P11 = rx444_cur."ws"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
    goto rxsubrule459_pass911
  rxsubrule459_back912:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx444_curclass, "$!pos"
    lt $I11, 0, rx444_fail871
  rxsubrule459_pass911:
    rx444_cstack = rx444_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule459_back912
    push rx444_bstack, $I11
    push rx444_bstack, 0
    push rx444_bstack, rx444_pos
    elements $I11, rx444_cstack
    push rx444_bstack, $I11
    repr_get_attr_int rx444_pos, $P11, rx444_curclass, "$!pos"
    rx444_cur."!cursor_pass"(rx444_pos, "statementlist", 'backtrack'=>1)
    .return (rx444_cur)
  rx444_restart870:
    repr_get_attr_obj rx444_cstack, rx444_cur, rx444_curclass, "$!cstack"
  rx444_fail871:
    unless rx444_bstack, rx444_done869
    pop $I19, rx444_bstack
    if_null rx444_cstack, rx444_cstack_done874
    unless rx444_cstack, rx444_cstack_done874
    dec $I19
    set $P11, rx444_cstack[$I19]
  rx444_cstack_done874:
    pop rx444_rep, rx444_bstack
    pop rx444_pos, rx444_bstack
    pop $I19, rx444_bstack
    lt rx444_pos, -1, rx444_done869
    lt rx444_pos, 0, rx444_fail871
    eq $I19, 0, rx444_fail871
    nqp_islist $I20, rx444_cstack
    unless $I20, rx444_jump872
    elements $I18, rx444_bstack
    le $I18, 0, rx444_cut873
    dec $I18
    set $I18, rx444_bstack[$I18]
  rx444_cut873:
    assign rx444_cstack, $I18
  rx444_jump872:
    jump $I19
  rx444_done869:
    rx444_cur."!cursor_fail"()
    .return (rx444_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_47_1382959278.72036") :anon :lex :outer("cuid_46_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx450_start
    .local string rx450_tgt
    .local int rx450_pos
    .local int rx450_off
    .local int rx450_eos
    .local int rx450_rep
    .local pmc rx450_cur
    .local pmc rx450_curclass
    .local pmc rx450_bstack
    .local pmc rx450_cstack
    rx450_start = self."!cursor_start_all"()
    set rx450_cur, rx450_start[0]
    set rx450_tgt, rx450_start[1]
    set rx450_pos, rx450_start[2]
    set rx450_curclass, rx450_start[3]
    set rx450_bstack, rx450_start[4]
    set $I19, rx450_start[5]
    store_lex unicode:"$\x{a2}", rx450_cur
    length rx450_eos, rx450_tgt
    eq $I19, 1, rx450_restart888
    gt rx450_pos, rx450_eos, rx450_fail889
    repr_get_attr_int $I11, self, rx450_curclass, "$!from"
    ne $I11, -1, rxscan451_done895
    goto rxscan451_scan894
  rxscan451_loop893:
    inc rx450_pos
    gt rx450_pos, rx450_eos, rx450_fail889
    repr_bind_attr_int rx450_cur, rx450_curclass, "$!from", rx450_pos
  rxscan451_scan894:
    nqp_rxmark rx450_bstack, rxscan451_loop893, rx450_pos, 0
  rxscan451_done895:
    ge rx450_pos, rx450_eos, rx450_fail889
    substr $S11, rx450_tgt, rx450_pos, 1
    index $I11, ucs4:")]}", $S11
    lt $I11, 0, rx450_fail889
    inc rx450_pos
    rx450_cur."!cursor_pass"(rx450_pos, 'backtrack'=>1)
    .return (rx450_cur)
  rx450_restart888:
    repr_get_attr_obj rx450_cstack, rx450_cur, rx450_curclass, "$!cstack"
  rx450_fail889:
    unless rx450_bstack, rx450_done887
    pop $I19, rx450_bstack
    if_null rx450_cstack, rx450_cstack_done892
    unless rx450_cstack, rx450_cstack_done892
    dec $I19
    set $P11, rx450_cstack[$I19]
  rx450_cstack_done892:
    pop rx450_rep, rx450_bstack
    pop rx450_pos, rx450_bstack
    pop $I19, rx450_bstack
    lt rx450_pos, -1, rx450_done887
    lt rx450_pos, 0, rx450_fail889
    eq $I19, 0, rx450_fail889
    nqp_islist $I20, rx450_cstack
    unless $I20, rx450_jump890
    elements $I18, rx450_bstack
    le $I18, 0, rx450_cut891
    dec $I18
    set $I18, rx450_bstack[$I18]
  rx450_cut891:
    assign rx450_cstack, $I18
  rx450_jump890:
    jump $I19
  rx450_done887:
    rx450_cur."!cursor_fail"()
    .return (rx450_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_48_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 901
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_49_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx460_start
    .local string rx460_tgt
    .local int rx460_pos
    .local int rx460_off
    .local int rx460_eos
    .local int rx460_rep
    .local pmc rx460_cur
    .local pmc rx460_curclass
    .local pmc rx460_bstack
    .local pmc rx460_cstack
    rx460_start = self."!cursor_start_all"()
    set rx460_cur, rx460_start[0]
    set rx460_tgt, rx460_start[1]
    set rx460_pos, rx460_start[2]
    set rx460_curclass, rx460_start[3]
    set rx460_bstack, rx460_start[4]
    set $I19, rx460_start[5]
    store_lex unicode:"$\x{a2}", rx460_cur
    length rx460_eos, rx460_tgt
    eq $I19, 1, rx460_restart915
    gt rx460_pos, rx460_eos, rx460_fail916
    repr_get_attr_int $I11, self, rx460_curclass, "$!from"
    ne $I11, -1, rxscan461_done922
    goto rxscan461_scan921
  rxscan461_loop920:
    inc rx460_pos
    gt rx460_pos, rx460_eos, rx460_fail916
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!from", rx460_pos
  rxscan461_scan921:
    nqp_rxmark rx460_bstack, rxscan461_loop920, rx460_pos, 0
  rxscan461_done922:
    .const 'Sub' $P5001 = 'cuid_49_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    ge $I11, 0, rx460_fail916
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt466_0938
    nqp_push_label $P11, alt466_1940
    nqp_rxmark rx460_bstack, alt466_end937, -1, 0
    rx460_cur."!alt"(rx460_pos, "alt_nfa__8_1382959280.63788", $P11)
    goto rx460_fail916
  alt466_0938:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule467_pass939, -1, 0
  rxsubrule467_pass939:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    goto alt466_end937
  alt466_1940:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule468_pass941, -1, 0
  rxsubrule468_pass941:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."ws"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    nqp_rxmark rx460_bstack, rxquantr470_done944, rx460_pos, 0
  rxquantr470_loop943:
  alt471_0946:
    nqp_rxmark rx460_bstack, alt471_1947, rx460_pos, 0
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    goto alt471_end945
  alt471_1947:
    nqp_rxmark rx460_bstack, alt471_2953, rx460_pos, 0
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule472_pass948, -1, 0
  rxsubrule472_pass948:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    nqp_rxmark rx460_bstack, rxquantr473_done950, rx460_pos, 0
  rxquantr473_loop949:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    goto rxsubrule474_pass951
  rxsubrule474_back952:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
  rxsubrule474_pass951:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule474_back952
    push rx460_bstack, $I11
    push rx460_bstack, 0
    push rx460_bstack, rx460_pos
    elements $I11, rx460_cstack
    push rx460_bstack, $I11
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    nqp_rxpeek $I19, rx460_bstack, rxquantr473_done950
    inc $I19
    inc $I19
    set rx460_rep, rx460_bstack[$I19]
    nqp_rxcommit rx460_bstack, rxquantr473_done950
    inc rx460_rep
  rxquantr473_done950:
    goto alt471_end945
  alt471_2953:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail916
    nqp_rxmark rx460_bstack, rxsubrule475_pass954, -1, 0
  rxsubrule475_pass954:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
  alt471_end945:
    nqp_rxpeek $I19, rx460_bstack, rxquantr470_done944
    inc $I19
    inc $I19
    set rx460_rep, rx460_bstack[$I19]
    nqp_rxcommit rx460_bstack, rxquantr470_done944
    inc rx460_rep
  rxquantr470_done944:
    goto alt466_end937
  alt466_end937:
    nqp_rxcommit rx460_bstack, alt466_end937
    rx460_cur."!cursor_pass"(rx460_pos, "statement", 'backtrack'=>1)
    .return (rx460_cur)
  rx460_restart915:
    repr_get_attr_obj rx460_cstack, rx460_cur, rx460_curclass, "$!cstack"
  rx460_fail916:
    unless rx460_bstack, rx460_done914
    pop $I19, rx460_bstack
    if_null rx460_cstack, rx460_cstack_done919
    unless rx460_cstack, rx460_cstack_done919
    dec $I19
    set $P11, rx460_cstack[$I19]
  rx460_cstack_done919:
    pop rx460_rep, rx460_bstack
    pop rx460_pos, rx460_bstack
    pop $I19, rx460_bstack
    lt rx460_pos, -1, rx460_done914
    lt rx460_pos, 0, rx460_fail916
    eq $I19, 0, rx460_fail916
    nqp_islist $I20, rx460_cstack
    unless $I20, rx460_jump917
    elements $I18, rx460_bstack
    le $I18, 0, rx460_cut918
    dec $I18
    set $I18, rx460_bstack[$I18]
  rx460_cut918:
    assign rx460_cstack, $I18
  rx460_jump917:
    jump $I19
  rx460_done914:
    rx460_cur."!cursor_fail"()
    .return (rx460_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_49_1382959278.72036") :anon :lex :outer("cuid_48_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx462_start
    .local string rx462_tgt
    .local int rx462_pos
    .local int rx462_off
    .local int rx462_eos
    .local int rx462_rep
    .local pmc rx462_cur
    .local pmc rx462_curclass
    .local pmc rx462_bstack
    .local pmc rx462_cstack
    rx462_start = self."!cursor_start_all"()
    set rx462_cur, rx462_start[0]
    set rx462_tgt, rx462_start[1]
    set rx462_pos, rx462_start[2]
    set rx462_curclass, rx462_start[3]
    set rx462_bstack, rx462_start[4]
    set $I19, rx462_start[5]
    store_lex unicode:"$\x{a2}", rx462_cur
    length rx462_eos, rx462_tgt
    eq $I19, 1, rx462_restart925
    gt rx462_pos, rx462_eos, rx462_fail926
    repr_get_attr_int $I11, self, rx462_curclass, "$!from"
    ne $I11, -1, rxscan463_done932
    goto rxscan463_scan931
  rxscan463_loop930:
    inc rx462_pos
    gt rx462_pos, rx462_eos, rx462_fail926
    repr_bind_attr_int rx462_cur, rx462_curclass, "$!from", rx462_pos
  rxscan463_scan931:
    nqp_rxmark rx462_bstack, rxscan463_loop930, rx462_pos, 0
  rxscan463_done932:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt464_0934
    nqp_push_label $P11, alt464_1935
    nqp_rxmark rx462_bstack, alt464_end933, -1, 0
    rx462_cur."!alt"(rx462_pos, "alt_nfa__7_1382959280.62414", $P11)
    goto rx462_fail926
  alt464_0934:
    ge rx462_pos, rx462_eos, rx462_fail926
    substr $S11, rx462_tgt, rx462_pos, 1
    index $I11, ucs4:"])}", $S11
    lt $I11, 0, rx462_fail926
    inc rx462_pos
    goto alt464_end933
  alt464_1935:
    lt rx462_pos, rx462_eos, rx462_fail926
    goto alt464_end933
  alt464_end933:
    rx462_cur."!cursor_pass"(rx462_pos, 'backtrack'=>1)
    .return (rx462_cur)
  rx462_restart925:
    repr_get_attr_obj rx462_cstack, rx462_cur, rx462_curclass, "$!cstack"
  rx462_fail926:
    unless rx462_bstack, rx462_done924
    pop $I19, rx462_bstack
    if_null rx462_cstack, rx462_cstack_done929
    unless rx462_cstack, rx462_cstack_done929
    dec $I19
    set $P11, rx462_cstack[$I19]
  rx462_cstack_done929:
    pop rx462_rep, rx462_bstack
    pop rx462_pos, rx462_bstack
    pop $I19, rx462_bstack
    lt rx462_pos, -1, rx462_done924
    lt rx462_pos, 0, rx462_fail926
    eq $I19, 0, rx462_fail926
    nqp_islist $I20, rx462_cstack
    unless $I20, rx462_jump927
    elements $I18, rx462_bstack
    le $I18, 0, rx462_cut928
    dec $I18
    set $I18, rx462_bstack[$I18]
  rx462_cut928:
    assign rx462_cstack, $I18
  rx462_jump927:
    jump $I19
  rx462_done924:
    rx462_cur."!cursor_fail"()
    .return (rx462_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_50_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 914
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx476_start
    .local string rx476_tgt
    .local int rx476_pos
    .local int rx476_off
    .local int rx476_eos
    .local int rx476_rep
    .local pmc rx476_cur
    .local pmc rx476_curclass
    .local pmc rx476_bstack
    .local pmc rx476_cstack
    rx476_start = self."!cursor_start_all"()
    set rx476_cur, rx476_start[0]
    set rx476_tgt, rx476_start[1]
    set rx476_pos, rx476_start[2]
    set rx476_curclass, rx476_start[3]
    set rx476_bstack, rx476_start[4]
    set $I19, rx476_start[5]
    store_lex unicode:"$\x{a2}", rx476_cur
    length rx476_eos, rx476_tgt
    eq $I19, 1, rx476_restart957
    gt rx476_pos, rx476_eos, rx476_fail958
    repr_get_attr_int $I11, self, rx476_curclass, "$!from"
    ne $I11, -1, rxscan477_done964
    goto rxscan477_scan963
  rxscan477_loop962:
    inc rx476_pos
    gt rx476_pos, rx476_eos, rx476_fail958
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!from", rx476_pos
  rxscan477_scan963:
    nqp_rxmark rx476_bstack, rxscan477_loop962, rx476_pos, 0
  rxscan477_done964:
  alt478_0966:
    nqp_rxmark rx476_bstack, alt478_1967, rx476_pos, 0
    add $I11, rx476_pos, 1
    gt $I11, rx476_eos, rx476_fail958
    substr $S10, rx476_tgt, rx476_pos, 1
    ne $S10, ucs4:";", rx476_fail958
    add rx476_pos, 1
    goto alt478_end965
  alt478_1967:
    nqp_rxmark rx476_bstack, alt478_2968, rx476_pos, 0
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!pos", rx476_pos
    $P11 = rx476_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx476_curclass, "$!pos"
    lt $I11, 0, rx476_fail958
    goto alt478_end965
  alt478_2968:
    nqp_rxmark rx476_bstack, alt478_3969, rx476_pos, 0
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!pos", rx476_pos
    $P11 = rx476_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx476_curclass, "$!pos"
    lt $I11, 0, rx476_fail958
    goto alt478_end965
  alt478_3969:
    lt rx476_pos, rx476_eos, rx476_fail958
  alt478_end965:
    rx476_cur."!cursor_pass"(rx476_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx476_cur)
  rx476_restart957:
    repr_get_attr_obj rx476_cstack, rx476_cur, rx476_curclass, "$!cstack"
  rx476_fail958:
    unless rx476_bstack, rx476_done956
    pop $I19, rx476_bstack
    if_null rx476_cstack, rx476_cstack_done961
    unless rx476_cstack, rx476_cstack_done961
    dec $I19
    set $P11, rx476_cstack[$I19]
  rx476_cstack_done961:
    pop rx476_rep, rx476_bstack
    pop rx476_pos, rx476_bstack
    pop $I19, rx476_bstack
    lt rx476_pos, -1, rx476_done956
    lt rx476_pos, 0, rx476_fail958
    eq $I19, 0, rx476_fail958
    nqp_islist $I20, rx476_cstack
    unless $I20, rx476_jump959
    elements $I18, rx476_bstack
    le $I18, 0, rx476_cut960
    dec $I18
    set $I18, rx476_bstack[$I18]
  rx476_cut960:
    assign rx476_cstack, $I18
  rx476_jump959:
    jump $I19
  rx476_done956:
    rx476_cur."!cursor_fail"()
    .return (rx476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_51_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 921
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx480_start
    .local string rx480_tgt
    .local int rx480_pos
    .local int rx480_off
    .local int rx480_eos
    .local int rx480_rep
    .local pmc rx480_cur
    .local pmc rx480_curclass
    .local pmc rx480_bstack
    .local pmc rx480_cstack
    rx480_start = self."!cursor_start_all"()
    set rx480_cur, rx480_start[0]
    set rx480_tgt, rx480_start[1]
    set rx480_pos, rx480_start[2]
    set rx480_curclass, rx480_start[3]
    set rx480_bstack, rx480_start[4]
    set $I19, rx480_start[5]
    store_lex unicode:"$\x{a2}", rx480_cur
    length rx480_eos, rx480_tgt
    eq $I19, 1, rx480_restart973
    gt rx480_pos, rx480_eos, rx480_fail974
    repr_get_attr_int $I11, self, rx480_curclass, "$!from"
    ne $I11, -1, rxscan481_done980
    goto rxscan481_scan979
  rxscan481_loop978:
    inc rx480_pos
    gt rx480_pos, rx480_eos, rx480_fail974
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!from", rx480_pos
  rxscan481_scan979:
    nqp_rxmark rx480_bstack, rxscan481_loop978, rx480_pos, 0
  rxscan481_done980:
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail974
    nqp_rxmark rx480_bstack, rxsubrule482_pass981, -1, 0
  rxsubrule482_pass981:
    rx480_cstack = rx480_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."ws"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail974
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail974
    nqp_rxmark rx480_bstack, rxsubrule484_pass983, -1, 0
  rxsubrule484_pass983:
    rx480_cstack = rx480_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    rx480_cur."!cursor_pass"(rx480_pos, "xblock", 'backtrack'=>1)
    .return (rx480_cur)
  rx480_restart973:
    repr_get_attr_obj rx480_cstack, rx480_cur, rx480_curclass, "$!cstack"
  rx480_fail974:
    unless rx480_bstack, rx480_done972
    pop $I19, rx480_bstack
    if_null rx480_cstack, rx480_cstack_done977
    unless rx480_cstack, rx480_cstack_done977
    dec $I19
    set $P11, rx480_cstack[$I19]
  rx480_cstack_done977:
    pop rx480_rep, rx480_bstack
    pop rx480_pos, rx480_bstack
    pop $I19, rx480_bstack
    lt rx480_pos, -1, rx480_done972
    lt rx480_pos, 0, rx480_fail974
    eq $I19, 0, rx480_fail974
    nqp_islist $I20, rx480_cstack
    unless $I20, rx480_jump975
    elements $I18, rx480_bstack
    le $I18, 0, rx480_cut976
    dec $I18
    set $I18, rx480_bstack[$I18]
  rx480_cut976:
    assign rx480_cstack, $I18
  rx480_jump975:
    jump $I19
  rx480_done972:
    rx480_cur."!cursor_fail"()
    .return (rx480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_52_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 925
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx485_start
    .local string rx485_tgt
    .local int rx485_pos
    .local int rx485_off
    .local int rx485_eos
    .local int rx485_rep
    .local pmc rx485_cur
    .local pmc rx485_curclass
    .local pmc rx485_bstack
    .local pmc rx485_cstack
    rx485_start = self."!cursor_start_all"()
    set rx485_cur, rx485_start[0]
    set rx485_tgt, rx485_start[1]
    set rx485_pos, rx485_start[2]
    set rx485_curclass, rx485_start[3]
    set rx485_bstack, rx485_start[4]
    set $I19, rx485_start[5]
    store_lex unicode:"$\x{a2}", rx485_cur
    length rx485_eos, rx485_tgt
    eq $I19, 1, rx485_restart986
    gt rx485_pos, rx485_eos, rx485_fail987
    repr_get_attr_int $I11, self, rx485_curclass, "$!from"
    ne $I11, -1, rxscan486_done993
    goto rxscan486_scan992
  rxscan486_loop991:
    inc rx485_pos
    gt rx485_pos, rx485_eos, rx485_fail987
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!from", rx485_pos
  rxscan486_scan992:
    nqp_rxmark rx485_bstack, rxscan486_loop991, rx485_pos, 0
  rxscan486_done993:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt487_0995
    nqp_push_label $P11, alt487_11001
    nqp_push_label $P11, alt487_21004
    nqp_rxmark rx485_bstack, alt487_end994, -1, 0
    rx485_cur."!alt"(rx485_pos, "alt_nfa__9_1382959280.66533", $P11)
    goto rx485_fail987
  alt487_0995:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."signature"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    nqp_rxmark rx485_bstack, rxsubrule490_pass998, -1, 0
  rxsubrule490_pass998:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."ws"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    nqp_rxmark rx485_bstack, rxsubrule492_pass1000, -1, 0
  rxsubrule492_pass1000:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt487_end994
  alt487_11001:
    ge rx485_pos, rx485_eos, rx485_fail987
    substr $S11, rx485_tgt, rx485_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx485_fail987
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    nqp_rxmark rx485_bstack, rxsubrule494_pass1003, -1, 0
  rxsubrule494_pass1003:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt487_end994
  alt487_21004:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail987
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt487_end994
  alt487_end994:
    rx485_cur."!cursor_pass"(rx485_pos, "pblock", 'backtrack'=>1)
    .return (rx485_cur)
  rx485_restart986:
    repr_get_attr_obj rx485_cstack, rx485_cur, rx485_curclass, "$!cstack"
  rx485_fail987:
    unless rx485_bstack, rx485_done985
    pop $I19, rx485_bstack
    if_null rx485_cstack, rx485_cstack_done990
    unless rx485_cstack, rx485_cstack_done990
    dec $I19
    set $P11, rx485_cstack[$I19]
  rx485_cstack_done990:
    pop rx485_rep, rx485_bstack
    pop rx485_pos, rx485_bstack
    pop $I19, rx485_bstack
    lt rx485_pos, -1, rx485_done985
    lt rx485_pos, 0, rx485_fail987
    eq $I19, 0, rx485_fail987
    nqp_islist $I20, rx485_cstack
    unless $I20, rx485_jump988
    elements $I18, rx485_bstack
    le $I18, 0, rx485_cut989
    dec $I18
    set $I18, rx485_bstack[$I18]
  rx485_cut989:
    assign rx485_cstack, $I18
  rx485_jump988:
    jump $I19
  rx485_done985:
    rx485_cur."!cursor_fail"()
    .return (rx485_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_53_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 936
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx496_start
    .local string rx496_tgt
    .local int rx496_pos
    .local int rx496_off
    .local int rx496_eos
    .local int rx496_rep
    .local pmc rx496_cur
    .local pmc rx496_curclass
    .local pmc rx496_bstack
    .local pmc rx496_cstack
    rx496_start = self."!cursor_start_all"()
    set rx496_cur, rx496_start[0]
    set rx496_tgt, rx496_start[1]
    set rx496_pos, rx496_start[2]
    set rx496_curclass, rx496_start[3]
    set rx496_bstack, rx496_start[4]
    set $I19, rx496_start[5]
    store_lex unicode:"$\x{a2}", rx496_cur
    length rx496_eos, rx496_tgt
    eq $I19, 1, rx496_restart1008
    gt rx496_pos, rx496_eos, rx496_fail1009
    repr_get_attr_int $I11, self, rx496_curclass, "$!from"
    ne $I11, -1, rxscan497_done1015
    goto rxscan497_scan1014
  rxscan497_loop1013:
    inc rx496_pos
    gt rx496_pos, rx496_eos, rx496_fail1009
    repr_bind_attr_int rx496_cur, rx496_curclass, "$!from", rx496_pos
  rxscan497_scan1014:
    nqp_rxmark rx496_bstack, rxscan497_loop1013, rx496_pos, 0
  rxscan497_done1015:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt498_01017
    nqp_push_label $P11, alt498_11018
    nqp_rxmark rx496_bstack, alt498_end1016, -1, 0
    rx496_cur."!alt"(rx496_pos, "alt_nfa__10_1382959280.67088", $P11)
    goto rx496_fail1009
  alt498_01017:
    add $I11, rx496_pos, 2
    gt $I11, rx496_eos, rx496_fail1009
    substr $S10, rx496_tgt, rx496_pos, 2
    ne $S10, ucs4:"->", rx496_fail1009
    add rx496_pos, 2
    goto alt498_end1016
  alt498_11018:
    add $I11, rx496_pos, 3
    gt $I11, rx496_eos, rx496_fail1009
    substr $S10, rx496_tgt, rx496_pos, 3
    ne $S10, ucs4:"<->", rx496_fail1009
    add rx496_pos, 3
    goto alt498_end1016
  alt498_end1016:
    rx496_cur."!cursor_pass"(rx496_pos, "lambda", 'backtrack'=>1)
    .return (rx496_cur)
  rx496_restart1008:
    repr_get_attr_obj rx496_cstack, rx496_cur, rx496_curclass, "$!cstack"
  rx496_fail1009:
    unless rx496_bstack, rx496_done1007
    pop $I19, rx496_bstack
    if_null rx496_cstack, rx496_cstack_done1012
    unless rx496_cstack, rx496_cstack_done1012
    dec $I19
    set $P11, rx496_cstack[$I19]
  rx496_cstack_done1012:
    pop rx496_rep, rx496_bstack
    pop rx496_pos, rx496_bstack
    pop $I19, rx496_bstack
    lt rx496_pos, -1, rx496_done1007
    lt rx496_pos, 0, rx496_fail1009
    eq $I19, 0, rx496_fail1009
    nqp_islist $I20, rx496_cstack
    unless $I20, rx496_jump1010
    elements $I18, rx496_bstack
    le $I18, 0, rx496_cut1011
    dec $I18
    set $I18, rx496_bstack[$I18]
  rx496_cut1011:
    assign rx496_cstack, $I18
  rx496_jump1010:
    jump $I19
  rx496_done1007:
    rx496_cur."!cursor_fail"()
    .return (rx496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_54_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 938
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx499_start
    .local string rx499_tgt
    .local int rx499_pos
    .local int rx499_off
    .local int rx499_eos
    .local int rx499_rep
    .local pmc rx499_cur
    .local pmc rx499_curclass
    .local pmc rx499_bstack
    .local pmc rx499_cstack
    rx499_start = self."!cursor_start_all"()
    set rx499_cur, rx499_start[0]
    set rx499_tgt, rx499_start[1]
    set rx499_pos, rx499_start[2]
    set rx499_curclass, rx499_start[3]
    set rx499_bstack, rx499_start[4]
    set $I19, rx499_start[5]
    store_lex unicode:"$\x{a2}", rx499_cur
    length rx499_eos, rx499_tgt
    eq $I19, 1, rx499_restart1021
    gt rx499_pos, rx499_eos, rx499_fail1022
    repr_get_attr_int $I11, self, rx499_curclass, "$!from"
    ne $I11, -1, rxscan500_done1028
    goto rxscan500_scan1027
  rxscan500_loop1026:
    inc rx499_pos
    gt rx499_pos, rx499_eos, rx499_fail1022
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!from", rx499_pos
  rxscan500_scan1027:
    nqp_rxmark rx499_bstack, rxscan500_loop1026, rx499_pos, 0
  rxscan500_done1028:
  alt501_01030:
    nqp_rxmark rx499_bstack, alt501_11031, rx499_pos, 0
    ge rx499_pos, rx499_eos, rx499_fail1022
    substr $S11, rx499_tgt, rx499_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx499_fail1022
    goto alt501_end1029
  alt501_11031:
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!pos", rx499_pos
    $P11 = rx499_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx499_curclass, "$!pos"
    lt $I11, 0, rx499_fail1022
    repr_get_attr_int rx499_pos, $P11, rx499_curclass, "$!pos"
  alt501_end1029:
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!pos", rx499_pos
    $P11 = rx499_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx499_curclass, "$!pos"
    lt $I11, 0, rx499_fail1022
    repr_get_attr_int rx499_pos, $P11, rx499_curclass, "$!pos"
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!pos", rx499_pos
    $P11 = rx499_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx499_curclass, "$!pos"
    lt $I11, 0, rx499_fail1022
    nqp_rxmark rx499_bstack, rxsubrule504_pass1034, -1, 0
  rxsubrule504_pass1034:
    rx499_cstack = rx499_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx499_pos, $P11, rx499_curclass, "$!pos"
    rx499_cur."!cursor_pass"(rx499_pos, "block", 'backtrack'=>1)
    .return (rx499_cur)
  rx499_restart1021:
    repr_get_attr_obj rx499_cstack, rx499_cur, rx499_curclass, "$!cstack"
  rx499_fail1022:
    unless rx499_bstack, rx499_done1020
    pop $I19, rx499_bstack
    if_null rx499_cstack, rx499_cstack_done1025
    unless rx499_cstack, rx499_cstack_done1025
    dec $I19
    set $P11, rx499_cstack[$I19]
  rx499_cstack_done1025:
    pop rx499_rep, rx499_bstack
    pop rx499_pos, rx499_bstack
    pop $I19, rx499_bstack
    lt rx499_pos, -1, rx499_done1020
    lt rx499_pos, 0, rx499_fail1022
    eq $I19, 0, rx499_fail1022
    nqp_islist $I20, rx499_cstack
    unless $I20, rx499_jump1023
    elements $I18, rx499_bstack
    le $I18, 0, rx499_cut1024
    dec $I18
    set $I18, rx499_bstack[$I18]
  rx499_cut1024:
    assign rx499_cstack, $I18
  rx499_jump1023:
    jump $I19
  rx499_done1020:
    rx499_cur."!cursor_fail"()
    .return (rx499_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_55_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 944
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_116 
    .local pmc pkg_viv_tmp_24 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx505_start
    .local string rx505_tgt
    .local int rx505_pos
    .local int rx505_off
    .local int rx505_eos
    .local int rx505_rep
    .local pmc rx505_cur
    .local pmc rx505_curclass
    .local pmc rx505_bstack
    .local pmc rx505_cstack
    rx505_start = self."!cursor_start_all"()
    set rx505_cur, rx505_start[0]
    set rx505_tgt, rx505_start[1]
    set rx505_pos, rx505_start[2]
    set rx505_curclass, rx505_start[3]
    set rx505_bstack, rx505_start[4]
    set $I19, rx505_start[5]
    store_lex unicode:"$\x{a2}", rx505_cur
    length rx505_eos, rx505_tgt
    eq $I19, 1, rx505_restart1037
    gt rx505_pos, rx505_eos, rx505_fail1038
    repr_get_attr_int $I11, self, rx505_curclass, "$!from"
    ne $I11, -1, rxscan506_done1044
    goto rxscan506_scan1043
  rxscan506_loop1042:
    inc rx505_pos
    gt rx505_pos, rx505_eos, rx505_fail1038
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!from", rx505_pos
  rxscan506_scan1043:
    nqp_rxmark rx505_bstack, rxscan506_loop1042, rx505_pos, 0
  rxscan506_done1044:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    store_lex unicode:"$\x{a2}", rx505_cur
    unless_null $P101, fallback1045
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_116, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_116
    unless $I5001 goto if507_else1046 
    set $P5004, fb_tmp_116["%HANDLERS"]
    set $P5006, $P5004
    goto if507_end1047
  if507_else1046:
    null $P5005
    set $P5006, $P5005
  if507_end1047:
    unless_null $P5006, vivi_5081048
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_5081048:
    unless_null $P5006, vivi_5091049
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_5091049:
    set $P101, $P5006
  fallback1045:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
  alt511_01052:
    nqp_rxmark rx505_bstack, alt511_11054, rx505_pos, 0
    add $I11, rx505_pos, 14
    gt $I11, rx505_eos, rx505_fail1038
    substr $S10, rx505_tgt, rx505_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx505_fail1038
    add rx505_pos, 14
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    nqp_rxmark rx505_bstack, rxsubrule512_pass1053, -1, 0
  rxsubrule512_pass1053:
    rx505_cstack = rx505_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
    goto alt511_end1051
  alt511_11054:
    add $I11, rx505_pos, 1
    gt $I11, rx505_eos, rx505_fail1038
    substr $S10, rx505_tgt, rx505_pos, 1
    ne $S10, ucs4:"{", rx505_fail1038
    add rx505_pos, 1
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    nqp_rxmark rx505_bstack, rxsubrule513_pass1055, -1, 0
  rxsubrule513_pass1055:
    rx505_cstack = rx505_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
  alt514_01057:
    nqp_rxmark rx505_bstack, alt514_11058, rx505_pos, 0
    add $I11, rx505_pos, 1
    gt $I11, rx505_eos, rx505_fail1038
    substr $S10, rx505_tgt, rx505_pos, 1
    ne $S10, ucs4:"}", rx505_fail1038
    add rx505_pos, 1
    goto alt514_end1056
  alt514_11058:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."FAILGOAL"("'}' ")
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    goto rxsubrule515_pass1059
  rxsubrule515_back1060:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
  rxsubrule515_pass1059:
    rx505_cstack = rx505_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule515_back1060
    push rx505_bstack, $I11
    push rx505_bstack, 0
    push rx505_bstack, rx505_pos
    elements $I11, rx505_cstack
    push rx505_bstack, $I11
    repr_get_attr_int rx505_pos, $P11, rx505_curclass, "$!pos"
  alt514_end1056:
  alt511_end1051:
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!pos", rx505_pos
    $P11 = rx505_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx505_curclass, "$!pos"
    lt $I11, 0, rx505_fail1038
    rx505_cur."!cursor_pass"(rx505_pos, "blockoid", 'backtrack'=>1)
    .return (rx505_cur)
  rx505_restart1037:
    repr_get_attr_obj rx505_cstack, rx505_cur, rx505_curclass, "$!cstack"
  rx505_fail1038:
    unless rx505_bstack, rx505_done1036
    pop $I19, rx505_bstack
    if_null rx505_cstack, rx505_cstack_done1041
    unless rx505_cstack, rx505_cstack_done1041
    dec $I19
    set $P11, rx505_cstack[$I19]
  rx505_cstack_done1041:
    pop rx505_rep, rx505_bstack
    pop rx505_pos, rx505_bstack
    pop $I19, rx505_bstack
    lt rx505_pos, -1, rx505_done1036
    lt rx505_pos, 0, rx505_fail1038
    eq $I19, 0, rx505_fail1038
    nqp_islist $I20, rx505_cstack
    unless $I20, rx505_jump1039
    elements $I18, rx505_bstack
    le $I18, 0, rx505_cut1040
    dec $I18
    set $I18, rx505_bstack[$I18]
  rx505_cut1040:
    assign rx505_cstack, $I18
  rx505_jump1039:
    jump $I19
  rx505_done1036:
    rx505_cur."!cursor_fail"()
    .return (rx505_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_56_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 954
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx516_start
    .local string rx516_tgt
    .local int rx516_pos
    .local int rx516_off
    .local int rx516_eos
    .local int rx516_rep
    .local pmc rx516_cur
    .local pmc rx516_curclass
    .local pmc rx516_bstack
    .local pmc rx516_cstack
    rx516_start = self."!cursor_start_all"()
    set rx516_cur, rx516_start[0]
    set rx516_tgt, rx516_start[1]
    set rx516_pos, rx516_start[2]
    set rx516_curclass, rx516_start[3]
    set rx516_bstack, rx516_start[4]
    set $I19, rx516_start[5]
    store_lex unicode:"$\x{a2}", rx516_cur
    length rx516_eos, rx516_tgt
    eq $I19, 1, rx516_restart1063
    gt rx516_pos, rx516_eos, rx516_fail1064
    repr_get_attr_int $I11, self, rx516_curclass, "$!from"
    ne $I11, -1, rxscan517_done1070
    goto rxscan517_scan1069
  rxscan517_loop1068:
    inc rx516_pos
    gt rx516_pos, rx516_eos, rx516_fail1064
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!from", rx516_pos
  rxscan517_scan1069:
    nqp_rxmark rx516_bstack, rxscan517_loop1068, rx516_pos, 0
  rxscan517_done1070:
    rx516_cur."!cursor_pass"(rx516_pos, "newpad", 'backtrack'=>1)
    .return (rx516_cur)
  rx516_restart1063:
    repr_get_attr_obj rx516_cstack, rx516_cur, rx516_curclass, "$!cstack"
  rx516_fail1064:
    unless rx516_bstack, rx516_done1062
    pop $I19, rx516_bstack
    if_null rx516_cstack, rx516_cstack_done1067
    unless rx516_cstack, rx516_cstack_done1067
    dec $I19
    set $P11, rx516_cstack[$I19]
  rx516_cstack_done1067:
    pop rx516_rep, rx516_bstack
    pop rx516_pos, rx516_bstack
    pop $I19, rx516_bstack
    lt rx516_pos, -1, rx516_done1062
    lt rx516_pos, 0, rx516_fail1064
    eq $I19, 0, rx516_fail1064
    nqp_islist $I20, rx516_cstack
    unless $I20, rx516_jump1065
    elements $I18, rx516_bstack
    le $I18, 0, rx516_cut1066
    dec $I18
    set $I18, rx516_bstack[$I18]
  rx516_cut1066:
    assign rx516_cstack, $I18
  rx516_jump1065:
    jump $I19
  rx516_done1062:
    rx516_cur."!cursor_fail"()
    .return (rx516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_57_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 955
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx519_start
    .local string rx519_tgt
    .local int rx519_pos
    .local int rx519_off
    .local int rx519_eos
    .local int rx519_rep
    .local pmc rx519_cur
    .local pmc rx519_curclass
    .local pmc rx519_bstack
    .local pmc rx519_cstack
    rx519_start = self."!cursor_start_all"()
    set rx519_cur, rx519_start[0]
    set rx519_tgt, rx519_start[1]
    set rx519_pos, rx519_start[2]
    set rx519_curclass, rx519_start[3]
    set rx519_bstack, rx519_start[4]
    set $I19, rx519_start[5]
    store_lex unicode:"$\x{a2}", rx519_cur
    length rx519_eos, rx519_tgt
    eq $I19, 1, rx519_restart1074
    gt rx519_pos, rx519_eos, rx519_fail1075
    repr_get_attr_int $I11, self, rx519_curclass, "$!from"
    ne $I11, -1, rxscan520_done1081
    goto rxscan520_scan1080
  rxscan520_loop1079:
    inc rx519_pos
    gt rx519_pos, rx519_eos, rx519_fail1075
    repr_bind_attr_int rx519_cur, rx519_curclass, "$!from", rx519_pos
  rxscan520_scan1080:
    nqp_rxmark rx519_bstack, rxscan520_loop1079, rx519_pos, 0
  rxscan520_done1081:
    rx519_cur."!cursor_pass"(rx519_pos, "outerctx", 'backtrack'=>1)
    .return (rx519_cur)
  rx519_restart1074:
    repr_get_attr_obj rx519_cstack, rx519_cur, rx519_curclass, "$!cstack"
  rx519_fail1075:
    unless rx519_bstack, rx519_done1073
    pop $I19, rx519_bstack
    if_null rx519_cstack, rx519_cstack_done1078
    unless rx519_cstack, rx519_cstack_done1078
    dec $I19
    set $P11, rx519_cstack[$I19]
  rx519_cstack_done1078:
    pop rx519_rep, rx519_bstack
    pop rx519_pos, rx519_bstack
    pop $I19, rx519_bstack
    lt rx519_pos, -1, rx519_done1073
    lt rx519_pos, 0, rx519_fail1075
    eq $I19, 0, rx519_fail1075
    nqp_islist $I20, rx519_cstack
    unless $I20, rx519_jump1076
    elements $I18, rx519_bstack
    le $I18, 0, rx519_cut1077
    dec $I18
    set $I18, rx519_bstack[$I18]
  rx519_cut1077:
    assign rx519_cstack, $I18
  rx519_jump1076:
    jump $I19
  rx519_done1073:
    rx519_cur."!cursor_fail"()
    .return (rx519_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_58_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 956
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx522_start
    .local string rx522_tgt
    .local int rx522_pos
    .local int rx522_off
    .local int rx522_eos
    .local int rx522_rep
    .local pmc rx522_cur
    .local pmc rx522_curclass
    .local pmc rx522_bstack
    .local pmc rx522_cstack
    rx522_start = self."!cursor_start_all"()
    set rx522_cur, rx522_start[0]
    set rx522_tgt, rx522_start[1]
    set rx522_pos, rx522_start[2]
    set rx522_curclass, rx522_start[3]
    set rx522_bstack, rx522_start[4]
    set $I19, rx522_start[5]
    store_lex unicode:"$\x{a2}", rx522_cur
    length rx522_eos, rx522_tgt
    eq $I19, 1, rx522_restart1085
    gt rx522_pos, rx522_eos, rx522_fail1086
    repr_get_attr_int $I11, self, rx522_curclass, "$!from"
    ne $I11, -1, rxscan523_done1092
    goto rxscan523_scan1091
  rxscan523_loop1090:
    inc rx522_pos
    gt rx522_pos, rx522_eos, rx522_fail1086
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!from", rx522_pos
  rxscan523_scan1091:
    nqp_rxmark rx522_bstack, rxscan523_loop1090, rx522_pos, 0
  rxscan523_done1092:
    rx522_cur."!cursor_pass"(rx522_pos, "finishpad", 'backtrack'=>1)
    .return (rx522_cur)
  rx522_restart1085:
    repr_get_attr_obj rx522_cstack, rx522_cur, rx522_curclass, "$!cstack"
  rx522_fail1086:
    unless rx522_bstack, rx522_done1084
    pop $I19, rx522_bstack
    if_null rx522_cstack, rx522_cstack_done1089
    unless rx522_cstack, rx522_cstack_done1089
    dec $I19
    set $P11, rx522_cstack[$I19]
  rx522_cstack_done1089:
    pop rx522_rep, rx522_bstack
    pop rx522_pos, rx522_bstack
    pop $I19, rx522_bstack
    lt rx522_pos, -1, rx522_done1084
    lt rx522_pos, 0, rx522_fail1086
    eq $I19, 0, rx522_fail1086
    nqp_islist $I20, rx522_cstack
    unless $I20, rx522_jump1087
    elements $I18, rx522_bstack
    le $I18, 0, rx522_cut1088
    dec $I18
    set $I18, rx522_bstack[$I18]
  rx522_cut1088:
    assign rx522_cstack, $I18
  rx522_jump1087:
    jump $I19
  rx522_done1084:
    rx522_cur."!cursor_fail"()
    .return (rx522_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_59_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 957
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx525_start
    .local string rx525_tgt
    .local int rx525_pos
    .local int rx525_off
    .local int rx525_eos
    .local int rx525_rep
    .local pmc rx525_cur
    .local pmc rx525_curclass
    .local pmc rx525_bstack
    .local pmc rx525_cstack
    rx525_start = self."!cursor_start_all"()
    set rx525_cur, rx525_start[0]
    set rx525_tgt, rx525_start[1]
    set rx525_pos, rx525_start[2]
    set rx525_curclass, rx525_start[3]
    set rx525_bstack, rx525_start[4]
    set $I19, rx525_start[5]
    store_lex unicode:"$\x{a2}", rx525_cur
    length rx525_eos, rx525_tgt
    eq $I19, 1, rx525_restart1096
    gt rx525_pos, rx525_eos, rx525_fail1097
    repr_get_attr_int $I11, self, rx525_curclass, "$!from"
    ne $I11, -1, rxscan526_done1103
    goto rxscan526_scan1102
  rxscan526_loop1101:
    inc rx525_pos
    gt rx525_pos, rx525_eos, rx525_fail1097
    repr_bind_attr_int rx525_cur, rx525_curclass, "$!from", rx525_pos
  rxscan526_scan1102:
    nqp_rxmark rx525_bstack, rxscan526_loop1101, rx525_pos, 0
  rxscan526_done1103:
    rx525_cur."!cursor_pass"(rx525_pos, "you_are_here", 'backtrack'=>1)
    .return (rx525_cur)
  rx525_restart1096:
    repr_get_attr_obj rx525_cstack, rx525_cur, rx525_curclass, "$!cstack"
  rx525_fail1097:
    unless rx525_bstack, rx525_done1095
    pop $I19, rx525_bstack
    if_null rx525_cstack, rx525_cstack_done1100
    unless rx525_cstack, rx525_cstack_done1100
    dec $I19
    set $P11, rx525_cstack[$I19]
  rx525_cstack_done1100:
    pop rx525_rep, rx525_bstack
    pop rx525_pos, rx525_bstack
    pop $I19, rx525_bstack
    lt rx525_pos, -1, rx525_done1095
    lt rx525_pos, 0, rx525_fail1097
    eq $I19, 0, rx525_fail1097
    nqp_islist $I20, rx525_cstack
    unless $I20, rx525_jump1098
    elements $I18, rx525_bstack
    le $I18, 0, rx525_cut1099
    dec $I18
    set $I18, rx525_bstack[$I18]
  rx525_cut1099:
    assign rx525_cstack, $I18
  rx525_jump1098:
    jump $I19
  rx525_done1095:
    rx525_cur."!cursor_fail"()
    .return (rx525_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_60_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 959
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_61_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 961
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx528_start
    .local string rx528_tgt
    .local int rx528_pos
    .local int rx528_off
    .local int rx528_eos
    .local int rx528_rep
    .local pmc rx528_cur
    .local pmc rx528_curclass
    .local pmc rx528_bstack
    .local pmc rx528_cstack
    rx528_start = self."!cursor_start_all"()
    set rx528_cur, rx528_start[0]
    set rx528_tgt, rx528_start[1]
    set rx528_pos, rx528_start[2]
    set rx528_curclass, rx528_start[3]
    set rx528_bstack, rx528_start[4]
    set $I19, rx528_start[5]
    store_lex unicode:"$\x{a2}", rx528_cur
    length rx528_eos, rx528_tgt
    eq $I19, 1, rx528_restart1107
    gt rx528_pos, rx528_eos, rx528_fail1108
    repr_get_attr_int $I11, self, rx528_curclass, "$!from"
    ne $I11, -1, rxscan529_done1114
    goto rxscan529_scan1113
  rxscan529_loop1112:
    inc rx528_pos
    gt rx528_pos, rx528_eos, rx528_fail1108
    repr_bind_attr_int rx528_cur, rx528_curclass, "$!from", rx528_pos
  rxscan529_scan1113:
    nqp_rxmark rx528_bstack, rxscan529_loop1112, rx528_pos, 0
  rxscan529_done1114:
    ge rx528_pos, rx528_eos, rx528_fail1108
    substr $S11, rx528_tgt, rx528_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx528_fail1108
    rx528_cur."!cursor_pass"(rx528_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx528_cur)
  rx528_restart1107:
    repr_get_attr_obj rx528_cstack, rx528_cur, rx528_curclass, "$!cstack"
  rx528_fail1108:
    unless rx528_bstack, rx528_done1106
    pop $I19, rx528_bstack
    if_null rx528_cstack, rx528_cstack_done1111
    unless rx528_cstack, rx528_cstack_done1111
    dec $I19
    set $P11, rx528_cstack[$I19]
  rx528_cstack_done1111:
    pop rx528_rep, rx528_bstack
    pop rx528_pos, rx528_bstack
    pop $I19, rx528_bstack
    lt rx528_pos, -1, rx528_done1106
    lt rx528_pos, 0, rx528_fail1108
    eq $I19, 0, rx528_fail1108
    nqp_islist $I20, rx528_cstack
    unless $I20, rx528_jump1109
    elements $I18, rx528_bstack
    le $I18, 0, rx528_cut1110
    dec $I18
    set $I18, rx528_bstack[$I18]
  rx528_cut1110:
    assign rx528_cstack, $I18
  rx528_jump1109:
    jump $I19
  rx528_done1106:
    rx528_cur."!cursor_fail"()
    .return (rx528_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_62_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 962
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx530_start
    .local string rx530_tgt
    .local int rx530_pos
    .local int rx530_off
    .local int rx530_eos
    .local int rx530_rep
    .local pmc rx530_cur
    .local pmc rx530_curclass
    .local pmc rx530_bstack
    .local pmc rx530_cstack
    rx530_start = self."!cursor_start_all"()
    set rx530_cur, rx530_start[0]
    set rx530_tgt, rx530_start[1]
    set rx530_pos, rx530_start[2]
    set rx530_curclass, rx530_start[3]
    set rx530_bstack, rx530_start[4]
    set $I19, rx530_start[5]
    store_lex unicode:"$\x{a2}", rx530_cur
    length rx530_eos, rx530_tgt
    eq $I19, 1, rx530_restart1117
    gt rx530_pos, rx530_eos, rx530_fail1118
    repr_get_attr_int $I11, self, rx530_curclass, "$!from"
    ne $I11, -1, rxscan531_done1124
    goto rxscan531_scan1123
  rxscan531_loop1122:
    inc rx530_pos
    gt rx530_pos, rx530_eos, rx530_fail1118
    repr_bind_attr_int rx530_cur, rx530_curclass, "$!from", rx530_pos
  rxscan531_scan1123:
    nqp_rxmark rx530_bstack, rxscan531_loop1122, rx530_pos, 0
  rxscan531_done1124:
    ge rx530_pos, rx530_eos, rx530_fail1118
    substr $S11, rx530_tgt, rx530_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx530_fail1118
    rx530_cur."!cursor_pass"(rx530_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx530_cur)
  rx530_restart1117:
    repr_get_attr_obj rx530_cstack, rx530_cur, rx530_curclass, "$!cstack"
  rx530_fail1118:
    unless rx530_bstack, rx530_done1116
    pop $I19, rx530_bstack
    if_null rx530_cstack, rx530_cstack_done1121
    unless rx530_cstack, rx530_cstack_done1121
    dec $I19
    set $P11, rx530_cstack[$I19]
  rx530_cstack_done1121:
    pop rx530_rep, rx530_bstack
    pop rx530_pos, rx530_bstack
    pop $I19, rx530_bstack
    lt rx530_pos, -1, rx530_done1116
    lt rx530_pos, 0, rx530_fail1118
    eq $I19, 0, rx530_fail1118
    nqp_islist $I20, rx530_cstack
    unless $I20, rx530_jump1119
    elements $I18, rx530_bstack
    le $I18, 0, rx530_cut1120
    dec $I18
    set $I18, rx530_bstack[$I18]
  rx530_cut1120:
    assign rx530_cstack, $I18
  rx530_jump1119:
    jump $I19
  rx530_done1116:
    rx530_cur."!cursor_fail"()
    .return (rx530_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_63_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 966
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_64_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 968
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx532_start
    .local string rx532_tgt
    .local int rx532_pos
    .local int rx532_off
    .local int rx532_eos
    .local int rx532_rep
    .local pmc rx532_cur
    .local pmc rx532_curclass
    .local pmc rx532_bstack
    .local pmc rx532_cstack
    rx532_start = self."!cursor_start_all"()
    set rx532_cur, rx532_start[0]
    set rx532_tgt, rx532_start[1]
    set rx532_pos, rx532_start[2]
    set rx532_curclass, rx532_start[3]
    set rx532_bstack, rx532_start[4]
    set $I19, rx532_start[5]
    store_lex unicode:"$\x{a2}", rx532_cur
    length rx532_eos, rx532_tgt
    eq $I19, 1, rx532_restart1127
    gt rx532_pos, rx532_eos, rx532_fail1128
    repr_get_attr_int $I11, self, rx532_curclass, "$!from"
    ne $I11, -1, rxscan533_done1134
    goto rxscan533_scan1133
  rxscan533_loop1132:
    inc rx532_pos
    gt rx532_pos, rx532_eos, rx532_fail1128
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!from", rx532_pos
  rxscan533_scan1133:
    nqp_rxmark rx532_bstack, rxscan533_loop1132, rx532_pos, 0
  rxscan533_done1134:
    nqp_rxmark rx532_bstack, rxcap534_fail1136, rx532_pos, 0
    add $I11, rx532_pos, 3
    gt $I11, rx532_eos, rx532_fail1128
    substr $S10, rx532_tgt, rx532_pos, 3
    ne $S10, ucs4:"use", rx532_fail1128
    add rx532_pos, 3
    nqp_rxpeek $I19, rx532_bstack, rxcap534_fail1136
    inc $I19
    set $I11, rx532_bstack[$I19]
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx532_pos)
    rx532_cstack = rx532_cur."!cursor_capture"($P11, "sym")
    goto rxcap534_done1135
  rxcap534_fail1136:
    goto rx532_fail1128
  rxcap534_done1135:
    ge rx532_pos, rx532_eos, rx532_fail1128
    is_cclass $I11, .CCLASS_WHITESPACE, rx532_tgt, rx532_pos
    unless $I11, rx532_fail1128
    add rx532_pos, 1
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."ws"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
    goto rxsubrule535_pass1137
  rxsubrule535_back1138:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
  rxsubrule535_pass1137:
    rx532_cstack = rx532_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule535_back1138
    push rx532_bstack, $I11
    push rx532_bstack, 0
    push rx532_bstack, rx532_pos
    elements $I11, rx532_cstack
    push rx532_bstack, $I11
    repr_get_attr_int rx532_pos, $P11, rx532_curclass, "$!pos"
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."name"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
    goto rxsubrule536_pass1139
  rxsubrule536_back1140:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
  rxsubrule536_pass1139:
    rx532_cstack = rx532_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule536_back1140
    push rx532_bstack, $I11
    push rx532_bstack, 0
    push rx532_bstack, rx532_pos
    elements $I11, rx532_cstack
    push rx532_bstack, $I11
    repr_get_attr_int rx532_pos, $P11, rx532_curclass, "$!pos"
    repr_bind_attr_int rx532_cur, rx532_curclass, "$!pos", rx532_pos
    $P11 = rx532_cur."ws"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
    goto rxsubrule537_pass1141
  rxsubrule537_back1142:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx532_curclass, "$!pos"
    lt $I11, 0, rx532_fail1128
  rxsubrule537_pass1141:
    rx532_cstack = rx532_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule537_back1142
    push rx532_bstack, $I11
    push rx532_bstack, 0
    push rx532_bstack, rx532_pos
    elements $I11, rx532_cstack
    push rx532_bstack, $I11
    repr_get_attr_int rx532_pos, $P11, rx532_curclass, "$!pos"
    rx532_cur."!cursor_pass"(rx532_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx532_cur)
  rx532_restart1127:
    repr_get_attr_obj rx532_cstack, rx532_cur, rx532_curclass, "$!cstack"
  rx532_fail1128:
    unless rx532_bstack, rx532_done1126
    pop $I19, rx532_bstack
    if_null rx532_cstack, rx532_cstack_done1131
    unless rx532_cstack, rx532_cstack_done1131
    dec $I19
    set $P11, rx532_cstack[$I19]
  rx532_cstack_done1131:
    pop rx532_rep, rx532_bstack
    pop rx532_pos, rx532_bstack
    pop $I19, rx532_bstack
    lt rx532_pos, -1, rx532_done1126
    lt rx532_pos, 0, rx532_fail1128
    eq $I19, 0, rx532_fail1128
    nqp_islist $I20, rx532_cstack
    unless $I20, rx532_jump1129
    elements $I18, rx532_bstack
    le $I18, 0, rx532_cut1130
    dec $I18
    set $I18, rx532_bstack[$I18]
  rx532_cut1130:
    assign rx532_cstack, $I18
  rx532_jump1129:
    jump $I19
  rx532_done1126:
    rx532_cur."!cursor_fail"()
    .return (rx532_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_65_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 972
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx538_start
    .local string rx538_tgt
    .local int rx538_pos
    .local int rx538_off
    .local int rx538_eos
    .local int rx538_rep
    .local pmc rx538_cur
    .local pmc rx538_curclass
    .local pmc rx538_bstack
    .local pmc rx538_cstack
    rx538_start = self."!cursor_start_all"()
    set rx538_cur, rx538_start[0]
    set rx538_tgt, rx538_start[1]
    set rx538_pos, rx538_start[2]
    set rx538_curclass, rx538_start[3]
    set rx538_bstack, rx538_start[4]
    set $I19, rx538_start[5]
    store_lex unicode:"$\x{a2}", rx538_cur
    length rx538_eos, rx538_tgt
    eq $I19, 1, rx538_restart1145
    gt rx538_pos, rx538_eos, rx538_fail1146
    repr_get_attr_int $I11, self, rx538_curclass, "$!from"
    ne $I11, -1, rxscan539_done1152
    goto rxscan539_scan1151
  rxscan539_loop1150:
    inc rx538_pos
    gt rx538_pos, rx538_eos, rx538_fail1146
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!from", rx538_pos
  rxscan539_scan1151:
    nqp_rxmark rx538_bstack, rxscan539_loop1150, rx538_pos, 0
  rxscan539_done1152:
    nqp_rxmark rx538_bstack, rxcap540_fail1154, rx538_pos, 0
    add $I11, rx538_pos, 2
    gt $I11, rx538_eos, rx538_fail1146
    substr $S10, rx538_tgt, rx538_pos, 2
    ne $S10, ucs4:"if", rx538_fail1146
    add rx538_pos, 2
    nqp_rxpeek $I19, rx538_bstack, rxcap540_fail1154
    inc $I19
    set $I11, rx538_bstack[$I19]
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx538_pos)
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "sym")
    goto rxcap540_done1153
  rxcap540_fail1154:
    goto rx538_fail1146
  rxcap540_done1153:
    ge rx538_pos, rx538_eos, rx538_fail1146
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1146
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule541_pass1155
  rxsubrule541_back1156:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule541_pass1155:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule541_back1156
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule542_pass1157
  rxsubrule542_back1158:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule542_pass1157:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule542_back1158
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule543_pass1159
  rxsubrule543_back1160:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule543_pass1159:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule543_back1160
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxquantg544_done1162, rx538_pos, 0
  rxquantg544_loop1161:
    add $I11, rx538_pos, 5
    gt $I11, rx538_eos, rx538_fail1146
    substr $S10, rx538_tgt, rx538_pos, 5
    ne $S10, ucs4:"elsif", rx538_fail1146
    add rx538_pos, 5
    ge rx538_pos, rx538_eos, rx538_fail1146
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1146
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule545_pass1163
  rxsubrule545_back1164:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule545_pass1163:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule545_back1164
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule546_pass1165
  rxsubrule546_back1166:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule546_pass1165:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule546_back1166
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule547_pass1167
  rxsubrule547_back1168:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule547_pass1167:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule547_back1168
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxquantg544_done1162, rx538_pos, rx538_rep
    goto rxquantg544_loop1161
  rxquantg544_done1162:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule548_pass1169
  rxsubrule548_back1170:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule548_pass1169:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule548_back1170
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxquantg549_done1172, rx538_pos, 0
  rxquantg549_loop1171:
    add $I11, rx538_pos, 4
    gt $I11, rx538_eos, rx538_fail1146
    substr $S10, rx538_tgt, rx538_pos, 4
    ne $S10, ucs4:"else", rx538_fail1146
    add rx538_pos, 4
    ge rx538_pos, rx538_eos, rx538_fail1146
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1146
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule550_pass1173
  rxsubrule550_back1174:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule550_pass1173:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule550_back1174
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule551_pass1175
  rxsubrule551_back1176:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule551_pass1175:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "else")
    set_addr $I11, rxsubrule551_back1176
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule552_pass1177
  rxsubrule552_back1178:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule552_pass1177:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule552_back1178
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
  rxquantg549_done1172:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
    goto rxsubrule553_pass1179
  rxsubrule553_back1180:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1146
  rxsubrule553_pass1179:
    rx538_cstack = rx538_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule553_back1180
    push rx538_bstack, $I11
    push rx538_bstack, 0
    push rx538_bstack, rx538_pos
    elements $I11, rx538_cstack
    push rx538_bstack, $I11
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    rx538_cur."!cursor_pass"(rx538_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx538_cur)
  rx538_restart1145:
    repr_get_attr_obj rx538_cstack, rx538_cur, rx538_curclass, "$!cstack"
  rx538_fail1146:
    unless rx538_bstack, rx538_done1144
    pop $I19, rx538_bstack
    if_null rx538_cstack, rx538_cstack_done1149
    unless rx538_cstack, rx538_cstack_done1149
    dec $I19
    set $P11, rx538_cstack[$I19]
  rx538_cstack_done1149:
    pop rx538_rep, rx538_bstack
    pop rx538_pos, rx538_bstack
    pop $I19, rx538_bstack
    lt rx538_pos, -1, rx538_done1144
    lt rx538_pos, 0, rx538_fail1146
    eq $I19, 0, rx538_fail1146
    nqp_islist $I20, rx538_cstack
    unless $I20, rx538_jump1147
    elements $I18, rx538_bstack
    le $I18, 0, rx538_cut1148
    dec $I18
    set $I18, rx538_bstack[$I18]
  rx538_cut1148:
    assign rx538_cstack, $I18
  rx538_jump1147:
    jump $I19
  rx538_done1144:
    rx538_cur."!cursor_fail"()
    .return (rx538_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_66_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 979
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_67_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx554_start
    .local string rx554_tgt
    .local int rx554_pos
    .local int rx554_off
    .local int rx554_eos
    .local int rx554_rep
    .local pmc rx554_cur
    .local pmc rx554_curclass
    .local pmc rx554_bstack
    .local pmc rx554_cstack
    rx554_start = self."!cursor_start_all"()
    set rx554_cur, rx554_start[0]
    set rx554_tgt, rx554_start[1]
    set rx554_pos, rx554_start[2]
    set rx554_curclass, rx554_start[3]
    set rx554_bstack, rx554_start[4]
    set $I19, rx554_start[5]
    store_lex unicode:"$\x{a2}", rx554_cur
    length rx554_eos, rx554_tgt
    eq $I19, 1, rx554_restart1183
    gt rx554_pos, rx554_eos, rx554_fail1184
    repr_get_attr_int $I11, self, rx554_curclass, "$!from"
    ne $I11, -1, rxscan555_done1190
    goto rxscan555_scan1189
  rxscan555_loop1188:
    inc rx554_pos
    gt rx554_pos, rx554_eos, rx554_fail1184
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!from", rx554_pos
  rxscan555_scan1189:
    nqp_rxmark rx554_bstack, rxscan555_loop1188, rx554_pos, 0
  rxscan555_done1190:
    nqp_rxmark rx554_bstack, rxcap556_fail1192, rx554_pos, 0
    add $I11, rx554_pos, 6
    gt $I11, rx554_eos, rx554_fail1184
    substr $S10, rx554_tgt, rx554_pos, 6
    ne $S10, ucs4:"unless", rx554_fail1184
    add rx554_pos, 6
    nqp_rxpeek $I19, rx554_bstack, rxcap556_fail1192
    inc $I19
    set $I11, rx554_bstack[$I19]
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx554_pos)
    rx554_cstack = rx554_cur."!cursor_capture"($P11, "sym")
    goto rxcap556_done1191
  rxcap556_fail1192:
    goto rx554_fail1184
  rxcap556_done1191:
    ge rx554_pos, rx554_eos, rx554_fail1184
    is_cclass $I11, .CCLASS_WHITESPACE, rx554_tgt, rx554_pos
    unless $I11, rx554_fail1184
    add rx554_pos, 1
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule557_pass1193
  rxsubrule557_back1194:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule557_pass1193:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule557_back1194
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule558_pass1195
  rxsubrule558_back1196:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule558_pass1195:
    rx554_cstack = rx554_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule558_back1196
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule559_pass1197
  rxsubrule559_back1198:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule559_pass1197:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule559_back1198
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
  alt560_01200:
    nqp_rxmark rx554_bstack, alt560_11213, rx554_pos, 0
    .const 'Sub' $P5001 = 'cuid_67_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    ge $I11, 0, rx554_fail1184
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule563_pass1211
  rxsubrule563_back1212:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule563_pass1211:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule563_back1212
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    goto alt560_end1199
  alt560_11213:
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule564_pass1214
  rxsubrule564_back1215:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule564_pass1214:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule564_back1215
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule565_pass1216
  rxsubrule565_back1217:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule565_pass1216:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule565_back1217
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
  alt560_end1199:
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
    goto rxsubrule566_pass1218
  rxsubrule566_back1219:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1184
  rxsubrule566_pass1218:
    rx554_cstack = rx554_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule566_back1219
    push rx554_bstack, $I11
    push rx554_bstack, 0
    push rx554_bstack, rx554_pos
    elements $I11, rx554_cstack
    push rx554_bstack, $I11
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    rx554_cur."!cursor_pass"(rx554_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx554_cur)
  rx554_restart1183:
    repr_get_attr_obj rx554_cstack, rx554_cur, rx554_curclass, "$!cstack"
  rx554_fail1184:
    unless rx554_bstack, rx554_done1182
    pop $I19, rx554_bstack
    if_null rx554_cstack, rx554_cstack_done1187
    unless rx554_cstack, rx554_cstack_done1187
    dec $I19
    set $P11, rx554_cstack[$I19]
  rx554_cstack_done1187:
    pop rx554_rep, rx554_bstack
    pop rx554_pos, rx554_bstack
    pop $I19, rx554_bstack
    lt rx554_pos, -1, rx554_done1182
    lt rx554_pos, 0, rx554_fail1184
    eq $I19, 0, rx554_fail1184
    nqp_islist $I20, rx554_cstack
    unless $I20, rx554_jump1185
    elements $I18, rx554_bstack
    le $I18, 0, rx554_cut1186
    dec $I18
    set $I18, rx554_bstack[$I18]
  rx554_cut1186:
    assign rx554_cstack, $I18
  rx554_jump1185:
    jump $I19
  rx554_done1182:
    rx554_cur."!cursor_fail"()
    .return (rx554_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_67_1382959278.72036") :anon :lex :outer("cuid_66_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx561_start
    .local string rx561_tgt
    .local int rx561_pos
    .local int rx561_off
    .local int rx561_eos
    .local int rx561_rep
    .local pmc rx561_cur
    .local pmc rx561_curclass
    .local pmc rx561_bstack
    .local pmc rx561_cstack
    rx561_start = self."!cursor_start_all"()
    set rx561_cur, rx561_start[0]
    set rx561_tgt, rx561_start[1]
    set rx561_pos, rx561_start[2]
    set rx561_curclass, rx561_start[3]
    set rx561_bstack, rx561_start[4]
    set $I19, rx561_start[5]
    store_lex unicode:"$\x{a2}", rx561_cur
    length rx561_eos, rx561_tgt
    eq $I19, 1, rx561_restart1203
    gt rx561_pos, rx561_eos, rx561_fail1204
    repr_get_attr_int $I11, self, rx561_curclass, "$!from"
    ne $I11, -1, rxscan562_done1210
    goto rxscan562_scan1209
  rxscan562_loop1208:
    inc rx561_pos
    index rx561_pos, rx561_tgt, ucs4:"else", rx561_pos
    eq rx561_pos, -1, rx561_fail1204
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!from", rx561_pos
  rxscan562_scan1209:
    nqp_rxmark rx561_bstack, rxscan562_loop1208, rx561_pos, 0
  rxscan562_done1210:
    add $I11, rx561_pos, 4
    gt $I11, rx561_eos, rx561_fail1204
    substr $S10, rx561_tgt, rx561_pos, 4
    ne $S10, ucs4:"else", rx561_fail1204
    add rx561_pos, 4
    rx561_cur."!cursor_pass"(rx561_pos, 'backtrack'=>1)
    .return (rx561_cur)
  rx561_restart1203:
    repr_get_attr_obj rx561_cstack, rx561_cur, rx561_curclass, "$!cstack"
  rx561_fail1204:
    unless rx561_bstack, rx561_done1202
    pop $I19, rx561_bstack
    if_null rx561_cstack, rx561_cstack_done1207
    unless rx561_cstack, rx561_cstack_done1207
    dec $I19
    set $P11, rx561_cstack[$I19]
  rx561_cstack_done1207:
    pop rx561_rep, rx561_bstack
    pop rx561_pos, rx561_bstack
    pop $I19, rx561_bstack
    lt rx561_pos, -1, rx561_done1202
    lt rx561_pos, 0, rx561_fail1204
    eq $I19, 0, rx561_fail1204
    nqp_islist $I20, rx561_cstack
    unless $I20, rx561_jump1205
    elements $I18, rx561_bstack
    le $I18, 0, rx561_cut1206
    dec $I18
    set $I18, rx561_bstack[$I18]
  rx561_cut1206:
    assign rx561_cstack, $I18
  rx561_jump1205:
    jump $I19
  rx561_done1202:
    rx561_cur."!cursor_fail"()
    .return (rx561_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_68_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 985
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx567_start
    .local string rx567_tgt
    .local int rx567_pos
    .local int rx567_off
    .local int rx567_eos
    .local int rx567_rep
    .local pmc rx567_cur
    .local pmc rx567_curclass
    .local pmc rx567_bstack
    .local pmc rx567_cstack
    rx567_start = self."!cursor_start_all"()
    set rx567_cur, rx567_start[0]
    set rx567_tgt, rx567_start[1]
    set rx567_pos, rx567_start[2]
    set rx567_curclass, rx567_start[3]
    set rx567_bstack, rx567_start[4]
    set $I19, rx567_start[5]
    store_lex unicode:"$\x{a2}", rx567_cur
    length rx567_eos, rx567_tgt
    eq $I19, 1, rx567_restart1222
    gt rx567_pos, rx567_eos, rx567_fail1223
    repr_get_attr_int $I11, self, rx567_curclass, "$!from"
    ne $I11, -1, rxscan568_done1229
    goto rxscan568_scan1228
  rxscan568_loop1227:
    inc rx567_pos
    gt rx567_pos, rx567_eos, rx567_fail1223
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!from", rx567_pos
  rxscan568_scan1228:
    nqp_rxmark rx567_bstack, rxscan568_loop1227, rx567_pos, 0
  rxscan568_done1229:
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    store_lex unicode:"$\x{a2}", rx567_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx567_bstack, rxcap569_fail1231, rx567_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt570_01233
    nqp_push_label $P11, alt570_11234
    nqp_rxmark rx567_bstack, alt570_end1232, -1, 0
    rx567_cur."!alt"(rx567_pos, "alt_nfa__11_1382959280.77123", $P11)
    goto rx567_fail1223
  alt570_01233:
    add $I11, rx567_pos, 5
    gt $I11, rx567_eos, rx567_fail1223
    substr $S10, rx567_tgt, rx567_pos, 5
    ne $S10, ucs4:"while", rx567_fail1223
    add rx567_pos, 5
    goto alt570_end1232
  alt570_11234:
    add $I11, rx567_pos, 5
    gt $I11, rx567_eos, rx567_fail1223
    substr $S10, rx567_tgt, rx567_pos, 5
    ne $S10, ucs4:"until", rx567_fail1223
    add rx567_pos, 5
    goto alt570_end1232
  alt570_end1232:
    nqp_rxcommit rx567_bstack, alt570_end1232
    nqp_rxpeek $I19, rx567_bstack, rxcap569_fail1231
    inc $I19
    set $I11, rx567_bstack[$I19]
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx567_pos)
    rx567_cstack = rx567_cur."!cursor_capture"($P11, "sym")
    goto rxcap569_done1230
  rxcap569_fail1231:
    goto rx567_fail1223
  rxcap569_done1230:
    ge rx567_pos, rx567_eos, rx567_fail1223
    is_cclass $I11, .CCLASS_WHITESPACE, rx567_tgt, rx567_pos
    unless $I11, rx567_fail1223
    add rx567_pos, 1
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."ws"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
    goto rxsubrule571_pass1235
  rxsubrule571_back1236:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
  rxsubrule571_pass1235:
    rx567_cstack = rx567_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule571_back1236
    push rx567_bstack, $I11
    push rx567_bstack, 0
    push rx567_bstack, rx567_pos
    elements $I11, rx567_cstack
    push rx567_bstack, $I11
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
    goto rxsubrule572_pass1237
  rxsubrule572_back1238:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
  rxsubrule572_pass1237:
    rx567_cstack = rx567_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule572_back1238
    push rx567_bstack, $I11
    push rx567_bstack, 0
    push rx567_bstack, rx567_pos
    elements $I11, rx567_cstack
    push rx567_bstack, $I11
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."ws"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
    goto rxsubrule573_pass1239
  rxsubrule573_back1240:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1223
  rxsubrule573_pass1239:
    rx567_cstack = rx567_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule573_back1240
    push rx567_bstack, $I11
    push rx567_bstack, 0
    push rx567_bstack, rx567_pos
    elements $I11, rx567_cstack
    push rx567_bstack, $I11
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    rx567_cur."!cursor_pass"(rx567_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx567_cur)
  rx567_restart1222:
    repr_get_attr_obj rx567_cstack, rx567_cur, rx567_curclass, "$!cstack"
  rx567_fail1223:
    unless rx567_bstack, rx567_done1221
    pop $I19, rx567_bstack
    if_null rx567_cstack, rx567_cstack_done1226
    unless rx567_cstack, rx567_cstack_done1226
    dec $I19
    set $P11, rx567_cstack[$I19]
  rx567_cstack_done1226:
    pop rx567_rep, rx567_bstack
    pop rx567_pos, rx567_bstack
    pop $I19, rx567_bstack
    lt rx567_pos, -1, rx567_done1221
    lt rx567_pos, 0, rx567_fail1223
    eq $I19, 0, rx567_fail1223
    nqp_islist $I20, rx567_cstack
    unless $I20, rx567_jump1224
    elements $I18, rx567_bstack
    le $I18, 0, rx567_cut1225
    dec $I18
    set $I18, rx567_bstack[$I18]
  rx567_cut1225:
    assign rx567_cstack, $I18
  rx567_jump1224:
    jump $I19
  rx567_done1221:
    rx567_cur."!cursor_fail"()
    .return (rx567_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_69_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 991
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx574_start
    .local string rx574_tgt
    .local int rx574_pos
    .local int rx574_off
    .local int rx574_eos
    .local int rx574_rep
    .local pmc rx574_cur
    .local pmc rx574_curclass
    .local pmc rx574_bstack
    .local pmc rx574_cstack
    rx574_start = self."!cursor_start_all"()
    set rx574_cur, rx574_start[0]
    set rx574_tgt, rx574_start[1]
    set rx574_pos, rx574_start[2]
    set rx574_curclass, rx574_start[3]
    set rx574_bstack, rx574_start[4]
    set $I19, rx574_start[5]
    store_lex unicode:"$\x{a2}", rx574_cur
    length rx574_eos, rx574_tgt
    eq $I19, 1, rx574_restart1243
    gt rx574_pos, rx574_eos, rx574_fail1244
    repr_get_attr_int $I11, self, rx574_curclass, "$!from"
    ne $I11, -1, rxscan575_done1250
    goto rxscan575_scan1249
  rxscan575_loop1248:
    inc rx574_pos
    gt rx574_pos, rx574_eos, rx574_fail1244
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!from", rx574_pos
  rxscan575_scan1249:
    nqp_rxmark rx574_bstack, rxscan575_loop1248, rx574_pos, 0
  rxscan575_done1250:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    store_lex unicode:"$\x{a2}", rx574_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx574_bstack, rxcap576_fail1252, rx574_pos, 0
    add $I11, rx574_pos, 6
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 6
    ne $S10, ucs4:"repeat", rx574_fail1244
    add rx574_pos, 6
    nqp_rxpeek $I19, rx574_bstack, rxcap576_fail1252
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "sym")
    goto rxcap576_done1251
  rxcap576_fail1252:
    goto rx574_fail1244
  rxcap576_done1251:
    ge rx574_pos, rx574_eos, rx574_fail1244
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1244
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule577_pass1253
  rxsubrule577_back1254:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule577_pass1253:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule577_back1254
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt578_01256
    nqp_push_label $P11, alt578_11268
    nqp_rxmark rx574_bstack, alt578_end1255, -1, 0
    rx574_cur."!alt"(rx574_pos, "alt_nfa__14_1382959280.7967", $P11)
    goto rx574_fail1244
  alt578_01256:
    nqp_rxmark rx574_bstack, rxcap579_fail1258, rx574_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt580_01260
    nqp_push_label $P11, alt580_11261
    nqp_rxmark rx574_bstack, alt580_end1259, -1, 0
    rx574_cur."!alt"(rx574_pos, "alt_nfa__12_1382959280.79561", $P11)
    goto rx574_fail1244
  alt580_01260:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"while", rx574_fail1244
    add rx574_pos, 5
    goto alt580_end1259
  alt580_11261:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"until", rx574_fail1244
    add rx574_pos, 5
    goto alt580_end1259
  alt580_end1259:
    nqp_rxcommit rx574_bstack, alt580_end1259
    nqp_rxpeek $I19, rx574_bstack, rxcap579_fail1258
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "wu")
    goto rxcap579_done1257
  rxcap579_fail1258:
    goto rx574_fail1244
  rxcap579_done1257:
    ge rx574_pos, rx574_eos, rx574_fail1244
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1244
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule581_pass1262
  rxsubrule581_back1263:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule581_pass1262:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule581_back1263
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule582_pass1264
  rxsubrule582_back1265:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule582_pass1264:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule582_back1265
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule583_pass1266
  rxsubrule583_back1267:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule583_pass1266:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule583_back1267
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    goto alt578_end1255
  alt578_11268:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule584_pass1269
  rxsubrule584_back1270:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule584_pass1269:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "pblock")
    set_addr $I11, rxsubrule584_back1270
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule585_pass1271
  rxsubrule585_back1272:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule585_pass1271:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule585_back1272
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    nqp_rxmark rx574_bstack, rxcap586_fail1274, rx574_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt587_01276
    nqp_push_label $P11, alt587_11277
    nqp_rxmark rx574_bstack, alt587_end1275, -1, 0
    rx574_cur."!alt"(rx574_pos, "alt_nfa__13_1382959280.79623", $P11)
    goto rx574_fail1244
  alt587_01276:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"while", rx574_fail1244
    add rx574_pos, 5
    goto alt587_end1275
  alt587_11277:
    add $I11, rx574_pos, 5
    gt $I11, rx574_eos, rx574_fail1244
    substr $S10, rx574_tgt, rx574_pos, 5
    ne $S10, ucs4:"until", rx574_fail1244
    add rx574_pos, 5
    goto alt587_end1275
  alt587_end1275:
    nqp_rxcommit rx574_bstack, alt587_end1275
    nqp_rxpeek $I19, rx574_bstack, rxcap586_fail1274
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "wu")
    goto rxcap586_done1273
  rxcap586_fail1274:
    goto rx574_fail1244
  rxcap586_done1273:
    ge rx574_pos, rx574_eos, rx574_fail1244
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1244
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule588_pass1278
  rxsubrule588_back1279:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule588_pass1278:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule588_back1279
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule589_pass1280
  rxsubrule589_back1281:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule589_pass1280:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule589_back1281
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule590_pass1282
  rxsubrule590_back1283:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule590_pass1282:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule590_back1283
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    goto alt578_end1255
  alt578_end1255:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
    goto rxsubrule591_pass1284
  rxsubrule591_back1285:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1244
  rxsubrule591_pass1284:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule591_back1285
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    rx574_cur."!cursor_pass"(rx574_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx574_cur)
  rx574_restart1243:
    repr_get_attr_obj rx574_cstack, rx574_cur, rx574_curclass, "$!cstack"
  rx574_fail1244:
    unless rx574_bstack, rx574_done1242
    pop $I19, rx574_bstack
    if_null rx574_cstack, rx574_cstack_done1247
    unless rx574_cstack, rx574_cstack_done1247
    dec $I19
    set $P11, rx574_cstack[$I19]
  rx574_cstack_done1247:
    pop rx574_rep, rx574_bstack
    pop rx574_pos, rx574_bstack
    pop $I19, rx574_bstack
    lt rx574_pos, -1, rx574_done1242
    lt rx574_pos, 0, rx574_fail1244
    eq $I19, 0, rx574_fail1244
    nqp_islist $I20, rx574_cstack
    unless $I20, rx574_jump1245
    elements $I18, rx574_bstack
    le $I18, 0, rx574_cut1246
    dec $I18
    set $I18, rx574_bstack[$I18]
  rx574_cut1246:
    assign rx574_cstack, $I18
  rx574_jump1245:
    jump $I19
  rx574_done1242:
    rx574_cur."!cursor_fail"()
    .return (rx574_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_70_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1000
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx592_start
    .local string rx592_tgt
    .local int rx592_pos
    .local int rx592_off
    .local int rx592_eos
    .local int rx592_rep
    .local pmc rx592_cur
    .local pmc rx592_curclass
    .local pmc rx592_bstack
    .local pmc rx592_cstack
    rx592_start = self."!cursor_start_all"()
    set rx592_cur, rx592_start[0]
    set rx592_tgt, rx592_start[1]
    set rx592_pos, rx592_start[2]
    set rx592_curclass, rx592_start[3]
    set rx592_bstack, rx592_start[4]
    set $I19, rx592_start[5]
    store_lex unicode:"$\x{a2}", rx592_cur
    length rx592_eos, rx592_tgt
    eq $I19, 1, rx592_restart1288
    gt rx592_pos, rx592_eos, rx592_fail1289
    repr_get_attr_int $I11, self, rx592_curclass, "$!from"
    ne $I11, -1, rxscan593_done1295
    goto rxscan593_scan1294
  rxscan593_loop1293:
    inc rx592_pos
    gt rx592_pos, rx592_eos, rx592_fail1289
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!from", rx592_pos
  rxscan593_scan1294:
    nqp_rxmark rx592_bstack, rxscan593_loop1293, rx592_pos, 0
  rxscan593_done1295:
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    store_lex unicode:"$\x{a2}", rx592_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx592_bstack, rxcap594_fail1297, rx592_pos, 0
    add $I11, rx592_pos, 3
    gt $I11, rx592_eos, rx592_fail1289
    substr $S10, rx592_tgt, rx592_pos, 3
    ne $S10, ucs4:"for", rx592_fail1289
    add rx592_pos, 3
    nqp_rxpeek $I19, rx592_bstack, rxcap594_fail1297
    inc $I19
    set $I11, rx592_bstack[$I19]
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx592_pos)
    rx592_cstack = rx592_cur."!cursor_capture"($P11, "sym")
    goto rxcap594_done1296
  rxcap594_fail1297:
    goto rx592_fail1289
  rxcap594_done1296:
    ge rx592_pos, rx592_eos, rx592_fail1289
    is_cclass $I11, .CCLASS_WHITESPACE, rx592_tgt, rx592_pos
    unless $I11, rx592_fail1289
    add rx592_pos, 1
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."ws"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
    goto rxsubrule595_pass1298
  rxsubrule595_back1299:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
  rxsubrule595_pass1298:
    rx592_cstack = rx592_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule595_back1299
    push rx592_bstack, $I11
    push rx592_bstack, 0
    push rx592_bstack, rx592_pos
    elements $I11, rx592_cstack
    push rx592_bstack, $I11
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
    goto rxsubrule596_pass1300
  rxsubrule596_back1301:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
  rxsubrule596_pass1300:
    rx592_cstack = rx592_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule596_back1301
    push rx592_bstack, $I11
    push rx592_bstack, 0
    push rx592_bstack, rx592_pos
    elements $I11, rx592_cstack
    push rx592_bstack, $I11
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."ws"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
    goto rxsubrule597_pass1302
  rxsubrule597_back1303:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1289
  rxsubrule597_pass1302:
    rx592_cstack = rx592_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule597_back1303
    push rx592_bstack, $I11
    push rx592_bstack, 0
    push rx592_bstack, rx592_pos
    elements $I11, rx592_cstack
    push rx592_bstack, $I11
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    rx592_cur."!cursor_pass"(rx592_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx592_cur)
  rx592_restart1288:
    repr_get_attr_obj rx592_cstack, rx592_cur, rx592_curclass, "$!cstack"
  rx592_fail1289:
    unless rx592_bstack, rx592_done1287
    pop $I19, rx592_bstack
    if_null rx592_cstack, rx592_cstack_done1292
    unless rx592_cstack, rx592_cstack_done1292
    dec $I19
    set $P11, rx592_cstack[$I19]
  rx592_cstack_done1292:
    pop rx592_rep, rx592_bstack
    pop rx592_pos, rx592_bstack
    pop $I19, rx592_bstack
    lt rx592_pos, -1, rx592_done1287
    lt rx592_pos, 0, rx592_fail1289
    eq $I19, 0, rx592_fail1289
    nqp_islist $I20, rx592_cstack
    unless $I20, rx592_jump1290
    elements $I18, rx592_bstack
    le $I18, 0, rx592_cut1291
    dec $I18
    set $I18, rx592_bstack[$I18]
  rx592_cut1291:
    assign rx592_cstack, $I18
  rx592_jump1290:
    jump $I19
  rx592_done1287:
    rx592_cur."!cursor_fail"()
    .return (rx592_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_71_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1006
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx598_start
    .local string rx598_tgt
    .local int rx598_pos
    .local int rx598_off
    .local int rx598_eos
    .local int rx598_rep
    .local pmc rx598_cur
    .local pmc rx598_curclass
    .local pmc rx598_bstack
    .local pmc rx598_cstack
    rx598_start = self."!cursor_start_all"()
    set rx598_cur, rx598_start[0]
    set rx598_tgt, rx598_start[1]
    set rx598_pos, rx598_start[2]
    set rx598_curclass, rx598_start[3]
    set rx598_bstack, rx598_start[4]
    set $I19, rx598_start[5]
    store_lex unicode:"$\x{a2}", rx598_cur
    length rx598_eos, rx598_tgt
    eq $I19, 1, rx598_restart1306
    gt rx598_pos, rx598_eos, rx598_fail1307
    repr_get_attr_int $I11, self, rx598_curclass, "$!from"
    ne $I11, -1, rxscan599_done1313
    goto rxscan599_scan1312
  rxscan599_loop1311:
    inc rx598_pos
    gt rx598_pos, rx598_eos, rx598_fail1307
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!from", rx598_pos
  rxscan599_scan1312:
    nqp_rxmark rx598_bstack, rxscan599_loop1311, rx598_pos, 0
  rxscan599_done1313:
    nqp_rxmark rx598_bstack, rxcap600_fail1315, rx598_pos, 0
    add $I11, rx598_pos, 5
    gt $I11, rx598_eos, rx598_fail1307
    substr $S10, rx598_tgt, rx598_pos, 5
    ne $S10, ucs4:"CATCH", rx598_fail1307
    add rx598_pos, 5
    nqp_rxpeek $I19, rx598_bstack, rxcap600_fail1315
    inc $I19
    set $I11, rx598_bstack[$I19]
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx598_pos)
    rx598_cstack = rx598_cur."!cursor_capture"($P11, "sym")
    goto rxcap600_done1314
  rxcap600_fail1315:
    goto rx598_fail1307
  rxcap600_done1314:
    ge rx598_pos, rx598_eos, rx598_fail1307
    is_cclass $I11, .CCLASS_WHITESPACE, rx598_tgt, rx598_pos
    unless $I11, rx598_fail1307
    add rx598_pos, 1
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."ws"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
    goto rxsubrule601_pass1316
  rxsubrule601_back1317:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
  rxsubrule601_pass1316:
    rx598_cstack = rx598_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule601_back1317
    push rx598_bstack, $I11
    push rx598_bstack, 0
    push rx598_bstack, rx598_pos
    elements $I11, rx598_cstack
    push rx598_bstack, $I11
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."block"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
    goto rxsubrule602_pass1318
  rxsubrule602_back1319:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
  rxsubrule602_pass1318:
    rx598_cstack = rx598_cur."!cursor_capture"($P11, "block")
    set_addr $I11, rxsubrule602_back1319
    push rx598_bstack, $I11
    push rx598_bstack, 0
    push rx598_bstack, rx598_pos
    elements $I11, rx598_cstack
    push rx598_bstack, $I11
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."ws"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
    goto rxsubrule603_pass1320
  rxsubrule603_back1321:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1307
  rxsubrule603_pass1320:
    rx598_cstack = rx598_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule603_back1321
    push rx598_bstack, $I11
    push rx598_bstack, 0
    push rx598_bstack, rx598_pos
    elements $I11, rx598_cstack
    push rx598_bstack, $I11
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    rx598_cur."!cursor_pass"(rx598_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx598_cur)
  rx598_restart1306:
    repr_get_attr_obj rx598_cstack, rx598_cur, rx598_curclass, "$!cstack"
  rx598_fail1307:
    unless rx598_bstack, rx598_done1305
    pop $I19, rx598_bstack
    if_null rx598_cstack, rx598_cstack_done1310
    unless rx598_cstack, rx598_cstack_done1310
    dec $I19
    set $P11, rx598_cstack[$I19]
  rx598_cstack_done1310:
    pop rx598_rep, rx598_bstack
    pop rx598_pos, rx598_bstack
    pop $I19, rx598_bstack
    lt rx598_pos, -1, rx598_done1305
    lt rx598_pos, 0, rx598_fail1307
    eq $I19, 0, rx598_fail1307
    nqp_islist $I20, rx598_cstack
    unless $I20, rx598_jump1308
    elements $I18, rx598_bstack
    le $I18, 0, rx598_cut1309
    dec $I18
    set $I18, rx598_bstack[$I18]
  rx598_cut1309:
    assign rx598_cstack, $I18
  rx598_jump1308:
    jump $I19
  rx598_done1305:
    rx598_cur."!cursor_fail"()
    .return (rx598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_72_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1008
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx604_start
    .local string rx604_tgt
    .local int rx604_pos
    .local int rx604_off
    .local int rx604_eos
    .local int rx604_rep
    .local pmc rx604_cur
    .local pmc rx604_curclass
    .local pmc rx604_bstack
    .local pmc rx604_cstack
    rx604_start = self."!cursor_start_all"()
    set rx604_cur, rx604_start[0]
    set rx604_tgt, rx604_start[1]
    set rx604_pos, rx604_start[2]
    set rx604_curclass, rx604_start[3]
    set rx604_bstack, rx604_start[4]
    set $I19, rx604_start[5]
    store_lex unicode:"$\x{a2}", rx604_cur
    length rx604_eos, rx604_tgt
    eq $I19, 1, rx604_restart1324
    gt rx604_pos, rx604_eos, rx604_fail1325
    repr_get_attr_int $I11, self, rx604_curclass, "$!from"
    ne $I11, -1, rxscan605_done1331
    goto rxscan605_scan1330
  rxscan605_loop1329:
    inc rx604_pos
    gt rx604_pos, rx604_eos, rx604_fail1325
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!from", rx604_pos
  rxscan605_scan1330:
    nqp_rxmark rx604_bstack, rxscan605_loop1329, rx604_pos, 0
  rxscan605_done1331:
    nqp_rxmark rx604_bstack, rxcap606_fail1333, rx604_pos, 0
    add $I11, rx604_pos, 7
    gt $I11, rx604_eos, rx604_fail1325
    substr $S10, rx604_tgt, rx604_pos, 7
    ne $S10, ucs4:"CONTROL", rx604_fail1325
    add rx604_pos, 7
    nqp_rxpeek $I19, rx604_bstack, rxcap606_fail1333
    inc $I19
    set $I11, rx604_bstack[$I19]
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx604_pos)
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "sym")
    goto rxcap606_done1332
  rxcap606_fail1333:
    goto rx604_fail1325
  rxcap606_done1332:
    ge rx604_pos, rx604_eos, rx604_fail1325
    is_cclass $I11, .CCLASS_WHITESPACE, rx604_tgt, rx604_pos
    unless $I11, rx604_fail1325
    add rx604_pos, 1
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."ws"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
    goto rxsubrule607_pass1334
  rxsubrule607_back1335:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
  rxsubrule607_pass1334:
    rx604_cstack = rx604_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule607_back1335
    push rx604_bstack, $I11
    push rx604_bstack, 0
    push rx604_bstack, rx604_pos
    elements $I11, rx604_cstack
    push rx604_bstack, $I11
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."block"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
    goto rxsubrule608_pass1336
  rxsubrule608_back1337:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
  rxsubrule608_pass1336:
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "block")
    set_addr $I11, rxsubrule608_back1337
    push rx604_bstack, $I11
    push rx604_bstack, 0
    push rx604_bstack, rx604_pos
    elements $I11, rx604_cstack
    push rx604_bstack, $I11
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."ws"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
    goto rxsubrule609_pass1338
  rxsubrule609_back1339:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1325
  rxsubrule609_pass1338:
    rx604_cstack = rx604_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule609_back1339
    push rx604_bstack, $I11
    push rx604_bstack, 0
    push rx604_bstack, rx604_pos
    elements $I11, rx604_cstack
    push rx604_bstack, $I11
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    rx604_cur."!cursor_pass"(rx604_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx604_cur)
  rx604_restart1324:
    repr_get_attr_obj rx604_cstack, rx604_cur, rx604_curclass, "$!cstack"
  rx604_fail1325:
    unless rx604_bstack, rx604_done1323
    pop $I19, rx604_bstack
    if_null rx604_cstack, rx604_cstack_done1328
    unless rx604_cstack, rx604_cstack_done1328
    dec $I19
    set $P11, rx604_cstack[$I19]
  rx604_cstack_done1328:
    pop rx604_rep, rx604_bstack
    pop rx604_pos, rx604_bstack
    pop $I19, rx604_bstack
    lt rx604_pos, -1, rx604_done1323
    lt rx604_pos, 0, rx604_fail1325
    eq $I19, 0, rx604_fail1325
    nqp_islist $I20, rx604_cstack
    unless $I20, rx604_jump1326
    elements $I18, rx604_bstack
    le $I18, 0, rx604_cut1327
    dec $I18
    set $I18, rx604_bstack[$I18]
  rx604_cut1327:
    assign rx604_cstack, $I18
  rx604_jump1326:
    jump $I19
  rx604_done1323:
    rx604_cur."!cursor_fail"()
    .return (rx604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_73_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1010
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_74_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1011
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx610_start
    .local string rx610_tgt
    .local int rx610_pos
    .local int rx610_off
    .local int rx610_eos
    .local int rx610_rep
    .local pmc rx610_cur
    .local pmc rx610_curclass
    .local pmc rx610_bstack
    .local pmc rx610_cstack
    rx610_start = self."!cursor_start_all"()
    set rx610_cur, rx610_start[0]
    set rx610_tgt, rx610_start[1]
    set rx610_pos, rx610_start[2]
    set rx610_curclass, rx610_start[3]
    set rx610_bstack, rx610_start[4]
    set $I19, rx610_start[5]
    store_lex unicode:"$\x{a2}", rx610_cur
    length rx610_eos, rx610_tgt
    eq $I19, 1, rx610_restart1342
    gt rx610_pos, rx610_eos, rx610_fail1343
    repr_get_attr_int $I11, self, rx610_curclass, "$!from"
    ne $I11, -1, rxscan611_done1349
    goto rxscan611_scan1348
  rxscan611_loop1347:
    inc rx610_pos
    gt rx610_pos, rx610_eos, rx610_fail1343
    repr_bind_attr_int rx610_cur, rx610_curclass, "$!from", rx610_pos
  rxscan611_scan1348:
    nqp_rxmark rx610_bstack, rxscan611_loop1347, rx610_pos, 0
  rxscan611_done1349:
    nqp_rxmark rx610_bstack, rxcap612_fail1351, rx610_pos, 0
    add $I11, rx610_pos, 5
    gt $I11, rx610_eos, rx610_fail1343
    substr $S10, rx610_tgt, rx610_pos, 5
    ne $S10, ucs4:"BEGIN", rx610_fail1343
    add rx610_pos, 5
    nqp_rxpeek $I19, rx610_bstack, rxcap612_fail1351
    inc $I19
    set $I11, rx610_bstack[$I19]
    repr_bind_attr_int rx610_cur, rx610_curclass, "$!pos", rx610_pos
    $P11 = rx610_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx610_pos)
    rx610_cstack = rx610_cur."!cursor_capture"($P11, "sym")
    goto rxcap612_done1350
  rxcap612_fail1351:
    goto rx610_fail1343
  rxcap612_done1350:
    repr_bind_attr_int rx610_cur, rx610_curclass, "$!pos", rx610_pos
    $P11 = rx610_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx610_curclass, "$!pos"
    lt $I11, 0, rx610_fail1343
    nqp_rxmark rx610_bstack, rxsubrule613_pass1352, -1, 0
  rxsubrule613_pass1352:
    rx610_cstack = rx610_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx610_pos, $P11, rx610_curclass, "$!pos"
    rx610_cur."!cursor_pass"(rx610_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx610_cur)
  rx610_restart1342:
    repr_get_attr_obj rx610_cstack, rx610_cur, rx610_curclass, "$!cstack"
  rx610_fail1343:
    unless rx610_bstack, rx610_done1341
    pop $I19, rx610_bstack
    if_null rx610_cstack, rx610_cstack_done1346
    unless rx610_cstack, rx610_cstack_done1346
    dec $I19
    set $P11, rx610_cstack[$I19]
  rx610_cstack_done1346:
    pop rx610_rep, rx610_bstack
    pop rx610_pos, rx610_bstack
    pop $I19, rx610_bstack
    lt rx610_pos, -1, rx610_done1341
    lt rx610_pos, 0, rx610_fail1343
    eq $I19, 0, rx610_fail1343
    nqp_islist $I20, rx610_cstack
    unless $I20, rx610_jump1344
    elements $I18, rx610_bstack
    le $I18, 0, rx610_cut1345
    dec $I18
    set $I18, rx610_bstack[$I18]
  rx610_cut1345:
    assign rx610_cstack, $I18
  rx610_jump1344:
    jump $I19
  rx610_done1341:
    rx610_cur."!cursor_fail"()
    .return (rx610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_75_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1012
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx614_start
    .local string rx614_tgt
    .local int rx614_pos
    .local int rx614_off
    .local int rx614_eos
    .local int rx614_rep
    .local pmc rx614_cur
    .local pmc rx614_curclass
    .local pmc rx614_bstack
    .local pmc rx614_cstack
    rx614_start = self."!cursor_start_all"()
    set rx614_cur, rx614_start[0]
    set rx614_tgt, rx614_start[1]
    set rx614_pos, rx614_start[2]
    set rx614_curclass, rx614_start[3]
    set rx614_bstack, rx614_start[4]
    set $I19, rx614_start[5]
    store_lex unicode:"$\x{a2}", rx614_cur
    length rx614_eos, rx614_tgt
    eq $I19, 1, rx614_restart1355
    gt rx614_pos, rx614_eos, rx614_fail1356
    repr_get_attr_int $I11, self, rx614_curclass, "$!from"
    ne $I11, -1, rxscan615_done1362
    goto rxscan615_scan1361
  rxscan615_loop1360:
    inc rx614_pos
    gt rx614_pos, rx614_eos, rx614_fail1356
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!from", rx614_pos
  rxscan615_scan1361:
    nqp_rxmark rx614_bstack, rxscan615_loop1360, rx614_pos, 0
  rxscan615_done1362:
    nqp_rxmark rx614_bstack, rxcap616_fail1364, rx614_pos, 0
    add $I11, rx614_pos, 4
    gt $I11, rx614_eos, rx614_fail1356
    substr $S10, rx614_tgt, rx614_pos, 4
    ne $S10, ucs4:"INIT", rx614_fail1356
    add rx614_pos, 4
    nqp_rxpeek $I19, rx614_bstack, rxcap616_fail1364
    inc $I19
    set $I11, rx614_bstack[$I19]
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx614_pos)
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "sym")
    goto rxcap616_done1363
  rxcap616_fail1364:
    goto rx614_fail1356
  rxcap616_done1363:
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1356
    nqp_rxmark rx614_bstack, rxsubrule617_pass1365, -1, 0
  rxsubrule617_pass1365:
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    rx614_cur."!cursor_pass"(rx614_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx614_cur)
  rx614_restart1355:
    repr_get_attr_obj rx614_cstack, rx614_cur, rx614_curclass, "$!cstack"
  rx614_fail1356:
    unless rx614_bstack, rx614_done1354
    pop $I19, rx614_bstack
    if_null rx614_cstack, rx614_cstack_done1359
    unless rx614_cstack, rx614_cstack_done1359
    dec $I19
    set $P11, rx614_cstack[$I19]
  rx614_cstack_done1359:
    pop rx614_rep, rx614_bstack
    pop rx614_pos, rx614_bstack
    pop $I19, rx614_bstack
    lt rx614_pos, -1, rx614_done1354
    lt rx614_pos, 0, rx614_fail1356
    eq $I19, 0, rx614_fail1356
    nqp_islist $I20, rx614_cstack
    unless $I20, rx614_jump1357
    elements $I18, rx614_bstack
    le $I18, 0, rx614_cut1358
    dec $I18
    set $I18, rx614_bstack[$I18]
  rx614_cut1358:
    assign rx614_cstack, $I18
  rx614_jump1357:
    jump $I19
  rx614_done1354:
    rx614_cur."!cursor_fail"()
    .return (rx614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_76_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1013
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx618_start
    .local string rx618_tgt
    .local int rx618_pos
    .local int rx618_off
    .local int rx618_eos
    .local int rx618_rep
    .local pmc rx618_cur
    .local pmc rx618_curclass
    .local pmc rx618_bstack
    .local pmc rx618_cstack
    rx618_start = self."!cursor_start_all"()
    set rx618_cur, rx618_start[0]
    set rx618_tgt, rx618_start[1]
    set rx618_pos, rx618_start[2]
    set rx618_curclass, rx618_start[3]
    set rx618_bstack, rx618_start[4]
    set $I19, rx618_start[5]
    store_lex unicode:"$\x{a2}", rx618_cur
    length rx618_eos, rx618_tgt
    eq $I19, 1, rx618_restart1368
    gt rx618_pos, rx618_eos, rx618_fail1369
    repr_get_attr_int $I11, self, rx618_curclass, "$!from"
    ne $I11, -1, rxscan619_done1375
    goto rxscan619_scan1374
  rxscan619_loop1373:
    inc rx618_pos
    gt rx618_pos, rx618_eos, rx618_fail1369
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!from", rx618_pos
  rxscan619_scan1374:
    nqp_rxmark rx618_bstack, rxscan619_loop1373, rx618_pos, 0
  rxscan619_done1375:
    nqp_rxmark rx618_bstack, rxcap620_fail1377, rx618_pos, 0
    add $I11, rx618_pos, 3
    gt $I11, rx618_eos, rx618_fail1369
    substr $S10, rx618_tgt, rx618_pos, 3
    ne $S10, ucs4:"try", rx618_fail1369
    add rx618_pos, 3
    nqp_rxpeek $I19, rx618_bstack, rxcap620_fail1377
    inc $I19
    set $I11, rx618_bstack[$I19]
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx618_pos)
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "sym")
    goto rxcap620_done1376
  rxcap620_fail1377:
    goto rx618_fail1369
  rxcap620_done1376:
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1369
    nqp_rxmark rx618_bstack, rxsubrule621_pass1378, -1, 0
  rxsubrule621_pass1378:
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    rx618_cur."!cursor_pass"(rx618_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx618_cur)
  rx618_restart1368:
    repr_get_attr_obj rx618_cstack, rx618_cur, rx618_curclass, "$!cstack"
  rx618_fail1369:
    unless rx618_bstack, rx618_done1367
    pop $I19, rx618_bstack
    if_null rx618_cstack, rx618_cstack_done1372
    unless rx618_cstack, rx618_cstack_done1372
    dec $I19
    set $P11, rx618_cstack[$I19]
  rx618_cstack_done1372:
    pop rx618_rep, rx618_bstack
    pop rx618_pos, rx618_bstack
    pop $I19, rx618_bstack
    lt rx618_pos, -1, rx618_done1367
    lt rx618_pos, 0, rx618_fail1369
    eq $I19, 0, rx618_fail1369
    nqp_islist $I20, rx618_cstack
    unless $I20, rx618_jump1370
    elements $I18, rx618_bstack
    le $I18, 0, rx618_cut1371
    dec $I18
    set $I18, rx618_bstack[$I18]
  rx618_cut1371:
    assign rx618_cstack, $I18
  rx618_jump1370:
    jump $I19
  rx618_done1367:
    rx618_cur."!cursor_fail"()
    .return (rx618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_77_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1015
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_78_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx622_start
    .local string rx622_tgt
    .local int rx622_pos
    .local int rx622_off
    .local int rx622_eos
    .local int rx622_rep
    .local pmc rx622_cur
    .local pmc rx622_curclass
    .local pmc rx622_bstack
    .local pmc rx622_cstack
    rx622_start = self."!cursor_start_all"()
    set rx622_cur, rx622_start[0]
    set rx622_tgt, rx622_start[1]
    set rx622_pos, rx622_start[2]
    set rx622_curclass, rx622_start[3]
    set rx622_bstack, rx622_start[4]
    set $I19, rx622_start[5]
    store_lex unicode:"$\x{a2}", rx622_cur
    length rx622_eos, rx622_tgt
    eq $I19, 1, rx622_restart1381
    gt rx622_pos, rx622_eos, rx622_fail1382
    repr_get_attr_int $I11, self, rx622_curclass, "$!from"
    ne $I11, -1, rxscan623_done1388
    goto rxscan623_scan1387
  rxscan623_loop1386:
    inc rx622_pos
    gt rx622_pos, rx622_eos, rx622_fail1382
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!from", rx622_pos
  rxscan623_scan1387:
    nqp_rxmark rx622_bstack, rxscan623_loop1386, rx622_pos, 0
  rxscan623_done1388:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt624_01390
    nqp_push_label $P11, alt624_11407
    nqp_rxmark rx622_bstack, alt624_end1389, -1, 0
    rx622_cur."!alt"(rx622_pos, "alt_nfa__16_1382959280.91769", $P11)
    goto rx622_fail1382
  alt624_01390:
    .const 'Sub' $P5001 = 'cuid_78_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."ws"()
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt628_01403
    nqp_push_label $P11, alt628_11405
    nqp_rxmark rx622_bstack, alt628_end1402, -1, 0
    rx622_cur."!alt"(rx622_pos, "alt_nfa__15_1382959280.91743", $P11)
    goto rx622_fail1382
  alt628_01403:
    ge rx622_pos, rx622_eos, rx622_fail1382
    substr $S11, rx622_tgt, rx622_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx622_fail1382
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."block"()
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    nqp_rxmark rx622_bstack, rxsubrule629_pass1404, -1, 0
  rxsubrule629_pass1404:
    rx622_cstack = rx622_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    goto alt628_end1402
  alt628_11405:
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."statement"()
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    nqp_rxmark rx622_bstack, rxsubrule630_pass1406, -1, 0
  rxsubrule630_pass1406:
    rx622_cstack = rx622_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    goto alt628_end1402
  alt628_end1402:
    nqp_rxcommit rx622_bstack, alt628_end1402
    goto alt624_end1389
  alt624_11407:
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!pos", rx622_pos
    $P11 = rx622_cur."panic"("Whitespace required after keyword")
    repr_get_attr_int $I11, $P11, rx622_curclass, "$!pos"
    lt $I11, 0, rx622_fail1382
    repr_get_attr_int rx622_pos, $P11, rx622_curclass, "$!pos"
    goto alt624_end1389
  alt624_end1389:
    nqp_rxcommit rx622_bstack, alt624_end1389
    rx622_cur."!cursor_pass"(rx622_pos, "blorst", 'backtrack'=>1)
    .return (rx622_cur)
  rx622_restart1381:
    repr_get_attr_obj rx622_cstack, rx622_cur, rx622_curclass, "$!cstack"
  rx622_fail1382:
    unless rx622_bstack, rx622_done1380
    pop $I19, rx622_bstack
    if_null rx622_cstack, rx622_cstack_done1385
    unless rx622_cstack, rx622_cstack_done1385
    dec $I19
    set $P11, rx622_cstack[$I19]
  rx622_cstack_done1385:
    pop rx622_rep, rx622_bstack
    pop rx622_pos, rx622_bstack
    pop $I19, rx622_bstack
    lt rx622_pos, -1, rx622_done1380
    lt rx622_pos, 0, rx622_fail1382
    eq $I19, 0, rx622_fail1382
    nqp_islist $I20, rx622_cstack
    unless $I20, rx622_jump1383
    elements $I18, rx622_bstack
    le $I18, 0, rx622_cut1384
    dec $I18
    set $I18, rx622_bstack[$I18]
  rx622_cut1384:
    assign rx622_cstack, $I18
  rx622_jump1383:
    jump $I19
  rx622_done1380:
    rx622_cur."!cursor_fail"()
    .return (rx622_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_78_1382959278.72036") :anon :lex :outer("cuid_77_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx625_start
    .local string rx625_tgt
    .local int rx625_pos
    .local int rx625_off
    .local int rx625_eos
    .local int rx625_rep
    .local pmc rx625_cur
    .local pmc rx625_curclass
    .local pmc rx625_bstack
    .local pmc rx625_cstack
    rx625_start = self."!cursor_start_all"()
    set rx625_cur, rx625_start[0]
    set rx625_tgt, rx625_start[1]
    set rx625_pos, rx625_start[2]
    set rx625_curclass, rx625_start[3]
    set rx625_bstack, rx625_start[4]
    set $I19, rx625_start[5]
    store_lex unicode:"$\x{a2}", rx625_cur
    length rx625_eos, rx625_tgt
    eq $I19, 1, rx625_restart1393
    gt rx625_pos, rx625_eos, rx625_fail1394
    repr_get_attr_int $I11, self, rx625_curclass, "$!from"
    ne $I11, -1, rxscan626_done1400
    goto rxscan626_scan1399
  rxscan626_loop1398:
    inc rx625_pos
    gt rx625_pos, rx625_eos, rx625_fail1394
    repr_bind_attr_int rx625_cur, rx625_curclass, "$!from", rx625_pos
  rxscan626_scan1399:
    nqp_rxmark rx625_bstack, rxscan626_loop1398, rx625_pos, 0
  rxscan626_done1400:
    ge rx625_pos, rx625_eos, rx625_fail1394
    is_cclass $I11, .CCLASS_WHITESPACE, rx625_tgt, rx625_pos
    unless $I11, rx625_fail1394
    add rx625_pos, 1
    rx625_cur."!cursor_pass"(rx625_pos, 'backtrack'=>1)
    .return (rx625_cur)
  rx625_restart1393:
    repr_get_attr_obj rx625_cstack, rx625_cur, rx625_curclass, "$!cstack"
  rx625_fail1394:
    unless rx625_bstack, rx625_done1392
    pop $I19, rx625_bstack
    if_null rx625_cstack, rx625_cstack_done1397
    unless rx625_cstack, rx625_cstack_done1397
    dec $I19
    set $P11, rx625_cstack[$I19]
  rx625_cstack_done1397:
    pop rx625_rep, rx625_bstack
    pop rx625_pos, rx625_bstack
    pop $I19, rx625_bstack
    lt rx625_pos, -1, rx625_done1392
    lt rx625_pos, 0, rx625_fail1394
    eq $I19, 0, rx625_fail1394
    nqp_islist $I20, rx625_cstack
    unless $I20, rx625_jump1395
    elements $I18, rx625_bstack
    le $I18, 0, rx625_cut1396
    dec $I18
    set $I18, rx625_bstack[$I18]
  rx625_cut1396:
    assign rx625_cstack, $I18
  rx625_jump1395:
    jump $I19
  rx625_done1392:
    rx625_cur."!cursor_fail"()
    .return (rx625_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_79_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1028
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_80_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1030
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_417_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx632_start
    .local string rx632_tgt
    .local int rx632_pos
    .local int rx632_off
    .local int rx632_eos
    .local int rx632_rep
    .local pmc rx632_cur
    .local pmc rx632_curclass
    .local pmc rx632_bstack
    .local pmc rx632_cstack
    rx632_start = self."!cursor_start_all"()
    set rx632_cur, rx632_start[0]
    set rx632_tgt, rx632_start[1]
    set rx632_pos, rx632_start[2]
    set rx632_curclass, rx632_start[3]
    set rx632_bstack, rx632_start[4]
    set $I19, rx632_start[5]
    store_lex unicode:"$\x{a2}", rx632_cur
    length rx632_eos, rx632_tgt
    eq $I19, 1, rx632_restart1411
    gt rx632_pos, rx632_eos, rx632_fail1412
    repr_get_attr_int $I11, self, rx632_curclass, "$!from"
    ne $I11, -1, rxscan633_done1418
    goto rxscan633_scan1417
  rxscan633_loop1416:
    inc rx632_pos
    gt rx632_pos, rx632_eos, rx632_fail1412
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!from", rx632_pos
  rxscan633_scan1417:
    nqp_rxmark rx632_bstack, rxscan633_loop1416, rx632_pos, 0
  rxscan633_done1418:
    nqp_rxmark rx632_bstack, rxcap634_fail1420, rx632_pos, 0
    add $I11, rx632_pos, 2
    gt $I11, rx632_eos, rx632_fail1412
    substr $S10, rx632_tgt, rx632_pos, 2
    ne $S10, ucs4:"if", rx632_fail1412
    add rx632_pos, 2
    nqp_rxpeek $I19, rx632_bstack, rxcap634_fail1420
    inc $I19
    set $I11, rx632_bstack[$I19]
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx632_pos)
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "sym")
    goto rxcap634_done1419
  rxcap634_fail1420:
    goto rx632_fail1412
  rxcap634_done1419:
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
    goto rxsubrule635_pass1421
  rxsubrule635_back1422:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
  rxsubrule635_pass1421:
    rx632_cstack = rx632_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule635_back1422
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    store_lex unicode:"$\x{a2}", rx632_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_417_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
    goto rxsubrule636_pass1423
  rxsubrule636_back1424:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
  rxsubrule636_pass1423:
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule636_back1424
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
    goto rxsubrule637_pass1425
  rxsubrule637_back1426:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1412
  rxsubrule637_pass1425:
    rx632_cstack = rx632_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule637_back1426
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    rx632_cur."!cursor_pass"(rx632_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx632_cur)
  rx632_restart1411:
    repr_get_attr_obj rx632_cstack, rx632_cur, rx632_curclass, "$!cstack"
  rx632_fail1412:
    unless rx632_bstack, rx632_done1410
    pop $I19, rx632_bstack
    if_null rx632_cstack, rx632_cstack_done1415
    unless rx632_cstack, rx632_cstack_done1415
    dec $I19
    set $P11, rx632_cstack[$I19]
  rx632_cstack_done1415:
    pop rx632_rep, rx632_bstack
    pop rx632_pos, rx632_bstack
    pop $I19, rx632_bstack
    lt rx632_pos, -1, rx632_done1410
    lt rx632_pos, 0, rx632_fail1412
    eq $I19, 0, rx632_fail1412
    nqp_islist $I20, rx632_cstack
    unless $I20, rx632_jump1413
    elements $I18, rx632_bstack
    le $I18, 0, rx632_cut1414
    dec $I18
    set $I18, rx632_bstack[$I18]
  rx632_cut1414:
    assign rx632_cstack, $I18
  rx632_jump1413:
    jump $I19
  rx632_done1410:
    rx632_cur."!cursor_fail"()
    .return (rx632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1382959278.72036") :anon :lex :outer("cuid_80_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1030

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_81_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1031
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_418_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx638_start
    .local string rx638_tgt
    .local int rx638_pos
    .local int rx638_off
    .local int rx638_eos
    .local int rx638_rep
    .local pmc rx638_cur
    .local pmc rx638_curclass
    .local pmc rx638_bstack
    .local pmc rx638_cstack
    rx638_start = self."!cursor_start_all"()
    set rx638_cur, rx638_start[0]
    set rx638_tgt, rx638_start[1]
    set rx638_pos, rx638_start[2]
    set rx638_curclass, rx638_start[3]
    set rx638_bstack, rx638_start[4]
    set $I19, rx638_start[5]
    store_lex unicode:"$\x{a2}", rx638_cur
    length rx638_eos, rx638_tgt
    eq $I19, 1, rx638_restart1429
    gt rx638_pos, rx638_eos, rx638_fail1430
    repr_get_attr_int $I11, self, rx638_curclass, "$!from"
    ne $I11, -1, rxscan639_done1436
    goto rxscan639_scan1435
  rxscan639_loop1434:
    inc rx638_pos
    gt rx638_pos, rx638_eos, rx638_fail1430
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!from", rx638_pos
  rxscan639_scan1435:
    nqp_rxmark rx638_bstack, rxscan639_loop1434, rx638_pos, 0
  rxscan639_done1436:
    nqp_rxmark rx638_bstack, rxcap640_fail1438, rx638_pos, 0
    add $I11, rx638_pos, 6
    gt $I11, rx638_eos, rx638_fail1430
    substr $S10, rx638_tgt, rx638_pos, 6
    ne $S10, ucs4:"unless", rx638_fail1430
    add rx638_pos, 6
    nqp_rxpeek $I19, rx638_bstack, rxcap640_fail1438
    inc $I19
    set $I11, rx638_bstack[$I19]
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx638_pos)
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "sym")
    goto rxcap640_done1437
  rxcap640_fail1438:
    goto rx638_fail1430
  rxcap640_done1437:
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
    goto rxsubrule641_pass1439
  rxsubrule641_back1440:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
  rxsubrule641_pass1439:
    rx638_cstack = rx638_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule641_back1440
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    store_lex unicode:"$\x{a2}", rx638_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_418_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
    goto rxsubrule642_pass1441
  rxsubrule642_back1442:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
  rxsubrule642_pass1441:
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule642_back1442
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
    goto rxsubrule643_pass1443
  rxsubrule643_back1444:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1430
  rxsubrule643_pass1443:
    rx638_cstack = rx638_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule643_back1444
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    rx638_cur."!cursor_pass"(rx638_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx638_cur)
  rx638_restart1429:
    repr_get_attr_obj rx638_cstack, rx638_cur, rx638_curclass, "$!cstack"
  rx638_fail1430:
    unless rx638_bstack, rx638_done1428
    pop $I19, rx638_bstack
    if_null rx638_cstack, rx638_cstack_done1433
    unless rx638_cstack, rx638_cstack_done1433
    dec $I19
    set $P11, rx638_cstack[$I19]
  rx638_cstack_done1433:
    pop rx638_rep, rx638_bstack
    pop rx638_pos, rx638_bstack
    pop $I19, rx638_bstack
    lt rx638_pos, -1, rx638_done1428
    lt rx638_pos, 0, rx638_fail1430
    eq $I19, 0, rx638_fail1430
    nqp_islist $I20, rx638_cstack
    unless $I20, rx638_jump1431
    elements $I18, rx638_bstack
    le $I18, 0, rx638_cut1432
    dec $I18
    set $I18, rx638_bstack[$I18]
  rx638_cut1432:
    assign rx638_cstack, $I18
  rx638_jump1431:
    jump $I19
  rx638_done1428:
    rx638_cur."!cursor_fail"()
    .return (rx638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1382959278.72036") :anon :lex :outer("cuid_81_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1031

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_82_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1033
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_83_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1035
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_419_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx644_start
    .local string rx644_tgt
    .local int rx644_pos
    .local int rx644_off
    .local int rx644_eos
    .local int rx644_rep
    .local pmc rx644_cur
    .local pmc rx644_curclass
    .local pmc rx644_bstack
    .local pmc rx644_cstack
    rx644_start = self."!cursor_start_all"()
    set rx644_cur, rx644_start[0]
    set rx644_tgt, rx644_start[1]
    set rx644_pos, rx644_start[2]
    set rx644_curclass, rx644_start[3]
    set rx644_bstack, rx644_start[4]
    set $I19, rx644_start[5]
    store_lex unicode:"$\x{a2}", rx644_cur
    length rx644_eos, rx644_tgt
    eq $I19, 1, rx644_restart1447
    gt rx644_pos, rx644_eos, rx644_fail1448
    repr_get_attr_int $I11, self, rx644_curclass, "$!from"
    ne $I11, -1, rxscan645_done1454
    goto rxscan645_scan1453
  rxscan645_loop1452:
    inc rx644_pos
    gt rx644_pos, rx644_eos, rx644_fail1448
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!from", rx644_pos
  rxscan645_scan1453:
    nqp_rxmark rx644_bstack, rxscan645_loop1452, rx644_pos, 0
  rxscan645_done1454:
    nqp_rxmark rx644_bstack, rxcap646_fail1456, rx644_pos, 0
    add $I11, rx644_pos, 5
    gt $I11, rx644_eos, rx644_fail1448
    substr $S10, rx644_tgt, rx644_pos, 5
    ne $S10, ucs4:"while", rx644_fail1448
    add rx644_pos, 5
    nqp_rxpeek $I19, rx644_bstack, rxcap646_fail1456
    inc $I19
    set $I11, rx644_bstack[$I19]
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx644_pos)
    rx644_cstack = rx644_cur."!cursor_capture"($P11, "sym")
    goto rxcap646_done1455
  rxcap646_fail1456:
    goto rx644_fail1448
  rxcap646_done1455:
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."ws"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
    goto rxsubrule647_pass1457
  rxsubrule647_back1458:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
  rxsubrule647_pass1457:
    rx644_cstack = rx644_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule647_back1458
    push rx644_bstack, $I11
    push rx644_bstack, 0
    push rx644_bstack, rx644_pos
    elements $I11, rx644_cstack
    push rx644_bstack, $I11
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    store_lex unicode:"$\x{a2}", rx644_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_419_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
    goto rxsubrule648_pass1459
  rxsubrule648_back1460:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
  rxsubrule648_pass1459:
    rx644_cstack = rx644_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule648_back1460
    push rx644_bstack, $I11
    push rx644_bstack, 0
    push rx644_bstack, rx644_pos
    elements $I11, rx644_cstack
    push rx644_bstack, $I11
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."ws"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
    goto rxsubrule649_pass1461
  rxsubrule649_back1462:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1448
  rxsubrule649_pass1461:
    rx644_cstack = rx644_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule649_back1462
    push rx644_bstack, $I11
    push rx644_bstack, 0
    push rx644_bstack, rx644_pos
    elements $I11, rx644_cstack
    push rx644_bstack, $I11
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    rx644_cur."!cursor_pass"(rx644_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx644_cur)
  rx644_restart1447:
    repr_get_attr_obj rx644_cstack, rx644_cur, rx644_curclass, "$!cstack"
  rx644_fail1448:
    unless rx644_bstack, rx644_done1446
    pop $I19, rx644_bstack
    if_null rx644_cstack, rx644_cstack_done1451
    unless rx644_cstack, rx644_cstack_done1451
    dec $I19
    set $P11, rx644_cstack[$I19]
  rx644_cstack_done1451:
    pop rx644_rep, rx644_bstack
    pop rx644_pos, rx644_bstack
    pop $I19, rx644_bstack
    lt rx644_pos, -1, rx644_done1446
    lt rx644_pos, 0, rx644_fail1448
    eq $I19, 0, rx644_fail1448
    nqp_islist $I20, rx644_cstack
    unless $I20, rx644_jump1449
    elements $I18, rx644_bstack
    le $I18, 0, rx644_cut1450
    dec $I18
    set $I18, rx644_bstack[$I18]
  rx644_cut1450:
    assign rx644_cstack, $I18
  rx644_jump1449:
    jump $I19
  rx644_done1446:
    rx644_cur."!cursor_fail"()
    .return (rx644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1382959278.72036") :anon :lex :outer("cuid_83_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1035

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_84_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1036
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_420_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx650_start
    .local string rx650_tgt
    .local int rx650_pos
    .local int rx650_off
    .local int rx650_eos
    .local int rx650_rep
    .local pmc rx650_cur
    .local pmc rx650_curclass
    .local pmc rx650_bstack
    .local pmc rx650_cstack
    rx650_start = self."!cursor_start_all"()
    set rx650_cur, rx650_start[0]
    set rx650_tgt, rx650_start[1]
    set rx650_pos, rx650_start[2]
    set rx650_curclass, rx650_start[3]
    set rx650_bstack, rx650_start[4]
    set $I19, rx650_start[5]
    store_lex unicode:"$\x{a2}", rx650_cur
    length rx650_eos, rx650_tgt
    eq $I19, 1, rx650_restart1465
    gt rx650_pos, rx650_eos, rx650_fail1466
    repr_get_attr_int $I11, self, rx650_curclass, "$!from"
    ne $I11, -1, rxscan651_done1472
    goto rxscan651_scan1471
  rxscan651_loop1470:
    inc rx650_pos
    gt rx650_pos, rx650_eos, rx650_fail1466
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!from", rx650_pos
  rxscan651_scan1471:
    nqp_rxmark rx650_bstack, rxscan651_loop1470, rx650_pos, 0
  rxscan651_done1472:
    nqp_rxmark rx650_bstack, rxcap652_fail1474, rx650_pos, 0
    add $I11, rx650_pos, 5
    gt $I11, rx650_eos, rx650_fail1466
    substr $S10, rx650_tgt, rx650_pos, 5
    ne $S10, ucs4:"until", rx650_fail1466
    add rx650_pos, 5
    nqp_rxpeek $I19, rx650_bstack, rxcap652_fail1474
    inc $I19
    set $I11, rx650_bstack[$I19]
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx650_pos)
    rx650_cstack = rx650_cur."!cursor_capture"($P11, "sym")
    goto rxcap652_done1473
  rxcap652_fail1474:
    goto rx650_fail1466
  rxcap652_done1473:
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."ws"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
    goto rxsubrule653_pass1475
  rxsubrule653_back1476:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
  rxsubrule653_pass1475:
    rx650_cstack = rx650_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule653_back1476
    push rx650_bstack, $I11
    push rx650_bstack, 0
    push rx650_bstack, rx650_pos
    elements $I11, rx650_cstack
    push rx650_bstack, $I11
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    store_lex unicode:"$\x{a2}", rx650_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_420_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
    goto rxsubrule654_pass1477
  rxsubrule654_back1478:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
  rxsubrule654_pass1477:
    rx650_cstack = rx650_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule654_back1478
    push rx650_bstack, $I11
    push rx650_bstack, 0
    push rx650_bstack, rx650_pos
    elements $I11, rx650_cstack
    push rx650_bstack, $I11
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."ws"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
    goto rxsubrule655_pass1479
  rxsubrule655_back1480:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1466
  rxsubrule655_pass1479:
    rx650_cstack = rx650_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule655_back1480
    push rx650_bstack, $I11
    push rx650_bstack, 0
    push rx650_bstack, rx650_pos
    elements $I11, rx650_cstack
    push rx650_bstack, $I11
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    rx650_cur."!cursor_pass"(rx650_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx650_cur)
  rx650_restart1465:
    repr_get_attr_obj rx650_cstack, rx650_cur, rx650_curclass, "$!cstack"
  rx650_fail1466:
    unless rx650_bstack, rx650_done1464
    pop $I19, rx650_bstack
    if_null rx650_cstack, rx650_cstack_done1469
    unless rx650_cstack, rx650_cstack_done1469
    dec $I19
    set $P11, rx650_cstack[$I19]
  rx650_cstack_done1469:
    pop rx650_rep, rx650_bstack
    pop rx650_pos, rx650_bstack
    pop $I19, rx650_bstack
    lt rx650_pos, -1, rx650_done1464
    lt rx650_pos, 0, rx650_fail1466
    eq $I19, 0, rx650_fail1466
    nqp_islist $I20, rx650_cstack
    unless $I20, rx650_jump1467
    elements $I18, rx650_bstack
    le $I18, 0, rx650_cut1468
    dec $I18
    set $I18, rx650_bstack[$I18]
  rx650_cut1468:
    assign rx650_cstack, $I18
  rx650_jump1467:
    jump $I19
  rx650_done1464:
    rx650_cur."!cursor_fail"()
    .return (rx650_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1382959278.72036") :anon :lex :outer("cuid_84_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1036

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_85_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1037
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_421_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx656_start
    .local string rx656_tgt
    .local int rx656_pos
    .local int rx656_off
    .local int rx656_eos
    .local int rx656_rep
    .local pmc rx656_cur
    .local pmc rx656_curclass
    .local pmc rx656_bstack
    .local pmc rx656_cstack
    rx656_start = self."!cursor_start_all"()
    set rx656_cur, rx656_start[0]
    set rx656_tgt, rx656_start[1]
    set rx656_pos, rx656_start[2]
    set rx656_curclass, rx656_start[3]
    set rx656_bstack, rx656_start[4]
    set $I19, rx656_start[5]
    store_lex unicode:"$\x{a2}", rx656_cur
    length rx656_eos, rx656_tgt
    eq $I19, 1, rx656_restart1483
    gt rx656_pos, rx656_eos, rx656_fail1484
    repr_get_attr_int $I11, self, rx656_curclass, "$!from"
    ne $I11, -1, rxscan657_done1490
    goto rxscan657_scan1489
  rxscan657_loop1488:
    inc rx656_pos
    gt rx656_pos, rx656_eos, rx656_fail1484
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!from", rx656_pos
  rxscan657_scan1489:
    nqp_rxmark rx656_bstack, rxscan657_loop1488, rx656_pos, 0
  rxscan657_done1490:
    nqp_rxmark rx656_bstack, rxcap658_fail1492, rx656_pos, 0
    add $I11, rx656_pos, 3
    gt $I11, rx656_eos, rx656_fail1484
    substr $S10, rx656_tgt, rx656_pos, 3
    ne $S10, ucs4:"for", rx656_fail1484
    add rx656_pos, 3
    nqp_rxpeek $I19, rx656_bstack, rxcap658_fail1492
    inc $I19
    set $I11, rx656_bstack[$I19]
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx656_pos)
    rx656_cstack = rx656_cur."!cursor_capture"($P11, "sym")
    goto rxcap658_done1491
  rxcap658_fail1492:
    goto rx656_fail1484
  rxcap658_done1491:
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."ws"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
    goto rxsubrule659_pass1493
  rxsubrule659_back1494:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
  rxsubrule659_pass1493:
    rx656_cstack = rx656_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule659_back1494
    push rx656_bstack, $I11
    push rx656_bstack, 0
    push rx656_bstack, rx656_pos
    elements $I11, rx656_cstack
    push rx656_bstack, $I11
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    store_lex unicode:"$\x{a2}", rx656_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_421_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
    goto rxsubrule660_pass1495
  rxsubrule660_back1496:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
  rxsubrule660_pass1495:
    rx656_cstack = rx656_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule660_back1496
    push rx656_bstack, $I11
    push rx656_bstack, 0
    push rx656_bstack, rx656_pos
    elements $I11, rx656_cstack
    push rx656_bstack, $I11
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."ws"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
    goto rxsubrule661_pass1497
  rxsubrule661_back1498:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1484
  rxsubrule661_pass1497:
    rx656_cstack = rx656_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule661_back1498
    push rx656_bstack, $I11
    push rx656_bstack, 0
    push rx656_bstack, rx656_pos
    elements $I11, rx656_cstack
    push rx656_bstack, $I11
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    rx656_cur."!cursor_pass"(rx656_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx656_cur)
  rx656_restart1483:
    repr_get_attr_obj rx656_cstack, rx656_cur, rx656_curclass, "$!cstack"
  rx656_fail1484:
    unless rx656_bstack, rx656_done1482
    pop $I19, rx656_bstack
    if_null rx656_cstack, rx656_cstack_done1487
    unless rx656_cstack, rx656_cstack_done1487
    dec $I19
    set $P11, rx656_cstack[$I19]
  rx656_cstack_done1487:
    pop rx656_rep, rx656_bstack
    pop rx656_pos, rx656_bstack
    pop $I19, rx656_bstack
    lt rx656_pos, -1, rx656_done1482
    lt rx656_pos, 0, rx656_fail1484
    eq $I19, 0, rx656_fail1484
    nqp_islist $I20, rx656_cstack
    unless $I20, rx656_jump1485
    elements $I18, rx656_bstack
    le $I18, 0, rx656_cut1486
    dec $I18
    set $I18, rx656_bstack[$I18]
  rx656_cut1486:
    assign rx656_cstack, $I18
  rx656_jump1485:
    jump $I19
  rx656_done1482:
    rx656_cur."!cursor_fail"()
    .return (rx656_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1382959278.72036") :anon :lex :outer("cuid_85_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1037

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_86_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1041
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx662_start
    .local string rx662_tgt
    .local int rx662_pos
    .local int rx662_off
    .local int rx662_eos
    .local int rx662_rep
    .local pmc rx662_cur
    .local pmc rx662_curclass
    .local pmc rx662_bstack
    .local pmc rx662_cstack
    rx662_start = self."!cursor_start_all"()
    set rx662_cur, rx662_start[0]
    set rx662_tgt, rx662_start[1]
    set rx662_pos, rx662_start[2]
    set rx662_curclass, rx662_start[3]
    set rx662_bstack, rx662_start[4]
    set $I19, rx662_start[5]
    store_lex unicode:"$\x{a2}", rx662_cur
    length rx662_eos, rx662_tgt
    eq $I19, 1, rx662_restart1501
    gt rx662_pos, rx662_eos, rx662_fail1502
    repr_get_attr_int $I11, self, rx662_curclass, "$!from"
    ne $I11, -1, rxscan663_done1508
    goto rxscan663_scan1507
  rxscan663_loop1506:
    inc rx662_pos
    gt rx662_pos, rx662_eos, rx662_fail1502
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!from", rx662_pos
  rxscan663_scan1507:
    nqp_rxmark rx662_bstack, rxscan663_loop1506, rx662_pos, 0
  rxscan663_done1508:
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    lt $I11, 0, rx662_fail1502
    nqp_rxmark rx662_bstack, rxsubrule664_pass1509, -1, 0
  rxsubrule664_pass1509:
    rx662_cstack = rx662_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx662_pos, $P11, rx662_curclass, "$!pos"
    rx662_cur."!cursor_pass"(rx662_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx662_cur)
  rx662_restart1501:
    repr_get_attr_obj rx662_cstack, rx662_cur, rx662_curclass, "$!cstack"
  rx662_fail1502:
    unless rx662_bstack, rx662_done1500
    pop $I19, rx662_bstack
    if_null rx662_cstack, rx662_cstack_done1505
    unless rx662_cstack, rx662_cstack_done1505
    dec $I19
    set $P11, rx662_cstack[$I19]
  rx662_cstack_done1505:
    pop rx662_rep, rx662_bstack
    pop rx662_pos, rx662_bstack
    pop $I19, rx662_bstack
    lt rx662_pos, -1, rx662_done1500
    lt rx662_pos, 0, rx662_fail1502
    eq $I19, 0, rx662_fail1502
    nqp_islist $I20, rx662_cstack
    unless $I20, rx662_jump1503
    elements $I18, rx662_bstack
    le $I18, 0, rx662_cut1504
    dec $I18
    set $I18, rx662_bstack[$I18]
  rx662_cut1504:
    assign rx662_cstack, $I18
  rx662_jump1503:
    jump $I19
  rx662_done1500:
    rx662_cur."!cursor_fail"()
    .return (rx662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_87_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1042
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx665_start
    .local string rx665_tgt
    .local int rx665_pos
    .local int rx665_off
    .local int rx665_eos
    .local int rx665_rep
    .local pmc rx665_cur
    .local pmc rx665_curclass
    .local pmc rx665_bstack
    .local pmc rx665_cstack
    rx665_start = self."!cursor_start_all"()
    set rx665_cur, rx665_start[0]
    set rx665_tgt, rx665_start[1]
    set rx665_pos, rx665_start[2]
    set rx665_curclass, rx665_start[3]
    set rx665_bstack, rx665_start[4]
    set $I19, rx665_start[5]
    store_lex unicode:"$\x{a2}", rx665_cur
    length rx665_eos, rx665_tgt
    eq $I19, 1, rx665_restart1512
    gt rx665_pos, rx665_eos, rx665_fail1513
    repr_get_attr_int $I11, self, rx665_curclass, "$!from"
    ne $I11, -1, rxscan666_done1519
    goto rxscan666_scan1518
  rxscan666_loop1517:
    inc rx665_pos
    gt rx665_pos, rx665_eos, rx665_fail1513
    repr_bind_attr_int rx665_cur, rx665_curclass, "$!from", rx665_pos
  rxscan666_scan1518:
    nqp_rxmark rx665_bstack, rxscan666_loop1517, rx665_pos, 0
  rxscan666_done1519:
    repr_bind_attr_int rx665_cur, rx665_curclass, "$!pos", rx665_pos
    $P11 = rx665_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx665_curclass, "$!pos"
    lt $I11, 0, rx665_fail1513
    nqp_rxmark rx665_bstack, rxsubrule667_pass1520, -1, 0
  rxsubrule667_pass1520:
    rx665_cstack = rx665_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx665_pos, $P11, rx665_curclass, "$!pos"
    rx665_cur."!cursor_pass"(rx665_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx665_cur)
  rx665_restart1512:
    repr_get_attr_obj rx665_cstack, rx665_cur, rx665_curclass, "$!cstack"
  rx665_fail1513:
    unless rx665_bstack, rx665_done1511
    pop $I19, rx665_bstack
    if_null rx665_cstack, rx665_cstack_done1516
    unless rx665_cstack, rx665_cstack_done1516
    dec $I19
    set $P11, rx665_cstack[$I19]
  rx665_cstack_done1516:
    pop rx665_rep, rx665_bstack
    pop rx665_pos, rx665_bstack
    pop $I19, rx665_bstack
    lt rx665_pos, -1, rx665_done1511
    lt rx665_pos, 0, rx665_fail1513
    eq $I19, 0, rx665_fail1513
    nqp_islist $I20, rx665_cstack
    unless $I20, rx665_jump1514
    elements $I18, rx665_bstack
    le $I18, 0, rx665_cut1515
    dec $I18
    set $I18, rx665_bstack[$I18]
  rx665_cut1515:
    assign rx665_cstack, $I18
  rx665_jump1514:
    jump $I19
  rx665_done1511:
    rx665_cur."!cursor_fail"()
    .return (rx665_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_88_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1043
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx668_start
    .local string rx668_tgt
    .local int rx668_pos
    .local int rx668_off
    .local int rx668_eos
    .local int rx668_rep
    .local pmc rx668_cur
    .local pmc rx668_curclass
    .local pmc rx668_bstack
    .local pmc rx668_cstack
    rx668_start = self."!cursor_start_all"()
    set rx668_cur, rx668_start[0]
    set rx668_tgt, rx668_start[1]
    set rx668_pos, rx668_start[2]
    set rx668_curclass, rx668_start[3]
    set rx668_bstack, rx668_start[4]
    set $I19, rx668_start[5]
    store_lex unicode:"$\x{a2}", rx668_cur
    length rx668_eos, rx668_tgt
    eq $I19, 1, rx668_restart1523
    gt rx668_pos, rx668_eos, rx668_fail1524
    repr_get_attr_int $I11, self, rx668_curclass, "$!from"
    ne $I11, -1, rxscan669_done1530
    goto rxscan669_scan1529
  rxscan669_loop1528:
    inc rx668_pos
    gt rx668_pos, rx668_eos, rx668_fail1524
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!from", rx668_pos
  rxscan669_scan1529:
    nqp_rxmark rx668_bstack, rxscan669_loop1528, rx668_pos, 0
  rxscan669_done1530:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."variable"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1524
    nqp_rxmark rx668_bstack, rxsubrule670_pass1531, -1, 0
  rxsubrule670_pass1531:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    rx668_cur."!cursor_pass"(rx668_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx668_cur)
  rx668_restart1523:
    repr_get_attr_obj rx668_cstack, rx668_cur, rx668_curclass, "$!cstack"
  rx668_fail1524:
    unless rx668_bstack, rx668_done1522
    pop $I19, rx668_bstack
    if_null rx668_cstack, rx668_cstack_done1527
    unless rx668_cstack, rx668_cstack_done1527
    dec $I19
    set $P11, rx668_cstack[$I19]
  rx668_cstack_done1527:
    pop rx668_rep, rx668_bstack
    pop rx668_pos, rx668_bstack
    pop $I19, rx668_bstack
    lt rx668_pos, -1, rx668_done1522
    lt rx668_pos, 0, rx668_fail1524
    eq $I19, 0, rx668_fail1524
    nqp_islist $I20, rx668_cstack
    unless $I20, rx668_jump1525
    elements $I18, rx668_bstack
    le $I18, 0, rx668_cut1526
    dec $I18
    set $I18, rx668_bstack[$I18]
  rx668_cut1526:
    assign rx668_cstack, $I18
  rx668_jump1525:
    jump $I19
  rx668_done1522:
    rx668_cur."!cursor_fail"()
    .return (rx668_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_89_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1044
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx671_start
    .local string rx671_tgt
    .local int rx671_pos
    .local int rx671_off
    .local int rx671_eos
    .local int rx671_rep
    .local pmc rx671_cur
    .local pmc rx671_curclass
    .local pmc rx671_bstack
    .local pmc rx671_cstack
    rx671_start = self."!cursor_start_all"()
    set rx671_cur, rx671_start[0]
    set rx671_tgt, rx671_start[1]
    set rx671_pos, rx671_start[2]
    set rx671_curclass, rx671_start[3]
    set rx671_bstack, rx671_start[4]
    set $I19, rx671_start[5]
    store_lex unicode:"$\x{a2}", rx671_cur
    length rx671_eos, rx671_tgt
    eq $I19, 1, rx671_restart1534
    gt rx671_pos, rx671_eos, rx671_fail1535
    repr_get_attr_int $I11, self, rx671_curclass, "$!from"
    ne $I11, -1, rxscan672_done1541
    goto rxscan672_scan1540
  rxscan672_loop1539:
    inc rx671_pos
    gt rx671_pos, rx671_eos, rx671_fail1535
    repr_bind_attr_int rx671_cur, rx671_curclass, "$!from", rx671_pos
  rxscan672_scan1540:
    nqp_rxmark rx671_bstack, rxscan672_loop1539, rx671_pos, 0
  rxscan672_done1541:
    repr_bind_attr_int rx671_cur, rx671_curclass, "$!pos", rx671_pos
    $P11 = rx671_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx671_curclass, "$!pos"
    lt $I11, 0, rx671_fail1535
    nqp_rxmark rx671_bstack, rxsubrule673_pass1542, -1, 0
  rxsubrule673_pass1542:
    rx671_cstack = rx671_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx671_pos, $P11, rx671_curclass, "$!pos"
    rx671_cur."!cursor_pass"(rx671_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx671_cur)
  rx671_restart1534:
    repr_get_attr_obj rx671_cstack, rx671_cur, rx671_curclass, "$!cstack"
  rx671_fail1535:
    unless rx671_bstack, rx671_done1533
    pop $I19, rx671_bstack
    if_null rx671_cstack, rx671_cstack_done1538
    unless rx671_cstack, rx671_cstack_done1538
    dec $I19
    set $P11, rx671_cstack[$I19]
  rx671_cstack_done1538:
    pop rx671_rep, rx671_bstack
    pop rx671_pos, rx671_bstack
    pop $I19, rx671_bstack
    lt rx671_pos, -1, rx671_done1533
    lt rx671_pos, 0, rx671_fail1535
    eq $I19, 0, rx671_fail1535
    nqp_islist $I20, rx671_cstack
    unless $I20, rx671_jump1536
    elements $I18, rx671_bstack
    le $I18, 0, rx671_cut1537
    dec $I18
    set $I18, rx671_bstack[$I18]
  rx671_cut1537:
    assign rx671_cstack, $I18
  rx671_jump1536:
    jump $I19
  rx671_done1533:
    rx671_cur."!cursor_fail"()
    .return (rx671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_90_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1045
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx674_start
    .local string rx674_tgt
    .local int rx674_pos
    .local int rx674_off
    .local int rx674_eos
    .local int rx674_rep
    .local pmc rx674_cur
    .local pmc rx674_curclass
    .local pmc rx674_bstack
    .local pmc rx674_cstack
    rx674_start = self."!cursor_start_all"()
    set rx674_cur, rx674_start[0]
    set rx674_tgt, rx674_start[1]
    set rx674_pos, rx674_start[2]
    set rx674_curclass, rx674_start[3]
    set rx674_bstack, rx674_start[4]
    set $I19, rx674_start[5]
    store_lex unicode:"$\x{a2}", rx674_cur
    length rx674_eos, rx674_tgt
    eq $I19, 1, rx674_restart1545
    gt rx674_pos, rx674_eos, rx674_fail1546
    repr_get_attr_int $I11, self, rx674_curclass, "$!from"
    ne $I11, -1, rxscan675_done1552
    goto rxscan675_scan1551
  rxscan675_loop1550:
    inc rx674_pos
    gt rx674_pos, rx674_eos, rx674_fail1546
    repr_bind_attr_int rx674_cur, rx674_curclass, "$!from", rx674_pos
  rxscan675_scan1551:
    nqp_rxmark rx674_bstack, rxscan675_loop1550, rx674_pos, 0
  rxscan675_done1552:
    repr_bind_attr_int rx674_cur, rx674_curclass, "$!pos", rx674_pos
    $P11 = rx674_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx674_curclass, "$!pos"
    lt $I11, 0, rx674_fail1546
    nqp_rxmark rx674_bstack, rxsubrule676_pass1553, -1, 0
  rxsubrule676_pass1553:
    rx674_cstack = rx674_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx674_pos, $P11, rx674_curclass, "$!pos"
    rx674_cur."!cursor_pass"(rx674_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx674_cur)
  rx674_restart1545:
    repr_get_attr_obj rx674_cstack, rx674_cur, rx674_curclass, "$!cstack"
  rx674_fail1546:
    unless rx674_bstack, rx674_done1544
    pop $I19, rx674_bstack
    if_null rx674_cstack, rx674_cstack_done1549
    unless rx674_cstack, rx674_cstack_done1549
    dec $I19
    set $P11, rx674_cstack[$I19]
  rx674_cstack_done1549:
    pop rx674_rep, rx674_bstack
    pop rx674_pos, rx674_bstack
    pop $I19, rx674_bstack
    lt rx674_pos, -1, rx674_done1544
    lt rx674_pos, 0, rx674_fail1546
    eq $I19, 0, rx674_fail1546
    nqp_islist $I20, rx674_cstack
    unless $I20, rx674_jump1547
    elements $I18, rx674_bstack
    le $I18, 0, rx674_cut1548
    dec $I18
    set $I18, rx674_bstack[$I18]
  rx674_cut1548:
    assign rx674_cstack, $I18
  rx674_jump1547:
    jump $I19
  rx674_done1544:
    rx674_cur."!cursor_fail"()
    .return (rx674_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_91_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1046
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx677_start
    .local string rx677_tgt
    .local int rx677_pos
    .local int rx677_off
    .local int rx677_eos
    .local int rx677_rep
    .local pmc rx677_cur
    .local pmc rx677_curclass
    .local pmc rx677_bstack
    .local pmc rx677_cstack
    rx677_start = self."!cursor_start_all"()
    set rx677_cur, rx677_start[0]
    set rx677_tgt, rx677_start[1]
    set rx677_pos, rx677_start[2]
    set rx677_curclass, rx677_start[3]
    set rx677_bstack, rx677_start[4]
    set $I19, rx677_start[5]
    store_lex unicode:"$\x{a2}", rx677_cur
    length rx677_eos, rx677_tgt
    eq $I19, 1, rx677_restart1556
    gt rx677_pos, rx677_eos, rx677_fail1557
    repr_get_attr_int $I11, self, rx677_curclass, "$!from"
    ne $I11, -1, rxscan678_done1563
    goto rxscan678_scan1562
  rxscan678_loop1561:
    inc rx677_pos
    gt rx677_pos, rx677_eos, rx677_fail1557
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!from", rx677_pos
  rxscan678_scan1562:
    nqp_rxmark rx677_bstack, rxscan678_loop1561, rx677_pos, 0
  rxscan678_done1563:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1557
    nqp_rxmark rx677_bstack, rxsubrule679_pass1564, -1, 0
  rxsubrule679_pass1564:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    rx677_cur."!cursor_pass"(rx677_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx677_cur)
  rx677_restart1556:
    repr_get_attr_obj rx677_cstack, rx677_cur, rx677_curclass, "$!cstack"
  rx677_fail1557:
    unless rx677_bstack, rx677_done1555
    pop $I19, rx677_bstack
    if_null rx677_cstack, rx677_cstack_done1560
    unless rx677_cstack, rx677_cstack_done1560
    dec $I19
    set $P11, rx677_cstack[$I19]
  rx677_cstack_done1560:
    pop rx677_rep, rx677_bstack
    pop rx677_pos, rx677_bstack
    pop $I19, rx677_bstack
    lt rx677_pos, -1, rx677_done1555
    lt rx677_pos, 0, rx677_fail1557
    eq $I19, 0, rx677_fail1557
    nqp_islist $I20, rx677_cstack
    unless $I20, rx677_jump1558
    elements $I18, rx677_bstack
    le $I18, 0, rx677_cut1559
    dec $I18
    set $I18, rx677_bstack[$I18]
  rx677_cut1559:
    assign rx677_cstack, $I18
  rx677_jump1558:
    jump $I19
  rx677_done1555:
    rx677_cur."!cursor_fail"()
    .return (rx677_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_92_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1047
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_93_1382959278.72036' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_94_1382959278.72036' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx680_start
    .local string rx680_tgt
    .local int rx680_pos
    .local int rx680_off
    .local int rx680_eos
    .local int rx680_rep
    .local pmc rx680_cur
    .local pmc rx680_curclass
    .local pmc rx680_bstack
    .local pmc rx680_cstack
    rx680_start = self."!cursor_start_all"()
    set rx680_cur, rx680_start[0]
    set rx680_tgt, rx680_start[1]
    set rx680_pos, rx680_start[2]
    set rx680_curclass, rx680_start[3]
    set rx680_bstack, rx680_start[4]
    set $I19, rx680_start[5]
    store_lex unicode:"$\x{a2}", rx680_cur
    length rx680_eos, rx680_tgt
    eq $I19, 1, rx680_restart1567
    gt rx680_pos, rx680_eos, rx680_fail1568
    repr_get_attr_int $I11, self, rx680_curclass, "$!from"
    ne $I11, -1, rxscan681_done1574
    goto rxscan681_scan1573
  rxscan681_loop1572:
    inc rx680_pos
    gt rx680_pos, rx680_eos, rx680_fail1568
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!from", rx680_pos
  rxscan681_scan1573:
    nqp_rxmark rx680_bstack, rxscan681_loop1572, rx680_pos, 0
  rxscan681_done1574:
    .const 'Sub' $P5001 = 'cuid_93_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!pos", rx680_pos
    $P11 = rx680_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx680_curclass, "$!pos"
    lt $I11, 0, rx680_fail1568
    .const 'Sub' $P5002 = 'cuid_94_1382959278.72036' 
    capture_lex $P5002
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!pos", rx680_pos
    $P11 = rx680_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx680_curclass, "$!pos"
    ge $I11, 0, rx680_fail1568
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!pos", rx680_pos
    $P11 = rx680_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx680_curclass, "$!pos"
    lt $I11, 0, rx680_fail1568
    nqp_rxmark rx680_bstack, rxsubrule689_pass1604, -1, 0
  rxsubrule689_pass1604:
    rx680_cstack = rx680_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx680_pos, $P11, rx680_curclass, "$!pos"
    rx680_cur."!cursor_pass"(rx680_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx680_cur)
  rx680_restart1567:
    repr_get_attr_obj rx680_cstack, rx680_cur, rx680_curclass, "$!cstack"
  rx680_fail1568:
    unless rx680_bstack, rx680_done1566
    pop $I19, rx680_bstack
    if_null rx680_cstack, rx680_cstack_done1571
    unless rx680_cstack, rx680_cstack_done1571
    dec $I19
    set $P11, rx680_cstack[$I19]
  rx680_cstack_done1571:
    pop rx680_rep, rx680_bstack
    pop rx680_pos, rx680_bstack
    pop $I19, rx680_bstack
    lt rx680_pos, -1, rx680_done1566
    lt rx680_pos, 0, rx680_fail1568
    eq $I19, 0, rx680_fail1568
    nqp_islist $I20, rx680_cstack
    unless $I20, rx680_jump1569
    elements $I18, rx680_bstack
    le $I18, 0, rx680_cut1570
    dec $I18
    set $I18, rx680_bstack[$I18]
  rx680_cut1570:
    assign rx680_cstack, $I18
  rx680_jump1569:
    jump $I19
  rx680_done1566:
    rx680_cur."!cursor_fail"()
    .return (rx680_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_93_1382959278.72036") :anon :lex :outer("cuid_92_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx682_start
    .local string rx682_tgt
    .local int rx682_pos
    .local int rx682_off
    .local int rx682_eos
    .local int rx682_rep
    .local pmc rx682_cur
    .local pmc rx682_curclass
    .local pmc rx682_bstack
    .local pmc rx682_cstack
    rx682_start = self."!cursor_start_all"()
    set rx682_cur, rx682_start[0]
    set rx682_tgt, rx682_start[1]
    set rx682_pos, rx682_start[2]
    set rx682_curclass, rx682_start[3]
    set rx682_bstack, rx682_start[4]
    set $I19, rx682_start[5]
    store_lex unicode:"$\x{a2}", rx682_cur
    length rx682_eos, rx682_tgt
    eq $I19, 1, rx682_restart1577
    gt rx682_pos, rx682_eos, rx682_fail1578
    repr_get_attr_int $I11, self, rx682_curclass, "$!from"
    ne $I11, -1, rxscan683_done1584
    goto rxscan683_scan1583
  rxscan683_loop1582:
    inc rx682_pos
    gt rx682_pos, rx682_eos, rx682_fail1578
    repr_bind_attr_int rx682_cur, rx682_curclass, "$!from", rx682_pos
  rxscan683_scan1583:
    nqp_rxmark rx682_bstack, rxscan683_loop1582, rx682_pos, 0
  rxscan683_done1584:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt684_01586
    nqp_push_label $P11, alt684_11587
    nqp_push_label $P11, alt684_21588
    nqp_rxmark rx682_bstack, alt684_end1585, -1, 0
    rx682_cur."!alt"(rx682_pos, "alt_nfa__17_1382959280.9934", $P11)
    goto rx682_fail1578
  alt684_01586:
    add $I11, rx682_pos, 5
    gt $I11, rx682_eos, rx682_fail1578
    substr $S10, rx682_tgt, rx682_pos, 5
    ne $S10, ucs4:"multi", rx682_fail1578
    add rx682_pos, 5
    goto alt684_end1585
  alt684_11587:
    add $I11, rx682_pos, 5
    gt $I11, rx682_eos, rx682_fail1578
    substr $S10, rx682_tgt, rx682_pos, 5
    ne $S10, ucs4:"proto", rx682_fail1578
    add rx682_pos, 5
    goto alt684_end1585
  alt684_21588:
    add $I11, rx682_pos, 4
    gt $I11, rx682_eos, rx682_fail1578
    substr $S10, rx682_tgt, rx682_pos, 4
    ne $S10, ucs4:"only", rx682_fail1578
    add rx682_pos, 4
    goto alt684_end1585
  alt684_end1585:
    rx682_cur."!cursor_pass"(rx682_pos, 'backtrack'=>1)
    .return (rx682_cur)
  rx682_restart1577:
    repr_get_attr_obj rx682_cstack, rx682_cur, rx682_curclass, "$!cstack"
  rx682_fail1578:
    unless rx682_bstack, rx682_done1576
    pop $I19, rx682_bstack
    if_null rx682_cstack, rx682_cstack_done1581
    unless rx682_cstack, rx682_cstack_done1581
    dec $I19
    set $P11, rx682_cstack[$I19]
  rx682_cstack_done1581:
    pop rx682_rep, rx682_bstack
    pop rx682_pos, rx682_bstack
    pop $I19, rx682_bstack
    lt rx682_pos, -1, rx682_done1576
    lt rx682_pos, 0, rx682_fail1578
    eq $I19, 0, rx682_fail1578
    nqp_islist $I20, rx682_cstack
    unless $I20, rx682_jump1579
    elements $I18, rx682_bstack
    le $I18, 0, rx682_cut1580
    dec $I18
    set $I18, rx682_bstack[$I18]
  rx682_cut1580:
    assign rx682_cstack, $I18
  rx682_jump1579:
    jump $I19
  rx682_done1576:
    rx682_cur."!cursor_fail"()
    .return (rx682_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_94_1382959278.72036") :anon :lex :outer("cuid_92_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx685_start
    .local string rx685_tgt
    .local int rx685_pos
    .local int rx685_off
    .local int rx685_eos
    .local int rx685_rep
    .local pmc rx685_cur
    .local pmc rx685_curclass
    .local pmc rx685_bstack
    .local pmc rx685_cstack
    rx685_start = self."!cursor_start_all"()
    set rx685_cur, rx685_start[0]
    set rx685_tgt, rx685_start[1]
    set rx685_pos, rx685_start[2]
    set rx685_curclass, rx685_start[3]
    set rx685_bstack, rx685_start[4]
    set $I19, rx685_start[5]
    store_lex unicode:"$\x{a2}", rx685_cur
    length rx685_eos, rx685_tgt
    eq $I19, 1, rx685_restart1591
    gt rx685_pos, rx685_eos, rx685_fail1592
    repr_get_attr_int $I11, self, rx685_curclass, "$!from"
    ne $I11, -1, rxscan686_done1598
    goto rxscan686_scan1597
  rxscan686_loop1596:
    inc rx685_pos
    index rx685_pos, rx685_tgt, ucs4:"proto", rx685_pos
    eq rx685_pos, -1, rx685_fail1592
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!from", rx685_pos
  rxscan686_scan1597:
    nqp_rxmark rx685_bstack, rxscan686_loop1596, rx685_pos, 0
  rxscan686_done1598:
    add $I11, rx685_pos, 5
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 5
    ne $S10, ucs4:"proto", rx685_fail1592
    add rx685_pos, 5
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!pos", rx685_pos
    $P11 = rx685_cur."ws"()
    repr_get_attr_int $I11, $P11, rx685_curclass, "$!pos"
    lt $I11, 0, rx685_fail1592
    repr_get_attr_int rx685_pos, $P11, rx685_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt688_01601
    nqp_push_label $P11, alt688_11602
    nqp_push_label $P11, alt688_21603
    nqp_rxmark rx685_bstack, alt688_end1600, -1, 0
    rx685_cur."!alt"(rx685_pos, "alt_nfa__18_1382959281.00324", $P11)
    goto rx685_fail1592
  alt688_01601:
    add $I11, rx685_pos, 5
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 5
    ne $S10, ucs4:"regex", rx685_fail1592
    add rx685_pos, 5
    goto alt688_end1600
  alt688_11602:
    add $I11, rx685_pos, 5
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 5
    ne $S10, ucs4:"token", rx685_fail1592
    add rx685_pos, 5
    goto alt688_end1600
  alt688_21603:
    add $I11, rx685_pos, 4
    gt $I11, rx685_eos, rx685_fail1592
    substr $S10, rx685_tgt, rx685_pos, 4
    ne $S10, ucs4:"rule", rx685_fail1592
    add rx685_pos, 4
    goto alt688_end1600
  alt688_end1600:
    nqp_rxcommit rx685_bstack, alt688_end1600
    rx685_cur."!cursor_pass"(rx685_pos, 'backtrack'=>1)
    .return (rx685_cur)
  rx685_restart1591:
    repr_get_attr_obj rx685_cstack, rx685_cur, rx685_curclass, "$!cstack"
  rx685_fail1592:
    unless rx685_bstack, rx685_done1590
    pop $I19, rx685_bstack
    if_null rx685_cstack, rx685_cstack_done1595
    unless rx685_cstack, rx685_cstack_done1595
    dec $I19
    set $P11, rx685_cstack[$I19]
  rx685_cstack_done1595:
    pop rx685_rep, rx685_bstack
    pop rx685_pos, rx685_bstack
    pop $I19, rx685_bstack
    lt rx685_pos, -1, rx685_done1590
    lt rx685_pos, 0, rx685_fail1592
    eq $I19, 0, rx685_fail1592
    nqp_islist $I20, rx685_cstack
    unless $I20, rx685_jump1593
    elements $I18, rx685_bstack
    le $I18, 0, rx685_cut1594
    dec $I18
    set $I18, rx685_bstack[$I18]
  rx685_cut1594:
    assign rx685_cstack, $I18
  rx685_jump1593:
    jump $I19
  rx685_done1590:
    rx685_cur."!cursor_fail"()
    .return (rx685_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_95_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1052
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx690_start
    .local string rx690_tgt
    .local int rx690_pos
    .local int rx690_off
    .local int rx690_eos
    .local int rx690_rep
    .local pmc rx690_cur
    .local pmc rx690_curclass
    .local pmc rx690_bstack
    .local pmc rx690_cstack
    rx690_start = self."!cursor_start_all"()
    set rx690_cur, rx690_start[0]
    set rx690_tgt, rx690_start[1]
    set rx690_pos, rx690_start[2]
    set rx690_curclass, rx690_start[3]
    set rx690_bstack, rx690_start[4]
    set $I19, rx690_start[5]
    store_lex unicode:"$\x{a2}", rx690_cur
    length rx690_eos, rx690_tgt
    eq $I19, 1, rx690_restart1607
    gt rx690_pos, rx690_eos, rx690_fail1608
    repr_get_attr_int $I11, self, rx690_curclass, "$!from"
    ne $I11, -1, rxscan691_done1614
    goto rxscan691_scan1613
  rxscan691_loop1612:
    inc rx690_pos
    gt rx690_pos, rx690_eos, rx690_fail1608
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!from", rx690_pos
  rxscan691_scan1613:
    nqp_rxmark rx690_bstack, rxscan691_loop1612, rx690_pos, 0
  rxscan691_done1614:
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1608
    nqp_rxmark rx690_bstack, rxsubrule692_pass1615, -1, 0
  rxsubrule692_pass1615:
    rx690_cstack = rx690_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    rx690_cur."!cursor_pass"(rx690_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx690_cur)
  rx690_restart1607:
    repr_get_attr_obj rx690_cstack, rx690_cur, rx690_curclass, "$!cstack"
  rx690_fail1608:
    unless rx690_bstack, rx690_done1606
    pop $I19, rx690_bstack
    if_null rx690_cstack, rx690_cstack_done1611
    unless rx690_cstack, rx690_cstack_done1611
    dec $I19
    set $P11, rx690_cstack[$I19]
  rx690_cstack_done1611:
    pop rx690_rep, rx690_bstack
    pop rx690_pos, rx690_bstack
    pop $I19, rx690_bstack
    lt rx690_pos, -1, rx690_done1606
    lt rx690_pos, 0, rx690_fail1608
    eq $I19, 0, rx690_fail1608
    nqp_islist $I20, rx690_cstack
    unless $I20, rx690_jump1609
    elements $I18, rx690_bstack
    le $I18, 0, rx690_cut1610
    dec $I18
    set $I18, rx690_bstack[$I18]
  rx690_cut1610:
    assign rx690_cstack, $I18
  rx690_jump1609:
    jump $I19
  rx690_done1606:
    rx690_cur."!cursor_fail"()
    .return (rx690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_96_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1053
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx693_start
    .local string rx693_tgt
    .local int rx693_pos
    .local int rx693_off
    .local int rx693_eos
    .local int rx693_rep
    .local pmc rx693_cur
    .local pmc rx693_curclass
    .local pmc rx693_bstack
    .local pmc rx693_cstack
    rx693_start = self."!cursor_start_all"()
    set rx693_cur, rx693_start[0]
    set rx693_tgt, rx693_start[1]
    set rx693_pos, rx693_start[2]
    set rx693_curclass, rx693_start[3]
    set rx693_bstack, rx693_start[4]
    set $I19, rx693_start[5]
    store_lex unicode:"$\x{a2}", rx693_cur
    length rx693_eos, rx693_tgt
    eq $I19, 1, rx693_restart1618
    gt rx693_pos, rx693_eos, rx693_fail1619
    repr_get_attr_int $I11, self, rx693_curclass, "$!from"
    ne $I11, -1, rxscan694_done1625
    goto rxscan694_scan1624
  rxscan694_loop1623:
    inc rx693_pos
    gt rx693_pos, rx693_eos, rx693_fail1619
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!from", rx693_pos
  rxscan694_scan1624:
    nqp_rxmark rx693_bstack, rxscan694_loop1623, rx693_pos, 0
  rxscan694_done1625:
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!pos", rx693_pos
    $P11 = rx693_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx693_curclass, "$!pos"
    lt $I11, 0, rx693_fail1619
    nqp_rxmark rx693_bstack, rxsubrule695_pass1626, -1, 0
  rxsubrule695_pass1626:
    rx693_cstack = rx693_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx693_pos, $P11, rx693_curclass, "$!pos"
    rx693_cur."!cursor_pass"(rx693_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx693_cur)
  rx693_restart1618:
    repr_get_attr_obj rx693_cstack, rx693_cur, rx693_curclass, "$!cstack"
  rx693_fail1619:
    unless rx693_bstack, rx693_done1617
    pop $I19, rx693_bstack
    if_null rx693_cstack, rx693_cstack_done1622
    unless rx693_cstack, rx693_cstack_done1622
    dec $I19
    set $P11, rx693_cstack[$I19]
  rx693_cstack_done1622:
    pop rx693_rep, rx693_bstack
    pop rx693_pos, rx693_bstack
    pop $I19, rx693_bstack
    lt rx693_pos, -1, rx693_done1617
    lt rx693_pos, 0, rx693_fail1619
    eq $I19, 0, rx693_fail1619
    nqp_islist $I20, rx693_cstack
    unless $I20, rx693_jump1620
    elements $I18, rx693_bstack
    le $I18, 0, rx693_cut1621
    dec $I18
    set $I18, rx693_bstack[$I18]
  rx693_cut1621:
    assign rx693_cstack, $I18
  rx693_jump1620:
    jump $I19
  rx693_done1617:
    rx693_cur."!cursor_fail"()
    .return (rx693_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_97_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1054
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx696_start
    .local string rx696_tgt
    .local int rx696_pos
    .local int rx696_off
    .local int rx696_eos
    .local int rx696_rep
    .local pmc rx696_cur
    .local pmc rx696_curclass
    .local pmc rx696_bstack
    .local pmc rx696_cstack
    rx696_start = self."!cursor_start_all"()
    set rx696_cur, rx696_start[0]
    set rx696_tgt, rx696_start[1]
    set rx696_pos, rx696_start[2]
    set rx696_curclass, rx696_start[3]
    set rx696_bstack, rx696_start[4]
    set $I19, rx696_start[5]
    store_lex unicode:"$\x{a2}", rx696_cur
    length rx696_eos, rx696_tgt
    eq $I19, 1, rx696_restart1629
    gt rx696_pos, rx696_eos, rx696_fail1630
    repr_get_attr_int $I11, self, rx696_curclass, "$!from"
    ne $I11, -1, rxscan697_done1636
    goto rxscan697_scan1635
  rxscan697_loop1634:
    inc rx696_pos
    gt rx696_pos, rx696_eos, rx696_fail1630
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!from", rx696_pos
  rxscan697_scan1635:
    nqp_rxmark rx696_bstack, rxscan697_loop1634, rx696_pos, 0
  rxscan697_done1636:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1630
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1630
    nqp_rxmark rx696_bstack, rxsubrule698_pass1637, -1, 0
  rxsubrule698_pass1637:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    rx696_cur."!cursor_pass"(rx696_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx696_cur)
  rx696_restart1629:
    repr_get_attr_obj rx696_cstack, rx696_cur, rx696_curclass, "$!cstack"
  rx696_fail1630:
    unless rx696_bstack, rx696_done1628
    pop $I19, rx696_bstack
    if_null rx696_cstack, rx696_cstack_done1633
    unless rx696_cstack, rx696_cstack_done1633
    dec $I19
    set $P11, rx696_cstack[$I19]
  rx696_cstack_done1633:
    pop rx696_rep, rx696_bstack
    pop rx696_pos, rx696_bstack
    pop $I19, rx696_bstack
    lt rx696_pos, -1, rx696_done1628
    lt rx696_pos, 0, rx696_fail1630
    eq $I19, 0, rx696_fail1630
    nqp_islist $I20, rx696_cstack
    unless $I20, rx696_jump1631
    elements $I18, rx696_bstack
    le $I18, 0, rx696_cut1632
    dec $I18
    set $I18, rx696_bstack[$I18]
  rx696_cut1632:
    assign rx696_cstack, $I18
  rx696_jump1631:
    jump $I19
  rx696_done1628:
    rx696_cur."!cursor_fail"()
    .return (rx696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_98_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1055
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_422_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx699_start
    .local string rx699_tgt
    .local int rx699_pos
    .local int rx699_off
    .local int rx699_eos
    .local int rx699_rep
    .local pmc rx699_cur
    .local pmc rx699_curclass
    .local pmc rx699_bstack
    .local pmc rx699_cstack
    rx699_start = self."!cursor_start_all"()
    set rx699_cur, rx699_start[0]
    set rx699_tgt, rx699_start[1]
    set rx699_pos, rx699_start[2]
    set rx699_curclass, rx699_start[3]
    set rx699_bstack, rx699_start[4]
    set $I19, rx699_start[5]
    store_lex unicode:"$\x{a2}", rx699_cur
    length rx699_eos, rx699_tgt
    eq $I19, 1, rx699_restart1640
    gt rx699_pos, rx699_eos, rx699_fail1641
    repr_get_attr_int $I11, self, rx699_curclass, "$!from"
    ne $I11, -1, rxscan700_done1647
    goto rxscan700_scan1646
  rxscan700_loop1645:
    inc rx699_pos
    gt rx699_pos, rx699_eos, rx699_fail1641
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!from", rx699_pos
  rxscan700_scan1646:
    nqp_rxmark rx699_bstack, rxscan700_loop1645, rx699_pos, 0
  rxscan700_done1647:
    nqp_rxmark rx699_bstack, rxcap701_fail1649, rx699_pos, 0
    add $I11, rx699_pos, 4
    gt $I11, rx699_eos, rx699_fail1641
    substr $S10, rx699_tgt, rx699_pos, 4
    ne $S10, ucs4:"last", rx699_fail1641
    add rx699_pos, 4
    nqp_rxpeek $I19, rx699_bstack, rxcap701_fail1649
    inc $I19
    set $I11, rx699_bstack[$I19]
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx699_pos)
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "sym")
    goto rxcap701_done1648
  rxcap701_fail1649:
    goto rx699_fail1641
  rxcap701_done1648:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    ge $I11, 0, rx699_fail1641
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    store_lex unicode:"$\x{a2}", rx699_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_422_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx699_cur."!cursor_pass"(rx699_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx699_cur)
  rx699_restart1640:
    repr_get_attr_obj rx699_cstack, rx699_cur, rx699_curclass, "$!cstack"
  rx699_fail1641:
    unless rx699_bstack, rx699_done1639
    pop $I19, rx699_bstack
    if_null rx699_cstack, rx699_cstack_done1644
    unless rx699_cstack, rx699_cstack_done1644
    dec $I19
    set $P11, rx699_cstack[$I19]
  rx699_cstack_done1644:
    pop rx699_rep, rx699_bstack
    pop rx699_pos, rx699_bstack
    pop $I19, rx699_bstack
    lt rx699_pos, -1, rx699_done1639
    lt rx699_pos, 0, rx699_fail1641
    eq $I19, 0, rx699_fail1641
    nqp_islist $I20, rx699_cstack
    unless $I20, rx699_jump1642
    elements $I18, rx699_bstack
    le $I18, 0, rx699_cut1643
    dec $I18
    set $I18, rx699_bstack[$I18]
  rx699_cut1643:
    assign rx699_cstack, $I18
  rx699_jump1642:
    jump $I19
  rx699_done1639:
    rx699_cur."!cursor_fail"()
    .return (rx699_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1382959278.72036") :anon :lex :outer("cuid_98_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1055

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_99_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1056
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_423_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx702_start
    .local string rx702_tgt
    .local int rx702_pos
    .local int rx702_off
    .local int rx702_eos
    .local int rx702_rep
    .local pmc rx702_cur
    .local pmc rx702_curclass
    .local pmc rx702_bstack
    .local pmc rx702_cstack
    rx702_start = self."!cursor_start_all"()
    set rx702_cur, rx702_start[0]
    set rx702_tgt, rx702_start[1]
    set rx702_pos, rx702_start[2]
    set rx702_curclass, rx702_start[3]
    set rx702_bstack, rx702_start[4]
    set $I19, rx702_start[5]
    store_lex unicode:"$\x{a2}", rx702_cur
    length rx702_eos, rx702_tgt
    eq $I19, 1, rx702_restart1652
    gt rx702_pos, rx702_eos, rx702_fail1653
    repr_get_attr_int $I11, self, rx702_curclass, "$!from"
    ne $I11, -1, rxscan703_done1659
    goto rxscan703_scan1658
  rxscan703_loop1657:
    inc rx702_pos
    gt rx702_pos, rx702_eos, rx702_fail1653
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!from", rx702_pos
  rxscan703_scan1658:
    nqp_rxmark rx702_bstack, rxscan703_loop1657, rx702_pos, 0
  rxscan703_done1659:
    nqp_rxmark rx702_bstack, rxcap704_fail1661, rx702_pos, 0
    add $I11, rx702_pos, 4
    gt $I11, rx702_eos, rx702_fail1653
    substr $S10, rx702_tgt, rx702_pos, 4
    ne $S10, ucs4:"next", rx702_fail1653
    add rx702_pos, 4
    nqp_rxpeek $I19, rx702_bstack, rxcap704_fail1661
    inc $I19
    set $I11, rx702_bstack[$I19]
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!pos", rx702_pos
    $P11 = rx702_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx702_pos)
    rx702_cstack = rx702_cur."!cursor_capture"($P11, "sym")
    goto rxcap704_done1660
  rxcap704_fail1661:
    goto rx702_fail1653
  rxcap704_done1660:
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!pos", rx702_pos
    $P11 = rx702_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx702_curclass, "$!pos"
    ge $I11, 0, rx702_fail1653
    repr_bind_attr_int rx702_cur, rx702_curclass, "$!pos", rx702_pos
    store_lex unicode:"$\x{a2}", rx702_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_423_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx702_cur."!cursor_pass"(rx702_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx702_cur)
  rx702_restart1652:
    repr_get_attr_obj rx702_cstack, rx702_cur, rx702_curclass, "$!cstack"
  rx702_fail1653:
    unless rx702_bstack, rx702_done1651
    pop $I19, rx702_bstack
    if_null rx702_cstack, rx702_cstack_done1656
    unless rx702_cstack, rx702_cstack_done1656
    dec $I19
    set $P11, rx702_cstack[$I19]
  rx702_cstack_done1656:
    pop rx702_rep, rx702_bstack
    pop rx702_pos, rx702_bstack
    pop $I19, rx702_bstack
    lt rx702_pos, -1, rx702_done1651
    lt rx702_pos, 0, rx702_fail1653
    eq $I19, 0, rx702_fail1653
    nqp_islist $I20, rx702_cstack
    unless $I20, rx702_jump1654
    elements $I18, rx702_bstack
    le $I18, 0, rx702_cut1655
    dec $I18
    set $I18, rx702_bstack[$I18]
  rx702_cut1655:
    assign rx702_cstack, $I18
  rx702_jump1654:
    jump $I19
  rx702_done1651:
    rx702_cur."!cursor_fail"()
    .return (rx702_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1382959278.72036") :anon :lex :outer("cuid_99_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1056

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_100_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1057
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_424_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx705_start
    .local string rx705_tgt
    .local int rx705_pos
    .local int rx705_off
    .local int rx705_eos
    .local int rx705_rep
    .local pmc rx705_cur
    .local pmc rx705_curclass
    .local pmc rx705_bstack
    .local pmc rx705_cstack
    rx705_start = self."!cursor_start_all"()
    set rx705_cur, rx705_start[0]
    set rx705_tgt, rx705_start[1]
    set rx705_pos, rx705_start[2]
    set rx705_curclass, rx705_start[3]
    set rx705_bstack, rx705_start[4]
    set $I19, rx705_start[5]
    store_lex unicode:"$\x{a2}", rx705_cur
    length rx705_eos, rx705_tgt
    eq $I19, 1, rx705_restart1664
    gt rx705_pos, rx705_eos, rx705_fail1665
    repr_get_attr_int $I11, self, rx705_curclass, "$!from"
    ne $I11, -1, rxscan706_done1671
    goto rxscan706_scan1670
  rxscan706_loop1669:
    inc rx705_pos
    gt rx705_pos, rx705_eos, rx705_fail1665
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!from", rx705_pos
  rxscan706_scan1670:
    nqp_rxmark rx705_bstack, rxscan706_loop1669, rx705_pos, 0
  rxscan706_done1671:
    nqp_rxmark rx705_bstack, rxcap707_fail1673, rx705_pos, 0
    add $I11, rx705_pos, 4
    gt $I11, rx705_eos, rx705_fail1665
    substr $S10, rx705_tgt, rx705_pos, 4
    ne $S10, ucs4:"redo", rx705_fail1665
    add rx705_pos, 4
    nqp_rxpeek $I19, rx705_bstack, rxcap707_fail1673
    inc $I19
    set $I11, rx705_bstack[$I19]
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!pos", rx705_pos
    $P11 = rx705_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx705_pos)
    rx705_cstack = rx705_cur."!cursor_capture"($P11, "sym")
    goto rxcap707_done1672
  rxcap707_fail1673:
    goto rx705_fail1665
  rxcap707_done1672:
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!pos", rx705_pos
    $P11 = rx705_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx705_curclass, "$!pos"
    ge $I11, 0, rx705_fail1665
    repr_bind_attr_int rx705_cur, rx705_curclass, "$!pos", rx705_pos
    store_lex unicode:"$\x{a2}", rx705_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_424_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx705_cur."!cursor_pass"(rx705_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx705_cur)
  rx705_restart1664:
    repr_get_attr_obj rx705_cstack, rx705_cur, rx705_curclass, "$!cstack"
  rx705_fail1665:
    unless rx705_bstack, rx705_done1663
    pop $I19, rx705_bstack
    if_null rx705_cstack, rx705_cstack_done1668
    unless rx705_cstack, rx705_cstack_done1668
    dec $I19
    set $P11, rx705_cstack[$I19]
  rx705_cstack_done1668:
    pop rx705_rep, rx705_bstack
    pop rx705_pos, rx705_bstack
    pop $I19, rx705_bstack
    lt rx705_pos, -1, rx705_done1663
    lt rx705_pos, 0, rx705_fail1665
    eq $I19, 0, rx705_fail1665
    nqp_islist $I20, rx705_cstack
    unless $I20, rx705_jump1666
    elements $I18, rx705_bstack
    le $I18, 0, rx705_cut1667
    dec $I18
    set $I18, rx705_bstack[$I18]
  rx705_cut1667:
    assign rx705_cstack, $I18
  rx705_jump1666:
    jump $I19
  rx705_done1663:
    rx705_cur."!cursor_fail"()
    .return (rx705_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1382959278.72036") :anon :lex :outer("cuid_100_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1057

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_101_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1059
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx708_start
    .local string rx708_tgt
    .local int rx708_pos
    .local int rx708_off
    .local int rx708_eos
    .local int rx708_rep
    .local pmc rx708_cur
    .local pmc rx708_curclass
    .local pmc rx708_bstack
    .local pmc rx708_cstack
    rx708_start = self."!cursor_start_all"()
    set rx708_cur, rx708_start[0]
    set rx708_tgt, rx708_start[1]
    set rx708_pos, rx708_start[2]
    set rx708_curclass, rx708_start[3]
    set rx708_bstack, rx708_start[4]
    set $I19, rx708_start[5]
    store_lex unicode:"$\x{a2}", rx708_cur
    length rx708_eos, rx708_tgt
    eq $I19, 1, rx708_restart1676
    gt rx708_pos, rx708_eos, rx708_fail1677
    repr_get_attr_int $I11, self, rx708_curclass, "$!from"
    ne $I11, -1, rxscan709_done1683
    goto rxscan709_scan1682
  rxscan709_loop1681:
    inc rx708_pos
    gt rx708_pos, rx708_eos, rx708_fail1677
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!from", rx708_pos
  rxscan709_scan1682:
    nqp_rxmark rx708_bstack, rxscan709_loop1681, rx708_pos, 0
  rxscan709_done1683:
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1677
    nqp_rxmark rx708_bstack, rxsubrule710_pass1684, -1, 0
  rxsubrule710_pass1684:
    rx708_cstack = rx708_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    nqp_rxmark rx708_bstack, rxquantr711_done1686, rx708_pos, 0
  rxquantr711_loop1685:
    ge rx708_pos, rx708_eos, rx708_fail1677
    substr $S11, rx708_tgt, rx708_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx708_fail1677
    inc rx708_pos
    nqp_rxpeek $I19, rx708_bstack, rxquantr711_done1686
    inc $I19
    inc $I19
    set rx708_rep, rx708_bstack[$I19]
    nqp_rxcommit rx708_bstack, rxquantr711_done1686
    inc rx708_rep
    nqp_rxmark rx708_bstack, rxquantr711_done1686, rx708_pos, rx708_rep
    goto rxquantr711_loop1685
  rxquantr711_done1686:
    add $I11, rx708_pos, 2
    gt $I11, rx708_eos, rx708_fail1677
    substr $S10, rx708_tgt, rx708_pos, 2
    ne $S10, ucs4:"=>", rx708_fail1677
    add rx708_pos, 2
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."ws"()
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1677
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1677
    nqp_rxmark rx708_bstack, rxsubrule713_pass1688, -1, 0
  rxsubrule713_pass1688:
    rx708_cstack = rx708_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    rx708_cur."!cursor_pass"(rx708_pos, "fatarrow", 'backtrack'=>1)
    .return (rx708_cur)
  rx708_restart1676:
    repr_get_attr_obj rx708_cstack, rx708_cur, rx708_curclass, "$!cstack"
  rx708_fail1677:
    unless rx708_bstack, rx708_done1675
    pop $I19, rx708_bstack
    if_null rx708_cstack, rx708_cstack_done1680
    unless rx708_cstack, rx708_cstack_done1680
    dec $I19
    set $P11, rx708_cstack[$I19]
  rx708_cstack_done1680:
    pop rx708_rep, rx708_bstack
    pop rx708_pos, rx708_bstack
    pop $I19, rx708_bstack
    lt rx708_pos, -1, rx708_done1675
    lt rx708_pos, 0, rx708_fail1677
    eq $I19, 0, rx708_fail1677
    nqp_islist $I20, rx708_cstack
    unless $I20, rx708_jump1678
    elements $I18, rx708_bstack
    le $I18, 0, rx708_cut1679
    dec $I18
    set $I18, rx708_bstack[$I18]
  rx708_cut1679:
    assign rx708_cstack, $I18
  rx708_jump1678:
    jump $I19
  rx708_done1675:
    rx708_cur."!cursor_fail"()
    .return (rx708_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_102_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1063
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx714_start
    .local string rx714_tgt
    .local int rx714_pos
    .local int rx714_off
    .local int rx714_eos
    .local int rx714_rep
    .local pmc rx714_cur
    .local pmc rx714_curclass
    .local pmc rx714_bstack
    .local pmc rx714_cstack
    rx714_start = self."!cursor_start_all"()
    set rx714_cur, rx714_start[0]
    set rx714_tgt, rx714_start[1]
    set rx714_pos, rx714_start[2]
    set rx714_curclass, rx714_start[3]
    set rx714_bstack, rx714_start[4]
    set $I19, rx714_start[5]
    store_lex unicode:"$\x{a2}", rx714_cur
    length rx714_eos, rx714_tgt
    eq $I19, 1, rx714_restart1691
    gt rx714_pos, rx714_eos, rx714_fail1692
    repr_get_attr_int $I11, self, rx714_curclass, "$!from"
    ne $I11, -1, rxscan715_done1698
    goto rxscan715_scan1697
  rxscan715_loop1696:
    inc rx714_pos
    index rx714_pos, rx714_tgt, ucs4:":", rx714_pos
    eq rx714_pos, -1, rx714_fail1692
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!from", rx714_pos
  rxscan715_scan1697:
    nqp_rxmark rx714_bstack, rxscan715_loop1696, rx714_pos, 0
  rxscan715_done1698:
    add $I11, rx714_pos, 1
    gt $I11, rx714_eos, rx714_fail1692
    substr $S10, rx714_tgt, rx714_pos, 1
    ne $S10, ucs4:":", rx714_fail1692
    add rx714_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt716_01700
    nqp_push_label $P11, alt716_11704
    nqp_push_label $P11, alt716_21710
    nqp_push_label $P11, alt716_31712
    nqp_rxmark rx714_bstack, alt716_end1699, -1, 0
    rx714_cur."!alt"(rx714_pos, "alt_nfa__19_1382959281.06782", $P11)
    goto rx714_fail1692
  alt716_01700:
    nqp_rxmark rx714_bstack, rxcap717_fail1702, rx714_pos, 0
    add $I11, rx714_pos, 1
    gt $I11, rx714_eos, rx714_fail1692
    substr $S10, rx714_tgt, rx714_pos, 1
    ne $S10, ucs4:"!", rx714_fail1692
    add rx714_pos, 1
    nqp_rxpeek $I19, rx714_bstack, rxcap717_fail1702
    inc $I19
    set $I11, rx714_bstack[$I19]
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx714_pos)
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "not")
    goto rxcap717_done1701
  rxcap717_fail1702:
    goto rx714_fail1692
  rxcap717_done1701:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule718_pass1703, -1, 0
  rxsubrule718_pass1703:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    goto alt716_end1699
  alt716_11704:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule719_pass1705, -1, 0
  rxsubrule719_pass1705:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    nqp_rxmark rx714_bstack, rxquantr720_done1707, rx714_pos, 0
  rxquantr720_loop1706:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    goto rxsubrule721_pass1708
  rxsubrule721_back1709:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
  rxsubrule721_pass1708:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule721_back1709
    push rx714_bstack, $I11
    push rx714_bstack, 0
    push rx714_bstack, rx714_pos
    elements $I11, rx714_cstack
    push rx714_bstack, $I11
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    nqp_rxpeek $I19, rx714_bstack, rxquantr720_done1707
    inc $I19
    inc $I19
    set rx714_rep, rx714_bstack[$I19]
    nqp_rxcommit rx714_bstack, rxquantr720_done1707
    inc rx714_rep
  rxquantr720_done1707:
    goto alt716_end1699
  alt716_21710:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule722_pass1711, -1, 0
  rxsubrule722_pass1711:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    goto alt716_end1699
  alt716_31712:
    repr_bind_attr_int rx714_cur, rx714_curclass, "$!pos", rx714_pos
    $P11 = rx714_cur."variable"()
    repr_get_attr_int $I11, $P11, rx714_curclass, "$!pos"
    lt $I11, 0, rx714_fail1692
    nqp_rxmark rx714_bstack, rxsubrule723_pass1713, -1, 0
  rxsubrule723_pass1713:
    rx714_cstack = rx714_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx714_pos, $P11, rx714_curclass, "$!pos"
    goto alt716_end1699
  alt716_end1699:
    nqp_rxcommit rx714_bstack, alt716_end1699
    rx714_cur."!cursor_pass"(rx714_pos, "colonpair", 'backtrack'=>1)
    .return (rx714_cur)
  rx714_restart1691:
    repr_get_attr_obj rx714_cstack, rx714_cur, rx714_curclass, "$!cstack"
  rx714_fail1692:
    unless rx714_bstack, rx714_done1690
    pop $I19, rx714_bstack
    if_null rx714_cstack, rx714_cstack_done1695
    unless rx714_cstack, rx714_cstack_done1695
    dec $I19
    set $P11, rx714_cstack[$I19]
  rx714_cstack_done1695:
    pop rx714_rep, rx714_bstack
    pop rx714_pos, rx714_bstack
    pop $I19, rx714_bstack
    lt rx714_pos, -1, rx714_done1690
    lt rx714_pos, 0, rx714_fail1692
    eq $I19, 0, rx714_fail1692
    nqp_islist $I20, rx714_cstack
    unless $I20, rx714_jump1693
    elements $I18, rx714_bstack
    le $I18, 0, rx714_cut1694
    dec $I18
    set $I18, rx714_bstack[$I18]
  rx714_cut1694:
    assign rx714_cstack, $I18
  rx714_jump1693:
    jump $I19
  rx714_done1690:
    rx714_cur."!cursor_fail"()
    .return (rx714_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_103_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1073
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx724_start
    .local string rx724_tgt
    .local int rx724_pos
    .local int rx724_off
    .local int rx724_eos
    .local int rx724_rep
    .local pmc rx724_cur
    .local pmc rx724_curclass
    .local pmc rx724_bstack
    .local pmc rx724_cstack
    rx724_start = self."!cursor_start_all"()
    set rx724_cur, rx724_start[0]
    set rx724_tgt, rx724_start[1]
    set rx724_pos, rx724_start[2]
    set rx724_curclass, rx724_start[3]
    set rx724_bstack, rx724_start[4]
    set $I19, rx724_start[5]
    store_lex unicode:"$\x{a2}", rx724_cur
    length rx724_eos, rx724_tgt
    eq $I19, 1, rx724_restart1716
    gt rx724_pos, rx724_eos, rx724_fail1717
    repr_get_attr_int $I11, self, rx724_curclass, "$!from"
    ne $I11, -1, rxscan725_done1723
    goto rxscan725_scan1722
  rxscan725_loop1721:
    inc rx724_pos
    gt rx724_pos, rx724_eos, rx724_fail1717
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!from", rx724_pos
  rxscan725_scan1722:
    nqp_rxmark rx724_bstack, rxscan725_loop1721, rx724_pos, 0
  rxscan725_done1723:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt726_01725
    nqp_push_label $P11, alt726_11732
    nqp_push_label $P11, alt726_21735
    nqp_push_label $P11, alt726_31743
    nqp_rxmark rx724_bstack, alt726_end1724, -1, 0
    rx724_cur."!alt"(rx724_pos, "alt_nfa__20_1382959281.08866", $P11)
    goto rx724_fail1717
  alt726_01725:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule727_pass1726, -1, 0
  rxsubrule727_pass1726:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    nqp_rxmark rx724_bstack, rxquantr728_done1728, rx724_pos, 0
  rxquantr728_loop1727:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    goto rxsubrule729_pass1729
  rxsubrule729_back1730:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
  rxsubrule729_pass1729:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule729_back1730
    push rx724_bstack, $I11
    push rx724_bstack, 0
    push rx724_bstack, rx724_pos
    elements $I11, rx724_cstack
    push rx724_bstack, $I11
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    nqp_rxpeek $I19, rx724_bstack, rxquantr728_done1728
    inc $I19
    inc $I19
    set rx724_rep, rx724_bstack[$I19]
    nqp_rxcommit rx724_bstack, rxquantr728_done1728
    inc rx724_rep
  rxquantr728_done1728:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."name"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule730_pass1731, -1, 0
  rxsubrule730_pass1731:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    goto alt726_end1724
  alt726_11732:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule731_pass1733, -1, 0
  rxsubrule731_pass1733:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    ge rx724_pos, rx724_eos, rx724_fail1717
    substr $S11, rx724_tgt, rx724_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx724_fail1717
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule732_pass1734, -1, 0
  rxsubrule732_pass1734:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    goto alt726_end1724
  alt726_21735:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule733_pass1736, -1, 0
  rxsubrule733_pass1736:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    add $I11, rx724_pos, 1
    gt $I11, rx724_eos, rx724_fail1717
    substr $S10, rx724_tgt, rx724_pos, 1
    ne $S10, ucs4:"(", rx724_fail1717
    add rx724_pos, 1
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    nqp_rxmark rx724_bstack, rxsubrule734_pass1737, -1, 0
  rxsubrule734_pass1737:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
  alt735_01739:
    nqp_rxmark rx724_bstack, alt735_11740, rx724_pos, 0
    add $I11, rx724_pos, 1
    gt $I11, rx724_eos, rx724_fail1717
    substr $S10, rx724_tgt, rx724_pos, 1
    ne $S10, ucs4:")", rx724_fail1717
    add rx724_pos, 1
    goto alt735_end1738
  alt735_11740:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
    goto rxsubrule736_pass1741
  rxsubrule736_back1742:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1717
  rxsubrule736_pass1741:
    rx724_cstack = rx724_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule736_back1742
    push rx724_bstack, $I11
    push rx724_bstack, 0
    push rx724_bstack, rx724_pos
    elements $I11, rx724_cstack
    push rx724_bstack, $I11
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
  alt735_end1738:
    goto alt726_end1724
  alt726_31743:
    nqp_rxmark rx724_bstack, rxcap737_fail1745, rx724_pos, 0
    add $I11, rx724_pos, 1
    gt $I11, rx724_eos, rx724_fail1717
    substr $S10, rx724_tgt, rx724_pos, 1
    ne $S10, ucs4:"$", rx724_fail1717
    add rx724_pos, 1
    nqp_rxpeek $I19, rx724_bstack, rxcap737_fail1745
    inc $I19
    set $I11, rx724_bstack[$I19]
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx724_pos)
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sigil")
    goto rxcap737_done1744
  rxcap737_fail1745:
    goto rx724_fail1717
  rxcap737_done1744:
    nqp_rxmark rx724_bstack, rxcap738_fail1747, rx724_pos, 0
    ge rx724_pos, rx724_eos, rx724_fail1717
    substr $S11, rx724_tgt, rx724_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx724_fail1717
    inc rx724_pos
    nqp_rxpeek $I19, rx724_bstack, rxcap738_fail1747
    inc $I19
    set $I11, rx724_bstack[$I19]
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx724_pos)
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap738_done1746
  rxcap738_fail1747:
    goto rx724_fail1717
  rxcap738_done1746:
    goto alt726_end1724
  alt726_end1724:
    rx724_cur."!cursor_pass"(rx724_pos, "variable", 'backtrack'=>1)
    .return (rx724_cur)
  rx724_restart1716:
    repr_get_attr_obj rx724_cstack, rx724_cur, rx724_curclass, "$!cstack"
  rx724_fail1717:
    unless rx724_bstack, rx724_done1715
    pop $I19, rx724_bstack
    if_null rx724_cstack, rx724_cstack_done1720
    unless rx724_cstack, rx724_cstack_done1720
    dec $I19
    set $P11, rx724_cstack[$I19]
  rx724_cstack_done1720:
    pop rx724_rep, rx724_bstack
    pop rx724_pos, rx724_bstack
    pop $I19, rx724_bstack
    lt rx724_pos, -1, rx724_done1715
    lt rx724_pos, 0, rx724_fail1717
    eq $I19, 0, rx724_fail1717
    nqp_islist $I20, rx724_cstack
    unless $I20, rx724_jump1718
    elements $I18, rx724_bstack
    le $I18, 0, rx724_cut1719
    dec $I18
    set $I18, rx724_bstack[$I18]
  rx724_cut1719:
    assign rx724_cstack, $I18
  rx724_jump1718:
    jump $I19
  rx724_done1715:
    rx724_cur."!cursor_fail"()
    .return (rx724_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_104_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1080
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx739_start
    .local string rx739_tgt
    .local int rx739_pos
    .local int rx739_off
    .local int rx739_eos
    .local int rx739_rep
    .local pmc rx739_cur
    .local pmc rx739_curclass
    .local pmc rx739_bstack
    .local pmc rx739_cstack
    rx739_start = self."!cursor_start_all"()
    set rx739_cur, rx739_start[0]
    set rx739_tgt, rx739_start[1]
    set rx739_pos, rx739_start[2]
    set rx739_curclass, rx739_start[3]
    set rx739_bstack, rx739_start[4]
    set $I19, rx739_start[5]
    store_lex unicode:"$\x{a2}", rx739_cur
    length rx739_eos, rx739_tgt
    eq $I19, 1, rx739_restart1750
    gt rx739_pos, rx739_eos, rx739_fail1751
    repr_get_attr_int $I11, self, rx739_curclass, "$!from"
    ne $I11, -1, rxscan740_done1757
    goto rxscan740_scan1756
  rxscan740_loop1755:
    inc rx739_pos
    gt rx739_pos, rx739_eos, rx739_fail1751
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!from", rx739_pos
  rxscan740_scan1756:
    nqp_rxmark rx739_bstack, rxscan740_loop1755, rx739_pos, 0
  rxscan740_done1757:
    ge rx739_pos, rx739_eos, rx739_fail1751
    substr $S11, rx739_tgt, rx739_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx739_fail1751
    inc rx739_pos
    rx739_cur."!cursor_pass"(rx739_pos, "sigil", 'backtrack'=>1)
    .return (rx739_cur)
  rx739_restart1750:
    repr_get_attr_obj rx739_cstack, rx739_cur, rx739_curclass, "$!cstack"
  rx739_fail1751:
    unless rx739_bstack, rx739_done1749
    pop $I19, rx739_bstack
    if_null rx739_cstack, rx739_cstack_done1754
    unless rx739_cstack, rx739_cstack_done1754
    dec $I19
    set $P11, rx739_cstack[$I19]
  rx739_cstack_done1754:
    pop rx739_rep, rx739_bstack
    pop rx739_pos, rx739_bstack
    pop $I19, rx739_bstack
    lt rx739_pos, -1, rx739_done1749
    lt rx739_pos, 0, rx739_fail1751
    eq $I19, 0, rx739_fail1751
    nqp_islist $I20, rx739_cstack
    unless $I20, rx739_jump1752
    elements $I18, rx739_bstack
    le $I18, 0, rx739_cut1753
    dec $I18
    set $I18, rx739_bstack[$I18]
  rx739_cut1753:
    assign rx739_cstack, $I18
  rx739_jump1752:
    jump $I19
  rx739_done1749:
    rx739_cur."!cursor_fail"()
    .return (rx739_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_105_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1082
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx741_start
    .local string rx741_tgt
    .local int rx741_pos
    .local int rx741_off
    .local int rx741_eos
    .local int rx741_rep
    .local pmc rx741_cur
    .local pmc rx741_curclass
    .local pmc rx741_bstack
    .local pmc rx741_cstack
    rx741_start = self."!cursor_start_all"()
    set rx741_cur, rx741_start[0]
    set rx741_tgt, rx741_start[1]
    set rx741_pos, rx741_start[2]
    set rx741_curclass, rx741_start[3]
    set rx741_bstack, rx741_start[4]
    set $I19, rx741_start[5]
    store_lex unicode:"$\x{a2}", rx741_cur
    length rx741_eos, rx741_tgt
    eq $I19, 1, rx741_restart1760
    gt rx741_pos, rx741_eos, rx741_fail1761
    repr_get_attr_int $I11, self, rx741_curclass, "$!from"
    ne $I11, -1, rxscan742_done1767
    goto rxscan742_scan1766
  rxscan742_loop1765:
    inc rx741_pos
    gt rx741_pos, rx741_eos, rx741_fail1761
    repr_bind_attr_int rx741_cur, rx741_curclass, "$!from", rx741_pos
  rxscan742_scan1766:
    nqp_rxmark rx741_bstack, rxscan742_loop1765, rx741_pos, 0
  rxscan742_done1767:
    ge rx741_pos, rx741_eos, rx741_fail1761
    substr $S11, rx741_tgt, rx741_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx741_fail1761
    inc rx741_pos
    rx741_cur."!cursor_pass"(rx741_pos, "twigil", 'backtrack'=>1)
    .return (rx741_cur)
  rx741_restart1760:
    repr_get_attr_obj rx741_cstack, rx741_cur, rx741_curclass, "$!cstack"
  rx741_fail1761:
    unless rx741_bstack, rx741_done1759
    pop $I19, rx741_bstack
    if_null rx741_cstack, rx741_cstack_done1764
    unless rx741_cstack, rx741_cstack_done1764
    dec $I19
    set $P11, rx741_cstack[$I19]
  rx741_cstack_done1764:
    pop rx741_rep, rx741_bstack
    pop rx741_pos, rx741_bstack
    pop $I19, rx741_bstack
    lt rx741_pos, -1, rx741_done1759
    lt rx741_pos, 0, rx741_fail1761
    eq $I19, 0, rx741_fail1761
    nqp_islist $I20, rx741_cstack
    unless $I20, rx741_jump1762
    elements $I18, rx741_bstack
    le $I18, 0, rx741_cut1763
    dec $I18
    set $I18, rx741_bstack[$I18]
  rx741_cut1763:
    assign rx741_cstack, $I18
  rx741_jump1762:
    jump $I19
  rx741_done1759:
    rx741_cur."!cursor_fail"()
    .return (rx741_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_106_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1084
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_107_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1085
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx743_start
    .local string rx743_tgt
    .local int rx743_pos
    .local int rx743_off
    .local int rx743_eos
    .local int rx743_rep
    .local pmc rx743_cur
    .local pmc rx743_curclass
    .local pmc rx743_bstack
    .local pmc rx743_cstack
    rx743_start = self."!cursor_start_all"()
    set rx743_cur, rx743_start[0]
    set rx743_tgt, rx743_start[1]
    set rx743_pos, rx743_start[2]
    set rx743_curclass, rx743_start[3]
    set rx743_bstack, rx743_start[4]
    set $I19, rx743_start[5]
    store_lex unicode:"$\x{a2}", rx743_cur
    length rx743_eos, rx743_tgt
    eq $I19, 1, rx743_restart1770
    gt rx743_pos, rx743_eos, rx743_fail1771
    repr_get_attr_int $I11, self, rx743_curclass, "$!from"
    ne $I11, -1, rxscan744_done1777
    goto rxscan744_scan1776
  rxscan744_loop1775:
    inc rx743_pos
    gt rx743_pos, rx743_eos, rx743_fail1771
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!from", rx743_pos
  rxscan744_scan1776:
    nqp_rxmark rx743_bstack, rxscan744_loop1775, rx743_pos, 0
  rxscan744_done1777:
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    store_lex unicode:"$\x{a2}", rx743_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1778
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_117, $P5004
    repr_defined $I5001, fb_tmp_117
    unless $I5001 goto if745_else1779 
    set $P5006, fb_tmp_117["$PACKAGE"]
    set $P5008, $P5006
    goto if745_end1780
  if745_else1779:
    null $P5007
    set $P5008, $P5007
  if745_end1780:
    unless_null $P5008, vivi_7461781
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7461781:
    unless_null $P5008, vivi_7471782
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7471782:
    set $P5003, $P5008
  fallback1778:
    set $P101, $P5003
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    store_lex unicode:"$\x{a2}", rx743_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx743_bstack, rxcap748_fail1784, rx743_pos, 0
    add $I11, rx743_pos, 6
    gt $I11, rx743_eos, rx743_fail1771
    substr $S10, rx743_tgt, rx743_pos, 6
    ne $S10, ucs4:"module", rx743_fail1771
    add rx743_pos, 6
    nqp_rxpeek $I19, rx743_bstack, rxcap748_fail1784
    inc $I19
    set $I11, rx743_bstack[$I19]
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    $P11 = rx743_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx743_pos)
    rx743_cstack = rx743_cur."!cursor_capture"($P11, "sym")
    goto rxcap748_done1783
  rxcap748_fail1784:
    goto rx743_fail1771
  rxcap748_done1783:
    repr_bind_attr_int rx743_cur, rx743_curclass, "$!pos", rx743_pos
    $P11 = rx743_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx743_curclass, "$!pos"
    lt $I11, 0, rx743_fail1771
    nqp_rxmark rx743_bstack, rxsubrule749_pass1785, -1, 0
  rxsubrule749_pass1785:
    rx743_cstack = rx743_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx743_pos, $P11, rx743_curclass, "$!pos"
    rx743_cur."!cursor_pass"(rx743_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx743_cur)
  rx743_restart1770:
    repr_get_attr_obj rx743_cstack, rx743_cur, rx743_curclass, "$!cstack"
  rx743_fail1771:
    unless rx743_bstack, rx743_done1769
    pop $I19, rx743_bstack
    if_null rx743_cstack, rx743_cstack_done1774
    unless rx743_cstack, rx743_cstack_done1774
    dec $I19
    set $P11, rx743_cstack[$I19]
  rx743_cstack_done1774:
    pop rx743_rep, rx743_bstack
    pop rx743_pos, rx743_bstack
    pop $I19, rx743_bstack
    lt rx743_pos, -1, rx743_done1769
    lt rx743_pos, 0, rx743_fail1771
    eq $I19, 0, rx743_fail1771
    nqp_islist $I20, rx743_cstack
    unless $I20, rx743_jump1772
    elements $I18, rx743_bstack
    le $I18, 0, rx743_cut1773
    dec $I18
    set $I18, rx743_bstack[$I18]
  rx743_cut1773:
    assign rx743_cstack, $I18
  rx743_jump1772:
    jump $I19
  rx743_done1769:
    rx743_cur."!cursor_fail"()
    .return (rx743_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_108_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1090
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_118 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx750_start
    .local string rx750_tgt
    .local int rx750_pos
    .local int rx750_off
    .local int rx750_eos
    .local int rx750_rep
    .local pmc rx750_cur
    .local pmc rx750_curclass
    .local pmc rx750_bstack
    .local pmc rx750_cstack
    rx750_start = self."!cursor_start_all"()
    set rx750_cur, rx750_start[0]
    set rx750_tgt, rx750_start[1]
    set rx750_pos, rx750_start[2]
    set rx750_curclass, rx750_start[3]
    set rx750_bstack, rx750_start[4]
    set $I19, rx750_start[5]
    store_lex unicode:"$\x{a2}", rx750_cur
    length rx750_eos, rx750_tgt
    eq $I19, 1, rx750_restart1788
    gt rx750_pos, rx750_eos, rx750_fail1789
    repr_get_attr_int $I11, self, rx750_curclass, "$!from"
    ne $I11, -1, rxscan751_done1795
    goto rxscan751_scan1794
  rxscan751_loop1793:
    inc rx750_pos
    gt rx750_pos, rx750_eos, rx750_fail1789
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!from", rx750_pos
  rxscan751_scan1794:
    nqp_rxmark rx750_bstack, rxscan751_loop1793, rx750_pos, 0
  rxscan751_done1795:
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    store_lex unicode:"$\x{a2}", rx750_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1796
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_118, $P5004
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if752_else1797 
    set $P5006, fb_tmp_118["$PACKAGE"]
    set $P5008, $P5006
    goto if752_end1798
  if752_else1797:
    null $P5007
    set $P5008, $P5007
  if752_end1798:
    unless_null $P5008, vivi_7531799
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7531799:
    unless_null $P5008, vivi_7541800
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7541800:
    set $P5003, $P5008
  fallback1796:
    set $P101, $P5003
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    store_lex unicode:"$\x{a2}", rx750_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx750_bstack, rxcap755_fail1802, rx750_pos, 0
    add $I11, rx750_pos, 7
    gt $I11, rx750_eos, rx750_fail1789
    substr $S10, rx750_tgt, rx750_pos, 7
    ne $S10, ucs4:"knowhow", rx750_fail1789
    add rx750_pos, 7
    nqp_rxpeek $I19, rx750_bstack, rxcap755_fail1802
    inc $I19
    set $I11, rx750_bstack[$I19]
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    $P11 = rx750_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx750_pos)
    rx750_cstack = rx750_cur."!cursor_capture"($P11, "sym")
    goto rxcap755_done1801
  rxcap755_fail1802:
    goto rx750_fail1789
  rxcap755_done1801:
    repr_bind_attr_int rx750_cur, rx750_curclass, "$!pos", rx750_pos
    $P11 = rx750_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx750_curclass, "$!pos"
    lt $I11, 0, rx750_fail1789
    nqp_rxmark rx750_bstack, rxsubrule756_pass1803, -1, 0
  rxsubrule756_pass1803:
    rx750_cstack = rx750_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx750_pos, $P11, rx750_curclass, "$!pos"
    rx750_cur."!cursor_pass"(rx750_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx750_cur)
  rx750_restart1788:
    repr_get_attr_obj rx750_cstack, rx750_cur, rx750_curclass, "$!cstack"
  rx750_fail1789:
    unless rx750_bstack, rx750_done1787
    pop $I19, rx750_bstack
    if_null rx750_cstack, rx750_cstack_done1792
    unless rx750_cstack, rx750_cstack_done1792
    dec $I19
    set $P11, rx750_cstack[$I19]
  rx750_cstack_done1792:
    pop rx750_rep, rx750_bstack
    pop rx750_pos, rx750_bstack
    pop $I19, rx750_bstack
    lt rx750_pos, -1, rx750_done1787
    lt rx750_pos, 0, rx750_fail1789
    eq $I19, 0, rx750_fail1789
    nqp_islist $I20, rx750_cstack
    unless $I20, rx750_jump1790
    elements $I18, rx750_bstack
    le $I18, 0, rx750_cut1791
    dec $I18
    set $I18, rx750_bstack[$I18]
  rx750_cut1791:
    assign rx750_cstack, $I18
  rx750_jump1790:
    jump $I19
  rx750_done1787:
    rx750_cur."!cursor_fail"()
    .return (rx750_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_109_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1095
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_119 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx757_start
    .local string rx757_tgt
    .local int rx757_pos
    .local int rx757_off
    .local int rx757_eos
    .local int rx757_rep
    .local pmc rx757_cur
    .local pmc rx757_curclass
    .local pmc rx757_bstack
    .local pmc rx757_cstack
    rx757_start = self."!cursor_start_all"()
    set rx757_cur, rx757_start[0]
    set rx757_tgt, rx757_start[1]
    set rx757_pos, rx757_start[2]
    set rx757_curclass, rx757_start[3]
    set rx757_bstack, rx757_start[4]
    set $I19, rx757_start[5]
    store_lex unicode:"$\x{a2}", rx757_cur
    length rx757_eos, rx757_tgt
    eq $I19, 1, rx757_restart1806
    gt rx757_pos, rx757_eos, rx757_fail1807
    repr_get_attr_int $I11, self, rx757_curclass, "$!from"
    ne $I11, -1, rxscan758_done1813
    goto rxscan758_scan1812
  rxscan758_loop1811:
    inc rx757_pos
    gt rx757_pos, rx757_eos, rx757_fail1807
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!from", rx757_pos
  rxscan758_scan1812:
    nqp_rxmark rx757_bstack, rxscan758_loop1811, rx757_pos, 0
  rxscan758_done1813:
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    store_lex unicode:"$\x{a2}", rx757_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1814
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_119, $P5004
    repr_defined $I5001, fb_tmp_119
    unless $I5001 goto if759_else1815 
    set $P5006, fb_tmp_119["$PACKAGE"]
    set $P5008, $P5006
    goto if759_end1816
  if759_else1815:
    null $P5007
    set $P5008, $P5007
  if759_end1816:
    unless_null $P5008, vivi_7601817
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7601817:
    unless_null $P5008, vivi_7611818
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7611818:
    set $P5003, $P5008
  fallback1814:
    set $P101, $P5003
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    store_lex unicode:"$\x{a2}", rx757_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx757_bstack, rxcap762_fail1820, rx757_pos, 0
    add $I11, rx757_pos, 5
    gt $I11, rx757_eos, rx757_fail1807
    substr $S10, rx757_tgt, rx757_pos, 5
    ne $S10, ucs4:"class", rx757_fail1807
    add rx757_pos, 5
    nqp_rxpeek $I19, rx757_bstack, rxcap762_fail1820
    inc $I19
    set $I11, rx757_bstack[$I19]
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    $P11 = rx757_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx757_pos)
    rx757_cstack = rx757_cur."!cursor_capture"($P11, "sym")
    goto rxcap762_done1819
  rxcap762_fail1820:
    goto rx757_fail1807
  rxcap762_done1819:
    repr_bind_attr_int rx757_cur, rx757_curclass, "$!pos", rx757_pos
    $P11 = rx757_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx757_curclass, "$!pos"
    lt $I11, 0, rx757_fail1807
    nqp_rxmark rx757_bstack, rxsubrule763_pass1821, -1, 0
  rxsubrule763_pass1821:
    rx757_cstack = rx757_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx757_pos, $P11, rx757_curclass, "$!pos"
    rx757_cur."!cursor_pass"(rx757_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx757_cur)
  rx757_restart1806:
    repr_get_attr_obj rx757_cstack, rx757_cur, rx757_curclass, "$!cstack"
  rx757_fail1807:
    unless rx757_bstack, rx757_done1805
    pop $I19, rx757_bstack
    if_null rx757_cstack, rx757_cstack_done1810
    unless rx757_cstack, rx757_cstack_done1810
    dec $I19
    set $P11, rx757_cstack[$I19]
  rx757_cstack_done1810:
    pop rx757_rep, rx757_bstack
    pop rx757_pos, rx757_bstack
    pop $I19, rx757_bstack
    lt rx757_pos, -1, rx757_done1805
    lt rx757_pos, 0, rx757_fail1807
    eq $I19, 0, rx757_fail1807
    nqp_islist $I20, rx757_cstack
    unless $I20, rx757_jump1808
    elements $I18, rx757_bstack
    le $I18, 0, rx757_cut1809
    dec $I18
    set $I18, rx757_bstack[$I18]
  rx757_cut1809:
    assign rx757_cstack, $I18
  rx757_jump1808:
    jump $I19
  rx757_done1805:
    rx757_cur."!cursor_fail"()
    .return (rx757_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_110_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1100
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_120 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx764_start
    .local string rx764_tgt
    .local int rx764_pos
    .local int rx764_off
    .local int rx764_eos
    .local int rx764_rep
    .local pmc rx764_cur
    .local pmc rx764_curclass
    .local pmc rx764_bstack
    .local pmc rx764_cstack
    rx764_start = self."!cursor_start_all"()
    set rx764_cur, rx764_start[0]
    set rx764_tgt, rx764_start[1]
    set rx764_pos, rx764_start[2]
    set rx764_curclass, rx764_start[3]
    set rx764_bstack, rx764_start[4]
    set $I19, rx764_start[5]
    store_lex unicode:"$\x{a2}", rx764_cur
    length rx764_eos, rx764_tgt
    eq $I19, 1, rx764_restart1824
    gt rx764_pos, rx764_eos, rx764_fail1825
    repr_get_attr_int $I11, self, rx764_curclass, "$!from"
    ne $I11, -1, rxscan765_done1831
    goto rxscan765_scan1830
  rxscan765_loop1829:
    inc rx764_pos
    gt rx764_pos, rx764_eos, rx764_fail1825
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!from", rx764_pos
  rxscan765_scan1830:
    nqp_rxmark rx764_bstack, rxscan765_loop1829, rx764_pos, 0
  rxscan765_done1831:
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    store_lex unicode:"$\x{a2}", rx764_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1832
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_120, $P5004
    repr_defined $I5001, fb_tmp_120
    unless $I5001 goto if766_else1833 
    set $P5006, fb_tmp_120["$PACKAGE"]
    set $P5008, $P5006
    goto if766_end1834
  if766_else1833:
    null $P5007
    set $P5008, $P5007
  if766_end1834:
    unless_null $P5008, vivi_7671835
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7671835:
    unless_null $P5008, vivi_7681836
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7681836:
    set $P5003, $P5008
  fallback1832:
    set $P101, $P5003
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    store_lex unicode:"$\x{a2}", rx764_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx764_bstack, rxcap769_fail1838, rx764_pos, 0
    add $I11, rx764_pos, 7
    gt $I11, rx764_eos, rx764_fail1825
    substr $S10, rx764_tgt, rx764_pos, 7
    ne $S10, ucs4:"grammar", rx764_fail1825
    add rx764_pos, 7
    nqp_rxpeek $I19, rx764_bstack, rxcap769_fail1838
    inc $I19
    set $I11, rx764_bstack[$I19]
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    $P11 = rx764_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx764_pos)
    rx764_cstack = rx764_cur."!cursor_capture"($P11, "sym")
    goto rxcap769_done1837
  rxcap769_fail1838:
    goto rx764_fail1825
  rxcap769_done1837:
    repr_bind_attr_int rx764_cur, rx764_curclass, "$!pos", rx764_pos
    $P11 = rx764_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx764_curclass, "$!pos"
    lt $I11, 0, rx764_fail1825
    nqp_rxmark rx764_bstack, rxsubrule770_pass1839, -1, 0
  rxsubrule770_pass1839:
    rx764_cstack = rx764_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx764_pos, $P11, rx764_curclass, "$!pos"
    rx764_cur."!cursor_pass"(rx764_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx764_cur)
  rx764_restart1824:
    repr_get_attr_obj rx764_cstack, rx764_cur, rx764_curclass, "$!cstack"
  rx764_fail1825:
    unless rx764_bstack, rx764_done1823
    pop $I19, rx764_bstack
    if_null rx764_cstack, rx764_cstack_done1828
    unless rx764_cstack, rx764_cstack_done1828
    dec $I19
    set $P11, rx764_cstack[$I19]
  rx764_cstack_done1828:
    pop rx764_rep, rx764_bstack
    pop rx764_pos, rx764_bstack
    pop $I19, rx764_bstack
    lt rx764_pos, -1, rx764_done1823
    lt rx764_pos, 0, rx764_fail1825
    eq $I19, 0, rx764_fail1825
    nqp_islist $I20, rx764_cstack
    unless $I20, rx764_jump1826
    elements $I18, rx764_bstack
    le $I18, 0, rx764_cut1827
    dec $I18
    set $I18, rx764_bstack[$I18]
  rx764_cut1827:
    assign rx764_cstack, $I18
  rx764_jump1826:
    jump $I19
  rx764_done1823:
    rx764_cur."!cursor_fail"()
    .return (rx764_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_111_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1105
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_121 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx771_start
    .local string rx771_tgt
    .local int rx771_pos
    .local int rx771_off
    .local int rx771_eos
    .local int rx771_rep
    .local pmc rx771_cur
    .local pmc rx771_curclass
    .local pmc rx771_bstack
    .local pmc rx771_cstack
    rx771_start = self."!cursor_start_all"()
    set rx771_cur, rx771_start[0]
    set rx771_tgt, rx771_start[1]
    set rx771_pos, rx771_start[2]
    set rx771_curclass, rx771_start[3]
    set rx771_bstack, rx771_start[4]
    set $I19, rx771_start[5]
    store_lex unicode:"$\x{a2}", rx771_cur
    length rx771_eos, rx771_tgt
    eq $I19, 1, rx771_restart1842
    gt rx771_pos, rx771_eos, rx771_fail1843
    repr_get_attr_int $I11, self, rx771_curclass, "$!from"
    ne $I11, -1, rxscan772_done1849
    goto rxscan772_scan1848
  rxscan772_loop1847:
    inc rx771_pos
    gt rx771_pos, rx771_eos, rx771_fail1843
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!from", rx771_pos
  rxscan772_scan1848:
    nqp_rxmark rx771_bstack, rxscan772_loop1847, rx771_pos, 0
  rxscan772_done1849:
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    store_lex unicode:"$\x{a2}", rx771_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1850
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_121, $P5004
    repr_defined $I5001, fb_tmp_121
    unless $I5001 goto if773_else1851 
    set $P5006, fb_tmp_121["$PACKAGE"]
    set $P5008, $P5006
    goto if773_end1852
  if773_else1851:
    null $P5007
    set $P5008, $P5007
  if773_end1852:
    unless_null $P5008, vivi_7741853
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7741853:
    unless_null $P5008, vivi_7751854
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7751854:
    set $P5003, $P5008
  fallback1850:
    set $P101, $P5003
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    store_lex unicode:"$\x{a2}", rx771_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx771_bstack, rxcap776_fail1856, rx771_pos, 0
    add $I11, rx771_pos, 4
    gt $I11, rx771_eos, rx771_fail1843
    substr $S10, rx771_tgt, rx771_pos, 4
    ne $S10, ucs4:"role", rx771_fail1843
    add rx771_pos, 4
    nqp_rxpeek $I19, rx771_bstack, rxcap776_fail1856
    inc $I19
    set $I11, rx771_bstack[$I19]
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx771_pos)
    rx771_cstack = rx771_cur."!cursor_capture"($P11, "sym")
    goto rxcap776_done1855
  rxcap776_fail1856:
    goto rx771_fail1843
  rxcap776_done1855:
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx771_curclass, "$!pos"
    lt $I11, 0, rx771_fail1843
    nqp_rxmark rx771_bstack, rxsubrule777_pass1857, -1, 0
  rxsubrule777_pass1857:
    rx771_cstack = rx771_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx771_pos, $P11, rx771_curclass, "$!pos"
    rx771_cur."!cursor_pass"(rx771_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx771_cur)
  rx771_restart1842:
    repr_get_attr_obj rx771_cstack, rx771_cur, rx771_curclass, "$!cstack"
  rx771_fail1843:
    unless rx771_bstack, rx771_done1841
    pop $I19, rx771_bstack
    if_null rx771_cstack, rx771_cstack_done1846
    unless rx771_cstack, rx771_cstack_done1846
    dec $I19
    set $P11, rx771_cstack[$I19]
  rx771_cstack_done1846:
    pop rx771_rep, rx771_bstack
    pop rx771_pos, rx771_bstack
    pop $I19, rx771_bstack
    lt rx771_pos, -1, rx771_done1841
    lt rx771_pos, 0, rx771_fail1843
    eq $I19, 0, rx771_fail1843
    nqp_islist $I20, rx771_cstack
    unless $I20, rx771_jump1844
    elements $I18, rx771_bstack
    le $I18, 0, rx771_cut1845
    dec $I18
    set $I18, rx771_bstack[$I18]
  rx771_cut1845:
    assign rx771_cstack, $I18
  rx771_jump1844:
    jump $I19
  rx771_done1841:
    rx771_cur."!cursor_fail"()
    .return (rx771_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_112_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1110
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_122 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx778_start
    .local string rx778_tgt
    .local int rx778_pos
    .local int rx778_off
    .local int rx778_eos
    .local int rx778_rep
    .local pmc rx778_cur
    .local pmc rx778_curclass
    .local pmc rx778_bstack
    .local pmc rx778_cstack
    rx778_start = self."!cursor_start_all"()
    set rx778_cur, rx778_start[0]
    set rx778_tgt, rx778_start[1]
    set rx778_pos, rx778_start[2]
    set rx778_curclass, rx778_start[3]
    set rx778_bstack, rx778_start[4]
    set $I19, rx778_start[5]
    store_lex unicode:"$\x{a2}", rx778_cur
    length rx778_eos, rx778_tgt
    eq $I19, 1, rx778_restart1860
    gt rx778_pos, rx778_eos, rx778_fail1861
    repr_get_attr_int $I11, self, rx778_curclass, "$!from"
    ne $I11, -1, rxscan779_done1867
    goto rxscan779_scan1866
  rxscan779_loop1865:
    inc rx778_pos
    gt rx778_pos, rx778_eos, rx778_fail1861
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!from", rx778_pos
  rxscan779_scan1866:
    nqp_rxmark rx778_bstack, rxscan779_loop1865, rx778_pos, 0
  rxscan779_done1867:
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    store_lex unicode:"$\x{a2}", rx778_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1868
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_122, $P5004
    repr_defined $I5001, fb_tmp_122
    unless $I5001 goto if780_else1869 
    set $P5006, fb_tmp_122["$PACKAGE"]
    set $P5008, $P5006
    goto if780_end1870
  if780_else1869:
    null $P5007
    set $P5008, $P5007
  if780_end1870:
    unless_null $P5008, vivi_7811871
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7811871:
    unless_null $P5008, vivi_7821872
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7821872:
    set $P5003, $P5008
  fallback1868:
    set $P101, $P5003
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    store_lex unicode:"$\x{a2}", rx778_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx778_bstack, rxcap783_fail1874, rx778_pos, 0
    add $I11, rx778_pos, 6
    gt $I11, rx778_eos, rx778_fail1861
    substr $S10, rx778_tgt, rx778_pos, 6
    ne $S10, ucs4:"native", rx778_fail1861
    add rx778_pos, 6
    nqp_rxpeek $I19, rx778_bstack, rxcap783_fail1874
    inc $I19
    set $I11, rx778_bstack[$I19]
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    $P11 = rx778_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx778_pos)
    rx778_cstack = rx778_cur."!cursor_capture"($P11, "sym")
    goto rxcap783_done1873
  rxcap783_fail1874:
    goto rx778_fail1861
  rxcap783_done1873:
    repr_bind_attr_int rx778_cur, rx778_curclass, "$!pos", rx778_pos
    $P11 = rx778_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx778_curclass, "$!pos"
    lt $I11, 0, rx778_fail1861
    nqp_rxmark rx778_bstack, rxsubrule784_pass1875, -1, 0
  rxsubrule784_pass1875:
    rx778_cstack = rx778_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx778_pos, $P11, rx778_curclass, "$!pos"
    rx778_cur."!cursor_pass"(rx778_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx778_cur)
  rx778_restart1860:
    repr_get_attr_obj rx778_cstack, rx778_cur, rx778_curclass, "$!cstack"
  rx778_fail1861:
    unless rx778_bstack, rx778_done1859
    pop $I19, rx778_bstack
    if_null rx778_cstack, rx778_cstack_done1864
    unless rx778_cstack, rx778_cstack_done1864
    dec $I19
    set $P11, rx778_cstack[$I19]
  rx778_cstack_done1864:
    pop rx778_rep, rx778_bstack
    pop rx778_pos, rx778_bstack
    pop $I19, rx778_bstack
    lt rx778_pos, -1, rx778_done1859
    lt rx778_pos, 0, rx778_fail1861
    eq $I19, 0, rx778_fail1861
    nqp_islist $I20, rx778_cstack
    unless $I20, rx778_jump1862
    elements $I18, rx778_bstack
    le $I18, 0, rx778_cut1863
    dec $I18
    set $I18, rx778_bstack[$I18]
  rx778_cut1863:
    assign rx778_cstack, $I18
  rx778_jump1862:
    jump $I19
  rx778_done1859:
    rx778_cur."!cursor_fail"()
    .return (rx778_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_113_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1115
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_123 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx785_start
    .local string rx785_tgt
    .local int rx785_pos
    .local int rx785_off
    .local int rx785_eos
    .local int rx785_rep
    .local pmc rx785_cur
    .local pmc rx785_curclass
    .local pmc rx785_bstack
    .local pmc rx785_cstack
    rx785_start = self."!cursor_start_all"()
    set rx785_cur, rx785_start[0]
    set rx785_tgt, rx785_start[1]
    set rx785_pos, rx785_start[2]
    set rx785_curclass, rx785_start[3]
    set rx785_bstack, rx785_start[4]
    set $I19, rx785_start[5]
    store_lex unicode:"$\x{a2}", rx785_cur
    length rx785_eos, rx785_tgt
    eq $I19, 1, rx785_restart1878
    gt rx785_pos, rx785_eos, rx785_fail1879
    repr_get_attr_int $I11, self, rx785_curclass, "$!from"
    ne $I11, -1, rxscan786_done1885
    goto rxscan786_scan1884
  rxscan786_loop1883:
    inc rx785_pos
    gt rx785_pos, rx785_eos, rx785_fail1879
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!from", rx785_pos
  rxscan786_scan1884:
    nqp_rxmark rx785_bstack, rxscan786_loop1883, rx785_pos, 0
  rxscan786_done1885:
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    store_lex unicode:"$\x{a2}", rx785_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1886
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_123, $P5004
    repr_defined $I5001, fb_tmp_123
    unless $I5001 goto if787_else1887 
    set $P5006, fb_tmp_123["$PACKAGE"]
    set $P5008, $P5006
    goto if787_end1888
  if787_else1887:
    null $P5007
    set $P5008, $P5007
  if787_end1888:
    unless_null $P5008, vivi_7881889
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_7881889:
    unless_null $P5008, vivi_7891890
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7891890:
    set $P5003, $P5008
  fallback1886:
    set $P101, $P5003
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    store_lex unicode:"$\x{a2}", rx785_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx785_bstack, rxcap790_fail1892, rx785_pos, 0
    add $I11, rx785_pos, 4
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 4
    ne $S10, ucs4:"stub", rx785_fail1879
    add rx785_pos, 4
    nqp_rxpeek $I19, rx785_bstack, rxcap790_fail1892
    inc $I19
    set $I11, rx785_bstack[$I19]
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx785_pos)
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "sym")
    goto rxcap790_done1891
  rxcap790_fail1892:
    goto rx785_fail1879
  rxcap790_done1891:
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule791_pass1893
  rxsubrule791_back1894:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule791_pass1893:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule791_back1894
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."name"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule792_pass1895
  rxsubrule792_back1896:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule792_pass1895:
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule792_back1896
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule793_pass1897
  rxsubrule793_back1898:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule793_pass1897:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule793_back1898
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 9
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 9
    ne $S10, ucs4:"metaclass", rx785_fail1879
    add rx785_pos, 9
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule794_pass1899
  rxsubrule794_back1900:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule794_pass1899:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule794_back1900
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."name"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule795_pass1901
  rxsubrule795_back1902:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule795_pass1901:
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "metaclass")
    set_addr $I11, rxsubrule795_back1902
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule796_pass1903
  rxsubrule796_back1904:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule796_pass1903:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule796_back1904
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 1
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 1
    ne $S10, ucs4:"{", rx785_fail1879
    add rx785_pos, 1
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule797_pass1905
  rxsubrule797_back1906:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule797_pass1905:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule797_back1906
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 3
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 3
    ne $S10, ucs4:"...", rx785_fail1879
    add rx785_pos, 3
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule798_pass1907
  rxsubrule798_back1908:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule798_pass1907:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule798_back1908
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    add $I11, rx785_pos, 1
    gt $I11, rx785_eos, rx785_fail1879
    substr $S10, rx785_tgt, rx785_pos, 1
    ne $S10, ucs4:"}", rx785_fail1879
    add rx785_pos, 1
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."ws"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
    goto rxsubrule799_pass1909
  rxsubrule799_back1910:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1879
  rxsubrule799_pass1909:
    rx785_cstack = rx785_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule799_back1910
    push rx785_bstack, $I11
    push rx785_bstack, 0
    push rx785_bstack, rx785_pos
    elements $I11, rx785_cstack
    push rx785_bstack, $I11
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    rx785_cur."!cursor_pass"(rx785_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx785_cur)
  rx785_restart1878:
    repr_get_attr_obj rx785_cstack, rx785_cur, rx785_curclass, "$!cstack"
  rx785_fail1879:
    unless rx785_bstack, rx785_done1877
    pop $I19, rx785_bstack
    if_null rx785_cstack, rx785_cstack_done1882
    unless rx785_cstack, rx785_cstack_done1882
    dec $I19
    set $P11, rx785_cstack[$I19]
  rx785_cstack_done1882:
    pop rx785_rep, rx785_bstack
    pop rx785_pos, rx785_bstack
    pop $I19, rx785_bstack
    lt rx785_pos, -1, rx785_done1877
    lt rx785_pos, 0, rx785_fail1879
    eq $I19, 0, rx785_fail1879
    nqp_islist $I20, rx785_cstack
    unless $I20, rx785_jump1880
    elements $I18, rx785_bstack
    le $I18, 0, rx785_cut1881
    dec $I18
    set $I18, rx785_bstack[$I18]
  rx785_cut1881:
    assign rx785_cstack, $I18
  rx785_jump1880:
    jump $I19
  rx785_done1877:
    rx785_cur."!cursor_fail"()
    .return (rx785_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_114_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1123
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_425_1382959278.72036' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_426_1382959278.72036' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx800_start
    .local string rx800_tgt
    .local int rx800_pos
    .local int rx800_off
    .local int rx800_eos
    .local int rx800_rep
    .local pmc rx800_cur
    .local pmc rx800_curclass
    .local pmc rx800_bstack
    .local pmc rx800_cstack
    rx800_start = self."!cursor_start_all"()
    set rx800_cur, rx800_start[0]
    set rx800_tgt, rx800_start[1]
    set rx800_pos, rx800_start[2]
    set rx800_curclass, rx800_start[3]
    set rx800_bstack, rx800_start[4]
    set $I19, rx800_start[5]
    store_lex unicode:"$\x{a2}", rx800_cur
    length rx800_eos, rx800_tgt
    eq $I19, 1, rx800_restart1913
    gt rx800_pos, rx800_eos, rx800_fail1914
    repr_get_attr_int $I11, self, rx800_curclass, "$!from"
    ne $I11, -1, rxscan801_done1920
    goto rxscan801_scan1919
  rxscan801_loop1918:
    inc rx800_pos
    gt rx800_pos, rx800_eos, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!from", rx800_pos
  rxscan801_scan1919:
    nqp_rxmark rx800_bstack, rxscan801_loop1918, rx800_pos, 0
  rxscan801_done1920:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
    unless_null $P101, fallback1921
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_124, $P5003
    repr_defined $I5001, fb_tmp_124
    unless $I5001 goto if802_else1922 
    set $P5005, fb_tmp_124["$PACKAGE"]
    set $P5007, $P5005
    goto if802_end1923
  if802_else1922:
    null $P5006
    set $P5007, $P5006
  if802_end1923:
    unless_null $P5007, vivi_8031924
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_8031924:
    unless_null $P5007, vivi_8041925
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_8041925:
    set $P101, $P5007
  fallback1921:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
.annotate 'line', 1125
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1926
    nqp_get_sc_object $P5012, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5011, $P5012
    set fb_tmp_125, $P5011
    repr_defined $I5002, fb_tmp_125
    unless $I5002 goto if805_else1927 
    set $P5013, fb_tmp_125["$W"]
    set $P5015, $P5013
    goto if805_end1928
  if805_else1927:
    null $P5014
    set $P5015, $P5014
  if805_end1928:
    unless_null $P5015, vivi_8061929
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_8061929:
    unless_null $P5015, vivi_8071930
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_8071930:
    set $P5010, $P5015
  fallback1926:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    add $I11, rx800_pos, 0
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 0
    ne $S10, ucs4:"", rx800_fail1914
    add rx800_pos, 0
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule808_pass1931
  rxsubrule808_back1932:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule808_pass1931:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule808_back1932
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."name"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule809_pass1933
  rxsubrule809_back1934:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule809_pass1933:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule809_back1934
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule810_pass1935
  rxsubrule810_back1936:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule810_pass1935:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule810_back1936
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule811_pass1937
  rxsubrule811_back1938:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule811_pass1937:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule811_back1938
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule812_pass1939
  rxsubrule812_back1940:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule812_pass1939:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule812_back1940
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg813_done1942, rx800_pos, 0
  rxquantg813_loop1941:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_425_1382959278.72036' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule817_pass1948
  rxsubrule817_back1949:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule817_pass1948:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule817_back1949
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:"[", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule818_pass1950
  rxsubrule818_back1951:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule818_pass1950:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule818_back1951
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule819_pass1952
  rxsubrule819_back1953:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule819_pass1952:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "role_params")
    set_addr $I11, rxsubrule819_back1953
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule820_pass1954
  rxsubrule820_back1955:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule820_pass1954:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule820_back1955
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt821_01957:
    nqp_rxmark rx800_bstack, alt821_11960, rx800_pos, 0
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:"]", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule822_pass1958
  rxsubrule822_back1959:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule822_pass1958:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule822_back1959
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt821_end1956
  alt821_11960:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."FAILGOAL"("']' ")
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule823_pass1961
  rxsubrule823_back1962:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule823_pass1961:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule823_back1962
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt821_end1956:
  rxquantg813_done1942:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule824_pass1963
  rxsubrule824_back1964:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule824_pass1963:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule824_back1964
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg825_done1966, rx800_pos, 0
  rxquantg825_loop1965:
    add $I11, rx800_pos, 2
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 2
    ne $S10, ucs4:"is", rx800_fail1914
    add rx800_pos, 2
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule826_pass1967
  rxsubrule826_back1968:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule826_pass1967:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule826_back1968
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    add $I11, rx800_pos, 5
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 5
    ne $S10, ucs4:"repr(", rx800_fail1914
    add rx800_pos, 5
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule827_pass1969
  rxsubrule827_back1970:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule827_pass1969:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule827_back1970
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule828_pass1971
  rxsubrule828_back1972:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule828_pass1971:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "repr")
    set_addr $I11, rxsubrule828_back1972
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule829_pass1973
  rxsubrule829_back1974:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule829_pass1973:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule829_back1974
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:")", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule830_pass1975
  rxsubrule830_back1976:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule830_pass1975:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule830_back1976
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  rxquantg825_done1966:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule831_pass1977
  rxsubrule831_back1978:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule831_pass1977:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule831_back1978
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    store_lex unicode:"$\x{a2}", rx800_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_426_1382959278.72036' 
    capture_lex $P5023
    $P5024 = $P5023()
    nqp_rxmark rx800_bstack, rxquantg949_done2180, rx800_pos, 0
  rxquantg949_loop2179:
    nqp_rxmark rx800_bstack, rxcap950_fail2182, rx800_pos, 0
    add $I11, rx800_pos, 9
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 9
    ne $S10, ucs4:"is export", rx800_fail1914
    add rx800_pos, 9
    nqp_rxpeek $I19, rx800_bstack, rxcap950_fail2182
    inc $I19
    set $I11, rx800_bstack[$I19]
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx800_pos)
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "export")
    goto rxcap950_done2181
  rxcap950_fail2182:
    goto rx800_fail1914
  rxcap950_done2181:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule951_pass2183
  rxsubrule951_back2184:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule951_pass2183:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule951_back2184
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  rxquantg949_done2180:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule952_pass2185
  rxsubrule952_back2186:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule952_pass2185:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule952_back2186
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg953_done2188, rx800_pos, 0
  rxquantg953_loop2187:
    add $I11, rx800_pos, 2
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 2
    ne $S10, ucs4:"is", rx800_fail1914
    add rx800_pos, 2
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule954_pass2189
  rxsubrule954_back2190:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule954_pass2189:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule954_back2190
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."name"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule955_pass2191
  rxsubrule955_back2192:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule955_pass2191:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "parent")
    set_addr $I11, rxsubrule955_back2192
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule956_pass2193
  rxsubrule956_back2194:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule956_pass2193:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule956_back2194
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  rxquantg953_done2188:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule957_pass2195
  rxsubrule957_back2196:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule957_pass2195:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule957_back2196
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg958_done2198, rx800_pos, 0
  rxquantg958_loop2197:
    add $I11, rx800_pos, 4
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 4
    ne $S10, ucs4:"does", rx800_fail1914
    add rx800_pos, 4
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule959_pass2199
  rxsubrule959_back2200:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule959_pass2199:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule959_back2200
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."name"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule960_pass2201
  rxsubrule960_back2202:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule960_pass2201:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "role")
    set_addr $I11, rxsubrule960_back2202
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule961_pass2203
  rxsubrule961_back2204:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule961_pass2203:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule961_back2204
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    nqp_rxmark rx800_bstack, rxquantg958_done2198, rx800_pos, rx800_rep
    goto rxquantg958_loop2197
  rxquantg958_done2198:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule962_pass2205
  rxsubrule962_back2206:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule962_pass2205:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule962_back2206
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt963_02208:
    nqp_rxmark rx800_bstack, alt963_12227, rx800_pos, 0
    add $I11, rx800_pos, 1
    gt $I11, rx800_eos, rx800_fail1914
    substr $S10, rx800_tgt, rx800_pos, 1
    ne $S10, ucs4:";", rx800_fail1914
    add rx800_pos, 1
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule964_pass2209
  rxsubrule964_back2210:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule964_pass2209:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule964_back2210
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule965_pass2211
  rxsubrule965_back2212:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule965_pass2211:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "statementlist")
    set_addr $I11, rxsubrule965_back2212
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule966_pass2213
  rxsubrule966_back2214:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule966_pass2213:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule966_back2214
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt967_02216:
    nqp_rxmark rx800_bstack, alt967_12220, rx800_pos, 0
    lt rx800_pos, rx800_eos, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule969_pass2218
  rxsubrule969_back2219:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule969_pass2218:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule969_back2219
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt967_end2215
  alt967_12220:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule970_pass2221
  rxsubrule970_back2222:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule970_pass2221:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule970_back2222
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule971_pass2223
  rxsubrule971_back2224:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule971_pass2223:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule971_back2224
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt967_end2215:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule972_pass2225
  rxsubrule972_back2226:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule972_pass2225:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule972_back2226
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt963_end2207
  alt963_12227:
    nqp_rxmark rx800_bstack, alt963_22234, rx800_pos, 0
    ge rx800_pos, rx800_eos, rx800_fail1914
    substr $S11, rx800_tgt, rx800_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx800_fail1914
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule973_pass2228
  rxsubrule973_back2229:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule973_pass2228:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule973_back2229
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule974_pass2230
  rxsubrule974_back2231:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule974_pass2230:
    rx800_cstack = rx800_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule974_back2231
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule975_pass2232
  rxsubrule975_back2233:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule975_pass2232:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule975_back2233
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    goto alt963_end2207
  alt963_22234:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule976_pass2235
  rxsubrule976_back2236:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule976_pass2235:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule976_back2236
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule977_pass2237
  rxsubrule977_back2238:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule977_pass2237:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule977_back2238
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
  alt963_end2207:
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule978_pass2239
  rxsubrule978_back2240:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule978_pass2239:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule978_back2240
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!pos", rx800_pos
    $P11 = rx800_cur."ws"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
    goto rxsubrule979_pass2241
  rxsubrule979_back2242:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx800_curclass, "$!pos"
    lt $I11, 0, rx800_fail1914
  rxsubrule979_pass2241:
    rx800_cstack = rx800_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule979_back2242
    push rx800_bstack, $I11
    push rx800_bstack, 0
    push rx800_bstack, rx800_pos
    elements $I11, rx800_cstack
    push rx800_bstack, $I11
    repr_get_attr_int rx800_pos, $P11, rx800_curclass, "$!pos"
    rx800_cur."!cursor_pass"(rx800_pos, "package_def", 'backtrack'=>1)
    .return (rx800_cur)
  rx800_restart1913:
    repr_get_attr_obj rx800_cstack, rx800_cur, rx800_curclass, "$!cstack"
  rx800_fail1914:
    unless rx800_bstack, rx800_done1912
    pop $I19, rx800_bstack
    if_null rx800_cstack, rx800_cstack_done1917
    unless rx800_cstack, rx800_cstack_done1917
    dec $I19
    set $P11, rx800_cstack[$I19]
  rx800_cstack_done1917:
    pop rx800_rep, rx800_bstack
    pop rx800_pos, rx800_bstack
    pop $I19, rx800_bstack
    lt rx800_pos, -1, rx800_done1912
    lt rx800_pos, 0, rx800_fail1914
    eq $I19, 0, rx800_fail1914
    nqp_islist $I20, rx800_cstack
    unless $I20, rx800_jump1915
    elements $I18, rx800_bstack
    le $I18, 0, rx800_cut1916
    dec $I18
    set $I18, rx800_bstack[$I18]
  rx800_cut1916:
    assign rx800_cstack, $I18
  rx800_jump1915:
    jump $I19
  rx800_done1912:
    rx800_cur."!cursor_fail"()
    .return (rx800_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1382959278.72036") :anon :lex :outer("cuid_114_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1130
    .local pmc fb_tmp_126 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1943
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_126, $P5002
    repr_defined $I5002, fb_tmp_126
    unless $I5002 goto if814_else1944 
    set $P5004, fb_tmp_126["$PKGDECL"]
    set $P5006, $P5004
    goto if814_end1945
  if814_else1944:
    null $P5005
    set $P5006, $P5005
  if814_end1945:
    unless_null $P5006, vivi_8151946
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_8151946:
    unless_null $P5006, vivi_8161947
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_8161947:
    set $P5001, $P5006
  fallback1943:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1382959278.72036") :anon :lex :outer("cuid_114_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1133
    .lex "%args", $P101 
    .lex "$how", $P102 
    .lex "$INNER", $P103 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    .local pmc fb_tmp_165 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    .local pmc fb_tmp_168 
    .local pmc fb_tmp_169 
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    find_lex $P5004, "$/"
    unless_null $P5004, fallback1981
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  fallback1981:
    set fb_tmp_127, $P5004
    repr_defined $I5001, fb_tmp_127
    unless $I5001 goto if832_else1979 
    set $P5006, fb_tmp_127["name"]
    set $P5008, $P5006
    goto if832_end1980
  if832_else1979:
    null $P5007
    set $P5008, $P5007
  if832_end1980:
    unless_null $P5008, vivi_8331982
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_8331982:
    set $S5001, $P5008
    box $P5010, $S5001
    set $P101["name"], $P5010
    find_lex $P5011, "$/"
    unless_null $P5011, fallback1987
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  fallback1987:
    set fb_tmp_128, $P5011
    repr_defined $I5002, fb_tmp_128
    unless $I5002 goto if835_else1985 
    set $P5013, fb_tmp_128["repr"]
    set $P5015, $P5013
    goto if835_end1986
  if835_else1985:
    null $P5014
    set $P5015, $P5014
  if835_end1986:
    unless_null $P5015, vivi_8361988
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_8361988:
    unless $P5015 goto if834_end1984 
.annotate 'line', 1138
    find_lex $P5017, "$/"
    unless_null $P5017, fallback1997
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  fallback1997:
    set fb_tmp_132, $P5017
    repr_defined $I5006, fb_tmp_132
    unless $I5006 goto if840_else1995 
    set $P5019, fb_tmp_132["repr"]
    set $P5021, $P5019
    goto if840_end1996
  if840_else1995:
    null $P5020
    set $P5021, $P5020
  if840_end1996:
    unless_null $P5021, vivi_8411998
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_8411998:
    set fb_tmp_131, $P5021
    repr_defined $I5005, fb_tmp_131
    unless $I5005 goto if839_else1993 
    set $P5023, fb_tmp_131["quote_delimited"]
    set $P5025, $P5023
    goto if839_end1994
  if839_else1993:
    null $P5024
    set $P5025, $P5024
  if839_end1994:
    unless_null $P5025, vivi_8421999
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_8421999:
    set fb_tmp_130, $P5025
    repr_defined $I5004, fb_tmp_130
    unless $I5004 goto if838_else1991 
    set $P5027, fb_tmp_130["quote_atom"]
    set $P5029, $P5027
    goto if838_end1992
  if838_else1991:
    null $P5028
    set $P5029, $P5028
  if838_end1992:
    unless_null $P5029, vivi_8432000
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5029, $P5030
  vivi_8432000:
    set fb_tmp_129, $P5029
    repr_defined $I5003, fb_tmp_129
    unless $I5003 goto if837_else1989 
    set $P5031, fb_tmp_129[0]
    set $P5033, $P5031
    goto if837_end1990
  if837_else1989:
    null $P5032
    set $P5033, $P5032
  if837_end1990:
    unless_null $P5033, vivi_8442001
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5033, $P5034
  vivi_8442001:
    set $S5002, $P5033
    box $P5035, $S5002
    set $P101["repr"], $P5035
  if834_end1984:
    find_dynamic_lex $P5036, "%*HOW"
    unless_null $P5036, fallback2004
    nqp_get_sc_object $P5038, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5037, $P5038
    set pkg_viv_tmp_25, $P5037
    set fb_tmp_134, pkg_viv_tmp_25
    repr_defined $I5008, fb_tmp_134
    unless $I5008 goto if846_else2005 
    set $P5039, fb_tmp_134["%HOW"]
    set $P5041, $P5039
    goto if846_end2006
  if846_else2005:
    null $P5040
    set $P5041, $P5040
  if846_end2006:
    unless_null $P5041, vivi_8472007
    new $P5042, 'Hash'
    set pkg_viv_tmp_25["%HOW"], $P5042
    set $P5041, $P5042
  vivi_8472007:
    unless_null $P5041, vivi_8482008
    die "Contextual %*HOW not found"
    box $P5043, "Contextual %*HOW not found"
    set $P5041, $P5043
  vivi_8482008:
    set $P5036, $P5041
  fallback2004:
    set fb_tmp_133, $P5036
    repr_defined $I5007, fb_tmp_133
    unless $I5007 goto if845_else2002 
    find_dynamic_lex $P5045, "$*PKGDECL"
    unless_null $P5045, fallback2009
    nqp_get_sc_object $P5047, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5046, $P5047
    set fb_tmp_135, $P5046
    repr_defined $I5009, fb_tmp_135
    unless $I5009 goto if849_else2010 
    set $P5048, fb_tmp_135["$PKGDECL"]
    set $P5050, $P5048
    goto if849_end2011
  if849_else2010:
    null $P5049
    set $P5050, $P5049
  if849_end2011:
    unless_null $P5050, vivi_8502012
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5050, $P5051
  vivi_8502012:
    unless_null $P5050, vivi_8512013
    die "Contextual $*PKGDECL not found"
    box $P5052, "Contextual $*PKGDECL not found"
    set $P5050, $P5052
  vivi_8512013:
    set $P5045, $P5050
  fallback2009:
    set $S5003, $P5045
    set $P5044, fb_tmp_133[$S5003]
    set $P5054, $P5044
    goto if845_end2003
  if845_else2002:
    null $P5053
    set $P5054, $P5053
  if845_end2003:
    unless_null $P5054, vivi_8522014
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5054, $P5055
  vivi_8522014:
    set $P102, $P5054
.annotate 'line', 1142
    find_dynamic_lex $P5056, "$*W"
    unless_null $P5056, fallback2015
    nqp_get_sc_object $P5058, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5057, $P5058
    set fb_tmp_136, $P5057
    repr_defined $I5010, fb_tmp_136
    unless $I5010 goto if853_else2016 
    set $P5059, fb_tmp_136["$W"]
    set $P5061, $P5059
    goto if853_end2017
  if853_else2016:
    null $P5060
    set $P5061, $P5060
  if853_end2017:
    unless_null $P5061, vivi_8542018
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5061, $P5062
  vivi_8542018:
    unless_null $P5061, vivi_8552019
    die "Contextual $*W not found"
    box $P5063, "Contextual $*W not found"
    set $P5061, $P5063
  vivi_8552019:
    set $P5056, $P5061
  fallback2015:
    $P5064 = $P5056."cur_lexpad"()
    set $P103, $P5064
.annotate 'line', 1143
    find_dynamic_lex $P5065, "$*W"
    unless_null $P5065, fallback2020
    nqp_get_sc_object $P5067, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5066, $P5067
    set fb_tmp_137, $P5066
    repr_defined $I5011, fb_tmp_137
    unless $I5011 goto if856_else2021 
    set $P5068, fb_tmp_137["$W"]
    set $P5070, $P5068
    goto if856_end2022
  if856_else2021:
    null $P5069
    set $P5070, $P5069
  if856_end2022:
    unless_null $P5070, vivi_8572023
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5070, $P5071
  vivi_8572023:
    unless_null $P5070, vivi_8582024
    die "Contextual $*W not found"
    box $P5072, "Contextual $*W not found"
    set $P5070, $P5072
  vivi_8582024:
    set $P5065, $P5070
  fallback2020:
    $P5073 = $P5065."pkg_create_mo"($P102, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5073
    can $I5012, $P102, "parametric"
    box $P5076, $I5012
    set $P5075, $P5076
    unless $I5012 goto if860_end2028 
.annotate 'line', 1146
    $P5074 = $P102."parametric"($P102)
    set $P5075, $P5074
  if860_end2028:
    unless $P5075 goto if859_else2025 
.annotate 'line', 1147
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback2029
    nqp_get_sc_object $P5079, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5078, $P5079
    set fb_tmp_138, $P5078
    repr_defined $I5013, fb_tmp_138
    unless $I5013 goto if861_else2030 
    set $P5080, fb_tmp_138["$W"]
    set $P5082, $P5080
    goto if861_end2031
  if861_else2030:
    null $P5081
    set $P5082, $P5081
  if861_end2031:
    unless_null $P5082, vivi_8622032
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_8622032:
    unless_null $P5082, vivi_8632033
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_8632033:
    set $P5077, $P5082
  fallback2029:
    find_dynamic_lex $P5085, "$*PACKAGE"
    unless_null $P5085, fallback2034
    nqp_get_sc_object $P5087, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5086, $P5087
    set fb_tmp_139, $P5086
    repr_defined $I5014, fb_tmp_139
    unless $I5014 goto if864_else2035 
    set $P5088, fb_tmp_139["$PACKAGE"]
    set $P5090, $P5088
    goto if864_end2036
  if864_else2035:
    null $P5089
    set $P5090, $P5089
  if864_end2036:
    unless_null $P5090, vivi_8652037
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5090, $P5091
  vivi_8652037:
    unless_null $P5090, vivi_8662038
    die "Contextual $*PACKAGE not found"
    box $P5092, "Contextual $*PACKAGE not found"
    set $P5090, $P5092
  vivi_8662038:
    set $P5085, $P5090
  fallback2034:
    $P5077."install_lexical_symbol"($P103, "$?PACKAGE", $P5085)
.annotate 'line', 1148
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback2039
    nqp_get_sc_object $P5095, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5094, $P5095
    set fb_tmp_140, $P5094
    repr_defined $I5015, fb_tmp_140
    unless $I5015 goto if867_else2040 
    set $P5096, fb_tmp_140["$W"]
    set $P5098, $P5096
    goto if867_end2041
  if867_else2040:
    null $P5097
    set $P5098, $P5097
  if867_end2041:
    unless_null $P5098, vivi_8682042
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5098, $P5099
  vivi_8682042:
    unless_null $P5098, vivi_8692043
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_8692043:
    set $P5093, $P5098
  fallback2039:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback2044
    nqp_get_sc_object $P5103, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5102, $P5103
    set fb_tmp_141, $P5102
    repr_defined $I5016, fb_tmp_141
    unless $I5016 goto if870_else2045 
    set $P5104, fb_tmp_141["$PACKAGE"]
    set $P5106, $P5104
    goto if870_end2046
  if870_else2045:
    null $P5105
    set $P5106, $P5105
  if870_end2046:
    unless_null $P5106, vivi_8712047
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5106, $P5107
  vivi_8712047:
    unless_null $P5106, vivi_8722048
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_8722048:
    set $P5101, $P5106
  fallback2044:
    $P5109 = $P5093."install_lexical_symbol"($P103, "$?ROLE", $P5101)
    goto if859_end2026
  if859_else2025:
.annotate 'line', 1150
.annotate 'line', 1151
    find_dynamic_lex $P5110, "$*W"
    unless_null $P5110, fallback2049
    nqp_get_sc_object $P5112, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5111, $P5112
    set fb_tmp_142, $P5111
    repr_defined $I5017, fb_tmp_142
    unless $I5017 goto if873_else2050 
    set $P5113, fb_tmp_142["$W"]
    set $P5115, $P5113
    goto if873_end2051
  if873_else2050:
    null $P5114
    set $P5115, $P5114
  if873_end2051:
    unless_null $P5115, vivi_8742052
    nqp_get_sc_object $P5116, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5115, $P5116
  vivi_8742052:
    unless_null $P5115, vivi_8752053
    die "Contextual $*W not found"
    box $P5117, "Contextual $*W not found"
    set $P5115, $P5117
  vivi_8752053:
    set $P5110, $P5115
  fallback2049:
    find_dynamic_lex $P5118, "$*PACKAGE"
    unless_null $P5118, fallback2054
    nqp_get_sc_object $P5120, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5119, $P5120
    set fb_tmp_143, $P5119
    repr_defined $I5018, fb_tmp_143
    unless $I5018 goto if876_else2055 
    set $P5121, fb_tmp_143["$PACKAGE"]
    set $P5123, $P5121
    goto if876_end2056
  if876_else2055:
    null $P5122
    set $P5123, $P5122
  if876_end2056:
    unless_null $P5123, vivi_8772057
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5123, $P5124
  vivi_8772057:
    unless_null $P5123, vivi_8782058
    die "Contextual $*PACKAGE not found"
    box $P5125, "Contextual $*PACKAGE not found"
    set $P5123, $P5125
  vivi_8782058:
    set $P5118, $P5123
  fallback2054:
    $P5110."install_lexical_symbol"($P103, "$?PACKAGE", $P5118)
.annotate 'line', 1152
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback2059
    nqp_get_sc_object $P5128, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5127, $P5128
    set fb_tmp_144, $P5127
    repr_defined $I5019, fb_tmp_144
    unless $I5019 goto if879_else2060 
    set $P5129, fb_tmp_144["$W"]
    set $P5131, $P5129
    goto if879_end2061
  if879_else2060:
    null $P5130
    set $P5131, $P5130
  if879_end2061:
    unless_null $P5131, vivi_8802062
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5131, $P5132
  vivi_8802062:
    unless_null $P5131, vivi_8812063
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_8812063:
    set $P5126, $P5131
  fallback2059:
    find_dynamic_lex $P5134, "$*PACKAGE"
    unless_null $P5134, fallback2064
    nqp_get_sc_object $P5136, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5135, $P5136
    set fb_tmp_145, $P5135
    repr_defined $I5020, fb_tmp_145
    unless $I5020 goto if882_else2065 
    set $P5137, fb_tmp_145["$PACKAGE"]
    set $P5139, $P5137
    goto if882_end2066
  if882_else2065:
    null $P5138
    set $P5139, $P5138
  if882_end2066:
    unless_null $P5139, vivi_8832067
    nqp_get_sc_object $P5140, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5139, $P5140
  vivi_8832067:
    unless_null $P5139, vivi_8842068
    die "Contextual $*PACKAGE not found"
    box $P5141, "Contextual $*PACKAGE not found"
    set $P5139, $P5141
  vivi_8842068:
    set $P5134, $P5139
  fallback2064:
    $P5142 = $P5126."install_lexical_symbol"($P103, "$?CLASS", $P5134)
  if859_end2026:
    find_dynamic_lex $P5143, "$*SCOPE"
    unless_null $P5143, fallback2073
    nqp_get_sc_object $P5145, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5144, $P5145
    set fb_tmp_146, $P5144
    repr_defined $I5022, fb_tmp_146
    unless $I5022 goto if887_else2074 
    set $P5146, fb_tmp_146["$SCOPE"]
    set $P5148, $P5146
    goto if887_end2075
  if887_else2074:
    null $P5147
    set $P5148, $P5147
  if887_end2075:
    unless_null $P5148, vivi_8882076
    nqp_get_sc_object $P5149, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5148, $P5149
  vivi_8882076:
    unless_null $P5148, vivi_8892077
    die "Contextual $*SCOPE not found"
    box $P5150, "Contextual $*SCOPE not found"
    set $P5148, $P5150
  vivi_8892077:
    set $P5143, $P5148
  fallback2073:
    set $S5004, $P5143
    iseq $I5021, $S5004, "our"
    set $I5025, $I5021
    if $I5021 goto unless886_end2072 
    find_dynamic_lex $P5151, "$*SCOPE"
    unless_null $P5151, fallback2078
    nqp_get_sc_object $P5153, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5152, $P5153
    set fb_tmp_147, $P5152
    repr_defined $I5024, fb_tmp_147
    unless $I5024 goto if890_else2079 
    set $P5154, fb_tmp_147["$SCOPE"]
    set $P5156, $P5154
    goto if890_end2080
  if890_else2079:
    null $P5155
    set $P5156, $P5155
  if890_end2080:
    unless_null $P5156, vivi_8912081
    nqp_get_sc_object $P5157, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5156, $P5157
  vivi_8912081:
    unless_null $P5156, vivi_8922082
    die "Contextual $*SCOPE not found"
    box $P5158, "Contextual $*SCOPE not found"
    set $P5156, $P5158
  vivi_8922082:
    set $P5151, $P5156
  fallback2078:
    set $S5005, $P5151
    iseq $I5023, $S5005, ""
    set $I5025, $I5023
  unless886_end2072:
    unless $I5025 goto if885_else2069 
.annotate 'line', 1156
.annotate 'line', 1157
    find_dynamic_lex $P5159, "$*W"
    unless_null $P5159, fallback2083
    nqp_get_sc_object $P5161, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5160, $P5161
    set fb_tmp_148, $P5160
    repr_defined $I5026, fb_tmp_148
    unless $I5026 goto if893_else2084 
    set $P5162, fb_tmp_148["$W"]
    set $P5164, $P5162
    goto if893_end2085
  if893_else2084:
    null $P5163
    set $P5164, $P5163
  if893_end2085:
    unless_null $P5164, vivi_8942086
    nqp_get_sc_object $P5165, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5164, $P5165
  vivi_8942086:
    unless_null $P5164, vivi_8952087
    die "Contextual $*W not found"
    box $P5166, "Contextual $*W not found"
    set $P5164, $P5166
  vivi_8952087:
    set $P5159, $P5164
  fallback2083:
    find_dynamic_lex $P5167, "$*OUTERPACKAGE"
    unless_null $P5167, fallback2088
    nqp_get_sc_object $P5169, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5168, $P5169
    set fb_tmp_149, $P5168
    repr_defined $I5027, fb_tmp_149
    unless $I5027 goto if896_else2089 
    set $P5170, fb_tmp_149["$OUTERPACKAGE"]
    set $P5172, $P5170
    goto if896_end2090
  if896_else2089:
    null $P5171
    set $P5172, $P5171
  if896_end2090:
    unless_null $P5172, vivi_8972091
    nqp_get_sc_object $P5173, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5172, $P5173
  vivi_8972091:
    unless_null $P5172, vivi_8982092
    die "Contextual $*OUTERPACKAGE not found"
    box $P5174, "Contextual $*OUTERPACKAGE not found"
    set $P5172, $P5174
  vivi_8982092:
    set $P5167, $P5172
  fallback2088:
    find_lex $P5175, "$/"
    unless_null $P5175, fallback2097
    nqp_get_sc_object $P5176, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5175, $P5176
  fallback2097:
    set fb_tmp_151, $P5175
    repr_defined $I5029, fb_tmp_151
    unless $I5029 goto if900_else2095 
    set $P5177, fb_tmp_151["name"]
    set $P5179, $P5177
    goto if900_end2096
  if900_else2095:
    null $P5178
    set $P5179, $P5178
  if900_end2096:
    unless_null $P5179, vivi_9012098
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5179, $P5180
  vivi_9012098:
    set fb_tmp_150, $P5179
    repr_defined $I5028, fb_tmp_150
    unless $I5028 goto if899_else2093 
    set $P5181, fb_tmp_150["identifier"]
    set $P5183, $P5181
    goto if899_end2094
  if899_else2093:
    null $P5182
    set $P5183, $P5182
  if899_end2094:
    unless_null $P5183, vivi_9022099
    nqp_get_sc_object $P5184, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5183, $P5184
  vivi_9022099:
    find_dynamic_lex $P5185, "$*PACKAGE"
    unless_null $P5185, fallback2100
    nqp_get_sc_object $P5187, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5186, $P5187
    set fb_tmp_152, $P5186
    repr_defined $I5030, fb_tmp_152
    unless $I5030 goto if903_else2101 
    set $P5188, fb_tmp_152["$PACKAGE"]
    set $P5190, $P5188
    goto if903_end2102
  if903_else2101:
    null $P5189
    set $P5190, $P5189
  if903_end2102:
    unless_null $P5190, vivi_9042103
    nqp_get_sc_object $P5191, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5190, $P5191
  vivi_9042103:
    unless_null $P5190, vivi_9052104
    die "Contextual $*PACKAGE not found"
    box $P5192, "Contextual $*PACKAGE not found"
    set $P5190, $P5192
  vivi_9052104:
    set $P5185, $P5190
  fallback2100:
    $P5159."install_package_symbol"($P5167, $P5183, $P5185)
    find_lex $P5193, "$/"
    unless_null $P5193, fallback2111
    nqp_get_sc_object $P5194, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5193, $P5194
  fallback2111:
    set fb_tmp_154, $P5193
    repr_defined $I5033, fb_tmp_154
    unless $I5033 goto if908_else2109 
    set $P5195, fb_tmp_154["name"]
    set $P5197, $P5195
    goto if908_end2110
  if908_else2109:
    null $P5196
    set $P5197, $P5196
  if908_end2110:
    unless_null $P5197, vivi_9092112
    nqp_get_sc_object $P5198, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5197, $P5198
  vivi_9092112:
    set fb_tmp_153, $P5197
    repr_defined $I5032, fb_tmp_153
    unless $I5032 goto if907_else2107 
    set $P5199, fb_tmp_153["identifier"]
    set $P5201, $P5199
    goto if907_end2108
  if907_else2107:
    null $P5200
    set $P5201, $P5200
  if907_end2108:
    unless_null $P5201, vivi_9102113
    nqp_get_sc_object $P5202, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5201, $P5202
  vivi_9102113:
    set $N5001, $P5201
    set $N5002, 1
    iseq $I5031, $N5001, $N5002
    box $P5236, $I5031
    set $P5235, $P5236
    unless $I5031 goto if906_end2106 
.annotate 'line', 1158
.annotate 'line', 1159
    find_dynamic_lex $P5203, "$*W"
    unless_null $P5203, fallback2114
    nqp_get_sc_object $P5205, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5204, $P5205
    set fb_tmp_155, $P5204
    repr_defined $I5034, fb_tmp_155
    unless $I5034 goto if911_else2115 
    set $P5206, fb_tmp_155["$W"]
    set $P5208, $P5206
    goto if911_end2116
  if911_else2115:
    null $P5207
    set $P5208, $P5207
  if911_end2116:
    unless_null $P5208, vivi_9122117
    nqp_get_sc_object $P5209, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5208, $P5209
  vivi_9122117:
    unless_null $P5208, vivi_9132118
    die "Contextual $*W not found"
    box $P5210, "Contextual $*W not found"
    set $P5208, $P5210
  vivi_9132118:
    set $P5203, $P5208
  fallback2114:
    find_lex $P5211, "$OUTER"
    find_lex $P5212, "$/"
    unless_null $P5212, fallback2125
    nqp_get_sc_object $P5213, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5212, $P5213
  fallback2125:
    set fb_tmp_158, $P5212
    repr_defined $I5037, fb_tmp_158
    unless $I5037 goto if916_else2123 
    set $P5214, fb_tmp_158["name"]
    set $P5216, $P5214
    goto if916_end2124
  if916_else2123:
    null $P5215
    set $P5216, $P5215
  if916_end2124:
    unless_null $P5216, vivi_9172126
    nqp_get_sc_object $P5217, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5216, $P5217
  vivi_9172126:
    set fb_tmp_157, $P5216
    repr_defined $I5036, fb_tmp_157
    unless $I5036 goto if915_else2121 
    set $P5218, fb_tmp_157["identifier"]
    set $P5220, $P5218
    goto if915_end2122
  if915_else2121:
    null $P5219
    set $P5220, $P5219
  if915_end2122:
    unless_null $P5220, vivi_9182127
    nqp_get_sc_object $P5221, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5220, $P5221
  vivi_9182127:
    set fb_tmp_156, $P5220
    repr_defined $I5035, fb_tmp_156
    unless $I5035 goto if914_else2119 
    set $P5222, fb_tmp_156[0]
    set $P5224, $P5222
    goto if914_end2120
  if914_else2119:
    null $P5223
    set $P5224, $P5223
  if914_end2120:
    unless_null $P5224, vivi_9192128
    nqp_get_sc_object $P5225, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5224, $P5225
  vivi_9192128:
    find_dynamic_lex $P5226, "$*PACKAGE"
    unless_null $P5226, fallback2129
    nqp_get_sc_object $P5228, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5227, $P5228
    set fb_tmp_159, $P5227
    repr_defined $I5038, fb_tmp_159
    unless $I5038 goto if920_else2130 
    set $P5229, fb_tmp_159["$PACKAGE"]
    set $P5231, $P5229
    goto if920_end2131
  if920_else2130:
    null $P5230
    set $P5231, $P5230
  if920_end2131:
    unless_null $P5231, vivi_9212132
    nqp_get_sc_object $P5232, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5231, $P5232
  vivi_9212132:
    unless_null $P5231, vivi_9222133
    die "Contextual $*PACKAGE not found"
    box $P5233, "Contextual $*PACKAGE not found"
    set $P5231, $P5233
  vivi_9222133:
    set $P5226, $P5231
  fallback2129:
    $P5234 = $P5203."install_lexical_symbol"($P5211, $P5224, $P5226)
    set $P5235, $P5234
  if906_end2106:
    set $P5307, $P5235
    goto if885_end2070
  if885_else2069:
    find_dynamic_lex $P5237, "$*SCOPE"
    unless_null $P5237, fallback2136
    nqp_get_sc_object $P5239, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5238, $P5239
    set fb_tmp_160, $P5238
    repr_defined $I5040, fb_tmp_160
    unless $I5040 goto if924_else2137 
    set $P5240, fb_tmp_160["$SCOPE"]
    set $P5242, $P5240
    goto if924_end2138
  if924_else2137:
    null $P5241
    set $P5242, $P5241
  if924_end2138:
    unless_null $P5242, vivi_9252139
    nqp_get_sc_object $P5243, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5242, $P5243
  vivi_9252139:
    unless_null $P5242, vivi_9262140
    die "Contextual $*SCOPE not found"
    box $P5244, "Contextual $*SCOPE not found"
    set $P5242, $P5244
  vivi_9262140:
    set $P5237, $P5242
  fallback2136:
    set $S5006, $P5237
    iseq $I5039, $S5006, "my"
    unless $I5039 goto if923_else2134 
.annotate 'line', 1162
    find_lex $P5245, "$/"
    unless_null $P5245, fallback2147
    nqp_get_sc_object $P5246, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5245, $P5246
  fallback2147:
    set fb_tmp_162, $P5245
    repr_defined $I5043, fb_tmp_162
    unless $I5043 goto if929_else2145 
    set $P5247, fb_tmp_162["name"]
    set $P5249, $P5247
    goto if929_end2146
  if929_else2145:
    null $P5248
    set $P5249, $P5248
  if929_end2146:
    unless_null $P5249, vivi_9302148
    nqp_get_sc_object $P5250, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5249, $P5250
  vivi_9302148:
    set fb_tmp_161, $P5249
    repr_defined $I5042, fb_tmp_161
    unless $I5042 goto if928_else2143 
    set $P5251, fb_tmp_161["identifier"]
    set $P5253, $P5251
    goto if928_end2144
  if928_else2143:
    null $P5252
    set $P5253, $P5252
  if928_end2144:
    unless_null $P5253, vivi_9312149
    nqp_get_sc_object $P5254, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5253, $P5254
  vivi_9312149:
    set $N5003, $P5253
    set $N5004, 1
    isne $I5041, $N5003, $N5004
    unless $I5041 goto if927_end2142 
.annotate 'line', 1163
.annotate 'line', 1164
    find_lex $P5255, "$/"
    unless_null $P5255, fallback2152
    nqp_get_sc_object $P5256, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5255, $P5256
  fallback2152:
    set fb_tmp_163, $P5255
    repr_defined $I5044, fb_tmp_163
    unless $I5044 goto if932_else2150 
    set $P5257, fb_tmp_163["name"]
    set $P5259, $P5257
    goto if932_end2151
  if932_else2150:
    null $P5258
    set $P5259, $P5258
  if932_end2151:
    unless_null $P5259, vivi_9332153
    nqp_get_sc_object $P5260, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5259, $P5260
  vivi_9332153:
    $P5261 = $P5259."CURSOR"()
    $P5262 = $P5261."panic"("A my scoped package cannot have a multi-part name yet")
  if927_end2142:
.annotate 'line', 1166
    find_dynamic_lex $P5263, "$*W"
    unless_null $P5263, fallback2154
    nqp_get_sc_object $P5265, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5264, $P5265
    set fb_tmp_164, $P5264
    repr_defined $I5045, fb_tmp_164
    unless $I5045 goto if934_else2155 
    set $P5266, fb_tmp_164["$W"]
    set $P5268, $P5266
    goto if934_end2156
  if934_else2155:
    null $P5267
    set $P5268, $P5267
  if934_end2156:
    unless_null $P5268, vivi_9352157
    nqp_get_sc_object $P5269, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5268, $P5269
  vivi_9352157:
    unless_null $P5268, vivi_9362158
    die "Contextual $*W not found"
    box $P5270, "Contextual $*W not found"
    set $P5268, $P5270
  vivi_9362158:
    set $P5263, $P5268
  fallback2154:
    find_lex $P5271, "$OUTER"
    find_lex $P5272, "$/"
    unless_null $P5272, fallback2165
    nqp_get_sc_object $P5273, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5272, $P5273
  fallback2165:
    set fb_tmp_167, $P5272
    repr_defined $I5048, fb_tmp_167
    unless $I5048 goto if939_else2163 
    set $P5274, fb_tmp_167["name"]
    set $P5276, $P5274
    goto if939_end2164
  if939_else2163:
    null $P5275
    set $P5276, $P5275
  if939_end2164:
    unless_null $P5276, vivi_9402166
    nqp_get_sc_object $P5277, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5276, $P5277
  vivi_9402166:
    set fb_tmp_166, $P5276
    repr_defined $I5047, fb_tmp_166
    unless $I5047 goto if938_else2161 
    set $P5278, fb_tmp_166["identifier"]
    set $P5280, $P5278
    goto if938_end2162
  if938_else2161:
    null $P5279
    set $P5280, $P5279
  if938_end2162:
    unless_null $P5280, vivi_9412167
    nqp_get_sc_object $P5281, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5280, $P5281
  vivi_9412167:
    set fb_tmp_165, $P5280
    repr_defined $I5046, fb_tmp_165
    unless $I5046 goto if937_else2159 
    set $P5282, fb_tmp_165[0]
    set $P5284, $P5282
    goto if937_end2160
  if937_else2159:
    null $P5283
    set $P5284, $P5283
  if937_end2160:
    unless_null $P5284, vivi_9422168
    nqp_get_sc_object $P5285, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5284, $P5285
  vivi_9422168:
    find_dynamic_lex $P5286, "$*PACKAGE"
    unless_null $P5286, fallback2169
    nqp_get_sc_object $P5288, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5287, $P5288
    set fb_tmp_168, $P5287
    repr_defined $I5049, fb_tmp_168
    unless $I5049 goto if943_else2170 
    set $P5289, fb_tmp_168["$PACKAGE"]
    set $P5291, $P5289
    goto if943_end2171
  if943_else2170:
    null $P5290
    set $P5291, $P5290
  if943_end2171:
    unless_null $P5291, vivi_9442172
    nqp_get_sc_object $P5292, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5291, $P5292
  vivi_9442172:
    unless_null $P5291, vivi_9452173
    die "Contextual $*PACKAGE not found"
    box $P5293, "Contextual $*PACKAGE not found"
    set $P5291, $P5293
  vivi_9452173:
    set $P5286, $P5291
  fallback2169:
    $P5294 = $P5263."install_lexical_symbol"($P5271, $P5284, $P5286)
    set $P5306, $P5294
    goto if923_end2135
  if923_else2134:
.annotate 'line', 1168
.annotate 'line', 1169
    find_lex $P5295, "$/"
    $P5296 = $P5295."CURSOR"()
    find_dynamic_lex $P5297, "$*SCOPE"
    unless_null $P5297, fallback2174
    nqp_get_sc_object $P5299, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5298, $P5299
    set fb_tmp_169, $P5298
    repr_defined $I5050, fb_tmp_169
    unless $I5050 goto if946_else2175 
    set $P5300, fb_tmp_169["$SCOPE"]
    set $P5302, $P5300
    goto if946_end2176
  if946_else2175:
    null $P5301
    set $P5302, $P5301
  if946_end2176:
    unless_null $P5302, vivi_9472177
    nqp_get_sc_object $P5303, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5302, $P5303
  vivi_9472177:
    unless_null $P5302, vivi_9482178
    die "Contextual $*SCOPE not found"
    box $P5304, "Contextual $*SCOPE not found"
    set $P5302, $P5304
  vivi_9482178:
    set $P5297, $P5302
  fallback2174:
    set $S5008, $P5297
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5305 = $P5296."panic"($S5007)
    set $P5306, $P5305
  if923_end2135:
    set $P5307, $P5306
  if885_end2070:
    .return ($P5307) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_115_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1184
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx980_start
    .local string rx980_tgt
    .local int rx980_pos
    .local int rx980_off
    .local int rx980_eos
    .local int rx980_rep
    .local pmc rx980_cur
    .local pmc rx980_curclass
    .local pmc rx980_bstack
    .local pmc rx980_cstack
    rx980_start = self."!cursor_start_all"()
    set rx980_cur, rx980_start[0]
    set rx980_tgt, rx980_start[1]
    set rx980_pos, rx980_start[2]
    set rx980_curclass, rx980_start[3]
    set rx980_bstack, rx980_start[4]
    set $I19, rx980_start[5]
    store_lex unicode:"$\x{a2}", rx980_cur
    length rx980_eos, rx980_tgt
    eq $I19, 1, rx980_restart2245
    gt rx980_pos, rx980_eos, rx980_fail2246
    repr_get_attr_int $I11, self, rx980_curclass, "$!from"
    ne $I11, -1, rxscan981_done2252
    goto rxscan981_scan2251
  rxscan981_loop2250:
    inc rx980_pos
    gt rx980_pos, rx980_eos, rx980_fail2246
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!from", rx980_pos
  rxscan981_scan2251:
    nqp_rxmark rx980_bstack, rxscan981_loop2250, rx980_pos, 0
  rxscan981_done2252:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    store_lex unicode:"$\x{a2}", rx980_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    store_lex unicode:"$\x{a2}", rx980_cur
    box $P5004, "variable"
    set $P102, $P5004
    nqp_rxmark rx980_bstack, rxquantr982_done2254, -1, 0
  rxquantr982_loop2253:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."variable"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
    goto rxsubrule983_pass2255
  rxsubrule983_back2256:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
  rxsubrule983_pass2255:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "variable")
    set_addr $I11, rxsubrule983_back2256
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
    goto rxsubrule984_pass2257
  rxsubrule984_back2258:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
  rxsubrule984_pass2257:
    rx980_cstack = rx980_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule984_back2258
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxpeek $I19, rx980_bstack, rxquantr982_done2254
    inc $I19
    inc $I19
    set rx980_rep, rx980_bstack[$I19]
    nqp_rxcommit rx980_bstack, rxquantr982_done2254
    inc rx980_rep
    nqp_rxmark rx980_bstack, rxquantr982_done2254, rx980_pos, rx980_rep
    add $I11, rx980_pos, 1
    gt $I11, rx980_eos, rx980_fail2246
    substr $S10, rx980_tgt, rx980_pos, 1
    ne $S10, ucs4:",", rx980_fail2246
    add rx980_pos, 1
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
    goto rxsubrule985_pass2259
  rxsubrule985_back2260:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2246
  rxsubrule985_pass2259:
    rx980_cstack = rx980_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule985_back2260
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    goto rxquantr982_loop2253
  rxquantr982_done2254:
    rx980_cur."!cursor_pass"(rx980_pos, "role_params", 'backtrack'=>1)
    .return (rx980_cur)
  rx980_restart2245:
    repr_get_attr_obj rx980_cstack, rx980_cur, rx980_curclass, "$!cstack"
  rx980_fail2246:
    unless rx980_bstack, rx980_done2244
    pop $I19, rx980_bstack
    if_null rx980_cstack, rx980_cstack_done2249
    unless rx980_cstack, rx980_cstack_done2249
    dec $I19
    set $P11, rx980_cstack[$I19]
  rx980_cstack_done2249:
    pop rx980_rep, rx980_bstack
    pop rx980_pos, rx980_bstack
    pop $I19, rx980_bstack
    lt rx980_pos, -1, rx980_done2244
    lt rx980_pos, 0, rx980_fail2246
    eq $I19, 0, rx980_fail2246
    nqp_islist $I20, rx980_cstack
    unless $I20, rx980_jump2247
    elements $I18, rx980_bstack
    le $I18, 0, rx980_cut2248
    dec $I18
    set $I18, rx980_bstack[$I18]
  rx980_cut2248:
    assign rx980_cstack, $I18
  rx980_jump2247:
    jump $I19
  rx980_done2244:
    rx980_cur."!cursor_fail"()
    .return (rx980_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_116_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1190
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_117_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1191
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx986_start
    .local string rx986_tgt
    .local int rx986_pos
    .local int rx986_off
    .local int rx986_eos
    .local int rx986_rep
    .local pmc rx986_cur
    .local pmc rx986_curclass
    .local pmc rx986_bstack
    .local pmc rx986_cstack
    rx986_start = self."!cursor_start_all"()
    set rx986_cur, rx986_start[0]
    set rx986_tgt, rx986_start[1]
    set rx986_pos, rx986_start[2]
    set rx986_curclass, rx986_start[3]
    set rx986_bstack, rx986_start[4]
    set $I19, rx986_start[5]
    store_lex unicode:"$\x{a2}", rx986_cur
    length rx986_eos, rx986_tgt
    eq $I19, 1, rx986_restart2263
    gt rx986_pos, rx986_eos, rx986_fail2264
    repr_get_attr_int $I11, self, rx986_curclass, "$!from"
    ne $I11, -1, rxscan987_done2270
    goto rxscan987_scan2269
  rxscan987_loop2268:
    inc rx986_pos
    gt rx986_pos, rx986_eos, rx986_fail2264
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!from", rx986_pos
  rxscan987_scan2269:
    nqp_rxmark rx986_bstack, rxscan987_loop2268, rx986_pos, 0
  rxscan987_done2270:
    nqp_rxmark rx986_bstack, rxcap988_fail2272, rx986_pos, 0
    add $I11, rx986_pos, 2
    gt $I11, rx986_eos, rx986_fail2264
    substr $S10, rx986_tgt, rx986_pos, 2
    ne $S10, ucs4:"my", rx986_fail2264
    add rx986_pos, 2
    nqp_rxpeek $I19, rx986_bstack, rxcap988_fail2272
    inc $I19
    set $I11, rx986_bstack[$I19]
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx986_pos)
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "sym")
    goto rxcap988_done2271
  rxcap988_fail2272:
    goto rx986_fail2264
  rxcap988_done2271:
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."ws"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
    goto rxsubrule989_pass2273
  rxsubrule989_back2274:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
  rxsubrule989_pass2273:
    rx986_cstack = rx986_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule989_back2274
    push rx986_bstack, $I11
    push rx986_bstack, 0
    push rx986_bstack, rx986_pos
    elements $I11, rx986_cstack
    push rx986_bstack, $I11
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
    goto rxsubrule990_pass2275
  rxsubrule990_back2276:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
  rxsubrule990_pass2275:
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule990_back2276
    push rx986_bstack, $I11
    push rx986_bstack, 0
    push rx986_bstack, rx986_pos
    elements $I11, rx986_cstack
    push rx986_bstack, $I11
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."ws"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
    goto rxsubrule991_pass2277
  rxsubrule991_back2278:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2264
  rxsubrule991_pass2277:
    rx986_cstack = rx986_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule991_back2278
    push rx986_bstack, $I11
    push rx986_bstack, 0
    push rx986_bstack, rx986_pos
    elements $I11, rx986_cstack
    push rx986_bstack, $I11
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    rx986_cur."!cursor_pass"(rx986_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx986_cur)
  rx986_restart2263:
    repr_get_attr_obj rx986_cstack, rx986_cur, rx986_curclass, "$!cstack"
  rx986_fail2264:
    unless rx986_bstack, rx986_done2262
    pop $I19, rx986_bstack
    if_null rx986_cstack, rx986_cstack_done2267
    unless rx986_cstack, rx986_cstack_done2267
    dec $I19
    set $P11, rx986_cstack[$I19]
  rx986_cstack_done2267:
    pop rx986_rep, rx986_bstack
    pop rx986_pos, rx986_bstack
    pop $I19, rx986_bstack
    lt rx986_pos, -1, rx986_done2262
    lt rx986_pos, 0, rx986_fail2264
    eq $I19, 0, rx986_fail2264
    nqp_islist $I20, rx986_cstack
    unless $I20, rx986_jump2265
    elements $I18, rx986_bstack
    le $I18, 0, rx986_cut2266
    dec $I18
    set $I18, rx986_bstack[$I18]
  rx986_cut2266:
    assign rx986_cstack, $I18
  rx986_jump2265:
    jump $I19
  rx986_done2262:
    rx986_cur."!cursor_fail"()
    .return (rx986_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_118_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1192
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx992_start
    .local string rx992_tgt
    .local int rx992_pos
    .local int rx992_off
    .local int rx992_eos
    .local int rx992_rep
    .local pmc rx992_cur
    .local pmc rx992_curclass
    .local pmc rx992_bstack
    .local pmc rx992_cstack
    rx992_start = self."!cursor_start_all"()
    set rx992_cur, rx992_start[0]
    set rx992_tgt, rx992_start[1]
    set rx992_pos, rx992_start[2]
    set rx992_curclass, rx992_start[3]
    set rx992_bstack, rx992_start[4]
    set $I19, rx992_start[5]
    store_lex unicode:"$\x{a2}", rx992_cur
    length rx992_eos, rx992_tgt
    eq $I19, 1, rx992_restart2281
    gt rx992_pos, rx992_eos, rx992_fail2282
    repr_get_attr_int $I11, self, rx992_curclass, "$!from"
    ne $I11, -1, rxscan993_done2288
    goto rxscan993_scan2287
  rxscan993_loop2286:
    inc rx992_pos
    gt rx992_pos, rx992_eos, rx992_fail2282
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!from", rx992_pos
  rxscan993_scan2287:
    nqp_rxmark rx992_bstack, rxscan993_loop2286, rx992_pos, 0
  rxscan993_done2288:
    nqp_rxmark rx992_bstack, rxcap994_fail2290, rx992_pos, 0
    add $I11, rx992_pos, 3
    gt $I11, rx992_eos, rx992_fail2282
    substr $S10, rx992_tgt, rx992_pos, 3
    ne $S10, ucs4:"our", rx992_fail2282
    add rx992_pos, 3
    nqp_rxpeek $I19, rx992_bstack, rxcap994_fail2290
    inc $I19
    set $I11, rx992_bstack[$I19]
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx992_pos)
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "sym")
    goto rxcap994_done2289
  rxcap994_fail2290:
    goto rx992_fail2282
  rxcap994_done2289:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."ws"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
    goto rxsubrule995_pass2291
  rxsubrule995_back2292:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
  rxsubrule995_pass2291:
    rx992_cstack = rx992_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule995_back2292
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
    goto rxsubrule996_pass2293
  rxsubrule996_back2294:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
  rxsubrule996_pass2293:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule996_back2294
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."ws"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
    goto rxsubrule997_pass2295
  rxsubrule997_back2296:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2282
  rxsubrule997_pass2295:
    rx992_cstack = rx992_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule997_back2296
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    rx992_cur."!cursor_pass"(rx992_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx992_cur)
  rx992_restart2281:
    repr_get_attr_obj rx992_cstack, rx992_cur, rx992_curclass, "$!cstack"
  rx992_fail2282:
    unless rx992_bstack, rx992_done2280
    pop $I19, rx992_bstack
    if_null rx992_cstack, rx992_cstack_done2285
    unless rx992_cstack, rx992_cstack_done2285
    dec $I19
    set $P11, rx992_cstack[$I19]
  rx992_cstack_done2285:
    pop rx992_rep, rx992_bstack
    pop rx992_pos, rx992_bstack
    pop $I19, rx992_bstack
    lt rx992_pos, -1, rx992_done2280
    lt rx992_pos, 0, rx992_fail2282
    eq $I19, 0, rx992_fail2282
    nqp_islist $I20, rx992_cstack
    unless $I20, rx992_jump2283
    elements $I18, rx992_bstack
    le $I18, 0, rx992_cut2284
    dec $I18
    set $I18, rx992_bstack[$I18]
  rx992_cut2284:
    assign rx992_cstack, $I18
  rx992_jump2283:
    jump $I19
  rx992_done2280:
    rx992_cur."!cursor_fail"()
    .return (rx992_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_119_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1193
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx998_start
    .local string rx998_tgt
    .local int rx998_pos
    .local int rx998_off
    .local int rx998_eos
    .local int rx998_rep
    .local pmc rx998_cur
    .local pmc rx998_curclass
    .local pmc rx998_bstack
    .local pmc rx998_cstack
    rx998_start = self."!cursor_start_all"()
    set rx998_cur, rx998_start[0]
    set rx998_tgt, rx998_start[1]
    set rx998_pos, rx998_start[2]
    set rx998_curclass, rx998_start[3]
    set rx998_bstack, rx998_start[4]
    set $I19, rx998_start[5]
    store_lex unicode:"$\x{a2}", rx998_cur
    length rx998_eos, rx998_tgt
    eq $I19, 1, rx998_restart2299
    gt rx998_pos, rx998_eos, rx998_fail2300
    repr_get_attr_int $I11, self, rx998_curclass, "$!from"
    ne $I11, -1, rxscan999_done2306
    goto rxscan999_scan2305
  rxscan999_loop2304:
    inc rx998_pos
    gt rx998_pos, rx998_eos, rx998_fail2300
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!from", rx998_pos
  rxscan999_scan2305:
    nqp_rxmark rx998_bstack, rxscan999_loop2304, rx998_pos, 0
  rxscan999_done2306:
    nqp_rxmark rx998_bstack, rxcap1000_fail2308, rx998_pos, 0
    add $I11, rx998_pos, 3
    gt $I11, rx998_eos, rx998_fail2300
    substr $S10, rx998_tgt, rx998_pos, 3
    ne $S10, ucs4:"has", rx998_fail2300
    add rx998_pos, 3
    nqp_rxpeek $I19, rx998_bstack, rxcap1000_fail2308
    inc $I19
    set $I11, rx998_bstack[$I19]
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx998_pos)
    rx998_cstack = rx998_cur."!cursor_capture"($P11, "sym")
    goto rxcap1000_done2307
  rxcap1000_fail2308:
    goto rx998_fail2300
  rxcap1000_done2307:
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."ws"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
    goto rxsubrule1001_pass2309
  rxsubrule1001_back2310:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
  rxsubrule1001_pass2309:
    rx998_cstack = rx998_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1001_back2310
    push rx998_bstack, $I11
    push rx998_bstack, 0
    push rx998_bstack, rx998_pos
    elements $I11, rx998_cstack
    push rx998_bstack, $I11
    repr_get_attr_int rx998_pos, $P11, rx998_curclass, "$!pos"
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
    goto rxsubrule1002_pass2311
  rxsubrule1002_back2312:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
  rxsubrule1002_pass2311:
    rx998_cstack = rx998_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule1002_back2312
    push rx998_bstack, $I11
    push rx998_bstack, 0
    push rx998_bstack, rx998_pos
    elements $I11, rx998_cstack
    push rx998_bstack, $I11
    repr_get_attr_int rx998_pos, $P11, rx998_curclass, "$!pos"
    repr_bind_attr_int rx998_cur, rx998_curclass, "$!pos", rx998_pos
    $P11 = rx998_cur."ws"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
    goto rxsubrule1003_pass2313
  rxsubrule1003_back2314:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx998_curclass, "$!pos"
    lt $I11, 0, rx998_fail2300
  rxsubrule1003_pass2313:
    rx998_cstack = rx998_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1003_back2314
    push rx998_bstack, $I11
    push rx998_bstack, 0
    push rx998_bstack, rx998_pos
    elements $I11, rx998_cstack
    push rx998_bstack, $I11
    repr_get_attr_int rx998_pos, $P11, rx998_curclass, "$!pos"
    rx998_cur."!cursor_pass"(rx998_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx998_cur)
  rx998_restart2299:
    repr_get_attr_obj rx998_cstack, rx998_cur, rx998_curclass, "$!cstack"
  rx998_fail2300:
    unless rx998_bstack, rx998_done2298
    pop $I19, rx998_bstack
    if_null rx998_cstack, rx998_cstack_done2303
    unless rx998_cstack, rx998_cstack_done2303
    dec $I19
    set $P11, rx998_cstack[$I19]
  rx998_cstack_done2303:
    pop rx998_rep, rx998_bstack
    pop rx998_pos, rx998_bstack
    pop $I19, rx998_bstack
    lt rx998_pos, -1, rx998_done2298
    lt rx998_pos, 0, rx998_fail2300
    eq $I19, 0, rx998_fail2300
    nqp_islist $I20, rx998_cstack
    unless $I20, rx998_jump2301
    elements $I18, rx998_bstack
    le $I18, 0, rx998_cut2302
    dec $I18
    set $I18, rx998_bstack[$I18]
  rx998_cut2302:
    assign rx998_cstack, $I18
  rx998_jump2301:
    jump $I19
  rx998_done2298:
    rx998_cur."!cursor_fail"()
    .return (rx998_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_120_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1195
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1004_start
    .local string rx1004_tgt
    .local int rx1004_pos
    .local int rx1004_off
    .local int rx1004_eos
    .local int rx1004_rep
    .local pmc rx1004_cur
    .local pmc rx1004_curclass
    .local pmc rx1004_bstack
    .local pmc rx1004_cstack
    rx1004_start = self."!cursor_start_all"()
    set rx1004_cur, rx1004_start[0]
    set rx1004_tgt, rx1004_start[1]
    set rx1004_pos, rx1004_start[2]
    set rx1004_curclass, rx1004_start[3]
    set rx1004_bstack, rx1004_start[4]
    set $I19, rx1004_start[5]
    store_lex unicode:"$\x{a2}", rx1004_cur
    length rx1004_eos, rx1004_tgt
    eq $I19, 1, rx1004_restart2317
    gt rx1004_pos, rx1004_eos, rx1004_fail2318
    repr_get_attr_int $I11, self, rx1004_curclass, "$!from"
    ne $I11, -1, rxscan1005_done2324
    goto rxscan1005_scan2323
  rxscan1005_loop2322:
    inc rx1004_pos
    gt rx1004_pos, rx1004_eos, rx1004_fail2318
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!from", rx1004_pos
  rxscan1005_scan2323:
    nqp_rxmark rx1004_bstack, rxscan1005_loop2322, rx1004_pos, 0
  rxscan1005_done2324:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1006_02326
    nqp_push_label $P11, alt1006_12328
    nqp_push_label $P11, alt1006_22330
    nqp_rxmark rx1004_bstack, alt1006_end2325, -1, 0
    rx1004_cur."!alt"(rx1004_pos, "alt_nfa__21_1382959281.44206", $P11)
    goto rx1004_fail2318
  alt1006_02326:
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!pos", rx1004_pos
    $P11 = rx1004_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1004_curclass, "$!pos"
    lt $I11, 0, rx1004_fail2318
    nqp_rxmark rx1004_bstack, rxsubrule1007_pass2327, -1, 0
  rxsubrule1007_pass2327:
    rx1004_cstack = rx1004_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1004_pos, $P11, rx1004_curclass, "$!pos"
    goto alt1006_end2325
  alt1006_12328:
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!pos", rx1004_pos
    $P11 = rx1004_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx1004_curclass, "$!pos"
    lt $I11, 0, rx1004_fail2318
    nqp_rxmark rx1004_bstack, rxsubrule1008_pass2329, -1, 0
  rxsubrule1008_pass2329:
    rx1004_cstack = rx1004_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx1004_pos, $P11, rx1004_curclass, "$!pos"
    goto alt1006_end2325
  alt1006_22330:
    repr_bind_attr_int rx1004_cur, rx1004_curclass, "$!pos", rx1004_pos
    $P11 = rx1004_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx1004_curclass, "$!pos"
    lt $I11, 0, rx1004_fail2318
    nqp_rxmark rx1004_bstack, rxsubrule1009_pass2331, -1, 0
  rxsubrule1009_pass2331:
    rx1004_cstack = rx1004_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx1004_pos, $P11, rx1004_curclass, "$!pos"
    goto alt1006_end2325
  alt1006_end2325:
    rx1004_cur."!cursor_pass"(rx1004_pos, "scoped", 'backtrack'=>1)
    .return (rx1004_cur)
  rx1004_restart2317:
    repr_get_attr_obj rx1004_cstack, rx1004_cur, rx1004_curclass, "$!cstack"
  rx1004_fail2318:
    unless rx1004_bstack, rx1004_done2316
    pop $I19, rx1004_bstack
    if_null rx1004_cstack, rx1004_cstack_done2321
    unless rx1004_cstack, rx1004_cstack_done2321
    dec $I19
    set $P11, rx1004_cstack[$I19]
  rx1004_cstack_done2321:
    pop rx1004_rep, rx1004_bstack
    pop rx1004_pos, rx1004_bstack
    pop $I19, rx1004_bstack
    lt rx1004_pos, -1, rx1004_done2316
    lt rx1004_pos, 0, rx1004_fail2318
    eq $I19, 0, rx1004_fail2318
    nqp_islist $I20, rx1004_cstack
    unless $I20, rx1004_jump2319
    elements $I18, rx1004_bstack
    le $I18, 0, rx1004_cut2320
    dec $I18
    set $I18, rx1004_bstack[$I18]
  rx1004_cut2320:
    assign rx1004_cstack, $I18
  rx1004_jump2319:
    jump $I19
  rx1004_done2316:
    rx1004_cur."!cursor_fail"()
    .return (rx1004_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_121_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1201
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_427_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1010_start
    .local string rx1010_tgt
    .local int rx1010_pos
    .local int rx1010_off
    .local int rx1010_eos
    .local int rx1010_rep
    .local pmc rx1010_cur
    .local pmc rx1010_curclass
    .local pmc rx1010_bstack
    .local pmc rx1010_cstack
    rx1010_start = self."!cursor_start_all"()
    set rx1010_cur, rx1010_start[0]
    set rx1010_tgt, rx1010_start[1]
    set rx1010_pos, rx1010_start[2]
    set rx1010_curclass, rx1010_start[3]
    set rx1010_bstack, rx1010_start[4]
    set $I19, rx1010_start[5]
    store_lex unicode:"$\x{a2}", rx1010_cur
    length rx1010_eos, rx1010_tgt
    eq $I19, 1, rx1010_restart2334
    gt rx1010_pos, rx1010_eos, rx1010_fail2335
    repr_get_attr_int $I11, self, rx1010_curclass, "$!from"
    ne $I11, -1, rxscan1011_done2341
    goto rxscan1011_scan2340
  rxscan1011_loop2339:
    inc rx1010_pos
    gt rx1010_pos, rx1010_eos, rx1010_fail2335
    repr_bind_attr_int rx1010_cur, rx1010_curclass, "$!from", rx1010_pos
  rxscan1011_scan2340:
    nqp_rxmark rx1010_bstack, rxscan1011_loop2339, rx1010_pos, 0
  rxscan1011_done2341:
    repr_bind_attr_int rx1010_cur, rx1010_curclass, "$!pos", rx1010_pos
    $P11 = rx1010_cur."name"()
    repr_get_attr_int $I11, $P11, rx1010_curclass, "$!pos"
    lt $I11, 0, rx1010_fail2335
    nqp_rxmark rx1010_bstack, rxsubrule1012_pass2342, -1, 0
  rxsubrule1012_pass2342:
    rx1010_cstack = rx1010_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1010_pos, $P11, rx1010_curclass, "$!pos"
    repr_bind_attr_int rx1010_cur, rx1010_curclass, "$!pos", rx1010_pos
    store_lex unicode:"$\x{a2}", rx1010_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_427_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1010_fail2335
    rx1010_cur."!cursor_pass"(rx1010_pos, "typename", 'backtrack'=>1)
    .return (rx1010_cur)
  rx1010_restart2334:
    repr_get_attr_obj rx1010_cstack, rx1010_cur, rx1010_curclass, "$!cstack"
  rx1010_fail2335:
    unless rx1010_bstack, rx1010_done2333
    pop $I19, rx1010_bstack
    if_null rx1010_cstack, rx1010_cstack_done2338
    unless rx1010_cstack, rx1010_cstack_done2338
    dec $I19
    set $P11, rx1010_cstack[$I19]
  rx1010_cstack_done2338:
    pop rx1010_rep, rx1010_bstack
    pop rx1010_pos, rx1010_bstack
    pop $I19, rx1010_bstack
    lt rx1010_pos, -1, rx1010_done2333
    lt rx1010_pos, 0, rx1010_fail2335
    eq $I19, 0, rx1010_fail2335
    nqp_islist $I20, rx1010_cstack
    unless $I20, rx1010_jump2336
    elements $I18, rx1010_bstack
    le $I18, 0, rx1010_cut2337
    dec $I18
    set $I18, rx1010_bstack[$I18]
  rx1010_cut2337:
    assign rx1010_cstack, $I18
  rx1010_jump2336:
    jump $I19
  rx1010_done2333:
    rx1010_cur."!cursor_fail"()
    .return (rx1010_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1382959278.72036") :anon :lex :outer("cuid_121_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1203
    .local pmc fb_tmp_170 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2343
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_170, $P5002
    repr_defined $I5001, fb_tmp_170
    unless $I5001 goto if1013_else2344 
    set $P5004, fb_tmp_170["$W"]
    set $P5006, $P5004
    goto if1013_end2345
  if1013_else2344:
    null $P5005
    set $P5006, $P5005
  if1013_end2345:
    unless_null $P5006, vivi_10142346
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_10142346:
    unless_null $P5006, vivi_10152347
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_10152347:
    set $P5001, $P5006
  fallback2343:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2352
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  fallback2352:
    set fb_tmp_172, $P5010
    repr_defined $I5003, fb_tmp_172
    unless $I5003 goto if1017_else2350 
    set $P5012, fb_tmp_172["name"]
    set $P5014, $P5012
    goto if1017_end2351
  if1017_else2350:
    null $P5013
    set $P5014, $P5013
  if1017_end2351:
    unless_null $P5014, vivi_10182353
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_10182353:
    set fb_tmp_171, $P5014
    repr_defined $I5002, fb_tmp_171
    unless $I5002 goto if1016_else2348 
    set $P5016, fb_tmp_171["identifier"]
    set $P5018, $P5016
    goto if1016_end2349
  if1016_else2348:
    null $P5017
    set $P5018, $P5017
  if1016_end2349:
    unless_null $P5018, vivi_10192354
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_10192354:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_122_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1206
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1020_start
    .local string rx1020_tgt
    .local int rx1020_pos
    .local int rx1020_off
    .local int rx1020_eos
    .local int rx1020_rep
    .local pmc rx1020_cur
    .local pmc rx1020_curclass
    .local pmc rx1020_bstack
    .local pmc rx1020_cstack
    rx1020_start = self."!cursor_start_all"()
    set rx1020_cur, rx1020_start[0]
    set rx1020_tgt, rx1020_start[1]
    set rx1020_pos, rx1020_start[2]
    set rx1020_curclass, rx1020_start[3]
    set rx1020_bstack, rx1020_start[4]
    set $I19, rx1020_start[5]
    store_lex unicode:"$\x{a2}", rx1020_cur
    length rx1020_eos, rx1020_tgt
    eq $I19, 1, rx1020_restart2357
    gt rx1020_pos, rx1020_eos, rx1020_fail2358
    repr_get_attr_int $I11, self, rx1020_curclass, "$!from"
    ne $I11, -1, rxscan1021_done2364
    goto rxscan1021_scan2363
  rxscan1021_loop2362:
    inc rx1020_pos
    gt rx1020_pos, rx1020_eos, rx1020_fail2358
    repr_bind_attr_int rx1020_cur, rx1020_curclass, "$!from", rx1020_pos
  rxscan1021_scan2363:
    nqp_rxmark rx1020_bstack, rxscan1021_loop2362, rx1020_pos, 0
  rxscan1021_done2364:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1022_02366
    nqp_push_label $P11, alt1022_12368
    nqp_rxmark rx1020_bstack, alt1022_end2365, -1, 0
    rx1020_cur."!alt"(rx1020_pos, "alt_nfa__22_1382959281.4569", $P11)
    goto rx1020_fail2358
  alt1022_02366:
    repr_bind_attr_int rx1020_cur, rx1020_curclass, "$!pos", rx1020_pos
    $P11 = rx1020_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1020_curclass, "$!pos"
    lt $I11, 0, rx1020_fail2358
    nqp_rxmark rx1020_bstack, rxsubrule1023_pass2367, -1, 0
  rxsubrule1023_pass2367:
    rx1020_cstack = rx1020_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1020_pos, $P11, rx1020_curclass, "$!pos"
    goto alt1022_end2365
  alt1022_12368:
    repr_bind_attr_int rx1020_cur, rx1020_curclass, "$!pos", rx1020_pos
    $P11 = rx1020_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1020_curclass, "$!pos"
    lt $I11, 0, rx1020_fail2358
    nqp_rxmark rx1020_bstack, rxsubrule1024_pass2369, -1, 0
  rxsubrule1024_pass2369:
    rx1020_cstack = rx1020_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1020_pos, $P11, rx1020_curclass, "$!pos"
    goto alt1022_end2365
  alt1022_end2365:
    rx1020_cur."!cursor_pass"(rx1020_pos, "declarator", 'backtrack'=>1)
    .return (rx1020_cur)
  rx1020_restart2357:
    repr_get_attr_obj rx1020_cstack, rx1020_cur, rx1020_curclass, "$!cstack"
  rx1020_fail2358:
    unless rx1020_bstack, rx1020_done2356
    pop $I19, rx1020_bstack
    if_null rx1020_cstack, rx1020_cstack_done2361
    unless rx1020_cstack, rx1020_cstack_done2361
    dec $I19
    set $P11, rx1020_cstack[$I19]
  rx1020_cstack_done2361:
    pop rx1020_rep, rx1020_bstack
    pop rx1020_pos, rx1020_bstack
    pop $I19, rx1020_bstack
    lt rx1020_pos, -1, rx1020_done2356
    lt rx1020_pos, 0, rx1020_fail2358
    eq $I19, 0, rx1020_fail2358
    nqp_islist $I20, rx1020_cstack
    unless $I20, rx1020_jump2359
    elements $I18, rx1020_bstack
    le $I18, 0, rx1020_cut2360
    dec $I18
    set $I18, rx1020_bstack[$I18]
  rx1020_cut2360:
    assign rx1020_cstack, $I18
  rx1020_jump2359:
    jump $I19
  rx1020_done2356:
    rx1020_cur."!cursor_fail"()
    .return (rx1020_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_123_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1211
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_428_1382959278.72036' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1025_start
    .local string rx1025_tgt
    .local int rx1025_pos
    .local int rx1025_off
    .local int rx1025_eos
    .local int rx1025_rep
    .local pmc rx1025_cur
    .local pmc rx1025_curclass
    .local pmc rx1025_bstack
    .local pmc rx1025_cstack
    rx1025_start = self."!cursor_start_all"()
    set rx1025_cur, rx1025_start[0]
    set rx1025_tgt, rx1025_start[1]
    set rx1025_pos, rx1025_start[2]
    set rx1025_curclass, rx1025_start[3]
    set rx1025_bstack, rx1025_start[4]
    set $I19, rx1025_start[5]
    store_lex unicode:"$\x{a2}", rx1025_cur
    length rx1025_eos, rx1025_tgt
    eq $I19, 1, rx1025_restart2372
    gt rx1025_pos, rx1025_eos, rx1025_fail2373
    repr_get_attr_int $I11, self, rx1025_curclass, "$!from"
    ne $I11, -1, rxscan1026_done2379
    goto rxscan1026_scan2378
  rxscan1026_loop2377:
    inc rx1025_pos
    gt rx1025_pos, rx1025_eos, rx1025_fail2373
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!from", rx1025_pos
  rxscan1026_scan2378:
    nqp_rxmark rx1025_bstack, rxscan1026_loop2377, rx1025_pos, 0
  rxscan1026_done2379:
    nqp_rxmark rx1025_bstack, rxquantg1027_done2381, rx1025_pos, 0
  rxquantg1027_loop2380:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1028_pass2382
  rxsubrule1028_back2383:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1028_pass2382:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1028_back2383
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
  rxquantg1027_done2381:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1029_pass2384
  rxsubrule1029_back2385:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1029_pass2384:
    rx1025_cstack = rx1025_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1029_back2385
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    store_lex unicode:"$\x{a2}", rx1025_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1030_pass2386
  rxsubrule1030_back2387:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1030_pass2386:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "variable")
    set_addr $I11, rxsubrule1030_back2387
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1031_pass2388
  rxsubrule1031_back2389:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1031_pass2388:
    rx1025_cstack = rx1025_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1031_back2389
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    store_lex unicode:"$\x{a2}", rx1025_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_428_1382959278.72036' 
    capture_lex $P5004
    $P5005 = $P5004()
    nqp_rxmark rx1025_bstack, rxquantg1032_done2391, rx1025_pos, 0
  rxquantg1032_loop2390:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1033_pass2392
  rxsubrule1033_back2393:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1033_pass2392:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1033_back2393
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    nqp_rxmark rx1025_bstack, rxquantg1032_done2391, rx1025_pos, rx1025_rep
    goto rxquantg1032_loop2390
  rxquantg1032_done2391:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
    goto rxsubrule1034_pass2394
  rxsubrule1034_back2395:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2373
  rxsubrule1034_pass2394:
    rx1025_cstack = rx1025_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1034_back2395
    push rx1025_bstack, $I11
    push rx1025_bstack, 0
    push rx1025_bstack, rx1025_pos
    elements $I11, rx1025_cstack
    push rx1025_bstack, $I11
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    rx1025_cur."!cursor_pass"(rx1025_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1025_cur)
  rx1025_restart2372:
    repr_get_attr_obj rx1025_cstack, rx1025_cur, rx1025_curclass, "$!cstack"
  rx1025_fail2373:
    unless rx1025_bstack, rx1025_done2371
    pop $I19, rx1025_bstack
    if_null rx1025_cstack, rx1025_cstack_done2376
    unless rx1025_cstack, rx1025_cstack_done2376
    dec $I19
    set $P11, rx1025_cstack[$I19]
  rx1025_cstack_done2376:
    pop rx1025_rep, rx1025_bstack
    pop rx1025_pos, rx1025_bstack
    pop $I19, rx1025_bstack
    lt rx1025_pos, -1, rx1025_done2371
    lt rx1025_pos, 0, rx1025_fail2373
    eq $I19, 0, rx1025_fail2373
    nqp_islist $I20, rx1025_cstack
    unless $I20, rx1025_jump2374
    elements $I18, rx1025_bstack
    le $I18, 0, rx1025_cut2375
    dec $I18
    set $I18, rx1025_bstack[$I18]
  rx1025_cut2375:
    assign rx1025_cstack, $I18
  rx1025_jump2374:
    jump $I19
  rx1025_done2371:
    rx1025_cur."!cursor_fail"()
    .return (rx1025_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1382959278.72036") :anon :lex :outer("cuid_123_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1215

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_124_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1219
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_125_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1220
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1035_start
    .local string rx1035_tgt
    .local int rx1035_pos
    .local int rx1035_off
    .local int rx1035_eos
    .local int rx1035_rep
    .local pmc rx1035_cur
    .local pmc rx1035_curclass
    .local pmc rx1035_bstack
    .local pmc rx1035_cstack
    rx1035_start = self."!cursor_start_all"()
    set rx1035_cur, rx1035_start[0]
    set rx1035_tgt, rx1035_start[1]
    set rx1035_pos, rx1035_start[2]
    set rx1035_curclass, rx1035_start[3]
    set rx1035_bstack, rx1035_start[4]
    set $I19, rx1035_start[5]
    store_lex unicode:"$\x{a2}", rx1035_cur
    length rx1035_eos, rx1035_tgt
    eq $I19, 1, rx1035_restart2398
    gt rx1035_pos, rx1035_eos, rx1035_fail2399
    repr_get_attr_int $I11, self, rx1035_curclass, "$!from"
    ne $I11, -1, rxscan1036_done2405
    goto rxscan1036_scan2404
  rxscan1036_loop2403:
    inc rx1035_pos
    gt rx1035_pos, rx1035_eos, rx1035_fail2399
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!from", rx1035_pos
  rxscan1036_scan2404:
    nqp_rxmark rx1035_bstack, rxscan1036_loop2403, rx1035_pos, 0
  rxscan1036_done2405:
    nqp_rxmark rx1035_bstack, rxcap1037_fail2407, rx1035_pos, 0
    add $I11, rx1035_pos, 3
    gt $I11, rx1035_eos, rx1035_fail2399
    substr $S10, rx1035_tgt, rx1035_pos, 3
    ne $S10, ucs4:"sub", rx1035_fail2399
    add rx1035_pos, 3
    nqp_rxpeek $I19, rx1035_bstack, rxcap1037_fail2407
    inc $I19
    set $I11, rx1035_bstack[$I19]
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1035_pos)
    rx1035_cstack = rx1035_cur."!cursor_capture"($P11, "sym")
    goto rxcap1037_done2406
  rxcap1037_fail2407:
    goto rx1035_fail2399
  rxcap1037_done2406:
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
    goto rxsubrule1038_pass2408
  rxsubrule1038_back2409:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
  rxsubrule1038_pass2408:
    rx1035_cstack = rx1035_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1038_back2409
    push rx1035_bstack, $I11
    push rx1035_bstack, 0
    push rx1035_bstack, rx1035_pos
    elements $I11, rx1035_cstack
    push rx1035_bstack, $I11
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
    goto rxsubrule1039_pass2410
  rxsubrule1039_back2411:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
  rxsubrule1039_pass2410:
    rx1035_cstack = rx1035_cur."!cursor_capture"($P11, "routine_def")
    set_addr $I11, rxsubrule1039_back2411
    push rx1035_bstack, $I11
    push rx1035_bstack, 0
    push rx1035_bstack, rx1035_pos
    elements $I11, rx1035_cstack
    push rx1035_bstack, $I11
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
    goto rxsubrule1040_pass2412
  rxsubrule1040_back2413:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2399
  rxsubrule1040_pass2412:
    rx1035_cstack = rx1035_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1040_back2413
    push rx1035_bstack, $I11
    push rx1035_bstack, 0
    push rx1035_bstack, rx1035_pos
    elements $I11, rx1035_cstack
    push rx1035_bstack, $I11
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    rx1035_cur."!cursor_pass"(rx1035_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1035_cur)
  rx1035_restart2398:
    repr_get_attr_obj rx1035_cstack, rx1035_cur, rx1035_curclass, "$!cstack"
  rx1035_fail2399:
    unless rx1035_bstack, rx1035_done2397
    pop $I19, rx1035_bstack
    if_null rx1035_cstack, rx1035_cstack_done2402
    unless rx1035_cstack, rx1035_cstack_done2402
    dec $I19
    set $P11, rx1035_cstack[$I19]
  rx1035_cstack_done2402:
    pop rx1035_rep, rx1035_bstack
    pop rx1035_pos, rx1035_bstack
    pop $I19, rx1035_bstack
    lt rx1035_pos, -1, rx1035_done2397
    lt rx1035_pos, 0, rx1035_fail2399
    eq $I19, 0, rx1035_fail2399
    nqp_islist $I20, rx1035_cstack
    unless $I20, rx1035_jump2400
    elements $I18, rx1035_bstack
    le $I18, 0, rx1035_cut2401
    dec $I18
    set $I18, rx1035_bstack[$I18]
  rx1035_cut2401:
    assign rx1035_cstack, $I18
  rx1035_jump2400:
    jump $I19
  rx1035_done2397:
    rx1035_cur."!cursor_fail"()
    .return (rx1035_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_126_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1221
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1041_start
    .local string rx1041_tgt
    .local int rx1041_pos
    .local int rx1041_off
    .local int rx1041_eos
    .local int rx1041_rep
    .local pmc rx1041_cur
    .local pmc rx1041_curclass
    .local pmc rx1041_bstack
    .local pmc rx1041_cstack
    rx1041_start = self."!cursor_start_all"()
    set rx1041_cur, rx1041_start[0]
    set rx1041_tgt, rx1041_start[1]
    set rx1041_pos, rx1041_start[2]
    set rx1041_curclass, rx1041_start[3]
    set rx1041_bstack, rx1041_start[4]
    set $I19, rx1041_start[5]
    store_lex unicode:"$\x{a2}", rx1041_cur
    length rx1041_eos, rx1041_tgt
    eq $I19, 1, rx1041_restart2416
    gt rx1041_pos, rx1041_eos, rx1041_fail2417
    repr_get_attr_int $I11, self, rx1041_curclass, "$!from"
    ne $I11, -1, rxscan1042_done2423
    goto rxscan1042_scan2422
  rxscan1042_loop2421:
    inc rx1041_pos
    gt rx1041_pos, rx1041_eos, rx1041_fail2417
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!from", rx1041_pos
  rxscan1042_scan2422:
    nqp_rxmark rx1041_bstack, rxscan1042_loop2421, rx1041_pos, 0
  rxscan1042_done2423:
    nqp_rxmark rx1041_bstack, rxcap1043_fail2425, rx1041_pos, 0
    add $I11, rx1041_pos, 6
    gt $I11, rx1041_eos, rx1041_fail2417
    substr $S10, rx1041_tgt, rx1041_pos, 6
    ne $S10, ucs4:"method", rx1041_fail2417
    add rx1041_pos, 6
    nqp_rxpeek $I19, rx1041_bstack, rxcap1043_fail2425
    inc $I19
    set $I11, rx1041_bstack[$I19]
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1041_pos)
    rx1041_cstack = rx1041_cur."!cursor_capture"($P11, "sym")
    goto rxcap1043_done2424
  rxcap1043_fail2425:
    goto rx1041_fail2417
  rxcap1043_done2424:
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
    goto rxsubrule1044_pass2426
  rxsubrule1044_back2427:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
  rxsubrule1044_pass2426:
    rx1041_cstack = rx1041_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1044_back2427
    push rx1041_bstack, $I11
    push rx1041_bstack, 0
    push rx1041_bstack, rx1041_pos
    elements $I11, rx1041_cstack
    push rx1041_bstack, $I11
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
    goto rxsubrule1045_pass2428
  rxsubrule1045_back2429:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
  rxsubrule1045_pass2428:
    rx1041_cstack = rx1041_cur."!cursor_capture"($P11, "method_def")
    set_addr $I11, rxsubrule1045_back2429
    push rx1041_bstack, $I11
    push rx1041_bstack, 0
    push rx1041_bstack, rx1041_pos
    elements $I11, rx1041_cstack
    push rx1041_bstack, $I11
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
    goto rxsubrule1046_pass2430
  rxsubrule1046_back2431:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2417
  rxsubrule1046_pass2430:
    rx1041_cstack = rx1041_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1046_back2431
    push rx1041_bstack, $I11
    push rx1041_bstack, 0
    push rx1041_bstack, rx1041_pos
    elements $I11, rx1041_cstack
    push rx1041_bstack, $I11
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    rx1041_cur."!cursor_pass"(rx1041_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1041_cur)
  rx1041_restart2416:
    repr_get_attr_obj rx1041_cstack, rx1041_cur, rx1041_curclass, "$!cstack"
  rx1041_fail2417:
    unless rx1041_bstack, rx1041_done2415
    pop $I19, rx1041_bstack
    if_null rx1041_cstack, rx1041_cstack_done2420
    unless rx1041_cstack, rx1041_cstack_done2420
    dec $I19
    set $P11, rx1041_cstack[$I19]
  rx1041_cstack_done2420:
    pop rx1041_rep, rx1041_bstack
    pop rx1041_pos, rx1041_bstack
    pop $I19, rx1041_bstack
    lt rx1041_pos, -1, rx1041_done2415
    lt rx1041_pos, 0, rx1041_fail2417
    eq $I19, 0, rx1041_fail2417
    nqp_islist $I20, rx1041_cstack
    unless $I20, rx1041_jump2418
    elements $I18, rx1041_bstack
    le $I18, 0, rx1041_cut2419
    dec $I18
    set $I18, rx1041_bstack[$I18]
  rx1041_cut2419:
    assign rx1041_cstack, $I18
  rx1041_jump2418:
    jump $I19
  rx1041_done2415:
    rx1041_cur."!cursor_fail"()
    .return (rx1041_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_127_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1223
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1047_start
    .local string rx1047_tgt
    .local int rx1047_pos
    .local int rx1047_off
    .local int rx1047_eos
    .local int rx1047_rep
    .local pmc rx1047_cur
    .local pmc rx1047_curclass
    .local pmc rx1047_bstack
    .local pmc rx1047_cstack
    rx1047_start = self."!cursor_start_all"()
    set rx1047_cur, rx1047_start[0]
    set rx1047_tgt, rx1047_start[1]
    set rx1047_pos, rx1047_start[2]
    set rx1047_curclass, rx1047_start[3]
    set rx1047_bstack, rx1047_start[4]
    set $I19, rx1047_start[5]
    store_lex unicode:"$\x{a2}", rx1047_cur
    length rx1047_eos, rx1047_tgt
    eq $I19, 1, rx1047_restart2434
    gt rx1047_pos, rx1047_eos, rx1047_fail2435
    repr_get_attr_int $I11, self, rx1047_curclass, "$!from"
    ne $I11, -1, rxscan1048_done2441
    goto rxscan1048_scan2440
  rxscan1048_loop2439:
    inc rx1047_pos
    gt rx1047_pos, rx1047_eos, rx1047_fail2435
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!from", rx1047_pos
  rxscan1048_scan2440:
    nqp_rxmark rx1047_bstack, rxscan1048_loop2439, rx1047_pos, 0
  rxscan1048_done2441:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    store_lex unicode:"$\x{a2}", rx1047_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx1047_bstack, rxquantg1049_done2443, rx1047_pos, 0
  rxquantg1049_loop2442:
    nqp_rxmark rx1047_bstack, rxcap1050_fail2445, rx1047_pos, 0
    nqp_rxmark rx1047_bstack, rxquantr1051_done2447, rx1047_pos, 0
  rxquantr1051_loop2446:
    add $I11, rx1047_pos, 1
    gt $I11, rx1047_eos, rx1047_fail2435
    substr $S10, rx1047_tgt, rx1047_pos, 1
    ne $S10, ucs4:"&", rx1047_fail2435
    add rx1047_pos, 1
    nqp_rxpeek $I19, rx1047_bstack, rxquantr1051_done2447
    inc $I19
    inc $I19
    set rx1047_rep, rx1047_bstack[$I19]
    nqp_rxcommit rx1047_bstack, rxquantr1051_done2447
    inc rx1047_rep
  rxquantr1051_done2447:
    nqp_rxpeek $I19, rx1047_bstack, rxcap1050_fail2445
    inc $I19
    set $I11, rx1047_bstack[$I19]
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1047_pos)
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1050_done2444
  rxcap1050_fail2445:
    goto rx1047_fail2435
  rxcap1050_done2444:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1052_pass2448
  rxsubrule1052_back2449:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1052_pass2448:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1052_back2449
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1053_pass2450
  rxsubrule1053_back2451:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1053_pass2450:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1053_back2451
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  rxquantg1049_done2443:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1054_pass2452
  rxsubrule1054_back2453:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1054_pass2452:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1054_back2453
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1055_pass2454
  rxsubrule1055_back2455:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1055_pass2454:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1055_back2455
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1056_pass2456
  rxsubrule1056_back2457:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1056_pass2456:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1056_back2457
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1057_02459:
    nqp_rxmark rx1047_bstack, alt1057_12473, rx1047_pos, 0
    add $I11, rx1047_pos, 1
    gt $I11, rx1047_eos, rx1047_fail2435
    substr $S10, rx1047_tgt, rx1047_pos, 1
    ne $S10, ucs4:"(", rx1047_fail2435
    add rx1047_pos, 1
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1058_pass2460
  rxsubrule1058_back2461:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1058_pass2460:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1058_back2461
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1059_pass2462
  rxsubrule1059_back2463:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1059_pass2462:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1059_back2463
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1060_pass2464
  rxsubrule1060_back2465:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1060_pass2464:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1060_back2465
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1061_02467:
    nqp_rxmark rx1047_bstack, alt1061_12470, rx1047_pos, 0
    add $I11, rx1047_pos, 1
    gt $I11, rx1047_eos, rx1047_fail2435
    substr $S10, rx1047_tgt, rx1047_pos, 1
    ne $S10, ucs4:")", rx1047_fail2435
    add rx1047_pos, 1
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1062_pass2468
  rxsubrule1062_back2469:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1062_pass2468:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1062_back2469
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    goto alt1061_end2466
  alt1061_12470:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1063_pass2471
  rxsubrule1063_back2472:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1063_pass2471:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1063_back2472
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1061_end2466:
    goto alt1057_end2458
  alt1057_12473:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1064_pass2474
  rxsubrule1064_back2475:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1064_pass2474:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1064_back2475
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1065_pass2476
  rxsubrule1065_back2477:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1065_pass2476:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1065_back2477
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
  alt1057_end2458:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1066_pass2478
  rxsubrule1066_back2479:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1066_pass2478:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1066_back2479
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    nqp_rxmark rx1047_bstack, rxquantg1067_done2481, rx1047_pos, 0
  rxquantg1067_loop2480:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1068_pass2482
  rxsubrule1068_back2483:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1068_pass2482:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1068_back2483
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    nqp_rxmark rx1047_bstack, rxquantg1067_done2481, rx1047_pos, rx1047_rep
    goto rxquantg1067_loop2480
  rxquantg1067_done2481:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1069_pass2484
  rxsubrule1069_back2485:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1069_pass2484:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1069_back2485
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1070_02487
    nqp_push_label $P11, alt1070_12492
    nqp_rxmark rx1047_bstack, alt1070_end2486, -1, 0
    rx1047_cur."!alt"(rx1047_pos, "alt_nfa__23_1382959281.51274", $P11)
    goto rx1047_fail2435
  alt1070_02487:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1071_pass2488
  rxsubrule1071_back2489:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1071_pass2488:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "onlystar")
    set_addr $I11, rxsubrule1071_back2489
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1072_pass2490
  rxsubrule1072_back2491:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1072_pass2490:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1072_back2491
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    goto alt1070_end2486
  alt1070_12492:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1073_pass2493
  rxsubrule1073_back2494:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1073_pass2493:
    rx1047_cstack = rx1047_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule1073_back2494
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1074_pass2495
  rxsubrule1074_back2496:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1074_pass2495:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1074_back2496
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    goto alt1070_end2486
  alt1070_end2486:
    repr_bind_attr_int rx1047_cur, rx1047_curclass, "$!pos", rx1047_pos
    $P11 = rx1047_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
    goto rxsubrule1075_pass2497
  rxsubrule1075_back2498:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1047_curclass, "$!pos"
    lt $I11, 0, rx1047_fail2435
  rxsubrule1075_pass2497:
    rx1047_cstack = rx1047_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1075_back2498
    push rx1047_bstack, $I11
    push rx1047_bstack, 0
    push rx1047_bstack, rx1047_pos
    elements $I11, rx1047_cstack
    push rx1047_bstack, $I11
    repr_get_attr_int rx1047_pos, $P11, rx1047_curclass, "$!pos"
    rx1047_cur."!cursor_pass"(rx1047_pos, "routine_def", 'backtrack'=>1)
    .return (rx1047_cur)
  rx1047_restart2434:
    repr_get_attr_obj rx1047_cstack, rx1047_cur, rx1047_curclass, "$!cstack"
  rx1047_fail2435:
    unless rx1047_bstack, rx1047_done2433
    pop $I19, rx1047_bstack
    if_null rx1047_cstack, rx1047_cstack_done2438
    unless rx1047_cstack, rx1047_cstack_done2438
    dec $I19
    set $P11, rx1047_cstack[$I19]
  rx1047_cstack_done2438:
    pop rx1047_rep, rx1047_bstack
    pop rx1047_pos, rx1047_bstack
    pop $I19, rx1047_bstack
    lt rx1047_pos, -1, rx1047_done2433
    lt rx1047_pos, 0, rx1047_fail2435
    eq $I19, 0, rx1047_fail2435
    nqp_islist $I20, rx1047_cstack
    unless $I20, rx1047_jump2436
    elements $I18, rx1047_bstack
    le $I18, 0, rx1047_cut2437
    dec $I18
    set $I18, rx1047_bstack[$I18]
  rx1047_cut2437:
    assign rx1047_cstack, $I18
  rx1047_jump2436:
    jump $I19
  rx1047_done2433:
    rx1047_cur."!cursor_fail"()
    .return (rx1047_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_128_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1236
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_429_1382959278.72036' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1076_start
    .local string rx1076_tgt
    .local int rx1076_pos
    .local int rx1076_off
    .local int rx1076_eos
    .local int rx1076_rep
    .local pmc rx1076_cur
    .local pmc rx1076_curclass
    .local pmc rx1076_bstack
    .local pmc rx1076_cstack
    rx1076_start = self."!cursor_start_all"()
    set rx1076_cur, rx1076_start[0]
    set rx1076_tgt, rx1076_start[1]
    set rx1076_pos, rx1076_start[2]
    set rx1076_curclass, rx1076_start[3]
    set rx1076_bstack, rx1076_start[4]
    set $I19, rx1076_start[5]
    store_lex unicode:"$\x{a2}", rx1076_cur
    length rx1076_eos, rx1076_tgt
    eq $I19, 1, rx1076_restart2501
    gt rx1076_pos, rx1076_eos, rx1076_fail2502
    repr_get_attr_int $I11, self, rx1076_curclass, "$!from"
    ne $I11, -1, rxscan1077_done2508
    goto rxscan1077_scan2507
  rxscan1077_loop2506:
    inc rx1076_pos
    gt rx1076_pos, rx1076_eos, rx1076_fail2502
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!from", rx1076_pos
  rxscan1077_scan2507:
    nqp_rxmark rx1076_bstack, rxscan1077_loop2506, rx1076_pos, 0
  rxscan1077_done2508:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    store_lex unicode:"$\x{a2}", rx1076_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    store_lex unicode:"$\x{a2}", rx1076_cur
    box $P5004, 1
    set $P102, $P5004
  alt1078_02510:
    nqp_rxmark rx1076_bstack, alt1078_12519, rx1076_pos, 0
    add $I11, rx1076_pos, 3
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 3
    ne $S10, ucs4:"::(", rx1076_fail2502
    add rx1076_pos, 3
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1079_pass2511
  rxsubrule1079_back2512:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1079_pass2511:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1079_back2512
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1080_pass2513
  rxsubrule1080_back2514:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1080_pass2513:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1080_back2514
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1081_pass2515
  rxsubrule1081_back2516:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1081_pass2515:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1081_back2516
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:")", rx1076_fail2502
    add rx1076_pos, 1
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1082_pass2517
  rxsubrule1082_back2518:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1082_pass2517:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1082_back2518
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1078_end2509
  alt1078_12519:
    nqp_rxmark rx1076_bstack, rxcap1083_fail2521, rx1076_pos, 0
    nqp_rxmark rx1076_bstack, rxquantr1084_done2523, rx1076_pos, 0
  rxquantr1084_loop2522:
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:"!", rx1076_fail2502
    add rx1076_pos, 1
    nqp_rxpeek $I19, rx1076_bstack, rxquantr1084_done2523
    inc $I19
    inc $I19
    set rx1076_rep, rx1076_bstack[$I19]
    nqp_rxcommit rx1076_bstack, rxquantr1084_done2523
    inc rx1076_rep
  rxquantr1084_done2523:
    nqp_rxpeek $I19, rx1076_bstack, rxcap1083_fail2521
    inc $I19
    set $I11, rx1076_bstack[$I19]
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1076_pos)
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "private")
    goto rxcap1083_done2520
  rxcap1083_fail2521:
    goto rx1076_fail2502
  rxcap1083_done2520:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1085_pass2524
  rxsubrule1085_back2525:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1085_pass2524:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1085_back2525
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    nqp_rxmark rx1076_bstack, rxquantg1086_done2527, rx1076_pos, 0
  rxquantg1086_loop2526:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1087_pass2528
  rxsubrule1087_back2529:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1087_pass2528:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1087_back2529
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  rxquantg1086_done2527:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1088_pass2530
  rxsubrule1088_back2531:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1088_pass2530:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1088_back2531
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1078_end2509:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1089_pass2532
  rxsubrule1089_back2533:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1089_pass2532:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1089_back2533
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1090_pass2534
  rxsubrule1090_back2535:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1090_pass2534:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1090_back2535
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1091_pass2536
  rxsubrule1091_back2537:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1091_pass2536:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1091_back2537
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1092_02539:
    nqp_rxmark rx1076_bstack, alt1092_12553, rx1076_pos, 0
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:"(", rx1076_fail2502
    add rx1076_pos, 1
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1093_pass2540
  rxsubrule1093_back2541:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1093_pass2540:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1093_back2541
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1094_pass2542
  rxsubrule1094_back2543:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1094_pass2542:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1094_back2543
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1095_pass2544
  rxsubrule1095_back2545:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1095_pass2544:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1095_back2545
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1096_02547:
    nqp_rxmark rx1076_bstack, alt1096_12550, rx1076_pos, 0
    add $I11, rx1076_pos, 1
    gt $I11, rx1076_eos, rx1076_fail2502
    substr $S10, rx1076_tgt, rx1076_pos, 1
    ne $S10, ucs4:")", rx1076_fail2502
    add rx1076_pos, 1
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1097_pass2548
  rxsubrule1097_back2549:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1097_pass2548:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1097_back2549
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1096_end2546
  alt1096_12550:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1098_pass2551
  rxsubrule1098_back2552:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1098_pass2551:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1098_back2552
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1096_end2546:
    goto alt1092_end2538
  alt1092_12553:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1099_pass2554
  rxsubrule1099_back2555:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1099_pass2554:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1099_back2555
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1100_pass2556
  rxsubrule1100_back2557:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1100_pass2556:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1100_back2557
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
  alt1092_end2538:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1101_pass2558
  rxsubrule1101_back2559:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1101_pass2558:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1101_back2559
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    store_lex unicode:"$\x{a2}", rx1076_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_429_1382959278.72036' 
    capture_lex $P5006
    $P5007 = $P5006()
    nqp_rxmark rx1076_bstack, rxquantg1102_done2561, rx1076_pos, 0
  rxquantg1102_loop2560:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1103_pass2562
  rxsubrule1103_back2563:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1103_pass2562:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1103_back2563
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    nqp_rxmark rx1076_bstack, rxquantg1102_done2561, rx1076_pos, rx1076_rep
    goto rxquantg1102_loop2560
  rxquantg1102_done2561:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1104_pass2564
  rxsubrule1104_back2565:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1104_pass2564:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1104_back2565
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1105_02567
    nqp_push_label $P11, alt1105_12572
    nqp_rxmark rx1076_bstack, alt1105_end2566, -1, 0
    rx1076_cur."!alt"(rx1076_pos, "alt_nfa__24_1382959281.55195", $P11)
    goto rx1076_fail2502
  alt1105_02567:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1106_pass2568
  rxsubrule1106_back2569:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1106_pass2568:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "onlystar")
    set_addr $I11, rxsubrule1106_back2569
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1107_pass2570
  rxsubrule1107_back2571:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1107_pass2570:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1107_back2571
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1105_end2566
  alt1105_12572:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1108_pass2573
  rxsubrule1108_back2574:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1108_pass2573:
    rx1076_cstack = rx1076_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule1108_back2574
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1109_pass2575
  rxsubrule1109_back2576:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1109_pass2575:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1109_back2576
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    goto alt1105_end2566
  alt1105_end2566:
    repr_bind_attr_int rx1076_cur, rx1076_curclass, "$!pos", rx1076_pos
    $P11 = rx1076_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
    goto rxsubrule1110_pass2577
  rxsubrule1110_back2578:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1076_curclass, "$!pos"
    lt $I11, 0, rx1076_fail2502
  rxsubrule1110_pass2577:
    rx1076_cstack = rx1076_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1110_back2578
    push rx1076_bstack, $I11
    push rx1076_bstack, 0
    push rx1076_bstack, rx1076_pos
    elements $I11, rx1076_cstack
    push rx1076_bstack, $I11
    repr_get_attr_int rx1076_pos, $P11, rx1076_curclass, "$!pos"
    rx1076_cur."!cursor_pass"(rx1076_pos, "method_def", 'backtrack'=>1)
    .return (rx1076_cur)
  rx1076_restart2501:
    repr_get_attr_obj rx1076_cstack, rx1076_cur, rx1076_curclass, "$!cstack"
  rx1076_fail2502:
    unless rx1076_bstack, rx1076_done2500
    pop $I19, rx1076_bstack
    if_null rx1076_cstack, rx1076_cstack_done2505
    unless rx1076_cstack, rx1076_cstack_done2505
    dec $I19
    set $P11, rx1076_cstack[$I19]
  rx1076_cstack_done2505:
    pop rx1076_rep, rx1076_bstack
    pop rx1076_pos, rx1076_bstack
    pop $I19, rx1076_bstack
    lt rx1076_pos, -1, rx1076_done2500
    lt rx1076_pos, 0, rx1076_fail2502
    eq $I19, 0, rx1076_fail2502
    nqp_islist $I20, rx1076_cstack
    unless $I20, rx1076_jump2503
    elements $I18, rx1076_bstack
    le $I18, 0, rx1076_cut2504
    dec $I18
    set $I18, rx1076_bstack[$I18]
  rx1076_cut2504:
    assign rx1076_cstack, $I18
  rx1076_jump2503:
    jump $I19
  rx1076_done2500:
    rx1076_cur."!cursor_fail"()
    .return (rx1076_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1382959278.72036") :anon :lex :outer("cuid_128_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1246

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_129_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1254
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_430_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1111_start
    .local string rx1111_tgt
    .local int rx1111_pos
    .local int rx1111_off
    .local int rx1111_eos
    .local int rx1111_rep
    .local pmc rx1111_cur
    .local pmc rx1111_curclass
    .local pmc rx1111_bstack
    .local pmc rx1111_cstack
    rx1111_start = self."!cursor_start_all"()
    set rx1111_cur, rx1111_start[0]
    set rx1111_tgt, rx1111_start[1]
    set rx1111_pos, rx1111_start[2]
    set rx1111_curclass, rx1111_start[3]
    set rx1111_bstack, rx1111_start[4]
    set $I19, rx1111_start[5]
    store_lex unicode:"$\x{a2}", rx1111_cur
    length rx1111_eos, rx1111_tgt
    eq $I19, 1, rx1111_restart2581
    gt rx1111_pos, rx1111_eos, rx1111_fail2582
    repr_get_attr_int $I11, self, rx1111_curclass, "$!from"
    ne $I11, -1, rxscan1112_done2588
    goto rxscan1112_scan2587
  rxscan1112_loop2586:
    inc rx1111_pos
    gt rx1111_pos, rx1111_eos, rx1111_fail2582
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!from", rx1111_pos
  rxscan1112_scan2587:
    nqp_rxmark rx1111_bstack, rxscan1112_loop2586, rx1111_pos, 0
  rxscan1112_done2588:
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    store_lex unicode:"$\x{a2}", rx1111_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_430_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1111_fail2582
    add $I11, rx1111_pos, 1
    gt $I11, rx1111_eos, rx1111_fail2582
    substr $S10, rx1111_tgt, rx1111_pos, 1
    ne $S10, ucs4:"{", rx1111_fail2582
    add rx1111_pos, 1
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_get_attr_int rx1111_pos, $P11, rx1111_curclass, "$!pos"
    add $I11, rx1111_pos, 1
    gt $I11, rx1111_eos, rx1111_fail2582
    substr $S10, rx1111_tgt, rx1111_pos, 1
    ne $S10, ucs4:"*", rx1111_fail2582
    add rx1111_pos, 1
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_get_attr_int rx1111_pos, $P11, rx1111_curclass, "$!pos"
    add $I11, rx1111_pos, 1
    gt $I11, rx1111_eos, rx1111_fail2582
    substr $S10, rx1111_tgt, rx1111_pos, 1
    ne $S10, ucs4:"}", rx1111_fail2582
    add rx1111_pos, 1
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_bind_attr_int rx1111_cur, rx1111_curclass, "$!pos", rx1111_pos
    $P11 = rx1111_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1111_curclass, "$!pos"
    lt $I11, 0, rx1111_fail2582
    repr_get_attr_int rx1111_pos, $P11, rx1111_curclass, "$!pos"
    rx1111_cur."!cursor_pass"(rx1111_pos, "onlystar", 'backtrack'=>1)
    .return (rx1111_cur)
  rx1111_restart2581:
    repr_get_attr_obj rx1111_cstack, rx1111_cur, rx1111_curclass, "$!cstack"
  rx1111_fail2582:
    unless rx1111_bstack, rx1111_done2580
    pop $I19, rx1111_bstack
    if_null rx1111_cstack, rx1111_cstack_done2585
    unless rx1111_cstack, rx1111_cstack_done2585
    dec $I19
    set $P11, rx1111_cstack[$I19]
  rx1111_cstack_done2585:
    pop rx1111_rep, rx1111_bstack
    pop rx1111_pos, rx1111_bstack
    pop $I19, rx1111_bstack
    lt rx1111_pos, -1, rx1111_done2580
    lt rx1111_pos, 0, rx1111_fail2582
    eq $I19, 0, rx1111_fail2582
    nqp_islist $I20, rx1111_cstack
    unless $I20, rx1111_jump2583
    elements $I18, rx1111_bstack
    le $I18, 0, rx1111_cut2584
    dec $I18
    set $I18, rx1111_bstack[$I18]
  rx1111_cut2584:
    assign rx1111_cstack, $I18
  rx1111_jump2583:
    jump $I19
  rx1111_done2580:
    rx1111_cur."!cursor_fail"()
    .return (rx1111_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_430_1382959278.72036") :anon :lex :outer("cuid_129_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1255
    .local pmc fb_tmp_173 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2589
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_173, $P5002
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if1113_else2590 
    set $P5004, fb_tmp_173["$MULTINESS"]
    set $P5006, $P5004
    goto if1113_end2591
  if1113_else2590:
    null $P5005
    set $P5006, $P5005
  if1113_end2591:
    unless_null $P5006, vivi_11142592
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_11142592:
    unless_null $P5006, vivi_11152593
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_11152593:
    set $P5001, $P5006
  fallback2589:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_130_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1261
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_131_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1262
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1119_start
    .local string rx1119_tgt
    .local int rx1119_pos
    .local int rx1119_off
    .local int rx1119_eos
    .local int rx1119_rep
    .local pmc rx1119_cur
    .local pmc rx1119_curclass
    .local pmc rx1119_bstack
    .local pmc rx1119_cstack
    rx1119_start = self."!cursor_start_all"()
    set rx1119_cur, rx1119_start[0]
    set rx1119_tgt, rx1119_start[1]
    set rx1119_pos, rx1119_start[2]
    set rx1119_curclass, rx1119_start[3]
    set rx1119_bstack, rx1119_start[4]
    set $I19, rx1119_start[5]
    store_lex unicode:"$\x{a2}", rx1119_cur
    length rx1119_eos, rx1119_tgt
    eq $I19, 1, rx1119_restart2599
    gt rx1119_pos, rx1119_eos, rx1119_fail2600
    repr_get_attr_int $I11, self, rx1119_curclass, "$!from"
    ne $I11, -1, rxscan1120_done2606
    goto rxscan1120_scan2605
  rxscan1120_loop2604:
    inc rx1119_pos
    gt rx1119_pos, rx1119_eos, rx1119_fail2600
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!from", rx1119_pos
  rxscan1120_scan2605:
    nqp_rxmark rx1119_bstack, rxscan1120_loop2604, rx1119_pos, 0
  rxscan1120_done2606:
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    store_lex unicode:"$\x{a2}", rx1119_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1119_bstack, rxcap1121_fail2608, rx1119_pos, 0
    add $I11, rx1119_pos, 5
    gt $I11, rx1119_eos, rx1119_fail2600
    substr $S10, rx1119_tgt, rx1119_pos, 5
    ne $S10, ucs4:"multi", rx1119_fail2600
    add rx1119_pos, 5
    nqp_rxpeek $I19, rx1119_bstack, rxcap1121_fail2608
    inc $I19
    set $I11, rx1119_bstack[$I19]
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1119_pos)
    rx1119_cstack = rx1119_cur."!cursor_capture"($P11, "sym")
    goto rxcap1121_done2607
  rxcap1121_fail2608:
    goto rx1119_fail2600
  rxcap1121_done2607:
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
  alt1123_02611:
    nqp_rxmark rx1119_bstack, alt1123_12613, rx1119_pos, 0
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    nqp_rxmark rx1119_bstack, rxsubrule1124_pass2612, -1, 0
  rxsubrule1124_pass2612:
    rx1119_cstack = rx1119_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
    goto alt1123_end2610
  alt1123_12613:
    nqp_rxmark rx1119_bstack, alt1123_22615, rx1119_pos, 0
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    nqp_rxmark rx1119_bstack, rxsubrule1125_pass2614, -1, 0
  rxsubrule1125_pass2614:
    rx1119_cstack = rx1119_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
    goto alt1123_end2610
  alt1123_22615:
    repr_bind_attr_int rx1119_cur, rx1119_curclass, "$!pos", rx1119_pos
    $P11 = rx1119_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1119_curclass, "$!pos"
    lt $I11, 0, rx1119_fail2600
    repr_get_attr_int rx1119_pos, $P11, rx1119_curclass, "$!pos"
  alt1123_end2610:
    rx1119_cur."!cursor_pass"(rx1119_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1119_cur)
  rx1119_restart2599:
    repr_get_attr_obj rx1119_cstack, rx1119_cur, rx1119_curclass, "$!cstack"
  rx1119_fail2600:
    unless rx1119_bstack, rx1119_done2598
    pop $I19, rx1119_bstack
    if_null rx1119_cstack, rx1119_cstack_done2603
    unless rx1119_cstack, rx1119_cstack_done2603
    dec $I19
    set $P11, rx1119_cstack[$I19]
  rx1119_cstack_done2603:
    pop rx1119_rep, rx1119_bstack
    pop rx1119_pos, rx1119_bstack
    pop $I19, rx1119_bstack
    lt rx1119_pos, -1, rx1119_done2598
    lt rx1119_pos, 0, rx1119_fail2600
    eq $I19, 0, rx1119_fail2600
    nqp_islist $I20, rx1119_cstack
    unless $I20, rx1119_jump2601
    elements $I18, rx1119_bstack
    le $I18, 0, rx1119_cut2602
    dec $I18
    set $I18, rx1119_bstack[$I18]
  rx1119_cut2602:
    assign rx1119_cstack, $I18
  rx1119_jump2601:
    jump $I19
  rx1119_done2598:
    rx1119_cur."!cursor_fail"()
    .return (rx1119_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_132_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1267
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1127_start
    .local string rx1127_tgt
    .local int rx1127_pos
    .local int rx1127_off
    .local int rx1127_eos
    .local int rx1127_rep
    .local pmc rx1127_cur
    .local pmc rx1127_curclass
    .local pmc rx1127_bstack
    .local pmc rx1127_cstack
    rx1127_start = self."!cursor_start_all"()
    set rx1127_cur, rx1127_start[0]
    set rx1127_tgt, rx1127_start[1]
    set rx1127_pos, rx1127_start[2]
    set rx1127_curclass, rx1127_start[3]
    set rx1127_bstack, rx1127_start[4]
    set $I19, rx1127_start[5]
    store_lex unicode:"$\x{a2}", rx1127_cur
    length rx1127_eos, rx1127_tgt
    eq $I19, 1, rx1127_restart2619
    gt rx1127_pos, rx1127_eos, rx1127_fail2620
    repr_get_attr_int $I11, self, rx1127_curclass, "$!from"
    ne $I11, -1, rxscan1128_done2626
    goto rxscan1128_scan2625
  rxscan1128_loop2624:
    inc rx1127_pos
    gt rx1127_pos, rx1127_eos, rx1127_fail2620
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!from", rx1127_pos
  rxscan1128_scan2625:
    nqp_rxmark rx1127_bstack, rxscan1128_loop2624, rx1127_pos, 0
  rxscan1128_done2626:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    store_lex unicode:"$\x{a2}", rx1127_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1127_bstack, rxcap1129_fail2628, rx1127_pos, 0
    add $I11, rx1127_pos, 5
    gt $I11, rx1127_eos, rx1127_fail2620
    substr $S10, rx1127_tgt, rx1127_pos, 5
    ne $S10, ucs4:"proto", rx1127_fail2620
    add rx1127_pos, 5
    nqp_rxpeek $I19, rx1127_bstack, rxcap1129_fail2628
    inc $I19
    set $I11, rx1127_bstack[$I19]
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1127_pos)
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "sym")
    goto rxcap1129_done2627
  rxcap1129_fail2628:
    goto rx1127_fail2620
  rxcap1129_done2627:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
  alt1131_02631:
    nqp_rxmark rx1127_bstack, alt1131_12633, rx1127_pos, 0
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    nqp_rxmark rx1127_bstack, rxsubrule1132_pass2632, -1, 0
  rxsubrule1132_pass2632:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    goto alt1131_end2630
  alt1131_12633:
    nqp_rxmark rx1127_bstack, alt1131_22635, rx1127_pos, 0
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    nqp_rxmark rx1127_bstack, rxsubrule1133_pass2634, -1, 0
  rxsubrule1133_pass2634:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    goto alt1131_end2630
  alt1131_22635:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2620
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
  alt1131_end2630:
    rx1127_cur."!cursor_pass"(rx1127_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1127_cur)
  rx1127_restart2619:
    repr_get_attr_obj rx1127_cstack, rx1127_cur, rx1127_curclass, "$!cstack"
  rx1127_fail2620:
    unless rx1127_bstack, rx1127_done2618
    pop $I19, rx1127_bstack
    if_null rx1127_cstack, rx1127_cstack_done2623
    unless rx1127_cstack, rx1127_cstack_done2623
    dec $I19
    set $P11, rx1127_cstack[$I19]
  rx1127_cstack_done2623:
    pop rx1127_rep, rx1127_bstack
    pop rx1127_pos, rx1127_bstack
    pop $I19, rx1127_bstack
    lt rx1127_pos, -1, rx1127_done2618
    lt rx1127_pos, 0, rx1127_fail2620
    eq $I19, 0, rx1127_fail2620
    nqp_islist $I20, rx1127_cstack
    unless $I20, rx1127_jump2621
    elements $I18, rx1127_bstack
    le $I18, 0, rx1127_cut2622
    dec $I18
    set $I18, rx1127_bstack[$I18]
  rx1127_cut2622:
    assign rx1127_cstack, $I18
  rx1127_jump2621:
    jump $I19
  rx1127_done2618:
    rx1127_cur."!cursor_fail"()
    .return (rx1127_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_133_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1272
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1135_start
    .local string rx1135_tgt
    .local int rx1135_pos
    .local int rx1135_off
    .local int rx1135_eos
    .local int rx1135_rep
    .local pmc rx1135_cur
    .local pmc rx1135_curclass
    .local pmc rx1135_bstack
    .local pmc rx1135_cstack
    rx1135_start = self."!cursor_start_all"()
    set rx1135_cur, rx1135_start[0]
    set rx1135_tgt, rx1135_start[1]
    set rx1135_pos, rx1135_start[2]
    set rx1135_curclass, rx1135_start[3]
    set rx1135_bstack, rx1135_start[4]
    set $I19, rx1135_start[5]
    store_lex unicode:"$\x{a2}", rx1135_cur
    length rx1135_eos, rx1135_tgt
    eq $I19, 1, rx1135_restart2639
    gt rx1135_pos, rx1135_eos, rx1135_fail2640
    repr_get_attr_int $I11, self, rx1135_curclass, "$!from"
    ne $I11, -1, rxscan1136_done2646
    goto rxscan1136_scan2645
  rxscan1136_loop2644:
    inc rx1135_pos
    gt rx1135_pos, rx1135_eos, rx1135_fail2640
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!from", rx1135_pos
  rxscan1136_scan2645:
    nqp_rxmark rx1135_bstack, rxscan1136_loop2644, rx1135_pos, 0
  rxscan1136_done2646:
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!pos", rx1135_pos
    store_lex unicode:"$\x{a2}", rx1135_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!pos", rx1135_pos
    $P11 = rx1135_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1135_curclass, "$!pos"
    lt $I11, 0, rx1135_fail2640
    nqp_rxmark rx1135_bstack, rxsubrule1137_pass2647, -1, 0
  rxsubrule1137_pass2647:
    rx1135_cstack = rx1135_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1135_pos, $P11, rx1135_curclass, "$!pos"
    rx1135_cur."!cursor_pass"(rx1135_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1135_cur)
  rx1135_restart2639:
    repr_get_attr_obj rx1135_cstack, rx1135_cur, rx1135_curclass, "$!cstack"
  rx1135_fail2640:
    unless rx1135_bstack, rx1135_done2638
    pop $I19, rx1135_bstack
    if_null rx1135_cstack, rx1135_cstack_done2643
    unless rx1135_cstack, rx1135_cstack_done2643
    dec $I19
    set $P11, rx1135_cstack[$I19]
  rx1135_cstack_done2643:
    pop rx1135_rep, rx1135_bstack
    pop rx1135_pos, rx1135_bstack
    pop $I19, rx1135_bstack
    lt rx1135_pos, -1, rx1135_done2638
    lt rx1135_pos, 0, rx1135_fail2640
    eq $I19, 0, rx1135_fail2640
    nqp_islist $I20, rx1135_cstack
    unless $I20, rx1135_jump2641
    elements $I18, rx1135_bstack
    le $I18, 0, rx1135_cut2642
    dec $I18
    set $I18, rx1135_bstack[$I18]
  rx1135_cut2642:
    assign rx1135_cstack, $I18
  rx1135_jump2641:
    jump $I19
  rx1135_done2638:
    rx1135_cur."!cursor_fail"()
    .return (rx1135_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_134_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1277
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_431_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1138_start
    .local string rx1138_tgt
    .local int rx1138_pos
    .local int rx1138_off
    .local int rx1138_eos
    .local int rx1138_rep
    .local pmc rx1138_cur
    .local pmc rx1138_curclass
    .local pmc rx1138_bstack
    .local pmc rx1138_cstack
    rx1138_start = self."!cursor_start_all"()
    set rx1138_cur, rx1138_start[0]
    set rx1138_tgt, rx1138_start[1]
    set rx1138_pos, rx1138_start[2]
    set rx1138_curclass, rx1138_start[3]
    set rx1138_bstack, rx1138_start[4]
    set $I19, rx1138_start[5]
    store_lex unicode:"$\x{a2}", rx1138_cur
    length rx1138_eos, rx1138_tgt
    eq $I19, 1, rx1138_restart2650
    gt rx1138_pos, rx1138_eos, rx1138_fail2651
    repr_get_attr_int $I11, self, rx1138_curclass, "$!from"
    ne $I11, -1, rxscan1139_done2657
    goto rxscan1139_scan2656
  rxscan1139_loop2655:
    inc rx1138_pos
    gt rx1138_pos, rx1138_eos, rx1138_fail2651
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!from", rx1138_pos
  rxscan1139_scan2656:
    nqp_rxmark rx1138_bstack, rxscan1139_loop2655, rx1138_pos, 0
  rxscan1139_done2657:
    nqp_rxmark rx1138_bstack, rxquantg1140_done2659, rx1138_pos, 0
  rxquantg1140_loop2658:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    store_lex unicode:"$\x{a2}", rx1138_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_431_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1138_fail2651
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1144_pass2665
  rxsubrule1144_back2666:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1144_pass2665:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1144_back2666
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1145_pass2667
  rxsubrule1145_back2668:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1145_pass2667:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "invocant")
    set_addr $I11, rxsubrule1145_back2668
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1146_pass2669
  rxsubrule1146_back2670:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1146_pass2669:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1146_back2670
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2651
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:":", rx1138_fail2651
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1147_pass2671
  rxsubrule1147_back2672:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1147_pass2671:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1147_back2672
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
  rxquantg1140_done2659:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1148_pass2673
  rxsubrule1148_back2674:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1148_pass2673:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1148_back2674
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    nqp_rxmark rx1138_bstack, rxquantg1149_done2676, rx1138_pos, 0
  rxquantg1149_loop2675:
    nqp_rxmark rx1138_bstack, rxquantg1150_done2678, rx1138_pos, 0
  rxquantg1150_loop2677:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1151_pass2679
  rxsubrule1151_back2680:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1151_pass2679:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "parameter")
    set_addr $I11, rxsubrule1151_back2680
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1152_pass2681
  rxsubrule1152_back2682:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1152_pass2681:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1152_back2682
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    nqp_rxmark rx1138_bstack, rxquantg1150_done2678, rx1138_pos, rx1138_rep
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2651
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:",", rx1138_fail2651
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1153_pass2683
  rxsubrule1153_back2684:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1153_pass2683:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1153_back2684
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    goto rxquantg1150_loop2677
  rxquantg1150_done2678:
    nqp_rxmark rx1138_bstack, rxquantg1154_done2686, rx1138_pos, 0
  rxquantg1154_loop2685:
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2651
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:",", rx1138_fail2651
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1155_pass2687
  rxsubrule1155_back2688:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1155_pass2687:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1155_back2688
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
  rxquantg1154_done2686:
  rxquantg1149_done2676:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
    goto rxsubrule1156_pass2689
  rxsubrule1156_back2690:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2651
  rxsubrule1156_pass2689:
    rx1138_cstack = rx1138_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1156_back2690
    push rx1138_bstack, $I11
    push rx1138_bstack, 0
    push rx1138_bstack, rx1138_pos
    elements $I11, rx1138_cstack
    push rx1138_bstack, $I11
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    rx1138_cur."!cursor_pass"(rx1138_pos, "signature", 'backtrack'=>1)
    .return (rx1138_cur)
  rx1138_restart2650:
    repr_get_attr_obj rx1138_cstack, rx1138_cur, rx1138_curclass, "$!cstack"
  rx1138_fail2651:
    unless rx1138_bstack, rx1138_done2649
    pop $I19, rx1138_bstack
    if_null rx1138_cstack, rx1138_cstack_done2654
    unless rx1138_cstack, rx1138_cstack_done2654
    dec $I19
    set $P11, rx1138_cstack[$I19]
  rx1138_cstack_done2654:
    pop rx1138_rep, rx1138_bstack
    pop rx1138_pos, rx1138_bstack
    pop $I19, rx1138_bstack
    lt rx1138_pos, -1, rx1138_done2649
    lt rx1138_pos, 0, rx1138_fail2651
    eq $I19, 0, rx1138_fail2651
    nqp_islist $I20, rx1138_cstack
    unless $I20, rx1138_jump2652
    elements $I18, rx1138_bstack
    le $I18, 0, rx1138_cut2653
    dec $I18
    set $I18, rx1138_bstack[$I18]
  rx1138_cut2653:
    assign rx1138_cstack, $I18
  rx1138_jump2652:
    jump $I19
  rx1138_done2649:
    rx1138_cur."!cursor_fail"()
    .return (rx1138_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1382959278.72036") :anon :lex :outer("cuid_134_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1278
    .local pmc fb_tmp_174 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2660
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_174, $P5002
    repr_defined $I5001, fb_tmp_174
    unless $I5001 goto if1141_else2661 
    set $P5004, fb_tmp_174["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1141_end2662
  if1141_else2661:
    null $P5005
    set $P5006, $P5005
  if1141_end2662:
    unless_null $P5006, vivi_11422663
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_11422663:
    unless_null $P5006, vivi_11432664
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_11432664:
    set $P5001, $P5006
  fallback2660:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_135_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1282
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1157_start
    .local string rx1157_tgt
    .local int rx1157_pos
    .local int rx1157_off
    .local int rx1157_eos
    .local int rx1157_rep
    .local pmc rx1157_cur
    .local pmc rx1157_curclass
    .local pmc rx1157_bstack
    .local pmc rx1157_cstack
    rx1157_start = self."!cursor_start_all"()
    set rx1157_cur, rx1157_start[0]
    set rx1157_tgt, rx1157_start[1]
    set rx1157_pos, rx1157_start[2]
    set rx1157_curclass, rx1157_start[3]
    set rx1157_bstack, rx1157_start[4]
    set $I19, rx1157_start[5]
    store_lex unicode:"$\x{a2}", rx1157_cur
    length rx1157_eos, rx1157_tgt
    eq $I19, 1, rx1157_restart2693
    gt rx1157_pos, rx1157_eos, rx1157_fail2694
    repr_get_attr_int $I11, self, rx1157_curclass, "$!from"
    ne $I11, -1, rxscan1158_done2700
    goto rxscan1158_scan2699
  rxscan1158_loop2698:
    inc rx1157_pos
    gt rx1157_pos, rx1157_eos, rx1157_fail2694
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!from", rx1157_pos
  rxscan1158_scan2699:
    nqp_rxmark rx1157_bstack, rxscan1158_loop2698, rx1157_pos, 0
  rxscan1158_done2700:
    nqp_rxmark rx1157_bstack, rxquantr1159_done2702, rx1157_pos, 0
  rxquantr1159_loop2701:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1160_pass2703, -1, 0
  rxsubrule1160_pass2703:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxmark rx1157_bstack, rxquantr1161_done2705, rx1157_pos, 0
  rxquantr1161_loop2704:
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:":", rx1157_fail2694
    add rx1157_pos, 1
    nqp_rxmark rx1157_bstack, rxcap1162_fail2707, rx1157_pos, 0
    ge rx1157_pos, rx1157_eos, rx1157_fail2694
    substr $S11, rx1157_tgt, rx1157_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1157_fail2694
    inc rx1157_pos
    nqp_rxpeek $I19, rx1157_bstack, rxcap1162_fail2707
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1162_done2706
  rxcap1162_fail2707:
    goto rx1157_fail2694
  rxcap1162_done2706:
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1161_done2705
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1161_done2705
    inc rx1157_rep
  rxquantr1161_done2705:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1159_done2702
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1159_done2702
    inc rx1157_rep
    nqp_rxmark rx1157_bstack, rxquantr1159_done2702, rx1157_pos, rx1157_rep
    goto rxquantr1159_loop2701
  rxquantr1159_done2702:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1164_02710
    nqp_push_label $P11, alt1164_12714
    nqp_rxmark rx1157_bstack, alt1164_end2709, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__27_1382959281.64786", $P11)
    goto rx1157_fail2694
  alt1164_02710:
    nqp_rxmark rx1157_bstack, rxcap1165_fail2712, rx1157_pos, 0
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"*", rx1157_fail2694
    add rx1157_pos, 1
    nqp_rxpeek $I19, rx1157_bstack, rxcap1165_fail2712
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "quant")
    goto rxcap1165_done2711
  rxcap1165_fail2712:
    goto rx1157_fail2694
  rxcap1165_done2711:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1166_pass2713, -1, 0
  rxsubrule1166_pass2713:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1164_end2709
  alt1164_12714:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1167_02716
    nqp_push_label $P11, alt1167_12718
    nqp_rxmark rx1157_bstack, alt1167_end2715, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__25_1382959281.64729", $P11)
    goto rx1157_fail2694
  alt1167_02716:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1168_pass2717, -1, 0
  rxsubrule1168_pass2717:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1167_end2715
  alt1167_12718:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    nqp_rxmark rx1157_bstack, rxsubrule1169_pass2719, -1, 0
  rxsubrule1169_pass2719:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1167_end2715
  alt1167_end2715:
    nqp_rxcommit rx1157_bstack, alt1167_end2715
    nqp_rxmark rx1157_bstack, rxcap1170_fail2721, rx1157_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1171_02723
    nqp_push_label $P11, alt1171_12724
    nqp_push_label $P11, alt1171_22725
    nqp_rxmark rx1157_bstack, alt1171_end2722, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__26_1382959281.64755", $P11)
    goto rx1157_fail2694
  alt1171_02723:
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"?", rx1157_fail2694
    add rx1157_pos, 1
    goto alt1171_end2722
  alt1171_12724:
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2694
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"!", rx1157_fail2694
    add rx1157_pos, 1
    goto alt1171_end2722
  alt1171_22725:
    goto alt1171_end2722
  alt1171_end2722:
    nqp_rxcommit rx1157_bstack, alt1171_end2722
    nqp_rxpeek $I19, rx1157_bstack, rxcap1170_fail2721
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "quant")
    goto rxcap1170_done2720
  rxcap1170_fail2721:
    goto rx1157_fail2694
  rxcap1170_done2720:
    goto alt1164_end2709
  alt1164_end2709:
    nqp_rxcommit rx1157_bstack, alt1164_end2709
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxmark rx1157_bstack, rxquantr1174_done2729, rx1157_pos, 0
  rxquantr1174_loop2728:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
    goto rxsubrule1175_pass2730
  rxsubrule1175_back2731:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2694
  rxsubrule1175_pass2730:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1175_back2731
    push rx1157_bstack, $I11
    push rx1157_bstack, 0
    push rx1157_bstack, rx1157_pos
    elements $I11, rx1157_cstack
    push rx1157_bstack, $I11
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1174_done2729
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1174_done2729
    inc rx1157_rep
  rxquantr1174_done2729:
    rx1157_cur."!cursor_pass"(rx1157_pos, "parameter", 'backtrack'=>1)
    .return (rx1157_cur)
  rx1157_restart2693:
    repr_get_attr_obj rx1157_cstack, rx1157_cur, rx1157_curclass, "$!cstack"
  rx1157_fail2694:
    unless rx1157_bstack, rx1157_done2692
    pop $I19, rx1157_bstack
    if_null rx1157_cstack, rx1157_cstack_done2697
    unless rx1157_cstack, rx1157_cstack_done2697
    dec $I19
    set $P11, rx1157_cstack[$I19]
  rx1157_cstack_done2697:
    pop rx1157_rep, rx1157_bstack
    pop rx1157_pos, rx1157_bstack
    pop $I19, rx1157_bstack
    lt rx1157_pos, -1, rx1157_done2692
    lt rx1157_pos, 0, rx1157_fail2694
    eq $I19, 0, rx1157_fail2694
    nqp_islist $I20, rx1157_cstack
    unless $I20, rx1157_jump2695
    elements $I18, rx1157_bstack
    le $I18, 0, rx1157_cut2696
    dec $I18
    set $I18, rx1157_bstack[$I18]
  rx1157_cut2696:
    assign rx1157_cstack, $I18
  rx1157_jump2695:
    jump $I19
  rx1157_done2692:
    rx1157_cur."!cursor_fail"()
    .return (rx1157_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_136_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1291
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1176_start
    .local string rx1176_tgt
    .local int rx1176_pos
    .local int rx1176_off
    .local int rx1176_eos
    .local int rx1176_rep
    .local pmc rx1176_cur
    .local pmc rx1176_curclass
    .local pmc rx1176_bstack
    .local pmc rx1176_cstack
    rx1176_start = self."!cursor_start_all"()
    set rx1176_cur, rx1176_start[0]
    set rx1176_tgt, rx1176_start[1]
    set rx1176_pos, rx1176_start[2]
    set rx1176_curclass, rx1176_start[3]
    set rx1176_bstack, rx1176_start[4]
    set $I19, rx1176_start[5]
    store_lex unicode:"$\x{a2}", rx1176_cur
    length rx1176_eos, rx1176_tgt
    eq $I19, 1, rx1176_restart2734
    gt rx1176_pos, rx1176_eos, rx1176_fail2735
    repr_get_attr_int $I11, self, rx1176_curclass, "$!from"
    ne $I11, -1, rxscan1177_done2741
    goto rxscan1177_scan2740
  rxscan1177_loop2739:
    inc rx1176_pos
    gt rx1176_pos, rx1176_eos, rx1176_fail2735
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!from", rx1176_pos
  rxscan1177_scan2740:
    nqp_rxmark rx1176_bstack, rxscan1177_loop2739, rx1176_pos, 0
  rxscan1177_done2741:
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
    nqp_rxmark rx1176_bstack, rxsubrule1178_pass2742, -1, 0
  rxsubrule1178_pass2742:
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1176_pos, $P11, rx1176_curclass, "$!pos"
    nqp_rxmark rx1176_bstack, rxquantr1179_done2744, rx1176_pos, 0
  rxquantr1179_loop2743:
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
    goto rxsubrule1180_pass2745
  rxsubrule1180_back2746:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
  rxsubrule1180_pass2745:
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1180_back2746
    push rx1176_bstack, $I11
    push rx1176_bstack, 0
    push rx1176_bstack, rx1176_pos
    elements $I11, rx1176_cstack
    push rx1176_bstack, $I11
    repr_get_attr_int rx1176_pos, $P11, rx1176_curclass, "$!pos"
    nqp_rxpeek $I19, rx1176_bstack, rxquantr1179_done2744
    inc $I19
    inc $I19
    set rx1176_rep, rx1176_bstack[$I19]
    nqp_rxcommit rx1176_bstack, rxquantr1179_done2744
    inc rx1176_rep
  rxquantr1179_done2744:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1181_02748
    nqp_push_label $P11, alt1181_12750
    nqp_rxmark rx1176_bstack, alt1181_end2747, -1, 0
    rx1176_cur."!alt"(rx1176_pos, "alt_nfa__28_1382959281.65881", $P11)
    goto rx1176_fail2735
  alt1181_02748:
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1176_curclass, "$!pos"
    lt $I11, 0, rx1176_fail2735
    nqp_rxmark rx1176_bstack, rxsubrule1182_pass2749, -1, 0
  rxsubrule1182_pass2749:
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1176_pos, $P11, rx1176_curclass, "$!pos"
    goto alt1181_end2747
  alt1181_12750:
    nqp_rxmark rx1176_bstack, rxcap1183_fail2752, rx1176_pos, 0
    ge rx1176_pos, rx1176_eos, rx1176_fail2735
    substr $S11, rx1176_tgt, rx1176_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1176_fail2735
    inc rx1176_pos
    nqp_rxpeek $I19, rx1176_bstack, rxcap1183_fail2752
    inc $I19
    set $I11, rx1176_bstack[$I19]
    repr_bind_attr_int rx1176_cur, rx1176_curclass, "$!pos", rx1176_pos
    $P11 = rx1176_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1176_pos)
    rx1176_cstack = rx1176_cur."!cursor_capture"($P11, "name")
    goto rxcap1183_done2751
  rxcap1183_fail2752:
    goto rx1176_fail2735
  rxcap1183_done2751:
    goto alt1181_end2747
  alt1181_end2747:
    nqp_rxcommit rx1176_bstack, alt1181_end2747
    rx1176_cur."!cursor_pass"(rx1176_pos, "param_var", 'backtrack'=>1)
    .return (rx1176_cur)
  rx1176_restart2734:
    repr_get_attr_obj rx1176_cstack, rx1176_cur, rx1176_curclass, "$!cstack"
  rx1176_fail2735:
    unless rx1176_bstack, rx1176_done2733
    pop $I19, rx1176_bstack
    if_null rx1176_cstack, rx1176_cstack_done2738
    unless rx1176_cstack, rx1176_cstack_done2738
    dec $I19
    set $P11, rx1176_cstack[$I19]
  rx1176_cstack_done2738:
    pop rx1176_rep, rx1176_bstack
    pop rx1176_pos, rx1176_bstack
    pop $I19, rx1176_bstack
    lt rx1176_pos, -1, rx1176_done2733
    lt rx1176_pos, 0, rx1176_fail2735
    eq $I19, 0, rx1176_fail2735
    nqp_islist $I20, rx1176_cstack
    unless $I20, rx1176_jump2736
    elements $I18, rx1176_bstack
    le $I18, 0, rx1176_cut2737
    dec $I18
    set $I18, rx1176_bstack[$I18]
  rx1176_cut2737:
    assign rx1176_cstack, $I18
  rx1176_jump2736:
    jump $I19
  rx1176_done2733:
    rx1176_cur."!cursor_fail"()
    .return (rx1176_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_137_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1184_start
    .local string rx1184_tgt
    .local int rx1184_pos
    .local int rx1184_off
    .local int rx1184_eos
    .local int rx1184_rep
    .local pmc rx1184_cur
    .local pmc rx1184_curclass
    .local pmc rx1184_bstack
    .local pmc rx1184_cstack
    rx1184_start = self."!cursor_start_all"()
    set rx1184_cur, rx1184_start[0]
    set rx1184_tgt, rx1184_start[1]
    set rx1184_pos, rx1184_start[2]
    set rx1184_curclass, rx1184_start[3]
    set rx1184_bstack, rx1184_start[4]
    set $I19, rx1184_start[5]
    store_lex unicode:"$\x{a2}", rx1184_cur
    length rx1184_eos, rx1184_tgt
    eq $I19, 1, rx1184_restart2755
    gt rx1184_pos, rx1184_eos, rx1184_fail2756
    repr_get_attr_int $I11, self, rx1184_curclass, "$!from"
    ne $I11, -1, rxscan1185_done2762
    goto rxscan1185_scan2761
  rxscan1185_loop2760:
    inc rx1184_pos
    index rx1184_pos, rx1184_tgt, ucs4:":", rx1184_pos
    eq rx1184_pos, -1, rx1184_fail2756
    repr_bind_attr_int rx1184_cur, rx1184_curclass, "$!from", rx1184_pos
  rxscan1185_scan2761:
    nqp_rxmark rx1184_bstack, rxscan1185_loop2760, rx1184_pos, 0
  rxscan1185_done2762:
    add $I11, rx1184_pos, 1
    gt $I11, rx1184_eos, rx1184_fail2756
    substr $S10, rx1184_tgt, rx1184_pos, 1
    ne $S10, ucs4:":", rx1184_fail2756
    add rx1184_pos, 1
    repr_bind_attr_int rx1184_cur, rx1184_curclass, "$!pos", rx1184_pos
    $P11 = rx1184_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1184_curclass, "$!pos"
    lt $I11, 0, rx1184_fail2756
    nqp_rxmark rx1184_bstack, rxsubrule1186_pass2763, -1, 0
  rxsubrule1186_pass2763:
    rx1184_cstack = rx1184_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1184_pos, $P11, rx1184_curclass, "$!pos"
    rx1184_cur."!cursor_pass"(rx1184_pos, "named_param", 'backtrack'=>1)
    .return (rx1184_cur)
  rx1184_restart2755:
    repr_get_attr_obj rx1184_cstack, rx1184_cur, rx1184_curclass, "$!cstack"
  rx1184_fail2756:
    unless rx1184_bstack, rx1184_done2754
    pop $I19, rx1184_bstack
    if_null rx1184_cstack, rx1184_cstack_done2759
    unless rx1184_cstack, rx1184_cstack_done2759
    dec $I19
    set $P11, rx1184_cstack[$I19]
  rx1184_cstack_done2759:
    pop rx1184_rep, rx1184_bstack
    pop rx1184_pos, rx1184_bstack
    pop $I19, rx1184_bstack
    lt rx1184_pos, -1, rx1184_done2754
    lt rx1184_pos, 0, rx1184_fail2756
    eq $I19, 0, rx1184_fail2756
    nqp_islist $I20, rx1184_cstack
    unless $I20, rx1184_jump2757
    elements $I18, rx1184_bstack
    le $I18, 0, rx1184_cut2758
    dec $I18
    set $I18, rx1184_bstack[$I18]
  rx1184_cut2758:
    assign rx1184_cstack, $I18
  rx1184_jump2757:
    jump $I19
  rx1184_done2754:
    rx1184_cur."!cursor_fail"()
    .return (rx1184_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_138_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1300
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1187_start
    .local string rx1187_tgt
    .local int rx1187_pos
    .local int rx1187_off
    .local int rx1187_eos
    .local int rx1187_rep
    .local pmc rx1187_cur
    .local pmc rx1187_curclass
    .local pmc rx1187_bstack
    .local pmc rx1187_cstack
    rx1187_start = self."!cursor_start_all"()
    set rx1187_cur, rx1187_start[0]
    set rx1187_tgt, rx1187_start[1]
    set rx1187_pos, rx1187_start[2]
    set rx1187_curclass, rx1187_start[3]
    set rx1187_bstack, rx1187_start[4]
    set $I19, rx1187_start[5]
    store_lex unicode:"$\x{a2}", rx1187_cur
    length rx1187_eos, rx1187_tgt
    eq $I19, 1, rx1187_restart2766
    gt rx1187_pos, rx1187_eos, rx1187_fail2767
    repr_get_attr_int $I11, self, rx1187_curclass, "$!from"
    ne $I11, -1, rxscan1188_done2773
    goto rxscan1188_scan2772
  rxscan1188_loop2771:
    inc rx1187_pos
    gt rx1187_pos, rx1187_eos, rx1187_fail2767
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!from", rx1187_pos
  rxscan1188_scan2772:
    nqp_rxmark rx1187_bstack, rxscan1188_loop2771, rx1187_pos, 0
  rxscan1188_done2773:
    add $I11, rx1187_pos, 1
    gt $I11, rx1187_eos, rx1187_fail2767
    substr $S10, rx1187_tgt, rx1187_pos, 1
    ne $S10, ucs4:"=", rx1187_fail2767
    add rx1187_pos, 1
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
    goto rxsubrule1189_pass2774
  rxsubrule1189_back2775:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
  rxsubrule1189_pass2774:
    rx1187_cstack = rx1187_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1189_back2775
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
    goto rxsubrule1190_pass2776
  rxsubrule1190_back2777:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
  rxsubrule1190_pass2776:
    rx1187_cstack = rx1187_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1190_back2777
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
    goto rxsubrule1191_pass2778
  rxsubrule1191_back2779:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2767
  rxsubrule1191_pass2778:
    rx1187_cstack = rx1187_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1191_back2779
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    rx1187_cur."!cursor_pass"(rx1187_pos, "default_value", 'backtrack'=>1)
    .return (rx1187_cur)
  rx1187_restart2766:
    repr_get_attr_obj rx1187_cstack, rx1187_cur, rx1187_curclass, "$!cstack"
  rx1187_fail2767:
    unless rx1187_bstack, rx1187_done2765
    pop $I19, rx1187_bstack
    if_null rx1187_cstack, rx1187_cstack_done2770
    unless rx1187_cstack, rx1187_cstack_done2770
    dec $I19
    set $P11, rx1187_cstack[$I19]
  rx1187_cstack_done2770:
    pop rx1187_rep, rx1187_bstack
    pop rx1187_pos, rx1187_bstack
    pop $I19, rx1187_bstack
    lt rx1187_pos, -1, rx1187_done2765
    lt rx1187_pos, 0, rx1187_fail2767
    eq $I19, 0, rx1187_fail2767
    nqp_islist $I20, rx1187_cstack
    unless $I20, rx1187_jump2768
    elements $I18, rx1187_bstack
    le $I18, 0, rx1187_cut2769
    dec $I18
    set $I18, rx1187_bstack[$I18]
  rx1187_cut2769:
    assign rx1187_cstack, $I18
  rx1187_jump2768:
    jump $I19
  rx1187_done2765:
    rx1187_cur."!cursor_fail"()
    .return (rx1187_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_139_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1302
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1192_start
    .local string rx1192_tgt
    .local int rx1192_pos
    .local int rx1192_off
    .local int rx1192_eos
    .local int rx1192_rep
    .local pmc rx1192_cur
    .local pmc rx1192_curclass
    .local pmc rx1192_bstack
    .local pmc rx1192_cstack
    rx1192_start = self."!cursor_start_all"()
    set rx1192_cur, rx1192_start[0]
    set rx1192_tgt, rx1192_start[1]
    set rx1192_pos, rx1192_start[2]
    set rx1192_curclass, rx1192_start[3]
    set rx1192_bstack, rx1192_start[4]
    set $I19, rx1192_start[5]
    store_lex unicode:"$\x{a2}", rx1192_cur
    length rx1192_eos, rx1192_tgt
    eq $I19, 1, rx1192_restart2782
    gt rx1192_pos, rx1192_eos, rx1192_fail2783
    repr_get_attr_int $I11, self, rx1192_curclass, "$!from"
    ne $I11, -1, rxscan1193_done2789
    goto rxscan1193_scan2788
  rxscan1193_loop2787:
    inc rx1192_pos
    gt rx1192_pos, rx1192_eos, rx1192_fail2783
    repr_bind_attr_int rx1192_cur, rx1192_curclass, "$!from", rx1192_pos
  rxscan1193_scan2788:
    nqp_rxmark rx1192_bstack, rxscan1193_loop2787, rx1192_pos, 0
  rxscan1193_done2789:
    repr_bind_attr_int rx1192_cur, rx1192_curclass, "$!pos", rx1192_pos
    $P11 = rx1192_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1192_curclass, "$!pos"
    lt $I11, 0, rx1192_fail2783
    nqp_rxmark rx1192_bstack, rxsubrule1194_pass2790, -1, 0
  rxsubrule1194_pass2790:
    rx1192_cstack = rx1192_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1192_pos, $P11, rx1192_curclass, "$!pos"
    rx1192_cur."!cursor_pass"(rx1192_pos, "trait", 'backtrack'=>1)
    .return (rx1192_cur)
  rx1192_restart2782:
    repr_get_attr_obj rx1192_cstack, rx1192_cur, rx1192_curclass, "$!cstack"
  rx1192_fail2783:
    unless rx1192_bstack, rx1192_done2781
    pop $I19, rx1192_bstack
    if_null rx1192_cstack, rx1192_cstack_done2786
    unless rx1192_cstack, rx1192_cstack_done2786
    dec $I19
    set $P11, rx1192_cstack[$I19]
  rx1192_cstack_done2786:
    pop rx1192_rep, rx1192_bstack
    pop rx1192_pos, rx1192_bstack
    pop $I19, rx1192_bstack
    lt rx1192_pos, -1, rx1192_done2781
    lt rx1192_pos, 0, rx1192_fail2783
    eq $I19, 0, rx1192_fail2783
    nqp_islist $I20, rx1192_cstack
    unless $I20, rx1192_jump2784
    elements $I18, rx1192_bstack
    le $I18, 0, rx1192_cut2785
    dec $I18
    set $I18, rx1192_bstack[$I18]
  rx1192_cut2785:
    assign rx1192_cstack, $I18
  rx1192_jump2784:
    jump $I19
  rx1192_done2781:
    rx1192_cur."!cursor_fail"()
    .return (rx1192_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_140_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1304
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_141_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1305
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1195_start
    .local string rx1195_tgt
    .local int rx1195_pos
    .local int rx1195_off
    .local int rx1195_eos
    .local int rx1195_rep
    .local pmc rx1195_cur
    .local pmc rx1195_curclass
    .local pmc rx1195_bstack
    .local pmc rx1195_cstack
    rx1195_start = self."!cursor_start_all"()
    set rx1195_cur, rx1195_start[0]
    set rx1195_tgt, rx1195_start[1]
    set rx1195_pos, rx1195_start[2]
    set rx1195_curclass, rx1195_start[3]
    set rx1195_bstack, rx1195_start[4]
    set $I19, rx1195_start[5]
    store_lex unicode:"$\x{a2}", rx1195_cur
    length rx1195_eos, rx1195_tgt
    eq $I19, 1, rx1195_restart2793
    gt rx1195_pos, rx1195_eos, rx1195_fail2794
    repr_get_attr_int $I11, self, rx1195_curclass, "$!from"
    ne $I11, -1, rxscan1196_done2800
    goto rxscan1196_scan2799
  rxscan1196_loop2798:
    inc rx1195_pos
    gt rx1195_pos, rx1195_eos, rx1195_fail2794
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!from", rx1195_pos
  rxscan1196_scan2799:
    nqp_rxmark rx1195_bstack, rxscan1196_loop2798, rx1195_pos, 0
  rxscan1196_done2800:
    nqp_rxmark rx1195_bstack, rxcap1197_fail2802, rx1195_pos, 0
    add $I11, rx1195_pos, 2
    gt $I11, rx1195_eos, rx1195_fail2794
    substr $S10, rx1195_tgt, rx1195_pos, 2
    ne $S10, ucs4:"is", rx1195_fail2794
    add rx1195_pos, 2
    nqp_rxpeek $I19, rx1195_bstack, rxcap1197_fail2802
    inc $I19
    set $I11, rx1195_bstack[$I19]
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1195_pos)
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "sym")
    goto rxcap1197_done2801
  rxcap1197_fail2802:
    goto rx1195_fail2794
  rxcap1197_done2801:
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    goto rxsubrule1198_pass2803
  rxsubrule1198_back2804:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
  rxsubrule1198_pass2803:
    rx1195_cstack = rx1195_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1198_back2804
    push rx1195_bstack, $I11
    push rx1195_bstack, 0
    push rx1195_bstack, rx1195_pos
    elements $I11, rx1195_cstack
    push rx1195_bstack, $I11
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    nqp_rxmark rx1195_bstack, rxsubrule1199_pass2805, -1, 0
  rxsubrule1199_pass2805:
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    nqp_rxmark rx1195_bstack, rxquantg1200_done2807, rx1195_pos, 0
  rxquantg1200_loop2806:
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    goto rxsubrule1201_pass2808
  rxsubrule1201_back2809:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
  rxsubrule1201_pass2808:
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1201_back2809
    push rx1195_bstack, $I11
    push rx1195_bstack, 0
    push rx1195_bstack, rx1195_pos
    elements $I11, rx1195_cstack
    push rx1195_bstack, $I11
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
  rxquantg1200_done2807:
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
    goto rxsubrule1202_pass2810
  rxsubrule1202_back2811:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2794
  rxsubrule1202_pass2810:
    rx1195_cstack = rx1195_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1202_back2811
    push rx1195_bstack, $I11
    push rx1195_bstack, 0
    push rx1195_bstack, rx1195_pos
    elements $I11, rx1195_cstack
    push rx1195_bstack, $I11
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    rx1195_cur."!cursor_pass"(rx1195_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1195_cur)
  rx1195_restart2793:
    repr_get_attr_obj rx1195_cstack, rx1195_cur, rx1195_curclass, "$!cstack"
  rx1195_fail2794:
    unless rx1195_bstack, rx1195_done2792
    pop $I19, rx1195_bstack
    if_null rx1195_cstack, rx1195_cstack_done2797
    unless rx1195_cstack, rx1195_cstack_done2797
    dec $I19
    set $P11, rx1195_cstack[$I19]
  rx1195_cstack_done2797:
    pop rx1195_rep, rx1195_bstack
    pop rx1195_pos, rx1195_bstack
    pop $I19, rx1195_bstack
    lt rx1195_pos, -1, rx1195_done2792
    lt rx1195_pos, 0, rx1195_fail2794
    eq $I19, 0, rx1195_fail2794
    nqp_islist $I20, rx1195_cstack
    unless $I20, rx1195_jump2795
    elements $I18, rx1195_bstack
    le $I18, 0, rx1195_cut2796
    dec $I18
    set $I18, rx1195_bstack[$I18]
  rx1195_cut2796:
    assign rx1195_cstack, $I18
  rx1195_jump2795:
    jump $I19
  rx1195_done2792:
    rx1195_cur."!cursor_fail"()
    .return (rx1195_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_142_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1307
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_432_1382959278.72036' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_175 
    .local pmc pkg_viv_tmp_26 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1203_start
    .local string rx1203_tgt
    .local int rx1203_pos
    .local int rx1203_off
    .local int rx1203_eos
    .local int rx1203_rep
    .local pmc rx1203_cur
    .local pmc rx1203_curclass
    .local pmc rx1203_bstack
    .local pmc rx1203_cstack
    rx1203_start = self."!cursor_start_all"()
    set rx1203_cur, rx1203_start[0]
    set rx1203_tgt, rx1203_start[1]
    set rx1203_pos, rx1203_start[2]
    set rx1203_curclass, rx1203_start[3]
    set rx1203_bstack, rx1203_start[4]
    set $I19, rx1203_start[5]
    store_lex unicode:"$\x{a2}", rx1203_cur
    length rx1203_eos, rx1203_tgt
    eq $I19, 1, rx1203_restart2814
    gt rx1203_pos, rx1203_eos, rx1203_fail2815
    repr_get_attr_int $I11, self, rx1203_curclass, "$!from"
    ne $I11, -1, rxscan1204_done2821
    goto rxscan1204_scan2820
  rxscan1204_loop2819:
    inc rx1203_pos
    gt rx1203_pos, rx1203_eos, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!from", rx1203_pos
  rxscan1204_scan2820:
    nqp_rxmark rx1203_bstack, rxscan1204_loop2819, rx1203_pos, 0
  rxscan1204_done2821:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1205_02823
    nqp_push_label $P11, alt1205_12876
    nqp_rxmark rx1203_bstack, alt1205_end2822, -1, 0
    rx1203_cur."!alt"(rx1203_pos, "alt_nfa__31_1382959281.7789", $P11)
    goto rx1203_fail2815
  alt1205_02823:
    nqp_rxmark rx1203_bstack, rxcap1206_fail2825, rx1203_pos, 0
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"proto", rx1203_fail2815
    add rx1203_pos, 5
    nqp_rxpeek $I19, rx1203_bstack, rxcap1206_fail2825
    inc $I19
    set $I11, rx1203_bstack[$I19]
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1203_pos)
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "proto")
    goto rxcap1206_done2824
  rxcap1206_fail2825:
    goto rx1203_fail2815
  rxcap1206_done2824:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1207_pass2826
  rxsubrule1207_back2827:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1207_pass2826:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1207_back2827
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1208_02829
    nqp_push_label $P11, alt1208_12830
    nqp_push_label $P11, alt1208_22831
    nqp_rxmark rx1203_bstack, alt1208_end2828, -1, 0
    rx1203_cur."!alt"(rx1203_pos, "alt_nfa__29_1382959281.77722", $P11)
    goto rx1203_fail2815
  alt1208_02829:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"regex", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1208_end2828
  alt1208_12830:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"token", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1208_end2828
  alt1208_22831:
    add $I11, rx1203_pos, 4
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 4
    ne $S10, ucs4:"rule", rx1203_fail2815
    add rx1203_pos, 4
    goto alt1208_end2828
  alt1208_end2828:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1209_pass2832
  rxsubrule1209_back2833:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1209_pass2832:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1209_back2833
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1210_02835:
    nqp_rxmark rx1203_bstack, alt1210_12844, rx1203_pos, 0
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"::(", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1211_pass2836
  rxsubrule1211_back2837:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1211_pass2836:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1211_back2837
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1212_pass2838
  rxsubrule1212_back2839:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1212_pass2838:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1212_back2839
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1213_pass2840
  rxsubrule1213_back2841:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1213_pass2840:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1213_back2841
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:")", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1214_pass2842
  rxsubrule1214_back2843:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1214_pass2842:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1214_back2843
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1210_end2834
  alt1210_12844:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1215_pass2845
  rxsubrule1215_back2846:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1215_pass2845:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1215_back2846
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1216_pass2847
  rxsubrule1216_back2848:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1216_pass2847:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1216_back2848
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1210_end2834:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1217_pass2849
  rxsubrule1217_back2850:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1217_pass2849:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1217_back2850
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1218_02852:
    nqp_rxmark rx1203_bstack, alt1218_12855, rx1203_pos, 0
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"{*}", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1219_pass2853
  rxsubrule1219_back2854:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1219_pass2853:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1219_back2854
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1218_end2851
  alt1218_12855:
    nqp_rxmark rx1203_bstack, alt1218_22862, rx1203_pos, 0
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"{", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1220_pass2856
  rxsubrule1220_back2857:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1220_pass2856:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1220_back2857
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"<...>", rx1203_fail2815
    add rx1203_pos, 5
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1221_pass2858
  rxsubrule1221_back2859:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1221_pass2858:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1221_back2859
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"}", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1222_pass2860
  rxsubrule1222_back2861:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1222_pass2860:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1222_back2861
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1218_end2851
  alt1218_22862:
    nqp_rxmark rx1203_bstack, alt1218_32869, rx1203_pos, 0
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"{", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1223_pass2863
  rxsubrule1223_back2864:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1223_pass2863:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1223_back2864
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"<*>", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1224_pass2865
  rxsubrule1224_back2866:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1224_pass2865:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1224_back2866
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"}", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1225_pass2867
  rxsubrule1225_back2868:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1225_pass2867:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1225_back2868
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1218_end2851
  alt1218_32869:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."panic"("Proto regex body must be {*} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1226_pass2870
  rxsubrule1226_back2871:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1226_pass2870:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1226_back2871
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1227_pass2872
  rxsubrule1227_back2873:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1227_pass2872:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1227_back2873
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1218_end2851:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1228_pass2874
  rxsubrule1228_back2875:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1228_pass2874:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1228_back2875
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1205_end2822
  alt1205_12876:
    nqp_rxmark rx1203_bstack, rxcap1229_fail2878, rx1203_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1230_02880
    nqp_push_label $P11, alt1230_12881
    nqp_push_label $P11, alt1230_22882
    nqp_rxmark rx1203_bstack, alt1230_end2879, -1, 0
    rx1203_cur."!alt"(rx1203_pos, "alt_nfa__30_1382959281.77826", $P11)
    goto rx1203_fail2815
  alt1230_02880:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"regex", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1230_end2879
  alt1230_12881:
    add $I11, rx1203_pos, 5
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 5
    ne $S10, ucs4:"token", rx1203_fail2815
    add rx1203_pos, 5
    goto alt1230_end2879
  alt1230_22882:
    add $I11, rx1203_pos, 4
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 4
    ne $S10, ucs4:"rule", rx1203_fail2815
    add rx1203_pos, 4
    goto alt1230_end2879
  alt1230_end2879:
    nqp_rxcommit rx1203_bstack, alt1230_end2879
    nqp_rxpeek $I19, rx1203_bstack, rxcap1229_fail2878
    inc $I19
    set $I11, rx1203_bstack[$I19]
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1203_pos)
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "sym")
    goto rxcap1229_done2877
  rxcap1229_fail2878:
    goto rx1203_fail2815
  rxcap1229_done2877:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1231_pass2883
  rxsubrule1231_back2884:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1231_pass2883:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1231_back2884
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1232_02886:
    nqp_rxmark rx1203_bstack, alt1232_12895, rx1203_pos, 0
    add $I11, rx1203_pos, 3
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 3
    ne $S10, ucs4:"::(", rx1203_fail2815
    add rx1203_pos, 3
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1233_pass2887
  rxsubrule1233_back2888:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1233_pass2887:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1233_back2888
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1234_pass2889
  rxsubrule1234_back2890:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1234_pass2889:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1234_back2890
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1235_pass2891
  rxsubrule1235_back2892:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1235_pass2891:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1235_back2892
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:")", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1236_pass2893
  rxsubrule1236_back2894:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1236_pass2893:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1236_back2894
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1232_end2885
  alt1232_12895:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1237_pass2896
  rxsubrule1237_back2897:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1237_pass2896:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1237_back2897
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1238_pass2898
  rxsubrule1238_back2899:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1238_pass2898:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1238_back2899
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1232_end2885:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1239_pass2900
  rxsubrule1239_back2901:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1239_pass2900:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1239_back2901
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1240_pass2902
  rxsubrule1240_back2903:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1240_pass2902:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1240_back2903
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1241_pass2904
  rxsubrule1241_back2905:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1241_pass2904:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1241_back2905
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    nqp_rxmark rx1203_bstack, rxquantg1242_done2907, rx1203_pos, 0
  rxquantg1242_loop2906:
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"(", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1243_pass2908
  rxsubrule1243_back2909:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1243_pass2908:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1243_back2909
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1244_pass2910
  rxsubrule1244_back2911:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1244_pass2910:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1244_back2911
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1245_pass2912
  rxsubrule1245_back2913:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1245_pass2912:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1245_back2913
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1246_02915:
    nqp_rxmark rx1203_bstack, alt1246_12918, rx1203_pos, 0
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:")", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1247_pass2916
  rxsubrule1247_back2917:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1247_pass2916:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1247_back2917
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1246_end2914
  alt1246_12918:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1248_pass2919
  rxsubrule1248_back2920:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1248_pass2919:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1248_back2920
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
  alt1246_end2914:
  rxquantg1242_done2907:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1249_pass2921
  rxsubrule1249_back2922:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1249_pass2921:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1249_back2922
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    store_lex unicode:"$\x{a2}", rx1203_cur
    unless_null $P101, fallback2923
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_26, $P5002
    set fb_tmp_175, pkg_viv_tmp_26
    repr_defined $I5001, fb_tmp_175
    unless $I5001 goto if1250_else2924 
    set $P5004, fb_tmp_175["%RX"]
    set $P5006, $P5004
    goto if1250_end2925
  if1250_else2924:
    null $P5005
    set $P5006, $P5005
  if1250_end2925:
    unless_null $P5006, vivi_12512926
    new $P5007, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5007
    set $P5006, $P5007
  vivi_12512926:
    unless_null $P5006, vivi_12522927
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12522927:
    set $P101, $P5006
  fallback2923:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    store_lex unicode:"$\x{a2}", rx1203_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_432_1382959278.72036' 
    capture_lex $P5010
    $P5011 = $P5010()
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"{", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    nqp_rxmark rx1203_bstack, rxsubrule1290_pass2994, -1, 0
  rxsubrule1290_pass2994:
    rx1203_cstack = rx1203_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    add $I11, rx1203_pos, 1
    gt $I11, rx1203_eos, rx1203_fail2815
    substr $S10, rx1203_tgt, rx1203_pos, 1
    ne $S10, ucs4:"}", rx1203_fail2815
    add rx1203_pos, 1
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1291_pass2995
  rxsubrule1291_back2996:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1291_pass2995:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1291_back2996
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    goto alt1205_end2822
  alt1205_end2822:
    repr_bind_attr_int rx1203_cur, rx1203_curclass, "$!pos", rx1203_pos
    $P11 = rx1203_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
    goto rxsubrule1292_pass2997
  rxsubrule1292_back2998:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1203_curclass, "$!pos"
    lt $I11, 0, rx1203_fail2815
  rxsubrule1292_pass2997:
    rx1203_cstack = rx1203_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1292_back2998
    push rx1203_bstack, $I11
    push rx1203_bstack, 0
    push rx1203_bstack, rx1203_pos
    elements $I11, rx1203_cstack
    push rx1203_bstack, $I11
    repr_get_attr_int rx1203_pos, $P11, rx1203_curclass, "$!pos"
    rx1203_cur."!cursor_pass"(rx1203_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1203_cur)
  rx1203_restart2814:
    repr_get_attr_obj rx1203_cstack, rx1203_cur, rx1203_curclass, "$!cstack"
  rx1203_fail2815:
    unless rx1203_bstack, rx1203_done2813
    pop $I19, rx1203_bstack
    if_null rx1203_cstack, rx1203_cstack_done2818
    unless rx1203_cstack, rx1203_cstack_done2818
    dec $I19
    set $P11, rx1203_cstack[$I19]
  rx1203_cstack_done2818:
    pop rx1203_rep, rx1203_bstack
    pop rx1203_pos, rx1203_bstack
    pop $I19, rx1203_bstack
    lt rx1203_pos, -1, rx1203_done2813
    lt rx1203_pos, 0, rx1203_fail2815
    eq $I19, 0, rx1203_fail2815
    nqp_islist $I20, rx1203_cstack
    unless $I20, rx1203_jump2816
    elements $I18, rx1203_bstack
    le $I18, 0, rx1203_cut2817
    dec $I18
    set $I18, rx1203_bstack[$I18]
  rx1203_cut2817:
    assign rx1203_cstack, $I18
  rx1203_jump2816:
    jump $I19
  rx1203_done2813:
    rx1203_cur."!cursor_fail"()
    .return (rx1203_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1382959278.72036") :anon :lex :outer("cuid_142_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1328
    .local pmc fb_tmp_176 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_183 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_186 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
    .local pmc fb_tmp_189 
    .local pmc pkg_viv_tmp_31 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2928
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_27, $P5002
    set fb_tmp_176, pkg_viv_tmp_27
    repr_defined $I5001, fb_tmp_176
    unless $I5001 goto if1253_else2929 
    set $P5004, fb_tmp_176["%RX"]
    set $P5006, $P5004
    goto if1253_end2930
  if1253_else2929:
    null $P5005
    set $P5006, $P5005
  if1253_end2930:
    unless_null $P5006, vivi_12542931
    new $P5007, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5007
    set $P5006, $P5007
  vivi_12542931:
    unless_null $P5006, vivi_12552932
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12552932:
    set $P5001, $P5006
  fallback2928:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2935
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  fallback2935:
    set fb_tmp_177, $P5009
    repr_defined $I5003, fb_tmp_177
    unless $I5003 goto if1256_else2933 
    set $P5011, fb_tmp_177["sym"]
    set $P5013, $P5011
    goto if1256_end2934
  if1256_else2933:
    null $P5012
    set $P5013, $P5012
  if1256_end2934:
    unless_null $P5013, vivi_12572936
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_12572936:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2937
    nqp_get_sc_object $P5018, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_28, $P5017
    set fb_tmp_178, pkg_viv_tmp_28
    repr_defined $I5004, fb_tmp_178
    unless $I5004 goto if1258_else2938 
    set $P5019, fb_tmp_178["%RX"]
    set $P5021, $P5019
    goto if1258_end2939
  if1258_else2938:
    null $P5020
    set $P5021, $P5020
  if1258_end2939:
    unless_null $P5021, vivi_12592940
    new $P5022, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5022
    set $P5021, $P5022
  vivi_12592940:
    unless_null $P5021, vivi_12602941
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12602941:
    set $P5016, $P5021
  fallback2937:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2946
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  fallback2946:
    set fb_tmp_179, $P5024
    repr_defined $I5006, fb_tmp_179
    unless $I5006 goto if1262_else2944 
    set $P5026, fb_tmp_179["sym"]
    set $P5028, $P5026
    goto if1262_end2945
  if1262_else2944:
    null $P5027
    set $P5028, $P5027
  if1262_end2945:
    unless_null $P5028, vivi_12632947
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_12632947:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1261_end2943 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2950
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5030, $P5031
  fallback2950:
    set fb_tmp_180, $P5030
    repr_defined $I5008, fb_tmp_180
    unless $I5008 goto if1264_else2948 
    set $P5032, fb_tmp_180["sym"]
    set $P5034, $P5032
    goto if1264_end2949
  if1264_else2948:
    null $P5033
    set $P5034, $P5033
  if1264_end2949:
    unless_null $P5034, vivi_12652951
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  vivi_12652951:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1261_end2943:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2952
    nqp_get_sc_object $P5039, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_29, $P5038
    set fb_tmp_181, pkg_viv_tmp_29
    repr_defined $I5010, fb_tmp_181
    unless $I5010 goto if1266_else2953 
    set $P5040, fb_tmp_181["%RX"]
    set $P5042, $P5040
    goto if1266_end2954
  if1266_else2953:
    null $P5041
    set $P5042, $P5041
  if1266_end2954:
    unless_null $P5042, vivi_12672955
    new $P5043, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5043
    set $P5042, $P5043
  vivi_12672955:
    unless_null $P5042, vivi_12682956
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12682956:
    set $P5037, $P5042
  fallback2952:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2961
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  fallback2961:
    set fb_tmp_182, $P5045
    repr_defined $I5011, fb_tmp_182
    unless $I5011 goto if1270_else2959 
    set $P5047, fb_tmp_182["deflongname"]
    set $P5049, $P5047
    goto if1270_end2960
  if1270_else2959:
    null $P5048
    set $P5049, $P5048
  if1270_end2960:
    unless_null $P5049, vivi_12712962
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_12712962:
    unless $P5049 goto if1269_else2957 
.annotate 'line', 1331
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2965
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5051, $P5052
  fallback2965:
    set fb_tmp_183, $P5051
    repr_defined $I5012, fb_tmp_183
    unless $I5012 goto if1272_else2963 
    set $P5053, fb_tmp_183["deflongname"]
    set $P5055, $P5053
    goto if1272_end2964
  if1272_else2963:
    null $P5054
    set $P5055, $P5054
  if1272_end2964:
    unless_null $P5055, vivi_12732966
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5055, $P5056
  vivi_12732966:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1269_end2958
  if1269_else2957:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2969
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5058, $P5059
  fallback2969:
    set fb_tmp_184, $P5058
    repr_defined $I5013, fb_tmp_184
    unless $I5013 goto if1274_else2967 
    set $P5060, fb_tmp_184["latename"]
    set $P5062, $P5060
    goto if1274_end2968
  if1274_else2967:
    null $P5061
    set $P5062, $P5061
  if1274_end2968:
    unless_null $P5062, vivi_12752970
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5062, $P5063
  vivi_12752970:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1269_end2958:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2971
    nqp_get_sc_object $P5068, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_30, $P5067
    set fb_tmp_185, pkg_viv_tmp_30
    repr_defined $I5014, fb_tmp_185
    unless $I5014 goto if1276_else2972 
    set $P5069, fb_tmp_185["%RX"]
    set $P5071, $P5069
    goto if1276_end2973
  if1276_else2972:
    null $P5070
    set $P5071, $P5070
  if1276_end2973:
    unless_null $P5071, vivi_12772974
    new $P5072, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5072
    set $P5071, $P5072
  vivi_12772974:
    unless_null $P5071, vivi_12782975
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12782975:
    set $P5066, $P5071
  fallback2971:
.annotate 'line', 1332
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2976
    nqp_get_sc_object $P5076, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5075, $P5076
    set fb_tmp_186, $P5075
    repr_defined $I5015, fb_tmp_186
    unless $I5015 goto if1279_else2977 
    set $P5077, fb_tmp_186["$W"]
    set $P5079, $P5077
    goto if1279_end2978
  if1279_else2977:
    null $P5078
    set $P5079, $P5078
  if1279_end2978:
    unless_null $P5079, vivi_12802979
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5079, $P5080
  vivi_12802979:
    unless_null $P5079, vivi_12812980
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_12812980:
    set $P5074, $P5079
  fallback2976:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2981
    nqp_get_sc_object $P5084, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5083, $P5084
    set fb_tmp_187, $P5083
    repr_defined $I5016, fb_tmp_187
    unless $I5016 goto if1282_else2982 
    set $P5085, fb_tmp_187["$W"]
    set $P5087, $P5085
    goto if1282_end2983
  if1282_else2982:
    null $P5086
    set $P5087, $P5086
  if1282_end2983:
    unless_null $P5087, vivi_12832984
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5087, $P5088
  vivi_12832984:
    unless_null $P5087, vivi_12842985
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_12842985:
    set $P5082, $P5087
  fallback2981:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2988
    nqp_get_sc_object $P5093, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_31, $P5092
    set fb_tmp_189, pkg_viv_tmp_31
    repr_defined $I5018, fb_tmp_189
    unless $I5018 goto if1286_else2989 
    set $P5094, fb_tmp_189["%RX"]
    set $P5096, $P5094
    goto if1286_end2990
  if1286_else2989:
    null $P5095
    set $P5096, $P5095
  if1286_end2990:
    unless_null $P5096, vivi_12872991
    new $P5097, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5097
    set $P5096, $P5097
  vivi_12872991:
    unless_null $P5096, vivi_12882992
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_12882992:
    set $P5091, $P5096
  fallback2988:
    set fb_tmp_188, $P5091
    repr_defined $I5017, fb_tmp_188
    unless $I5017 goto if1285_else2986 
    set $P5099, fb_tmp_188["name"]
    set $P5101, $P5099
    goto if1285_end2987
  if1285_else2986:
    null $P5100
    set $P5101, $P5100
  if1285_end2987:
    unless_null $P5101, vivi_12892993
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5101, $P5102
  vivi_12892993:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_143_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1338
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1293_start
    .local string rx1293_tgt
    .local int rx1293_pos
    .local int rx1293_off
    .local int rx1293_eos
    .local int rx1293_rep
    .local pmc rx1293_cur
    .local pmc rx1293_curclass
    .local pmc rx1293_bstack
    .local pmc rx1293_cstack
    rx1293_start = self."!cursor_start_all"()
    set rx1293_cur, rx1293_start[0]
    set rx1293_tgt, rx1293_start[1]
    set rx1293_pos, rx1293_start[2]
    set rx1293_curclass, rx1293_start[3]
    set rx1293_bstack, rx1293_start[4]
    set $I19, rx1293_start[5]
    store_lex unicode:"$\x{a2}", rx1293_cur
    length rx1293_eos, rx1293_tgt
    eq $I19, 1, rx1293_restart3001
    gt rx1293_pos, rx1293_eos, rx1293_fail3002
    repr_get_attr_int $I11, self, rx1293_curclass, "$!from"
    ne $I11, -1, rxscan1294_done3008
    goto rxscan1294_scan3007
  rxscan1294_loop3006:
    inc rx1293_pos
    index rx1293_pos, rx1293_tgt, ucs4:".", rx1293_pos
    eq rx1293_pos, -1, rx1293_fail3002
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!from", rx1293_pos
  rxscan1294_scan3007:
    nqp_rxmark rx1293_bstack, rxscan1294_loop3006, rx1293_pos, 0
  rxscan1294_done3008:
    add $I11, rx1293_pos, 1
    gt $I11, rx1293_eos, rx1293_fail3002
    substr $S10, rx1293_tgt, rx1293_pos, 1
    ne $S10, ucs4:".", rx1293_fail3002
    add rx1293_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1295_03010
    nqp_push_label $P11, alt1295_13012
    nqp_rxmark rx1293_bstack, alt1295_end3009, -1, 0
    rx1293_cur."!alt"(rx1293_pos, "alt_nfa__32_1382959281.79996", $P11)
    goto rx1293_fail3002
  alt1295_03010:
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1296_pass3011, -1, 0
  rxsubrule1296_pass3011:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
    goto alt1295_end3009
  alt1295_13012:
    ge rx1293_pos, rx1293_eos, rx1293_fail3002
    substr $S11, rx1293_tgt, rx1293_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1293_fail3002
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1297_pass3013, -1, 0
  rxsubrule1297_pass3013:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
  alt1298_03015:
    nqp_rxmark rx1293_bstack, alt1298_13016, rx1293_pos, 0
    ge rx1293_pos, rx1293_eos, rx1293_fail3002
    substr $S11, rx1293_tgt, rx1293_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1293_fail3002
    goto alt1298_end3014
  alt1298_13016:
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
  alt1298_end3014:
    goto alt1295_end3009
  alt1295_end3009:
    nqp_rxcommit rx1293_bstack, alt1295_end3009
    nqp_rxmark rx1293_bstack, rxquantr1300_done3019, rx1293_pos, 0
  rxquantr1300_loop3018:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1301_03021
    nqp_push_label $P11, alt1301_13023
    nqp_rxmark rx1293_bstack, alt1301_end3020, -1, 0
    rx1293_cur."!alt"(rx1293_pos, "alt_nfa__33_1382959281.80021", $P11)
    goto rx1293_fail3002
  alt1301_03021:
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."args"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1302_pass3022, -1, 0
  rxsubrule1302_pass3022:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
    goto alt1301_end3020
  alt1301_13023:
    add $I11, rx1293_pos, 1
    gt $I11, rx1293_eos, rx1293_fail3002
    substr $S10, rx1293_tgt, rx1293_pos, 1
    ne $S10, ucs4:":", rx1293_fail3002
    add rx1293_pos, 1
    ge rx1293_pos, rx1293_eos, rx1293_fail3002
    is_cclass $I11, .CCLASS_WHITESPACE, rx1293_tgt, rx1293_pos
    unless $I11, rx1293_fail3002
    add rx1293_pos, 1
    repr_bind_attr_int rx1293_cur, rx1293_curclass, "$!pos", rx1293_pos
    $P11 = rx1293_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1293_curclass, "$!pos"
    lt $I11, 0, rx1293_fail3002
    nqp_rxmark rx1293_bstack, rxsubrule1303_pass3024, -1, 0
  rxsubrule1303_pass3024:
    rx1293_cstack = rx1293_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1293_pos, $P11, rx1293_curclass, "$!pos"
    goto alt1301_end3020
  alt1301_end3020:
    nqp_rxpeek $I19, rx1293_bstack, rxquantr1300_done3019
    inc $I19
    inc $I19
    set rx1293_rep, rx1293_bstack[$I19]
    nqp_rxcommit rx1293_bstack, rxquantr1300_done3019
    inc rx1293_rep
  rxquantr1300_done3019:
    rx1293_cur."!cursor_pass"(rx1293_pos, "dotty", 'backtrack'=>1)
    .return (rx1293_cur)
  rx1293_restart3001:
    repr_get_attr_obj rx1293_cstack, rx1293_cur, rx1293_curclass, "$!cstack"
  rx1293_fail3002:
    unless rx1293_bstack, rx1293_done3000
    pop $I19, rx1293_bstack
    if_null rx1293_cstack, rx1293_cstack_done3005
    unless rx1293_cstack, rx1293_cstack_done3005
    dec $I19
    set $P11, rx1293_cstack[$I19]
  rx1293_cstack_done3005:
    pop rx1293_rep, rx1293_bstack
    pop rx1293_pos, rx1293_bstack
    pop $I19, rx1293_bstack
    lt rx1293_pos, -1, rx1293_done3000
    lt rx1293_pos, 0, rx1293_fail3002
    eq $I19, 0, rx1293_fail3002
    nqp_islist $I20, rx1293_cstack
    unless $I20, rx1293_jump3003
    elements $I18, rx1293_bstack
    le $I18, 0, rx1293_cut3004
    dec $I18
    set $I18, rx1293_bstack[$I18]
  rx1293_cut3004:
    assign rx1293_cstack, $I18
  rx1293_jump3003:
    jump $I19
  rx1293_done3000:
    rx1293_cur."!cursor_fail"()
    .return (rx1293_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_144_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1304_start
    .local string rx1304_tgt
    .local int rx1304_pos
    .local int rx1304_off
    .local int rx1304_eos
    .local int rx1304_rep
    .local pmc rx1304_cur
    .local pmc rx1304_curclass
    .local pmc rx1304_bstack
    .local pmc rx1304_cstack
    rx1304_start = self."!cursor_start_all"()
    set rx1304_cur, rx1304_start[0]
    set rx1304_tgt, rx1304_start[1]
    set rx1304_pos, rx1304_start[2]
    set rx1304_curclass, rx1304_start[3]
    set rx1304_bstack, rx1304_start[4]
    set $I19, rx1304_start[5]
    store_lex unicode:"$\x{a2}", rx1304_cur
    length rx1304_eos, rx1304_tgt
    eq $I19, 1, rx1304_restart3027
    gt rx1304_pos, rx1304_eos, rx1304_fail3028
    repr_get_attr_int $I11, self, rx1304_curclass, "$!from"
    ne $I11, -1, rxscan1305_done3034
    goto rxscan1305_scan3033
  rxscan1305_loop3032:
    inc rx1304_pos
    gt rx1304_pos, rx1304_eos, rx1304_fail3028
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!from", rx1304_pos
  rxscan1305_scan3033:
    nqp_rxmark rx1304_bstack, rxscan1305_loop3032, rx1304_pos, 0
  rxscan1305_done3034:
    nqp_rxmark rx1304_bstack, rxcap1306_fail3036, rx1304_pos, 0
    add $I11, rx1304_pos, 4
    gt $I11, rx1304_eos, rx1304_fail3028
    substr $S10, rx1304_tgt, rx1304_pos, 4
    ne $S10, ucs4:"self", rx1304_fail3028
    add rx1304_pos, 4
    nqp_rxpeek $I19, rx1304_bstack, rxcap1306_fail3036
    inc $I19
    set $I11, rx1304_bstack[$I19]
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1304_pos)
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "sym")
    goto rxcap1306_done3035
  rxcap1306_fail3036:
    goto rx1304_fail3028
  rxcap1306_done3035:
    le rx1304_pos, 0, rx1304_fail3028
    is_cclass $I11, .CCLASS_WORD, rx1304_tgt, rx1304_pos
    if $I11, rx1304_fail3028
    sub $I11, rx1304_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1304_tgt, $I11
    unless $I11, rx1304_fail3028
    rx1304_cur."!cursor_pass"(rx1304_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1304_cur)
  rx1304_restart3027:
    repr_get_attr_obj rx1304_cstack, rx1304_cur, rx1304_curclass, "$!cstack"
  rx1304_fail3028:
    unless rx1304_bstack, rx1304_done3026
    pop $I19, rx1304_bstack
    if_null rx1304_cstack, rx1304_cstack_done3031
    unless rx1304_cstack, rx1304_cstack_done3031
    dec $I19
    set $P11, rx1304_cstack[$I19]
  rx1304_cstack_done3031:
    pop rx1304_rep, rx1304_bstack
    pop rx1304_pos, rx1304_bstack
    pop $I19, rx1304_bstack
    lt rx1304_pos, -1, rx1304_done3026
    lt rx1304_pos, 0, rx1304_fail3028
    eq $I19, 0, rx1304_fail3028
    nqp_islist $I20, rx1304_cstack
    unless $I20, rx1304_jump3029
    elements $I18, rx1304_bstack
    le $I18, 0, rx1304_cut3030
    dec $I18
    set $I18, rx1304_bstack[$I18]
  rx1304_cut3030:
    assign rx1304_cstack, $I18
  rx1304_jump3029:
    jump $I19
  rx1304_done3026:
    rx1304_cur."!cursor_fail"()
    .return (rx1304_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_145_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1353
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1308_start
    .local string rx1308_tgt
    .local int rx1308_pos
    .local int rx1308_off
    .local int rx1308_eos
    .local int rx1308_rep
    .local pmc rx1308_cur
    .local pmc rx1308_curclass
    .local pmc rx1308_bstack
    .local pmc rx1308_cstack
    rx1308_start = self."!cursor_start_all"()
    set rx1308_cur, rx1308_start[0]
    set rx1308_tgt, rx1308_start[1]
    set rx1308_pos, rx1308_start[2]
    set rx1308_curclass, rx1308_start[3]
    set rx1308_bstack, rx1308_start[4]
    set $I19, rx1308_start[5]
    store_lex unicode:"$\x{a2}", rx1308_cur
    length rx1308_eos, rx1308_tgt
    eq $I19, 1, rx1308_restart3040
    gt rx1308_pos, rx1308_eos, rx1308_fail3041
    repr_get_attr_int $I11, self, rx1308_curclass, "$!from"
    ne $I11, -1, rxscan1309_done3047
    goto rxscan1309_scan3046
  rxscan1309_loop3045:
    inc rx1308_pos
    gt rx1308_pos, rx1308_eos, rx1308_fail3041
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!from", rx1308_pos
  rxscan1309_scan3046:
    nqp_rxmark rx1308_bstack, rxscan1309_loop3045, rx1308_pos, 0
  rxscan1309_done3047:
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!pos", rx1308_pos
    $P11 = rx1308_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1308_curclass, "$!pos"
    lt $I11, 0, rx1308_fail3041
    nqp_rxmark rx1308_bstack, rxsubrule1310_pass3048, -1, 0
  rxsubrule1310_pass3048:
    rx1308_cstack = rx1308_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1308_pos, $P11, rx1308_curclass, "$!pos"
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!pos", rx1308_pos
    $P11 = rx1308_cur."args"()
    repr_get_attr_int $I11, $P11, rx1308_curclass, "$!pos"
    lt $I11, 0, rx1308_fail3041
    nqp_rxmark rx1308_bstack, rxsubrule1311_pass3049, -1, 0
  rxsubrule1311_pass3049:
    rx1308_cstack = rx1308_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1308_pos, $P11, rx1308_curclass, "$!pos"
    rx1308_cur."!cursor_pass"(rx1308_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1308_cur)
  rx1308_restart3040:
    repr_get_attr_obj rx1308_cstack, rx1308_cur, rx1308_curclass, "$!cstack"
  rx1308_fail3041:
    unless rx1308_bstack, rx1308_done3039
    pop $I19, rx1308_bstack
    if_null rx1308_cstack, rx1308_cstack_done3044
    unless rx1308_cstack, rx1308_cstack_done3044
    dec $I19
    set $P11, rx1308_cstack[$I19]
  rx1308_cstack_done3044:
    pop rx1308_rep, rx1308_bstack
    pop rx1308_pos, rx1308_bstack
    pop $I19, rx1308_bstack
    lt rx1308_pos, -1, rx1308_done3039
    lt rx1308_pos, 0, rx1308_fail3041
    eq $I19, 0, rx1308_fail3041
    nqp_islist $I20, rx1308_cstack
    unless $I20, rx1308_jump3042
    elements $I18, rx1308_bstack
    le $I18, 0, rx1308_cut3043
    dec $I18
    set $I18, rx1308_bstack[$I18]
  rx1308_cut3043:
    assign rx1308_cstack, $I18
  rx1308_jump3042:
    jump $I19
  rx1308_done3039:
    rx1308_cur."!cursor_fail"()
    .return (rx1308_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_146_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1312_start
    .local string rx1312_tgt
    .local int rx1312_pos
    .local int rx1312_off
    .local int rx1312_eos
    .local int rx1312_rep
    .local pmc rx1312_cur
    .local pmc rx1312_curclass
    .local pmc rx1312_bstack
    .local pmc rx1312_cstack
    rx1312_start = self."!cursor_start_all"()
    set rx1312_cur, rx1312_start[0]
    set rx1312_tgt, rx1312_start[1]
    set rx1312_pos, rx1312_start[2]
    set rx1312_curclass, rx1312_start[3]
    set rx1312_bstack, rx1312_start[4]
    set $I19, rx1312_start[5]
    store_lex unicode:"$\x{a2}", rx1312_cur
    length rx1312_eos, rx1312_tgt
    eq $I19, 1, rx1312_restart3052
    gt rx1312_pos, rx1312_eos, rx1312_fail3053
    repr_get_attr_int $I11, self, rx1312_curclass, "$!from"
    ne $I11, -1, rxscan1313_done3059
    goto rxscan1313_scan3058
  rxscan1313_loop3057:
    inc rx1312_pos
    index rx1312_pos, rx1312_tgt, ucs4:"pir::", rx1312_pos
    eq rx1312_pos, -1, rx1312_fail3053
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!from", rx1312_pos
  rxscan1313_scan3058:
    nqp_rxmark rx1312_bstack, rxscan1313_loop3057, rx1312_pos, 0
  rxscan1313_done3059:
    add $I11, rx1312_pos, 5
    gt $I11, rx1312_eos, rx1312_fail3053
    substr $S10, rx1312_tgt, rx1312_pos, 5
    ne $S10, ucs4:"pir::", rx1312_fail3053
    add rx1312_pos, 5
    nqp_rxmark rx1312_bstack, rxcap1314_fail3061, rx1312_pos, 0
    nqp_rxmark rx1312_bstack, rxquantr1315_done3063, -1, 0
  rxquantr1315_loop3062:
    ge rx1312_pos, rx1312_eos, rx1312_fail3053
    is_cclass $I11, .CCLASS_WORD, rx1312_tgt, rx1312_pos
    unless $I11, rx1312_fail3053
    add rx1312_pos, 1
    nqp_rxpeek $I19, rx1312_bstack, rxquantr1315_done3063
    inc $I19
    inc $I19
    set rx1312_rep, rx1312_bstack[$I19]
    nqp_rxcommit rx1312_bstack, rxquantr1315_done3063
    inc rx1312_rep
    nqp_rxmark rx1312_bstack, rxquantr1315_done3063, rx1312_pos, rx1312_rep
    goto rxquantr1315_loop3062
  rxquantr1315_done3063:
    nqp_rxpeek $I19, rx1312_bstack, rxcap1314_fail3061
    inc $I19
    set $I11, rx1312_bstack[$I19]
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1312_pos)
    rx1312_cstack = rx1312_cur."!cursor_capture"($P11, "op")
    goto rxcap1314_done3060
  rxcap1314_fail3061:
    goto rx1312_fail3053
  rxcap1314_done3060:
    nqp_rxmark rx1312_bstack, rxquantr1316_done3065, rx1312_pos, 0
  rxquantr1316_loop3064:
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."args"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail3053
    goto rxsubrule1317_pass3066
  rxsubrule1317_back3067:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail3053
  rxsubrule1317_pass3066:
    rx1312_cstack = rx1312_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1317_back3067
    push rx1312_bstack, $I11
    push rx1312_bstack, 0
    push rx1312_bstack, rx1312_pos
    elements $I11, rx1312_cstack
    push rx1312_bstack, $I11
    repr_get_attr_int rx1312_pos, $P11, rx1312_curclass, "$!pos"
    nqp_rxpeek $I19, rx1312_bstack, rxquantr1316_done3065
    inc $I19
    inc $I19
    set rx1312_rep, rx1312_bstack[$I19]
    nqp_rxcommit rx1312_bstack, rxquantr1316_done3065
    inc rx1312_rep
  rxquantr1316_done3065:
    rx1312_cur."!cursor_pass"(rx1312_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1312_cur)
  rx1312_restart3052:
    repr_get_attr_obj rx1312_cstack, rx1312_cur, rx1312_curclass, "$!cstack"
  rx1312_fail3053:
    unless rx1312_bstack, rx1312_done3051
    pop $I19, rx1312_bstack
    if_null rx1312_cstack, rx1312_cstack_done3056
    unless rx1312_cstack, rx1312_cstack_done3056
    dec $I19
    set $P11, rx1312_cstack[$I19]
  rx1312_cstack_done3056:
    pop rx1312_rep, rx1312_bstack
    pop rx1312_pos, rx1312_bstack
    pop $I19, rx1312_bstack
    lt rx1312_pos, -1, rx1312_done3051
    lt rx1312_pos, 0, rx1312_fail3053
    eq $I19, 0, rx1312_fail3053
    nqp_islist $I20, rx1312_cstack
    unless $I20, rx1312_jump3054
    elements $I18, rx1312_bstack
    le $I18, 0, rx1312_cut3055
    dec $I18
    set $I18, rx1312_bstack[$I18]
  rx1312_cut3055:
    assign rx1312_cstack, $I18
  rx1312_jump3054:
    jump $I19
  rx1312_done3051:
    rx1312_cur."!cursor_fail"()
    .return (rx1312_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_147_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1361
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1318_start
    .local string rx1318_tgt
    .local int rx1318_pos
    .local int rx1318_off
    .local int rx1318_eos
    .local int rx1318_rep
    .local pmc rx1318_cur
    .local pmc rx1318_curclass
    .local pmc rx1318_bstack
    .local pmc rx1318_cstack
    rx1318_start = self."!cursor_start_all"()
    set rx1318_cur, rx1318_start[0]
    set rx1318_tgt, rx1318_start[1]
    set rx1318_pos, rx1318_start[2]
    set rx1318_curclass, rx1318_start[3]
    set rx1318_bstack, rx1318_start[4]
    set $I19, rx1318_start[5]
    store_lex unicode:"$\x{a2}", rx1318_cur
    length rx1318_eos, rx1318_tgt
    eq $I19, 1, rx1318_restart3070
    gt rx1318_pos, rx1318_eos, rx1318_fail3071
    repr_get_attr_int $I11, self, rx1318_curclass, "$!from"
    ne $I11, -1, rxscan1319_done3077
    goto rxscan1319_scan3076
  rxscan1319_loop3075:
    inc rx1318_pos
    index rx1318_pos, rx1318_tgt, ucs4:"pir::const::", rx1318_pos
    eq rx1318_pos, -1, rx1318_fail3071
    repr_bind_attr_int rx1318_cur, rx1318_curclass, "$!from", rx1318_pos
  rxscan1319_scan3076:
    nqp_rxmark rx1318_bstack, rxscan1319_loop3075, rx1318_pos, 0
  rxscan1319_done3077:
    add $I11, rx1318_pos, 12
    gt $I11, rx1318_eos, rx1318_fail3071
    substr $S10, rx1318_tgt, rx1318_pos, 12
    ne $S10, ucs4:"pir::const::", rx1318_fail3071
    add rx1318_pos, 12
    nqp_rxmark rx1318_bstack, rxcap1320_fail3079, rx1318_pos, 0
    nqp_rxmark rx1318_bstack, rxquantr1321_done3081, -1, 0
  rxquantr1321_loop3080:
    ge rx1318_pos, rx1318_eos, rx1318_fail3071
    is_cclass $I11, .CCLASS_WORD, rx1318_tgt, rx1318_pos
    unless $I11, rx1318_fail3071
    add rx1318_pos, 1
    nqp_rxpeek $I19, rx1318_bstack, rxquantr1321_done3081
    inc $I19
    inc $I19
    set rx1318_rep, rx1318_bstack[$I19]
    nqp_rxcommit rx1318_bstack, rxquantr1321_done3081
    inc rx1318_rep
    nqp_rxmark rx1318_bstack, rxquantr1321_done3081, rx1318_pos, rx1318_rep
    goto rxquantr1321_loop3080
  rxquantr1321_done3081:
    nqp_rxpeek $I19, rx1318_bstack, rxcap1320_fail3079
    inc $I19
    set $I11, rx1318_bstack[$I19]
    repr_bind_attr_int rx1318_cur, rx1318_curclass, "$!pos", rx1318_pos
    $P11 = rx1318_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1318_pos)
    rx1318_cstack = rx1318_cur."!cursor_capture"($P11, "const")
    goto rxcap1320_done3078
  rxcap1320_fail3079:
    goto rx1318_fail3071
  rxcap1320_done3078:
    rx1318_cur."!cursor_pass"(rx1318_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1318_cur)
  rx1318_restart3070:
    repr_get_attr_obj rx1318_cstack, rx1318_cur, rx1318_curclass, "$!cstack"
  rx1318_fail3071:
    unless rx1318_bstack, rx1318_done3069
    pop $I19, rx1318_bstack
    if_null rx1318_cstack, rx1318_cstack_done3074
    unless rx1318_cstack, rx1318_cstack_done3074
    dec $I19
    set $P11, rx1318_cstack[$I19]
  rx1318_cstack_done3074:
    pop rx1318_rep, rx1318_bstack
    pop rx1318_pos, rx1318_bstack
    pop $I19, rx1318_bstack
    lt rx1318_pos, -1, rx1318_done3069
    lt rx1318_pos, 0, rx1318_fail3071
    eq $I19, 0, rx1318_fail3071
    nqp_islist $I20, rx1318_cstack
    unless $I20, rx1318_jump3072
    elements $I18, rx1318_bstack
    le $I18, 0, rx1318_cut3073
    dec $I18
    set $I18, rx1318_bstack[$I18]
  rx1318_cut3073:
    assign rx1318_cstack, $I18
  rx1318_jump3072:
    jump $I19
  rx1318_done3069:
    rx1318_cur."!cursor_fail"()
    .return (rx1318_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_148_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1322_start
    .local string rx1322_tgt
    .local int rx1322_pos
    .local int rx1322_off
    .local int rx1322_eos
    .local int rx1322_rep
    .local pmc rx1322_cur
    .local pmc rx1322_curclass
    .local pmc rx1322_bstack
    .local pmc rx1322_cstack
    rx1322_start = self."!cursor_start_all"()
    set rx1322_cur, rx1322_start[0]
    set rx1322_tgt, rx1322_start[1]
    set rx1322_pos, rx1322_start[2]
    set rx1322_curclass, rx1322_start[3]
    set rx1322_bstack, rx1322_start[4]
    set $I19, rx1322_start[5]
    store_lex unicode:"$\x{a2}", rx1322_cur
    length rx1322_eos, rx1322_tgt
    eq $I19, 1, rx1322_restart3084
    gt rx1322_pos, rx1322_eos, rx1322_fail3085
    repr_get_attr_int $I11, self, rx1322_curclass, "$!from"
    ne $I11, -1, rxscan1323_done3091
    goto rxscan1323_scan3090
  rxscan1323_loop3089:
    inc rx1322_pos
    index rx1322_pos, rx1322_tgt, ucs4:"nqp::", rx1322_pos
    eq rx1322_pos, -1, rx1322_fail3085
    repr_bind_attr_int rx1322_cur, rx1322_curclass, "$!from", rx1322_pos
  rxscan1323_scan3090:
    nqp_rxmark rx1322_bstack, rxscan1323_loop3089, rx1322_pos, 0
  rxscan1323_done3091:
    add $I11, rx1322_pos, 5
    gt $I11, rx1322_eos, rx1322_fail3085
    substr $S10, rx1322_tgt, rx1322_pos, 5
    ne $S10, ucs4:"nqp::", rx1322_fail3085
    add rx1322_pos, 5
    nqp_rxmark rx1322_bstack, rxcap1324_fail3093, rx1322_pos, 0
    nqp_rxmark rx1322_bstack, rxquantr1325_done3095, -1, 0
  rxquantr1325_loop3094:
    ge rx1322_pos, rx1322_eos, rx1322_fail3085
    is_cclass $I11, .CCLASS_WORD, rx1322_tgt, rx1322_pos
    unless $I11, rx1322_fail3085
    add rx1322_pos, 1
    nqp_rxpeek $I19, rx1322_bstack, rxquantr1325_done3095
    inc $I19
    inc $I19
    set rx1322_rep, rx1322_bstack[$I19]
    nqp_rxcommit rx1322_bstack, rxquantr1325_done3095
    inc rx1322_rep
    nqp_rxmark rx1322_bstack, rxquantr1325_done3095, rx1322_pos, rx1322_rep
    goto rxquantr1325_loop3094
  rxquantr1325_done3095:
    nqp_rxpeek $I19, rx1322_bstack, rxcap1324_fail3093
    inc $I19
    set $I11, rx1322_bstack[$I19]
    repr_bind_attr_int rx1322_cur, rx1322_curclass, "$!pos", rx1322_pos
    $P11 = rx1322_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1322_pos)
    rx1322_cstack = rx1322_cur."!cursor_capture"($P11, "op")
    goto rxcap1324_done3092
  rxcap1324_fail3093:
    goto rx1322_fail3085
  rxcap1324_done3092:
    nqp_rxmark rx1322_bstack, rxquantr1326_done3097, rx1322_pos, 0
  rxquantr1326_loop3096:
    repr_bind_attr_int rx1322_cur, rx1322_curclass, "$!pos", rx1322_pos
    $P11 = rx1322_cur."args"()
    repr_get_attr_int $I11, $P11, rx1322_curclass, "$!pos"
    lt $I11, 0, rx1322_fail3085
    goto rxsubrule1327_pass3098
  rxsubrule1327_back3099:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1322_curclass, "$!pos"
    lt $I11, 0, rx1322_fail3085
  rxsubrule1327_pass3098:
    rx1322_cstack = rx1322_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1327_back3099
    push rx1322_bstack, $I11
    push rx1322_bstack, 0
    push rx1322_bstack, rx1322_pos
    elements $I11, rx1322_cstack
    push rx1322_bstack, $I11
    repr_get_attr_int rx1322_pos, $P11, rx1322_curclass, "$!pos"
    nqp_rxpeek $I19, rx1322_bstack, rxquantr1326_done3097
    inc $I19
    inc $I19
    set rx1322_rep, rx1322_bstack[$I19]
    nqp_rxcommit rx1322_bstack, rxquantr1326_done3097
    inc rx1322_rep
  rxquantr1326_done3097:
    rx1322_cur."!cursor_pass"(rx1322_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1322_cur)
  rx1322_restart3084:
    repr_get_attr_obj rx1322_cstack, rx1322_cur, rx1322_curclass, "$!cstack"
  rx1322_fail3085:
    unless rx1322_bstack, rx1322_done3083
    pop $I19, rx1322_bstack
    if_null rx1322_cstack, rx1322_cstack_done3088
    unless rx1322_cstack, rx1322_cstack_done3088
    dec $I19
    set $P11, rx1322_cstack[$I19]
  rx1322_cstack_done3088:
    pop rx1322_rep, rx1322_bstack
    pop rx1322_pos, rx1322_bstack
    pop $I19, rx1322_bstack
    lt rx1322_pos, -1, rx1322_done3083
    lt rx1322_pos, 0, rx1322_fail3085
    eq $I19, 0, rx1322_fail3085
    nqp_islist $I20, rx1322_cstack
    unless $I20, rx1322_jump3086
    elements $I18, rx1322_bstack
    le $I18, 0, rx1322_cut3087
    dec $I18
    set $I18, rx1322_bstack[$I18]
  rx1322_cut3087:
    assign rx1322_cstack, $I18
  rx1322_jump3086:
    jump $I19
  rx1322_done3083:
    rx1322_cur."!cursor_fail"()
    .return (rx1322_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_149_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1328_start
    .local string rx1328_tgt
    .local int rx1328_pos
    .local int rx1328_off
    .local int rx1328_eos
    .local int rx1328_rep
    .local pmc rx1328_cur
    .local pmc rx1328_curclass
    .local pmc rx1328_bstack
    .local pmc rx1328_cstack
    rx1328_start = self."!cursor_start_all"()
    set rx1328_cur, rx1328_start[0]
    set rx1328_tgt, rx1328_start[1]
    set rx1328_pos, rx1328_start[2]
    set rx1328_curclass, rx1328_start[3]
    set rx1328_bstack, rx1328_start[4]
    set $I19, rx1328_start[5]
    store_lex unicode:"$\x{a2}", rx1328_cur
    length rx1328_eos, rx1328_tgt
    eq $I19, 1, rx1328_restart3102
    gt rx1328_pos, rx1328_eos, rx1328_fail3103
    repr_get_attr_int $I11, self, rx1328_curclass, "$!from"
    ne $I11, -1, rxscan1329_done3109
    goto rxscan1329_scan3108
  rxscan1329_loop3107:
    inc rx1328_pos
    index rx1328_pos, rx1328_tgt, ucs4:"nqp::const::", rx1328_pos
    eq rx1328_pos, -1, rx1328_fail3103
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!from", rx1328_pos
  rxscan1329_scan3108:
    nqp_rxmark rx1328_bstack, rxscan1329_loop3107, rx1328_pos, 0
  rxscan1329_done3109:
    add $I11, rx1328_pos, 12
    gt $I11, rx1328_eos, rx1328_fail3103
    substr $S10, rx1328_tgt, rx1328_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1328_fail3103
    add rx1328_pos, 12
    nqp_rxmark rx1328_bstack, rxcap1330_fail3111, rx1328_pos, 0
    nqp_rxmark rx1328_bstack, rxquantr1331_done3113, -1, 0
  rxquantr1331_loop3112:
    ge rx1328_pos, rx1328_eos, rx1328_fail3103
    is_cclass $I11, .CCLASS_WORD, rx1328_tgt, rx1328_pos
    unless $I11, rx1328_fail3103
    add rx1328_pos, 1
    nqp_rxpeek $I19, rx1328_bstack, rxquantr1331_done3113
    inc $I19
    inc $I19
    set rx1328_rep, rx1328_bstack[$I19]
    nqp_rxcommit rx1328_bstack, rxquantr1331_done3113
    inc rx1328_rep
    nqp_rxmark rx1328_bstack, rxquantr1331_done3113, rx1328_pos, rx1328_rep
    goto rxquantr1331_loop3112
  rxquantr1331_done3113:
    nqp_rxpeek $I19, rx1328_bstack, rxcap1330_fail3111
    inc $I19
    set $I11, rx1328_bstack[$I19]
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!pos", rx1328_pos
    $P11 = rx1328_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1328_pos)
    rx1328_cstack = rx1328_cur."!cursor_capture"($P11, "const")
    goto rxcap1330_done3110
  rxcap1330_fail3111:
    goto rx1328_fail3103
  rxcap1330_done3110:
    rx1328_cur."!cursor_pass"(rx1328_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1328_cur)
  rx1328_restart3102:
    repr_get_attr_obj rx1328_cstack, rx1328_cur, rx1328_curclass, "$!cstack"
  rx1328_fail3103:
    unless rx1328_bstack, rx1328_done3101
    pop $I19, rx1328_bstack
    if_null rx1328_cstack, rx1328_cstack_done3106
    unless rx1328_cstack, rx1328_cstack_done3106
    dec $I19
    set $P11, rx1328_cstack[$I19]
  rx1328_cstack_done3106:
    pop rx1328_rep, rx1328_bstack
    pop rx1328_pos, rx1328_bstack
    pop $I19, rx1328_bstack
    lt rx1328_pos, -1, rx1328_done3101
    lt rx1328_pos, 0, rx1328_fail3103
    eq $I19, 0, rx1328_fail3103
    nqp_islist $I20, rx1328_cstack
    unless $I20, rx1328_jump3104
    elements $I18, rx1328_bstack
    le $I18, 0, rx1328_cut3105
    dec $I18
    set $I18, rx1328_bstack[$I18]
  rx1328_cut3105:
    assign rx1328_cstack, $I18
  rx1328_jump3104:
    jump $I19
  rx1328_done3101:
    rx1328_cur."!cursor_fail"()
    .return (rx1328_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_150_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_433_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1332_start
    .local string rx1332_tgt
    .local int rx1332_pos
    .local int rx1332_off
    .local int rx1332_eos
    .local int rx1332_rep
    .local pmc rx1332_cur
    .local pmc rx1332_curclass
    .local pmc rx1332_bstack
    .local pmc rx1332_cstack
    rx1332_start = self."!cursor_start_all"()
    set rx1332_cur, rx1332_start[0]
    set rx1332_tgt, rx1332_start[1]
    set rx1332_pos, rx1332_start[2]
    set rx1332_curclass, rx1332_start[3]
    set rx1332_bstack, rx1332_start[4]
    set $I19, rx1332_start[5]
    store_lex unicode:"$\x{a2}", rx1332_cur
    length rx1332_eos, rx1332_tgt
    eq $I19, 1, rx1332_restart3116
    gt rx1332_pos, rx1332_eos, rx1332_fail3117
    repr_get_attr_int $I11, self, rx1332_curclass, "$!from"
    ne $I11, -1, rxscan1333_done3123
    goto rxscan1333_scan3122
  rxscan1333_loop3121:
    inc rx1332_pos
    index rx1332_pos, rx1332_tgt, ucs4:"{*}", rx1332_pos
    eq rx1332_pos, -1, rx1332_fail3117
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!from", rx1332_pos
  rxscan1333_scan3122:
    nqp_rxmark rx1332_bstack, rxscan1333_loop3121, rx1332_pos, 0
  rxscan1333_done3123:
    add $I11, rx1332_pos, 3
    gt $I11, rx1332_eos, rx1332_fail3117
    substr $S10, rx1332_tgt, rx1332_pos, 3
    ne $S10, ucs4:"{*}", rx1332_fail3117
    add rx1332_pos, 3
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail3117
  alt1334_03125:
    nqp_rxmark rx1332_bstack, alt1334_13131, rx1332_pos, 0
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    store_lex unicode:"$\x{a2}", rx1332_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_433_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1332_fail3117
    goto alt1334_end3124
  alt1334_13131:
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail3117
    repr_get_attr_int rx1332_pos, $P11, rx1332_curclass, "$!pos"
  alt1334_end3124:
    rx1332_cur."!cursor_pass"(rx1332_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1332_cur)
  rx1332_restart3116:
    repr_get_attr_obj rx1332_cstack, rx1332_cur, rx1332_curclass, "$!cstack"
  rx1332_fail3117:
    unless rx1332_bstack, rx1332_done3115
    pop $I19, rx1332_bstack
    if_null rx1332_cstack, rx1332_cstack_done3120
    unless rx1332_cstack, rx1332_cstack_done3120
    dec $I19
    set $P11, rx1332_cstack[$I19]
  rx1332_cstack_done3120:
    pop rx1332_rep, rx1332_bstack
    pop rx1332_pos, rx1332_bstack
    pop $I19, rx1332_bstack
    lt rx1332_pos, -1, rx1332_done3115
    lt rx1332_pos, 0, rx1332_fail3117
    eq $I19, 0, rx1332_fail3117
    nqp_islist $I20, rx1332_cstack
    unless $I20, rx1332_jump3118
    elements $I18, rx1332_bstack
    le $I18, 0, rx1332_cut3119
    dec $I18
    set $I18, rx1332_bstack[$I18]
  rx1332_cut3119:
    assign rx1332_cstack, $I18
  rx1332_jump3118:
    jump $I19
  rx1332_done3115:
    rx1332_cur."!cursor_fail"()
    .return (rx1332_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_433_1382959278.72036") :anon :lex :outer("cuid_150_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1375
    .local pmc fb_tmp_190 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback3126
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_190, $P5002
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if1335_else3127 
    set $P5004, fb_tmp_190["$MULTINESS"]
    set $P5006, $P5004
    goto if1335_end3128
  if1335_else3127:
    null $P5005
    set $P5006, $P5005
  if1335_end3128:
    unless_null $P5006, vivi_13363129
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_13363129:
    unless_null $P5006, vivi_13373130
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13373130:
    set $P5001, $P5006
  fallback3126:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_151_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1339_start
    .local string rx1339_tgt
    .local int rx1339_pos
    .local int rx1339_off
    .local int rx1339_eos
    .local int rx1339_rep
    .local pmc rx1339_cur
    .local pmc rx1339_curclass
    .local pmc rx1339_bstack
    .local pmc rx1339_cstack
    rx1339_start = self."!cursor_start_all"()
    set rx1339_cur, rx1339_start[0]
    set rx1339_tgt, rx1339_start[1]
    set rx1339_pos, rx1339_start[2]
    set rx1339_curclass, rx1339_start[3]
    set rx1339_bstack, rx1339_start[4]
    set $I19, rx1339_start[5]
    store_lex unicode:"$\x{a2}", rx1339_cur
    length rx1339_eos, rx1339_tgt
    eq $I19, 1, rx1339_restart3135
    gt rx1339_pos, rx1339_eos, rx1339_fail3136
    repr_get_attr_int $I11, self, rx1339_curclass, "$!from"
    ne $I11, -1, rxscan1340_done3142
    goto rxscan1340_scan3141
  rxscan1340_loop3140:
    inc rx1339_pos
    gt rx1339_pos, rx1339_eos, rx1339_fail3136
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!from", rx1339_pos
  rxscan1340_scan3141:
    nqp_rxmark rx1339_bstack, rxscan1340_loop3140, rx1339_pos, 0
  rxscan1340_done3142:
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."name"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail3136
    nqp_rxmark rx1339_bstack, rxsubrule1341_pass3143, -1, 0
  rxsubrule1341_pass3143:
    rx1339_cstack = rx1339_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1339_pos, $P11, rx1339_curclass, "$!pos"
    nqp_rxmark rx1339_bstack, rxquantr1342_done3145, rx1339_pos, 0
  rxquantr1342_loop3144:
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."args"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail3136
    goto rxsubrule1343_pass3146
  rxsubrule1343_back3147:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail3136
  rxsubrule1343_pass3146:
    rx1339_cstack = rx1339_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1343_back3147
    push rx1339_bstack, $I11
    push rx1339_bstack, 0
    push rx1339_bstack, rx1339_pos
    elements $I11, rx1339_cstack
    push rx1339_bstack, $I11
    repr_get_attr_int rx1339_pos, $P11, rx1339_curclass, "$!pos"
    nqp_rxpeek $I19, rx1339_bstack, rxquantr1342_done3145
    inc $I19
    inc $I19
    set rx1339_rep, rx1339_bstack[$I19]
    nqp_rxcommit rx1339_bstack, rxquantr1342_done3145
    inc rx1339_rep
  rxquantr1342_done3145:
    rx1339_cur."!cursor_pass"(rx1339_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1339_cur)
  rx1339_restart3135:
    repr_get_attr_obj rx1339_cstack, rx1339_cur, rx1339_curclass, "$!cstack"
  rx1339_fail3136:
    unless rx1339_bstack, rx1339_done3134
    pop $I19, rx1339_bstack
    if_null rx1339_cstack, rx1339_cstack_done3139
    unless rx1339_cstack, rx1339_cstack_done3139
    dec $I19
    set $P11, rx1339_cstack[$I19]
  rx1339_cstack_done3139:
    pop rx1339_rep, rx1339_bstack
    pop rx1339_pos, rx1339_bstack
    pop $I19, rx1339_bstack
    lt rx1339_pos, -1, rx1339_done3134
    lt rx1339_pos, 0, rx1339_fail3136
    eq $I19, 0, rx1339_fail3136
    nqp_islist $I20, rx1339_cstack
    unless $I20, rx1339_jump3137
    elements $I18, rx1339_bstack
    le $I18, 0, rx1339_cut3138
    dec $I18
    set $I18, rx1339_bstack[$I18]
  rx1339_cut3138:
    assign rx1339_cstack, $I18
  rx1339_jump3137:
    jump $I19
  rx1339_done3134:
    rx1339_cur."!cursor_fail"()
    .return (rx1339_cur) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_152_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1344_start
    .local string rx1344_tgt
    .local int rx1344_pos
    .local int rx1344_off
    .local int rx1344_eos
    .local int rx1344_rep
    .local pmc rx1344_cur
    .local pmc rx1344_curclass
    .local pmc rx1344_bstack
    .local pmc rx1344_cstack
    rx1344_start = self."!cursor_start_all"()
    set rx1344_cur, rx1344_start[0]
    set rx1344_tgt, rx1344_start[1]
    set rx1344_pos, rx1344_start[2]
    set rx1344_curclass, rx1344_start[3]
    set rx1344_bstack, rx1344_start[4]
    set $I19, rx1344_start[5]
    store_lex unicode:"$\x{a2}", rx1344_cur
    length rx1344_eos, rx1344_tgt
    eq $I19, 1, rx1344_restart3150
    gt rx1344_pos, rx1344_eos, rx1344_fail3151
    repr_get_attr_int $I11, self, rx1344_curclass, "$!from"
    ne $I11, -1, rxscan1345_done3157
    goto rxscan1345_scan3156
  rxscan1345_loop3155:
    inc rx1344_pos
    index rx1344_pos, rx1344_tgt, ucs4:"(", rx1344_pos
    eq rx1344_pos, -1, rx1344_fail3151
    repr_bind_attr_int rx1344_cur, rx1344_curclass, "$!from", rx1344_pos
  rxscan1345_scan3156:
    nqp_rxmark rx1344_bstack, rxscan1345_loop3155, rx1344_pos, 0
  rxscan1345_done3157:
    add $I11, rx1344_pos, 1
    gt $I11, rx1344_eos, rx1344_fail3151
    substr $S10, rx1344_tgt, rx1344_pos, 1
    ne $S10, ucs4:"(", rx1344_fail3151
    add rx1344_pos, 1
    repr_bind_attr_int rx1344_cur, rx1344_curclass, "$!pos", rx1344_pos
    $P11 = rx1344_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1344_curclass, "$!pos"
    lt $I11, 0, rx1344_fail3151
    nqp_rxmark rx1344_bstack, rxsubrule1346_pass3158, -1, 0
  rxsubrule1346_pass3158:
    rx1344_cstack = rx1344_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1344_pos, $P11, rx1344_curclass, "$!pos"
    add $I11, rx1344_pos, 1
    gt $I11, rx1344_eos, rx1344_fail3151
    substr $S10, rx1344_tgt, rx1344_pos, 1
    ne $S10, ucs4:")", rx1344_fail3151
    add rx1344_pos, 1
    rx1344_cur."!cursor_pass"(rx1344_pos, "args", 'backtrack'=>1)
    .return (rx1344_cur)
  rx1344_restart3150:
    repr_get_attr_obj rx1344_cstack, rx1344_cur, rx1344_curclass, "$!cstack"
  rx1344_fail3151:
    unless rx1344_bstack, rx1344_done3149
    pop $I19, rx1344_bstack
    if_null rx1344_cstack, rx1344_cstack_done3154
    unless rx1344_cstack, rx1344_cstack_done3154
    dec $I19
    set $P11, rx1344_cstack[$I19]
  rx1344_cstack_done3154:
    pop rx1344_rep, rx1344_bstack
    pop rx1344_pos, rx1344_bstack
    pop $I19, rx1344_bstack
    lt rx1344_pos, -1, rx1344_done3149
    lt rx1344_pos, 0, rx1344_fail3151
    eq $I19, 0, rx1344_fail3151
    nqp_islist $I20, rx1344_cstack
    unless $I20, rx1344_jump3152
    elements $I18, rx1344_bstack
    le $I18, 0, rx1344_cut3153
    dec $I18
    set $I18, rx1344_bstack[$I18]
  rx1344_cut3153:
    assign rx1344_cstack, $I18
  rx1344_jump3152:
    jump $I19
  rx1344_done3149:
    rx1344_cur."!cursor_fail"()
    .return (rx1344_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_153_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1347_start
    .local string rx1347_tgt
    .local int rx1347_pos
    .local int rx1347_off
    .local int rx1347_eos
    .local int rx1347_rep
    .local pmc rx1347_cur
    .local pmc rx1347_curclass
    .local pmc rx1347_bstack
    .local pmc rx1347_cstack
    rx1347_start = self."!cursor_start_all"()
    set rx1347_cur, rx1347_start[0]
    set rx1347_tgt, rx1347_start[1]
    set rx1347_pos, rx1347_start[2]
    set rx1347_curclass, rx1347_start[3]
    set rx1347_bstack, rx1347_start[4]
    set $I19, rx1347_start[5]
    store_lex unicode:"$\x{a2}", rx1347_cur
    length rx1347_eos, rx1347_tgt
    eq $I19, 1, rx1347_restart3161
    gt rx1347_pos, rx1347_eos, rx1347_fail3162
    repr_get_attr_int $I11, self, rx1347_curclass, "$!from"
    ne $I11, -1, rxscan1348_done3168
    goto rxscan1348_scan3167
  rxscan1348_loop3166:
    inc rx1347_pos
    gt rx1347_pos, rx1347_eos, rx1347_fail3162
    repr_bind_attr_int rx1347_cur, rx1347_curclass, "$!from", rx1347_pos
  rxscan1348_scan3167:
    nqp_rxmark rx1347_bstack, rxscan1348_loop3166, rx1347_pos, 0
  rxscan1348_done3168:
    repr_bind_attr_int rx1347_cur, rx1347_curclass, "$!pos", rx1347_pos
    $P11 = rx1347_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1347_curclass, "$!pos"
    lt $I11, 0, rx1347_fail3162
    repr_get_attr_int rx1347_pos, $P11, rx1347_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1350_03171
    nqp_push_label $P11, alt1350_13173
    nqp_rxmark rx1347_bstack, alt1350_end3170, -1, 0
    rx1347_cur."!alt"(rx1347_pos, "alt_nfa__34_1382959281.94318", $P11)
    goto rx1347_fail3162
  alt1350_03171:
    repr_bind_attr_int rx1347_cur, rx1347_curclass, "$!pos", rx1347_pos
    $P11 = rx1347_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1347_curclass, "$!pos"
    lt $I11, 0, rx1347_fail3162
    nqp_rxmark rx1347_bstack, rxsubrule1351_pass3172, -1, 0
  rxsubrule1351_pass3172:
    rx1347_cstack = rx1347_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1347_pos, $P11, rx1347_curclass, "$!pos"
    goto alt1350_end3170
  alt1350_13173:
    goto alt1350_end3170
  alt1350_end3170:
    nqp_rxcommit rx1347_bstack, alt1350_end3170
    rx1347_cur."!cursor_pass"(rx1347_pos, "arglist", 'backtrack'=>1)
    .return (rx1347_cur)
  rx1347_restart3161:
    repr_get_attr_obj rx1347_cstack, rx1347_cur, rx1347_curclass, "$!cstack"
  rx1347_fail3162:
    unless rx1347_bstack, rx1347_done3160
    pop $I19, rx1347_bstack
    if_null rx1347_cstack, rx1347_cstack_done3165
    unless rx1347_cstack, rx1347_cstack_done3165
    dec $I19
    set $P11, rx1347_cstack[$I19]
  rx1347_cstack_done3165:
    pop rx1347_rep, rx1347_bstack
    pop rx1347_pos, rx1347_bstack
    pop $I19, rx1347_bstack
    lt rx1347_pos, -1, rx1347_done3160
    lt rx1347_pos, 0, rx1347_fail3162
    eq $I19, 0, rx1347_fail3162
    nqp_islist $I20, rx1347_cstack
    unless $I20, rx1347_jump3163
    elements $I18, rx1347_bstack
    le $I18, 0, rx1347_cut3164
    dec $I18
    set $I18, rx1347_bstack[$I18]
  rx1347_cut3164:
    assign rx1347_cstack, $I18
  rx1347_jump3163:
    jump $I19
  rx1347_done3160:
    rx1347_cur."!cursor_fail"()
    .return (rx1347_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_154_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1353_start
    .local string rx1353_tgt
    .local int rx1353_pos
    .local int rx1353_off
    .local int rx1353_eos
    .local int rx1353_rep
    .local pmc rx1353_cur
    .local pmc rx1353_curclass
    .local pmc rx1353_bstack
    .local pmc rx1353_cstack
    rx1353_start = self."!cursor_start_all"()
    set rx1353_cur, rx1353_start[0]
    set rx1353_tgt, rx1353_start[1]
    set rx1353_pos, rx1353_start[2]
    set rx1353_curclass, rx1353_start[3]
    set rx1353_bstack, rx1353_start[4]
    set $I19, rx1353_start[5]
    store_lex unicode:"$\x{a2}", rx1353_cur
    length rx1353_eos, rx1353_tgt
    eq $I19, 1, rx1353_restart3177
    gt rx1353_pos, rx1353_eos, rx1353_fail3178
    repr_get_attr_int $I11, self, rx1353_curclass, "$!from"
    ne $I11, -1, rxscan1354_done3184
    goto rxscan1354_scan3183
  rxscan1354_loop3182:
    inc rx1353_pos
    gt rx1353_pos, rx1353_eos, rx1353_fail3178
    repr_bind_attr_int rx1353_cur, rx1353_curclass, "$!from", rx1353_pos
  rxscan1354_scan3183:
    nqp_rxmark rx1353_bstack, rxscan1354_loop3182, rx1353_pos, 0
  rxscan1354_done3184:
    repr_bind_attr_int rx1353_cur, rx1353_curclass, "$!pos", rx1353_pos
    $P11 = rx1353_cur."value"()
    repr_get_attr_int $I11, $P11, rx1353_curclass, "$!pos"
    lt $I11, 0, rx1353_fail3178
    nqp_rxmark rx1353_bstack, rxsubrule1355_pass3185, -1, 0
  rxsubrule1355_pass3185:
    rx1353_cstack = rx1353_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1353_pos, $P11, rx1353_curclass, "$!pos"
    rx1353_cur."!cursor_pass"(rx1353_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1353_cur)
  rx1353_restart3177:
    repr_get_attr_obj rx1353_cstack, rx1353_cur, rx1353_curclass, "$!cstack"
  rx1353_fail3178:
    unless rx1353_bstack, rx1353_done3176
    pop $I19, rx1353_bstack
    if_null rx1353_cstack, rx1353_cstack_done3181
    unless rx1353_cstack, rx1353_cstack_done3181
    dec $I19
    set $P11, rx1353_cstack[$I19]
  rx1353_cstack_done3181:
    pop rx1353_rep, rx1353_bstack
    pop rx1353_pos, rx1353_bstack
    pop $I19, rx1353_bstack
    lt rx1353_pos, -1, rx1353_done3176
    lt rx1353_pos, 0, rx1353_fail3178
    eq $I19, 0, rx1353_fail3178
    nqp_islist $I20, rx1353_cstack
    unless $I20, rx1353_jump3179
    elements $I18, rx1353_bstack
    le $I18, 0, rx1353_cut3180
    dec $I18
    set $I18, rx1353_bstack[$I18]
  rx1353_cut3180:
    assign rx1353_cstack, $I18
  rx1353_jump3179:
    jump $I19
  rx1353_done3176:
    rx1353_cur."!cursor_fail"()
    .return (rx1353_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_155_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1356_start
    .local string rx1356_tgt
    .local int rx1356_pos
    .local int rx1356_off
    .local int rx1356_eos
    .local int rx1356_rep
    .local pmc rx1356_cur
    .local pmc rx1356_curclass
    .local pmc rx1356_bstack
    .local pmc rx1356_cstack
    rx1356_start = self."!cursor_start_all"()
    set rx1356_cur, rx1356_start[0]
    set rx1356_tgt, rx1356_start[1]
    set rx1356_pos, rx1356_start[2]
    set rx1356_curclass, rx1356_start[3]
    set rx1356_bstack, rx1356_start[4]
    set $I19, rx1356_start[5]
    store_lex unicode:"$\x{a2}", rx1356_cur
    length rx1356_eos, rx1356_tgt
    eq $I19, 1, rx1356_restart3188
    gt rx1356_pos, rx1356_eos, rx1356_fail3189
    repr_get_attr_int $I11, self, rx1356_curclass, "$!from"
    ne $I11, -1, rxscan1357_done3195
    goto rxscan1357_scan3194
  rxscan1357_loop3193:
    inc rx1356_pos
    gt rx1356_pos, rx1356_eos, rx1356_fail3189
    repr_bind_attr_int rx1356_cur, rx1356_curclass, "$!from", rx1356_pos
  rxscan1357_scan3194:
    nqp_rxmark rx1356_bstack, rxscan1357_loop3193, rx1356_pos, 0
  rxscan1357_done3195:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1358_03197
    nqp_push_label $P11, alt1358_13199
    nqp_rxmark rx1356_bstack, alt1358_end3196, -1, 0
    rx1356_cur."!alt"(rx1356_pos, "alt_nfa__35_1382959281.95296", $P11)
    goto rx1356_fail3189
  alt1358_03197:
    repr_bind_attr_int rx1356_cur, rx1356_curclass, "$!pos", rx1356_pos
    $P11 = rx1356_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1356_curclass, "$!pos"
    lt $I11, 0, rx1356_fail3189
    nqp_rxmark rx1356_bstack, rxsubrule1359_pass3198, -1, 0
  rxsubrule1359_pass3198:
    rx1356_cstack = rx1356_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1356_pos, $P11, rx1356_curclass, "$!pos"
    goto alt1358_end3196
  alt1358_13199:
    repr_bind_attr_int rx1356_cur, rx1356_curclass, "$!pos", rx1356_pos
    $P11 = rx1356_cur."number"()
    repr_get_attr_int $I11, $P11, rx1356_curclass, "$!pos"
    lt $I11, 0, rx1356_fail3189
    nqp_rxmark rx1356_bstack, rxsubrule1360_pass3200, -1, 0
  rxsubrule1360_pass3200:
    rx1356_cstack = rx1356_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1356_pos, $P11, rx1356_curclass, "$!pos"
    goto alt1358_end3196
  alt1358_end3196:
    rx1356_cur."!cursor_pass"(rx1356_pos, "value", 'backtrack'=>1)
    .return (rx1356_cur)
  rx1356_restart3188:
    repr_get_attr_obj rx1356_cstack, rx1356_cur, rx1356_curclass, "$!cstack"
  rx1356_fail3189:
    unless rx1356_bstack, rx1356_done3187
    pop $I19, rx1356_bstack
    if_null rx1356_cstack, rx1356_cstack_done3192
    unless rx1356_cstack, rx1356_cstack_done3192
    dec $I19
    set $P11, rx1356_cstack[$I19]
  rx1356_cstack_done3192:
    pop rx1356_rep, rx1356_bstack
    pop rx1356_pos, rx1356_bstack
    pop $I19, rx1356_bstack
    lt rx1356_pos, -1, rx1356_done3187
    lt rx1356_pos, 0, rx1356_fail3189
    eq $I19, 0, rx1356_fail3189
    nqp_islist $I20, rx1356_cstack
    unless $I20, rx1356_jump3190
    elements $I18, rx1356_bstack
    le $I18, 0, rx1356_cut3191
    dec $I18
    set $I18, rx1356_bstack[$I18]
  rx1356_cut3191:
    assign rx1356_cstack, $I18
  rx1356_jump3190:
    jump $I19
  rx1356_done3187:
    rx1356_cur."!cursor_fail"()
    .return (rx1356_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_156_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1361_start
    .local string rx1361_tgt
    .local int rx1361_pos
    .local int rx1361_off
    .local int rx1361_eos
    .local int rx1361_rep
    .local pmc rx1361_cur
    .local pmc rx1361_curclass
    .local pmc rx1361_bstack
    .local pmc rx1361_cstack
    rx1361_start = self."!cursor_start_all"()
    set rx1361_cur, rx1361_start[0]
    set rx1361_tgt, rx1361_start[1]
    set rx1361_pos, rx1361_start[2]
    set rx1361_curclass, rx1361_start[3]
    set rx1361_bstack, rx1361_start[4]
    set $I19, rx1361_start[5]
    store_lex unicode:"$\x{a2}", rx1361_cur
    length rx1361_eos, rx1361_tgt
    eq $I19, 1, rx1361_restart3203
    gt rx1361_pos, rx1361_eos, rx1361_fail3204
    repr_get_attr_int $I11, self, rx1361_curclass, "$!from"
    ne $I11, -1, rxscan1362_done3210
    goto rxscan1362_scan3209
  rxscan1362_loop3208:
    inc rx1361_pos
    gt rx1361_pos, rx1361_eos, rx1361_fail3204
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!from", rx1361_pos
  rxscan1362_scan3209:
    nqp_rxmark rx1361_bstack, rxscan1362_loop3208, rx1361_pos, 0
  rxscan1362_done3210:
    nqp_rxmark rx1361_bstack, rxcap1363_fail3212, rx1361_pos, 0
    nqp_rxmark rx1361_bstack, rxquantr1364_done3214, rx1361_pos, 0
  rxquantr1364_loop3213:
    ge rx1361_pos, rx1361_eos, rx1361_fail3204
    substr $S11, rx1361_tgt, rx1361_pos, 1
    index $I11, ucs4:"+-", $S11
    lt $I11, 0, rx1361_fail3204
    inc rx1361_pos
    nqp_rxpeek $I19, rx1361_bstack, rxquantr1364_done3214
    inc $I19
    inc $I19
    set rx1361_rep, rx1361_bstack[$I19]
    nqp_rxcommit rx1361_bstack, rxquantr1364_done3214
    inc rx1361_rep
  rxquantr1364_done3214:
    nqp_rxpeek $I19, rx1361_bstack, rxcap1363_fail3212
    inc $I19
    set $I11, rx1361_bstack[$I19]
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1361_pos)
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "sign")
    goto rxcap1363_done3211
  rxcap1363_fail3212:
    goto rx1361_fail3204
  rxcap1363_done3211:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1365_03216
    nqp_push_label $P11, alt1365_13218
    nqp_rxmark rx1361_bstack, alt1365_end3215, -1, 0
    rx1361_cur."!alt"(rx1361_pos, "alt_nfa__36_1382959281.96312", $P11)
    goto rx1361_fail3204
  alt1365_03216:
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail3204
    nqp_rxmark rx1361_bstack, rxsubrule1366_pass3217, -1, 0
  rxsubrule1366_pass3217:
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1361_pos, $P11, rx1361_curclass, "$!pos"
    goto alt1365_end3215
  alt1365_13218:
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail3204
    nqp_rxmark rx1361_bstack, rxsubrule1367_pass3219, -1, 0
  rxsubrule1367_pass3219:
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1361_pos, $P11, rx1361_curclass, "$!pos"
    goto alt1365_end3215
  alt1365_end3215:
    nqp_rxcommit rx1361_bstack, alt1365_end3215
    rx1361_cur."!cursor_pass"(rx1361_pos, "number", 'backtrack'=>1)
    .return (rx1361_cur)
  rx1361_restart3203:
    repr_get_attr_obj rx1361_cstack, rx1361_cur, rx1361_curclass, "$!cstack"
  rx1361_fail3204:
    unless rx1361_bstack, rx1361_done3202
    pop $I19, rx1361_bstack
    if_null rx1361_cstack, rx1361_cstack_done3207
    unless rx1361_cstack, rx1361_cstack_done3207
    dec $I19
    set $P11, rx1361_cstack[$I19]
  rx1361_cstack_done3207:
    pop rx1361_rep, rx1361_bstack
    pop rx1361_pos, rx1361_bstack
    pop $I19, rx1361_bstack
    lt rx1361_pos, -1, rx1361_done3202
    lt rx1361_pos, 0, rx1361_fail3204
    eq $I19, 0, rx1361_fail3204
    nqp_islist $I20, rx1361_cstack
    unless $I20, rx1361_jump3205
    elements $I18, rx1361_bstack
    le $I18, 0, rx1361_cut3206
    dec $I18
    set $I18, rx1361_bstack[$I18]
  rx1361_cut3206:
    assign rx1361_cstack, $I18
  rx1361_jump3205:
    jump $I19
  rx1361_done3202:
    rx1361_cur."!cursor_fail"()
    .return (rx1361_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_157_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1407
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_158_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1408
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1368_start
    .local string rx1368_tgt
    .local int rx1368_pos
    .local int rx1368_off
    .local int rx1368_eos
    .local int rx1368_rep
    .local pmc rx1368_cur
    .local pmc rx1368_curclass
    .local pmc rx1368_bstack
    .local pmc rx1368_cstack
    rx1368_start = self."!cursor_start_all"()
    set rx1368_cur, rx1368_start[0]
    set rx1368_tgt, rx1368_start[1]
    set rx1368_pos, rx1368_start[2]
    set rx1368_curclass, rx1368_start[3]
    set rx1368_bstack, rx1368_start[4]
    set $I19, rx1368_start[5]
    store_lex unicode:"$\x{a2}", rx1368_cur
    length rx1368_eos, rx1368_tgt
    eq $I19, 1, rx1368_restart3222
    gt rx1368_pos, rx1368_eos, rx1368_fail3223
    repr_get_attr_int $I11, self, rx1368_curclass, "$!from"
    ne $I11, -1, rxscan1369_done3229
    goto rxscan1369_scan3228
  rxscan1369_loop3227:
    inc rx1368_pos
    gt rx1368_pos, rx1368_eos, rx1368_fail3223
    repr_bind_attr_int rx1368_cur, rx1368_curclass, "$!from", rx1368_pos
  rxscan1369_scan3228:
    nqp_rxmark rx1368_bstack, rxscan1369_loop3227, rx1368_pos, 0
  rxscan1369_done3229:
    ge rx1368_pos, rx1368_eos, rx1368_fail3223
    substr $S11, rx1368_tgt, rx1368_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1368_fail3223
    repr_bind_attr_int rx1368_cur, rx1368_curclass, "$!pos", rx1368_pos
    $P11 = rx1368_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1368_curclass, "$!pos"
    lt $I11, 0, rx1368_fail3223
    nqp_rxmark rx1368_bstack, rxsubrule1370_pass3230, -1, 0
  rxsubrule1370_pass3230:
    rx1368_cstack = rx1368_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1368_pos, $P11, rx1368_curclass, "$!pos"
    rx1368_cur."!cursor_pass"(rx1368_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1368_cur)
  rx1368_restart3222:
    repr_get_attr_obj rx1368_cstack, rx1368_cur, rx1368_curclass, "$!cstack"
  rx1368_fail3223:
    unless rx1368_bstack, rx1368_done3221
    pop $I19, rx1368_bstack
    if_null rx1368_cstack, rx1368_cstack_done3226
    unless rx1368_cstack, rx1368_cstack_done3226
    dec $I19
    set $P11, rx1368_cstack[$I19]
  rx1368_cstack_done3226:
    pop rx1368_rep, rx1368_bstack
    pop rx1368_pos, rx1368_bstack
    pop $I19, rx1368_bstack
    lt rx1368_pos, -1, rx1368_done3221
    lt rx1368_pos, 0, rx1368_fail3223
    eq $I19, 0, rx1368_fail3223
    nqp_islist $I20, rx1368_cstack
    unless $I20, rx1368_jump3224
    elements $I18, rx1368_bstack
    le $I18, 0, rx1368_cut3225
    dec $I18
    set $I18, rx1368_bstack[$I18]
  rx1368_cut3225:
    assign rx1368_cstack, $I18
  rx1368_jump3224:
    jump $I19
  rx1368_done3221:
    rx1368_cur."!cursor_fail"()
    .return (rx1368_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_159_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1409
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1371_start
    .local string rx1371_tgt
    .local int rx1371_pos
    .local int rx1371_off
    .local int rx1371_eos
    .local int rx1371_rep
    .local pmc rx1371_cur
    .local pmc rx1371_curclass
    .local pmc rx1371_bstack
    .local pmc rx1371_cstack
    rx1371_start = self."!cursor_start_all"()
    set rx1371_cur, rx1371_start[0]
    set rx1371_tgt, rx1371_start[1]
    set rx1371_pos, rx1371_start[2]
    set rx1371_curclass, rx1371_start[3]
    set rx1371_bstack, rx1371_start[4]
    set $I19, rx1371_start[5]
    store_lex unicode:"$\x{a2}", rx1371_cur
    length rx1371_eos, rx1371_tgt
    eq $I19, 1, rx1371_restart3233
    gt rx1371_pos, rx1371_eos, rx1371_fail3234
    repr_get_attr_int $I11, self, rx1371_curclass, "$!from"
    ne $I11, -1, rxscan1372_done3240
    goto rxscan1372_scan3239
  rxscan1372_loop3238:
    inc rx1371_pos
    gt rx1371_pos, rx1371_eos, rx1371_fail3234
    repr_bind_attr_int rx1371_cur, rx1371_curclass, "$!from", rx1371_pos
  rxscan1372_scan3239:
    nqp_rxmark rx1371_bstack, rxscan1372_loop3238, rx1371_pos, 0
  rxscan1372_done3240:
    ge rx1371_pos, rx1371_eos, rx1371_fail3234
    substr $S11, rx1371_tgt, rx1371_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1371_fail3234
    repr_bind_attr_int rx1371_cur, rx1371_curclass, "$!pos", rx1371_pos
    $P11 = rx1371_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1371_curclass, "$!pos"
    lt $I11, 0, rx1371_fail3234
    nqp_rxmark rx1371_bstack, rxsubrule1373_pass3241, -1, 0
  rxsubrule1373_pass3241:
    rx1371_cstack = rx1371_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1371_pos, $P11, rx1371_curclass, "$!pos"
    rx1371_cur."!cursor_pass"(rx1371_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1371_cur)
  rx1371_restart3233:
    repr_get_attr_obj rx1371_cstack, rx1371_cur, rx1371_curclass, "$!cstack"
  rx1371_fail3234:
    unless rx1371_bstack, rx1371_done3232
    pop $I19, rx1371_bstack
    if_null rx1371_cstack, rx1371_cstack_done3237
    unless rx1371_cstack, rx1371_cstack_done3237
    dec $I19
    set $P11, rx1371_cstack[$I19]
  rx1371_cstack_done3237:
    pop rx1371_rep, rx1371_bstack
    pop rx1371_pos, rx1371_bstack
    pop $I19, rx1371_bstack
    lt rx1371_pos, -1, rx1371_done3232
    lt rx1371_pos, 0, rx1371_fail3234
    eq $I19, 0, rx1371_fail3234
    nqp_islist $I20, rx1371_cstack
    unless $I20, rx1371_jump3235
    elements $I18, rx1371_bstack
    le $I18, 0, rx1371_cut3236
    dec $I18
    set $I18, rx1371_bstack[$I18]
  rx1371_cut3236:
    assign rx1371_cstack, $I18
  rx1371_jump3235:
    jump $I19
  rx1371_done3232:
    rx1371_cur."!cursor_fail"()
    .return (rx1371_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_160_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1410
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1374_start
    .local string rx1374_tgt
    .local int rx1374_pos
    .local int rx1374_off
    .local int rx1374_eos
    .local int rx1374_rep
    .local pmc rx1374_cur
    .local pmc rx1374_curclass
    .local pmc rx1374_bstack
    .local pmc rx1374_cstack
    rx1374_start = self."!cursor_start_all"()
    set rx1374_cur, rx1374_start[0]
    set rx1374_tgt, rx1374_start[1]
    set rx1374_pos, rx1374_start[2]
    set rx1374_curclass, rx1374_start[3]
    set rx1374_bstack, rx1374_start[4]
    set $I19, rx1374_start[5]
    store_lex unicode:"$\x{a2}", rx1374_cur
    length rx1374_eos, rx1374_tgt
    eq $I19, 1, rx1374_restart3244
    gt rx1374_pos, rx1374_eos, rx1374_fail3245
    repr_get_attr_int $I11, self, rx1374_curclass, "$!from"
    ne $I11, -1, rxscan1375_done3251
    goto rxscan1375_scan3250
  rxscan1375_loop3249:
    inc rx1374_pos
    gt rx1374_pos, rx1374_eos, rx1374_fail3245
    repr_bind_attr_int rx1374_cur, rx1374_curclass, "$!from", rx1374_pos
  rxscan1375_scan3250:
    nqp_rxmark rx1374_bstack, rxscan1375_loop3249, rx1374_pos, 0
  rxscan1375_done3251:
    nqp_rxmark rx1374_bstack, rxcap1376_fail3253, rx1374_pos, 0
    add $I11, rx1374_pos, 1
    gt $I11, rx1374_eos, rx1374_fail3245
    substr $S10, rx1374_tgt, rx1374_pos, 1
    ne $S10, ucs4:"q", rx1374_fail3245
    add rx1374_pos, 1
    nqp_rxpeek $I19, rx1374_bstack, rxcap1376_fail3253
    inc $I19
    set $I11, rx1374_bstack[$I19]
    repr_bind_attr_int rx1374_cur, rx1374_curclass, "$!pos", rx1374_pos
    $P11 = rx1374_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1374_pos)
    rx1374_cstack = rx1374_cur."!cursor_capture"($P11, "sym")
    goto rxcap1376_done3252
  rxcap1376_fail3253:
    goto rx1374_fail3245
  rxcap1376_done3252:
    le rx1374_pos, 0, rx1374_fail3245
    is_cclass $I11, .CCLASS_WORD, rx1374_tgt, rx1374_pos
    if $I11, rx1374_fail3245
    sub $I11, rx1374_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1374_tgt, $I11
    unless $I11, rx1374_fail3245
    ge rx1374_pos, rx1374_eos, rx1374_fail3245
    substr $S11, rx1374_tgt, rx1374_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1374_fail3245
    repr_bind_attr_int rx1374_cur, rx1374_curclass, "$!pos", rx1374_pos
    $P11 = rx1374_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1374_curclass, "$!pos"
    lt $I11, 0, rx1374_fail3245
    repr_get_attr_int rx1374_pos, $P11, rx1374_curclass, "$!pos"
    repr_bind_attr_int rx1374_cur, rx1374_curclass, "$!pos", rx1374_pos
    $P11 = rx1374_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1374_curclass, "$!pos"
    lt $I11, 0, rx1374_fail3245
    nqp_rxmark rx1374_bstack, rxsubrule1379_pass3256, -1, 0
  rxsubrule1379_pass3256:
    rx1374_cstack = rx1374_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1374_pos, $P11, rx1374_curclass, "$!pos"
    rx1374_cur."!cursor_pass"(rx1374_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1374_cur)
  rx1374_restart3244:
    repr_get_attr_obj rx1374_cstack, rx1374_cur, rx1374_curclass, "$!cstack"
  rx1374_fail3245:
    unless rx1374_bstack, rx1374_done3243
    pop $I19, rx1374_bstack
    if_null rx1374_cstack, rx1374_cstack_done3248
    unless rx1374_cstack, rx1374_cstack_done3248
    dec $I19
    set $P11, rx1374_cstack[$I19]
  rx1374_cstack_done3248:
    pop rx1374_rep, rx1374_bstack
    pop rx1374_pos, rx1374_bstack
    pop $I19, rx1374_bstack
    lt rx1374_pos, -1, rx1374_done3243
    lt rx1374_pos, 0, rx1374_fail3245
    eq $I19, 0, rx1374_fail3245
    nqp_islist $I20, rx1374_cstack
    unless $I20, rx1374_jump3246
    elements $I18, rx1374_bstack
    le $I18, 0, rx1374_cut3247
    dec $I18
    set $I18, rx1374_bstack[$I18]
  rx1374_cut3247:
    assign rx1374_cstack, $I18
  rx1374_jump3246:
    jump $I19
  rx1374_done3243:
    rx1374_cur."!cursor_fail"()
    .return (rx1374_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_161_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1411
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1380_start
    .local string rx1380_tgt
    .local int rx1380_pos
    .local int rx1380_off
    .local int rx1380_eos
    .local int rx1380_rep
    .local pmc rx1380_cur
    .local pmc rx1380_curclass
    .local pmc rx1380_bstack
    .local pmc rx1380_cstack
    rx1380_start = self."!cursor_start_all"()
    set rx1380_cur, rx1380_start[0]
    set rx1380_tgt, rx1380_start[1]
    set rx1380_pos, rx1380_start[2]
    set rx1380_curclass, rx1380_start[3]
    set rx1380_bstack, rx1380_start[4]
    set $I19, rx1380_start[5]
    store_lex unicode:"$\x{a2}", rx1380_cur
    length rx1380_eos, rx1380_tgt
    eq $I19, 1, rx1380_restart3259
    gt rx1380_pos, rx1380_eos, rx1380_fail3260
    repr_get_attr_int $I11, self, rx1380_curclass, "$!from"
    ne $I11, -1, rxscan1381_done3266
    goto rxscan1381_scan3265
  rxscan1381_loop3264:
    inc rx1380_pos
    gt rx1380_pos, rx1380_eos, rx1380_fail3260
    repr_bind_attr_int rx1380_cur, rx1380_curclass, "$!from", rx1380_pos
  rxscan1381_scan3265:
    nqp_rxmark rx1380_bstack, rxscan1381_loop3264, rx1380_pos, 0
  rxscan1381_done3266:
    nqp_rxmark rx1380_bstack, rxcap1382_fail3268, rx1380_pos, 0
    add $I11, rx1380_pos, 2
    gt $I11, rx1380_eos, rx1380_fail3260
    substr $S10, rx1380_tgt, rx1380_pos, 2
    ne $S10, ucs4:"qq", rx1380_fail3260
    add rx1380_pos, 2
    nqp_rxpeek $I19, rx1380_bstack, rxcap1382_fail3268
    inc $I19
    set $I11, rx1380_bstack[$I19]
    repr_bind_attr_int rx1380_cur, rx1380_curclass, "$!pos", rx1380_pos
    $P11 = rx1380_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1380_pos)
    rx1380_cstack = rx1380_cur."!cursor_capture"($P11, "sym")
    goto rxcap1382_done3267
  rxcap1382_fail3268:
    goto rx1380_fail3260
  rxcap1382_done3267:
    le rx1380_pos, 0, rx1380_fail3260
    is_cclass $I11, .CCLASS_WORD, rx1380_tgt, rx1380_pos
    if $I11, rx1380_fail3260
    sub $I11, rx1380_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1380_tgt, $I11
    unless $I11, rx1380_fail3260
    ge rx1380_pos, rx1380_eos, rx1380_fail3260
    substr $S11, rx1380_tgt, rx1380_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1380_fail3260
    repr_bind_attr_int rx1380_cur, rx1380_curclass, "$!pos", rx1380_pos
    $P11 = rx1380_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1380_curclass, "$!pos"
    lt $I11, 0, rx1380_fail3260
    repr_get_attr_int rx1380_pos, $P11, rx1380_curclass, "$!pos"
    repr_bind_attr_int rx1380_cur, rx1380_curclass, "$!pos", rx1380_pos
    $P11 = rx1380_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1380_curclass, "$!pos"
    lt $I11, 0, rx1380_fail3260
    nqp_rxmark rx1380_bstack, rxsubrule1385_pass3271, -1, 0
  rxsubrule1385_pass3271:
    rx1380_cstack = rx1380_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1380_pos, $P11, rx1380_curclass, "$!pos"
    rx1380_cur."!cursor_pass"(rx1380_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1380_cur)
  rx1380_restart3259:
    repr_get_attr_obj rx1380_cstack, rx1380_cur, rx1380_curclass, "$!cstack"
  rx1380_fail3260:
    unless rx1380_bstack, rx1380_done3258
    pop $I19, rx1380_bstack
    if_null rx1380_cstack, rx1380_cstack_done3263
    unless rx1380_cstack, rx1380_cstack_done3263
    dec $I19
    set $P11, rx1380_cstack[$I19]
  rx1380_cstack_done3263:
    pop rx1380_rep, rx1380_bstack
    pop rx1380_pos, rx1380_bstack
    pop $I19, rx1380_bstack
    lt rx1380_pos, -1, rx1380_done3258
    lt rx1380_pos, 0, rx1380_fail3260
    eq $I19, 0, rx1380_fail3260
    nqp_islist $I20, rx1380_cstack
    unless $I20, rx1380_jump3261
    elements $I18, rx1380_bstack
    le $I18, 0, rx1380_cut3262
    dec $I18
    set $I18, rx1380_bstack[$I18]
  rx1380_cut3262:
    assign rx1380_cstack, $I18
  rx1380_jump3261:
    jump $I19
  rx1380_done3258:
    rx1380_cur."!cursor_fail"()
    .return (rx1380_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_162_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1386_start
    .local string rx1386_tgt
    .local int rx1386_pos
    .local int rx1386_off
    .local int rx1386_eos
    .local int rx1386_rep
    .local pmc rx1386_cur
    .local pmc rx1386_curclass
    .local pmc rx1386_bstack
    .local pmc rx1386_cstack
    rx1386_start = self."!cursor_start_all"()
    set rx1386_cur, rx1386_start[0]
    set rx1386_tgt, rx1386_start[1]
    set rx1386_pos, rx1386_start[2]
    set rx1386_curclass, rx1386_start[3]
    set rx1386_bstack, rx1386_start[4]
    set $I19, rx1386_start[5]
    store_lex unicode:"$\x{a2}", rx1386_cur
    length rx1386_eos, rx1386_tgt
    eq $I19, 1, rx1386_restart3274
    gt rx1386_pos, rx1386_eos, rx1386_fail3275
    repr_get_attr_int $I11, self, rx1386_curclass, "$!from"
    ne $I11, -1, rxscan1387_done3281
    goto rxscan1387_scan3280
  rxscan1387_loop3279:
    inc rx1386_pos
    gt rx1386_pos, rx1386_eos, rx1386_fail3275
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!from", rx1386_pos
  rxscan1387_scan3280:
    nqp_rxmark rx1386_bstack, rxscan1387_loop3279, rx1386_pos, 0
  rxscan1387_done3281:
    nqp_rxmark rx1386_bstack, rxcap1388_fail3283, rx1386_pos, 0
    add $I11, rx1386_pos, 1
    gt $I11, rx1386_eos, rx1386_fail3275
    substr $S10, rx1386_tgt, rx1386_pos, 1
    ne $S10, ucs4:"Q", rx1386_fail3275
    add rx1386_pos, 1
    nqp_rxpeek $I19, rx1386_bstack, rxcap1388_fail3283
    inc $I19
    set $I11, rx1386_bstack[$I19]
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!pos", rx1386_pos
    $P11 = rx1386_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1386_pos)
    rx1386_cstack = rx1386_cur."!cursor_capture"($P11, "sym")
    goto rxcap1388_done3282
  rxcap1388_fail3283:
    goto rx1386_fail3275
  rxcap1388_done3282:
    le rx1386_pos, 0, rx1386_fail3275
    is_cclass $I11, .CCLASS_WORD, rx1386_tgt, rx1386_pos
    if $I11, rx1386_fail3275
    sub $I11, rx1386_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1386_tgt, $I11
    unless $I11, rx1386_fail3275
    ge rx1386_pos, rx1386_eos, rx1386_fail3275
    substr $S11, rx1386_tgt, rx1386_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1386_fail3275
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!pos", rx1386_pos
    $P11 = rx1386_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1386_curclass, "$!pos"
    lt $I11, 0, rx1386_fail3275
    repr_get_attr_int rx1386_pos, $P11, rx1386_curclass, "$!pos"
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!pos", rx1386_pos
    $P11 = rx1386_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1386_curclass, "$!pos"
    lt $I11, 0, rx1386_fail3275
    nqp_rxmark rx1386_bstack, rxsubrule1391_pass3286, -1, 0
  rxsubrule1391_pass3286:
    rx1386_cstack = rx1386_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1386_pos, $P11, rx1386_curclass, "$!pos"
    rx1386_cur."!cursor_pass"(rx1386_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1386_cur)
  rx1386_restart3274:
    repr_get_attr_obj rx1386_cstack, rx1386_cur, rx1386_curclass, "$!cstack"
  rx1386_fail3275:
    unless rx1386_bstack, rx1386_done3273
    pop $I19, rx1386_bstack
    if_null rx1386_cstack, rx1386_cstack_done3278
    unless rx1386_cstack, rx1386_cstack_done3278
    dec $I19
    set $P11, rx1386_cstack[$I19]
  rx1386_cstack_done3278:
    pop rx1386_rep, rx1386_bstack
    pop rx1386_pos, rx1386_bstack
    pop $I19, rx1386_bstack
    lt rx1386_pos, -1, rx1386_done3273
    lt rx1386_pos, 0, rx1386_fail3275
    eq $I19, 0, rx1386_fail3275
    nqp_islist $I20, rx1386_cstack
    unless $I20, rx1386_jump3276
    elements $I18, rx1386_bstack
    le $I18, 0, rx1386_cut3277
    dec $I18
    set $I18, rx1386_bstack[$I18]
  rx1386_cut3277:
    assign rx1386_cstack, $I18
  rx1386_jump3276:
    jump $I19
  rx1386_done3273:
    rx1386_cur."!cursor_fail"()
    .return (rx1386_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_163_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1413
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1392_start
    .local string rx1392_tgt
    .local int rx1392_pos
    .local int rx1392_off
    .local int rx1392_eos
    .local int rx1392_rep
    .local pmc rx1392_cur
    .local pmc rx1392_curclass
    .local pmc rx1392_bstack
    .local pmc rx1392_cstack
    rx1392_start = self."!cursor_start_all"()
    set rx1392_cur, rx1392_start[0]
    set rx1392_tgt, rx1392_start[1]
    set rx1392_pos, rx1392_start[2]
    set rx1392_curclass, rx1392_start[3]
    set rx1392_bstack, rx1392_start[4]
    set $I19, rx1392_start[5]
    store_lex unicode:"$\x{a2}", rx1392_cur
    length rx1392_eos, rx1392_tgt
    eq $I19, 1, rx1392_restart3289
    gt rx1392_pos, rx1392_eos, rx1392_fail3290
    repr_get_attr_int $I11, self, rx1392_curclass, "$!from"
    ne $I11, -1, rxscan1393_done3296
    goto rxscan1393_scan3295
  rxscan1393_loop3294:
    inc rx1392_pos
    gt rx1392_pos, rx1392_eos, rx1392_fail3290
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!from", rx1392_pos
  rxscan1393_scan3295:
    nqp_rxmark rx1392_bstack, rxscan1393_loop3294, rx1392_pos, 0
  rxscan1393_done3296:
    nqp_rxmark rx1392_bstack, rxcap1394_fail3298, rx1392_pos, 0
    add $I11, rx1392_pos, 5
    gt $I11, rx1392_eos, rx1392_fail3290
    substr $S10, rx1392_tgt, rx1392_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1392_fail3290
    add rx1392_pos, 5
    nqp_rxpeek $I19, rx1392_bstack, rxcap1394_fail3298
    inc $I19
    set $I11, rx1392_bstack[$I19]
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!pos", rx1392_pos
    $P11 = rx1392_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1392_pos)
    rx1392_cstack = rx1392_cur."!cursor_capture"($P11, "sym")
    goto rxcap1394_done3297
  rxcap1394_fail3298:
    goto rx1392_fail3290
  rxcap1394_done3297:
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!pos", rx1392_pos
    $P11 = rx1392_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1392_curclass, "$!pos"
    lt $I11, 0, rx1392_fail3290
    repr_get_attr_int rx1392_pos, $P11, rx1392_curclass, "$!pos"
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!pos", rx1392_pos
    $P11 = rx1392_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1392_curclass, "$!pos"
    lt $I11, 0, rx1392_fail3290
    nqp_rxmark rx1392_bstack, rxsubrule1396_pass3300, -1, 0
  rxsubrule1396_pass3300:
    rx1392_cstack = rx1392_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1392_pos, $P11, rx1392_curclass, "$!pos"
    rx1392_cur."!cursor_pass"(rx1392_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1392_cur)
  rx1392_restart3289:
    repr_get_attr_obj rx1392_cstack, rx1392_cur, rx1392_curclass, "$!cstack"
  rx1392_fail3290:
    unless rx1392_bstack, rx1392_done3288
    pop $I19, rx1392_bstack
    if_null rx1392_cstack, rx1392_cstack_done3293
    unless rx1392_cstack, rx1392_cstack_done3293
    dec $I19
    set $P11, rx1392_cstack[$I19]
  rx1392_cstack_done3293:
    pop rx1392_rep, rx1392_bstack
    pop rx1392_pos, rx1392_bstack
    pop $I19, rx1392_bstack
    lt rx1392_pos, -1, rx1392_done3288
    lt rx1392_pos, 0, rx1392_fail3290
    eq $I19, 0, rx1392_fail3290
    nqp_islist $I20, rx1392_cstack
    unless $I20, rx1392_jump3291
    elements $I18, rx1392_bstack
    le $I18, 0, rx1392_cut3292
    dec $I18
    set $I18, rx1392_bstack[$I18]
  rx1392_cut3292:
    assign rx1392_cstack, $I18
  rx1392_jump3291:
    jump $I19
  rx1392_done3288:
    rx1392_cur."!cursor_fail"()
    .return (rx1392_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_164_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1414
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_191 
    .local pmc pkg_viv_tmp_32 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1397_start
    .local string rx1397_tgt
    .local int rx1397_pos
    .local int rx1397_off
    .local int rx1397_eos
    .local int rx1397_rep
    .local pmc rx1397_cur
    .local pmc rx1397_curclass
    .local pmc rx1397_bstack
    .local pmc rx1397_cstack
    rx1397_start = self."!cursor_start_all"()
    set rx1397_cur, rx1397_start[0]
    set rx1397_tgt, rx1397_start[1]
    set rx1397_pos, rx1397_start[2]
    set rx1397_curclass, rx1397_start[3]
    set rx1397_bstack, rx1397_start[4]
    set $I19, rx1397_start[5]
    store_lex unicode:"$\x{a2}", rx1397_cur
    length rx1397_eos, rx1397_tgt
    eq $I19, 1, rx1397_restart3303
    gt rx1397_pos, rx1397_eos, rx1397_fail3304
    repr_get_attr_int $I11, self, rx1397_curclass, "$!from"
    ne $I11, -1, rxscan1398_done3310
    goto rxscan1398_scan3309
  rxscan1398_loop3308:
    inc rx1397_pos
    index rx1397_pos, rx1397_tgt, ucs4:"/", rx1397_pos
    eq rx1397_pos, -1, rx1397_fail3304
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!from", rx1397_pos
  rxscan1398_scan3309:
    nqp_rxmark rx1397_bstack, rxscan1398_loop3308, rx1397_pos, 0
  rxscan1398_done3310:
    add $I11, rx1397_pos, 1
    gt $I11, rx1397_eos, rx1397_fail3304
    substr $S10, rx1397_tgt, rx1397_pos, 1
    ne $S10, ucs4:"/", rx1397_fail3304
    add rx1397_pos, 1
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail3304
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    store_lex unicode:"$\x{a2}", rx1397_cur
    unless_null $P101, fallback3312
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_32, $P5002
    set fb_tmp_191, pkg_viv_tmp_32
    repr_defined $I5001, fb_tmp_191
    unless $I5001 goto if1400_else3313 
    set $P5004, fb_tmp_191["%RX"]
    set $P5006, $P5004
    goto if1400_end3314
  if1400_else3313:
    null $P5005
    set $P5006, $P5005
  if1400_end3314:
    unless_null $P5006, vivi_14013315
    new $P5007, 'Hash'
    set pkg_viv_tmp_32["%RX"], $P5007
    set $P5006, $P5007
  vivi_14013315:
    unless_null $P5006, vivi_14023316
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_14023316:
    set $P101, $P5006
  fallback3312:
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail3304
    nqp_rxmark rx1397_bstack, rxsubrule1403_pass3317, -1, 0
  rxsubrule1403_pass3317:
    rx1397_cstack = rx1397_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    add $I11, rx1397_pos, 1
    gt $I11, rx1397_eos, rx1397_fail3304
    substr $S10, rx1397_tgt, rx1397_pos, 1
    ne $S10, ucs4:"/", rx1397_fail3304
    add rx1397_pos, 1
    rx1397_cur."!cursor_pass"(rx1397_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1397_cur)
  rx1397_restart3303:
    repr_get_attr_obj rx1397_cstack, rx1397_cur, rx1397_curclass, "$!cstack"
  rx1397_fail3304:
    unless rx1397_bstack, rx1397_done3302
    pop $I19, rx1397_bstack
    if_null rx1397_cstack, rx1397_cstack_done3307
    unless rx1397_cstack, rx1397_cstack_done3307
    dec $I19
    set $P11, rx1397_cstack[$I19]
  rx1397_cstack_done3307:
    pop rx1397_rep, rx1397_bstack
    pop rx1397_pos, rx1397_bstack
    pop $I19, rx1397_bstack
    lt rx1397_pos, -1, rx1397_done3302
    lt rx1397_pos, 0, rx1397_fail3304
    eq $I19, 0, rx1397_fail3304
    nqp_islist $I20, rx1397_cstack
    unless $I20, rx1397_jump3305
    elements $I18, rx1397_bstack
    le $I18, 0, rx1397_cut3306
    dec $I18
    set $I18, rx1397_bstack[$I18]
  rx1397_cut3306:
    assign rx1397_cstack, $I18
  rx1397_jump3305:
    jump $I19
  rx1397_done3302:
    rx1397_cur."!cursor_fail"()
    .return (rx1397_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_165_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1422
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1404_start
    .local string rx1404_tgt
    .local int rx1404_pos
    .local int rx1404_off
    .local int rx1404_eos
    .local int rx1404_rep
    .local pmc rx1404_cur
    .local pmc rx1404_curclass
    .local pmc rx1404_bstack
    .local pmc rx1404_cstack
    rx1404_start = self."!cursor_start_all"()
    set rx1404_cur, rx1404_start[0]
    set rx1404_tgt, rx1404_start[1]
    set rx1404_pos, rx1404_start[2]
    set rx1404_curclass, rx1404_start[3]
    set rx1404_bstack, rx1404_start[4]
    set $I19, rx1404_start[5]
    store_lex unicode:"$\x{a2}", rx1404_cur
    length rx1404_eos, rx1404_tgt
    eq $I19, 1, rx1404_restart3320
    gt rx1404_pos, rx1404_eos, rx1404_fail3321
    repr_get_attr_int $I11, self, rx1404_curclass, "$!from"
    ne $I11, -1, rxscan1405_done3327
    goto rxscan1405_scan3326
  rxscan1405_loop3325:
    inc rx1404_pos
    gt rx1404_pos, rx1404_eos, rx1404_fail3321
    repr_bind_attr_int rx1404_cur, rx1404_curclass, "$!from", rx1404_pos
  rxscan1405_scan3326:
    nqp_rxmark rx1404_bstack, rxscan1405_loop3325, rx1404_pos, 0
  rxscan1405_done3327:
    ge rx1404_pos, rx1404_eos, rx1404_fail3321
    substr $S11, rx1404_tgt, rx1404_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1404_fail3321
    repr_bind_attr_int rx1404_cur, rx1404_curclass, "$!pos", rx1404_pos
    $P11 = rx1404_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1404_curclass, "$!pos"
    lt $I11, 0, rx1404_fail3321
    repr_bind_attr_int rx1404_cur, rx1404_curclass, "$!pos", rx1404_pos
    $P11 = rx1404_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1404_curclass, "$!pos"
    lt $I11, 0, rx1404_fail3321
    nqp_rxmark rx1404_bstack, rxsubrule1406_pass3328, -1, 0
  rxsubrule1406_pass3328:
    rx1404_cstack = rx1404_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1404_pos, $P11, rx1404_curclass, "$!pos"
    rx1404_cur."!cursor_pass"(rx1404_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1404_cur)
  rx1404_restart3320:
    repr_get_attr_obj rx1404_cstack, rx1404_cur, rx1404_curclass, "$!cstack"
  rx1404_fail3321:
    unless rx1404_bstack, rx1404_done3319
    pop $I19, rx1404_bstack
    if_null rx1404_cstack, rx1404_cstack_done3324
    unless rx1404_cstack, rx1404_cstack_done3324
    dec $I19
    set $P11, rx1404_cstack[$I19]
  rx1404_cstack_done3324:
    pop rx1404_rep, rx1404_bstack
    pop rx1404_pos, rx1404_bstack
    pop $I19, rx1404_bstack
    lt rx1404_pos, -1, rx1404_done3319
    lt rx1404_pos, 0, rx1404_fail3321
    eq $I19, 0, rx1404_fail3321
    nqp_islist $I20, rx1404_cstack
    unless $I20, rx1404_jump3322
    elements $I18, rx1404_bstack
    le $I18, 0, rx1404_cut3323
    dec $I18
    set $I18, rx1404_bstack[$I18]
  rx1404_cut3323:
    assign rx1404_cstack, $I18
  rx1404_jump3322:
    jump $I19
  rx1404_done3319:
    rx1404_cur."!cursor_fail"()
    .return (rx1404_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_166_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1407_start
    .local string rx1407_tgt
    .local int rx1407_pos
    .local int rx1407_off
    .local int rx1407_eos
    .local int rx1407_rep
    .local pmc rx1407_cur
    .local pmc rx1407_curclass
    .local pmc rx1407_bstack
    .local pmc rx1407_cstack
    rx1407_start = self."!cursor_start_all"()
    set rx1407_cur, rx1407_start[0]
    set rx1407_tgt, rx1407_start[1]
    set rx1407_pos, rx1407_start[2]
    set rx1407_curclass, rx1407_start[3]
    set rx1407_bstack, rx1407_start[4]
    set $I19, rx1407_start[5]
    store_lex unicode:"$\x{a2}", rx1407_cur
    length rx1407_eos, rx1407_tgt
    eq $I19, 1, rx1407_restart3331
    gt rx1407_pos, rx1407_eos, rx1407_fail3332
    repr_get_attr_int $I11, self, rx1407_curclass, "$!from"
    ne $I11, -1, rxscan1408_done3338
    goto rxscan1408_scan3337
  rxscan1408_loop3336:
    inc rx1407_pos
    gt rx1407_pos, rx1407_eos, rx1407_fail3332
    repr_bind_attr_int rx1407_cur, rx1407_curclass, "$!from", rx1407_pos
  rxscan1408_scan3337:
    nqp_rxmark rx1407_bstack, rxscan1408_loop3336, rx1407_pos, 0
  rxscan1408_done3338:
    ge rx1407_pos, rx1407_eos, rx1407_fail3332
    substr $S11, rx1407_tgt, rx1407_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1407_fail3332
    repr_bind_attr_int rx1407_cur, rx1407_curclass, "$!pos", rx1407_pos
    $P11 = rx1407_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1407_curclass, "$!pos"
    lt $I11, 0, rx1407_fail3332
    repr_bind_attr_int rx1407_cur, rx1407_curclass, "$!pos", rx1407_pos
    $P11 = rx1407_cur."block"()
    repr_get_attr_int $I11, $P11, rx1407_curclass, "$!pos"
    lt $I11, 0, rx1407_fail3332
    nqp_rxmark rx1407_bstack, rxsubrule1409_pass3339, -1, 0
  rxsubrule1409_pass3339:
    rx1407_cstack = rx1407_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1407_pos, $P11, rx1407_curclass, "$!pos"
    rx1407_cur."!cursor_pass"(rx1407_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1407_cur)
  rx1407_restart3331:
    repr_get_attr_obj rx1407_cstack, rx1407_cur, rx1407_curclass, "$!cstack"
  rx1407_fail3332:
    unless rx1407_bstack, rx1407_done3330
    pop $I19, rx1407_bstack
    if_null rx1407_cstack, rx1407_cstack_done3335
    unless rx1407_cstack, rx1407_cstack_done3335
    dec $I19
    set $P11, rx1407_cstack[$I19]
  rx1407_cstack_done3335:
    pop rx1407_rep, rx1407_bstack
    pop rx1407_pos, rx1407_bstack
    pop $I19, rx1407_bstack
    lt rx1407_pos, -1, rx1407_done3330
    lt rx1407_pos, 0, rx1407_fail3332
    eq $I19, 0, rx1407_fail3332
    nqp_islist $I20, rx1407_cstack
    unless $I20, rx1407_jump3333
    elements $I18, rx1407_bstack
    le $I18, 0, rx1407_cut3334
    dec $I18
    set $I18, rx1407_bstack[$I18]
  rx1407_cut3334:
    assign rx1407_cstack, $I18
  rx1407_jump3333:
    jump $I19
  rx1407_done3330:
    rx1407_cur."!cursor_fail"()
    .return (rx1407_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_167_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1424
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1410_start
    .local string rx1410_tgt
    .local int rx1410_pos
    .local int rx1410_off
    .local int rx1410_eos
    .local int rx1410_rep
    .local pmc rx1410_cur
    .local pmc rx1410_curclass
    .local pmc rx1410_bstack
    .local pmc rx1410_cstack
    rx1410_start = self."!cursor_start_all"()
    set rx1410_cur, rx1410_start[0]
    set rx1410_tgt, rx1410_start[1]
    set rx1410_pos, rx1410_start[2]
    set rx1410_curclass, rx1410_start[3]
    set rx1410_bstack, rx1410_start[4]
    set $I19, rx1410_start[5]
    store_lex unicode:"$\x{a2}", rx1410_cur
    length rx1410_eos, rx1410_tgt
    eq $I19, 1, rx1410_restart3342
    gt rx1410_pos, rx1410_eos, rx1410_fail3343
    repr_get_attr_int $I11, self, rx1410_curclass, "$!from"
    ne $I11, -1, rxscan1411_done3349
    goto rxscan1411_scan3348
  rxscan1411_loop3347:
    inc rx1410_pos
    gt rx1410_pos, rx1410_eos, rx1410_fail3343
    repr_bind_attr_int rx1410_cur, rx1410_curclass, "$!from", rx1410_pos
  rxscan1411_scan3348:
    nqp_rxmark rx1410_bstack, rxscan1411_loop3347, rx1410_pos, 0
  rxscan1411_done3349:
    ge rx1410_pos, rx1410_eos, rx1410_fail3343
    substr $S11, rx1410_tgt, rx1410_pos, 1
    index $I11, ucs4:"\\", $S11
    lt $I11, 0, rx1410_fail3343
    inc rx1410_pos
    add $I11, rx1410_pos, 1
    gt $I11, rx1410_eos, rx1410_fail3343
    substr $S10, rx1410_tgt, rx1410_pos, 1
    ne $S10, ucs4:"e", rx1410_fail3343
    add rx1410_pos, 1
    repr_bind_attr_int rx1410_cur, rx1410_curclass, "$!pos", rx1410_pos
    $P11 = rx1410_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1410_curclass, "$!pos"
    lt $I11, 0, rx1410_fail3343
    rx1410_cur."!cursor_pass"(rx1410_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1410_cur)
  rx1410_restart3342:
    repr_get_attr_obj rx1410_cstack, rx1410_cur, rx1410_curclass, "$!cstack"
  rx1410_fail3343:
    unless rx1410_bstack, rx1410_done3341
    pop $I19, rx1410_bstack
    if_null rx1410_cstack, rx1410_cstack_done3346
    unless rx1410_cstack, rx1410_cstack_done3346
    dec $I19
    set $P11, rx1410_cstack[$I19]
  rx1410_cstack_done3346:
    pop rx1410_rep, rx1410_bstack
    pop rx1410_pos, rx1410_bstack
    pop $I19, rx1410_bstack
    lt rx1410_pos, -1, rx1410_done3341
    lt rx1410_pos, 0, rx1410_fail3343
    eq $I19, 0, rx1410_fail3343
    nqp_islist $I20, rx1410_cstack
    unless $I20, rx1410_jump3344
    elements $I18, rx1410_bstack
    le $I18, 0, rx1410_cut3345
    dec $I18
    set $I18, rx1410_bstack[$I18]
  rx1410_cut3345:
    assign rx1410_cstack, $I18
  rx1410_jump3344:
    jump $I19
  rx1410_done3341:
    rx1410_cur."!cursor_fail"()
    .return (rx1410_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_168_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1412_start
    .local string rx1412_tgt
    .local int rx1412_pos
    .local int rx1412_off
    .local int rx1412_eos
    .local int rx1412_rep
    .local pmc rx1412_cur
    .local pmc rx1412_curclass
    .local pmc rx1412_bstack
    .local pmc rx1412_cstack
    rx1412_start = self."!cursor_start_all"()
    set rx1412_cur, rx1412_start[0]
    set rx1412_tgt, rx1412_start[1]
    set rx1412_pos, rx1412_start[2]
    set rx1412_curclass, rx1412_start[3]
    set rx1412_bstack, rx1412_start[4]
    set $I19, rx1412_start[5]
    store_lex unicode:"$\x{a2}", rx1412_cur
    length rx1412_eos, rx1412_tgt
    eq $I19, 1, rx1412_restart3352
    gt rx1412_pos, rx1412_eos, rx1412_fail3353
    repr_get_attr_int $I11, self, rx1412_curclass, "$!from"
    ne $I11, -1, rxscan1413_done3359
    goto rxscan1413_scan3358
  rxscan1413_loop3357:
    inc rx1412_pos
    index rx1412_pos, rx1412_tgt, ucs4:"(", rx1412_pos
    eq rx1412_pos, -1, rx1412_fail3353
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!from", rx1412_pos
  rxscan1413_scan3358:
    nqp_rxmark rx1412_bstack, rxscan1413_loop3357, rx1412_pos, 0
  rxscan1413_done3359:
    add $I11, rx1412_pos, 1
    gt $I11, rx1412_eos, rx1412_fail3353
    substr $S10, rx1412_tgt, rx1412_pos, 1
    ne $S10, ucs4:"(", rx1412_fail3353
    add rx1412_pos, 1
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!pos", rx1412_pos
    $P11 = rx1412_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1412_curclass, "$!pos"
    lt $I11, 0, rx1412_fail3353
    repr_get_attr_int rx1412_pos, $P11, rx1412_curclass, "$!pos"
    nqp_rxmark rx1412_bstack, rxquantr1415_done3362, rx1412_pos, 0
  rxquantr1415_loop3361:
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!pos", rx1412_pos
    $P11 = rx1412_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1412_curclass, "$!pos"
    lt $I11, 0, rx1412_fail3353
    goto rxsubrule1416_pass3363
  rxsubrule1416_back3364:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1412_curclass, "$!pos"
    lt $I11, 0, rx1412_fail3353
  rxsubrule1416_pass3363:
    rx1412_cstack = rx1412_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1416_back3364
    push rx1412_bstack, $I11
    push rx1412_bstack, 0
    push rx1412_bstack, rx1412_pos
    elements $I11, rx1412_cstack
    push rx1412_bstack, $I11
    repr_get_attr_int rx1412_pos, $P11, rx1412_curclass, "$!pos"
    nqp_rxpeek $I19, rx1412_bstack, rxquantr1415_done3362
    inc $I19
    inc $I19
    set rx1412_rep, rx1412_bstack[$I19]
    nqp_rxcommit rx1412_bstack, rxquantr1415_done3362
    inc rx1412_rep
  rxquantr1415_done3362:
    add $I11, rx1412_pos, 1
    gt $I11, rx1412_eos, rx1412_fail3353
    substr $S10, rx1412_tgt, rx1412_pos, 1
    ne $S10, ucs4:")", rx1412_fail3353
    add rx1412_pos, 1
    rx1412_cur."!cursor_pass"(rx1412_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1412_cur)
  rx1412_restart3352:
    repr_get_attr_obj rx1412_cstack, rx1412_cur, rx1412_curclass, "$!cstack"
  rx1412_fail3353:
    unless rx1412_bstack, rx1412_done3351
    pop $I19, rx1412_bstack
    if_null rx1412_cstack, rx1412_cstack_done3356
    unless rx1412_cstack, rx1412_cstack_done3356
    dec $I19
    set $P11, rx1412_cstack[$I19]
  rx1412_cstack_done3356:
    pop rx1412_rep, rx1412_bstack
    pop rx1412_pos, rx1412_bstack
    pop $I19, rx1412_bstack
    lt rx1412_pos, -1, rx1412_done3351
    lt rx1412_pos, 0, rx1412_fail3353
    eq $I19, 0, rx1412_fail3353
    nqp_islist $I20, rx1412_cstack
    unless $I20, rx1412_jump3354
    elements $I18, rx1412_bstack
    le $I18, 0, rx1412_cut3355
    dec $I18
    set $I18, rx1412_bstack[$I18]
  rx1412_cut3355:
    assign rx1412_cstack, $I18
  rx1412_jump3354:
    jump $I19
  rx1412_done3351:
    rx1412_cur."!cursor_fail"()
    .return (rx1412_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_169_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1427
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1417_start
    .local string rx1417_tgt
    .local int rx1417_pos
    .local int rx1417_off
    .local int rx1417_eos
    .local int rx1417_rep
    .local pmc rx1417_cur
    .local pmc rx1417_curclass
    .local pmc rx1417_bstack
    .local pmc rx1417_cstack
    rx1417_start = self."!cursor_start_all"()
    set rx1417_cur, rx1417_start[0]
    set rx1417_tgt, rx1417_start[1]
    set rx1417_pos, rx1417_start[2]
    set rx1417_curclass, rx1417_start[3]
    set rx1417_bstack, rx1417_start[4]
    set $I19, rx1417_start[5]
    store_lex unicode:"$\x{a2}", rx1417_cur
    length rx1417_eos, rx1417_tgt
    eq $I19, 1, rx1417_restart3367
    gt rx1417_pos, rx1417_eos, rx1417_fail3368
    repr_get_attr_int $I11, self, rx1417_curclass, "$!from"
    ne $I11, -1, rxscan1418_done3374
    goto rxscan1418_scan3373
  rxscan1418_loop3372:
    inc rx1417_pos
    index rx1417_pos, rx1417_tgt, ucs4:"[", rx1417_pos
    eq rx1417_pos, -1, rx1417_fail3368
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!from", rx1417_pos
  rxscan1418_scan3373:
    nqp_rxmark rx1417_bstack, rxscan1418_loop3372, rx1417_pos, 0
  rxscan1418_done3374:
    add $I11, rx1417_pos, 1
    gt $I11, rx1417_eos, rx1417_fail3368
    substr $S10, rx1417_tgt, rx1417_pos, 1
    ne $S10, ucs4:"[", rx1417_fail3368
    add rx1417_pos, 1
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!pos", rx1417_pos
    $P11 = rx1417_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1417_curclass, "$!pos"
    lt $I11, 0, rx1417_fail3368
    repr_get_attr_int rx1417_pos, $P11, rx1417_curclass, "$!pos"
    nqp_rxmark rx1417_bstack, rxquantr1420_done3377, rx1417_pos, 0
  rxquantr1420_loop3376:
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!pos", rx1417_pos
    $P11 = rx1417_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1417_curclass, "$!pos"
    lt $I11, 0, rx1417_fail3368
    goto rxsubrule1421_pass3378
  rxsubrule1421_back3379:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1417_curclass, "$!pos"
    lt $I11, 0, rx1417_fail3368
  rxsubrule1421_pass3378:
    rx1417_cstack = rx1417_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1421_back3379
    push rx1417_bstack, $I11
    push rx1417_bstack, 0
    push rx1417_bstack, rx1417_pos
    elements $I11, rx1417_cstack
    push rx1417_bstack, $I11
    repr_get_attr_int rx1417_pos, $P11, rx1417_curclass, "$!pos"
    nqp_rxpeek $I19, rx1417_bstack, rxquantr1420_done3377
    inc $I19
    inc $I19
    set rx1417_rep, rx1417_bstack[$I19]
    nqp_rxcommit rx1417_bstack, rxquantr1420_done3377
    inc rx1417_rep
  rxquantr1420_done3377:
    add $I11, rx1417_pos, 1
    gt $I11, rx1417_eos, rx1417_fail3368
    substr $S10, rx1417_tgt, rx1417_pos, 1
    ne $S10, ucs4:"]", rx1417_fail3368
    add rx1417_pos, 1
    rx1417_cur."!cursor_pass"(rx1417_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1417_cur)
  rx1417_restart3367:
    repr_get_attr_obj rx1417_cstack, rx1417_cur, rx1417_curclass, "$!cstack"
  rx1417_fail3368:
    unless rx1417_bstack, rx1417_done3366
    pop $I19, rx1417_bstack
    if_null rx1417_cstack, rx1417_cstack_done3371
    unless rx1417_cstack, rx1417_cstack_done3371
    dec $I19
    set $P11, rx1417_cstack[$I19]
  rx1417_cstack_done3371:
    pop rx1417_rep, rx1417_bstack
    pop rx1417_pos, rx1417_bstack
    pop $I19, rx1417_bstack
    lt rx1417_pos, -1, rx1417_done3366
    lt rx1417_pos, 0, rx1417_fail3368
    eq $I19, 0, rx1417_fail3368
    nqp_islist $I20, rx1417_cstack
    unless $I20, rx1417_jump3369
    elements $I18, rx1417_bstack
    le $I18, 0, rx1417_cut3370
    dec $I18
    set $I18, rx1417_bstack[$I18]
  rx1417_cut3370:
    assign rx1417_cstack, $I18
  rx1417_jump3369:
    jump $I19
  rx1417_done3366:
    rx1417_cur."!cursor_fail"()
    .return (rx1417_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_170_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1428
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1422_start
    .local string rx1422_tgt
    .local int rx1422_pos
    .local int rx1422_off
    .local int rx1422_eos
    .local int rx1422_rep
    .local pmc rx1422_cur
    .local pmc rx1422_curclass
    .local pmc rx1422_bstack
    .local pmc rx1422_cstack
    rx1422_start = self."!cursor_start_all"()
    set rx1422_cur, rx1422_start[0]
    set rx1422_tgt, rx1422_start[1]
    set rx1422_pos, rx1422_start[2]
    set rx1422_curclass, rx1422_start[3]
    set rx1422_bstack, rx1422_start[4]
    set $I19, rx1422_start[5]
    store_lex unicode:"$\x{a2}", rx1422_cur
    length rx1422_eos, rx1422_tgt
    eq $I19, 1, rx1422_restart3382
    gt rx1422_pos, rx1422_eos, rx1422_fail3383
    repr_get_attr_int $I11, self, rx1422_curclass, "$!from"
    ne $I11, -1, rxscan1423_done3389
    goto rxscan1423_scan3388
  rxscan1423_loop3387:
    inc rx1422_pos
    gt rx1422_pos, rx1422_eos, rx1422_fail3383
    repr_bind_attr_int rx1422_cur, rx1422_curclass, "$!from", rx1422_pos
  rxscan1423_scan3388:
    nqp_rxmark rx1422_bstack, rxscan1423_loop3387, rx1422_pos, 0
  rxscan1423_done3389:
    ge rx1422_pos, rx1422_eos, rx1422_fail3383
    substr $S11, rx1422_tgt, rx1422_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1422_fail3383
    repr_bind_attr_int rx1422_cur, rx1422_curclass, "$!pos", rx1422_pos
    $P11 = rx1422_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1422_curclass, "$!pos"
    lt $I11, 0, rx1422_fail3383
    nqp_rxmark rx1422_bstack, rxsubrule1424_pass3390, -1, 0
  rxsubrule1424_pass3390:
    rx1422_cstack = rx1422_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1422_pos, $P11, rx1422_curclass, "$!pos"
    rx1422_cur."!cursor_pass"(rx1422_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1422_cur)
  rx1422_restart3382:
    repr_get_attr_obj rx1422_cstack, rx1422_cur, rx1422_curclass, "$!cstack"
  rx1422_fail3383:
    unless rx1422_bstack, rx1422_done3381
    pop $I19, rx1422_bstack
    if_null rx1422_cstack, rx1422_cstack_done3386
    unless rx1422_cstack, rx1422_cstack_done3386
    dec $I19
    set $P11, rx1422_cstack[$I19]
  rx1422_cstack_done3386:
    pop rx1422_rep, rx1422_bstack
    pop rx1422_pos, rx1422_bstack
    pop $I19, rx1422_bstack
    lt rx1422_pos, -1, rx1422_done3381
    lt rx1422_pos, 0, rx1422_fail3383
    eq $I19, 0, rx1422_fail3383
    nqp_islist $I20, rx1422_cstack
    unless $I20, rx1422_jump3384
    elements $I18, rx1422_bstack
    le $I18, 0, rx1422_cut3385
    dec $I18
    set $I18, rx1422_bstack[$I18]
  rx1422_cut3385:
    assign rx1422_cstack, $I18
  rx1422_jump3384:
    jump $I19
  rx1422_done3381:
    rx1422_cur."!cursor_fail"()
    .return (rx1422_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_171_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1429
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1425_start
    .local string rx1425_tgt
    .local int rx1425_pos
    .local int rx1425_off
    .local int rx1425_eos
    .local int rx1425_rep
    .local pmc rx1425_cur
    .local pmc rx1425_curclass
    .local pmc rx1425_bstack
    .local pmc rx1425_cstack
    rx1425_start = self."!cursor_start_all"()
    set rx1425_cur, rx1425_start[0]
    set rx1425_tgt, rx1425_start[1]
    set rx1425_pos, rx1425_start[2]
    set rx1425_curclass, rx1425_start[3]
    set rx1425_bstack, rx1425_start[4]
    set $I19, rx1425_start[5]
    store_lex unicode:"$\x{a2}", rx1425_cur
    length rx1425_eos, rx1425_tgt
    eq $I19, 1, rx1425_restart3393
    gt rx1425_pos, rx1425_eos, rx1425_fail3394
    repr_get_attr_int $I11, self, rx1425_curclass, "$!from"
    ne $I11, -1, rxscan1426_done3400
    goto rxscan1426_scan3399
  rxscan1426_loop3398:
    inc rx1425_pos
    gt rx1425_pos, rx1425_eos, rx1425_fail3394
    repr_bind_attr_int rx1425_cur, rx1425_curclass, "$!from", rx1425_pos
  rxscan1426_scan3399:
    nqp_rxmark rx1425_bstack, rxscan1426_loop3398, rx1425_pos, 0
  rxscan1426_done3400:
    ge rx1425_pos, rx1425_eos, rx1425_fail3394
    substr $S11, rx1425_tgt, rx1425_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1425_fail3394
    repr_bind_attr_int rx1425_cur, rx1425_curclass, "$!pos", rx1425_pos
    $P11 = rx1425_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1425_curclass, "$!pos"
    lt $I11, 0, rx1425_fail3394
    nqp_rxmark rx1425_bstack, rxsubrule1427_pass3401, -1, 0
  rxsubrule1427_pass3401:
    rx1425_cstack = rx1425_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1425_pos, $P11, rx1425_curclass, "$!pos"
    rx1425_cur."!cursor_pass"(rx1425_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1425_cur)
  rx1425_restart3393:
    repr_get_attr_obj rx1425_cstack, rx1425_cur, rx1425_curclass, "$!cstack"
  rx1425_fail3394:
    unless rx1425_bstack, rx1425_done3392
    pop $I19, rx1425_bstack
    if_null rx1425_cstack, rx1425_cstack_done3397
    unless rx1425_cstack, rx1425_cstack_done3397
    dec $I19
    set $P11, rx1425_cstack[$I19]
  rx1425_cstack_done3397:
    pop rx1425_rep, rx1425_bstack
    pop rx1425_pos, rx1425_bstack
    pop $I19, rx1425_bstack
    lt rx1425_pos, -1, rx1425_done3392
    lt rx1425_pos, 0, rx1425_fail3394
    eq $I19, 0, rx1425_fail3394
    nqp_islist $I20, rx1425_cstack
    unless $I20, rx1425_jump3395
    elements $I18, rx1425_bstack
    le $I18, 0, rx1425_cut3396
    dec $I18
    set $I18, rx1425_bstack[$I18]
  rx1425_cut3396:
    assign rx1425_cstack, $I18
  rx1425_jump3395:
    jump $I19
  rx1425_done3392:
    rx1425_cur."!cursor_fail"()
    .return (rx1425_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_172_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1430
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1428_start
    .local string rx1428_tgt
    .local int rx1428_pos
    .local int rx1428_off
    .local int rx1428_eos
    .local int rx1428_rep
    .local pmc rx1428_cur
    .local pmc rx1428_curclass
    .local pmc rx1428_bstack
    .local pmc rx1428_cstack
    rx1428_start = self."!cursor_start_all"()
    set rx1428_cur, rx1428_start[0]
    set rx1428_tgt, rx1428_start[1]
    set rx1428_pos, rx1428_start[2]
    set rx1428_curclass, rx1428_start[3]
    set rx1428_bstack, rx1428_start[4]
    set $I19, rx1428_start[5]
    store_lex unicode:"$\x{a2}", rx1428_cur
    length rx1428_eos, rx1428_tgt
    eq $I19, 1, rx1428_restart3404
    gt rx1428_pos, rx1428_eos, rx1428_fail3405
    repr_get_attr_int $I11, self, rx1428_curclass, "$!from"
    ne $I11, -1, rxscan1429_done3411
    goto rxscan1429_scan3410
  rxscan1429_loop3409:
    inc rx1428_pos
    gt rx1428_pos, rx1428_eos, rx1428_fail3405
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!from", rx1428_pos
  rxscan1429_scan3410:
    nqp_rxmark rx1428_bstack, rxscan1429_loop3409, rx1428_pos, 0
  rxscan1429_done3411:
    ge rx1428_pos, rx1428_eos, rx1428_fail3405
    substr $S11, rx1428_tgt, rx1428_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1428_fail3405
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail3405
    nqp_rxmark rx1428_bstack, rxsubrule1430_pass3412, -1, 0
  rxsubrule1430_pass3412:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    rx1428_cur."!cursor_pass"(rx1428_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1428_cur)
  rx1428_restart3404:
    repr_get_attr_obj rx1428_cstack, rx1428_cur, rx1428_curclass, "$!cstack"
  rx1428_fail3405:
    unless rx1428_bstack, rx1428_done3403
    pop $I19, rx1428_bstack
    if_null rx1428_cstack, rx1428_cstack_done3408
    unless rx1428_cstack, rx1428_cstack_done3408
    dec $I19
    set $P11, rx1428_cstack[$I19]
  rx1428_cstack_done3408:
    pop rx1428_rep, rx1428_bstack
    pop rx1428_pos, rx1428_bstack
    pop $I19, rx1428_bstack
    lt rx1428_pos, -1, rx1428_done3403
    lt rx1428_pos, 0, rx1428_fail3405
    eq $I19, 0, rx1428_fail3405
    nqp_islist $I20, rx1428_cstack
    unless $I20, rx1428_jump3406
    elements $I18, rx1428_bstack
    le $I18, 0, rx1428_cut3407
    dec $I18
    set $I18, rx1428_bstack[$I18]
  rx1428_cut3407:
    assign rx1428_cstack, $I18
  rx1428_jump3406:
    jump $I19
  rx1428_done3403:
    rx1428_cur."!cursor_fail"()
    .return (rx1428_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_173_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1432
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1431_start
    .local string rx1431_tgt
    .local int rx1431_pos
    .local int rx1431_off
    .local int rx1431_eos
    .local int rx1431_rep
    .local pmc rx1431_cur
    .local pmc rx1431_curclass
    .local pmc rx1431_bstack
    .local pmc rx1431_cstack
    rx1431_start = self."!cursor_start_all"()
    set rx1431_cur, rx1431_start[0]
    set rx1431_tgt, rx1431_start[1]
    set rx1431_pos, rx1431_start[2]
    set rx1431_curclass, rx1431_start[3]
    set rx1431_bstack, rx1431_start[4]
    set $I19, rx1431_start[5]
    store_lex unicode:"$\x{a2}", rx1431_cur
    length rx1431_eos, rx1431_tgt
    eq $I19, 1, rx1431_restart3415
    gt rx1431_pos, rx1431_eos, rx1431_fail3416
    repr_get_attr_int $I11, self, rx1431_curclass, "$!from"
    ne $I11, -1, rxscan1432_done3422
    goto rxscan1432_scan3421
  rxscan1432_loop3420:
    inc rx1431_pos
    gt rx1431_pos, rx1431_eos, rx1431_fail3416
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!from", rx1431_pos
  rxscan1432_scan3421:
    nqp_rxmark rx1431_bstack, rxscan1432_loop3420, rx1431_pos, 0
  rxscan1432_done3422:
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!pos", rx1431_pos
    $P11 = rx1431_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1431_curclass, "$!pos"
    lt $I11, 0, rx1431_fail3416
    repr_get_attr_int rx1431_pos, $P11, rx1431_curclass, "$!pos"
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!pos", rx1431_pos
    $P11 = rx1431_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1431_curclass, "$!pos"
    lt $I11, 0, rx1431_fail3416
    nqp_rxmark rx1431_bstack, rxsubrule1434_pass3424, -1, 0
  rxsubrule1434_pass3424:
    rx1431_cstack = rx1431_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1431_pos, $P11, rx1431_curclass, "$!pos"
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!pos", rx1431_pos
    $P11 = rx1431_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1431_curclass, "$!pos"
    lt $I11, 0, rx1431_fail3416
    repr_get_attr_int rx1431_pos, $P11, rx1431_curclass, "$!pos"
    rx1431_cur."!cursor_pass"(rx1431_pos, "semilist", 'backtrack'=>1)
    .return (rx1431_cur)
  rx1431_restart3415:
    repr_get_attr_obj rx1431_cstack, rx1431_cur, rx1431_curclass, "$!cstack"
  rx1431_fail3416:
    unless rx1431_bstack, rx1431_done3414
    pop $I19, rx1431_bstack
    if_null rx1431_cstack, rx1431_cstack_done3419
    unless rx1431_cstack, rx1431_cstack_done3419
    dec $I19
    set $P11, rx1431_cstack[$I19]
  rx1431_cstack_done3419:
    pop rx1431_rep, rx1431_bstack
    pop rx1431_pos, rx1431_bstack
    pop $I19, rx1431_bstack
    lt rx1431_pos, -1, rx1431_done3414
    lt rx1431_pos, 0, rx1431_fail3416
    eq $I19, 0, rx1431_fail3416
    nqp_islist $I20, rx1431_cstack
    unless $I20, rx1431_jump3417
    elements $I18, rx1431_bstack
    le $I18, 0, rx1431_cut3418
    dec $I18
    set $I18, rx1431_bstack[$I18]
  rx1431_cut3418:
    assign rx1431_cstack, $I18
  rx1431_jump3417:
    jump $I19
  rx1431_done3414:
    rx1431_cur."!cursor_fail"()
    .return (rx1431_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_174_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1455
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1436_start
    .local string rx1436_tgt
    .local int rx1436_pos
    .local int rx1436_off
    .local int rx1436_eos
    .local int rx1436_rep
    .local pmc rx1436_cur
    .local pmc rx1436_curclass
    .local pmc rx1436_bstack
    .local pmc rx1436_cstack
    rx1436_start = self."!cursor_start_all"()
    set rx1436_cur, rx1436_start[0]
    set rx1436_tgt, rx1436_start[1]
    set rx1436_pos, rx1436_start[2]
    set rx1436_curclass, rx1436_start[3]
    set rx1436_bstack, rx1436_start[4]
    set $I19, rx1436_start[5]
    store_lex unicode:"$\x{a2}", rx1436_cur
    length rx1436_eos, rx1436_tgt
    eq $I19, 1, rx1436_restart3428
    gt rx1436_pos, rx1436_eos, rx1436_fail3429
    repr_get_attr_int $I11, self, rx1436_curclass, "$!from"
    ne $I11, -1, rxscan1437_done3435
    goto rxscan1437_scan3434
  rxscan1437_loop3433:
    inc rx1436_pos
    gt rx1436_pos, rx1436_eos, rx1436_fail3429
    repr_bind_attr_int rx1436_cur, rx1436_curclass, "$!from", rx1436_pos
  rxscan1437_scan3434:
    nqp_rxmark rx1436_bstack, rxscan1437_loop3433, rx1436_pos, 0
  rxscan1437_done3435:
    repr_bind_attr_int rx1436_cur, rx1436_curclass, "$!pos", rx1436_pos
    $P11 = rx1436_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1436_curclass, "$!pos"
    ge $I11, 0, rx1436_fail3429
    repr_bind_attr_int rx1436_cur, rx1436_curclass, "$!pos", rx1436_pos
    $P11 = rx1436_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1436_curclass, "$!pos"
    lt $I11, 0, rx1436_fail3429
    nqp_rxmark rx1436_bstack, rxsubrule1438_pass3436, -1, 0
  rxsubrule1438_pass3436:
    rx1436_cstack = rx1436_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1436_pos, $P11, rx1436_curclass, "$!pos"
    rx1436_cur."!cursor_pass"(rx1436_pos, "infixish", 'backtrack'=>1)
    .return (rx1436_cur)
  rx1436_restart3428:
    repr_get_attr_obj rx1436_cstack, rx1436_cur, rx1436_curclass, "$!cstack"
  rx1436_fail3429:
    unless rx1436_bstack, rx1436_done3427
    pop $I19, rx1436_bstack
    if_null rx1436_cstack, rx1436_cstack_done3432
    unless rx1436_cstack, rx1436_cstack_done3432
    dec $I19
    set $P11, rx1436_cstack[$I19]
  rx1436_cstack_done3432:
    pop rx1436_rep, rx1436_bstack
    pop rx1436_pos, rx1436_bstack
    pop $I19, rx1436_bstack
    lt rx1436_pos, -1, rx1436_done3427
    lt rx1436_pos, 0, rx1436_fail3429
    eq $I19, 0, rx1436_fail3429
    nqp_islist $I20, rx1436_cstack
    unless $I20, rx1436_jump3430
    elements $I18, rx1436_bstack
    le $I18, 0, rx1436_cut3431
    dec $I18
    set $I18, rx1436_bstack[$I18]
  rx1436_cut3431:
    assign rx1436_cstack, $I18
  rx1436_jump3430:
    jump $I19
  rx1436_done3427:
    rx1436_cur."!cursor_fail"()
    .return (rx1436_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_175_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1456
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_434_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1439_start
    .local string rx1439_tgt
    .local int rx1439_pos
    .local int rx1439_off
    .local int rx1439_eos
    .local int rx1439_rep
    .local pmc rx1439_cur
    .local pmc rx1439_curclass
    .local pmc rx1439_bstack
    .local pmc rx1439_cstack
    rx1439_start = self."!cursor_start_all"()
    set rx1439_cur, rx1439_start[0]
    set rx1439_tgt, rx1439_start[1]
    set rx1439_pos, rx1439_start[2]
    set rx1439_curclass, rx1439_start[3]
    set rx1439_bstack, rx1439_start[4]
    set $I19, rx1439_start[5]
    store_lex unicode:"$\x{a2}", rx1439_cur
    length rx1439_eos, rx1439_tgt
    eq $I19, 1, rx1439_restart3439
    gt rx1439_pos, rx1439_eos, rx1439_fail3440
    repr_get_attr_int $I11, self, rx1439_curclass, "$!from"
    ne $I11, -1, rxscan1440_done3446
    goto rxscan1440_scan3445
  rxscan1440_loop3444:
    inc rx1439_pos
    gt rx1439_pos, rx1439_eos, rx1439_fail3440
    repr_bind_attr_int rx1439_cur, rx1439_curclass, "$!from", rx1439_pos
  rxscan1440_scan3445:
    nqp_rxmark rx1439_bstack, rxscan1440_loop3444, rx1439_pos, 0
  rxscan1440_done3446:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1441_03448
    nqp_push_label $P11, alt1441_13454
    nqp_rxmark rx1439_bstack, alt1441_end3447, -1, 0
    rx1439_cur."!alt"(rx1439_pos, "alt_nfa__37_1382959282.1596", $P11)
    goto rx1439_fail3440
  alt1441_03448:
    repr_bind_attr_int rx1439_cur, rx1439_curclass, "$!pos", rx1439_pos
    store_lex unicode:"$\x{a2}", rx1439_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_434_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1439_fail3440
    ge rx1439_pos, rx1439_eos, rx1439_fail3440
    substr $S11, rx1439_tgt, rx1439_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1439_fail3440
    goto alt1441_end3447
  alt1441_13454:
    repr_bind_attr_int rx1439_cur, rx1439_curclass, "$!pos", rx1439_pos
    $P11 = rx1439_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1439_curclass, "$!pos"
    lt $I11, 0, rx1439_fail3440
    goto alt1441_end3447
  alt1441_end3447:
    rx1439_cur."!cursor_pass"(rx1439_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1439_cur)
  rx1439_restart3439:
    repr_get_attr_obj rx1439_cstack, rx1439_cur, rx1439_curclass, "$!cstack"
  rx1439_fail3440:
    unless rx1439_bstack, rx1439_done3438
    pop $I19, rx1439_bstack
    if_null rx1439_cstack, rx1439_cstack_done3443
    unless rx1439_cstack, rx1439_cstack_done3443
    dec $I19
    set $P11, rx1439_cstack[$I19]
  rx1439_cstack_done3443:
    pop rx1439_rep, rx1439_bstack
    pop rx1439_pos, rx1439_bstack
    pop $I19, rx1439_bstack
    lt rx1439_pos, -1, rx1439_done3438
    lt rx1439_pos, 0, rx1439_fail3440
    eq $I19, 0, rx1439_fail3440
    nqp_islist $I20, rx1439_cstack
    unless $I20, rx1439_jump3441
    elements $I18, rx1439_bstack
    le $I18, 0, rx1439_cut3442
    dec $I18
    set $I18, rx1439_bstack[$I18]
  rx1439_cut3442:
    assign rx1439_cstack, $I18
  rx1439_jump3441:
    jump $I19
  rx1439_done3438:
    rx1439_cur."!cursor_fail"()
    .return (rx1439_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_434_1382959278.72036") :anon :lex :outer("cuid_175_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1457
    .local pmc fb_tmp_192 
    find_dynamic_lex $P5001, "$*IN_REGEX_ASSERTION"
    unless_null $P5001, fallback3449
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_192, $P5002
    repr_defined $I5001, fb_tmp_192
    unless $I5001 goto if1442_else3450 
    set $P5004, fb_tmp_192["$IN_REGEX_ASSERTION"]
    set $P5006, $P5004
    goto if1442_end3451
  if1442_else3450:
    null $P5005
    set $P5006, $P5005
  if1442_end3451:
    unless_null $P5006, vivi_14433452
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_14433452:
    unless_null $P5006, vivi_14443453
    die "Contextual $*IN_REGEX_ASSERTION not found"
    box $P5008, "Contextual $*IN_REGEX_ASSERTION not found"
    set $P5006, $P5008
  vivi_14443453:
    set $P5001, $P5006
  fallback3449:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_176_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1461
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1445_start
    .local string rx1445_tgt
    .local int rx1445_pos
    .local int rx1445_off
    .local int rx1445_eos
    .local int rx1445_rep
    .local pmc rx1445_cur
    .local pmc rx1445_curclass
    .local pmc rx1445_bstack
    .local pmc rx1445_cstack
    rx1445_start = self."!cursor_start_all"()
    set rx1445_cur, rx1445_start[0]
    set rx1445_tgt, rx1445_start[1]
    set rx1445_pos, rx1445_start[2]
    set rx1445_curclass, rx1445_start[3]
    set rx1445_bstack, rx1445_start[4]
    set $I19, rx1445_start[5]
    store_lex unicode:"$\x{a2}", rx1445_cur
    length rx1445_eos, rx1445_tgt
    eq $I19, 1, rx1445_restart3457
    gt rx1445_pos, rx1445_eos, rx1445_fail3458
    repr_get_attr_int $I11, self, rx1445_curclass, "$!from"
    ne $I11, -1, rxscan1446_done3464
    goto rxscan1446_scan3463
  rxscan1446_loop3462:
    inc rx1445_pos
    index rx1445_pos, rx1445_tgt, ucs4:"[", rx1445_pos
    eq rx1445_pos, -1, rx1445_fail3458
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!from", rx1445_pos
  rxscan1446_scan3463:
    nqp_rxmark rx1445_bstack, rxscan1446_loop3462, rx1445_pos, 0
  rxscan1446_done3464:
    add $I11, rx1445_pos, 1
    gt $I11, rx1445_eos, rx1445_fail3458
    substr $S10, rx1445_tgt, rx1445_pos, 1
    ne $S10, ucs4:"[", rx1445_fail3458
    add rx1445_pos, 1
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1445_curclass, "$!pos"
    lt $I11, 0, rx1445_fail3458
    repr_get_attr_int rx1445_pos, $P11, rx1445_curclass, "$!pos"
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1445_curclass, "$!pos"
    lt $I11, 0, rx1445_fail3458
    nqp_rxmark rx1445_bstack, rxsubrule1448_pass3466, -1, 0
  rxsubrule1448_pass3466:
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1445_pos, $P11, rx1445_curclass, "$!pos"
    add $I11, rx1445_pos, 1
    gt $I11, rx1445_eos, rx1445_fail3458
    substr $S10, rx1445_tgt, rx1445_pos, 1
    ne $S10, ucs4:"]", rx1445_fail3458
    add rx1445_pos, 1
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1445_curclass, "$!pos"
    lt $I11, 0, rx1445_fail3458
    nqp_rxmark rx1445_bstack, rxsubrule1449_pass3467, -1, 0
  rxsubrule1449_pass3467:
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1445_pos, $P11, rx1445_curclass, "$!pos"
    rx1445_cur."!cursor_pass"(rx1445_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1445_cur)
  rx1445_restart3457:
    repr_get_attr_obj rx1445_cstack, rx1445_cur, rx1445_curclass, "$!cstack"
  rx1445_fail3458:
    unless rx1445_bstack, rx1445_done3456
    pop $I19, rx1445_bstack
    if_null rx1445_cstack, rx1445_cstack_done3461
    unless rx1445_cstack, rx1445_cstack_done3461
    dec $I19
    set $P11, rx1445_cstack[$I19]
  rx1445_cstack_done3461:
    pop rx1445_rep, rx1445_bstack
    pop rx1445_pos, rx1445_bstack
    pop $I19, rx1445_bstack
    lt rx1445_pos, -1, rx1445_done3456
    lt rx1445_pos, 0, rx1445_fail3458
    eq $I19, 0, rx1445_fail3458
    nqp_islist $I20, rx1445_cstack
    unless $I20, rx1445_jump3459
    elements $I18, rx1445_bstack
    le $I18, 0, rx1445_cut3460
    dec $I18
    set $I18, rx1445_bstack[$I18]
  rx1445_cut3460:
    assign rx1445_cstack, $I18
  rx1445_jump3459:
    jump $I19
  rx1445_done3456:
    rx1445_cur."!cursor_fail"()
    .return (rx1445_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_177_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1466
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1450_start
    .local string rx1450_tgt
    .local int rx1450_pos
    .local int rx1450_off
    .local int rx1450_eos
    .local int rx1450_rep
    .local pmc rx1450_cur
    .local pmc rx1450_curclass
    .local pmc rx1450_bstack
    .local pmc rx1450_cstack
    rx1450_start = self."!cursor_start_all"()
    set rx1450_cur, rx1450_start[0]
    set rx1450_tgt, rx1450_start[1]
    set rx1450_pos, rx1450_start[2]
    set rx1450_curclass, rx1450_start[3]
    set rx1450_bstack, rx1450_start[4]
    set $I19, rx1450_start[5]
    store_lex unicode:"$\x{a2}", rx1450_cur
    length rx1450_eos, rx1450_tgt
    eq $I19, 1, rx1450_restart3470
    gt rx1450_pos, rx1450_eos, rx1450_fail3471
    repr_get_attr_int $I11, self, rx1450_curclass, "$!from"
    ne $I11, -1, rxscan1451_done3477
    goto rxscan1451_scan3476
  rxscan1451_loop3475:
    inc rx1450_pos
    index rx1450_pos, rx1450_tgt, ucs4:"{", rx1450_pos
    eq rx1450_pos, -1, rx1450_fail3471
    repr_bind_attr_int rx1450_cur, rx1450_curclass, "$!from", rx1450_pos
  rxscan1451_scan3476:
    nqp_rxmark rx1450_bstack, rxscan1451_loop3475, rx1450_pos, 0
  rxscan1451_done3477:
    add $I11, rx1450_pos, 1
    gt $I11, rx1450_eos, rx1450_fail3471
    substr $S10, rx1450_tgt, rx1450_pos, 1
    ne $S10, ucs4:"{", rx1450_fail3471
    add rx1450_pos, 1
    repr_bind_attr_int rx1450_cur, rx1450_curclass, "$!pos", rx1450_pos
    $P11 = rx1450_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1450_curclass, "$!pos"
    lt $I11, 0, rx1450_fail3471
    repr_get_attr_int rx1450_pos, $P11, rx1450_curclass, "$!pos"
    repr_bind_attr_int rx1450_cur, rx1450_curclass, "$!pos", rx1450_pos
    $P11 = rx1450_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1450_curclass, "$!pos"
    lt $I11, 0, rx1450_fail3471
    nqp_rxmark rx1450_bstack, rxsubrule1453_pass3479, -1, 0
  rxsubrule1453_pass3479:
    rx1450_cstack = rx1450_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1450_pos, $P11, rx1450_curclass, "$!pos"
    add $I11, rx1450_pos, 1
    gt $I11, rx1450_eos, rx1450_fail3471
    substr $S10, rx1450_tgt, rx1450_pos, 1
    ne $S10, ucs4:"}", rx1450_fail3471
    add rx1450_pos, 1
    repr_bind_attr_int rx1450_cur, rx1450_curclass, "$!pos", rx1450_pos
    $P11 = rx1450_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1450_curclass, "$!pos"
    lt $I11, 0, rx1450_fail3471
    nqp_rxmark rx1450_bstack, rxsubrule1454_pass3480, -1, 0
  rxsubrule1454_pass3480:
    rx1450_cstack = rx1450_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1450_pos, $P11, rx1450_curclass, "$!pos"
    rx1450_cur."!cursor_pass"(rx1450_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1450_cur)
  rx1450_restart3470:
    repr_get_attr_obj rx1450_cstack, rx1450_cur, rx1450_curclass, "$!cstack"
  rx1450_fail3471:
    unless rx1450_bstack, rx1450_done3469
    pop $I19, rx1450_bstack
    if_null rx1450_cstack, rx1450_cstack_done3474
    unless rx1450_cstack, rx1450_cstack_done3474
    dec $I19
    set $P11, rx1450_cstack[$I19]
  rx1450_cstack_done3474:
    pop rx1450_rep, rx1450_bstack
    pop rx1450_pos, rx1450_bstack
    pop $I19, rx1450_bstack
    lt rx1450_pos, -1, rx1450_done3469
    lt rx1450_pos, 0, rx1450_fail3471
    eq $I19, 0, rx1450_fail3471
    nqp_islist $I20, rx1450_cstack
    unless $I20, rx1450_jump3472
    elements $I18, rx1450_bstack
    le $I18, 0, rx1450_cut3473
    dec $I18
    set $I18, rx1450_bstack[$I18]
  rx1450_cut3473:
    assign rx1450_cstack, $I18
  rx1450_jump3472:
    jump $I19
  rx1450_done3469:
    rx1450_cur."!cursor_fail"()
    .return (rx1450_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_178_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1471
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1455_start
    .local string rx1455_tgt
    .local int rx1455_pos
    .local int rx1455_off
    .local int rx1455_eos
    .local int rx1455_rep
    .local pmc rx1455_cur
    .local pmc rx1455_curclass
    .local pmc rx1455_bstack
    .local pmc rx1455_cstack
    rx1455_start = self."!cursor_start_all"()
    set rx1455_cur, rx1455_start[0]
    set rx1455_tgt, rx1455_start[1]
    set rx1455_pos, rx1455_start[2]
    set rx1455_curclass, rx1455_start[3]
    set rx1455_bstack, rx1455_start[4]
    set $I19, rx1455_start[5]
    store_lex unicode:"$\x{a2}", rx1455_cur
    length rx1455_eos, rx1455_tgt
    eq $I19, 1, rx1455_restart3483
    gt rx1455_pos, rx1455_eos, rx1455_fail3484
    repr_get_attr_int $I11, self, rx1455_curclass, "$!from"
    ne $I11, -1, rxscan1456_done3490
    goto rxscan1456_scan3489
  rxscan1456_loop3488:
    inc rx1455_pos
    gt rx1455_pos, rx1455_eos, rx1455_fail3484
    repr_bind_attr_int rx1455_cur, rx1455_curclass, "$!from", rx1455_pos
  rxscan1456_scan3489:
    nqp_rxmark rx1455_bstack, rxscan1456_loop3488, rx1455_pos, 0
  rxscan1456_done3490:
    ge rx1455_pos, rx1455_eos, rx1455_fail3484
    substr $S11, rx1455_tgt, rx1455_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1455_fail3484
    repr_bind_attr_int rx1455_cur, rx1455_curclass, "$!pos", rx1455_pos
    $P11 = rx1455_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1455_curclass, "$!pos"
    lt $I11, 0, rx1455_fail3484
    nqp_rxmark rx1455_bstack, rxsubrule1457_pass3491, -1, 0
  rxsubrule1457_pass3491:
    rx1455_cstack = rx1455_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1455_pos, $P11, rx1455_curclass, "$!pos"
    repr_bind_attr_int rx1455_cur, rx1455_curclass, "$!pos", rx1455_pos
    $P11 = rx1455_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1455_curclass, "$!pos"
    lt $I11, 0, rx1455_fail3484
    nqp_rxmark rx1455_bstack, rxsubrule1458_pass3492, -1, 0
  rxsubrule1458_pass3492:
    rx1455_cstack = rx1455_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1455_pos, $P11, rx1455_curclass, "$!pos"
    rx1455_cur."!cursor_pass"(rx1455_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1455_cur)
  rx1455_restart3483:
    repr_get_attr_obj rx1455_cstack, rx1455_cur, rx1455_curclass, "$!cstack"
  rx1455_fail3484:
    unless rx1455_bstack, rx1455_done3482
    pop $I19, rx1455_bstack
    if_null rx1455_cstack, rx1455_cstack_done3487
    unless rx1455_cstack, rx1455_cstack_done3487
    dec $I19
    set $P11, rx1455_cstack[$I19]
  rx1455_cstack_done3487:
    pop rx1455_rep, rx1455_bstack
    pop rx1455_pos, rx1455_bstack
    pop $I19, rx1455_bstack
    lt rx1455_pos, -1, rx1455_done3482
    lt rx1455_pos, 0, rx1455_fail3484
    eq $I19, 0, rx1455_fail3484
    nqp_islist $I20, rx1455_cstack
    unless $I20, rx1455_jump3485
    elements $I18, rx1455_bstack
    le $I18, 0, rx1455_cut3486
    dec $I18
    set $I18, rx1455_bstack[$I18]
  rx1455_cut3486:
    assign rx1455_cstack, $I18
  rx1455_jump3485:
    jump $I19
  rx1455_done3482:
    rx1455_cur."!cursor_fail"()
    .return (rx1455_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_179_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1476
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1459_start
    .local string rx1459_tgt
    .local int rx1459_pos
    .local int rx1459_off
    .local int rx1459_eos
    .local int rx1459_rep
    .local pmc rx1459_cur
    .local pmc rx1459_curclass
    .local pmc rx1459_bstack
    .local pmc rx1459_cstack
    rx1459_start = self."!cursor_start_all"()
    set rx1459_cur, rx1459_start[0]
    set rx1459_tgt, rx1459_start[1]
    set rx1459_pos, rx1459_start[2]
    set rx1459_curclass, rx1459_start[3]
    set rx1459_bstack, rx1459_start[4]
    set $I19, rx1459_start[5]
    store_lex unicode:"$\x{a2}", rx1459_cur
    length rx1459_eos, rx1459_tgt
    eq $I19, 1, rx1459_restart3495
    gt rx1459_pos, rx1459_eos, rx1459_fail3496
    repr_get_attr_int $I11, self, rx1459_curclass, "$!from"
    ne $I11, -1, rxscan1460_done3502
    goto rxscan1460_scan3501
  rxscan1460_loop3500:
    inc rx1459_pos
    index rx1459_pos, rx1459_tgt, ucs4:"(", rx1459_pos
    eq rx1459_pos, -1, rx1459_fail3496
    repr_bind_attr_int rx1459_cur, rx1459_curclass, "$!from", rx1459_pos
  rxscan1460_scan3501:
    nqp_rxmark rx1459_bstack, rxscan1460_loop3500, rx1459_pos, 0
  rxscan1460_done3502:
    add $I11, rx1459_pos, 1
    gt $I11, rx1459_eos, rx1459_fail3496
    substr $S10, rx1459_tgt, rx1459_pos, 1
    ne $S10, ucs4:"(", rx1459_fail3496
    add rx1459_pos, 1
    repr_bind_attr_int rx1459_cur, rx1459_curclass, "$!pos", rx1459_pos
    $P11 = rx1459_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1459_curclass, "$!pos"
    lt $I11, 0, rx1459_fail3496
    repr_get_attr_int rx1459_pos, $P11, rx1459_curclass, "$!pos"
    repr_bind_attr_int rx1459_cur, rx1459_curclass, "$!pos", rx1459_pos
    $P11 = rx1459_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1459_curclass, "$!pos"
    lt $I11, 0, rx1459_fail3496
    nqp_rxmark rx1459_bstack, rxsubrule1462_pass3504, -1, 0
  rxsubrule1462_pass3504:
    rx1459_cstack = rx1459_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1459_pos, $P11, rx1459_curclass, "$!pos"
    add $I11, rx1459_pos, 1
    gt $I11, rx1459_eos, rx1459_fail3496
    substr $S10, rx1459_tgt, rx1459_pos, 1
    ne $S10, ucs4:")", rx1459_fail3496
    add rx1459_pos, 1
    repr_bind_attr_int rx1459_cur, rx1459_curclass, "$!pos", rx1459_pos
    $P11 = rx1459_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1459_curclass, "$!pos"
    lt $I11, 0, rx1459_fail3496
    nqp_rxmark rx1459_bstack, rxsubrule1463_pass3505, -1, 0
  rxsubrule1463_pass3505:
    rx1459_cstack = rx1459_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1459_pos, $P11, rx1459_curclass, "$!pos"
    rx1459_cur."!cursor_pass"(rx1459_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1459_cur)
  rx1459_restart3495:
    repr_get_attr_obj rx1459_cstack, rx1459_cur, rx1459_curclass, "$!cstack"
  rx1459_fail3496:
    unless rx1459_bstack, rx1459_done3494
    pop $I19, rx1459_bstack
    if_null rx1459_cstack, rx1459_cstack_done3499
    unless rx1459_cstack, rx1459_cstack_done3499
    dec $I19
    set $P11, rx1459_cstack[$I19]
  rx1459_cstack_done3499:
    pop rx1459_rep, rx1459_bstack
    pop rx1459_pos, rx1459_bstack
    pop $I19, rx1459_bstack
    lt rx1459_pos, -1, rx1459_done3494
    lt rx1459_pos, 0, rx1459_fail3496
    eq $I19, 0, rx1459_fail3496
    nqp_islist $I20, rx1459_cstack
    unless $I20, rx1459_jump3497
    elements $I18, rx1459_bstack
    le $I18, 0, rx1459_cut3498
    dec $I18
    set $I18, rx1459_bstack[$I18]
  rx1459_cut3498:
    assign rx1459_cstack, $I18
  rx1459_jump3497:
    jump $I19
  rx1459_done3494:
    rx1459_cur."!cursor_fail"()
    .return (rx1459_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_180_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1481
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1464_start
    .local string rx1464_tgt
    .local int rx1464_pos
    .local int rx1464_off
    .local int rx1464_eos
    .local int rx1464_rep
    .local pmc rx1464_cur
    .local pmc rx1464_curclass
    .local pmc rx1464_bstack
    .local pmc rx1464_cstack
    rx1464_start = self."!cursor_start_all"()
    set rx1464_cur, rx1464_start[0]
    set rx1464_tgt, rx1464_start[1]
    set rx1464_pos, rx1464_start[2]
    set rx1464_curclass, rx1464_start[3]
    set rx1464_bstack, rx1464_start[4]
    set $I19, rx1464_start[5]
    store_lex unicode:"$\x{a2}", rx1464_cur
    length rx1464_eos, rx1464_tgt
    eq $I19, 1, rx1464_restart3508
    gt rx1464_pos, rx1464_eos, rx1464_fail3509
    repr_get_attr_int $I11, self, rx1464_curclass, "$!from"
    ne $I11, -1, rxscan1465_done3515
    goto rxscan1465_scan3514
  rxscan1465_loop3513:
    inc rx1464_pos
    gt rx1464_pos, rx1464_eos, rx1464_fail3509
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!from", rx1464_pos
  rxscan1465_scan3514:
    nqp_rxmark rx1464_bstack, rxscan1465_loop3513, rx1464_pos, 0
  rxscan1465_done3515:
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!pos", rx1464_pos
    $P11 = rx1464_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1464_curclass, "$!pos"
    lt $I11, 0, rx1464_fail3509
    nqp_rxmark rx1464_bstack, rxsubrule1466_pass3516, -1, 0
  rxsubrule1466_pass3516:
    rx1464_cstack = rx1464_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1464_pos, $P11, rx1464_curclass, "$!pos"
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!pos", rx1464_pos
    $P11 = rx1464_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1464_curclass, "$!pos"
    lt $I11, 0, rx1464_fail3509
    nqp_rxmark rx1464_bstack, rxsubrule1467_pass3517, -1, 0
  rxsubrule1467_pass3517:
    rx1464_cstack = rx1464_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1464_pos, $P11, rx1464_curclass, "$!pos"
    rx1464_cur."!cursor_pass"(rx1464_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1464_cur)
  rx1464_restart3508:
    repr_get_attr_obj rx1464_cstack, rx1464_cur, rx1464_curclass, "$!cstack"
  rx1464_fail3509:
    unless rx1464_bstack, rx1464_done3507
    pop $I19, rx1464_bstack
    if_null rx1464_cstack, rx1464_cstack_done3512
    unless rx1464_cstack, rx1464_cstack_done3512
    dec $I19
    set $P11, rx1464_cstack[$I19]
  rx1464_cstack_done3512:
    pop rx1464_rep, rx1464_bstack
    pop rx1464_pos, rx1464_bstack
    pop $I19, rx1464_bstack
    lt rx1464_pos, -1, rx1464_done3507
    lt rx1464_pos, 0, rx1464_fail3509
    eq $I19, 0, rx1464_fail3509
    nqp_islist $I20, rx1464_cstack
    unless $I20, rx1464_jump3510
    elements $I18, rx1464_bstack
    le $I18, 0, rx1464_cut3511
    dec $I18
    set $I18, rx1464_bstack[$I18]
  rx1464_cut3511:
    assign rx1464_cstack, $I18
  rx1464_jump3510:
    jump $I19
  rx1464_done3507:
    rx1464_cur."!cursor_fail"()
    .return (rx1464_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_181_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1483
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1468_start
    .local string rx1468_tgt
    .local int rx1468_pos
    .local int rx1468_off
    .local int rx1468_eos
    .local int rx1468_rep
    .local pmc rx1468_cur
    .local pmc rx1468_curclass
    .local pmc rx1468_bstack
    .local pmc rx1468_cstack
    rx1468_start = self."!cursor_start_all"()
    set rx1468_cur, rx1468_start[0]
    set rx1468_tgt, rx1468_start[1]
    set rx1468_pos, rx1468_start[2]
    set rx1468_curclass, rx1468_start[3]
    set rx1468_bstack, rx1468_start[4]
    set $I19, rx1468_start[5]
    store_lex unicode:"$\x{a2}", rx1468_cur
    length rx1468_eos, rx1468_tgt
    eq $I19, 1, rx1468_restart3520
    gt rx1468_pos, rx1468_eos, rx1468_fail3521
    repr_get_attr_int $I11, self, rx1468_curclass, "$!from"
    ne $I11, -1, rxscan1469_done3527
    goto rxscan1469_scan3526
  rxscan1469_loop3525:
    inc rx1468_pos
    gt rx1468_pos, rx1468_eos, rx1468_fail3521
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!from", rx1468_pos
  rxscan1469_scan3526:
    nqp_rxmark rx1468_bstack, rxscan1469_loop3525, rx1468_pos, 0
  rxscan1469_done3527:
    nqp_rxmark rx1468_bstack, rxcap1470_fail3529, rx1468_pos, 0
    add $I11, rx1468_pos, 2
    gt $I11, rx1468_eos, rx1468_fail3521
    substr $S10, rx1468_tgt, rx1468_pos, 2
    ne $S10, ucs4:"++", rx1468_fail3521
    add rx1468_pos, 2
    nqp_rxpeek $I19, rx1468_bstack, rxcap1470_fail3529
    inc $I19
    set $I11, rx1468_bstack[$I19]
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1468_pos)
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "sym")
    goto rxcap1470_done3528
  rxcap1470_fail3529:
    goto rx1468_fail3521
  rxcap1470_done3528:
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3521
    nqp_rxmark rx1468_bstack, rxsubrule1471_pass3530, -1, 0
  rxsubrule1471_pass3530:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    rx1468_cur."!cursor_pass"(rx1468_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1468_cur)
  rx1468_restart3520:
    repr_get_attr_obj rx1468_cstack, rx1468_cur, rx1468_curclass, "$!cstack"
  rx1468_fail3521:
    unless rx1468_bstack, rx1468_done3519
    pop $I19, rx1468_bstack
    if_null rx1468_cstack, rx1468_cstack_done3524
    unless rx1468_cstack, rx1468_cstack_done3524
    dec $I19
    set $P11, rx1468_cstack[$I19]
  rx1468_cstack_done3524:
    pop rx1468_rep, rx1468_bstack
    pop rx1468_pos, rx1468_bstack
    pop $I19, rx1468_bstack
    lt rx1468_pos, -1, rx1468_done3519
    lt rx1468_pos, 0, rx1468_fail3521
    eq $I19, 0, rx1468_fail3521
    nqp_islist $I20, rx1468_cstack
    unless $I20, rx1468_jump3522
    elements $I18, rx1468_bstack
    le $I18, 0, rx1468_cut3523
    dec $I18
    set $I18, rx1468_bstack[$I18]
  rx1468_cut3523:
    assign rx1468_cstack, $I18
  rx1468_jump3522:
    jump $I19
  rx1468_done3519:
    rx1468_cur."!cursor_fail"()
    .return (rx1468_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_182_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1484
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1472_start
    .local string rx1472_tgt
    .local int rx1472_pos
    .local int rx1472_off
    .local int rx1472_eos
    .local int rx1472_rep
    .local pmc rx1472_cur
    .local pmc rx1472_curclass
    .local pmc rx1472_bstack
    .local pmc rx1472_cstack
    rx1472_start = self."!cursor_start_all"()
    set rx1472_cur, rx1472_start[0]
    set rx1472_tgt, rx1472_start[1]
    set rx1472_pos, rx1472_start[2]
    set rx1472_curclass, rx1472_start[3]
    set rx1472_bstack, rx1472_start[4]
    set $I19, rx1472_start[5]
    store_lex unicode:"$\x{a2}", rx1472_cur
    length rx1472_eos, rx1472_tgt
    eq $I19, 1, rx1472_restart3533
    gt rx1472_pos, rx1472_eos, rx1472_fail3534
    repr_get_attr_int $I11, self, rx1472_curclass, "$!from"
    ne $I11, -1, rxscan1473_done3540
    goto rxscan1473_scan3539
  rxscan1473_loop3538:
    inc rx1472_pos
    gt rx1472_pos, rx1472_eos, rx1472_fail3534
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!from", rx1472_pos
  rxscan1473_scan3539:
    nqp_rxmark rx1472_bstack, rxscan1473_loop3538, rx1472_pos, 0
  rxscan1473_done3540:
    nqp_rxmark rx1472_bstack, rxcap1474_fail3542, rx1472_pos, 0
    add $I11, rx1472_pos, 2
    gt $I11, rx1472_eos, rx1472_fail3534
    substr $S10, rx1472_tgt, rx1472_pos, 2
    ne $S10, ucs4:"--", rx1472_fail3534
    add rx1472_pos, 2
    nqp_rxpeek $I19, rx1472_bstack, rxcap1474_fail3542
    inc $I19
    set $I11, rx1472_bstack[$I19]
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1472_pos)
    rx1472_cstack = rx1472_cur."!cursor_capture"($P11, "sym")
    goto rxcap1474_done3541
  rxcap1474_fail3542:
    goto rx1472_fail3534
  rxcap1474_done3541:
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1472_curclass, "$!pos"
    lt $I11, 0, rx1472_fail3534
    nqp_rxmark rx1472_bstack, rxsubrule1475_pass3543, -1, 0
  rxsubrule1475_pass3543:
    rx1472_cstack = rx1472_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1472_pos, $P11, rx1472_curclass, "$!pos"
    rx1472_cur."!cursor_pass"(rx1472_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1472_cur)
  rx1472_restart3533:
    repr_get_attr_obj rx1472_cstack, rx1472_cur, rx1472_curclass, "$!cstack"
  rx1472_fail3534:
    unless rx1472_bstack, rx1472_done3532
    pop $I19, rx1472_bstack
    if_null rx1472_cstack, rx1472_cstack_done3537
    unless rx1472_cstack, rx1472_cstack_done3537
    dec $I19
    set $P11, rx1472_cstack[$I19]
  rx1472_cstack_done3537:
    pop rx1472_rep, rx1472_bstack
    pop rx1472_pos, rx1472_bstack
    pop $I19, rx1472_bstack
    lt rx1472_pos, -1, rx1472_done3532
    lt rx1472_pos, 0, rx1472_fail3534
    eq $I19, 0, rx1472_fail3534
    nqp_islist $I20, rx1472_cstack
    unless $I20, rx1472_jump3535
    elements $I18, rx1472_bstack
    le $I18, 0, rx1472_cut3536
    dec $I18
    set $I18, rx1472_bstack[$I18]
  rx1472_cut3536:
    assign rx1472_cstack, $I18
  rx1472_jump3535:
    jump $I19
  rx1472_done3532:
    rx1472_cur."!cursor_fail"()
    .return (rx1472_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_183_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1486
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1476_start
    .local string rx1476_tgt
    .local int rx1476_pos
    .local int rx1476_off
    .local int rx1476_eos
    .local int rx1476_rep
    .local pmc rx1476_cur
    .local pmc rx1476_curclass
    .local pmc rx1476_bstack
    .local pmc rx1476_cstack
    rx1476_start = self."!cursor_start_all"()
    set rx1476_cur, rx1476_start[0]
    set rx1476_tgt, rx1476_start[1]
    set rx1476_pos, rx1476_start[2]
    set rx1476_curclass, rx1476_start[3]
    set rx1476_bstack, rx1476_start[4]
    set $I19, rx1476_start[5]
    store_lex unicode:"$\x{a2}", rx1476_cur
    length rx1476_eos, rx1476_tgt
    eq $I19, 1, rx1476_restart3546
    gt rx1476_pos, rx1476_eos, rx1476_fail3547
    repr_get_attr_int $I11, self, rx1476_curclass, "$!from"
    ne $I11, -1, rxscan1477_done3553
    goto rxscan1477_scan3552
  rxscan1477_loop3551:
    inc rx1476_pos
    gt rx1476_pos, rx1476_eos, rx1476_fail3547
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!from", rx1476_pos
  rxscan1477_scan3552:
    nqp_rxmark rx1476_bstack, rxscan1477_loop3551, rx1476_pos, 0
  rxscan1477_done3553:
    nqp_rxmark rx1476_bstack, rxcap1478_fail3555, rx1476_pos, 0
    add $I11, rx1476_pos, 2
    gt $I11, rx1476_eos, rx1476_fail3547
    substr $S10, rx1476_tgt, rx1476_pos, 2
    ne $S10, ucs4:"++", rx1476_fail3547
    add rx1476_pos, 2
    nqp_rxpeek $I19, rx1476_bstack, rxcap1478_fail3555
    inc $I19
    set $I11, rx1476_bstack[$I19]
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1476_pos)
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "sym")
    goto rxcap1478_done3554
  rxcap1478_fail3555:
    goto rx1476_fail3547
  rxcap1478_done3554:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3547
    nqp_rxmark rx1476_bstack, rxsubrule1479_pass3556, -1, 0
  rxsubrule1479_pass3556:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    rx1476_cur."!cursor_pass"(rx1476_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1476_cur)
  rx1476_restart3546:
    repr_get_attr_obj rx1476_cstack, rx1476_cur, rx1476_curclass, "$!cstack"
  rx1476_fail3547:
    unless rx1476_bstack, rx1476_done3545
    pop $I19, rx1476_bstack
    if_null rx1476_cstack, rx1476_cstack_done3550
    unless rx1476_cstack, rx1476_cstack_done3550
    dec $I19
    set $P11, rx1476_cstack[$I19]
  rx1476_cstack_done3550:
    pop rx1476_rep, rx1476_bstack
    pop rx1476_pos, rx1476_bstack
    pop $I19, rx1476_bstack
    lt rx1476_pos, -1, rx1476_done3545
    lt rx1476_pos, 0, rx1476_fail3547
    eq $I19, 0, rx1476_fail3547
    nqp_islist $I20, rx1476_cstack
    unless $I20, rx1476_jump3548
    elements $I18, rx1476_bstack
    le $I18, 0, rx1476_cut3549
    dec $I18
    set $I18, rx1476_bstack[$I18]
  rx1476_cut3549:
    assign rx1476_cstack, $I18
  rx1476_jump3548:
    jump $I19
  rx1476_done3545:
    rx1476_cur."!cursor_fail"()
    .return (rx1476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_184_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1487
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1480_start
    .local string rx1480_tgt
    .local int rx1480_pos
    .local int rx1480_off
    .local int rx1480_eos
    .local int rx1480_rep
    .local pmc rx1480_cur
    .local pmc rx1480_curclass
    .local pmc rx1480_bstack
    .local pmc rx1480_cstack
    rx1480_start = self."!cursor_start_all"()
    set rx1480_cur, rx1480_start[0]
    set rx1480_tgt, rx1480_start[1]
    set rx1480_pos, rx1480_start[2]
    set rx1480_curclass, rx1480_start[3]
    set rx1480_bstack, rx1480_start[4]
    set $I19, rx1480_start[5]
    store_lex unicode:"$\x{a2}", rx1480_cur
    length rx1480_eos, rx1480_tgt
    eq $I19, 1, rx1480_restart3559
    gt rx1480_pos, rx1480_eos, rx1480_fail3560
    repr_get_attr_int $I11, self, rx1480_curclass, "$!from"
    ne $I11, -1, rxscan1481_done3566
    goto rxscan1481_scan3565
  rxscan1481_loop3564:
    inc rx1480_pos
    gt rx1480_pos, rx1480_eos, rx1480_fail3560
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!from", rx1480_pos
  rxscan1481_scan3565:
    nqp_rxmark rx1480_bstack, rxscan1481_loop3564, rx1480_pos, 0
  rxscan1481_done3566:
    nqp_rxmark rx1480_bstack, rxcap1482_fail3568, rx1480_pos, 0
    add $I11, rx1480_pos, 2
    gt $I11, rx1480_eos, rx1480_fail3560
    substr $S10, rx1480_tgt, rx1480_pos, 2
    ne $S10, ucs4:"--", rx1480_fail3560
    add rx1480_pos, 2
    nqp_rxpeek $I19, rx1480_bstack, rxcap1482_fail3568
    inc $I19
    set $I11, rx1480_bstack[$I19]
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1480_pos)
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "sym")
    goto rxcap1482_done3567
  rxcap1482_fail3568:
    goto rx1480_fail3560
  rxcap1482_done3567:
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1480_curclass, "$!pos"
    lt $I11, 0, rx1480_fail3560
    nqp_rxmark rx1480_bstack, rxsubrule1483_pass3569, -1, 0
  rxsubrule1483_pass3569:
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1480_pos, $P11, rx1480_curclass, "$!pos"
    rx1480_cur."!cursor_pass"(rx1480_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1480_cur)
  rx1480_restart3559:
    repr_get_attr_obj rx1480_cstack, rx1480_cur, rx1480_curclass, "$!cstack"
  rx1480_fail3560:
    unless rx1480_bstack, rx1480_done3558
    pop $I19, rx1480_bstack
    if_null rx1480_cstack, rx1480_cstack_done3563
    unless rx1480_cstack, rx1480_cstack_done3563
    dec $I19
    set $P11, rx1480_cstack[$I19]
  rx1480_cstack_done3563:
    pop rx1480_rep, rx1480_bstack
    pop rx1480_pos, rx1480_bstack
    pop $I19, rx1480_bstack
    lt rx1480_pos, -1, rx1480_done3558
    lt rx1480_pos, 0, rx1480_fail3560
    eq $I19, 0, rx1480_fail3560
    nqp_islist $I20, rx1480_cstack
    unless $I20, rx1480_jump3561
    elements $I18, rx1480_bstack
    le $I18, 0, rx1480_cut3562
    dec $I18
    set $I18, rx1480_bstack[$I18]
  rx1480_cut3562:
    assign rx1480_cstack, $I18
  rx1480_jump3561:
    jump $I19
  rx1480_done3558:
    rx1480_cur."!cursor_fail"()
    .return (rx1480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_185_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1489
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1484_start
    .local string rx1484_tgt
    .local int rx1484_pos
    .local int rx1484_off
    .local int rx1484_eos
    .local int rx1484_rep
    .local pmc rx1484_cur
    .local pmc rx1484_curclass
    .local pmc rx1484_bstack
    .local pmc rx1484_cstack
    rx1484_start = self."!cursor_start_all"()
    set rx1484_cur, rx1484_start[0]
    set rx1484_tgt, rx1484_start[1]
    set rx1484_pos, rx1484_start[2]
    set rx1484_curclass, rx1484_start[3]
    set rx1484_bstack, rx1484_start[4]
    set $I19, rx1484_start[5]
    store_lex unicode:"$\x{a2}", rx1484_cur
    length rx1484_eos, rx1484_tgt
    eq $I19, 1, rx1484_restart3572
    gt rx1484_pos, rx1484_eos, rx1484_fail3573
    repr_get_attr_int $I11, self, rx1484_curclass, "$!from"
    ne $I11, -1, rxscan1485_done3579
    goto rxscan1485_scan3578
  rxscan1485_loop3577:
    inc rx1484_pos
    gt rx1484_pos, rx1484_eos, rx1484_fail3573
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!from", rx1484_pos
  rxscan1485_scan3578:
    nqp_rxmark rx1484_bstack, rxscan1485_loop3577, rx1484_pos, 0
  rxscan1485_done3579:
    nqp_rxmark rx1484_bstack, rxcap1486_fail3581, rx1484_pos, 0
    add $I11, rx1484_pos, 2
    gt $I11, rx1484_eos, rx1484_fail3573
    substr $S10, rx1484_tgt, rx1484_pos, 2
    ne $S10, ucs4:"**", rx1484_fail3573
    add rx1484_pos, 2
    nqp_rxpeek $I19, rx1484_bstack, rxcap1486_fail3581
    inc $I19
    set $I11, rx1484_bstack[$I19]
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1484_pos)
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "sym")
    goto rxcap1486_done3580
  rxcap1486_fail3581:
    goto rx1484_fail3573
  rxcap1486_done3580:
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1484_curclass, "$!pos"
    lt $I11, 0, rx1484_fail3573
    nqp_rxmark rx1484_bstack, rxsubrule1487_pass3582, -1, 0
  rxsubrule1487_pass3582:
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1484_pos, $P11, rx1484_curclass, "$!pos"
    rx1484_cur."!cursor_pass"(rx1484_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1484_cur)
  rx1484_restart3572:
    repr_get_attr_obj rx1484_cstack, rx1484_cur, rx1484_curclass, "$!cstack"
  rx1484_fail3573:
    unless rx1484_bstack, rx1484_done3571
    pop $I19, rx1484_bstack
    if_null rx1484_cstack, rx1484_cstack_done3576
    unless rx1484_cstack, rx1484_cstack_done3576
    dec $I19
    set $P11, rx1484_cstack[$I19]
  rx1484_cstack_done3576:
    pop rx1484_rep, rx1484_bstack
    pop rx1484_pos, rx1484_bstack
    pop $I19, rx1484_bstack
    lt rx1484_pos, -1, rx1484_done3571
    lt rx1484_pos, 0, rx1484_fail3573
    eq $I19, 0, rx1484_fail3573
    nqp_islist $I20, rx1484_cstack
    unless $I20, rx1484_jump3574
    elements $I18, rx1484_bstack
    le $I18, 0, rx1484_cut3575
    dec $I18
    set $I18, rx1484_bstack[$I18]
  rx1484_cut3575:
    assign rx1484_cstack, $I18
  rx1484_jump3574:
    jump $I19
  rx1484_done3571:
    rx1484_cur."!cursor_fail"()
    .return (rx1484_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_186_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1491
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1488_start
    .local string rx1488_tgt
    .local int rx1488_pos
    .local int rx1488_off
    .local int rx1488_eos
    .local int rx1488_rep
    .local pmc rx1488_cur
    .local pmc rx1488_curclass
    .local pmc rx1488_bstack
    .local pmc rx1488_cstack
    rx1488_start = self."!cursor_start_all"()
    set rx1488_cur, rx1488_start[0]
    set rx1488_tgt, rx1488_start[1]
    set rx1488_pos, rx1488_start[2]
    set rx1488_curclass, rx1488_start[3]
    set rx1488_bstack, rx1488_start[4]
    set $I19, rx1488_start[5]
    store_lex unicode:"$\x{a2}", rx1488_cur
    length rx1488_eos, rx1488_tgt
    eq $I19, 1, rx1488_restart3585
    gt rx1488_pos, rx1488_eos, rx1488_fail3586
    repr_get_attr_int $I11, self, rx1488_curclass, "$!from"
    ne $I11, -1, rxscan1489_done3592
    goto rxscan1489_scan3591
  rxscan1489_loop3590:
    inc rx1488_pos
    gt rx1488_pos, rx1488_eos, rx1488_fail3586
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!from", rx1488_pos
  rxscan1489_scan3591:
    nqp_rxmark rx1488_bstack, rxscan1489_loop3590, rx1488_pos, 0
  rxscan1489_done3592:
    nqp_rxmark rx1488_bstack, rxcap1490_fail3594, rx1488_pos, 0
    add $I11, rx1488_pos, 1
    gt $I11, rx1488_eos, rx1488_fail3586
    substr $S10, rx1488_tgt, rx1488_pos, 1
    ne $S10, ucs4:"+", rx1488_fail3586
    add rx1488_pos, 1
    nqp_rxpeek $I19, rx1488_bstack, rxcap1490_fail3594
    inc $I19
    set $I11, rx1488_bstack[$I19]
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1488_pos)
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "sym")
    goto rxcap1490_done3593
  rxcap1490_fail3594:
    goto rx1488_fail3586
  rxcap1490_done3593:
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1488_curclass, "$!pos"
    lt $I11, 0, rx1488_fail3586
    nqp_rxmark rx1488_bstack, rxsubrule1491_pass3595, -1, 0
  rxsubrule1491_pass3595:
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1488_pos, $P11, rx1488_curclass, "$!pos"
    rx1488_cur."!cursor_pass"(rx1488_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1488_cur)
  rx1488_restart3585:
    repr_get_attr_obj rx1488_cstack, rx1488_cur, rx1488_curclass, "$!cstack"
  rx1488_fail3586:
    unless rx1488_bstack, rx1488_done3584
    pop $I19, rx1488_bstack
    if_null rx1488_cstack, rx1488_cstack_done3589
    unless rx1488_cstack, rx1488_cstack_done3589
    dec $I19
    set $P11, rx1488_cstack[$I19]
  rx1488_cstack_done3589:
    pop rx1488_rep, rx1488_bstack
    pop rx1488_pos, rx1488_bstack
    pop $I19, rx1488_bstack
    lt rx1488_pos, -1, rx1488_done3584
    lt rx1488_pos, 0, rx1488_fail3586
    eq $I19, 0, rx1488_fail3586
    nqp_islist $I20, rx1488_cstack
    unless $I20, rx1488_jump3587
    elements $I18, rx1488_bstack
    le $I18, 0, rx1488_cut3588
    dec $I18
    set $I18, rx1488_bstack[$I18]
  rx1488_cut3588:
    assign rx1488_cstack, $I18
  rx1488_jump3587:
    jump $I19
  rx1488_done3584:
    rx1488_cur."!cursor_fail"()
    .return (rx1488_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_187_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1492
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1492_start
    .local string rx1492_tgt
    .local int rx1492_pos
    .local int rx1492_off
    .local int rx1492_eos
    .local int rx1492_rep
    .local pmc rx1492_cur
    .local pmc rx1492_curclass
    .local pmc rx1492_bstack
    .local pmc rx1492_cstack
    rx1492_start = self."!cursor_start_all"()
    set rx1492_cur, rx1492_start[0]
    set rx1492_tgt, rx1492_start[1]
    set rx1492_pos, rx1492_start[2]
    set rx1492_curclass, rx1492_start[3]
    set rx1492_bstack, rx1492_start[4]
    set $I19, rx1492_start[5]
    store_lex unicode:"$\x{a2}", rx1492_cur
    length rx1492_eos, rx1492_tgt
    eq $I19, 1, rx1492_restart3598
    gt rx1492_pos, rx1492_eos, rx1492_fail3599
    repr_get_attr_int $I11, self, rx1492_curclass, "$!from"
    ne $I11, -1, rxscan1493_done3605
    goto rxscan1493_scan3604
  rxscan1493_loop3603:
    inc rx1492_pos
    gt rx1492_pos, rx1492_eos, rx1492_fail3599
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!from", rx1492_pos
  rxscan1493_scan3604:
    nqp_rxmark rx1492_bstack, rxscan1493_loop3603, rx1492_pos, 0
  rxscan1493_done3605:
    nqp_rxmark rx1492_bstack, rxcap1494_fail3607, rx1492_pos, 0
    add $I11, rx1492_pos, 1
    gt $I11, rx1492_eos, rx1492_fail3599
    substr $S10, rx1492_tgt, rx1492_pos, 1
    ne $S10, ucs4:"~", rx1492_fail3599
    add rx1492_pos, 1
    nqp_rxpeek $I19, rx1492_bstack, rxcap1494_fail3607
    inc $I19
    set $I11, rx1492_bstack[$I19]
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1492_pos)
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "sym")
    goto rxcap1494_done3606
  rxcap1494_fail3607:
    goto rx1492_fail3599
  rxcap1494_done3606:
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1492_curclass, "$!pos"
    lt $I11, 0, rx1492_fail3599
    nqp_rxmark rx1492_bstack, rxsubrule1495_pass3608, -1, 0
  rxsubrule1495_pass3608:
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1492_pos, $P11, rx1492_curclass, "$!pos"
    rx1492_cur."!cursor_pass"(rx1492_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1492_cur)
  rx1492_restart3598:
    repr_get_attr_obj rx1492_cstack, rx1492_cur, rx1492_curclass, "$!cstack"
  rx1492_fail3599:
    unless rx1492_bstack, rx1492_done3597
    pop $I19, rx1492_bstack
    if_null rx1492_cstack, rx1492_cstack_done3602
    unless rx1492_cstack, rx1492_cstack_done3602
    dec $I19
    set $P11, rx1492_cstack[$I19]
  rx1492_cstack_done3602:
    pop rx1492_rep, rx1492_bstack
    pop rx1492_pos, rx1492_bstack
    pop $I19, rx1492_bstack
    lt rx1492_pos, -1, rx1492_done3597
    lt rx1492_pos, 0, rx1492_fail3599
    eq $I19, 0, rx1492_fail3599
    nqp_islist $I20, rx1492_cstack
    unless $I20, rx1492_jump3600
    elements $I18, rx1492_bstack
    le $I18, 0, rx1492_cut3601
    dec $I18
    set $I18, rx1492_bstack[$I18]
  rx1492_cut3601:
    assign rx1492_cstack, $I18
  rx1492_jump3600:
    jump $I19
  rx1492_done3597:
    rx1492_cur."!cursor_fail"()
    .return (rx1492_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_188_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1493
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1496_start
    .local string rx1496_tgt
    .local int rx1496_pos
    .local int rx1496_off
    .local int rx1496_eos
    .local int rx1496_rep
    .local pmc rx1496_cur
    .local pmc rx1496_curclass
    .local pmc rx1496_bstack
    .local pmc rx1496_cstack
    rx1496_start = self."!cursor_start_all"()
    set rx1496_cur, rx1496_start[0]
    set rx1496_tgt, rx1496_start[1]
    set rx1496_pos, rx1496_start[2]
    set rx1496_curclass, rx1496_start[3]
    set rx1496_bstack, rx1496_start[4]
    set $I19, rx1496_start[5]
    store_lex unicode:"$\x{a2}", rx1496_cur
    length rx1496_eos, rx1496_tgt
    eq $I19, 1, rx1496_restart3611
    gt rx1496_pos, rx1496_eos, rx1496_fail3612
    repr_get_attr_int $I11, self, rx1496_curclass, "$!from"
    ne $I11, -1, rxscan1497_done3618
    goto rxscan1497_scan3617
  rxscan1497_loop3616:
    inc rx1496_pos
    gt rx1496_pos, rx1496_eos, rx1496_fail3612
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!from", rx1496_pos
  rxscan1497_scan3617:
    nqp_rxmark rx1496_bstack, rxscan1497_loop3616, rx1496_pos, 0
  rxscan1497_done3618:
    nqp_rxmark rx1496_bstack, rxcap1498_fail3620, rx1496_pos, 0
    add $I11, rx1496_pos, 1
    gt $I11, rx1496_eos, rx1496_fail3612
    substr $S10, rx1496_tgt, rx1496_pos, 1
    ne $S10, ucs4:"-", rx1496_fail3612
    add rx1496_pos, 1
    nqp_rxpeek $I19, rx1496_bstack, rxcap1498_fail3620
    inc $I19
    set $I11, rx1496_bstack[$I19]
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1496_pos)
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "sym")
    goto rxcap1498_done3619
  rxcap1498_fail3620:
    goto rx1496_fail3612
  rxcap1498_done3619:
    ge rx1496_pos, rx1496_eos, rx1496_fail3612
    substr $S11, rx1496_tgt, rx1496_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1496_fail3612
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."number"()
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    ge $I11, 0, rx1496_fail3612
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    lt $I11, 0, rx1496_fail3612
    nqp_rxmark rx1496_bstack, rxsubrule1499_pass3621, -1, 0
  rxsubrule1499_pass3621:
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1496_pos, $P11, rx1496_curclass, "$!pos"
    rx1496_cur."!cursor_pass"(rx1496_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1496_cur)
  rx1496_restart3611:
    repr_get_attr_obj rx1496_cstack, rx1496_cur, rx1496_curclass, "$!cstack"
  rx1496_fail3612:
    unless rx1496_bstack, rx1496_done3610
    pop $I19, rx1496_bstack
    if_null rx1496_cstack, rx1496_cstack_done3615
    unless rx1496_cstack, rx1496_cstack_done3615
    dec $I19
    set $P11, rx1496_cstack[$I19]
  rx1496_cstack_done3615:
    pop rx1496_rep, rx1496_bstack
    pop rx1496_pos, rx1496_bstack
    pop $I19, rx1496_bstack
    lt rx1496_pos, -1, rx1496_done3610
    lt rx1496_pos, 0, rx1496_fail3612
    eq $I19, 0, rx1496_fail3612
    nqp_islist $I20, rx1496_cstack
    unless $I20, rx1496_jump3613
    elements $I18, rx1496_bstack
    le $I18, 0, rx1496_cut3614
    dec $I18
    set $I18, rx1496_bstack[$I18]
  rx1496_cut3614:
    assign rx1496_cstack, $I18
  rx1496_jump3613:
    jump $I19
  rx1496_done3610:
    rx1496_cur."!cursor_fail"()
    .return (rx1496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_189_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1494
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1500_start
    .local string rx1500_tgt
    .local int rx1500_pos
    .local int rx1500_off
    .local int rx1500_eos
    .local int rx1500_rep
    .local pmc rx1500_cur
    .local pmc rx1500_curclass
    .local pmc rx1500_bstack
    .local pmc rx1500_cstack
    rx1500_start = self."!cursor_start_all"()
    set rx1500_cur, rx1500_start[0]
    set rx1500_tgt, rx1500_start[1]
    set rx1500_pos, rx1500_start[2]
    set rx1500_curclass, rx1500_start[3]
    set rx1500_bstack, rx1500_start[4]
    set $I19, rx1500_start[5]
    store_lex unicode:"$\x{a2}", rx1500_cur
    length rx1500_eos, rx1500_tgt
    eq $I19, 1, rx1500_restart3624
    gt rx1500_pos, rx1500_eos, rx1500_fail3625
    repr_get_attr_int $I11, self, rx1500_curclass, "$!from"
    ne $I11, -1, rxscan1501_done3631
    goto rxscan1501_scan3630
  rxscan1501_loop3629:
    inc rx1500_pos
    gt rx1500_pos, rx1500_eos, rx1500_fail3625
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!from", rx1500_pos
  rxscan1501_scan3630:
    nqp_rxmark rx1500_bstack, rxscan1501_loop3629, rx1500_pos, 0
  rxscan1501_done3631:
    nqp_rxmark rx1500_bstack, rxcap1502_fail3633, rx1500_pos, 0
    add $I11, rx1500_pos, 1
    gt $I11, rx1500_eos, rx1500_fail3625
    substr $S10, rx1500_tgt, rx1500_pos, 1
    ne $S10, ucs4:"?", rx1500_fail3625
    add rx1500_pos, 1
    nqp_rxpeek $I19, rx1500_bstack, rxcap1502_fail3633
    inc $I19
    set $I11, rx1500_bstack[$I19]
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1500_pos)
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "sym")
    goto rxcap1502_done3632
  rxcap1502_fail3633:
    goto rx1500_fail3625
  rxcap1502_done3632:
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1500_curclass, "$!pos"
    lt $I11, 0, rx1500_fail3625
    nqp_rxmark rx1500_bstack, rxsubrule1503_pass3634, -1, 0
  rxsubrule1503_pass3634:
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1500_pos, $P11, rx1500_curclass, "$!pos"
    rx1500_cur."!cursor_pass"(rx1500_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1500_cur)
  rx1500_restart3624:
    repr_get_attr_obj rx1500_cstack, rx1500_cur, rx1500_curclass, "$!cstack"
  rx1500_fail3625:
    unless rx1500_bstack, rx1500_done3623
    pop $I19, rx1500_bstack
    if_null rx1500_cstack, rx1500_cstack_done3628
    unless rx1500_cstack, rx1500_cstack_done3628
    dec $I19
    set $P11, rx1500_cstack[$I19]
  rx1500_cstack_done3628:
    pop rx1500_rep, rx1500_bstack
    pop rx1500_pos, rx1500_bstack
    pop $I19, rx1500_bstack
    lt rx1500_pos, -1, rx1500_done3623
    lt rx1500_pos, 0, rx1500_fail3625
    eq $I19, 0, rx1500_fail3625
    nqp_islist $I20, rx1500_cstack
    unless $I20, rx1500_jump3626
    elements $I18, rx1500_bstack
    le $I18, 0, rx1500_cut3627
    dec $I18
    set $I18, rx1500_bstack[$I18]
  rx1500_cut3627:
    assign rx1500_cstack, $I18
  rx1500_jump3626:
    jump $I19
  rx1500_done3623:
    rx1500_cur."!cursor_fail"()
    .return (rx1500_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_190_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1495
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1504_start
    .local string rx1504_tgt
    .local int rx1504_pos
    .local int rx1504_off
    .local int rx1504_eos
    .local int rx1504_rep
    .local pmc rx1504_cur
    .local pmc rx1504_curclass
    .local pmc rx1504_bstack
    .local pmc rx1504_cstack
    rx1504_start = self."!cursor_start_all"()
    set rx1504_cur, rx1504_start[0]
    set rx1504_tgt, rx1504_start[1]
    set rx1504_pos, rx1504_start[2]
    set rx1504_curclass, rx1504_start[3]
    set rx1504_bstack, rx1504_start[4]
    set $I19, rx1504_start[5]
    store_lex unicode:"$\x{a2}", rx1504_cur
    length rx1504_eos, rx1504_tgt
    eq $I19, 1, rx1504_restart3637
    gt rx1504_pos, rx1504_eos, rx1504_fail3638
    repr_get_attr_int $I11, self, rx1504_curclass, "$!from"
    ne $I11, -1, rxscan1505_done3644
    goto rxscan1505_scan3643
  rxscan1505_loop3642:
    inc rx1504_pos
    gt rx1504_pos, rx1504_eos, rx1504_fail3638
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!from", rx1504_pos
  rxscan1505_scan3643:
    nqp_rxmark rx1504_bstack, rxscan1505_loop3642, rx1504_pos, 0
  rxscan1505_done3644:
    nqp_rxmark rx1504_bstack, rxcap1506_fail3646, rx1504_pos, 0
    add $I11, rx1504_pos, 1
    gt $I11, rx1504_eos, rx1504_fail3638
    substr $S10, rx1504_tgt, rx1504_pos, 1
    ne $S10, ucs4:"!", rx1504_fail3638
    add rx1504_pos, 1
    nqp_rxpeek $I19, rx1504_bstack, rxcap1506_fail3646
    inc $I19
    set $I11, rx1504_bstack[$I19]
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1504_pos)
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "sym")
    goto rxcap1506_done3645
  rxcap1506_fail3646:
    goto rx1504_fail3638
  rxcap1506_done3645:
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1504_curclass, "$!pos"
    lt $I11, 0, rx1504_fail3638
    nqp_rxmark rx1504_bstack, rxsubrule1507_pass3647, -1, 0
  rxsubrule1507_pass3647:
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1504_pos, $P11, rx1504_curclass, "$!pos"
    rx1504_cur."!cursor_pass"(rx1504_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1504_cur)
  rx1504_restart3637:
    repr_get_attr_obj rx1504_cstack, rx1504_cur, rx1504_curclass, "$!cstack"
  rx1504_fail3638:
    unless rx1504_bstack, rx1504_done3636
    pop $I19, rx1504_bstack
    if_null rx1504_cstack, rx1504_cstack_done3641
    unless rx1504_cstack, rx1504_cstack_done3641
    dec $I19
    set $P11, rx1504_cstack[$I19]
  rx1504_cstack_done3641:
    pop rx1504_rep, rx1504_bstack
    pop rx1504_pos, rx1504_bstack
    pop $I19, rx1504_bstack
    lt rx1504_pos, -1, rx1504_done3636
    lt rx1504_pos, 0, rx1504_fail3638
    eq $I19, 0, rx1504_fail3638
    nqp_islist $I20, rx1504_cstack
    unless $I20, rx1504_jump3639
    elements $I18, rx1504_bstack
    le $I18, 0, rx1504_cut3640
    dec $I18
    set $I18, rx1504_bstack[$I18]
  rx1504_cut3640:
    assign rx1504_cstack, $I18
  rx1504_jump3639:
    jump $I19
  rx1504_done3636:
    rx1504_cur."!cursor_fail"()
    .return (rx1504_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_191_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1496
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1508_start
    .local string rx1508_tgt
    .local int rx1508_pos
    .local int rx1508_off
    .local int rx1508_eos
    .local int rx1508_rep
    .local pmc rx1508_cur
    .local pmc rx1508_curclass
    .local pmc rx1508_bstack
    .local pmc rx1508_cstack
    rx1508_start = self."!cursor_start_all"()
    set rx1508_cur, rx1508_start[0]
    set rx1508_tgt, rx1508_start[1]
    set rx1508_pos, rx1508_start[2]
    set rx1508_curclass, rx1508_start[3]
    set rx1508_bstack, rx1508_start[4]
    set $I19, rx1508_start[5]
    store_lex unicode:"$\x{a2}", rx1508_cur
    length rx1508_eos, rx1508_tgt
    eq $I19, 1, rx1508_restart3650
    gt rx1508_pos, rx1508_eos, rx1508_fail3651
    repr_get_attr_int $I11, self, rx1508_curclass, "$!from"
    ne $I11, -1, rxscan1509_done3657
    goto rxscan1509_scan3656
  rxscan1509_loop3655:
    inc rx1508_pos
    gt rx1508_pos, rx1508_eos, rx1508_fail3651
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!from", rx1508_pos
  rxscan1509_scan3656:
    nqp_rxmark rx1508_bstack, rxscan1509_loop3655, rx1508_pos, 0
  rxscan1509_done3657:
    nqp_rxmark rx1508_bstack, rxcap1510_fail3659, rx1508_pos, 0
    add $I11, rx1508_pos, 1
    gt $I11, rx1508_eos, rx1508_fail3651
    substr $S10, rx1508_tgt, rx1508_pos, 1
    ne $S10, ucs4:"|", rx1508_fail3651
    add rx1508_pos, 1
    nqp_rxpeek $I19, rx1508_bstack, rxcap1510_fail3659
    inc $I19
    set $I11, rx1508_bstack[$I19]
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1508_pos)
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "sym")
    goto rxcap1510_done3658
  rxcap1510_fail3659:
    goto rx1508_fail3651
  rxcap1510_done3658:
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1508_curclass, "$!pos"
    lt $I11, 0, rx1508_fail3651
    nqp_rxmark rx1508_bstack, rxsubrule1511_pass3660, -1, 0
  rxsubrule1511_pass3660:
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1508_pos, $P11, rx1508_curclass, "$!pos"
    rx1508_cur."!cursor_pass"(rx1508_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1508_cur)
  rx1508_restart3650:
    repr_get_attr_obj rx1508_cstack, rx1508_cur, rx1508_curclass, "$!cstack"
  rx1508_fail3651:
    unless rx1508_bstack, rx1508_done3649
    pop $I19, rx1508_bstack
    if_null rx1508_cstack, rx1508_cstack_done3654
    unless rx1508_cstack, rx1508_cstack_done3654
    dec $I19
    set $P11, rx1508_cstack[$I19]
  rx1508_cstack_done3654:
    pop rx1508_rep, rx1508_bstack
    pop rx1508_pos, rx1508_bstack
    pop $I19, rx1508_bstack
    lt rx1508_pos, -1, rx1508_done3649
    lt rx1508_pos, 0, rx1508_fail3651
    eq $I19, 0, rx1508_fail3651
    nqp_islist $I20, rx1508_cstack
    unless $I20, rx1508_jump3652
    elements $I18, rx1508_bstack
    le $I18, 0, rx1508_cut3653
    dec $I18
    set $I18, rx1508_bstack[$I18]
  rx1508_cut3653:
    assign rx1508_cstack, $I18
  rx1508_jump3652:
    jump $I19
  rx1508_done3649:
    rx1508_cur."!cursor_fail"()
    .return (rx1508_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_192_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1498
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1512_start
    .local string rx1512_tgt
    .local int rx1512_pos
    .local int rx1512_off
    .local int rx1512_eos
    .local int rx1512_rep
    .local pmc rx1512_cur
    .local pmc rx1512_curclass
    .local pmc rx1512_bstack
    .local pmc rx1512_cstack
    rx1512_start = self."!cursor_start_all"()
    set rx1512_cur, rx1512_start[0]
    set rx1512_tgt, rx1512_start[1]
    set rx1512_pos, rx1512_start[2]
    set rx1512_curclass, rx1512_start[3]
    set rx1512_bstack, rx1512_start[4]
    set $I19, rx1512_start[5]
    store_lex unicode:"$\x{a2}", rx1512_cur
    length rx1512_eos, rx1512_tgt
    eq $I19, 1, rx1512_restart3663
    gt rx1512_pos, rx1512_eos, rx1512_fail3664
    repr_get_attr_int $I11, self, rx1512_curclass, "$!from"
    ne $I11, -1, rxscan1513_done3670
    goto rxscan1513_scan3669
  rxscan1513_loop3668:
    inc rx1512_pos
    gt rx1512_pos, rx1512_eos, rx1512_fail3664
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!from", rx1512_pos
  rxscan1513_scan3669:
    nqp_rxmark rx1512_bstack, rxscan1513_loop3668, rx1512_pos, 0
  rxscan1513_done3670:
    nqp_rxmark rx1512_bstack, rxcap1514_fail3672, rx1512_pos, 0
    add $I11, rx1512_pos, 1
    gt $I11, rx1512_eos, rx1512_fail3664
    substr $S10, rx1512_tgt, rx1512_pos, 1
    ne $S10, ucs4:"*", rx1512_fail3664
    add rx1512_pos, 1
    nqp_rxpeek $I19, rx1512_bstack, rxcap1514_fail3672
    inc $I19
    set $I11, rx1512_bstack[$I19]
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1512_pos)
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "sym")
    goto rxcap1514_done3671
  rxcap1514_fail3672:
    goto rx1512_fail3664
  rxcap1514_done3671:
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    lt $I11, 0, rx1512_fail3664
    nqp_rxmark rx1512_bstack, rxsubrule1515_pass3673, -1, 0
  rxsubrule1515_pass3673:
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1512_pos, $P11, rx1512_curclass, "$!pos"
    rx1512_cur."!cursor_pass"(rx1512_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1512_cur)
  rx1512_restart3663:
    repr_get_attr_obj rx1512_cstack, rx1512_cur, rx1512_curclass, "$!cstack"
  rx1512_fail3664:
    unless rx1512_bstack, rx1512_done3662
    pop $I19, rx1512_bstack
    if_null rx1512_cstack, rx1512_cstack_done3667
    unless rx1512_cstack, rx1512_cstack_done3667
    dec $I19
    set $P11, rx1512_cstack[$I19]
  rx1512_cstack_done3667:
    pop rx1512_rep, rx1512_bstack
    pop rx1512_pos, rx1512_bstack
    pop $I19, rx1512_bstack
    lt rx1512_pos, -1, rx1512_done3662
    lt rx1512_pos, 0, rx1512_fail3664
    eq $I19, 0, rx1512_fail3664
    nqp_islist $I20, rx1512_cstack
    unless $I20, rx1512_jump3665
    elements $I18, rx1512_bstack
    le $I18, 0, rx1512_cut3666
    dec $I18
    set $I18, rx1512_bstack[$I18]
  rx1512_cut3666:
    assign rx1512_cstack, $I18
  rx1512_jump3665:
    jump $I19
  rx1512_done3662:
    rx1512_cur."!cursor_fail"()
    .return (rx1512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_193_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1499
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1516_start
    .local string rx1516_tgt
    .local int rx1516_pos
    .local int rx1516_off
    .local int rx1516_eos
    .local int rx1516_rep
    .local pmc rx1516_cur
    .local pmc rx1516_curclass
    .local pmc rx1516_bstack
    .local pmc rx1516_cstack
    rx1516_start = self."!cursor_start_all"()
    set rx1516_cur, rx1516_start[0]
    set rx1516_tgt, rx1516_start[1]
    set rx1516_pos, rx1516_start[2]
    set rx1516_curclass, rx1516_start[3]
    set rx1516_bstack, rx1516_start[4]
    set $I19, rx1516_start[5]
    store_lex unicode:"$\x{a2}", rx1516_cur
    length rx1516_eos, rx1516_tgt
    eq $I19, 1, rx1516_restart3676
    gt rx1516_pos, rx1516_eos, rx1516_fail3677
    repr_get_attr_int $I11, self, rx1516_curclass, "$!from"
    ne $I11, -1, rxscan1517_done3683
    goto rxscan1517_scan3682
  rxscan1517_loop3681:
    inc rx1516_pos
    gt rx1516_pos, rx1516_eos, rx1516_fail3677
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!from", rx1516_pos
  rxscan1517_scan3682:
    nqp_rxmark rx1516_bstack, rxscan1517_loop3681, rx1516_pos, 0
  rxscan1517_done3683:
    nqp_rxmark rx1516_bstack, rxcap1518_fail3685, rx1516_pos, 0
    add $I11, rx1516_pos, 1
    gt $I11, rx1516_eos, rx1516_fail3677
    substr $S10, rx1516_tgt, rx1516_pos, 1
    ne $S10, ucs4:"/", rx1516_fail3677
    add rx1516_pos, 1
    nqp_rxpeek $I19, rx1516_bstack, rxcap1518_fail3685
    inc $I19
    set $I11, rx1516_bstack[$I19]
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1516_pos)
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "sym")
    goto rxcap1518_done3684
  rxcap1518_fail3685:
    goto rx1516_fail3677
  rxcap1518_done3684:
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1516_curclass, "$!pos"
    lt $I11, 0, rx1516_fail3677
    nqp_rxmark rx1516_bstack, rxsubrule1519_pass3686, -1, 0
  rxsubrule1519_pass3686:
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1516_pos, $P11, rx1516_curclass, "$!pos"
    rx1516_cur."!cursor_pass"(rx1516_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1516_cur)
  rx1516_restart3676:
    repr_get_attr_obj rx1516_cstack, rx1516_cur, rx1516_curclass, "$!cstack"
  rx1516_fail3677:
    unless rx1516_bstack, rx1516_done3675
    pop $I19, rx1516_bstack
    if_null rx1516_cstack, rx1516_cstack_done3680
    unless rx1516_cstack, rx1516_cstack_done3680
    dec $I19
    set $P11, rx1516_cstack[$I19]
  rx1516_cstack_done3680:
    pop rx1516_rep, rx1516_bstack
    pop rx1516_pos, rx1516_bstack
    pop $I19, rx1516_bstack
    lt rx1516_pos, -1, rx1516_done3675
    lt rx1516_pos, 0, rx1516_fail3677
    eq $I19, 0, rx1516_fail3677
    nqp_islist $I20, rx1516_cstack
    unless $I20, rx1516_jump3678
    elements $I18, rx1516_bstack
    le $I18, 0, rx1516_cut3679
    dec $I18
    set $I18, rx1516_bstack[$I18]
  rx1516_cut3679:
    assign rx1516_cstack, $I18
  rx1516_jump3678:
    jump $I19
  rx1516_done3675:
    rx1516_cur."!cursor_fail"()
    .return (rx1516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_194_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1500
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1520_start
    .local string rx1520_tgt
    .local int rx1520_pos
    .local int rx1520_off
    .local int rx1520_eos
    .local int rx1520_rep
    .local pmc rx1520_cur
    .local pmc rx1520_curclass
    .local pmc rx1520_bstack
    .local pmc rx1520_cstack
    rx1520_start = self."!cursor_start_all"()
    set rx1520_cur, rx1520_start[0]
    set rx1520_tgt, rx1520_start[1]
    set rx1520_pos, rx1520_start[2]
    set rx1520_curclass, rx1520_start[3]
    set rx1520_bstack, rx1520_start[4]
    set $I19, rx1520_start[5]
    store_lex unicode:"$\x{a2}", rx1520_cur
    length rx1520_eos, rx1520_tgt
    eq $I19, 1, rx1520_restart3689
    gt rx1520_pos, rx1520_eos, rx1520_fail3690
    repr_get_attr_int $I11, self, rx1520_curclass, "$!from"
    ne $I11, -1, rxscan1521_done3696
    goto rxscan1521_scan3695
  rxscan1521_loop3694:
    inc rx1520_pos
    gt rx1520_pos, rx1520_eos, rx1520_fail3690
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!from", rx1520_pos
  rxscan1521_scan3695:
    nqp_rxmark rx1520_bstack, rxscan1521_loop3694, rx1520_pos, 0
  rxscan1521_done3696:
    nqp_rxmark rx1520_bstack, rxcap1522_fail3698, rx1520_pos, 0
    add $I11, rx1520_pos, 1
    gt $I11, rx1520_eos, rx1520_fail3690
    substr $S10, rx1520_tgt, rx1520_pos, 1
    ne $S10, ucs4:"%", rx1520_fail3690
    add rx1520_pos, 1
    nqp_rxpeek $I19, rx1520_bstack, rxcap1522_fail3698
    inc $I19
    set $I11, rx1520_bstack[$I19]
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1520_pos)
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "sym")
    goto rxcap1522_done3697
  rxcap1522_fail3698:
    goto rx1520_fail3690
  rxcap1522_done3697:
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1520_curclass, "$!pos"
    lt $I11, 0, rx1520_fail3690
    nqp_rxmark rx1520_bstack, rxsubrule1523_pass3699, -1, 0
  rxsubrule1523_pass3699:
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1520_pos, $P11, rx1520_curclass, "$!pos"
    rx1520_cur."!cursor_pass"(rx1520_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1520_cur)
  rx1520_restart3689:
    repr_get_attr_obj rx1520_cstack, rx1520_cur, rx1520_curclass, "$!cstack"
  rx1520_fail3690:
    unless rx1520_bstack, rx1520_done3688
    pop $I19, rx1520_bstack
    if_null rx1520_cstack, rx1520_cstack_done3693
    unless rx1520_cstack, rx1520_cstack_done3693
    dec $I19
    set $P11, rx1520_cstack[$I19]
  rx1520_cstack_done3693:
    pop rx1520_rep, rx1520_bstack
    pop rx1520_pos, rx1520_bstack
    pop $I19, rx1520_bstack
    lt rx1520_pos, -1, rx1520_done3688
    lt rx1520_pos, 0, rx1520_fail3690
    eq $I19, 0, rx1520_fail3690
    nqp_islist $I20, rx1520_cstack
    unless $I20, rx1520_jump3691
    elements $I18, rx1520_bstack
    le $I18, 0, rx1520_cut3692
    dec $I18
    set $I18, rx1520_bstack[$I18]
  rx1520_cut3692:
    assign rx1520_cstack, $I18
  rx1520_jump3691:
    jump $I19
  rx1520_done3688:
    rx1520_cur."!cursor_fail"()
    .return (rx1520_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_195_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1501
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1524_start
    .local string rx1524_tgt
    .local int rx1524_pos
    .local int rx1524_off
    .local int rx1524_eos
    .local int rx1524_rep
    .local pmc rx1524_cur
    .local pmc rx1524_curclass
    .local pmc rx1524_bstack
    .local pmc rx1524_cstack
    rx1524_start = self."!cursor_start_all"()
    set rx1524_cur, rx1524_start[0]
    set rx1524_tgt, rx1524_start[1]
    set rx1524_pos, rx1524_start[2]
    set rx1524_curclass, rx1524_start[3]
    set rx1524_bstack, rx1524_start[4]
    set $I19, rx1524_start[5]
    store_lex unicode:"$\x{a2}", rx1524_cur
    length rx1524_eos, rx1524_tgt
    eq $I19, 1, rx1524_restart3702
    gt rx1524_pos, rx1524_eos, rx1524_fail3703
    repr_get_attr_int $I11, self, rx1524_curclass, "$!from"
    ne $I11, -1, rxscan1525_done3709
    goto rxscan1525_scan3708
  rxscan1525_loop3707:
    inc rx1524_pos
    gt rx1524_pos, rx1524_eos, rx1524_fail3703
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!from", rx1524_pos
  rxscan1525_scan3708:
    nqp_rxmark rx1524_bstack, rxscan1525_loop3707, rx1524_pos, 0
  rxscan1525_done3709:
    nqp_rxmark rx1524_bstack, rxcap1526_fail3711, rx1524_pos, 0
    add $I11, rx1524_pos, 2
    gt $I11, rx1524_eos, rx1524_fail3703
    substr $S10, rx1524_tgt, rx1524_pos, 2
    ne $S10, ucs4:"+&", rx1524_fail3703
    add rx1524_pos, 2
    nqp_rxpeek $I19, rx1524_bstack, rxcap1526_fail3711
    inc $I19
    set $I11, rx1524_bstack[$I19]
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1524_pos)
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "sym")
    goto rxcap1526_done3710
  rxcap1526_fail3711:
    goto rx1524_fail3703
  rxcap1526_done3710:
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1524_curclass, "$!pos"
    lt $I11, 0, rx1524_fail3703
    nqp_rxmark rx1524_bstack, rxsubrule1527_pass3712, -1, 0
  rxsubrule1527_pass3712:
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1524_pos, $P11, rx1524_curclass, "$!pos"
    rx1524_cur."!cursor_pass"(rx1524_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1524_cur)
  rx1524_restart3702:
    repr_get_attr_obj rx1524_cstack, rx1524_cur, rx1524_curclass, "$!cstack"
  rx1524_fail3703:
    unless rx1524_bstack, rx1524_done3701
    pop $I19, rx1524_bstack
    if_null rx1524_cstack, rx1524_cstack_done3706
    unless rx1524_cstack, rx1524_cstack_done3706
    dec $I19
    set $P11, rx1524_cstack[$I19]
  rx1524_cstack_done3706:
    pop rx1524_rep, rx1524_bstack
    pop rx1524_pos, rx1524_bstack
    pop $I19, rx1524_bstack
    lt rx1524_pos, -1, rx1524_done3701
    lt rx1524_pos, 0, rx1524_fail3703
    eq $I19, 0, rx1524_fail3703
    nqp_islist $I20, rx1524_cstack
    unless $I20, rx1524_jump3704
    elements $I18, rx1524_bstack
    le $I18, 0, rx1524_cut3705
    dec $I18
    set $I18, rx1524_bstack[$I18]
  rx1524_cut3705:
    assign rx1524_cstack, $I18
  rx1524_jump3704:
    jump $I19
  rx1524_done3701:
    rx1524_cur."!cursor_fail"()
    .return (rx1524_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_196_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1503
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1528_start
    .local string rx1528_tgt
    .local int rx1528_pos
    .local int rx1528_off
    .local int rx1528_eos
    .local int rx1528_rep
    .local pmc rx1528_cur
    .local pmc rx1528_curclass
    .local pmc rx1528_bstack
    .local pmc rx1528_cstack
    rx1528_start = self."!cursor_start_all"()
    set rx1528_cur, rx1528_start[0]
    set rx1528_tgt, rx1528_start[1]
    set rx1528_pos, rx1528_start[2]
    set rx1528_curclass, rx1528_start[3]
    set rx1528_bstack, rx1528_start[4]
    set $I19, rx1528_start[5]
    store_lex unicode:"$\x{a2}", rx1528_cur
    length rx1528_eos, rx1528_tgt
    eq $I19, 1, rx1528_restart3715
    gt rx1528_pos, rx1528_eos, rx1528_fail3716
    repr_get_attr_int $I11, self, rx1528_curclass, "$!from"
    ne $I11, -1, rxscan1529_done3722
    goto rxscan1529_scan3721
  rxscan1529_loop3720:
    inc rx1528_pos
    gt rx1528_pos, rx1528_eos, rx1528_fail3716
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!from", rx1528_pos
  rxscan1529_scan3721:
    nqp_rxmark rx1528_bstack, rxscan1529_loop3720, rx1528_pos, 0
  rxscan1529_done3722:
    nqp_rxmark rx1528_bstack, rxcap1530_fail3724, rx1528_pos, 0
    add $I11, rx1528_pos, 1
    gt $I11, rx1528_eos, rx1528_fail3716
    substr $S10, rx1528_tgt, rx1528_pos, 1
    ne $S10, ucs4:"+", rx1528_fail3716
    add rx1528_pos, 1
    nqp_rxpeek $I19, rx1528_bstack, rxcap1530_fail3724
    inc $I19
    set $I11, rx1528_bstack[$I19]
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1528_pos)
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "sym")
    goto rxcap1530_done3723
  rxcap1530_fail3724:
    goto rx1528_fail3716
  rxcap1530_done3723:
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1528_curclass, "$!pos"
    lt $I11, 0, rx1528_fail3716
    nqp_rxmark rx1528_bstack, rxsubrule1531_pass3725, -1, 0
  rxsubrule1531_pass3725:
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1528_pos, $P11, rx1528_curclass, "$!pos"
    rx1528_cur."!cursor_pass"(rx1528_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1528_cur)
  rx1528_restart3715:
    repr_get_attr_obj rx1528_cstack, rx1528_cur, rx1528_curclass, "$!cstack"
  rx1528_fail3716:
    unless rx1528_bstack, rx1528_done3714
    pop $I19, rx1528_bstack
    if_null rx1528_cstack, rx1528_cstack_done3719
    unless rx1528_cstack, rx1528_cstack_done3719
    dec $I19
    set $P11, rx1528_cstack[$I19]
  rx1528_cstack_done3719:
    pop rx1528_rep, rx1528_bstack
    pop rx1528_pos, rx1528_bstack
    pop $I19, rx1528_bstack
    lt rx1528_pos, -1, rx1528_done3714
    lt rx1528_pos, 0, rx1528_fail3716
    eq $I19, 0, rx1528_fail3716
    nqp_islist $I20, rx1528_cstack
    unless $I20, rx1528_jump3717
    elements $I18, rx1528_bstack
    le $I18, 0, rx1528_cut3718
    dec $I18
    set $I18, rx1528_bstack[$I18]
  rx1528_cut3718:
    assign rx1528_cstack, $I18
  rx1528_jump3717:
    jump $I19
  rx1528_done3714:
    rx1528_cur."!cursor_fail"()
    .return (rx1528_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_197_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1504
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1532_start
    .local string rx1532_tgt
    .local int rx1532_pos
    .local int rx1532_off
    .local int rx1532_eos
    .local int rx1532_rep
    .local pmc rx1532_cur
    .local pmc rx1532_curclass
    .local pmc rx1532_bstack
    .local pmc rx1532_cstack
    rx1532_start = self."!cursor_start_all"()
    set rx1532_cur, rx1532_start[0]
    set rx1532_tgt, rx1532_start[1]
    set rx1532_pos, rx1532_start[2]
    set rx1532_curclass, rx1532_start[3]
    set rx1532_bstack, rx1532_start[4]
    set $I19, rx1532_start[5]
    store_lex unicode:"$\x{a2}", rx1532_cur
    length rx1532_eos, rx1532_tgt
    eq $I19, 1, rx1532_restart3728
    gt rx1532_pos, rx1532_eos, rx1532_fail3729
    repr_get_attr_int $I11, self, rx1532_curclass, "$!from"
    ne $I11, -1, rxscan1533_done3735
    goto rxscan1533_scan3734
  rxscan1533_loop3733:
    inc rx1532_pos
    gt rx1532_pos, rx1532_eos, rx1532_fail3729
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!from", rx1532_pos
  rxscan1533_scan3734:
    nqp_rxmark rx1532_bstack, rxscan1533_loop3733, rx1532_pos, 0
  rxscan1533_done3735:
    nqp_rxmark rx1532_bstack, rxcap1534_fail3737, rx1532_pos, 0
    add $I11, rx1532_pos, 1
    gt $I11, rx1532_eos, rx1532_fail3729
    substr $S10, rx1532_tgt, rx1532_pos, 1
    ne $S10, ucs4:"-", rx1532_fail3729
    add rx1532_pos, 1
    nqp_rxpeek $I19, rx1532_bstack, rxcap1534_fail3737
    inc $I19
    set $I11, rx1532_bstack[$I19]
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1532_pos)
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "sym")
    goto rxcap1534_done3736
  rxcap1534_fail3737:
    goto rx1532_fail3729
  rxcap1534_done3736:
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1532_curclass, "$!pos"
    lt $I11, 0, rx1532_fail3729
    nqp_rxmark rx1532_bstack, rxsubrule1535_pass3738, -1, 0
  rxsubrule1535_pass3738:
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1532_pos, $P11, rx1532_curclass, "$!pos"
    rx1532_cur."!cursor_pass"(rx1532_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1532_cur)
  rx1532_restart3728:
    repr_get_attr_obj rx1532_cstack, rx1532_cur, rx1532_curclass, "$!cstack"
  rx1532_fail3729:
    unless rx1532_bstack, rx1532_done3727
    pop $I19, rx1532_bstack
    if_null rx1532_cstack, rx1532_cstack_done3732
    unless rx1532_cstack, rx1532_cstack_done3732
    dec $I19
    set $P11, rx1532_cstack[$I19]
  rx1532_cstack_done3732:
    pop rx1532_rep, rx1532_bstack
    pop rx1532_pos, rx1532_bstack
    pop $I19, rx1532_bstack
    lt rx1532_pos, -1, rx1532_done3727
    lt rx1532_pos, 0, rx1532_fail3729
    eq $I19, 0, rx1532_fail3729
    nqp_islist $I20, rx1532_cstack
    unless $I20, rx1532_jump3730
    elements $I18, rx1532_bstack
    le $I18, 0, rx1532_cut3731
    dec $I18
    set $I18, rx1532_bstack[$I18]
  rx1532_cut3731:
    assign rx1532_cstack, $I18
  rx1532_jump3730:
    jump $I19
  rx1532_done3727:
    rx1532_cur."!cursor_fail"()
    .return (rx1532_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_198_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1505
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1536_start
    .local string rx1536_tgt
    .local int rx1536_pos
    .local int rx1536_off
    .local int rx1536_eos
    .local int rx1536_rep
    .local pmc rx1536_cur
    .local pmc rx1536_curclass
    .local pmc rx1536_bstack
    .local pmc rx1536_cstack
    rx1536_start = self."!cursor_start_all"()
    set rx1536_cur, rx1536_start[0]
    set rx1536_tgt, rx1536_start[1]
    set rx1536_pos, rx1536_start[2]
    set rx1536_curclass, rx1536_start[3]
    set rx1536_bstack, rx1536_start[4]
    set $I19, rx1536_start[5]
    store_lex unicode:"$\x{a2}", rx1536_cur
    length rx1536_eos, rx1536_tgt
    eq $I19, 1, rx1536_restart3741
    gt rx1536_pos, rx1536_eos, rx1536_fail3742
    repr_get_attr_int $I11, self, rx1536_curclass, "$!from"
    ne $I11, -1, rxscan1537_done3748
    goto rxscan1537_scan3747
  rxscan1537_loop3746:
    inc rx1536_pos
    gt rx1536_pos, rx1536_eos, rx1536_fail3742
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!from", rx1536_pos
  rxscan1537_scan3747:
    nqp_rxmark rx1536_bstack, rxscan1537_loop3746, rx1536_pos, 0
  rxscan1537_done3748:
    nqp_rxmark rx1536_bstack, rxcap1538_fail3750, rx1536_pos, 0
    add $I11, rx1536_pos, 2
    gt $I11, rx1536_eos, rx1536_fail3742
    substr $S10, rx1536_tgt, rx1536_pos, 2
    ne $S10, ucs4:"+|", rx1536_fail3742
    add rx1536_pos, 2
    nqp_rxpeek $I19, rx1536_bstack, rxcap1538_fail3750
    inc $I19
    set $I11, rx1536_bstack[$I19]
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1536_pos)
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "sym")
    goto rxcap1538_done3749
  rxcap1538_fail3750:
    goto rx1536_fail3742
  rxcap1538_done3749:
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1536_curclass, "$!pos"
    lt $I11, 0, rx1536_fail3742
    nqp_rxmark rx1536_bstack, rxsubrule1539_pass3751, -1, 0
  rxsubrule1539_pass3751:
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1536_pos, $P11, rx1536_curclass, "$!pos"
    rx1536_cur."!cursor_pass"(rx1536_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1536_cur)
  rx1536_restart3741:
    repr_get_attr_obj rx1536_cstack, rx1536_cur, rx1536_curclass, "$!cstack"
  rx1536_fail3742:
    unless rx1536_bstack, rx1536_done3740
    pop $I19, rx1536_bstack
    if_null rx1536_cstack, rx1536_cstack_done3745
    unless rx1536_cstack, rx1536_cstack_done3745
    dec $I19
    set $P11, rx1536_cstack[$I19]
  rx1536_cstack_done3745:
    pop rx1536_rep, rx1536_bstack
    pop rx1536_pos, rx1536_bstack
    pop $I19, rx1536_bstack
    lt rx1536_pos, -1, rx1536_done3740
    lt rx1536_pos, 0, rx1536_fail3742
    eq $I19, 0, rx1536_fail3742
    nqp_islist $I20, rx1536_cstack
    unless $I20, rx1536_jump3743
    elements $I18, rx1536_bstack
    le $I18, 0, rx1536_cut3744
    dec $I18
    set $I18, rx1536_bstack[$I18]
  rx1536_cut3744:
    assign rx1536_cstack, $I18
  rx1536_jump3743:
    jump $I19
  rx1536_done3740:
    rx1536_cur."!cursor_fail"()
    .return (rx1536_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_199_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1506
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1540_start
    .local string rx1540_tgt
    .local int rx1540_pos
    .local int rx1540_off
    .local int rx1540_eos
    .local int rx1540_rep
    .local pmc rx1540_cur
    .local pmc rx1540_curclass
    .local pmc rx1540_bstack
    .local pmc rx1540_cstack
    rx1540_start = self."!cursor_start_all"()
    set rx1540_cur, rx1540_start[0]
    set rx1540_tgt, rx1540_start[1]
    set rx1540_pos, rx1540_start[2]
    set rx1540_curclass, rx1540_start[3]
    set rx1540_bstack, rx1540_start[4]
    set $I19, rx1540_start[5]
    store_lex unicode:"$\x{a2}", rx1540_cur
    length rx1540_eos, rx1540_tgt
    eq $I19, 1, rx1540_restart3754
    gt rx1540_pos, rx1540_eos, rx1540_fail3755
    repr_get_attr_int $I11, self, rx1540_curclass, "$!from"
    ne $I11, -1, rxscan1541_done3761
    goto rxscan1541_scan3760
  rxscan1541_loop3759:
    inc rx1540_pos
    gt rx1540_pos, rx1540_eos, rx1540_fail3755
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!from", rx1540_pos
  rxscan1541_scan3760:
    nqp_rxmark rx1540_bstack, rxscan1541_loop3759, rx1540_pos, 0
  rxscan1541_done3761:
    nqp_rxmark rx1540_bstack, rxcap1542_fail3763, rx1540_pos, 0
    add $I11, rx1540_pos, 2
    gt $I11, rx1540_eos, rx1540_fail3755
    substr $S10, rx1540_tgt, rx1540_pos, 2
    ne $S10, ucs4:"+^", rx1540_fail3755
    add rx1540_pos, 2
    nqp_rxpeek $I19, rx1540_bstack, rxcap1542_fail3763
    inc $I19
    set $I11, rx1540_bstack[$I19]
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1540_pos)
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "sym")
    goto rxcap1542_done3762
  rxcap1542_fail3763:
    goto rx1540_fail3755
  rxcap1542_done3762:
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1540_curclass, "$!pos"
    lt $I11, 0, rx1540_fail3755
    nqp_rxmark rx1540_bstack, rxsubrule1543_pass3764, -1, 0
  rxsubrule1543_pass3764:
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1540_pos, $P11, rx1540_curclass, "$!pos"
    rx1540_cur."!cursor_pass"(rx1540_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1540_cur)
  rx1540_restart3754:
    repr_get_attr_obj rx1540_cstack, rx1540_cur, rx1540_curclass, "$!cstack"
  rx1540_fail3755:
    unless rx1540_bstack, rx1540_done3753
    pop $I19, rx1540_bstack
    if_null rx1540_cstack, rx1540_cstack_done3758
    unless rx1540_cstack, rx1540_cstack_done3758
    dec $I19
    set $P11, rx1540_cstack[$I19]
  rx1540_cstack_done3758:
    pop rx1540_rep, rx1540_bstack
    pop rx1540_pos, rx1540_bstack
    pop $I19, rx1540_bstack
    lt rx1540_pos, -1, rx1540_done3753
    lt rx1540_pos, 0, rx1540_fail3755
    eq $I19, 0, rx1540_fail3755
    nqp_islist $I20, rx1540_cstack
    unless $I20, rx1540_jump3756
    elements $I18, rx1540_bstack
    le $I18, 0, rx1540_cut3757
    dec $I18
    set $I18, rx1540_bstack[$I18]
  rx1540_cut3757:
    assign rx1540_cstack, $I18
  rx1540_jump3756:
    jump $I19
  rx1540_done3753:
    rx1540_cur."!cursor_fail"()
    .return (rx1540_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_200_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1508
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1544_start
    .local string rx1544_tgt
    .local int rx1544_pos
    .local int rx1544_off
    .local int rx1544_eos
    .local int rx1544_rep
    .local pmc rx1544_cur
    .local pmc rx1544_curclass
    .local pmc rx1544_bstack
    .local pmc rx1544_cstack
    rx1544_start = self."!cursor_start_all"()
    set rx1544_cur, rx1544_start[0]
    set rx1544_tgt, rx1544_start[1]
    set rx1544_pos, rx1544_start[2]
    set rx1544_curclass, rx1544_start[3]
    set rx1544_bstack, rx1544_start[4]
    set $I19, rx1544_start[5]
    store_lex unicode:"$\x{a2}", rx1544_cur
    length rx1544_eos, rx1544_tgt
    eq $I19, 1, rx1544_restart3767
    gt rx1544_pos, rx1544_eos, rx1544_fail3768
    repr_get_attr_int $I11, self, rx1544_curclass, "$!from"
    ne $I11, -1, rxscan1545_done3774
    goto rxscan1545_scan3773
  rxscan1545_loop3772:
    inc rx1544_pos
    gt rx1544_pos, rx1544_eos, rx1544_fail3768
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!from", rx1544_pos
  rxscan1545_scan3773:
    nqp_rxmark rx1544_bstack, rxscan1545_loop3772, rx1544_pos, 0
  rxscan1545_done3774:
    nqp_rxmark rx1544_bstack, rxcap1546_fail3776, rx1544_pos, 0
    add $I11, rx1544_pos, 1
    gt $I11, rx1544_eos, rx1544_fail3768
    substr $S10, rx1544_tgt, rx1544_pos, 1
    ne $S10, ucs4:"~", rx1544_fail3768
    add rx1544_pos, 1
    nqp_rxpeek $I19, rx1544_bstack, rxcap1546_fail3776
    inc $I19
    set $I11, rx1544_bstack[$I19]
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1544_pos)
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "sym")
    goto rxcap1546_done3775
  rxcap1546_fail3776:
    goto rx1544_fail3768
  rxcap1546_done3775:
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1544_curclass, "$!pos"
    lt $I11, 0, rx1544_fail3768
    nqp_rxmark rx1544_bstack, rxsubrule1547_pass3777, -1, 0
  rxsubrule1547_pass3777:
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1544_pos, $P11, rx1544_curclass, "$!pos"
    rx1544_cur."!cursor_pass"(rx1544_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1544_cur)
  rx1544_restart3767:
    repr_get_attr_obj rx1544_cstack, rx1544_cur, rx1544_curclass, "$!cstack"
  rx1544_fail3768:
    unless rx1544_bstack, rx1544_done3766
    pop $I19, rx1544_bstack
    if_null rx1544_cstack, rx1544_cstack_done3771
    unless rx1544_cstack, rx1544_cstack_done3771
    dec $I19
    set $P11, rx1544_cstack[$I19]
  rx1544_cstack_done3771:
    pop rx1544_rep, rx1544_bstack
    pop rx1544_pos, rx1544_bstack
    pop $I19, rx1544_bstack
    lt rx1544_pos, -1, rx1544_done3766
    lt rx1544_pos, 0, rx1544_fail3768
    eq $I19, 0, rx1544_fail3768
    nqp_islist $I20, rx1544_cstack
    unless $I20, rx1544_jump3769
    elements $I18, rx1544_bstack
    le $I18, 0, rx1544_cut3770
    dec $I18
    set $I18, rx1544_bstack[$I18]
  rx1544_cut3770:
    assign rx1544_cstack, $I18
  rx1544_jump3769:
    jump $I19
  rx1544_done3766:
    rx1544_cur."!cursor_fail"()
    .return (rx1544_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_201_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1510
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1548_start
    .local string rx1548_tgt
    .local int rx1548_pos
    .local int rx1548_off
    .local int rx1548_eos
    .local int rx1548_rep
    .local pmc rx1548_cur
    .local pmc rx1548_curclass
    .local pmc rx1548_bstack
    .local pmc rx1548_cstack
    rx1548_start = self."!cursor_start_all"()
    set rx1548_cur, rx1548_start[0]
    set rx1548_tgt, rx1548_start[1]
    set rx1548_pos, rx1548_start[2]
    set rx1548_curclass, rx1548_start[3]
    set rx1548_bstack, rx1548_start[4]
    set $I19, rx1548_start[5]
    store_lex unicode:"$\x{a2}", rx1548_cur
    length rx1548_eos, rx1548_tgt
    eq $I19, 1, rx1548_restart3780
    gt rx1548_pos, rx1548_eos, rx1548_fail3781
    repr_get_attr_int $I11, self, rx1548_curclass, "$!from"
    ne $I11, -1, rxscan1549_done3787
    goto rxscan1549_scan3786
  rxscan1549_loop3785:
    inc rx1548_pos
    gt rx1548_pos, rx1548_eos, rx1548_fail3781
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!from", rx1548_pos
  rxscan1549_scan3786:
    nqp_rxmark rx1548_bstack, rxscan1549_loop3785, rx1548_pos, 0
  rxscan1549_done3787:
    nqp_rxmark rx1548_bstack, rxcap1550_fail3789, rx1548_pos, 0
    add $I11, rx1548_pos, 2
    gt $I11, rx1548_eos, rx1548_fail3781
    substr $S10, rx1548_tgt, rx1548_pos, 2
    ne $S10, ucs4:"==", rx1548_fail3781
    add rx1548_pos, 2
    nqp_rxpeek $I19, rx1548_bstack, rxcap1550_fail3789
    inc $I19
    set $I11, rx1548_bstack[$I19]
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1548_pos)
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "sym")
    goto rxcap1550_done3788
  rxcap1550_fail3789:
    goto rx1548_fail3781
  rxcap1550_done3788:
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1548_curclass, "$!pos"
    lt $I11, 0, rx1548_fail3781
    nqp_rxmark rx1548_bstack, rxsubrule1551_pass3790, -1, 0
  rxsubrule1551_pass3790:
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1548_pos, $P11, rx1548_curclass, "$!pos"
    rx1548_cur."!cursor_pass"(rx1548_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1548_cur)
  rx1548_restart3780:
    repr_get_attr_obj rx1548_cstack, rx1548_cur, rx1548_curclass, "$!cstack"
  rx1548_fail3781:
    unless rx1548_bstack, rx1548_done3779
    pop $I19, rx1548_bstack
    if_null rx1548_cstack, rx1548_cstack_done3784
    unless rx1548_cstack, rx1548_cstack_done3784
    dec $I19
    set $P11, rx1548_cstack[$I19]
  rx1548_cstack_done3784:
    pop rx1548_rep, rx1548_bstack
    pop rx1548_pos, rx1548_bstack
    pop $I19, rx1548_bstack
    lt rx1548_pos, -1, rx1548_done3779
    lt rx1548_pos, 0, rx1548_fail3781
    eq $I19, 0, rx1548_fail3781
    nqp_islist $I20, rx1548_cstack
    unless $I20, rx1548_jump3782
    elements $I18, rx1548_bstack
    le $I18, 0, rx1548_cut3783
    dec $I18
    set $I18, rx1548_bstack[$I18]
  rx1548_cut3783:
    assign rx1548_cstack, $I18
  rx1548_jump3782:
    jump $I19
  rx1548_done3779:
    rx1548_cur."!cursor_fail"()
    .return (rx1548_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_202_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1511
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1552_start
    .local string rx1552_tgt
    .local int rx1552_pos
    .local int rx1552_off
    .local int rx1552_eos
    .local int rx1552_rep
    .local pmc rx1552_cur
    .local pmc rx1552_curclass
    .local pmc rx1552_bstack
    .local pmc rx1552_cstack
    rx1552_start = self."!cursor_start_all"()
    set rx1552_cur, rx1552_start[0]
    set rx1552_tgt, rx1552_start[1]
    set rx1552_pos, rx1552_start[2]
    set rx1552_curclass, rx1552_start[3]
    set rx1552_bstack, rx1552_start[4]
    set $I19, rx1552_start[5]
    store_lex unicode:"$\x{a2}", rx1552_cur
    length rx1552_eos, rx1552_tgt
    eq $I19, 1, rx1552_restart3793
    gt rx1552_pos, rx1552_eos, rx1552_fail3794
    repr_get_attr_int $I11, self, rx1552_curclass, "$!from"
    ne $I11, -1, rxscan1553_done3800
    goto rxscan1553_scan3799
  rxscan1553_loop3798:
    inc rx1552_pos
    gt rx1552_pos, rx1552_eos, rx1552_fail3794
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!from", rx1552_pos
  rxscan1553_scan3799:
    nqp_rxmark rx1552_bstack, rxscan1553_loop3798, rx1552_pos, 0
  rxscan1553_done3800:
    nqp_rxmark rx1552_bstack, rxcap1554_fail3802, rx1552_pos, 0
    add $I11, rx1552_pos, 2
    gt $I11, rx1552_eos, rx1552_fail3794
    substr $S10, rx1552_tgt, rx1552_pos, 2
    ne $S10, ucs4:"!=", rx1552_fail3794
    add rx1552_pos, 2
    nqp_rxpeek $I19, rx1552_bstack, rxcap1554_fail3802
    inc $I19
    set $I11, rx1552_bstack[$I19]
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1552_pos)
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "sym")
    goto rxcap1554_done3801
  rxcap1554_fail3802:
    goto rx1552_fail3794
  rxcap1554_done3801:
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1552_curclass, "$!pos"
    lt $I11, 0, rx1552_fail3794
    nqp_rxmark rx1552_bstack, rxsubrule1555_pass3803, -1, 0
  rxsubrule1555_pass3803:
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1552_pos, $P11, rx1552_curclass, "$!pos"
    rx1552_cur."!cursor_pass"(rx1552_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1552_cur)
  rx1552_restart3793:
    repr_get_attr_obj rx1552_cstack, rx1552_cur, rx1552_curclass, "$!cstack"
  rx1552_fail3794:
    unless rx1552_bstack, rx1552_done3792
    pop $I19, rx1552_bstack
    if_null rx1552_cstack, rx1552_cstack_done3797
    unless rx1552_cstack, rx1552_cstack_done3797
    dec $I19
    set $P11, rx1552_cstack[$I19]
  rx1552_cstack_done3797:
    pop rx1552_rep, rx1552_bstack
    pop rx1552_pos, rx1552_bstack
    pop $I19, rx1552_bstack
    lt rx1552_pos, -1, rx1552_done3792
    lt rx1552_pos, 0, rx1552_fail3794
    eq $I19, 0, rx1552_fail3794
    nqp_islist $I20, rx1552_cstack
    unless $I20, rx1552_jump3795
    elements $I18, rx1552_bstack
    le $I18, 0, rx1552_cut3796
    dec $I18
    set $I18, rx1552_bstack[$I18]
  rx1552_cut3796:
    assign rx1552_cstack, $I18
  rx1552_jump3795:
    jump $I19
  rx1552_done3792:
    rx1552_cur."!cursor_fail"()
    .return (rx1552_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_203_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1512
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1556_start
    .local string rx1556_tgt
    .local int rx1556_pos
    .local int rx1556_off
    .local int rx1556_eos
    .local int rx1556_rep
    .local pmc rx1556_cur
    .local pmc rx1556_curclass
    .local pmc rx1556_bstack
    .local pmc rx1556_cstack
    rx1556_start = self."!cursor_start_all"()
    set rx1556_cur, rx1556_start[0]
    set rx1556_tgt, rx1556_start[1]
    set rx1556_pos, rx1556_start[2]
    set rx1556_curclass, rx1556_start[3]
    set rx1556_bstack, rx1556_start[4]
    set $I19, rx1556_start[5]
    store_lex unicode:"$\x{a2}", rx1556_cur
    length rx1556_eos, rx1556_tgt
    eq $I19, 1, rx1556_restart3806
    gt rx1556_pos, rx1556_eos, rx1556_fail3807
    repr_get_attr_int $I11, self, rx1556_curclass, "$!from"
    ne $I11, -1, rxscan1557_done3813
    goto rxscan1557_scan3812
  rxscan1557_loop3811:
    inc rx1556_pos
    gt rx1556_pos, rx1556_eos, rx1556_fail3807
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!from", rx1556_pos
  rxscan1557_scan3812:
    nqp_rxmark rx1556_bstack, rxscan1557_loop3811, rx1556_pos, 0
  rxscan1557_done3813:
    nqp_rxmark rx1556_bstack, rxcap1558_fail3815, rx1556_pos, 0
    add $I11, rx1556_pos, 2
    gt $I11, rx1556_eos, rx1556_fail3807
    substr $S10, rx1556_tgt, rx1556_pos, 2
    ne $S10, ucs4:"<=", rx1556_fail3807
    add rx1556_pos, 2
    nqp_rxpeek $I19, rx1556_bstack, rxcap1558_fail3815
    inc $I19
    set $I11, rx1556_bstack[$I19]
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1556_pos)
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "sym")
    goto rxcap1558_done3814
  rxcap1558_fail3815:
    goto rx1556_fail3807
  rxcap1558_done3814:
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1556_curclass, "$!pos"
    lt $I11, 0, rx1556_fail3807
    nqp_rxmark rx1556_bstack, rxsubrule1559_pass3816, -1, 0
  rxsubrule1559_pass3816:
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1556_pos, $P11, rx1556_curclass, "$!pos"
    rx1556_cur."!cursor_pass"(rx1556_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1556_cur)
  rx1556_restart3806:
    repr_get_attr_obj rx1556_cstack, rx1556_cur, rx1556_curclass, "$!cstack"
  rx1556_fail3807:
    unless rx1556_bstack, rx1556_done3805
    pop $I19, rx1556_bstack
    if_null rx1556_cstack, rx1556_cstack_done3810
    unless rx1556_cstack, rx1556_cstack_done3810
    dec $I19
    set $P11, rx1556_cstack[$I19]
  rx1556_cstack_done3810:
    pop rx1556_rep, rx1556_bstack
    pop rx1556_pos, rx1556_bstack
    pop $I19, rx1556_bstack
    lt rx1556_pos, -1, rx1556_done3805
    lt rx1556_pos, 0, rx1556_fail3807
    eq $I19, 0, rx1556_fail3807
    nqp_islist $I20, rx1556_cstack
    unless $I20, rx1556_jump3808
    elements $I18, rx1556_bstack
    le $I18, 0, rx1556_cut3809
    dec $I18
    set $I18, rx1556_bstack[$I18]
  rx1556_cut3809:
    assign rx1556_cstack, $I18
  rx1556_jump3808:
    jump $I19
  rx1556_done3805:
    rx1556_cur."!cursor_fail"()
    .return (rx1556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_204_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1513
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1560_start
    .local string rx1560_tgt
    .local int rx1560_pos
    .local int rx1560_off
    .local int rx1560_eos
    .local int rx1560_rep
    .local pmc rx1560_cur
    .local pmc rx1560_curclass
    .local pmc rx1560_bstack
    .local pmc rx1560_cstack
    rx1560_start = self."!cursor_start_all"()
    set rx1560_cur, rx1560_start[0]
    set rx1560_tgt, rx1560_start[1]
    set rx1560_pos, rx1560_start[2]
    set rx1560_curclass, rx1560_start[3]
    set rx1560_bstack, rx1560_start[4]
    set $I19, rx1560_start[5]
    store_lex unicode:"$\x{a2}", rx1560_cur
    length rx1560_eos, rx1560_tgt
    eq $I19, 1, rx1560_restart3819
    gt rx1560_pos, rx1560_eos, rx1560_fail3820
    repr_get_attr_int $I11, self, rx1560_curclass, "$!from"
    ne $I11, -1, rxscan1561_done3826
    goto rxscan1561_scan3825
  rxscan1561_loop3824:
    inc rx1560_pos
    gt rx1560_pos, rx1560_eos, rx1560_fail3820
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!from", rx1560_pos
  rxscan1561_scan3825:
    nqp_rxmark rx1560_bstack, rxscan1561_loop3824, rx1560_pos, 0
  rxscan1561_done3826:
    nqp_rxmark rx1560_bstack, rxcap1562_fail3828, rx1560_pos, 0
    add $I11, rx1560_pos, 2
    gt $I11, rx1560_eos, rx1560_fail3820
    substr $S10, rx1560_tgt, rx1560_pos, 2
    ne $S10, ucs4:">=", rx1560_fail3820
    add rx1560_pos, 2
    nqp_rxpeek $I19, rx1560_bstack, rxcap1562_fail3828
    inc $I19
    set $I11, rx1560_bstack[$I19]
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1560_pos)
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "sym")
    goto rxcap1562_done3827
  rxcap1562_fail3828:
    goto rx1560_fail3820
  rxcap1562_done3827:
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1560_curclass, "$!pos"
    lt $I11, 0, rx1560_fail3820
    nqp_rxmark rx1560_bstack, rxsubrule1563_pass3829, -1, 0
  rxsubrule1563_pass3829:
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1560_pos, $P11, rx1560_curclass, "$!pos"
    rx1560_cur."!cursor_pass"(rx1560_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1560_cur)
  rx1560_restart3819:
    repr_get_attr_obj rx1560_cstack, rx1560_cur, rx1560_curclass, "$!cstack"
  rx1560_fail3820:
    unless rx1560_bstack, rx1560_done3818
    pop $I19, rx1560_bstack
    if_null rx1560_cstack, rx1560_cstack_done3823
    unless rx1560_cstack, rx1560_cstack_done3823
    dec $I19
    set $P11, rx1560_cstack[$I19]
  rx1560_cstack_done3823:
    pop rx1560_rep, rx1560_bstack
    pop rx1560_pos, rx1560_bstack
    pop $I19, rx1560_bstack
    lt rx1560_pos, -1, rx1560_done3818
    lt rx1560_pos, 0, rx1560_fail3820
    eq $I19, 0, rx1560_fail3820
    nqp_islist $I20, rx1560_cstack
    unless $I20, rx1560_jump3821
    elements $I18, rx1560_bstack
    le $I18, 0, rx1560_cut3822
    dec $I18
    set $I18, rx1560_bstack[$I18]
  rx1560_cut3822:
    assign rx1560_cstack, $I18
  rx1560_jump3821:
    jump $I19
  rx1560_done3818:
    rx1560_cur."!cursor_fail"()
    .return (rx1560_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_205_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1514
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1564_start
    .local string rx1564_tgt
    .local int rx1564_pos
    .local int rx1564_off
    .local int rx1564_eos
    .local int rx1564_rep
    .local pmc rx1564_cur
    .local pmc rx1564_curclass
    .local pmc rx1564_bstack
    .local pmc rx1564_cstack
    rx1564_start = self."!cursor_start_all"()
    set rx1564_cur, rx1564_start[0]
    set rx1564_tgt, rx1564_start[1]
    set rx1564_pos, rx1564_start[2]
    set rx1564_curclass, rx1564_start[3]
    set rx1564_bstack, rx1564_start[4]
    set $I19, rx1564_start[5]
    store_lex unicode:"$\x{a2}", rx1564_cur
    length rx1564_eos, rx1564_tgt
    eq $I19, 1, rx1564_restart3832
    gt rx1564_pos, rx1564_eos, rx1564_fail3833
    repr_get_attr_int $I11, self, rx1564_curclass, "$!from"
    ne $I11, -1, rxscan1565_done3839
    goto rxscan1565_scan3838
  rxscan1565_loop3837:
    inc rx1564_pos
    gt rx1564_pos, rx1564_eos, rx1564_fail3833
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!from", rx1564_pos
  rxscan1565_scan3838:
    nqp_rxmark rx1564_bstack, rxscan1565_loop3837, rx1564_pos, 0
  rxscan1565_done3839:
    nqp_rxmark rx1564_bstack, rxcap1566_fail3841, rx1564_pos, 0
    add $I11, rx1564_pos, 1
    gt $I11, rx1564_eos, rx1564_fail3833
    substr $S10, rx1564_tgt, rx1564_pos, 1
    ne $S10, ucs4:"<", rx1564_fail3833
    add rx1564_pos, 1
    nqp_rxpeek $I19, rx1564_bstack, rxcap1566_fail3841
    inc $I19
    set $I11, rx1564_bstack[$I19]
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1564_pos)
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "sym")
    goto rxcap1566_done3840
  rxcap1566_fail3841:
    goto rx1564_fail3833
  rxcap1566_done3840:
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1564_curclass, "$!pos"
    lt $I11, 0, rx1564_fail3833
    nqp_rxmark rx1564_bstack, rxsubrule1567_pass3842, -1, 0
  rxsubrule1567_pass3842:
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1564_pos, $P11, rx1564_curclass, "$!pos"
    rx1564_cur."!cursor_pass"(rx1564_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1564_cur)
  rx1564_restart3832:
    repr_get_attr_obj rx1564_cstack, rx1564_cur, rx1564_curclass, "$!cstack"
  rx1564_fail3833:
    unless rx1564_bstack, rx1564_done3831
    pop $I19, rx1564_bstack
    if_null rx1564_cstack, rx1564_cstack_done3836
    unless rx1564_cstack, rx1564_cstack_done3836
    dec $I19
    set $P11, rx1564_cstack[$I19]
  rx1564_cstack_done3836:
    pop rx1564_rep, rx1564_bstack
    pop rx1564_pos, rx1564_bstack
    pop $I19, rx1564_bstack
    lt rx1564_pos, -1, rx1564_done3831
    lt rx1564_pos, 0, rx1564_fail3833
    eq $I19, 0, rx1564_fail3833
    nqp_islist $I20, rx1564_cstack
    unless $I20, rx1564_jump3834
    elements $I18, rx1564_bstack
    le $I18, 0, rx1564_cut3835
    dec $I18
    set $I18, rx1564_bstack[$I18]
  rx1564_cut3835:
    assign rx1564_cstack, $I18
  rx1564_jump3834:
    jump $I19
  rx1564_done3831:
    rx1564_cur."!cursor_fail"()
    .return (rx1564_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_206_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1515
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1568_start
    .local string rx1568_tgt
    .local int rx1568_pos
    .local int rx1568_off
    .local int rx1568_eos
    .local int rx1568_rep
    .local pmc rx1568_cur
    .local pmc rx1568_curclass
    .local pmc rx1568_bstack
    .local pmc rx1568_cstack
    rx1568_start = self."!cursor_start_all"()
    set rx1568_cur, rx1568_start[0]
    set rx1568_tgt, rx1568_start[1]
    set rx1568_pos, rx1568_start[2]
    set rx1568_curclass, rx1568_start[3]
    set rx1568_bstack, rx1568_start[4]
    set $I19, rx1568_start[5]
    store_lex unicode:"$\x{a2}", rx1568_cur
    length rx1568_eos, rx1568_tgt
    eq $I19, 1, rx1568_restart3845
    gt rx1568_pos, rx1568_eos, rx1568_fail3846
    repr_get_attr_int $I11, self, rx1568_curclass, "$!from"
    ne $I11, -1, rxscan1569_done3852
    goto rxscan1569_scan3851
  rxscan1569_loop3850:
    inc rx1568_pos
    gt rx1568_pos, rx1568_eos, rx1568_fail3846
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!from", rx1568_pos
  rxscan1569_scan3851:
    nqp_rxmark rx1568_bstack, rxscan1569_loop3850, rx1568_pos, 0
  rxscan1569_done3852:
    nqp_rxmark rx1568_bstack, rxcap1570_fail3854, rx1568_pos, 0
    add $I11, rx1568_pos, 1
    gt $I11, rx1568_eos, rx1568_fail3846
    substr $S10, rx1568_tgt, rx1568_pos, 1
    ne $S10, ucs4:">", rx1568_fail3846
    add rx1568_pos, 1
    nqp_rxpeek $I19, rx1568_bstack, rxcap1570_fail3854
    inc $I19
    set $I11, rx1568_bstack[$I19]
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1568_pos)
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "sym")
    goto rxcap1570_done3853
  rxcap1570_fail3854:
    goto rx1568_fail3846
  rxcap1570_done3853:
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1568_curclass, "$!pos"
    lt $I11, 0, rx1568_fail3846
    nqp_rxmark rx1568_bstack, rxsubrule1571_pass3855, -1, 0
  rxsubrule1571_pass3855:
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1568_pos, $P11, rx1568_curclass, "$!pos"
    rx1568_cur."!cursor_pass"(rx1568_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1568_cur)
  rx1568_restart3845:
    repr_get_attr_obj rx1568_cstack, rx1568_cur, rx1568_curclass, "$!cstack"
  rx1568_fail3846:
    unless rx1568_bstack, rx1568_done3844
    pop $I19, rx1568_bstack
    if_null rx1568_cstack, rx1568_cstack_done3849
    unless rx1568_cstack, rx1568_cstack_done3849
    dec $I19
    set $P11, rx1568_cstack[$I19]
  rx1568_cstack_done3849:
    pop rx1568_rep, rx1568_bstack
    pop rx1568_pos, rx1568_bstack
    pop $I19, rx1568_bstack
    lt rx1568_pos, -1, rx1568_done3844
    lt rx1568_pos, 0, rx1568_fail3846
    eq $I19, 0, rx1568_fail3846
    nqp_islist $I20, rx1568_cstack
    unless $I20, rx1568_jump3847
    elements $I18, rx1568_bstack
    le $I18, 0, rx1568_cut3848
    dec $I18
    set $I18, rx1568_bstack[$I18]
  rx1568_cut3848:
    assign rx1568_cstack, $I18
  rx1568_jump3847:
    jump $I19
  rx1568_done3844:
    rx1568_cur."!cursor_fail"()
    .return (rx1568_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_207_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1516
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1572_start
    .local string rx1572_tgt
    .local int rx1572_pos
    .local int rx1572_off
    .local int rx1572_eos
    .local int rx1572_rep
    .local pmc rx1572_cur
    .local pmc rx1572_curclass
    .local pmc rx1572_bstack
    .local pmc rx1572_cstack
    rx1572_start = self."!cursor_start_all"()
    set rx1572_cur, rx1572_start[0]
    set rx1572_tgt, rx1572_start[1]
    set rx1572_pos, rx1572_start[2]
    set rx1572_curclass, rx1572_start[3]
    set rx1572_bstack, rx1572_start[4]
    set $I19, rx1572_start[5]
    store_lex unicode:"$\x{a2}", rx1572_cur
    length rx1572_eos, rx1572_tgt
    eq $I19, 1, rx1572_restart3858
    gt rx1572_pos, rx1572_eos, rx1572_fail3859
    repr_get_attr_int $I11, self, rx1572_curclass, "$!from"
    ne $I11, -1, rxscan1573_done3865
    goto rxscan1573_scan3864
  rxscan1573_loop3863:
    inc rx1572_pos
    gt rx1572_pos, rx1572_eos, rx1572_fail3859
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!from", rx1572_pos
  rxscan1573_scan3864:
    nqp_rxmark rx1572_bstack, rxscan1573_loop3863, rx1572_pos, 0
  rxscan1573_done3865:
    nqp_rxmark rx1572_bstack, rxcap1574_fail3867, rx1572_pos, 0
    add $I11, rx1572_pos, 2
    gt $I11, rx1572_eos, rx1572_fail3859
    substr $S10, rx1572_tgt, rx1572_pos, 2
    ne $S10, ucs4:"eq", rx1572_fail3859
    add rx1572_pos, 2
    nqp_rxpeek $I19, rx1572_bstack, rxcap1574_fail3867
    inc $I19
    set $I11, rx1572_bstack[$I19]
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1572_pos)
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "sym")
    goto rxcap1574_done3866
  rxcap1574_fail3867:
    goto rx1572_fail3859
  rxcap1574_done3866:
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1572_curclass, "$!pos"
    lt $I11, 0, rx1572_fail3859
    nqp_rxmark rx1572_bstack, rxsubrule1575_pass3868, -1, 0
  rxsubrule1575_pass3868:
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1572_pos, $P11, rx1572_curclass, "$!pos"
    rx1572_cur."!cursor_pass"(rx1572_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1572_cur)
  rx1572_restart3858:
    repr_get_attr_obj rx1572_cstack, rx1572_cur, rx1572_curclass, "$!cstack"
  rx1572_fail3859:
    unless rx1572_bstack, rx1572_done3857
    pop $I19, rx1572_bstack
    if_null rx1572_cstack, rx1572_cstack_done3862
    unless rx1572_cstack, rx1572_cstack_done3862
    dec $I19
    set $P11, rx1572_cstack[$I19]
  rx1572_cstack_done3862:
    pop rx1572_rep, rx1572_bstack
    pop rx1572_pos, rx1572_bstack
    pop $I19, rx1572_bstack
    lt rx1572_pos, -1, rx1572_done3857
    lt rx1572_pos, 0, rx1572_fail3859
    eq $I19, 0, rx1572_fail3859
    nqp_islist $I20, rx1572_cstack
    unless $I20, rx1572_jump3860
    elements $I18, rx1572_bstack
    le $I18, 0, rx1572_cut3861
    dec $I18
    set $I18, rx1572_bstack[$I18]
  rx1572_cut3861:
    assign rx1572_cstack, $I18
  rx1572_jump3860:
    jump $I19
  rx1572_done3857:
    rx1572_cur."!cursor_fail"()
    .return (rx1572_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_208_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1517
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1576_start
    .local string rx1576_tgt
    .local int rx1576_pos
    .local int rx1576_off
    .local int rx1576_eos
    .local int rx1576_rep
    .local pmc rx1576_cur
    .local pmc rx1576_curclass
    .local pmc rx1576_bstack
    .local pmc rx1576_cstack
    rx1576_start = self."!cursor_start_all"()
    set rx1576_cur, rx1576_start[0]
    set rx1576_tgt, rx1576_start[1]
    set rx1576_pos, rx1576_start[2]
    set rx1576_curclass, rx1576_start[3]
    set rx1576_bstack, rx1576_start[4]
    set $I19, rx1576_start[5]
    store_lex unicode:"$\x{a2}", rx1576_cur
    length rx1576_eos, rx1576_tgt
    eq $I19, 1, rx1576_restart3871
    gt rx1576_pos, rx1576_eos, rx1576_fail3872
    repr_get_attr_int $I11, self, rx1576_curclass, "$!from"
    ne $I11, -1, rxscan1577_done3878
    goto rxscan1577_scan3877
  rxscan1577_loop3876:
    inc rx1576_pos
    gt rx1576_pos, rx1576_eos, rx1576_fail3872
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!from", rx1576_pos
  rxscan1577_scan3877:
    nqp_rxmark rx1576_bstack, rxscan1577_loop3876, rx1576_pos, 0
  rxscan1577_done3878:
    nqp_rxmark rx1576_bstack, rxcap1578_fail3880, rx1576_pos, 0
    add $I11, rx1576_pos, 2
    gt $I11, rx1576_eos, rx1576_fail3872
    substr $S10, rx1576_tgt, rx1576_pos, 2
    ne $S10, ucs4:"ne", rx1576_fail3872
    add rx1576_pos, 2
    nqp_rxpeek $I19, rx1576_bstack, rxcap1578_fail3880
    inc $I19
    set $I11, rx1576_bstack[$I19]
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1576_pos)
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "sym")
    goto rxcap1578_done3879
  rxcap1578_fail3880:
    goto rx1576_fail3872
  rxcap1578_done3879:
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3872
    nqp_rxmark rx1576_bstack, rxsubrule1579_pass3881, -1, 0
  rxsubrule1579_pass3881:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
    rx1576_cur."!cursor_pass"(rx1576_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1576_cur)
  rx1576_restart3871:
    repr_get_attr_obj rx1576_cstack, rx1576_cur, rx1576_curclass, "$!cstack"
  rx1576_fail3872:
    unless rx1576_bstack, rx1576_done3870
    pop $I19, rx1576_bstack
    if_null rx1576_cstack, rx1576_cstack_done3875
    unless rx1576_cstack, rx1576_cstack_done3875
    dec $I19
    set $P11, rx1576_cstack[$I19]
  rx1576_cstack_done3875:
    pop rx1576_rep, rx1576_bstack
    pop rx1576_pos, rx1576_bstack
    pop $I19, rx1576_bstack
    lt rx1576_pos, -1, rx1576_done3870
    lt rx1576_pos, 0, rx1576_fail3872
    eq $I19, 0, rx1576_fail3872
    nqp_islist $I20, rx1576_cstack
    unless $I20, rx1576_jump3873
    elements $I18, rx1576_bstack
    le $I18, 0, rx1576_cut3874
    dec $I18
    set $I18, rx1576_bstack[$I18]
  rx1576_cut3874:
    assign rx1576_cstack, $I18
  rx1576_jump3873:
    jump $I19
  rx1576_done3870:
    rx1576_cur."!cursor_fail"()
    .return (rx1576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_209_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1518
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1580_start
    .local string rx1580_tgt
    .local int rx1580_pos
    .local int rx1580_off
    .local int rx1580_eos
    .local int rx1580_rep
    .local pmc rx1580_cur
    .local pmc rx1580_curclass
    .local pmc rx1580_bstack
    .local pmc rx1580_cstack
    rx1580_start = self."!cursor_start_all"()
    set rx1580_cur, rx1580_start[0]
    set rx1580_tgt, rx1580_start[1]
    set rx1580_pos, rx1580_start[2]
    set rx1580_curclass, rx1580_start[3]
    set rx1580_bstack, rx1580_start[4]
    set $I19, rx1580_start[5]
    store_lex unicode:"$\x{a2}", rx1580_cur
    length rx1580_eos, rx1580_tgt
    eq $I19, 1, rx1580_restart3884
    gt rx1580_pos, rx1580_eos, rx1580_fail3885
    repr_get_attr_int $I11, self, rx1580_curclass, "$!from"
    ne $I11, -1, rxscan1581_done3891
    goto rxscan1581_scan3890
  rxscan1581_loop3889:
    inc rx1580_pos
    gt rx1580_pos, rx1580_eos, rx1580_fail3885
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!from", rx1580_pos
  rxscan1581_scan3890:
    nqp_rxmark rx1580_bstack, rxscan1581_loop3889, rx1580_pos, 0
  rxscan1581_done3891:
    nqp_rxmark rx1580_bstack, rxcap1582_fail3893, rx1580_pos, 0
    add $I11, rx1580_pos, 2
    gt $I11, rx1580_eos, rx1580_fail3885
    substr $S10, rx1580_tgt, rx1580_pos, 2
    ne $S10, ucs4:"le", rx1580_fail3885
    add rx1580_pos, 2
    nqp_rxpeek $I19, rx1580_bstack, rxcap1582_fail3893
    inc $I19
    set $I11, rx1580_bstack[$I19]
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!pos", rx1580_pos
    $P11 = rx1580_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1580_pos)
    rx1580_cstack = rx1580_cur."!cursor_capture"($P11, "sym")
    goto rxcap1582_done3892
  rxcap1582_fail3893:
    goto rx1580_fail3885
  rxcap1582_done3892:
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!pos", rx1580_pos
    $P11 = rx1580_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1580_curclass, "$!pos"
    lt $I11, 0, rx1580_fail3885
    nqp_rxmark rx1580_bstack, rxsubrule1583_pass3894, -1, 0
  rxsubrule1583_pass3894:
    rx1580_cstack = rx1580_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1580_pos, $P11, rx1580_curclass, "$!pos"
    rx1580_cur."!cursor_pass"(rx1580_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1580_cur)
  rx1580_restart3884:
    repr_get_attr_obj rx1580_cstack, rx1580_cur, rx1580_curclass, "$!cstack"
  rx1580_fail3885:
    unless rx1580_bstack, rx1580_done3883
    pop $I19, rx1580_bstack
    if_null rx1580_cstack, rx1580_cstack_done3888
    unless rx1580_cstack, rx1580_cstack_done3888
    dec $I19
    set $P11, rx1580_cstack[$I19]
  rx1580_cstack_done3888:
    pop rx1580_rep, rx1580_bstack
    pop rx1580_pos, rx1580_bstack
    pop $I19, rx1580_bstack
    lt rx1580_pos, -1, rx1580_done3883
    lt rx1580_pos, 0, rx1580_fail3885
    eq $I19, 0, rx1580_fail3885
    nqp_islist $I20, rx1580_cstack
    unless $I20, rx1580_jump3886
    elements $I18, rx1580_bstack
    le $I18, 0, rx1580_cut3887
    dec $I18
    set $I18, rx1580_bstack[$I18]
  rx1580_cut3887:
    assign rx1580_cstack, $I18
  rx1580_jump3886:
    jump $I19
  rx1580_done3883:
    rx1580_cur."!cursor_fail"()
    .return (rx1580_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_210_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1519
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1584_start
    .local string rx1584_tgt
    .local int rx1584_pos
    .local int rx1584_off
    .local int rx1584_eos
    .local int rx1584_rep
    .local pmc rx1584_cur
    .local pmc rx1584_curclass
    .local pmc rx1584_bstack
    .local pmc rx1584_cstack
    rx1584_start = self."!cursor_start_all"()
    set rx1584_cur, rx1584_start[0]
    set rx1584_tgt, rx1584_start[1]
    set rx1584_pos, rx1584_start[2]
    set rx1584_curclass, rx1584_start[3]
    set rx1584_bstack, rx1584_start[4]
    set $I19, rx1584_start[5]
    store_lex unicode:"$\x{a2}", rx1584_cur
    length rx1584_eos, rx1584_tgt
    eq $I19, 1, rx1584_restart3897
    gt rx1584_pos, rx1584_eos, rx1584_fail3898
    repr_get_attr_int $I11, self, rx1584_curclass, "$!from"
    ne $I11, -1, rxscan1585_done3904
    goto rxscan1585_scan3903
  rxscan1585_loop3902:
    inc rx1584_pos
    gt rx1584_pos, rx1584_eos, rx1584_fail3898
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!from", rx1584_pos
  rxscan1585_scan3903:
    nqp_rxmark rx1584_bstack, rxscan1585_loop3902, rx1584_pos, 0
  rxscan1585_done3904:
    nqp_rxmark rx1584_bstack, rxcap1586_fail3906, rx1584_pos, 0
    add $I11, rx1584_pos, 2
    gt $I11, rx1584_eos, rx1584_fail3898
    substr $S10, rx1584_tgt, rx1584_pos, 2
    ne $S10, ucs4:"ge", rx1584_fail3898
    add rx1584_pos, 2
    nqp_rxpeek $I19, rx1584_bstack, rxcap1586_fail3906
    inc $I19
    set $I11, rx1584_bstack[$I19]
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!pos", rx1584_pos
    $P11 = rx1584_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1584_pos)
    rx1584_cstack = rx1584_cur."!cursor_capture"($P11, "sym")
    goto rxcap1586_done3905
  rxcap1586_fail3906:
    goto rx1584_fail3898
  rxcap1586_done3905:
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!pos", rx1584_pos
    $P11 = rx1584_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1584_curclass, "$!pos"
    lt $I11, 0, rx1584_fail3898
    nqp_rxmark rx1584_bstack, rxsubrule1587_pass3907, -1, 0
  rxsubrule1587_pass3907:
    rx1584_cstack = rx1584_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1584_pos, $P11, rx1584_curclass, "$!pos"
    rx1584_cur."!cursor_pass"(rx1584_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1584_cur)
  rx1584_restart3897:
    repr_get_attr_obj rx1584_cstack, rx1584_cur, rx1584_curclass, "$!cstack"
  rx1584_fail3898:
    unless rx1584_bstack, rx1584_done3896
    pop $I19, rx1584_bstack
    if_null rx1584_cstack, rx1584_cstack_done3901
    unless rx1584_cstack, rx1584_cstack_done3901
    dec $I19
    set $P11, rx1584_cstack[$I19]
  rx1584_cstack_done3901:
    pop rx1584_rep, rx1584_bstack
    pop rx1584_pos, rx1584_bstack
    pop $I19, rx1584_bstack
    lt rx1584_pos, -1, rx1584_done3896
    lt rx1584_pos, 0, rx1584_fail3898
    eq $I19, 0, rx1584_fail3898
    nqp_islist $I20, rx1584_cstack
    unless $I20, rx1584_jump3899
    elements $I18, rx1584_bstack
    le $I18, 0, rx1584_cut3900
    dec $I18
    set $I18, rx1584_bstack[$I18]
  rx1584_cut3900:
    assign rx1584_cstack, $I18
  rx1584_jump3899:
    jump $I19
  rx1584_done3896:
    rx1584_cur."!cursor_fail"()
    .return (rx1584_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_211_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1520
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1588_start
    .local string rx1588_tgt
    .local int rx1588_pos
    .local int rx1588_off
    .local int rx1588_eos
    .local int rx1588_rep
    .local pmc rx1588_cur
    .local pmc rx1588_curclass
    .local pmc rx1588_bstack
    .local pmc rx1588_cstack
    rx1588_start = self."!cursor_start_all"()
    set rx1588_cur, rx1588_start[0]
    set rx1588_tgt, rx1588_start[1]
    set rx1588_pos, rx1588_start[2]
    set rx1588_curclass, rx1588_start[3]
    set rx1588_bstack, rx1588_start[4]
    set $I19, rx1588_start[5]
    store_lex unicode:"$\x{a2}", rx1588_cur
    length rx1588_eos, rx1588_tgt
    eq $I19, 1, rx1588_restart3910
    gt rx1588_pos, rx1588_eos, rx1588_fail3911
    repr_get_attr_int $I11, self, rx1588_curclass, "$!from"
    ne $I11, -1, rxscan1589_done3917
    goto rxscan1589_scan3916
  rxscan1589_loop3915:
    inc rx1588_pos
    gt rx1588_pos, rx1588_eos, rx1588_fail3911
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!from", rx1588_pos
  rxscan1589_scan3916:
    nqp_rxmark rx1588_bstack, rxscan1589_loop3915, rx1588_pos, 0
  rxscan1589_done3917:
    nqp_rxmark rx1588_bstack, rxcap1590_fail3919, rx1588_pos, 0
    add $I11, rx1588_pos, 2
    gt $I11, rx1588_eos, rx1588_fail3911
    substr $S10, rx1588_tgt, rx1588_pos, 2
    ne $S10, ucs4:"lt", rx1588_fail3911
    add rx1588_pos, 2
    nqp_rxpeek $I19, rx1588_bstack, rxcap1590_fail3919
    inc $I19
    set $I11, rx1588_bstack[$I19]
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1588_pos)
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "sym")
    goto rxcap1590_done3918
  rxcap1590_fail3919:
    goto rx1588_fail3911
  rxcap1590_done3918:
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1588_curclass, "$!pos"
    lt $I11, 0, rx1588_fail3911
    nqp_rxmark rx1588_bstack, rxsubrule1591_pass3920, -1, 0
  rxsubrule1591_pass3920:
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1588_pos, $P11, rx1588_curclass, "$!pos"
    rx1588_cur."!cursor_pass"(rx1588_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1588_cur)
  rx1588_restart3910:
    repr_get_attr_obj rx1588_cstack, rx1588_cur, rx1588_curclass, "$!cstack"
  rx1588_fail3911:
    unless rx1588_bstack, rx1588_done3909
    pop $I19, rx1588_bstack
    if_null rx1588_cstack, rx1588_cstack_done3914
    unless rx1588_cstack, rx1588_cstack_done3914
    dec $I19
    set $P11, rx1588_cstack[$I19]
  rx1588_cstack_done3914:
    pop rx1588_rep, rx1588_bstack
    pop rx1588_pos, rx1588_bstack
    pop $I19, rx1588_bstack
    lt rx1588_pos, -1, rx1588_done3909
    lt rx1588_pos, 0, rx1588_fail3911
    eq $I19, 0, rx1588_fail3911
    nqp_islist $I20, rx1588_cstack
    unless $I20, rx1588_jump3912
    elements $I18, rx1588_bstack
    le $I18, 0, rx1588_cut3913
    dec $I18
    set $I18, rx1588_bstack[$I18]
  rx1588_cut3913:
    assign rx1588_cstack, $I18
  rx1588_jump3912:
    jump $I19
  rx1588_done3909:
    rx1588_cur."!cursor_fail"()
    .return (rx1588_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_212_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1521
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1592_start
    .local string rx1592_tgt
    .local int rx1592_pos
    .local int rx1592_off
    .local int rx1592_eos
    .local int rx1592_rep
    .local pmc rx1592_cur
    .local pmc rx1592_curclass
    .local pmc rx1592_bstack
    .local pmc rx1592_cstack
    rx1592_start = self."!cursor_start_all"()
    set rx1592_cur, rx1592_start[0]
    set rx1592_tgt, rx1592_start[1]
    set rx1592_pos, rx1592_start[2]
    set rx1592_curclass, rx1592_start[3]
    set rx1592_bstack, rx1592_start[4]
    set $I19, rx1592_start[5]
    store_lex unicode:"$\x{a2}", rx1592_cur
    length rx1592_eos, rx1592_tgt
    eq $I19, 1, rx1592_restart3923
    gt rx1592_pos, rx1592_eos, rx1592_fail3924
    repr_get_attr_int $I11, self, rx1592_curclass, "$!from"
    ne $I11, -1, rxscan1593_done3930
    goto rxscan1593_scan3929
  rxscan1593_loop3928:
    inc rx1592_pos
    gt rx1592_pos, rx1592_eos, rx1592_fail3924
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!from", rx1592_pos
  rxscan1593_scan3929:
    nqp_rxmark rx1592_bstack, rxscan1593_loop3928, rx1592_pos, 0
  rxscan1593_done3930:
    nqp_rxmark rx1592_bstack, rxcap1594_fail3932, rx1592_pos, 0
    add $I11, rx1592_pos, 2
    gt $I11, rx1592_eos, rx1592_fail3924
    substr $S10, rx1592_tgt, rx1592_pos, 2
    ne $S10, ucs4:"gt", rx1592_fail3924
    add rx1592_pos, 2
    nqp_rxpeek $I19, rx1592_bstack, rxcap1594_fail3932
    inc $I19
    set $I11, rx1592_bstack[$I19]
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1592_pos)
    rx1592_cstack = rx1592_cur."!cursor_capture"($P11, "sym")
    goto rxcap1594_done3931
  rxcap1594_fail3932:
    goto rx1592_fail3924
  rxcap1594_done3931:
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1592_curclass, "$!pos"
    lt $I11, 0, rx1592_fail3924
    nqp_rxmark rx1592_bstack, rxsubrule1595_pass3933, -1, 0
  rxsubrule1595_pass3933:
    rx1592_cstack = rx1592_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1592_pos, $P11, rx1592_curclass, "$!pos"
    rx1592_cur."!cursor_pass"(rx1592_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1592_cur)
  rx1592_restart3923:
    repr_get_attr_obj rx1592_cstack, rx1592_cur, rx1592_curclass, "$!cstack"
  rx1592_fail3924:
    unless rx1592_bstack, rx1592_done3922
    pop $I19, rx1592_bstack
    if_null rx1592_cstack, rx1592_cstack_done3927
    unless rx1592_cstack, rx1592_cstack_done3927
    dec $I19
    set $P11, rx1592_cstack[$I19]
  rx1592_cstack_done3927:
    pop rx1592_rep, rx1592_bstack
    pop rx1592_pos, rx1592_bstack
    pop $I19, rx1592_bstack
    lt rx1592_pos, -1, rx1592_done3922
    lt rx1592_pos, 0, rx1592_fail3924
    eq $I19, 0, rx1592_fail3924
    nqp_islist $I20, rx1592_cstack
    unless $I20, rx1592_jump3925
    elements $I18, rx1592_bstack
    le $I18, 0, rx1592_cut3926
    dec $I18
    set $I18, rx1592_bstack[$I18]
  rx1592_cut3926:
    assign rx1592_cstack, $I18
  rx1592_jump3925:
    jump $I19
  rx1592_done3922:
    rx1592_cur."!cursor_fail"()
    .return (rx1592_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_213_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1522
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1596_start
    .local string rx1596_tgt
    .local int rx1596_pos
    .local int rx1596_off
    .local int rx1596_eos
    .local int rx1596_rep
    .local pmc rx1596_cur
    .local pmc rx1596_curclass
    .local pmc rx1596_bstack
    .local pmc rx1596_cstack
    rx1596_start = self."!cursor_start_all"()
    set rx1596_cur, rx1596_start[0]
    set rx1596_tgt, rx1596_start[1]
    set rx1596_pos, rx1596_start[2]
    set rx1596_curclass, rx1596_start[3]
    set rx1596_bstack, rx1596_start[4]
    set $I19, rx1596_start[5]
    store_lex unicode:"$\x{a2}", rx1596_cur
    length rx1596_eos, rx1596_tgt
    eq $I19, 1, rx1596_restart3936
    gt rx1596_pos, rx1596_eos, rx1596_fail3937
    repr_get_attr_int $I11, self, rx1596_curclass, "$!from"
    ne $I11, -1, rxscan1597_done3943
    goto rxscan1597_scan3942
  rxscan1597_loop3941:
    inc rx1596_pos
    gt rx1596_pos, rx1596_eos, rx1596_fail3937
    repr_bind_attr_int rx1596_cur, rx1596_curclass, "$!from", rx1596_pos
  rxscan1597_scan3942:
    nqp_rxmark rx1596_bstack, rxscan1597_loop3941, rx1596_pos, 0
  rxscan1597_done3943:
    nqp_rxmark rx1596_bstack, rxcap1598_fail3945, rx1596_pos, 0
    add $I11, rx1596_pos, 3
    gt $I11, rx1596_eos, rx1596_fail3937
    substr $S10, rx1596_tgt, rx1596_pos, 3
    ne $S10, ucs4:"=:=", rx1596_fail3937
    add rx1596_pos, 3
    nqp_rxpeek $I19, rx1596_bstack, rxcap1598_fail3945
    inc $I19
    set $I11, rx1596_bstack[$I19]
    repr_bind_attr_int rx1596_cur, rx1596_curclass, "$!pos", rx1596_pos
    $P11 = rx1596_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1596_pos)
    rx1596_cstack = rx1596_cur."!cursor_capture"($P11, "sym")
    goto rxcap1598_done3944
  rxcap1598_fail3945:
    goto rx1596_fail3937
  rxcap1598_done3944:
    repr_bind_attr_int rx1596_cur, rx1596_curclass, "$!pos", rx1596_pos
    $P11 = rx1596_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1596_curclass, "$!pos"
    lt $I11, 0, rx1596_fail3937
    nqp_rxmark rx1596_bstack, rxsubrule1599_pass3946, -1, 0
  rxsubrule1599_pass3946:
    rx1596_cstack = rx1596_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1596_pos, $P11, rx1596_curclass, "$!pos"
    rx1596_cur."!cursor_pass"(rx1596_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1596_cur)
  rx1596_restart3936:
    repr_get_attr_obj rx1596_cstack, rx1596_cur, rx1596_curclass, "$!cstack"
  rx1596_fail3937:
    unless rx1596_bstack, rx1596_done3935
    pop $I19, rx1596_bstack
    if_null rx1596_cstack, rx1596_cstack_done3940
    unless rx1596_cstack, rx1596_cstack_done3940
    dec $I19
    set $P11, rx1596_cstack[$I19]
  rx1596_cstack_done3940:
    pop rx1596_rep, rx1596_bstack
    pop rx1596_pos, rx1596_bstack
    pop $I19, rx1596_bstack
    lt rx1596_pos, -1, rx1596_done3935
    lt rx1596_pos, 0, rx1596_fail3937
    eq $I19, 0, rx1596_fail3937
    nqp_islist $I20, rx1596_cstack
    unless $I20, rx1596_jump3938
    elements $I18, rx1596_bstack
    le $I18, 0, rx1596_cut3939
    dec $I18
    set $I18, rx1596_bstack[$I18]
  rx1596_cut3939:
    assign rx1596_cstack, $I18
  rx1596_jump3938:
    jump $I19
  rx1596_done3935:
    rx1596_cur."!cursor_fail"()
    .return (rx1596_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_214_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1523
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1600_start
    .local string rx1600_tgt
    .local int rx1600_pos
    .local int rx1600_off
    .local int rx1600_eos
    .local int rx1600_rep
    .local pmc rx1600_cur
    .local pmc rx1600_curclass
    .local pmc rx1600_bstack
    .local pmc rx1600_cstack
    rx1600_start = self."!cursor_start_all"()
    set rx1600_cur, rx1600_start[0]
    set rx1600_tgt, rx1600_start[1]
    set rx1600_pos, rx1600_start[2]
    set rx1600_curclass, rx1600_start[3]
    set rx1600_bstack, rx1600_start[4]
    set $I19, rx1600_start[5]
    store_lex unicode:"$\x{a2}", rx1600_cur
    length rx1600_eos, rx1600_tgt
    eq $I19, 1, rx1600_restart3949
    gt rx1600_pos, rx1600_eos, rx1600_fail3950
    repr_get_attr_int $I11, self, rx1600_curclass, "$!from"
    ne $I11, -1, rxscan1601_done3956
    goto rxscan1601_scan3955
  rxscan1601_loop3954:
    inc rx1600_pos
    gt rx1600_pos, rx1600_eos, rx1600_fail3950
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!from", rx1600_pos
  rxscan1601_scan3955:
    nqp_rxmark rx1600_bstack, rxscan1601_loop3954, rx1600_pos, 0
  rxscan1601_done3956:
    nqp_rxmark rx1600_bstack, rxcap1602_fail3958, rx1600_pos, 0
    add $I11, rx1600_pos, 2
    gt $I11, rx1600_eos, rx1600_fail3950
    substr $S10, rx1600_tgt, rx1600_pos, 2
    ne $S10, ucs4:"~~", rx1600_fail3950
    add rx1600_pos, 2
    nqp_rxpeek $I19, rx1600_bstack, rxcap1602_fail3958
    inc $I19
    set $I11, rx1600_bstack[$I19]
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!pos", rx1600_pos
    $P11 = rx1600_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1600_pos)
    rx1600_cstack = rx1600_cur."!cursor_capture"($P11, "sym")
    goto rxcap1602_done3957
  rxcap1602_fail3958:
    goto rx1600_fail3950
  rxcap1602_done3957:
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!pos", rx1600_pos
    $P11 = rx1600_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1600_curclass, "$!pos"
    lt $I11, 0, rx1600_fail3950
    nqp_rxmark rx1600_bstack, rxsubrule1603_pass3959, -1, 0
  rxsubrule1603_pass3959:
    rx1600_cstack = rx1600_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1600_pos, $P11, rx1600_curclass, "$!pos"
    rx1600_cur."!cursor_pass"(rx1600_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1600_cur)
  rx1600_restart3949:
    repr_get_attr_obj rx1600_cstack, rx1600_cur, rx1600_curclass, "$!cstack"
  rx1600_fail3950:
    unless rx1600_bstack, rx1600_done3948
    pop $I19, rx1600_bstack
    if_null rx1600_cstack, rx1600_cstack_done3953
    unless rx1600_cstack, rx1600_cstack_done3953
    dec $I19
    set $P11, rx1600_cstack[$I19]
  rx1600_cstack_done3953:
    pop rx1600_rep, rx1600_bstack
    pop rx1600_pos, rx1600_bstack
    pop $I19, rx1600_bstack
    lt rx1600_pos, -1, rx1600_done3948
    lt rx1600_pos, 0, rx1600_fail3950
    eq $I19, 0, rx1600_fail3950
    nqp_islist $I20, rx1600_cstack
    unless $I20, rx1600_jump3951
    elements $I18, rx1600_bstack
    le $I18, 0, rx1600_cut3952
    dec $I18
    set $I18, rx1600_bstack[$I18]
  rx1600_cut3952:
    assign rx1600_cstack, $I18
  rx1600_jump3951:
    jump $I19
  rx1600_done3948:
    rx1600_cur."!cursor_fail"()
    .return (rx1600_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_215_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1525
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1604_start
    .local string rx1604_tgt
    .local int rx1604_pos
    .local int rx1604_off
    .local int rx1604_eos
    .local int rx1604_rep
    .local pmc rx1604_cur
    .local pmc rx1604_curclass
    .local pmc rx1604_bstack
    .local pmc rx1604_cstack
    rx1604_start = self."!cursor_start_all"()
    set rx1604_cur, rx1604_start[0]
    set rx1604_tgt, rx1604_start[1]
    set rx1604_pos, rx1604_start[2]
    set rx1604_curclass, rx1604_start[3]
    set rx1604_bstack, rx1604_start[4]
    set $I19, rx1604_start[5]
    store_lex unicode:"$\x{a2}", rx1604_cur
    length rx1604_eos, rx1604_tgt
    eq $I19, 1, rx1604_restart3962
    gt rx1604_pos, rx1604_eos, rx1604_fail3963
    repr_get_attr_int $I11, self, rx1604_curclass, "$!from"
    ne $I11, -1, rxscan1605_done3969
    goto rxscan1605_scan3968
  rxscan1605_loop3967:
    inc rx1604_pos
    gt rx1604_pos, rx1604_eos, rx1604_fail3963
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!from", rx1604_pos
  rxscan1605_scan3968:
    nqp_rxmark rx1604_bstack, rxscan1605_loop3967, rx1604_pos, 0
  rxscan1605_done3969:
    nqp_rxmark rx1604_bstack, rxcap1606_fail3971, rx1604_pos, 0
    add $I11, rx1604_pos, 2
    gt $I11, rx1604_eos, rx1604_fail3963
    substr $S10, rx1604_tgt, rx1604_pos, 2
    ne $S10, ucs4:"&&", rx1604_fail3963
    add rx1604_pos, 2
    nqp_rxpeek $I19, rx1604_bstack, rxcap1606_fail3971
    inc $I19
    set $I11, rx1604_bstack[$I19]
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!pos", rx1604_pos
    $P11 = rx1604_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1604_pos)
    rx1604_cstack = rx1604_cur."!cursor_capture"($P11, "sym")
    goto rxcap1606_done3970
  rxcap1606_fail3971:
    goto rx1604_fail3963
  rxcap1606_done3970:
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!pos", rx1604_pos
    $P11 = rx1604_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1604_curclass, "$!pos"
    lt $I11, 0, rx1604_fail3963
    nqp_rxmark rx1604_bstack, rxsubrule1607_pass3972, -1, 0
  rxsubrule1607_pass3972:
    rx1604_cstack = rx1604_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1604_pos, $P11, rx1604_curclass, "$!pos"
    rx1604_cur."!cursor_pass"(rx1604_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1604_cur)
  rx1604_restart3962:
    repr_get_attr_obj rx1604_cstack, rx1604_cur, rx1604_curclass, "$!cstack"
  rx1604_fail3963:
    unless rx1604_bstack, rx1604_done3961
    pop $I19, rx1604_bstack
    if_null rx1604_cstack, rx1604_cstack_done3966
    unless rx1604_cstack, rx1604_cstack_done3966
    dec $I19
    set $P11, rx1604_cstack[$I19]
  rx1604_cstack_done3966:
    pop rx1604_rep, rx1604_bstack
    pop rx1604_pos, rx1604_bstack
    pop $I19, rx1604_bstack
    lt rx1604_pos, -1, rx1604_done3961
    lt rx1604_pos, 0, rx1604_fail3963
    eq $I19, 0, rx1604_fail3963
    nqp_islist $I20, rx1604_cstack
    unless $I20, rx1604_jump3964
    elements $I18, rx1604_bstack
    le $I18, 0, rx1604_cut3965
    dec $I18
    set $I18, rx1604_bstack[$I18]
  rx1604_cut3965:
    assign rx1604_cstack, $I18
  rx1604_jump3964:
    jump $I19
  rx1604_done3961:
    rx1604_cur."!cursor_fail"()
    .return (rx1604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_216_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1527
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1608_start
    .local string rx1608_tgt
    .local int rx1608_pos
    .local int rx1608_off
    .local int rx1608_eos
    .local int rx1608_rep
    .local pmc rx1608_cur
    .local pmc rx1608_curclass
    .local pmc rx1608_bstack
    .local pmc rx1608_cstack
    rx1608_start = self."!cursor_start_all"()
    set rx1608_cur, rx1608_start[0]
    set rx1608_tgt, rx1608_start[1]
    set rx1608_pos, rx1608_start[2]
    set rx1608_curclass, rx1608_start[3]
    set rx1608_bstack, rx1608_start[4]
    set $I19, rx1608_start[5]
    store_lex unicode:"$\x{a2}", rx1608_cur
    length rx1608_eos, rx1608_tgt
    eq $I19, 1, rx1608_restart3975
    gt rx1608_pos, rx1608_eos, rx1608_fail3976
    repr_get_attr_int $I11, self, rx1608_curclass, "$!from"
    ne $I11, -1, rxscan1609_done3982
    goto rxscan1609_scan3981
  rxscan1609_loop3980:
    inc rx1608_pos
    gt rx1608_pos, rx1608_eos, rx1608_fail3976
    repr_bind_attr_int rx1608_cur, rx1608_curclass, "$!from", rx1608_pos
  rxscan1609_scan3981:
    nqp_rxmark rx1608_bstack, rxscan1609_loop3980, rx1608_pos, 0
  rxscan1609_done3982:
    nqp_rxmark rx1608_bstack, rxcap1610_fail3984, rx1608_pos, 0
    add $I11, rx1608_pos, 2
    gt $I11, rx1608_eos, rx1608_fail3976
    substr $S10, rx1608_tgt, rx1608_pos, 2
    ne $S10, ucs4:"||", rx1608_fail3976
    add rx1608_pos, 2
    nqp_rxpeek $I19, rx1608_bstack, rxcap1610_fail3984
    inc $I19
    set $I11, rx1608_bstack[$I19]
    repr_bind_attr_int rx1608_cur, rx1608_curclass, "$!pos", rx1608_pos
    $P11 = rx1608_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1608_pos)
    rx1608_cstack = rx1608_cur."!cursor_capture"($P11, "sym")
    goto rxcap1610_done3983
  rxcap1610_fail3984:
    goto rx1608_fail3976
  rxcap1610_done3983:
    repr_bind_attr_int rx1608_cur, rx1608_curclass, "$!pos", rx1608_pos
    $P11 = rx1608_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1608_curclass, "$!pos"
    lt $I11, 0, rx1608_fail3976
    nqp_rxmark rx1608_bstack, rxsubrule1611_pass3985, -1, 0
  rxsubrule1611_pass3985:
    rx1608_cstack = rx1608_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1608_pos, $P11, rx1608_curclass, "$!pos"
    rx1608_cur."!cursor_pass"(rx1608_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1608_cur)
  rx1608_restart3975:
    repr_get_attr_obj rx1608_cstack, rx1608_cur, rx1608_curclass, "$!cstack"
  rx1608_fail3976:
    unless rx1608_bstack, rx1608_done3974
    pop $I19, rx1608_bstack
    if_null rx1608_cstack, rx1608_cstack_done3979
    unless rx1608_cstack, rx1608_cstack_done3979
    dec $I19
    set $P11, rx1608_cstack[$I19]
  rx1608_cstack_done3979:
    pop rx1608_rep, rx1608_bstack
    pop rx1608_pos, rx1608_bstack
    pop $I19, rx1608_bstack
    lt rx1608_pos, -1, rx1608_done3974
    lt rx1608_pos, 0, rx1608_fail3976
    eq $I19, 0, rx1608_fail3976
    nqp_islist $I20, rx1608_cstack
    unless $I20, rx1608_jump3977
    elements $I18, rx1608_bstack
    le $I18, 0, rx1608_cut3978
    dec $I18
    set $I18, rx1608_bstack[$I18]
  rx1608_cut3978:
    assign rx1608_cstack, $I18
  rx1608_jump3977:
    jump $I19
  rx1608_done3974:
    rx1608_cur."!cursor_fail"()
    .return (rx1608_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_217_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1528
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1612_start
    .local string rx1612_tgt
    .local int rx1612_pos
    .local int rx1612_off
    .local int rx1612_eos
    .local int rx1612_rep
    .local pmc rx1612_cur
    .local pmc rx1612_curclass
    .local pmc rx1612_bstack
    .local pmc rx1612_cstack
    rx1612_start = self."!cursor_start_all"()
    set rx1612_cur, rx1612_start[0]
    set rx1612_tgt, rx1612_start[1]
    set rx1612_pos, rx1612_start[2]
    set rx1612_curclass, rx1612_start[3]
    set rx1612_bstack, rx1612_start[4]
    set $I19, rx1612_start[5]
    store_lex unicode:"$\x{a2}", rx1612_cur
    length rx1612_eos, rx1612_tgt
    eq $I19, 1, rx1612_restart3988
    gt rx1612_pos, rx1612_eos, rx1612_fail3989
    repr_get_attr_int $I11, self, rx1612_curclass, "$!from"
    ne $I11, -1, rxscan1613_done3995
    goto rxscan1613_scan3994
  rxscan1613_loop3993:
    inc rx1612_pos
    gt rx1612_pos, rx1612_eos, rx1612_fail3989
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!from", rx1612_pos
  rxscan1613_scan3994:
    nqp_rxmark rx1612_bstack, rxscan1613_loop3993, rx1612_pos, 0
  rxscan1613_done3995:
    nqp_rxmark rx1612_bstack, rxcap1614_fail3997, rx1612_pos, 0
    add $I11, rx1612_pos, 2
    gt $I11, rx1612_eos, rx1612_fail3989
    substr $S10, rx1612_tgt, rx1612_pos, 2
    ne $S10, ucs4:"//", rx1612_fail3989
    add rx1612_pos, 2
    nqp_rxpeek $I19, rx1612_bstack, rxcap1614_fail3997
    inc $I19
    set $I11, rx1612_bstack[$I19]
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1612_pos)
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "sym")
    goto rxcap1614_done3996
  rxcap1614_fail3997:
    goto rx1612_fail3989
  rxcap1614_done3996:
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1612_curclass, "$!pos"
    lt $I11, 0, rx1612_fail3989
    nqp_rxmark rx1612_bstack, rxsubrule1615_pass3998, -1, 0
  rxsubrule1615_pass3998:
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1612_pos, $P11, rx1612_curclass, "$!pos"
    rx1612_cur."!cursor_pass"(rx1612_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1612_cur)
  rx1612_restart3988:
    repr_get_attr_obj rx1612_cstack, rx1612_cur, rx1612_curclass, "$!cstack"
  rx1612_fail3989:
    unless rx1612_bstack, rx1612_done3987
    pop $I19, rx1612_bstack
    if_null rx1612_cstack, rx1612_cstack_done3992
    unless rx1612_cstack, rx1612_cstack_done3992
    dec $I19
    set $P11, rx1612_cstack[$I19]
  rx1612_cstack_done3992:
    pop rx1612_rep, rx1612_bstack
    pop rx1612_pos, rx1612_bstack
    pop $I19, rx1612_bstack
    lt rx1612_pos, -1, rx1612_done3987
    lt rx1612_pos, 0, rx1612_fail3989
    eq $I19, 0, rx1612_fail3989
    nqp_islist $I20, rx1612_cstack
    unless $I20, rx1612_jump3990
    elements $I18, rx1612_bstack
    le $I18, 0, rx1612_cut3991
    dec $I18
    set $I18, rx1612_bstack[$I18]
  rx1612_cut3991:
    assign rx1612_cstack, $I18
  rx1612_jump3990:
    jump $I19
  rx1612_done3987:
    rx1612_cur."!cursor_fail"()
    .return (rx1612_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_218_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1530
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1616_start
    .local string rx1616_tgt
    .local int rx1616_pos
    .local int rx1616_off
    .local int rx1616_eos
    .local int rx1616_rep
    .local pmc rx1616_cur
    .local pmc rx1616_curclass
    .local pmc rx1616_bstack
    .local pmc rx1616_cstack
    rx1616_start = self."!cursor_start_all"()
    set rx1616_cur, rx1616_start[0]
    set rx1616_tgt, rx1616_start[1]
    set rx1616_pos, rx1616_start[2]
    set rx1616_curclass, rx1616_start[3]
    set rx1616_bstack, rx1616_start[4]
    set $I19, rx1616_start[5]
    store_lex unicode:"$\x{a2}", rx1616_cur
    length rx1616_eos, rx1616_tgt
    eq $I19, 1, rx1616_restart4001
    gt rx1616_pos, rx1616_eos, rx1616_fail4002
    repr_get_attr_int $I11, self, rx1616_curclass, "$!from"
    ne $I11, -1, rxscan1617_done4008
    goto rxscan1617_scan4007
  rxscan1617_loop4006:
    inc rx1616_pos
    index rx1616_pos, rx1616_tgt, ucs4:"??", rx1616_pos
    eq rx1616_pos, -1, rx1616_fail4002
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!from", rx1616_pos
  rxscan1617_scan4007:
    nqp_rxmark rx1616_bstack, rxscan1617_loop4006, rx1616_pos, 0
  rxscan1617_done4008:
    add $I11, rx1616_pos, 2
    gt $I11, rx1616_eos, rx1616_fail4002
    substr $S10, rx1616_tgt, rx1616_pos, 2
    ne $S10, ucs4:"??", rx1616_fail4002
    add rx1616_pos, 2
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1616_curclass, "$!pos"
    lt $I11, 0, rx1616_fail4002
    repr_get_attr_int rx1616_pos, $P11, rx1616_curclass, "$!pos"
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1616_curclass, "$!pos"
    lt $I11, 0, rx1616_fail4002
    nqp_rxmark rx1616_bstack, rxsubrule1619_pass4010, -1, 0
  rxsubrule1619_pass4010:
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1616_pos, $P11, rx1616_curclass, "$!pos"
    add $I11, rx1616_pos, 2
    gt $I11, rx1616_eos, rx1616_fail4002
    substr $S10, rx1616_tgt, rx1616_pos, 2
    ne $S10, ucs4:"!!", rx1616_fail4002
    add rx1616_pos, 2
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1616_curclass, "$!pos"
    lt $I11, 0, rx1616_fail4002
    nqp_rxmark rx1616_bstack, rxsubrule1620_pass4011, -1, 0
  rxsubrule1620_pass4011:
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1616_pos, $P11, rx1616_curclass, "$!pos"
    rx1616_cur."!cursor_pass"(rx1616_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1616_cur)
  rx1616_restart4001:
    repr_get_attr_obj rx1616_cstack, rx1616_cur, rx1616_curclass, "$!cstack"
  rx1616_fail4002:
    unless rx1616_bstack, rx1616_done4000
    pop $I19, rx1616_bstack
    if_null rx1616_cstack, rx1616_cstack_done4005
    unless rx1616_cstack, rx1616_cstack_done4005
    dec $I19
    set $P11, rx1616_cstack[$I19]
  rx1616_cstack_done4005:
    pop rx1616_rep, rx1616_bstack
    pop rx1616_pos, rx1616_bstack
    pop $I19, rx1616_bstack
    lt rx1616_pos, -1, rx1616_done4000
    lt rx1616_pos, 0, rx1616_fail4002
    eq $I19, 0, rx1616_fail4002
    nqp_islist $I20, rx1616_cstack
    unless $I20, rx1616_jump4003
    elements $I18, rx1616_bstack
    le $I18, 0, rx1616_cut4004
    dec $I18
    set $I18, rx1616_bstack[$I18]
  rx1616_cut4004:
    assign rx1616_cstack, $I18
  rx1616_jump4003:
    jump $I19
  rx1616_done4000:
    rx1616_cur."!cursor_fail"()
    .return (rx1616_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_219_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1538
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1621_start
    .local string rx1621_tgt
    .local int rx1621_pos
    .local int rx1621_off
    .local int rx1621_eos
    .local int rx1621_rep
    .local pmc rx1621_cur
    .local pmc rx1621_curclass
    .local pmc rx1621_bstack
    .local pmc rx1621_cstack
    rx1621_start = self."!cursor_start_all"()
    set rx1621_cur, rx1621_start[0]
    set rx1621_tgt, rx1621_start[1]
    set rx1621_pos, rx1621_start[2]
    set rx1621_curclass, rx1621_start[3]
    set rx1621_bstack, rx1621_start[4]
    set $I19, rx1621_start[5]
    store_lex unicode:"$\x{a2}", rx1621_cur
    length rx1621_eos, rx1621_tgt
    eq $I19, 1, rx1621_restart4014
    gt rx1621_pos, rx1621_eos, rx1621_fail4015
    repr_get_attr_int $I11, self, rx1621_curclass, "$!from"
    ne $I11, -1, rxscan1622_done4021
    goto rxscan1622_scan4020
  rxscan1622_loop4019:
    inc rx1621_pos
    gt rx1621_pos, rx1621_eos, rx1621_fail4015
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!from", rx1621_pos
  rxscan1622_scan4020:
    nqp_rxmark rx1621_bstack, rxscan1622_loop4019, rx1621_pos, 0
  rxscan1622_done4021:
    nqp_rxmark rx1621_bstack, rxcap1623_fail4023, rx1621_pos, 0
    add $I11, rx1621_pos, 1
    gt $I11, rx1621_eos, rx1621_fail4015
    substr $S10, rx1621_tgt, rx1621_pos, 1
    ne $S10, ucs4:"=", rx1621_fail4015
    add rx1621_pos, 1
    nqp_rxpeek $I19, rx1621_bstack, rxcap1623_fail4023
    inc $I19
    set $I11, rx1621_bstack[$I19]
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!pos", rx1621_pos
    $P11 = rx1621_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1621_pos)
    rx1621_cstack = rx1621_cur."!cursor_capture"($P11, "sym")
    goto rxcap1623_done4022
  rxcap1623_fail4023:
    goto rx1621_fail4015
  rxcap1623_done4022:
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!pos", rx1621_pos
    $P11 = rx1621_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1621_curclass, "$!pos"
    lt $I11, 0, rx1621_fail4015
    repr_get_attr_int rx1621_pos, $P11, rx1621_curclass, "$!pos"
    rx1621_cur."!cursor_pass"(rx1621_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1621_cur)
  rx1621_restart4014:
    repr_get_attr_obj rx1621_cstack, rx1621_cur, rx1621_curclass, "$!cstack"
  rx1621_fail4015:
    unless rx1621_bstack, rx1621_done4013
    pop $I19, rx1621_bstack
    if_null rx1621_cstack, rx1621_cstack_done4018
    unless rx1621_cstack, rx1621_cstack_done4018
    dec $I19
    set $P11, rx1621_cstack[$I19]
  rx1621_cstack_done4018:
    pop rx1621_rep, rx1621_bstack
    pop rx1621_pos, rx1621_bstack
    pop $I19, rx1621_bstack
    lt rx1621_pos, -1, rx1621_done4013
    lt rx1621_pos, 0, rx1621_fail4015
    eq $I19, 0, rx1621_fail4015
    nqp_islist $I20, rx1621_cstack
    unless $I20, rx1621_jump4016
    elements $I18, rx1621_bstack
    le $I18, 0, rx1621_cut4017
    dec $I18
    set $I18, rx1621_bstack[$I18]
  rx1621_cut4017:
    assign rx1621_cstack, $I18
  rx1621_jump4016:
    jump $I19
  rx1621_done4013:
    rx1621_cur."!cursor_fail"()
    .return (rx1621_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_220_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1541
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1625_start
    .local string rx1625_tgt
    .local int rx1625_pos
    .local int rx1625_off
    .local int rx1625_eos
    .local int rx1625_rep
    .local pmc rx1625_cur
    .local pmc rx1625_curclass
    .local pmc rx1625_bstack
    .local pmc rx1625_cstack
    rx1625_start = self."!cursor_start_all"()
    set rx1625_cur, rx1625_start[0]
    set rx1625_tgt, rx1625_start[1]
    set rx1625_pos, rx1625_start[2]
    set rx1625_curclass, rx1625_start[3]
    set rx1625_bstack, rx1625_start[4]
    set $I19, rx1625_start[5]
    store_lex unicode:"$\x{a2}", rx1625_cur
    length rx1625_eos, rx1625_tgt
    eq $I19, 1, rx1625_restart4027
    gt rx1625_pos, rx1625_eos, rx1625_fail4028
    repr_get_attr_int $I11, self, rx1625_curclass, "$!from"
    ne $I11, -1, rxscan1626_done4034
    goto rxscan1626_scan4033
  rxscan1626_loop4032:
    inc rx1625_pos
    gt rx1625_pos, rx1625_eos, rx1625_fail4028
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!from", rx1625_pos
  rxscan1626_scan4033:
    nqp_rxmark rx1625_bstack, rxscan1626_loop4032, rx1625_pos, 0
  rxscan1626_done4034:
    nqp_rxmark rx1625_bstack, rxcap1627_fail4036, rx1625_pos, 0
    add $I11, rx1625_pos, 2
    gt $I11, rx1625_eos, rx1625_fail4028
    substr $S10, rx1625_tgt, rx1625_pos, 2
    ne $S10, ucs4:":=", rx1625_fail4028
    add rx1625_pos, 2
    nqp_rxpeek $I19, rx1625_bstack, rxcap1627_fail4036
    inc $I19
    set $I11, rx1625_bstack[$I19]
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!pos", rx1625_pos
    $P11 = rx1625_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1625_pos)
    rx1625_cstack = rx1625_cur."!cursor_capture"($P11, "sym")
    goto rxcap1627_done4035
  rxcap1627_fail4036:
    goto rx1625_fail4028
  rxcap1627_done4035:
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!pos", rx1625_pos
    $P11 = rx1625_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1625_curclass, "$!pos"
    lt $I11, 0, rx1625_fail4028
    nqp_rxmark rx1625_bstack, rxsubrule1628_pass4037, -1, 0
  rxsubrule1628_pass4037:
    rx1625_cstack = rx1625_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1625_pos, $P11, rx1625_curclass, "$!pos"
    rx1625_cur."!cursor_pass"(rx1625_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1625_cur)
  rx1625_restart4027:
    repr_get_attr_obj rx1625_cstack, rx1625_cur, rx1625_curclass, "$!cstack"
  rx1625_fail4028:
    unless rx1625_bstack, rx1625_done4026
    pop $I19, rx1625_bstack
    if_null rx1625_cstack, rx1625_cstack_done4031
    unless rx1625_cstack, rx1625_cstack_done4031
    dec $I19
    set $P11, rx1625_cstack[$I19]
  rx1625_cstack_done4031:
    pop rx1625_rep, rx1625_bstack
    pop rx1625_pos, rx1625_bstack
    pop $I19, rx1625_bstack
    lt rx1625_pos, -1, rx1625_done4026
    lt rx1625_pos, 0, rx1625_fail4028
    eq $I19, 0, rx1625_fail4028
    nqp_islist $I20, rx1625_cstack
    unless $I20, rx1625_jump4029
    elements $I18, rx1625_bstack
    le $I18, 0, rx1625_cut4030
    dec $I18
    set $I18, rx1625_bstack[$I18]
  rx1625_cut4030:
    assign rx1625_cstack, $I18
  rx1625_jump4029:
    jump $I19
  rx1625_done4026:
    rx1625_cur."!cursor_fail"()
    .return (rx1625_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_221_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1542
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1629_start
    .local string rx1629_tgt
    .local int rx1629_pos
    .local int rx1629_off
    .local int rx1629_eos
    .local int rx1629_rep
    .local pmc rx1629_cur
    .local pmc rx1629_curclass
    .local pmc rx1629_bstack
    .local pmc rx1629_cstack
    rx1629_start = self."!cursor_start_all"()
    set rx1629_cur, rx1629_start[0]
    set rx1629_tgt, rx1629_start[1]
    set rx1629_pos, rx1629_start[2]
    set rx1629_curclass, rx1629_start[3]
    set rx1629_bstack, rx1629_start[4]
    set $I19, rx1629_start[5]
    store_lex unicode:"$\x{a2}", rx1629_cur
    length rx1629_eos, rx1629_tgt
    eq $I19, 1, rx1629_restart4040
    gt rx1629_pos, rx1629_eos, rx1629_fail4041
    repr_get_attr_int $I11, self, rx1629_curclass, "$!from"
    ne $I11, -1, rxscan1630_done4047
    goto rxscan1630_scan4046
  rxscan1630_loop4045:
    inc rx1629_pos
    gt rx1629_pos, rx1629_eos, rx1629_fail4041
    repr_bind_attr_int rx1629_cur, rx1629_curclass, "$!from", rx1629_pos
  rxscan1630_scan4046:
    nqp_rxmark rx1629_bstack, rxscan1630_loop4045, rx1629_pos, 0
  rxscan1630_done4047:
    nqp_rxmark rx1629_bstack, rxcap1631_fail4049, rx1629_pos, 0
    add $I11, rx1629_pos, 3
    gt $I11, rx1629_eos, rx1629_fail4041
    substr $S10, rx1629_tgt, rx1629_pos, 3
    ne $S10, ucs4:"::=", rx1629_fail4041
    add rx1629_pos, 3
    nqp_rxpeek $I19, rx1629_bstack, rxcap1631_fail4049
    inc $I19
    set $I11, rx1629_bstack[$I19]
    repr_bind_attr_int rx1629_cur, rx1629_curclass, "$!pos", rx1629_pos
    $P11 = rx1629_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1629_pos)
    rx1629_cstack = rx1629_cur."!cursor_capture"($P11, "sym")
    goto rxcap1631_done4048
  rxcap1631_fail4049:
    goto rx1629_fail4041
  rxcap1631_done4048:
    repr_bind_attr_int rx1629_cur, rx1629_curclass, "$!pos", rx1629_pos
    $P11 = rx1629_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1629_curclass, "$!pos"
    lt $I11, 0, rx1629_fail4041
    nqp_rxmark rx1629_bstack, rxsubrule1632_pass4050, -1, 0
  rxsubrule1632_pass4050:
    rx1629_cstack = rx1629_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1629_pos, $P11, rx1629_curclass, "$!pos"
    rx1629_cur."!cursor_pass"(rx1629_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1629_cur)
  rx1629_restart4040:
    repr_get_attr_obj rx1629_cstack, rx1629_cur, rx1629_curclass, "$!cstack"
  rx1629_fail4041:
    unless rx1629_bstack, rx1629_done4039
    pop $I19, rx1629_bstack
    if_null rx1629_cstack, rx1629_cstack_done4044
    unless rx1629_cstack, rx1629_cstack_done4044
    dec $I19
    set $P11, rx1629_cstack[$I19]
  rx1629_cstack_done4044:
    pop rx1629_rep, rx1629_bstack
    pop rx1629_pos, rx1629_bstack
    pop $I19, rx1629_bstack
    lt rx1629_pos, -1, rx1629_done4039
    lt rx1629_pos, 0, rx1629_fail4041
    eq $I19, 0, rx1629_fail4041
    nqp_islist $I20, rx1629_cstack
    unless $I20, rx1629_jump4042
    elements $I18, rx1629_bstack
    le $I18, 0, rx1629_cut4043
    dec $I18
    set $I18, rx1629_bstack[$I18]
  rx1629_cut4043:
    assign rx1629_cstack, $I18
  rx1629_jump4042:
    jump $I19
  rx1629_done4039:
    rx1629_cur."!cursor_fail"()
    .return (rx1629_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_222_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1544
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1633_start
    .local string rx1633_tgt
    .local int rx1633_pos
    .local int rx1633_off
    .local int rx1633_eos
    .local int rx1633_rep
    .local pmc rx1633_cur
    .local pmc rx1633_curclass
    .local pmc rx1633_bstack
    .local pmc rx1633_cstack
    rx1633_start = self."!cursor_start_all"()
    set rx1633_cur, rx1633_start[0]
    set rx1633_tgt, rx1633_start[1]
    set rx1633_pos, rx1633_start[2]
    set rx1633_curclass, rx1633_start[3]
    set rx1633_bstack, rx1633_start[4]
    set $I19, rx1633_start[5]
    store_lex unicode:"$\x{a2}", rx1633_cur
    length rx1633_eos, rx1633_tgt
    eq $I19, 1, rx1633_restart4053
    gt rx1633_pos, rx1633_eos, rx1633_fail4054
    repr_get_attr_int $I11, self, rx1633_curclass, "$!from"
    ne $I11, -1, rxscan1634_done4060
    goto rxscan1634_scan4059
  rxscan1634_loop4058:
    inc rx1633_pos
    gt rx1633_pos, rx1633_eos, rx1633_fail4054
    repr_bind_attr_int rx1633_cur, rx1633_curclass, "$!from", rx1633_pos
  rxscan1634_scan4059:
    nqp_rxmark rx1633_bstack, rxscan1634_loop4058, rx1633_pos, 0
  rxscan1634_done4060:
    nqp_rxmark rx1633_bstack, rxcap1635_fail4062, rx1633_pos, 0
    add $I11, rx1633_pos, 1
    gt $I11, rx1633_eos, rx1633_fail4054
    substr $S10, rx1633_tgt, rx1633_pos, 1
    ne $S10, ucs4:",", rx1633_fail4054
    add rx1633_pos, 1
    nqp_rxpeek $I19, rx1633_bstack, rxcap1635_fail4062
    inc $I19
    set $I11, rx1633_bstack[$I19]
    repr_bind_attr_int rx1633_cur, rx1633_curclass, "$!pos", rx1633_pos
    $P11 = rx1633_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1633_pos)
    rx1633_cstack = rx1633_cur."!cursor_capture"($P11, "sym")
    goto rxcap1635_done4061
  rxcap1635_fail4062:
    goto rx1633_fail4054
  rxcap1635_done4061:
    repr_bind_attr_int rx1633_cur, rx1633_curclass, "$!pos", rx1633_pos
    $P11 = rx1633_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1633_curclass, "$!pos"
    lt $I11, 0, rx1633_fail4054
    nqp_rxmark rx1633_bstack, rxsubrule1636_pass4063, -1, 0
  rxsubrule1636_pass4063:
    rx1633_cstack = rx1633_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1633_pos, $P11, rx1633_curclass, "$!pos"
    rx1633_cur."!cursor_pass"(rx1633_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1633_cur)
  rx1633_restart4053:
    repr_get_attr_obj rx1633_cstack, rx1633_cur, rx1633_curclass, "$!cstack"
  rx1633_fail4054:
    unless rx1633_bstack, rx1633_done4052
    pop $I19, rx1633_bstack
    if_null rx1633_cstack, rx1633_cstack_done4057
    unless rx1633_cstack, rx1633_cstack_done4057
    dec $I19
    set $P11, rx1633_cstack[$I19]
  rx1633_cstack_done4057:
    pop rx1633_rep, rx1633_bstack
    pop rx1633_pos, rx1633_bstack
    pop $I19, rx1633_bstack
    lt rx1633_pos, -1, rx1633_done4052
    lt rx1633_pos, 0, rx1633_fail4054
    eq $I19, 0, rx1633_fail4054
    nqp_islist $I20, rx1633_cstack
    unless $I20, rx1633_jump4055
    elements $I18, rx1633_bstack
    le $I18, 0, rx1633_cut4056
    dec $I18
    set $I18, rx1633_bstack[$I18]
  rx1633_cut4056:
    assign rx1633_cstack, $I18
  rx1633_jump4055:
    jump $I19
  rx1633_done4052:
    rx1633_cur."!cursor_fail"()
    .return (rx1633_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_223_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1546
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_435_1382959278.72036' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1637_start
    .local string rx1637_tgt
    .local int rx1637_pos
    .local int rx1637_off
    .local int rx1637_eos
    .local int rx1637_rep
    .local pmc rx1637_cur
    .local pmc rx1637_curclass
    .local pmc rx1637_bstack
    .local pmc rx1637_cstack
    rx1637_start = self."!cursor_start_all"()
    set rx1637_cur, rx1637_start[0]
    set rx1637_tgt, rx1637_start[1]
    set rx1637_pos, rx1637_start[2]
    set rx1637_curclass, rx1637_start[3]
    set rx1637_bstack, rx1637_start[4]
    set $I19, rx1637_start[5]
    store_lex unicode:"$\x{a2}", rx1637_cur
    length rx1637_eos, rx1637_tgt
    eq $I19, 1, rx1637_restart4066
    gt rx1637_pos, rx1637_eos, rx1637_fail4067
    repr_get_attr_int $I11, self, rx1637_curclass, "$!from"
    ne $I11, -1, rxscan1638_done4073
    goto rxscan1638_scan4072
  rxscan1638_loop4071:
    inc rx1637_pos
    gt rx1637_pos, rx1637_eos, rx1637_fail4067
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!from", rx1637_pos
  rxscan1638_scan4072:
    nqp_rxmark rx1637_bstack, rxscan1638_loop4071, rx1637_pos, 0
  rxscan1638_done4073:
    nqp_rxmark rx1637_bstack, rxcap1639_fail4075, rx1637_pos, 0
    add $I11, rx1637_pos, 6
    gt $I11, rx1637_eos, rx1637_fail4067
    substr $S10, rx1637_tgt, rx1637_pos, 6
    ne $S10, ucs4:"return", rx1637_fail4067
    add rx1637_pos, 6
    nqp_rxpeek $I19, rx1637_bstack, rxcap1639_fail4075
    inc $I19
    set $I11, rx1637_bstack[$I19]
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!pos", rx1637_pos
    $P11 = rx1637_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1637_pos)
    rx1637_cstack = rx1637_cur."!cursor_capture"($P11, "sym")
    goto rxcap1639_done4074
  rxcap1639_fail4075:
    goto rx1637_fail4067
  rxcap1639_done4074:
    ge rx1637_pos, rx1637_eos, rx1637_fail4067
    is_cclass $I11, .CCLASS_WHITESPACE, rx1637_tgt, rx1637_pos
    unless $I11, rx1637_fail4067
    add rx1637_pos, 1
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!pos", rx1637_pos
    $P11 = rx1637_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1637_curclass, "$!pos"
    lt $I11, 0, rx1637_fail4067
    nqp_rxmark rx1637_bstack, rxsubrule1640_pass4076, -1, 0
  rxsubrule1640_pass4076:
    rx1637_cstack = rx1637_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1637_pos, $P11, rx1637_curclass, "$!pos"
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!pos", rx1637_pos
    store_lex unicode:"$\x{a2}", rx1637_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_435_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1637_cur."!cursor_pass"(rx1637_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1637_cur)
  rx1637_restart4066:
    repr_get_attr_obj rx1637_cstack, rx1637_cur, rx1637_curclass, "$!cstack"
  rx1637_fail4067:
    unless rx1637_bstack, rx1637_done4065
    pop $I19, rx1637_bstack
    if_null rx1637_cstack, rx1637_cstack_done4070
    unless rx1637_cstack, rx1637_cstack_done4070
    dec $I19
    set $P11, rx1637_cstack[$I19]
  rx1637_cstack_done4070:
    pop rx1637_rep, rx1637_bstack
    pop rx1637_pos, rx1637_bstack
    pop $I19, rx1637_bstack
    lt rx1637_pos, -1, rx1637_done4065
    lt rx1637_pos, 0, rx1637_fail4067
    eq $I19, 0, rx1637_fail4067
    nqp_islist $I20, rx1637_cstack
    unless $I20, rx1637_jump4068
    elements $I18, rx1637_bstack
    le $I18, 0, rx1637_cut4069
    dec $I18
    set $I18, rx1637_bstack[$I18]
  rx1637_cut4069:
    assign rx1637_cstack, $I18
  rx1637_jump4068:
    jump $I19
  rx1637_done4065:
    rx1637_cur."!cursor_fail"()
    .return (rx1637_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1382959278.72036") :anon :lex :outer("cuid_223_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1546

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_224_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1547
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1641_start
    .local string rx1641_tgt
    .local int rx1641_pos
    .local int rx1641_off
    .local int rx1641_eos
    .local int rx1641_rep
    .local pmc rx1641_cur
    .local pmc rx1641_curclass
    .local pmc rx1641_bstack
    .local pmc rx1641_cstack
    rx1641_start = self."!cursor_start_all"()
    set rx1641_cur, rx1641_start[0]
    set rx1641_tgt, rx1641_start[1]
    set rx1641_pos, rx1641_start[2]
    set rx1641_curclass, rx1641_start[3]
    set rx1641_bstack, rx1641_start[4]
    set $I19, rx1641_start[5]
    store_lex unicode:"$\x{a2}", rx1641_cur
    length rx1641_eos, rx1641_tgt
    eq $I19, 1, rx1641_restart4079
    gt rx1641_pos, rx1641_eos, rx1641_fail4080
    repr_get_attr_int $I11, self, rx1641_curclass, "$!from"
    ne $I11, -1, rxscan1642_done4086
    goto rxscan1642_scan4085
  rxscan1642_loop4084:
    inc rx1641_pos
    gt rx1641_pos, rx1641_eos, rx1641_fail4080
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!from", rx1641_pos
  rxscan1642_scan4085:
    nqp_rxmark rx1641_bstack, rxscan1642_loop4084, rx1641_pos, 0
  rxscan1642_done4086:
    nqp_rxmark rx1641_bstack, rxcap1643_fail4088, rx1641_pos, 0
    add $I11, rx1641_pos, 4
    gt $I11, rx1641_eos, rx1641_fail4080
    substr $S10, rx1641_tgt, rx1641_pos, 4
    ne $S10, ucs4:"make", rx1641_fail4080
    add rx1641_pos, 4
    nqp_rxpeek $I19, rx1641_bstack, rxcap1643_fail4088
    inc $I19
    set $I11, rx1641_bstack[$I19]
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!pos", rx1641_pos
    $P11 = rx1641_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1641_pos)
    rx1641_cstack = rx1641_cur."!cursor_capture"($P11, "sym")
    goto rxcap1643_done4087
  rxcap1643_fail4088:
    goto rx1641_fail4080
  rxcap1643_done4087:
    ge rx1641_pos, rx1641_eos, rx1641_fail4080
    is_cclass $I11, .CCLASS_WHITESPACE, rx1641_tgt, rx1641_pos
    unless $I11, rx1641_fail4080
    add rx1641_pos, 1
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!pos", rx1641_pos
    $P11 = rx1641_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1641_curclass, "$!pos"
    lt $I11, 0, rx1641_fail4080
    nqp_rxmark rx1641_bstack, rxsubrule1644_pass4089, -1, 0
  rxsubrule1644_pass4089:
    rx1641_cstack = rx1641_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1641_pos, $P11, rx1641_curclass, "$!pos"
    rx1641_cur."!cursor_pass"(rx1641_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1641_cur)
  rx1641_restart4079:
    repr_get_attr_obj rx1641_cstack, rx1641_cur, rx1641_curclass, "$!cstack"
  rx1641_fail4080:
    unless rx1641_bstack, rx1641_done4078
    pop $I19, rx1641_bstack
    if_null rx1641_cstack, rx1641_cstack_done4083
    unless rx1641_cstack, rx1641_cstack_done4083
    dec $I19
    set $P11, rx1641_cstack[$I19]
  rx1641_cstack_done4083:
    pop rx1641_rep, rx1641_bstack
    pop rx1641_pos, rx1641_bstack
    pop $I19, rx1641_bstack
    lt rx1641_pos, -1, rx1641_done4078
    lt rx1641_pos, 0, rx1641_fail4080
    eq $I19, 0, rx1641_fail4080
    nqp_islist $I20, rx1641_cstack
    unless $I20, rx1641_jump4081
    elements $I18, rx1641_bstack
    le $I18, 0, rx1641_cut4082
    dec $I18
    set $I18, rx1641_bstack[$I18]
  rx1641_cut4082:
    assign rx1641_cstack, $I18
  rx1641_jump4081:
    jump $I19
  rx1641_done4078:
    rx1641_cur."!cursor_fail"()
    .return (rx1641_cur) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_225_1382959278.72036") :anon :lex :outer("cuid_410_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1549
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_193 
    .local pmc fb_tmp_194 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set fb_tmp_193, _lex_param_1
    repr_defined $I5001, fb_tmp_193
    unless $I5001 goto if1645_else4090 
    set $P5002, fb_tmp_193[0]
    set $P5004, $P5002
    goto if1645_end4091
  if1645_else4090:
    null $P5003
    set $P5004, $P5003
  if1645_end4091:
    unless_null $P5004, vivi_16464092
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_16464092:
    set $P101, $P5004
    set fb_tmp_194, _lex_param_1
    repr_defined $I5002, fb_tmp_194
    unless $I5002 goto if1647_else4093 
    set $P5006, fb_tmp_194[1]
    set $P5008, $P5006
    goto if1647_end4094
  if1647_else4093:
    null $P5007
    set $P5008, $P5007
  if1647_end4094:
    unless_null $P5008, vivi_16484095
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_16484095:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1555
    .const 'Sub' $P5014 = 'cuid_226_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_227_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_229_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_230_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_232_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_233_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_234_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_235_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_236_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_237_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_238_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_239_1382959278.72036' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_240_1382959278.72036' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_226_1382959278.72036' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_227_1382959278.72036' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_229_1382959278.72036' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_230_1382959278.72036' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_232_1382959278.72036' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_233_1382959278.72036' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_234_1382959278.72036' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_235_1382959278.72036' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_236_1382959278.72036' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_237_1382959278.72036' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_238_1382959278.72036' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_239_1382959278.72036' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_240_1382959278.72036' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_226_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1556
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1649_start
    .local string rx1649_tgt
    .local int rx1649_pos
    .local int rx1649_off
    .local int rx1649_eos
    .local int rx1649_rep
    .local pmc rx1649_cur
    .local pmc rx1649_curclass
    .local pmc rx1649_bstack
    .local pmc rx1649_cstack
    rx1649_start = self."!cursor_start_all"()
    set rx1649_cur, rx1649_start[0]
    set rx1649_tgt, rx1649_start[1]
    set rx1649_pos, rx1649_start[2]
    set rx1649_curclass, rx1649_start[3]
    set rx1649_bstack, rx1649_start[4]
    set $I19, rx1649_start[5]
    store_lex unicode:"$\x{a2}", rx1649_cur
    length rx1649_eos, rx1649_tgt
    eq $I19, 1, rx1649_restart4098
    gt rx1649_pos, rx1649_eos, rx1649_fail4099
    repr_get_attr_int $I11, self, rx1649_curclass, "$!from"
    ne $I11, -1, rxscan1650_done4105
    goto rxscan1650_scan4104
  rxscan1650_loop4103:
    inc rx1649_pos
    gt rx1649_pos, rx1649_eos, rx1649_fail4099
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!from", rx1649_pos
  rxscan1650_scan4104:
    nqp_rxmark rx1649_bstack, rxscan1650_loop4103, rx1649_pos, 0
  rxscan1650_done4105:
    ge rx1649_pos, rx1649_eos, rx1649_fail4099
    substr $S11, rx1649_tgt, rx1649_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1649_fail4099
    inc rx1649_pos
    rx1649_cur."!cursor_pass"(rx1649_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1649_cur)
  rx1649_restart4098:
    repr_get_attr_obj rx1649_cstack, rx1649_cur, rx1649_curclass, "$!cstack"
  rx1649_fail4099:
    unless rx1649_bstack, rx1649_done4097
    pop $I19, rx1649_bstack
    if_null rx1649_cstack, rx1649_cstack_done4102
    unless rx1649_cstack, rx1649_cstack_done4102
    dec $I19
    set $P11, rx1649_cstack[$I19]
  rx1649_cstack_done4102:
    pop rx1649_rep, rx1649_bstack
    pop rx1649_pos, rx1649_bstack
    pop $I19, rx1649_bstack
    lt rx1649_pos, -1, rx1649_done4097
    lt rx1649_pos, 0, rx1649_fail4099
    eq $I19, 0, rx1649_fail4099
    nqp_islist $I20, rx1649_cstack
    unless $I20, rx1649_jump4100
    elements $I18, rx1649_bstack
    le $I18, 0, rx1649_cut4101
    dec $I18
    set $I18, rx1649_bstack[$I18]
  rx1649_cut4101:
    assign rx1649_cstack, $I18
  rx1649_jump4100:
    jump $I19
  rx1649_done4097:
    rx1649_cur."!cursor_fail"()
    .return (rx1649_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_227_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1560
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_228_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1651_start
    .local string rx1651_tgt
    .local int rx1651_pos
    .local int rx1651_off
    .local int rx1651_eos
    .local int rx1651_rep
    .local pmc rx1651_cur
    .local pmc rx1651_curclass
    .local pmc rx1651_bstack
    .local pmc rx1651_cstack
    rx1651_start = self."!cursor_start_all"()
    set rx1651_cur, rx1651_start[0]
    set rx1651_tgt, rx1651_start[1]
    set rx1651_pos, rx1651_start[2]
    set rx1651_curclass, rx1651_start[3]
    set rx1651_bstack, rx1651_start[4]
    set $I19, rx1651_start[5]
    store_lex unicode:"$\x{a2}", rx1651_cur
    length rx1651_eos, rx1651_tgt
    eq $I19, 1, rx1651_restart4108
    gt rx1651_pos, rx1651_eos, rx1651_fail4109
    repr_get_attr_int $I11, self, rx1651_curclass, "$!from"
    ne $I11, -1, rxscan1652_done4115
    goto rxscan1652_scan4114
  rxscan1652_loop4113:
    inc rx1651_pos
    index rx1651_pos, rx1651_tgt, ucs4:":", rx1651_pos
    eq rx1651_pos, -1, rx1651_fail4109
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!from", rx1651_pos
  rxscan1652_scan4114:
    nqp_rxmark rx1651_bstack, rxscan1652_loop4113, rx1651_pos, 0
  rxscan1652_done4115:
    add $I11, rx1651_pos, 1
    gt $I11, rx1651_eos, rx1651_fail4109
    substr $S10, rx1651_tgt, rx1651_pos, 1
    ne $S10, ucs4:":", rx1651_fail4109
    add rx1651_pos, 1
    .const 'Sub' $P5001 = 'cuid_228_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!pos", rx1651_pos
    $P11 = rx1651_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1651_curclass, "$!pos"
    lt $I11, 0, rx1651_fail4109
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!pos", rx1651_pos
    $P11 = rx1651_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1651_curclass, "$!pos"
    lt $I11, 0, rx1651_fail4109
    nqp_rxmark rx1651_bstack, rxsubrule1655_pass4126, -1, 0
  rxsubrule1655_pass4126:
    rx1651_cstack = rx1651_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1651_pos, $P11, rx1651_curclass, "$!pos"
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!pos", rx1651_pos
    $P11 = rx1651_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1651_curclass, "$!pos"
    lt $I11, 0, rx1651_fail4109
    repr_get_attr_int rx1651_pos, $P11, rx1651_curclass, "$!pos"
    add $I11, rx1651_pos, 1
    gt $I11, rx1651_eos, rx1651_fail4109
    substr $S10, rx1651_tgt, rx1651_pos, 1
    ne $S10, ucs4:";", rx1651_fail4109
    add rx1651_pos, 1
    rx1651_cur."!cursor_pass"(rx1651_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1651_cur)
  rx1651_restart4108:
    repr_get_attr_obj rx1651_cstack, rx1651_cur, rx1651_curclass, "$!cstack"
  rx1651_fail4109:
    unless rx1651_bstack, rx1651_done4107
    pop $I19, rx1651_bstack
    if_null rx1651_cstack, rx1651_cstack_done4112
    unless rx1651_cstack, rx1651_cstack_done4112
    dec $I19
    set $P11, rx1651_cstack[$I19]
  rx1651_cstack_done4112:
    pop rx1651_rep, rx1651_bstack
    pop rx1651_pos, rx1651_bstack
    pop $I19, rx1651_bstack
    lt rx1651_pos, -1, rx1651_done4107
    lt rx1651_pos, 0, rx1651_fail4109
    eq $I19, 0, rx1651_fail4109
    nqp_islist $I20, rx1651_cstack
    unless $I20, rx1651_jump4110
    elements $I18, rx1651_bstack
    le $I18, 0, rx1651_cut4111
    dec $I18
    set $I18, rx1651_bstack[$I18]
  rx1651_cut4111:
    assign rx1651_cstack, $I18
  rx1651_jump4110:
    jump $I19
  rx1651_done4107:
    rx1651_cur."!cursor_fail"()
    .return (rx1651_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_228_1382959278.72036") :anon :lex :outer("cuid_227_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1653_start
    .local string rx1653_tgt
    .local int rx1653_pos
    .local int rx1653_off
    .local int rx1653_eos
    .local int rx1653_rep
    .local pmc rx1653_cur
    .local pmc rx1653_curclass
    .local pmc rx1653_bstack
    .local pmc rx1653_cstack
    rx1653_start = self."!cursor_start_all"()
    set rx1653_cur, rx1653_start[0]
    set rx1653_tgt, rx1653_start[1]
    set rx1653_pos, rx1653_start[2]
    set rx1653_curclass, rx1653_start[3]
    set rx1653_bstack, rx1653_start[4]
    set $I19, rx1653_start[5]
    store_lex unicode:"$\x{a2}", rx1653_cur
    length rx1653_eos, rx1653_tgt
    eq $I19, 1, rx1653_restart4118
    gt rx1653_pos, rx1653_eos, rx1653_fail4119
    repr_get_attr_int $I11, self, rx1653_curclass, "$!from"
    ne $I11, -1, rxscan1654_done4125
    goto rxscan1654_scan4124
  rxscan1654_loop4123:
    inc rx1653_pos
    index rx1653_pos, rx1653_tgt, ucs4:"my", rx1653_pos
    eq rx1653_pos, -1, rx1653_fail4119
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!from", rx1653_pos
  rxscan1654_scan4124:
    nqp_rxmark rx1653_bstack, rxscan1654_loop4123, rx1653_pos, 0
  rxscan1654_done4125:
    add $I11, rx1653_pos, 2
    gt $I11, rx1653_eos, rx1653_fail4119
    substr $S10, rx1653_tgt, rx1653_pos, 2
    ne $S10, ucs4:"my", rx1653_fail4119
    add rx1653_pos, 2
    rx1653_cur."!cursor_pass"(rx1653_pos, 'backtrack'=>1)
    .return (rx1653_cur)
  rx1653_restart4118:
    repr_get_attr_obj rx1653_cstack, rx1653_cur, rx1653_curclass, "$!cstack"
  rx1653_fail4119:
    unless rx1653_bstack, rx1653_done4117
    pop $I19, rx1653_bstack
    if_null rx1653_cstack, rx1653_cstack_done4122
    unless rx1653_cstack, rx1653_cstack_done4122
    dec $I19
    set $P11, rx1653_cstack[$I19]
  rx1653_cstack_done4122:
    pop rx1653_rep, rx1653_bstack
    pop rx1653_pos, rx1653_bstack
    pop $I19, rx1653_bstack
    lt rx1653_pos, -1, rx1653_done4117
    lt rx1653_pos, 0, rx1653_fail4119
    eq $I19, 0, rx1653_fail4119
    nqp_islist $I20, rx1653_cstack
    unless $I20, rx1653_jump4120
    elements $I18, rx1653_bstack
    le $I18, 0, rx1653_cut4121
    dec $I18
    set $I18, rx1653_bstack[$I18]
  rx1653_cut4121:
    assign rx1653_cstack, $I18
  rx1653_jump4120:
    jump $I19
  rx1653_done4117:
    rx1653_cur."!cursor_fail"()
    .return (rx1653_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_229_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1564
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1657_start
    .local string rx1657_tgt
    .local int rx1657_pos
    .local int rx1657_off
    .local int rx1657_eos
    .local int rx1657_rep
    .local pmc rx1657_cur
    .local pmc rx1657_curclass
    .local pmc rx1657_bstack
    .local pmc rx1657_cstack
    rx1657_start = self."!cursor_start_all"()
    set rx1657_cur, rx1657_start[0]
    set rx1657_tgt, rx1657_start[1]
    set rx1657_pos, rx1657_start[2]
    set rx1657_curclass, rx1657_start[3]
    set rx1657_bstack, rx1657_start[4]
    set $I19, rx1657_start[5]
    store_lex unicode:"$\x{a2}", rx1657_cur
    length rx1657_eos, rx1657_tgt
    eq $I19, 1, rx1657_restart4130
    gt rx1657_pos, rx1657_eos, rx1657_fail4131
    repr_get_attr_int $I11, self, rx1657_curclass, "$!from"
    ne $I11, -1, rxscan1658_done4137
    goto rxscan1658_scan4136
  rxscan1658_loop4135:
    inc rx1657_pos
    gt rx1657_pos, rx1657_eos, rx1657_fail4131
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!from", rx1657_pos
  rxscan1658_scan4136:
    nqp_rxmark rx1657_bstack, rxscan1658_loop4135, rx1657_pos, 0
  rxscan1658_done4137:
    ge rx1657_pos, rx1657_eos, rx1657_fail4131
    substr $S11, rx1657_tgt, rx1657_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1657_fail4131
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!pos", rx1657_pos
    $P11 = rx1657_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1657_curclass, "$!pos"
    lt $I11, 0, rx1657_fail4131
    nqp_rxmark rx1657_bstack, rxsubrule1659_pass4138, -1, 0
  rxsubrule1659_pass4138:
    rx1657_cstack = rx1657_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1657_pos, $P11, rx1657_curclass, "$!pos"
    rx1657_cur."!cursor_pass"(rx1657_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1657_cur)
  rx1657_restart4130:
    repr_get_attr_obj rx1657_cstack, rx1657_cur, rx1657_curclass, "$!cstack"
  rx1657_fail4131:
    unless rx1657_bstack, rx1657_done4129
    pop $I19, rx1657_bstack
    if_null rx1657_cstack, rx1657_cstack_done4134
    unless rx1657_cstack, rx1657_cstack_done4134
    dec $I19
    set $P11, rx1657_cstack[$I19]
  rx1657_cstack_done4134:
    pop rx1657_rep, rx1657_bstack
    pop rx1657_pos, rx1657_bstack
    pop $I19, rx1657_bstack
    lt rx1657_pos, -1, rx1657_done4129
    lt rx1657_pos, 0, rx1657_fail4131
    eq $I19, 0, rx1657_fail4131
    nqp_islist $I20, rx1657_cstack
    unless $I20, rx1657_jump4132
    elements $I18, rx1657_bstack
    le $I18, 0, rx1657_cut4133
    dec $I18
    set $I18, rx1657_bstack[$I18]
  rx1657_cut4133:
    assign rx1657_cstack, $I18
  rx1657_jump4132:
    jump $I19
  rx1657_done4129:
    rx1657_cur."!cursor_fail"()
    .return (rx1657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_230_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1568
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_231_1382959278.72036' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1660_start
    .local string rx1660_tgt
    .local int rx1660_pos
    .local int rx1660_off
    .local int rx1660_eos
    .local int rx1660_rep
    .local pmc rx1660_cur
    .local pmc rx1660_curclass
    .local pmc rx1660_bstack
    .local pmc rx1660_cstack
    rx1660_start = self."!cursor_start_all"()
    set rx1660_cur, rx1660_start[0]
    set rx1660_tgt, rx1660_start[1]
    set rx1660_pos, rx1660_start[2]
    set rx1660_curclass, rx1660_start[3]
    set rx1660_bstack, rx1660_start[4]
    set $I19, rx1660_start[5]
    store_lex unicode:"$\x{a2}", rx1660_cur
    length rx1660_eos, rx1660_tgt
    eq $I19, 1, rx1660_restart4141
    gt rx1660_pos, rx1660_eos, rx1660_fail4142
    repr_get_attr_int $I11, self, rx1660_curclass, "$!from"
    ne $I11, -1, rxscan1661_done4148
    goto rxscan1661_scan4147
  rxscan1661_loop4146:
    inc rx1660_pos
    gt rx1660_pos, rx1660_eos, rx1660_fail4142
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!from", rx1660_pos
  rxscan1661_scan4147:
    nqp_rxmark rx1660_bstack, rxscan1661_loop4146, rx1660_pos, 0
  rxscan1661_done4148:
    .const 'Sub' $P5001 = 'cuid_231_1382959278.72036' 
    capture_lex $P5001
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1660_curclass, "$!pos"
    lt $I11, 0, rx1660_fail4142
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1660_curclass, "$!pos"
    lt $I11, 0, rx1660_fail4142
    nqp_rxmark rx1660_bstack, rxsubrule1666_pass4163, -1, 0
  rxsubrule1666_pass4163:
    rx1660_cstack = rx1660_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1660_pos, $P11, rx1660_curclass, "$!pos"
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx1660_curclass, "$!pos"
    lt $I11, 0, rx1660_fail4142
    repr_get_attr_int rx1660_pos, $P11, rx1660_curclass, "$!pos"
    rx1660_cur."!cursor_pass"(rx1660_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1660_cur)
  rx1660_restart4141:
    repr_get_attr_obj rx1660_cstack, rx1660_cur, rx1660_curclass, "$!cstack"
  rx1660_fail4142:
    unless rx1660_bstack, rx1660_done4140
    pop $I19, rx1660_bstack
    if_null rx1660_cstack, rx1660_cstack_done4145
    unless rx1660_cstack, rx1660_cstack_done4145
    dec $I19
    set $P11, rx1660_cstack[$I19]
  rx1660_cstack_done4145:
    pop rx1660_rep, rx1660_bstack
    pop rx1660_pos, rx1660_bstack
    pop $I19, rx1660_bstack
    lt rx1660_pos, -1, rx1660_done4140
    lt rx1660_pos, 0, rx1660_fail4142
    eq $I19, 0, rx1660_fail4142
    nqp_islist $I20, rx1660_cstack
    unless $I20, rx1660_jump4143
    elements $I18, rx1660_bstack
    le $I18, 0, rx1660_cut4144
    dec $I18
    set $I18, rx1660_bstack[$I18]
  rx1660_cut4144:
    assign rx1660_cstack, $I18
  rx1660_jump4143:
    jump $I19
  rx1660_done4140:
    rx1660_cur."!cursor_fail"()
    .return (rx1660_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_231_1382959278.72036") :anon :lex :outer("cuid_230_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1662_start
    .local string rx1662_tgt
    .local int rx1662_pos
    .local int rx1662_off
    .local int rx1662_eos
    .local int rx1662_rep
    .local pmc rx1662_cur
    .local pmc rx1662_curclass
    .local pmc rx1662_bstack
    .local pmc rx1662_cstack
    rx1662_start = self."!cursor_start_all"()
    set rx1662_cur, rx1662_start[0]
    set rx1662_tgt, rx1662_start[1]
    set rx1662_pos, rx1662_start[2]
    set rx1662_curclass, rx1662_start[3]
    set rx1662_bstack, rx1662_start[4]
    set $I19, rx1662_start[5]
    store_lex unicode:"$\x{a2}", rx1662_cur
    length rx1662_eos, rx1662_tgt
    eq $I19, 1, rx1662_restart4151
    gt rx1662_pos, rx1662_eos, rx1662_fail4152
    repr_get_attr_int $I11, self, rx1662_curclass, "$!from"
    ne $I11, -1, rxscan1663_done4158
    goto rxscan1663_scan4157
  rxscan1663_loop4156:
    inc rx1662_pos
    gt rx1662_pos, rx1662_eos, rx1662_fail4152
    repr_bind_attr_int rx1662_cur, rx1662_curclass, "$!from", rx1662_pos
  rxscan1663_scan4157:
    nqp_rxmark rx1662_bstack, rxscan1663_loop4156, rx1662_pos, 0
  rxscan1663_done4158:
    repr_bind_attr_int rx1662_cur, rx1662_curclass, "$!pos", rx1662_pos
    $P11 = rx1662_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1662_curclass, "$!pos"
    lt $I11, 0, rx1662_fail4152
    nqp_rxmark rx1662_bstack, rxsubrule1664_pass4159, -1, 0
  rxsubrule1664_pass4159:
    rx1662_cstack = rx1662_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1662_pos, $P11, rx1662_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1665_04161
    nqp_push_label $P11, alt1665_14162
    nqp_rxmark rx1662_bstack, alt1665_end4160, -1, 0
    rx1662_cur."!alt"(rx1662_pos, "alt_nfa__38_1382959282.95796", $P11)
    goto rx1662_fail4152
  alt1665_04161:
    ge rx1662_pos, rx1662_eos, rx1662_fail4152
    is_cclass $I11, .CCLASS_WORD, rx1662_tgt, rx1662_pos
    if $I11, rx1662_fail4152
    add rx1662_pos, 1
    ge rx1662_pos, rx1662_eos, rx1662_fail4152
    is_cclass $I11, .CCLASS_WORD, rx1662_tgt, rx1662_pos
    unless $I11, rx1662_fail4152
    add rx1662_pos, 1
    goto alt1665_end4160
  alt1665_14162:
    ge rx1662_pos, rx1662_eos, rx1662_fail4152
    is_cclass $I11, .CCLASS_WORD, rx1662_tgt, rx1662_pos
    unless $I11, rx1662_fail4152
    add rx1662_pos, 1
    goto alt1665_end4160
  alt1665_end4160:
    nqp_rxcommit rx1662_bstack, alt1665_end4160
    rx1662_cur."!cursor_pass"(rx1662_pos, 'backtrack'=>1)
    .return (rx1662_cur)
  rx1662_restart4151:
    repr_get_attr_obj rx1662_cstack, rx1662_cur, rx1662_curclass, "$!cstack"
  rx1662_fail4152:
    unless rx1662_bstack, rx1662_done4150
    pop $I19, rx1662_bstack
    if_null rx1662_cstack, rx1662_cstack_done4155
    unless rx1662_cstack, rx1662_cstack_done4155
    dec $I19
    set $P11, rx1662_cstack[$I19]
  rx1662_cstack_done4155:
    pop rx1662_rep, rx1662_bstack
    pop rx1662_pos, rx1662_bstack
    pop $I19, rx1662_bstack
    lt rx1662_pos, -1, rx1662_done4150
    lt rx1662_pos, 0, rx1662_fail4152
    eq $I19, 0, rx1662_fail4152
    nqp_islist $I20, rx1662_cstack
    unless $I20, rx1662_jump4153
    elements $I18, rx1662_bstack
    le $I18, 0, rx1662_cut4154
    dec $I18
    set $I18, rx1662_bstack[$I18]
  rx1662_cut4154:
    assign rx1662_cstack, $I18
  rx1662_jump4153:
    jump $I19
  rx1662_done4150:
    rx1662_cur."!cursor_fail"()
    .return (rx1662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_232_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1572
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1668_start
    .local string rx1668_tgt
    .local int rx1668_pos
    .local int rx1668_off
    .local int rx1668_eos
    .local int rx1668_rep
    .local pmc rx1668_cur
    .local pmc rx1668_curclass
    .local pmc rx1668_bstack
    .local pmc rx1668_cstack
    rx1668_start = self."!cursor_start_all"()
    set rx1668_cur, rx1668_start[0]
    set rx1668_tgt, rx1668_start[1]
    set rx1668_pos, rx1668_start[2]
    set rx1668_curclass, rx1668_start[3]
    set rx1668_bstack, rx1668_start[4]
    set $I19, rx1668_start[5]
    store_lex unicode:"$\x{a2}", rx1668_cur
    length rx1668_eos, rx1668_tgt
    eq $I19, 1, rx1668_restart4167
    gt rx1668_pos, rx1668_eos, rx1668_fail4168
    repr_get_attr_int $I11, self, rx1668_curclass, "$!from"
    ne $I11, -1, rxscan1669_done4174
    goto rxscan1669_scan4173
  rxscan1669_loop4172:
    inc rx1668_pos
    gt rx1668_pos, rx1668_eos, rx1668_fail4168
    repr_bind_attr_int rx1668_cur, rx1668_curclass, "$!from", rx1668_pos
  rxscan1669_scan4173:
    nqp_rxmark rx1668_bstack, rxscan1669_loop4172, rx1668_pos, 0
  rxscan1669_done4174:
    ge rx1668_pos, rx1668_eos, rx1668_fail4168
    substr $S11, rx1668_tgt, rx1668_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1668_fail4168
    repr_bind_attr_int rx1668_cur, rx1668_curclass, "$!pos", rx1668_pos
    $P11 = rx1668_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1668_curclass, "$!pos"
    lt $I11, 0, rx1668_fail4168
    nqp_rxmark rx1668_bstack, rxsubrule1670_pass4175, -1, 0
  rxsubrule1670_pass4175:
    rx1668_cstack = rx1668_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1668_pos, $P11, rx1668_curclass, "$!pos"
    rx1668_cur."!cursor_pass"(rx1668_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1668_cur)
  rx1668_restart4167:
    repr_get_attr_obj rx1668_cstack, rx1668_cur, rx1668_curclass, "$!cstack"
  rx1668_fail4168:
    unless rx1668_bstack, rx1668_done4166
    pop $I19, rx1668_bstack
    if_null rx1668_cstack, rx1668_cstack_done4171
    unless rx1668_cstack, rx1668_cstack_done4171
    dec $I19
    set $P11, rx1668_cstack[$I19]
  rx1668_cstack_done4171:
    pop rx1668_rep, rx1668_bstack
    pop rx1668_pos, rx1668_bstack
    pop $I19, rx1668_bstack
    lt rx1668_pos, -1, rx1668_done4166
    lt rx1668_pos, 0, rx1668_fail4168
    eq $I19, 0, rx1668_fail4168
    nqp_islist $I20, rx1668_cstack
    unless $I20, rx1668_jump4169
    elements $I18, rx1668_bstack
    le $I18, 0, rx1668_cut4170
    dec $I18
    set $I18, rx1668_bstack[$I18]
  rx1668_cut4170:
    assign rx1668_cstack, $I18
  rx1668_jump4169:
    jump $I19
  rx1668_done4166:
    rx1668_cur."!cursor_fail"()
    .return (rx1668_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_233_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1576
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1671_start
    .local string rx1671_tgt
    .local int rx1671_pos
    .local int rx1671_off
    .local int rx1671_eos
    .local int rx1671_rep
    .local pmc rx1671_cur
    .local pmc rx1671_curclass
    .local pmc rx1671_bstack
    .local pmc rx1671_cstack
    rx1671_start = self."!cursor_start_all"()
    set rx1671_cur, rx1671_start[0]
    set rx1671_tgt, rx1671_start[1]
    set rx1671_pos, rx1671_start[2]
    set rx1671_curclass, rx1671_start[3]
    set rx1671_bstack, rx1671_start[4]
    set $I19, rx1671_start[5]
    store_lex unicode:"$\x{a2}", rx1671_cur
    length rx1671_eos, rx1671_tgt
    eq $I19, 1, rx1671_restart4178
    gt rx1671_pos, rx1671_eos, rx1671_fail4179
    repr_get_attr_int $I11, self, rx1671_curclass, "$!from"
    ne $I11, -1, rxscan1672_done4185
    goto rxscan1672_scan4184
  rxscan1672_loop4183:
    inc rx1671_pos
    index rx1671_pos, rx1671_tgt, ucs4:"?", rx1671_pos
    eq rx1671_pos, -1, rx1671_fail4179
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!from", rx1671_pos
  rxscan1672_scan4184:
    nqp_rxmark rx1671_bstack, rxscan1672_loop4183, rx1671_pos, 0
  rxscan1672_done4185:
    add $I11, rx1671_pos, 1
    gt $I11, rx1671_eos, rx1671_fail4179
    substr $S10, rx1671_tgt, rx1671_pos, 1
    ne $S10, ucs4:"?", rx1671_fail4179
    add rx1671_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1673_04187
    nqp_push_label $P11, alt1673_14188
    nqp_rxmark rx1671_bstack, alt1673_end4186, -1, 0
    rx1671_cur."!alt"(rx1671_pos, "alt_nfa__39_1382959282.98026", $P11)
    goto rx1671_fail4179
  alt1673_04187:
    ge rx1671_pos, rx1671_eos, rx1671_fail4179
    substr $S11, rx1671_tgt, rx1671_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1671_fail4179
    goto alt1673_end4186
  alt1673_14188:
    ge rx1671_pos, rx1671_eos, rx1671_fail4179
    substr $S11, rx1671_tgt, rx1671_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1671_fail4179
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail4179
    nqp_rxmark rx1671_bstack, rxsubrule1674_pass4189, -1, 0
  rxsubrule1674_pass4189:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    goto alt1673_end4186
  alt1673_end4186:
    nqp_rxcommit rx1671_bstack, alt1673_end4186
    rx1671_cur."!cursor_pass"(rx1671_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1671_cur)
  rx1671_restart4178:
    repr_get_attr_obj rx1671_cstack, rx1671_cur, rx1671_curclass, "$!cstack"
  rx1671_fail4179:
    unless rx1671_bstack, rx1671_done4177
    pop $I19, rx1671_bstack
    if_null rx1671_cstack, rx1671_cstack_done4182
    unless rx1671_cstack, rx1671_cstack_done4182
    dec $I19
    set $P11, rx1671_cstack[$I19]
  rx1671_cstack_done4182:
    pop rx1671_rep, rx1671_bstack
    pop rx1671_pos, rx1671_bstack
    pop $I19, rx1671_bstack
    lt rx1671_pos, -1, rx1671_done4177
    lt rx1671_pos, 0, rx1671_fail4179
    eq $I19, 0, rx1671_fail4179
    nqp_islist $I20, rx1671_cstack
    unless $I20, rx1671_jump4180
    elements $I18, rx1671_bstack
    le $I18, 0, rx1671_cut4181
    dec $I18
    set $I18, rx1671_bstack[$I18]
  rx1671_cut4181:
    assign rx1671_cstack, $I18
  rx1671_jump4180:
    jump $I19
  rx1671_done4177:
    rx1671_cur."!cursor_fail"()
    .return (rx1671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_234_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1577
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1675_start
    .local string rx1675_tgt
    .local int rx1675_pos
    .local int rx1675_off
    .local int rx1675_eos
    .local int rx1675_rep
    .local pmc rx1675_cur
    .local pmc rx1675_curclass
    .local pmc rx1675_bstack
    .local pmc rx1675_cstack
    rx1675_start = self."!cursor_start_all"()
    set rx1675_cur, rx1675_start[0]
    set rx1675_tgt, rx1675_start[1]
    set rx1675_pos, rx1675_start[2]
    set rx1675_curclass, rx1675_start[3]
    set rx1675_bstack, rx1675_start[4]
    set $I19, rx1675_start[5]
    store_lex unicode:"$\x{a2}", rx1675_cur
    length rx1675_eos, rx1675_tgt
    eq $I19, 1, rx1675_restart4192
    gt rx1675_pos, rx1675_eos, rx1675_fail4193
    repr_get_attr_int $I11, self, rx1675_curclass, "$!from"
    ne $I11, -1, rxscan1676_done4199
    goto rxscan1676_scan4198
  rxscan1676_loop4197:
    inc rx1675_pos
    index rx1675_pos, rx1675_tgt, ucs4:"!", rx1675_pos
    eq rx1675_pos, -1, rx1675_fail4193
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!from", rx1675_pos
  rxscan1676_scan4198:
    nqp_rxmark rx1675_bstack, rxscan1676_loop4197, rx1675_pos, 0
  rxscan1676_done4199:
    add $I11, rx1675_pos, 1
    gt $I11, rx1675_eos, rx1675_fail4193
    substr $S10, rx1675_tgt, rx1675_pos, 1
    ne $S10, ucs4:"!", rx1675_fail4193
    add rx1675_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1677_04201
    nqp_push_label $P11, alt1677_14202
    nqp_rxmark rx1675_bstack, alt1677_end4200, -1, 0
    rx1675_cur."!alt"(rx1675_pos, "alt_nfa__40_1382959282.99011", $P11)
    goto rx1675_fail4193
  alt1677_04201:
    ge rx1675_pos, rx1675_eos, rx1675_fail4193
    substr $S11, rx1675_tgt, rx1675_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1675_fail4193
    goto alt1677_end4200
  alt1677_14202:
    ge rx1675_pos, rx1675_eos, rx1675_fail4193
    substr $S11, rx1675_tgt, rx1675_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1675_fail4193
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail4193
    nqp_rxmark rx1675_bstack, rxsubrule1678_pass4203, -1, 0
  rxsubrule1678_pass4203:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    goto alt1677_end4200
  alt1677_end4200:
    nqp_rxcommit rx1675_bstack, alt1677_end4200
    rx1675_cur."!cursor_pass"(rx1675_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1675_cur)
  rx1675_restart4192:
    repr_get_attr_obj rx1675_cstack, rx1675_cur, rx1675_curclass, "$!cstack"
  rx1675_fail4193:
    unless rx1675_bstack, rx1675_done4191
    pop $I19, rx1675_bstack
    if_null rx1675_cstack, rx1675_cstack_done4196
    unless rx1675_cstack, rx1675_cstack_done4196
    dec $I19
    set $P11, rx1675_cstack[$I19]
  rx1675_cstack_done4196:
    pop rx1675_rep, rx1675_bstack
    pop rx1675_pos, rx1675_bstack
    pop $I19, rx1675_bstack
    lt rx1675_pos, -1, rx1675_done4191
    lt rx1675_pos, 0, rx1675_fail4193
    eq $I19, 0, rx1675_fail4193
    nqp_islist $I20, rx1675_cstack
    unless $I20, rx1675_jump4194
    elements $I18, rx1675_bstack
    le $I18, 0, rx1675_cut4195
    dec $I18
    set $I18, rx1675_bstack[$I18]
  rx1675_cut4195:
    assign rx1675_cstack, $I18
  rx1675_jump4194:
    jump $I19
  rx1675_done4191:
    rx1675_cur."!cursor_fail"()
    .return (rx1675_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_235_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1579
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1679_start
    .local string rx1679_tgt
    .local int rx1679_pos
    .local int rx1679_off
    .local int rx1679_eos
    .local int rx1679_rep
    .local pmc rx1679_cur
    .local pmc rx1679_curclass
    .local pmc rx1679_bstack
    .local pmc rx1679_cstack
    rx1679_start = self."!cursor_start_all"()
    set rx1679_cur, rx1679_start[0]
    set rx1679_tgt, rx1679_start[1]
    set rx1679_pos, rx1679_start[2]
    set rx1679_curclass, rx1679_start[3]
    set rx1679_bstack, rx1679_start[4]
    set $I19, rx1679_start[5]
    store_lex unicode:"$\x{a2}", rx1679_cur
    length rx1679_eos, rx1679_tgt
    eq $I19, 1, rx1679_restart4206
    gt rx1679_pos, rx1679_eos, rx1679_fail4207
    repr_get_attr_int $I11, self, rx1679_curclass, "$!from"
    ne $I11, -1, rxscan1680_done4213
    goto rxscan1680_scan4212
  rxscan1680_loop4211:
    inc rx1679_pos
    gt rx1679_pos, rx1679_eos, rx1679_fail4207
    repr_bind_attr_int rx1679_cur, rx1679_curclass, "$!from", rx1679_pos
  rxscan1680_scan4212:
    nqp_rxmark rx1679_bstack, rxscan1680_loop4211, rx1679_pos, 0
  rxscan1680_done4213:
    nqp_rxmark rx1679_bstack, rxcap1681_fail4215, rx1679_pos, 0
    ge rx1679_pos, rx1679_eos, rx1679_fail4207
    substr $S11, rx1679_tgt, rx1679_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1679_fail4207
    inc rx1679_pos
    ge rx1679_pos, rx1679_eos, rx1679_fail4207
    substr $S11, rx1679_tgt, rx1679_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1679_fail4207
    nqp_rxpeek $I19, rx1679_bstack, rxcap1681_fail4215
    inc $I19
    set $I11, rx1679_bstack[$I19]
    repr_bind_attr_int rx1679_cur, rx1679_curclass, "$!pos", rx1679_pos
    $P11 = rx1679_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1679_pos)
    rx1679_cstack = rx1679_cur."!cursor_capture"($P11, "zw")
    goto rxcap1681_done4214
  rxcap1681_fail4215:
    goto rx1679_fail4207
  rxcap1681_done4214:
    repr_bind_attr_int rx1679_cur, rx1679_curclass, "$!pos", rx1679_pos
    $P11 = rx1679_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1679_curclass, "$!pos"
    lt $I11, 0, rx1679_fail4207
    nqp_rxmark rx1679_bstack, rxsubrule1682_pass4216, -1, 0
  rxsubrule1682_pass4216:
    rx1679_cstack = rx1679_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1679_pos, $P11, rx1679_curclass, "$!pos"
    rx1679_cur."!cursor_pass"(rx1679_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1679_cur)
  rx1679_restart4206:
    repr_get_attr_obj rx1679_cstack, rx1679_cur, rx1679_curclass, "$!cstack"
  rx1679_fail4207:
    unless rx1679_bstack, rx1679_done4205
    pop $I19, rx1679_bstack
    if_null rx1679_cstack, rx1679_cstack_done4210
    unless rx1679_cstack, rx1679_cstack_done4210
    dec $I19
    set $P11, rx1679_cstack[$I19]
  rx1679_cstack_done4210:
    pop rx1679_rep, rx1679_bstack
    pop rx1679_pos, rx1679_bstack
    pop $I19, rx1679_bstack
    lt rx1679_pos, -1, rx1679_done4205
    lt rx1679_pos, 0, rx1679_fail4207
    eq $I19, 0, rx1679_fail4207
    nqp_islist $I20, rx1679_cstack
    unless $I20, rx1679_jump4208
    elements $I18, rx1679_bstack
    le $I18, 0, rx1679_cut4209
    dec $I18
    set $I18, rx1679_bstack[$I18]
  rx1679_cut4209:
    assign rx1679_cstack, $I18
  rx1679_jump4208:
    jump $I19
  rx1679_done4205:
    rx1679_cur."!cursor_fail"()
    .return (rx1679_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_236_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1583
    .param pmc _lex_param_0 
    .lex "$*IN_REGEX_ASSERTION", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1683_start
    .local string rx1683_tgt
    .local int rx1683_pos
    .local int rx1683_off
    .local int rx1683_eos
    .local int rx1683_rep
    .local pmc rx1683_cur
    .local pmc rx1683_curclass
    .local pmc rx1683_bstack
    .local pmc rx1683_cstack
    rx1683_start = self."!cursor_start_all"()
    set rx1683_cur, rx1683_start[0]
    set rx1683_tgt, rx1683_start[1]
    set rx1683_pos, rx1683_start[2]
    set rx1683_curclass, rx1683_start[3]
    set rx1683_bstack, rx1683_start[4]
    set $I19, rx1683_start[5]
    store_lex unicode:"$\x{a2}", rx1683_cur
    length rx1683_eos, rx1683_tgt
    eq $I19, 1, rx1683_restart4219
    gt rx1683_pos, rx1683_eos, rx1683_fail4220
    repr_get_attr_int $I11, self, rx1683_curclass, "$!from"
    ne $I11, -1, rxscan1684_done4226
    goto rxscan1684_scan4225
  rxscan1684_loop4224:
    inc rx1683_pos
    gt rx1683_pos, rx1683_eos, rx1683_fail4220
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!from", rx1683_pos
  rxscan1684_scan4225:
    nqp_rxmark rx1683_bstack, rxscan1684_loop4224, rx1683_pos, 0
  rxscan1684_done4226:
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!pos", rx1683_pos
    store_lex unicode:"$\x{a2}", rx1683_cur
    box $P5002, 1
    set $P101, $P5002
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!pos", rx1683_pos
    $P11 = rx1683_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1683_curclass, "$!pos"
    lt $I11, 0, rx1683_fail4220
    nqp_rxmark rx1683_bstack, rxsubrule1685_pass4227, -1, 0
  rxsubrule1685_pass4227:
    rx1683_cstack = rx1683_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1683_pos, $P11, rx1683_curclass, "$!pos"
    rx1683_cur."!cursor_pass"(rx1683_pos, "arglist", 'backtrack'=>1)
    .return (rx1683_cur)
  rx1683_restart4219:
    repr_get_attr_obj rx1683_cstack, rx1683_cur, rx1683_curclass, "$!cstack"
  rx1683_fail4220:
    unless rx1683_bstack, rx1683_done4218
    pop $I19, rx1683_bstack
    if_null rx1683_cstack, rx1683_cstack_done4223
    unless rx1683_cstack, rx1683_cstack_done4223
    dec $I19
    set $P11, rx1683_cstack[$I19]
  rx1683_cstack_done4223:
    pop rx1683_rep, rx1683_bstack
    pop rx1683_pos, rx1683_bstack
    pop $I19, rx1683_bstack
    lt rx1683_pos, -1, rx1683_done4218
    lt rx1683_pos, 0, rx1683_fail4220
    eq $I19, 0, rx1683_fail4220
    nqp_islist $I20, rx1683_cstack
    unless $I20, rx1683_jump4221
    elements $I18, rx1683_bstack
    le $I18, 0, rx1683_cut4222
    dec $I18
    set $I18, rx1683_bstack[$I18]
  rx1683_cut4222:
    assign rx1683_cstack, $I18
  rx1683_jump4221:
    jump $I19
  rx1683_done4218:
    rx1683_cur."!cursor_fail"()
    .return (rx1683_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_237_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1588
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1686_start
    .local string rx1686_tgt
    .local int rx1686_pos
    .local int rx1686_off
    .local int rx1686_eos
    .local int rx1686_rep
    .local pmc rx1686_cur
    .local pmc rx1686_curclass
    .local pmc rx1686_bstack
    .local pmc rx1686_cstack
    rx1686_start = self."!cursor_start_all"()
    set rx1686_cur, rx1686_start[0]
    set rx1686_tgt, rx1686_start[1]
    set rx1686_pos, rx1686_start[2]
    set rx1686_curclass, rx1686_start[3]
    set rx1686_bstack, rx1686_start[4]
    set $I19, rx1686_start[5]
    store_lex unicode:"$\x{a2}", rx1686_cur
    length rx1686_eos, rx1686_tgt
    eq $I19, 1, rx1686_restart4230
    gt rx1686_pos, rx1686_eos, rx1686_fail4231
    repr_get_attr_int $I11, self, rx1686_curclass, "$!from"
    ne $I11, -1, rxscan1687_done4237
    goto rxscan1687_scan4236
  rxscan1687_loop4235:
    inc rx1686_pos
    gt rx1686_pos, rx1686_eos, rx1686_fail4231
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!from", rx1686_pos
  rxscan1687_scan4236:
    nqp_rxmark rx1686_bstack, rxscan1687_loop4235, rx1686_pos, 0
  rxscan1687_done4237:
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4231
    nqp_rxmark rx1686_bstack, rxsubrule1688_pass4238, -1, 0
  rxsubrule1688_pass4238:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    nqp_rxmark rx1686_bstack, rxquantr1689_done4240, rx1686_pos, 0
  rxquantr1689_loop4239:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1690_04242
    nqp_push_label $P11, alt1690_14243
    nqp_push_label $P11, alt1690_24245
    nqp_push_label $P11, alt1690_34247
    nqp_push_label $P11, alt1690_44249
    nqp_rxmark rx1686_bstack, alt1690_end4241, -1, 0
    rx1686_cur."!alt"(rx1686_pos, "alt_nfa__41_1382959283.02721", $P11)
    goto rx1686_fail4231
  alt1690_04242:
    ge rx1686_pos, rx1686_eos, rx1686_fail4231
    substr $S11, rx1686_tgt, rx1686_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1686_fail4231
    goto alt1690_end4241
  alt1690_14243:
    add $I11, rx1686_pos, 1
    gt $I11, rx1686_eos, rx1686_fail4231
    substr $S10, rx1686_tgt, rx1686_pos, 1
    ne $S10, ucs4:"=", rx1686_fail4231
    add rx1686_pos, 1
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4231
    nqp_rxmark rx1686_bstack, rxsubrule1691_pass4244, -1, 0
  rxsubrule1691_pass4244:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    goto alt1690_end4241
  alt1690_24245:
    add $I11, rx1686_pos, 1
    gt $I11, rx1686_eos, rx1686_fail4231
    substr $S10, rx1686_tgt, rx1686_pos, 1
    ne $S10, ucs4:":", rx1686_fail4231
    add rx1686_pos, 1
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4231
    nqp_rxmark rx1686_bstack, rxsubrule1692_pass4246, -1, 0
  rxsubrule1692_pass4246:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    goto alt1690_end4241
  alt1690_34247:
    add $I11, rx1686_pos, 1
    gt $I11, rx1686_eos, rx1686_fail4231
    substr $S10, rx1686_tgt, rx1686_pos, 1
    ne $S10, ucs4:"(", rx1686_fail4231
    add rx1686_pos, 1
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4231
    nqp_rxmark rx1686_bstack, rxsubrule1693_pass4248, -1, 0
  rxsubrule1693_pass4248:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    add $I11, rx1686_pos, 1
    gt $I11, rx1686_eos, rx1686_fail4231
    substr $S10, rx1686_tgt, rx1686_pos, 1
    ne $S10, ucs4:")", rx1686_fail4231
    add rx1686_pos, 1
    goto alt1690_end4241
  alt1690_44249:
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4231
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4231
    nqp_rxmark rx1686_bstack, rxsubrule1695_pass4251, -1, 0
  rxsubrule1695_pass4251:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    goto alt1690_end4241
  alt1690_end4241:
    nqp_rxpeek $I19, rx1686_bstack, rxquantr1689_done4240
    inc $I19
    inc $I19
    set rx1686_rep, rx1686_bstack[$I19]
    nqp_rxcommit rx1686_bstack, rxquantr1689_done4240
    inc rx1686_rep
  rxquantr1689_done4240:
    rx1686_cur."!cursor_pass"(rx1686_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1686_cur)
  rx1686_restart4230:
    repr_get_attr_obj rx1686_cstack, rx1686_cur, rx1686_curclass, "$!cstack"
  rx1686_fail4231:
    unless rx1686_bstack, rx1686_done4229
    pop $I19, rx1686_bstack
    if_null rx1686_cstack, rx1686_cstack_done4234
    unless rx1686_cstack, rx1686_cstack_done4234
    dec $I19
    set $P11, rx1686_cstack[$I19]
  rx1686_cstack_done4234:
    pop rx1686_rep, rx1686_bstack
    pop rx1686_pos, rx1686_bstack
    pop $I19, rx1686_bstack
    lt rx1686_pos, -1, rx1686_done4229
    lt rx1686_pos, 0, rx1686_fail4231
    eq $I19, 0, rx1686_fail4231
    nqp_islist $I20, rx1686_cstack
    unless $I20, rx1686_jump4232
    elements $I18, rx1686_bstack
    le $I18, 0, rx1686_cut4233
    dec $I18
    set $I18, rx1686_bstack[$I18]
  rx1686_cut4233:
    assign rx1686_cstack, $I18
  rx1686_jump4232:
    jump $I19
  rx1686_done4229:
    rx1686_cur."!cursor_fail"()
    .return (rx1686_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_238_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1599
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1696_start
    .local string rx1696_tgt
    .local int rx1696_pos
    .local int rx1696_off
    .local int rx1696_eos
    .local int rx1696_rep
    .local pmc rx1696_cur
    .local pmc rx1696_curclass
    .local pmc rx1696_bstack
    .local pmc rx1696_cstack
    rx1696_start = self."!cursor_start_all"()
    set rx1696_cur, rx1696_start[0]
    set rx1696_tgt, rx1696_start[1]
    set rx1696_pos, rx1696_start[2]
    set rx1696_curclass, rx1696_start[3]
    set rx1696_bstack, rx1696_start[4]
    set $I19, rx1696_start[5]
    store_lex unicode:"$\x{a2}", rx1696_cur
    length rx1696_eos, rx1696_tgt
    eq $I19, 1, rx1696_restart4254
    gt rx1696_pos, rx1696_eos, rx1696_fail4255
    repr_get_attr_int $I11, self, rx1696_curclass, "$!from"
    ne $I11, -1, rxscan1697_done4261
    goto rxscan1697_scan4260
  rxscan1697_loop4259:
    inc rx1696_pos
    gt rx1696_pos, rx1696_eos, rx1696_fail4255
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!from", rx1696_pos
  rxscan1697_scan4260:
    nqp_rxmark rx1696_bstack, rxscan1697_loop4259, rx1696_pos, 0
  rxscan1697_done4261:
    ge rx1696_pos, rx1696_eos, rx1696_fail4255
    substr $S11, rx1696_tgt, rx1696_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1696_fail4255
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!pos", rx1696_pos
    $P11 = rx1696_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1696_curclass, "$!pos"
    lt $I11, 0, rx1696_fail4255
    nqp_rxmark rx1696_bstack, rxsubrule1698_pass4262, -1, 0
  rxsubrule1698_pass4262:
    rx1696_cstack = rx1696_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1696_pos, $P11, rx1696_curclass, "$!pos"
    rx1696_cur."!cursor_pass"(rx1696_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1696_cur)
  rx1696_restart4254:
    repr_get_attr_obj rx1696_cstack, rx1696_cur, rx1696_curclass, "$!cstack"
  rx1696_fail4255:
    unless rx1696_bstack, rx1696_done4253
    pop $I19, rx1696_bstack
    if_null rx1696_cstack, rx1696_cstack_done4258
    unless rx1696_cstack, rx1696_cstack_done4258
    dec $I19
    set $P11, rx1696_cstack[$I19]
  rx1696_cstack_done4258:
    pop rx1696_rep, rx1696_bstack
    pop rx1696_pos, rx1696_bstack
    pop $I19, rx1696_bstack
    lt rx1696_pos, -1, rx1696_done4253
    lt rx1696_pos, 0, rx1696_fail4255
    eq $I19, 0, rx1696_fail4255
    nqp_islist $I20, rx1696_cstack
    unless $I20, rx1696_jump4256
    elements $I18, rx1696_bstack
    le $I18, 0, rx1696_cut4257
    dec $I18
    set $I18, rx1696_bstack[$I18]
  rx1696_cut4257:
    assign rx1696_cstack, $I18
  rx1696_jump4256:
    jump $I19
  rx1696_done4253:
    rx1696_cur."!cursor_fail"()
    .return (rx1696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_239_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1603
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1699_start
    .local string rx1699_tgt
    .local int rx1699_pos
    .local int rx1699_off
    .local int rx1699_eos
    .local int rx1699_rep
    .local pmc rx1699_cur
    .local pmc rx1699_curclass
    .local pmc rx1699_bstack
    .local pmc rx1699_cstack
    rx1699_start = self."!cursor_start_all"()
    set rx1699_cur, rx1699_start[0]
    set rx1699_tgt, rx1699_start[1]
    set rx1699_pos, rx1699_start[2]
    set rx1699_curclass, rx1699_start[3]
    set rx1699_bstack, rx1699_start[4]
    set $I19, rx1699_start[5]
    store_lex unicode:"$\x{a2}", rx1699_cur
    length rx1699_eos, rx1699_tgt
    eq $I19, 1, rx1699_restart4265
    gt rx1699_pos, rx1699_eos, rx1699_fail4266
    repr_get_attr_int $I11, self, rx1699_curclass, "$!from"
    ne $I11, -1, rxscan1700_done4272
    goto rxscan1700_scan4271
  rxscan1700_loop4270:
    inc rx1699_pos
    gt rx1699_pos, rx1699_eos, rx1699_fail4266
    repr_bind_attr_int rx1699_cur, rx1699_curclass, "$!from", rx1699_pos
  rxscan1700_scan4271:
    nqp_rxmark rx1699_bstack, rxscan1700_loop4270, rx1699_pos, 0
  rxscan1700_done4272:
    repr_bind_attr_int rx1699_cur, rx1699_curclass, "$!pos", rx1699_pos
    $P11 = rx1699_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1699_curclass, "$!pos"
    lt $I11, 0, rx1699_fail4266
    nqp_rxmark rx1699_bstack, rxsubrule1701_pass4273, -1, 0
  rxsubrule1701_pass4273:
    rx1699_cstack = rx1699_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1699_pos, $P11, rx1699_curclass, "$!pos"
    rx1699_cur."!cursor_pass"(rx1699_pos, "codeblock", 'backtrack'=>1)
    .return (rx1699_cur)
  rx1699_restart4265:
    repr_get_attr_obj rx1699_cstack, rx1699_cur, rx1699_curclass, "$!cstack"
  rx1699_fail4266:
    unless rx1699_bstack, rx1699_done4264
    pop $I19, rx1699_bstack
    if_null rx1699_cstack, rx1699_cstack_done4269
    unless rx1699_cstack, rx1699_cstack_done4269
    dec $I19
    set $P11, rx1699_cstack[$I19]
  rx1699_cstack_done4269:
    pop rx1699_rep, rx1699_bstack
    pop rx1699_pos, rx1699_bstack
    pop $I19, rx1699_bstack
    lt rx1699_pos, -1, rx1699_done4264
    lt rx1699_pos, 0, rx1699_fail4266
    eq $I19, 0, rx1699_fail4266
    nqp_islist $I20, rx1699_cstack
    unless $I20, rx1699_jump4267
    elements $I18, rx1699_bstack
    le $I18, 0, rx1699_cut4268
    dec $I18
    set $I18, rx1699_bstack[$I18]
  rx1699_cut4268:
    assign rx1699_cstack, $I18
  rx1699_jump4267:
    jump $I19
  rx1699_done4264:
    rx1699_cur."!cursor_fail"()
    .return (rx1699_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_240_1382959278.72036") :anon :lex :outer("cuid_436_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1607
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1702_start
    .local string rx1702_tgt
    .local int rx1702_pos
    .local int rx1702_off
    .local int rx1702_eos
    .local int rx1702_rep
    .local pmc rx1702_cur
    .local pmc rx1702_curclass
    .local pmc rx1702_bstack
    .local pmc rx1702_cstack
    rx1702_start = self."!cursor_start_all"()
    set rx1702_cur, rx1702_start[0]
    set rx1702_tgt, rx1702_start[1]
    set rx1702_pos, rx1702_start[2]
    set rx1702_curclass, rx1702_start[3]
    set rx1702_bstack, rx1702_start[4]
    set $I19, rx1702_start[5]
    store_lex unicode:"$\x{a2}", rx1702_cur
    length rx1702_eos, rx1702_tgt
    eq $I19, 1, rx1702_restart4276
    gt rx1702_pos, rx1702_eos, rx1702_fail4277
    repr_get_attr_int $I11, self, rx1702_curclass, "$!from"
    ne $I11, -1, rxscan1703_done4283
    goto rxscan1703_scan4282
  rxscan1703_loop4281:
    inc rx1702_pos
    gt rx1702_pos, rx1702_eos, rx1702_fail4277
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!from", rx1702_pos
  rxscan1703_scan4282:
    nqp_rxmark rx1702_bstack, rxscan1703_loop4281, rx1702_pos, 0
  rxscan1703_done4283:
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!pos", rx1702_pos
    $P11 = rx1702_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1702_curclass, "$!pos"
    lt $I11, 0, rx1702_fail4277
    nqp_rxmark rx1702_bstack, rxsubrule1704_pass4284, -1, 0
  rxsubrule1704_pass4284:
    rx1702_cstack = rx1702_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1702_pos, $P11, rx1702_curclass, "$!pos"
    rx1702_cur."!cursor_pass"(rx1702_pos, "arg", 'backtrack'=>1)
    .return (rx1702_cur)
  rx1702_restart4276:
    repr_get_attr_obj rx1702_cstack, rx1702_cur, rx1702_curclass, "$!cstack"
  rx1702_fail4277:
    unless rx1702_bstack, rx1702_done4275
    pop $I19, rx1702_bstack
    if_null rx1702_cstack, rx1702_cstack_done4280
    unless rx1702_cstack, rx1702_cstack_done4280
    dec $I19
    set $P11, rx1702_cstack[$I19]
  rx1702_cstack_done4280:
    pop rx1702_rep, rx1702_bstack
    pop rx1702_pos, rx1702_bstack
    pop $I19, rx1702_bstack
    lt rx1702_pos, -1, rx1702_done4275
    lt rx1702_pos, 0, rx1702_fail4277
    eq $I19, 0, rx1702_fail4277
    nqp_islist $I20, rx1702_cstack
    unless $I20, rx1702_jump4278
    elements $I18, rx1702_bstack
    le $I18, 0, rx1702_cut4279
    dec $I18
    set $I18, rx1702_bstack[$I18]
  rx1702_cut4279:
    assign rx1702_cstack, $I18
  rx1702_jump4278:
    jump $I19
  rx1702_done4275:
    rx1702_cur."!cursor_fail"()
    .return (rx1702_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_437_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1614
    .const 'Sub' $P5008 = 'cuid_241_1382959278.72036' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_242_1382959278.72036' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_243_1382959278.72036' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_244_1382959278.72036' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_245_1382959278.72036' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_246_1382959278.72036' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_247_1382959278.72036' 
    capture_lex $P5008 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_241_1382959278.72036' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_242_1382959278.72036' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_243_1382959278.72036' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_244_1382959278.72036' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_245_1382959278.72036' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_246_1382959278.72036' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_247_1382959278.72036' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_241_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1617
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$ast", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_195 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    new $P5003, 'ResizablePMCArray'
    set fb_tmp_195, _lex_param_1
    repr_defined $I5001, fb_tmp_195
    unless $I5001 goto if1705_else4285 
    set $P5004, fb_tmp_195[0]
    set $P5006, $P5004
    goto if1705_end4286
  if1705_else4285:
    null $P5005
    set $P5006, $P5005
  if1705_end4286:
    unless_null $P5006, vivi_17064287
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_17064287:
    push $P5003, $P5006
    repr_bind_attr_obj $P5001, $P5002, "@!block_stack", 0, $P5003
.annotate 'line', 1619
    nqp_decontainerize $P5008, _lex_param_0
    $P5008."visit_children"(_lex_param_1)
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_block" :subid("cuid_242_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1623
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
.annotate 'line', 1624
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    $P5003."push"(_lex_param_1)
.annotate 'line', 1626
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 1628
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!block_stack", 0
    $P5007."pop"()
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "find_lex" :subid("cuid_243_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1633
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_438_1382959278.72036' 
    capture_lex $P5009 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    set $I101, 0
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_4288
    .lex "RETURN", $P101
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    set $N5001, $P5003
    set $I5001, $N5001
    set $I101, $I5001
  while1707_test4290:
    set $N5002, $I101
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5007, $I5002
    set $P5006, $P5007
    unless $I5002 goto while1707_done4294 
  while1707_redo4292:
    .const 'Sub' $P5004 = 'cuid_438_1382959278.72036' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5006, $P5005
    goto while1707_test4290 
  while1707_done4294:
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    goto lexotic_4289
  lexotic_4288:
    .get_results ($P5008)
  lexotic_4289:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_438_1382959278.72036") :anon :lex :outer("cuid_243_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1635
    .lex "%sym", $P101 
    .local pmc fb_tmp_196 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $I5002, "$i"
    sub $I5001, $I5002, 1
    store_lex "$i", $I5001
.annotate 'line', 1637
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    repr_get_attr_obj $P5005, $P5002, $P5004, "@!block_stack", 0
    set fb_tmp_196, $P5005
    repr_defined $I5003, fb_tmp_196
    unless $I5003 goto if1708_else4295 
    find_lex $I5004, "$i"
    set $P5006, fb_tmp_196[$I5004]
    set $P5008, $P5006
    goto if1708_end4296
  if1708_else4295:
    null $P5007
    set $P5008, $P5007
  if1708_end4296:
    unless_null $P5008, vivi_17094297
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_17094297:
    find_lex $P5010, "$name"
    $P5011 = $P5008."symbol"($P5010)
    set $P101, $P5011
    set $N5001, $P101
    box $P5014, $N5001
    set $P5013, $P5014
    unless $N5001 goto if1710_end4299 
.annotate 'line', 1638
    $P5012 = "RETURN"($P101)
    set $P5013, $P5012
  if1710_end4299:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_244_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1645
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "%sym", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_197 
    new $P5001, 'Hash'
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4300
    .lex "RETURN", $P102
.annotate 'line', 1646
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."find_lex"(_lex_param_1)
    set $P101, $P5003
    get_id $I5003, $P101
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    get_id $I5004, $P5004
    iseq $I5002, $I5003, $I5004
    not $I5001, $I5002
    set $I5006, $I5001
    unless $I5001 goto if1712_end4305 
    exists $I5005, $P101["value"]
    set $I5006, $I5005
  if1712_end4305:
    unless $I5006 goto if1711_else4302 
.annotate 'line', 1647
    set fb_tmp_197, $P101
    repr_defined $I5007, fb_tmp_197
    unless $I5007 goto if1713_else4306 
    set $P5005, fb_tmp_197["value"]
    set $P5007, $P5005
    goto if1713_end4307
  if1713_else4306:
    null $P5006
    set $P5007, $P5006
  if1713_end4307:
    unless_null $P5007, vivi_17144308
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_17144308:
    $P5009 = "RETURN"($P5007)
    set $P5011, $P5009
    goto if1711_end4303
  if1711_else4302:
.annotate 'line', 1650
    set $S5002, _lex_param_1
    concat $S5001, "No compile-time value for ", $S5002
    box $P5010, $S5001
    die $P5010
    set $P5011, $P5010
  if1711_end4303:
    goto lexotic_4301
  lexotic_4300:
    .get_results ($P5011)
  lexotic_4301:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "visit_op" :subid("cuid_245_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1655
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_440_1382959278.72036' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_443_1382959278.72036' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_444_1382959278.72036' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_445_1382959278.72036' 
    capture_lex $P5043 
    .lex "&returns_int", $P101 
    .lex "$typeinfo", $P102 
    .lex "$asm", $P103 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_201 
    .const 'Sub' $P5001 = 'cuid_440_1382959278.72036' 
    capture_lex $P5001
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_4338
    .lex "RETURN", $P104
.annotate 'line', 1679
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 1681
    $P5005 = _lex_param_1."op"()
    set $S5001, $P5005
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if1729_else4340 
.annotate 'line', 1682
    $P5006 = _lex_param_1."op"()
    set $S5003, $P5006
    $P5007 = _lex_param_1."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if1729_end4341
  if1729_else4340:
    set $S5005, ""
  if1729_end4341:
    box $P5008, $S5005
    set $P102, $P5008
.annotate 'line', 1684
    $P5009 = _lex_param_1."op"()
    set $S5007, $P5009
    substr $S5006, $S5007, 0, 3
    box $P5010, $S5006
    set $P103, $P5010
    new $P5041, 'ExceptionHandler'
    set_label $P5041, catch_handler_17544383
    $P5041.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5041
.annotate 'line', 1686
    new $P5039, 'ExceptionHandler'
    set_label $P5039, catch_handler_17524381
    $P5039.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5039
    set $S5008, $P102
    iseq $I5005, $S5008, "_n"
    set $I5011, $I5005
    unless $I5005 goto if1731_end4345 
    set $S5009, $P103
    iseq $I5006, $S5009, "add"
    set $I5008, $I5006
    if $I5006 goto unless1733_end4349 
    set $S5010, $P103
    iseq $I5007, $S5010, "sub"
    set $I5008, $I5007
  unless1733_end4349:
    set $I5010, $I5008
    if $I5008 goto unless1732_end4347 
    set $S5011, $P103
    iseq $I5009, $S5011, "mul"
    set $I5010, $I5009
  unless1732_end4347:
    set $I5011, $I5010
  if1731_end4345:
    unless $I5011 goto if1730_else4342 
    .const 'Sub' $P5011 = 'cuid_443_1382959278.72036' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if1730_end4343
  if1730_else4342:
    set $S5012, $P102
    iseq $I5012, $S5012, "_i"
    unless $I5012 goto if1740_else4360 
.annotate 'line', 1696
.annotate 'line', 1697
    nqp_decontainerize $P5013, _lex_param_0
    $P5014 = $P5013."find_sym"("num")
    $P5015 = _lex_param_1."returns"($P5014)
    set $P5037, $P5015
    goto if1740_end4361
  if1740_else4360:
    set $S5013, $P102
    iseq $I5013, $S5013, "_s"
    unless $I5013 goto if1741_else4362 
.annotate 'line', 1698
.annotate 'line', 1699
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5016."find_sym"("str")
    $P5018 = _lex_param_1."returns"($P5017)
    set $P5036, $P5018
    goto if1741_end4363
  if1741_else4362:
.annotate 'line', 1700
    $P5019 = _lex_param_1."op"()
    set $S5014, $P5019
    iseq $I5014, $S5014, "handle"
    unless $I5014 goto if1742_else4364 
.annotate 'line', 1701
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."visit_handle"(_lex_param_1)
    $P5022 = "RETURN"($P5021)
    set $P5035, $P5022
    goto if1742_end4365
  if1742_else4364:
.annotate 'line', 1702
    $P5023 = _lex_param_1."op"()
    set $S5015, $P5023
    iseq $I5015, $S5015, "numify"
    box $P5034, $I5015
    set $P5033, $P5034
    unless $I5015 goto if1743_end4367 
    set fb_tmp_201, _lex_param_1
    repr_defined $I5017, fb_tmp_201
    unless $I5017 goto if1745_else4370 
    set $P5024, fb_tmp_201[0]
    set $P5026, $P5024
    goto if1745_end4371
  if1745_else4370:
    null $P5025
    set $P5026, $P5025
  if1745_end4371:
    unless_null $P5026, vivi_17464372
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_17464372:
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5016, $P5026, $P5028
    box $P5032, $I5016
    set $P5031, $P5032
    unless $I5016 goto if1744_end4369 
    .const 'Sub' $P5029 = 'cuid_444_1382959278.72036' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5031, $P5030
  if1744_end4369:
    set $P5033, $P5031
  if1743_end4367:
    set $P5035, $P5033
  if1742_end4365:
    set $P5036, $P5035
  if1741_end4363:
    set $P5037, $P5036
  if1740_end4361:
  if1730_end4343:
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5038
    pop_eh 
    goto skip_handler_17514380
  catch_handler_17524381:
    .get_results ($P5039) 
    .const 'Sub' $P10001 = 'cuid_445_1382959278.72036' 
    capture_lex $P10001
    $P10001($P5039)
    set $I10001, 1
    set $P5039["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5039
    pop_upto_eh $P5039
    pop_eh 
    set $P5040, $P10002
    goto skip_handler_17514380
  skip_handler_17514380:
    set $P5042, $P5040
    pop_eh 
    goto skip_handler_17534382
  catch_handler_17544383:
    .get_results ($P5041) 
    set $I10001, 1
    set $P5041["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5041
    pop_upto_eh $P5041
    pop_eh 
    set $P5042, $P10001
    goto skip_handler_17534382
  skip_handler_17534382:
    goto lexotic_4339
  lexotic_4338:
    .get_results (_lex_param_1)
  lexotic_4339:
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "returns_int" :subid("cuid_440_1382959278.72036") :anon :lex :outer("cuid_245_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1656
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_439_1382959278.72036' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_441_1382959278.72036' 
    capture_lex $P5016 
    .lex "$node", _lex_param_0 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_4309
    .lex "RETURN", $P101
.annotate 'line', 1657
    $P5001 = _lex_param_0."returns"()
    repr_get_primitive_type_spec $I5002, $P5001
    set $N5001, $I5002
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1715_end4312 
    $P5002 = "RETURN"(1)
  if1715_end4312:
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    type_check $I5003, _lex_param_0, $P5003
    unless $I5003 goto if1716_else4313 
    .const 'Sub' $P5004 = 'cuid_439_1382959278.72036' 
    capture_lex $P5004
    $P5005 = $P5004()
    goto if1716_end4314
  if1716_else4313:
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    type_check $I5004, _lex_param_0, $P5006
    unless $I5004 goto if1722_else4325 
.annotate 'line', 1669
    $P5007 = "RETURN"(1)
    set $P5014, $P5007
    goto if1722_end4326
  if1722_else4325:
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5005, _lex_param_0, $P5008
    set $I5007, $I5005
    unless $I5005 goto if1724_end4330 
.annotate 'line', 1671
    $P5009 = _lex_param_0."scope"()
    set $S5001, $P5009
    iseq $I5006, $S5001, "lexical"
    set $I5007, $I5006
  if1724_end4330:
    box $P5013, $I5007
    set $P5012, $P5013
    unless $I5007 goto if1723_end4328 
    .const 'Sub' $P5010 = 'cuid_441_1382959278.72036' 
    capture_lex $P5010
    $P5011 = $P5010()
    set $P5012, $P5011
  if1723_end4328:
    set $P5014, $P5012
  if1722_end4326:
  if1716_end4314:
    $P5015 = "RETURN"(0)
    goto lexotic_4310
  lexotic_4309:
    .get_results ($P5015)
  lexotic_4310:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_439_1382959278.72036") :anon :lex :outer("cuid_440_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1660
    .lex "$typeinfo", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1661
    find_lex $P5002, "$node"
    $P5003 = $P5002."op"()
    set $S5001, $P5003
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if1717_else4315 
.annotate 'line', 1662
    find_lex $P5004, "$node"
    $P5005 = $P5004."op"()
    set $S5003, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if1717_end4316
  if1717_else4315:
    set $S5005, ""
  if1717_end4316:
    box $P5008, $S5005
    set $P101, $P5008
    set $S5006, $P101
    iseq $I5005, $S5006, "_i"
    unless $I5005 goto if1718_else4317 
.annotate 'line', 1664
    $P5009 = "RETURN"(1)
    set $P5019, $P5009
    goto if1718_end4318
  if1718_else4317:
.annotate 'line', 1666
    find_lex $P5010, "$node"
    $P5011 = $P5010."op"()
    set $S5007, $P5011
    iseq $I5006, $S5007, "chars"
    set $I5008, $I5006
    if $I5006 goto unless1721_end4324 
    find_lex $P5012, "$node"
    $P5013 = $P5012."op"()
    set $S5008, $P5013
    iseq $I5007, $S5008, "ord"
    set $I5008, $I5007
  unless1721_end4324:
    set $I5010, $I5008
    if $I5008 goto unless1720_end4322 
    find_lex $P5014, "$node"
    $P5015 = $P5014."op"()
    set $S5009, $P5015
    iseq $I5009, $S5009, "elems"
    set $I5010, $I5009
  unless1720_end4322:
    box $P5018, $I5010
    set $P5017, $P5018
    unless $I5010 goto if1719_end4320 
    $P5016 = "RETURN"(1)
    set $P5017, $P5016
  if1719_end4320:
    set $P5019, $P5017
  if1718_end4318:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_441_1382959278.72036") :anon :lex :outer("cuid_440_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1671
    .lex "%sym", $P101 
    .local pmc fb_tmp_198 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 1672
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."find_lex"($P5005)
    set $P101, $P5006
    exists $I5001, $P101["type"]
    set $I5005, $I5001
    unless $I5001 goto if1726_end4334 
    set fb_tmp_198, $P101
    repr_defined $I5004, fb_tmp_198
    unless $I5004 goto if1727_else4335 
    set $P5007, fb_tmp_198["type"]
    set $P5009, $P5007
    goto if1727_end4336
  if1727_else4335:
    null $P5008
    set $P5009, $P5008
  if1727_end4336:
    unless_null $P5009, vivi_17284337
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_17284337:
    repr_get_primitive_type_spec $I5003, $P5009
    set $N5001, $I5003
    set $N5002, 1
    iseq $I5002, $N5001, $N5002
    set $I5005, $I5002
  if1726_end4334:
    box $P5013, $I5005
    set $P5012, $P5013
    unless $I5005 goto if1725_end4332 
.annotate 'line', 1673
    $P5011 = "RETURN"(1)
    set $P5012, $P5011
  if1725_end4332:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_443_1382959278.72036") :anon :lex :outer("cuid_245_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1687
    .const 'Sub' $P5025 = 'cuid_442_1382959278.72036' 
    capture_lex $P5025 
    .lex "$newopn", $P101 
    .local pmc fb_tmp_199 
    .local pmc fb_tmp_200 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 1689
    find_lex $P5004, "$op"
    set fb_tmp_199, $P5004
    repr_defined $I5001, fb_tmp_199
    unless $I5001 goto if1736_else4354 
    set $P5005, fb_tmp_199[0]
    set $P5007, $P5005
    goto if1736_end4355
  if1736_else4354:
    null $P5006
    set $P5007, $P5006
  if1736_end4355:
    unless_null $P5007, vivi_17374356
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_17374356:
    $P5009 = "&returns_int"($P5007)
    set $P5016, $P5009
    unless $P5009 goto if1735_end4353 
    find_lex $P5010, "$op"
    set fb_tmp_200, $P5010
    repr_defined $I5002, fb_tmp_200
    unless $I5002 goto if1738_else4357 
    set $P5011, fb_tmp_200[1]
    set $P5013, $P5011
    goto if1738_end4358
  if1738_else4357:
    null $P5012
    set $P5013, $P5012
  if1738_end4358:
    unless_null $P5013, vivi_17394359
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_17394359:
    $P5015 = "&returns_int"($P5013)
    set $P5016, $P5015
  if1735_end4353:
    unless $P5016 goto if1734_else4350 
    .const 'Sub' $P5017 = 'cuid_442_1382959278.72036' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5024, $P5018
    goto if1734_end4351
  if1734_else4350:
.annotate 'line', 1693
.annotate 'line', 1694
    find_lex $P5019, "$op"
    find_lex $P5021, "self"
    nqp_decontainerize $P5020, $P5021
    $P5022 = $P5020."find_sym"("num")
    $P5023 = $P5019."returns"($P5022)
    set $P5024, $P5023
  if1734_end4351:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1382959278.72036") :anon :lex :outer("cuid_443_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1689
    .lex "$newopn", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 1691
    find_lex $P5004, "$op"
    $P5004."op"($P101)
.annotate 'line', 1692
    find_lex $P5005, "$op"
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    $P5008 = $P5006."find_sym"("int")
    $P5009 = $P5005."returns"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_444_1382959278.72036") :anon :lex :outer("cuid_245_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1705
    .lex "$sigil", $P101 
    .local pmc fb_tmp_202 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1706
    find_lex $P5002, "$op"
    set fb_tmp_202, $P5002
    repr_defined $I5001, fb_tmp_202
    unless $I5001 goto if1747_else4373 
    set $P5003, fb_tmp_202[0]
    set $P5005, $P5003
    goto if1747_end4374
  if1747_else4373:
    null $P5004
    set $P5005, $P5004
  if1747_end4374:
    unless_null $P5005, vivi_17484375
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_17484375:
    $P5007 = $P5005."name"()
    set $S5002, $P5007
    substr $S5001, $S5002, 0, 1
    box $P5008, $S5001
    set $P101, $P5008
    set $S5003, $P101
    iseq $I5002, $S5003, "@"
    set $I5004, $I5002
    if $I5002 goto unless1750_end4379 
    set $S5004, $P101
    iseq $I5003, $S5004, "%"
    set $I5004, $I5003
  unless1750_end4379:
    box $P5015, $I5004
    set $P5014, $P5015
    unless $I5004 goto if1749_end4377 
.annotate 'line', 1707
.annotate 'line', 1708
    find_lex $P5009, "$op"
    find_lex $P5011, "self"
    nqp_decontainerize $P5010, $P5011
    $P5012 = $P5010."find_sym"("int")
    $P5013 = $P5009."returns"($P5012)
    set $P5014, $P5013
  if1749_end4377:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1382959278.72036") :anon :lex :outer("cuid_245_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1712
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "visit_handle" :subid("cuid_246_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1719
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$handle", _lex_param_1 
.annotate 'line', 1720
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."visit_children"(_lex_param_1, 1 :named("skip_selectors"))
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_children" :subid("cuid_247_1382959278.72036") :anon :lex :outer("cuid_437_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1724
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("skip_selectors") :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5007 = 'cuid_446_1382959278.72036' 
    capture_lex $P5007 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$skip_selectors", _lex_param_2 
    if haz_param_5, default4404
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_2, $P5006
  default4404:
    set $I101, 0
    set $I101, 0
    nqp_isstr $I5001, _lex_param_1
    set $I5005, $I5001
    if $I5001 goto unless1755_end4385 
.annotate 'line', 1726
  while1756_test4386:
    set $N5001, $I101
    $P5001 = _lex_param_1."list"()
    set $N5002, $P5001
    islt $I5002, $N5001, $N5002
    set $I5004, $I5002
    unless $I5002 goto while1756_done4390 
  while1756_redo4388:
.annotate 'line', 1727
    set $P5002, _lex_param_2
    unless _lex_param_2 goto if1758_end4394 
    set $N5004, $I101
    set $N5005, 2
    mod $N5003, $N5004, $N5005
    box $P5003, $N5003
    set $P5002, $P5003
  if1758_end4394:
    if $P5002 goto unless1757_end4392 
    .const 'Sub' $P5004 = 'cuid_446_1382959278.72036' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless1757_end4392:
    add $I5003, $I101, 1
    set $I101, $I5003
    set $I5004, $I101
    goto while1756_test4386 
  while1756_done4390:
    set $I5005, $I5004
  unless1755_end4385:
    .return ($I5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1382959278.72036") :anon :lex :outer("cuid_247_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1728
    .lex "$visit", $P101 
    .local pmc fb_tmp_203 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$node"
    set fb_tmp_203, $P5002
    repr_defined $I5001, fb_tmp_203
    unless $I5001 goto if1759_else4395 
    find_lex $I5002, "$i"
    set $P5003, fb_tmp_203[$I5002]
    set $P5005, $P5003
    goto if1759_end4396
  if1759_else4395:
    null $P5004
    set $P5005, $P5004
  if1759_end4396:
    unless_null $P5005, vivi_17604397
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_17604397:
    set $P101, $P5005
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    type_check $I5003, $P101, $P5007
    unless $I5003 goto if1761_else4398 
.annotate 'line', 1730
    find_lex $P5008, "$node"
    find_lex $I5004, "$i"
.annotate 'line', 1731
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    $P5011 = $P5009."visit_op"($P101)
    set $P5008[$I5004], $P5011
    set $P5026, $P5011
    goto if1761_end4399
  if1761_else4398:
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 108
    type_check $I5005, $P101, $P5012
    unless $I5005 goto if1762_else4400 
.annotate 'line', 1732
    find_lex $P5013, "$node"
    find_lex $I5006, "$i"
.annotate 'line', 1733
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    $P5016 = $P5014."visit_block"($P101)
    set $P5013[$I5006], $P5016
    set $P5025, $P5016
    goto if1762_end4401
  if1762_else4400:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 69
    type_check $I5007, $P101, $P5017
    unless $I5007 goto if1763_else4402 
.annotate 'line', 1734
.annotate 'line', 1735
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    $P5020 = $P5018."visit_children"($P101, 1 :named("skip_selectors"))
    set $P5024, $P5020
    goto if1763_end4403
  if1763_else4402:
.annotate 'line', 1736
.annotate 'line', 1737
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."visit_children"($P101)
    set $P5024, $P5023
  if1763_end4403:
    set $P5025, $P5024
  if1762_end4401:
    set $P5026, $P5025
  if1761_end4399:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1747
    .const 'Sub' $P5124 = 'cuid_448_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_451_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_454_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_455_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_458_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_460_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_461_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_462_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_464_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_465_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_471_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_352_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_353_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_354_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_355_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_356_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_357_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_358_1382959278.72036' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_359_1382959278.72036' 
    capture_lex $P5124 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "&xblock_immediate", $P103 
    .lex "&block_immediate", $P104 
    .lex "&default_for", $P105 
    .lex "&default_value_for_prim", $P106 
    .lex "&colonpair_str", $P107 
    .lex "&import_HOW_exports", $P108 
    .lex "&set_block_handler", $P109 
    .lex "&only_star_block", $P110 
    .lex "&attach_multi_signature", $P111 
    .lex "&wrap_return_handler", $P112 
    .lex "&lexical_package_lookup", $P113 
    .const 'Sub' $P5001 = 'cuid_448_1382959278.72036' 
    capture_lex $P5001
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_451_1382959278.72036' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_454_1382959278.72036' 
    capture_lex $P5003
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_455_1382959278.72036' 
    capture_lex $P5004
    set $P106, $P5004
    .const 'Sub' $P5005 = 'cuid_458_1382959278.72036' 
    capture_lex $P5005
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_460_1382959278.72036' 
    capture_lex $P5006
    set $P108, $P5006
    .const 'Sub' $P5007 = 'cuid_461_1382959278.72036' 
    capture_lex $P5007
    set $P109, $P5007
    .const 'Sub' $P5008 = 'cuid_462_1382959278.72036' 
    capture_lex $P5008
    set $P110, $P5008
    .const 'Sub' $P5009 = 'cuid_464_1382959278.72036' 
    capture_lex $P5009
    set $P111, $P5009
    .const 'Sub' $P5010 = 'cuid_465_1382959278.72036' 
    capture_lex $P5010
    set $P112, $P5010
    .const 'Sub' $P5011 = 'cuid_471_1382959278.72036' 
    capture_lex $P5011
    set $P113, $P5011
    .const 'Sub' $P5012 = 'cuid_248_1382959278.72036' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_249_1382959278.72036' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_250_1382959278.72036' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_251_1382959278.72036' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_252_1382959278.72036' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_253_1382959278.72036' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_254_1382959278.72036' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_255_1382959278.72036' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_256_1382959278.72036' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_257_1382959278.72036' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_258_1382959278.72036' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_259_1382959278.72036' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_260_1382959278.72036' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_261_1382959278.72036' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_262_1382959278.72036' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_263_1382959278.72036' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_264_1382959278.72036' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_265_1382959278.72036' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_266_1382959278.72036' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_267_1382959278.72036' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_268_1382959278.72036' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_269_1382959278.72036' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_270_1382959278.72036' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_271_1382959278.72036' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_272_1382959278.72036' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_273_1382959278.72036' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_274_1382959278.72036' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_275_1382959278.72036' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_276_1382959278.72036' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_277_1382959278.72036' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_278_1382959278.72036' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_279_1382959278.72036' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_280_1382959278.72036' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_281_1382959278.72036' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_282_1382959278.72036' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_283_1382959278.72036' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_284_1382959278.72036' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_285_1382959278.72036' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_286_1382959278.72036' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_287_1382959278.72036' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_288_1382959278.72036' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_289_1382959278.72036' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_290_1382959278.72036' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_291_1382959278.72036' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_292_1382959278.72036' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_293_1382959278.72036' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_294_1382959278.72036' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_295_1382959278.72036' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_296_1382959278.72036' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_297_1382959278.72036' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_298_1382959278.72036' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_299_1382959278.72036' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_300_1382959278.72036' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_301_1382959278.72036' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_302_1382959278.72036' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_303_1382959278.72036' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_304_1382959278.72036' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_305_1382959278.72036' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_306_1382959278.72036' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_307_1382959278.72036' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_308_1382959278.72036' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_309_1382959278.72036' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_310_1382959278.72036' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_311_1382959278.72036' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_312_1382959278.72036' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_313_1382959278.72036' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_314_1382959278.72036' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_315_1382959278.72036' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_316_1382959278.72036' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_317_1382959278.72036' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_318_1382959278.72036' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_319_1382959278.72036' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_320_1382959278.72036' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_321_1382959278.72036' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_322_1382959278.72036' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_323_1382959278.72036' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_324_1382959278.72036' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_325_1382959278.72036' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_326_1382959278.72036' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_327_1382959278.72036' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_328_1382959278.72036' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_329_1382959278.72036' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_330_1382959278.72036' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_331_1382959278.72036' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_332_1382959278.72036' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_333_1382959278.72036' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_334_1382959278.72036' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_335_1382959278.72036' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_336_1382959278.72036' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_337_1382959278.72036' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_338_1382959278.72036' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_339_1382959278.72036' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_340_1382959278.72036' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_341_1382959278.72036' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_342_1382959278.72036' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_343_1382959278.72036' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_344_1382959278.72036' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_345_1382959278.72036' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_346_1382959278.72036' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_347_1382959278.72036' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_348_1382959278.72036' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_349_1382959278.72036' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_350_1382959278.72036' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_351_1382959278.72036' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_352_1382959278.72036' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_353_1382959278.72036' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_354_1382959278.72036' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_355_1382959278.72036' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_356_1382959278.72036' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_357_1382959278.72036' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_358_1382959278.72036' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_359_1382959278.72036' 
    capture_lex $P5123
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_448_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1748
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_204 
.annotate 'line', 1749
    set fb_tmp_204, _lex_param_0
    repr_defined $I5001, fb_tmp_204
    unless $I5001 goto if1764_else4405 
    set $P5001, fb_tmp_204[1]
    set $P5003, $P5001
    goto if1764_end4406
  if1764_else4405:
    null $P5002
    set $P5003, $P5002
  if1764_end4406:
    unless_null $P5003, vivi_17654407
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  vivi_17654407:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_451_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1753
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_450_1382959278.72036' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1754
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1755
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1766_end4409 
    .const 'Sub' $P5002 = 'cuid_450_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1766_end4409:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_450_1382959278.72036") :anon :lex :outer("cuid_451_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1755
    .const 'Sub' $P5013 = 'cuid_449_1382959278.72036' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1756
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1757
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4410:
    unless $P5008, for_done4412
    shift $P5012, $P5008
  for_redo4411:
    .const 'Sub' $P5011 = 'cuid_449_1382959278.72036' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4410
  for_done4412:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1382959278.72036") :anon :lex :outer("cuid_450_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1757
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_454_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1763
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_453_1382959278.72036' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1767_else4413 
.annotate 'line', 1764
.annotate 'line', 1765
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1767_end4414
  if1767_else4413:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1768_else4415 
.annotate 'line', 1767
.annotate 'line', 1768
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1768_end4416
  if1768_else4415:
    .const 'Sub' $P5005 = 'cuid_453_1382959278.72036' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1768_end4416:
    set $P5008, $P5007
  if1767_end4414:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1382959278.72036") :anon :lex :outer("cuid_454_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1770
    .const 'Sub' $P5020 = 'cuid_452_1382959278.72036' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_205 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17754425
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1772
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17734423
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1773
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4417
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_205, $P5004
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if1769_else4418 
    set $P5006, fb_tmp_205["$W"]
    set $P5008, $P5006
    goto if1769_end4419
  if1769_else4418:
    null $P5007
    set $P5008, $P5007
  if1769_end4419:
    unless_null $P5008, vivi_17704420
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_17704420:
    unless_null $P5008, vivi_17714421
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17714421:
    set $P5003, $P5008
  fallback4417:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17724422
  catch_handler_17734423:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_452_1382959278.72036' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17724422
  skip_handler_17724422:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17744424
  catch_handler_17754425:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17744424
  skip_handler_17744424:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1382959278.72036") :anon :lex :outer("cuid_453_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1774
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_455_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1780
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1776_else4426 
.annotate 'line', 1781
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1776_end4427
  if1776_else4426:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1777_else4428 
.annotate 'line', 1782
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 49
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1777_end4429
  if1777_else4428:
.annotate 'line', 1783
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1777_end4429:
    set $P5008, $P5007
  if1776_end4427:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_458_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1795
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_457_1382959278.72036' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1778_else4430 
    .const 'Sub' $P5002 = 'cuid_457_1382959278.72036' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1778_end4431
  if1778_else4430:
.annotate 'line', 1800
.annotate 'line', 1801
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1778_end4431:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1382959278.72036") :anon :lex :outer("cuid_458_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1796
    .const 'Sub' $P5010 = 'cuid_456_1382959278.72036' 
    capture_lex $P5010 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1798
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4432:
    unless $P5004, for_done4434
    shift $P5008, $P5004
  for_redo4433:
    .const 'Sub' $P5007 = 'cuid_456_1382959278.72036' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4432
  for_done4434:
.annotate 'line', 1799
    $P5009 = "&join"(" ", $P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1382959278.72036") :anon :lex :outer("cuid_457_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1798
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_460_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1987
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_459_1382959278.72036' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_206 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1779_end4436 
.annotate 'line', 1989
    set fb_tmp_206, _lex_param_0
    repr_defined $I5002, fb_tmp_206
    unless $I5002 goto if1780_else4437 
    set $P5005, fb_tmp_206["EXPORTHOW"]
    set $P5007, $P5005
    goto if1780_end4438
  if1780_else4437:
    null $P5006
    set $P5007, $P5006
  if1780_end4438:
    unless_null $P5007, vivi_17814439
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_17814439:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4445:
    unless $P5003, for_done4447
    shift $P5010, $P5003
  for_redo4446:
    .const 'Sub' $P5009 = 'cuid_459_1382959278.72036' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4445
  for_done4447:
    set $P5011, $P5001
  if1779_end4436:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1382959278.72036") :anon :lex :outer("cuid_460_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1990
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_207 
    .local pmc pkg_viv_tmp_42 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4440
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_42, $P5002
    set fb_tmp_207, pkg_viv_tmp_42
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if1782_else4441 
    set $P5004, fb_tmp_207["%HOW"]
    set $P5006, $P5004
    goto if1782_end4442
  if1782_else4441:
    null $P5005
    set $P5006, $P5005
  if1782_end4442:
    unless_null $P5006, vivi_17834443
    new $P5007, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17834443:
    unless_null $P5006, vivi_17844444
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17844444:
    set $P5001, $P5006
  fallback4440:
.annotate 'line', 1991
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_461_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2089
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_208 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_209 
    .local pmc pkg_viv_tmp_44 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4450
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_43, $P5002
    set fb_tmp_208, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if1786_else4451 
    set $P5004, fb_tmp_208["%HANDLERS"]
    set $P5006, $P5004
    goto if1786_end4452
  if1786_else4451:
    null $P5005
    set $P5006, $P5005
  if1786_end4452:
    unless_null $P5006, vivi_17874453
    new $P5007, 'Hash'
    set pkg_viv_tmp_43["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17874453:
    unless_null $P5006, vivi_17884454
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17884454:
    set $P5001, $P5006
  fallback4450:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1785_end4449 
.annotate 'line', 2090
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1785_end4449:
.annotate 'line', 2093
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1789_end4456 
.annotate 'line', 2094
.annotate 'line', 2095
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2096
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 2097
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 2100
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 2101
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 2102
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 2103
    $P5019 = _lex_param_1."arity"(1)
  unless1789_end4456:
.annotate 'line', 2105
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4457
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_44, $P5021
    set fb_tmp_209, pkg_viv_tmp_44
    repr_defined $I5003, fb_tmp_209
    unless $I5003 goto if1790_else4458 
    set $P5023, fb_tmp_209["%HANDLERS"]
    set $P5025, $P5023
    goto if1790_end4459
  if1790_else4458:
    null $P5024
    set $P5025, $P5024
  if1790_end4459:
    unless_null $P5025, vivi_17914460
    new $P5026, 'Hash'
    set pkg_viv_tmp_44["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17914460:
    unless_null $P5025, vivi_17924461
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17924461:
    set $P5020, $P5025
  fallback4457:
    set $S5005, _lex_param_2
.annotate 'line', 2106
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 2107
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2109
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 2111
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
.annotate 'line', 2112
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2114
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 2115
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 2116
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 2118
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5043 = $P5042."new"("null" :named("op"))
.annotate 'line', 2119
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5045 = $P5044."new"("null" :named("op"))
    $P5046 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"), $P5045 :named("moar"))
.annotate 'line', 2121
    $P5047 = "&default_for"("$")
    $P5048 = $P5028."new"($P5032, $P5046, $P5047)
    set $P5020[$S5005], $P5048
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_462_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2770
    .lex "$past", $P101 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2771
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4462
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_210, $P5003
    repr_defined $I5001, fb_tmp_210
    unless $I5001 goto if1793_else4463 
    set $P5005, fb_tmp_210["$W"]
    set $P5007, $P5005
    goto if1793_end4464
  if1793_else4463:
    null $P5006
    set $P5007, $P5006
  if1793_end4464:
    unless_null $P5007, vivi_17944465
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_17944465:
    unless_null $P5007, vivi_17954466
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17954466:
    set $P5002, $P5007
  fallback4462:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2772
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2774
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2776
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2778
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
.annotate 'line', 2780
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2781
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4467
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set fb_tmp_211, $P5021
    repr_defined $I5002, fb_tmp_211
    unless $I5002 goto if1796_else4468 
    set $P5023, fb_tmp_211["$W"]
    set $P5025, $P5023
    goto if1796_end4469
  if1796_else4468:
    null $P5024
    set $P5025, $P5024
  if1796_end4469:
    unless_null $P5025, vivi_17974470
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_17974470:
    unless_null $P5025, vivi_17984471
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17984471:
    set $P5020, $P5025
  fallback4467:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2783
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2785
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2787
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2788
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5042 = $P5041."new"("savecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2791
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_464_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2796
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_463_1382959278.72036' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_215 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_212, _lex_param_1
    repr_defined $I5001, fb_tmp_212
    unless $I5001 goto if1799_else4472 
    set $P5008, fb_tmp_212[0]
    set $P5010, $P5008
    goto if1799_end4473
  if1799_else4472:
    null $P5009
    set $P5010, $P5009
  if1799_end4473:
    unless_null $P5010, vivi_18004474
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_18004474:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4493:
    unless $P5007, for_done4495
    shift $P5014, $P5007
  for_redo4494:
    .const 'Sub' $P5013 = 'cuid_463_1382959278.72036' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4493
  for_done4495:
.annotate 'line', 2808
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4496
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5016, $P5017
    set fb_tmp_215, $P5016
    repr_defined $I5002, fb_tmp_215
    unless $I5002 goto if1811_else4497 
    set $P5018, fb_tmp_215["$W"]
    set $P5020, $P5018
    goto if1811_end4498
  if1811_else4497:
    null $P5019
    set $P5020, $P5019
  if1811_end4498:
    unless_null $P5020, vivi_18124499
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_18124499:
    unless_null $P5020, vivi_18134500
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_18134500:
    set $P5015, $P5020
  fallback4496:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1382959278.72036") :anon :lex :outer("cuid_464_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2799
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_213 
    .local pmc fb_tmp_214 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1803_end4480 
.annotate 'line', 2800
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1803_end4480:
    set $I5005, $I5003
    unless $I5003 goto if1802_end4478 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1802_end4478:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1801_end4476 
.annotate 'line', 2801
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1804_else4481 
    null $P5007
    set $P5009, $P5007
    goto if1804_end4482
  if1804_else4481:
.annotate 'line', 2803
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1804_end4482:
    $P5004."push"($P5009)
.annotate 'line', 2804
    find_lex $P5010, "$definednesses"
    set fb_tmp_213, _lex_param_0
    repr_defined $I5010, fb_tmp_213
    unless $I5010 goto if1806_else4485 
    set $P5011, fb_tmp_213["definedness"]
    set $P5013, $P5011
    goto if1806_end4486
  if1806_else4485:
    null $P5012
    set $P5013, $P5012
  if1806_end4486:
    unless_null $P5013, vivi_18074487
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_18074487:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1805_else4483 
    set $I5014, 1
    goto if1805_end4484
  if1805_else4483:
    set fb_tmp_214, _lex_param_0
    repr_defined $I5012, fb_tmp_214
    unless $I5012 goto if1809_else4490 
    set $P5015, fb_tmp_214["definedness"]
    set $P5017, $P5015
    goto if1809_end4491
  if1809_else4490:
    null $P5016
    set $P5017, $P5016
  if1809_end4491:
    unless_null $P5017, vivi_18104492
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_18104492:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1808_else4488 
    set $I5013, 2
    goto if1808_end4489
  if1808_else4488:
    set $I5013, 0
  if1808_end4489:
    set $I5014, $I5013
  if1805_end4484:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1801_end4476:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_465_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2811
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2812
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_471_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3331
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_468_1382959278.72036' 
    capture_lex $P5037 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_216 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4501
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1814_end4504 
.annotate 'line', 3333
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1814_end4504:
.annotate 'line', 3337
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3338
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
.annotate 'line', 3340
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1815_else4505 
.annotate 'line', 3345
.annotate 'line', 3346
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3348
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3350
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3352
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3354
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3356
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4507
    nqp_get_sc_object $P5020, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5019, $P5020
    set fb_tmp_216, $P5019
    repr_defined $I5003, fb_tmp_216
    unless $I5003 goto if1816_else4508 
    set $P5021, fb_tmp_216["$GLOBALish"]
    set $P5023, $P5021
    goto if1816_end4509
  if1816_else4508:
    null $P5022
    set $P5023, $P5022
  if1816_end4509:
    unless_null $P5023, vivi_18174510
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_18174510:
    unless_null $P5023, vivi_18184511
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_18184511:
    set $P5018, $P5023
  fallback4507:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3358
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3360
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1815_end4506
  if1815_else4505:
    .const 'Sub' $P5034 = 'cuid_468_1382959278.72036' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1815_end4506:
    $P5036 = "RETURN"($P102)
    goto lexotic_4502
  lexotic_4501:
    .get_results ($P5036)
  lexotic_4502:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1382959278.72036") :anon :lex :outer("cuid_471_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3366
    .const 'Sub' $P5053 = 'cuid_467_1382959278.72036' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_469_1382959278.72036' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_470_1382959278.72036' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 3368
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4514
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_217, $P5004
    repr_defined $I5001, fb_tmp_217
    unless $I5001 goto if1820_else4515 
    set $P5006, fb_tmp_217["$W"]
    set $P5008, $P5006
    goto if1820_end4516
  if1820_else4515:
    null $P5007
    set $P5008, $P5007
  if1820_end4516:
    unless_null $P5008, vivi_18214517
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_18214517:
    unless_null $P5008, vivi_18224518
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_18224518:
    set $P5003, $P5008
  fallback4514:
    find_lex $P5011, "@name"
    set fb_tmp_218, $P5011
    repr_defined $I5002, fb_tmp_218
    unless $I5002 goto if1823_else4519 
    set $P5012, fb_tmp_218[0]
    set $P5014, $P5012
    goto if1823_end4520
  if1823_else4519:
    null $P5013
    set $P5014, $P5013
  if1823_end4520:
    unless_null $P5014, vivi_18244521
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_18244521:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1819_else4512 
    .const 'Sub' $P5017 = 'cuid_467_1382959278.72036' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1819_end4513
  if1819_else4512:
.annotate 'line', 3377
.annotate 'line', 3378
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4529
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set fb_tmp_220, $P5021
    repr_defined $I5003, fb_tmp_220
    unless $I5003 goto if1830_else4530 
    set $P5023, fb_tmp_220["$GLOBALish"]
    set $P5025, $P5023
    goto if1830_end4531
  if1830_else4530:
    null $P5024
    set $P5025, $P5024
  if1830_end4531:
    unless_null $P5025, vivi_18314532
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_18314532:
    unless_null $P5025, vivi_18324533
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_18324533:
    set $P5020, $P5025
  fallback4529:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1819_end4513:
    find_lex $P5029, "@name"
    set fb_tmp_221, $P5029
    repr_defined $I5005, fb_tmp_221
    unless $I5005 goto if1834_else4536 
    set $P5030, fb_tmp_221[0]
    set $P5032, $P5030
    goto if1834_end4537
  if1834_else4536:
    null $P5031
    set $P5032, $P5031
  if1834_end4537:
    unless_null $P5032, vivi_18354538
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5032, $P5033
  vivi_18354538:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1833_end4535 
.annotate 'line', 3380
.annotate 'line', 3381
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1833_end4535:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4539:
    unless $P5038, for_done4541
    shift $P5041, $P5038
  for_redo4540:
    .const 'Sub' $P5040 = 'cuid_469_1382959278.72036' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4539
  for_done4541:
.annotate 'line', 3407
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1837_end4545 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1837_end4545:
    unless $I5008 goto if1836_else4542 
    .const 'Sub' $P5047 = 'cuid_470_1382959278.72036' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1836_end4543
  if1836_else4542:
.annotate 'line', 3422
.annotate 'line', 3423
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1836_end4543:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1382959278.72036") :anon :lex :outer("cuid_468_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3369
    .const 'Sub' $P5019 = 'cuid_466_1382959278.72036' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_219 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_18294528
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3370
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3371
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4522
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5006, $P5007
    set fb_tmp_219, $P5006
    repr_defined $I5001, fb_tmp_219
    unless $I5001 goto if1825_else4523 
    set $P5008, fb_tmp_219["$W"]
    set $P5010, $P5008
    goto if1825_end4524
  if1825_else4523:
    null $P5009
    set $P5010, $P5009
  if1825_end4524:
    unless_null $P5010, vivi_18264525
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_18264525:
    unless_null $P5010, vivi_18274526
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_18274526:
    set $P5005, $P5010
  fallback4522:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_18284527
  catch_handler_18294528:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_466_1382959278.72036' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_18284527
  skip_handler_18284527:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1382959278.72036") :anon :lex :outer("cuid_467_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3372
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3373
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1382959278.72036") :anon :lex :outer("cuid_468_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3383
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3384
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3385
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 3386
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3388
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3391
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3393
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3395
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3396
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3398
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3400
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3401
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3403
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
.annotate 'line', 3405
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    find_lex $P5031, "$path"
    $P5032 = $P5030."new"($P5031, $P101, "locallifetime" :named("op"))
    store_lex "$path", $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1382959278.72036") :anon :lex :outer("cuid_468_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3409
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3410
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3411
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3413
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_222, $P5008
    repr_defined $I5001, fb_tmp_222
    unless $I5001 goto if1838_else4546 
    set $P5009, fb_tmp_222[0]
    set $P5011, $P5009
    goto if1838_end4547
  if1838_else4546:
    null $P5010
    set $P5011, $P5010
  if1838_end4547:
    unless_null $P5011, vivi_18394548
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_18394548:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3415
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3417
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_223, $P5018
    repr_defined $I5002, fb_tmp_223
    unless $I5002 goto if1840_else4549 
    set $P5019, fb_tmp_223[1]
    set $P5021, $P5019
    goto if1840_end4550
  if1840_else4549:
    null $P5020
    set $P5021, $P5020
  if1840_end4550:
    unless_null $P5021, vivi_18414551
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_18414551:
.annotate 'line', 3419
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_248_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1786
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_224 
    unless_null _lex_param_1, fallback4554
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback4554:
    set fb_tmp_224, _lex_param_1
    repr_defined $I5001, fb_tmp_224
    unless $I5001 goto if1842_else4552 
    set $P5002, fb_tmp_224["comp_unit"]
    set $P5004, $P5002
    goto if1842_end4553
  if1842_else4552:
    null $P5003
    set $P5004, $P5003
  if1842_end4553:
    unless_null $P5004, vivi_18434555
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_18434555:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_249_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1788
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
.annotate 'line', 1789
    unless_null _lex_param_1, fallback4560
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback4560:
    set fb_tmp_225, _lex_param_1
    repr_defined $I5001, fb_tmp_225
    unless $I5001 goto if1845_else4558 
    set $P5002, fb_tmp_225["colonpair"]
    set $P5004, $P5002
    goto if1845_end4559
  if1845_else4558:
    null $P5003
    set $P5004, $P5003
  if1845_end4559:
    unless_null $P5004, vivi_18464561
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_18464561:
    unless $P5004 goto if1844_else4556 
    unless_null _lex_param_1, fallback4564
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback4564:
    set fb_tmp_226, _lex_param_1
    repr_defined $I5002, fb_tmp_226
    unless $I5002 goto if1847_else4562 
    set $P5007, fb_tmp_226["identifier"]
    set $P5009, $P5007
    goto if1847_end4563
  if1847_else4562:
    null $P5008
    set $P5009, $P5008
  if1847_end4563:
    unless_null $P5009, vivi_18484565
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_18484565:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1790
    unless_null _lex_param_1, fallback4568
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5011
  fallback4568:
    set fb_tmp_227, _lex_param_1
    repr_defined $I5003, fb_tmp_227
    unless $I5003 goto if1849_else4566 
    set $P5012, fb_tmp_227["colonpair"]
    set $P5014, $P5012
    goto if1849_end4567
  if1849_else4566:
    null $P5013
    set $P5014, $P5013
  if1849_end4567:
    unless_null $P5014, vivi_18504569
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_18504569:
    $P5016 = $P5014."ast"()
    $P5017 = $P5016."named"()
    set $S5007, $P5017
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1791
    unless_null _lex_param_1, fallback4572
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5018
  fallback4572:
    set fb_tmp_228, _lex_param_1
    repr_defined $I5004, fb_tmp_228
    unless $I5004 goto if1851_else4570 
    set $P5019, fb_tmp_228["colonpair"]
    set $P5021, $P5019
    goto if1851_end4571
  if1851_else4570:
    null $P5020
    set $P5021, $P5020
  if1851_end4571:
    unless_null $P5021, vivi_18524573
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_18524573:
    $P5023 = $P5021."ast"()
    $P5024 = "&colonpair_str"($P5023)
    set $S5008, $P5024
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1844_end4557
  if1844_else4556:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1844_end4557:
    $P5025 = _lex_param_1."!make"($S5010)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_250_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1805
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 1806
    unless_null _lex_param_1, fallback4576
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5004
  fallback4576:
    set fb_tmp_229, _lex_param_1
    repr_defined $I5001, fb_tmp_229
    unless $I5001 goto if1853_else4574 
    set $P5005, fb_tmp_229["statementlist"]
    set $P5007, $P5005
    goto if1853_end4575
  if1853_else4574:
    null $P5006
    set $P5007, $P5006
  if1853_end4575:
    unless_null $P5007, vivi_18544577
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_18544577:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1807
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4578
    nqp_get_sc_object $P5012, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5011, $P5012
    set fb_tmp_230, $P5011
    repr_defined $I5002, fb_tmp_230
    unless $I5002 goto if1855_else4579 
    set $P5013, fb_tmp_230["$W"]
    set $P5015, $P5013
    goto if1855_end4580
  if1855_else4579:
    null $P5014
    set $P5015, $P5014
  if1855_end4580:
    unless_null $P5015, vivi_18564581
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_18564581:
    unless_null $P5015, vivi_18574582
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18574582:
    set $P5010, $P5015
  fallback4578:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4585
    nqp_get_sc_object $P5021, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5020, $P5021
    set fb_tmp_231, $P5020
    repr_defined $I5003, fb_tmp_231
    unless $I5003 goto if1859_else4586 
    set $P5022, fb_tmp_231["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1859_end4587
  if1859_else4586:
    null $P5023
    set $P5024, $P5023
  if1859_end4587:
    unless_null $P5024, vivi_18604588
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_18604588:
    unless_null $P5024, vivi_18614589
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18614589:
    set $P5019, $P5024
  fallback4585:
    if $P5019 goto unless1858_end4584 
.annotate 'line', 1812
.annotate 'line', 1813
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1858_end4584:
.annotate 'line', 1820
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4592
    nqp_get_sc_object $P5034, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5033, $P5034
    set fb_tmp_232, $P5033
    repr_defined $I5004, fb_tmp_232
    unless $I5004 goto if1863_else4593 
    set $P5035, fb_tmp_232["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1863_end4594
  if1863_else4593:
    null $P5036
    set $P5037, $P5036
  if1863_end4594:
    unless_null $P5037, vivi_18644595
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_18644595:
    unless_null $P5037, vivi_18654596
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18654596:
    set $P5032, $P5037
  fallback4592:
    unless $P5032 goto if1862_end4591 
.annotate 'line', 1821
.annotate 'line', 1822
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 1824
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1825
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 1826
    find_dynamic_lex $P5044, "$*MAIN_SUB"
    unless_null $P5044, fallback4597
    nqp_get_sc_object $P5046, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5045, $P5046
    set fb_tmp_233, $P5045
    repr_defined $I5005, fb_tmp_233
    unless $I5005 goto if1866_else4598 
    set $P5047, fb_tmp_233["$MAIN_SUB"]
    set $P5049, $P5047
    goto if1866_end4599
  if1866_else4598:
    null $P5048
    set $P5049, $P5048
  if1866_end4599:
    unless_null $P5049, vivi_18674600
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_18674600:
    unless_null $P5049, vivi_18684601
    die "Contextual $*MAIN_SUB not found"
    box $P5051, "Contextual $*MAIN_SUB not found"
    set $P5049, $P5051
  vivi_18684601:
    set $P5044, $P5049
  fallback4597:
    $P5052 = $P5044."name"()
    set $S5002, $P5052
    concat $S5001, "&", $S5002
.annotate 'line', 1827
    nqp_get_sc_object $P5053, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5054 = $P5053."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5055 = $P5043."new"($P5054, "call" :named("op"), $S5001 :named("name"))
    $P5056 = $P5040."new"($P5042, $P5055, "if" :named("op"))
    $P5057 = $P101."push"($P5056)
  if1862_end4591:
.annotate 'line', 1833
    $P102."push"($P101)
.annotate 'line', 1836
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4602
    nqp_get_sc_object $P5060, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5059, $P5060
    set fb_tmp_234, $P5059
    repr_defined $I5006, fb_tmp_234
    unless $I5006 goto if1869_else4603 
    set $P5061, fb_tmp_234["$W"]
    set $P5063, $P5061
    goto if1869_end4604
  if1869_else4603:
    null $P5062
    set $P5063, $P5062
  if1869_end4604:
    unless_null $P5063, vivi_18704605
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5063, $P5064
  vivi_18704605:
    unless_null $P5063, vivi_18714606
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_18714606:
    set $P5058, $P5063
  fallback4602:
    $P5066 = $P5058."libs"()
    $P102."push"($P5066)
.annotate 'line', 1839
    nqp_get_sc_object $P5067, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 120
.annotate 'line', 1843
    find_dynamic_lex $P5068, "$*W"
    unless_null $P5068, fallback4607
    nqp_get_sc_object $P5070, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5069, $P5070
    set fb_tmp_235, $P5069
    repr_defined $I5007, fb_tmp_235
    unless $I5007 goto if1872_else4608 
    set $P5071, fb_tmp_235["$W"]
    set $P5073, $P5071
    goto if1872_end4609
  if1872_else4608:
    null $P5072
    set $P5073, $P5072
  if1872_end4609:
    unless_null $P5073, vivi_18734610
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5073, $P5074
  vivi_18734610:
    unless_null $P5073, vivi_18744611
    die "Contextual $*W not found"
    box $P5075, "Contextual $*W not found"
    set $P5073, $P5075
  vivi_18744611:
    set $P5068, $P5073
  fallback4607:
    $P5076 = $P5068."sc"()
.annotate 'line', 1844
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback4612
    nqp_get_sc_object $P5079, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5078, $P5079
    set fb_tmp_236, $P5078
    repr_defined $I5008, fb_tmp_236
    unless $I5008 goto if1875_else4613 
    set $P5080, fb_tmp_236["$W"]
    set $P5082, $P5080
    goto if1875_end4614
  if1875_else4613:
    null $P5081
    set $P5082, $P5081
  if1875_end4614:
    unless_null $P5082, vivi_18764615
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_18764615:
    unless_null $P5082, vivi_18774616
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_18774616:
    set $P5077, $P5082
  fallback4612:
    $P5085 = $P5077."code_ref_blocks"()
.annotate 'line', 1845
    find_dynamic_lex $P5086, "$*W"
    unless_null $P5086, fallback4617
    nqp_get_sc_object $P5088, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5087, $P5088
    set fb_tmp_237, $P5087
    repr_defined $I5009, fb_tmp_237
    unless $I5009 goto if1878_else4618 
    set $P5089, fb_tmp_237["$W"]
    set $P5091, $P5089
    goto if1878_end4619
  if1878_else4618:
    null $P5090
    set $P5091, $P5090
  if1878_end4619:
    unless_null $P5091, vivi_18794620
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5091, $P5092
  vivi_18794620:
    unless_null $P5091, vivi_18804621
    die "Contextual $*W not found"
    box $P5093, "Contextual $*W not found"
    set $P5091, $P5093
  vivi_18804621:
    set $P5086, $P5091
  fallback4617:
    $P5094 = $P5086."is_precompilation_mode"()
.annotate 'line', 1846
    find_dynamic_lex $P5095, "$*W"
    unless_null $P5095, fallback4622
    nqp_get_sc_object $P5097, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5096, $P5097
    set fb_tmp_238, $P5096
    repr_defined $I5010, fb_tmp_238
    unless $I5010 goto if1881_else4623 
    set $P5098, fb_tmp_238["$W"]
    set $P5100, $P5098
    goto if1881_end4624
  if1881_else4623:
    null $P5099
    set $P5100, $P5099
  if1881_end4624:
    unless_null $P5100, vivi_18824625
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5100, $P5101
  vivi_18824625:
    unless_null $P5100, vivi_18834626
    die "Contextual $*W not found"
    box $P5102, "Contextual $*W not found"
    set $P5100, $P5102
  vivi_18834626:
    set $P5095, $P5100
  fallback4622:
    $P5103 = $P5095."load_dependency_tasks"()
.annotate 'line', 1847
    find_dynamic_lex $P5104, "$*W"
    unless_null $P5104, fallback4627
    nqp_get_sc_object $P5106, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5105, $P5106
    set fb_tmp_239, $P5105
    repr_defined $I5011, fb_tmp_239
    unless $I5011 goto if1884_else4628 
    set $P5107, fb_tmp_239["$W"]
    set $P5109, $P5107
    goto if1884_end4629
  if1884_else4628:
    null $P5108
    set $P5109, $P5108
  if1884_end4629:
    unless_null $P5109, vivi_18854630
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5109, $P5110
  vivi_18854630:
    unless_null $P5109, vivi_18864631
    die "Contextual $*W not found"
    box $P5111, "Contextual $*W not found"
    set $P5109, $P5111
  vivi_18864631:
    set $P5104, $P5109
  fallback4627:
    $P5112 = $P5104."fixup_tasks"()
.annotate 'line', 1852
    nqp_get_sc_object $P5113, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 1854
    nqp_get_sc_object $P5114, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    $P5115 = $P5114."new"($P102 :named("value"))
    $P5116 = $P5113."new"($P5115, "call" :named("op"))
.annotate 'line', 1859
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 1860
    nqp_get_sc_object $P5118, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 1862
    nqp_get_sc_object $P5119, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 60
    $P5120 = $P5119."new"($P102 :named("value"))
.annotate 'line', 1863
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5122 = $P5121."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5123 = $P5118."new"($P5120, $P5122, "call" :named("op"))
    $P5124 = $P5117."new"($P5123)
    $P5125 = $P5067."new"($P102, "nqp" :named("hll"), $P5076 :named("sc"), $P5085 :named("code_ref_blocks"), $P5094 :named("compilation_mode"), $P5103 :named("pre_deserialize"), $P5112 :named("post_deserialize"), $P5116 :named("load"), $P5124 :named("main"))
    set $P103, $P5125
.annotate 'line', 1872
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback4632
    nqp_get_sc_object $P5128, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5127, $P5128
    set fb_tmp_240, $P5127
    repr_defined $I5012, fb_tmp_240
    unless $I5012 goto if1887_else4633 
    set $P5129, fb_tmp_240["$W"]
    set $P5131, $P5129
    goto if1887_end4634
  if1887_else4633:
    null $P5130
    set $P5131, $P5130
  if1887_end4634:
    unless_null $P5131, vivi_18884635
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5131, $P5132
  vivi_18884635:
    unless_null $P5131, vivi_18894636
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_18894636:
    set $P5126, $P5131
  fallback4632:
    $P5126."cleanup"()
.annotate 'line', 1874
    $P5134 = _lex_param_1."!make"($P103)
    .return ($P5134) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_251_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1877
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_472_1382959278.72036' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1878
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4641
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5004
  fallback4641:
    set fb_tmp_241, _lex_param_1
    repr_defined $I5001, fb_tmp_241
    unless $I5001 goto if1891_else4639 
    set $P5005, fb_tmp_241["statement"]
    set $P5007, $P5005
    goto if1891_end4640
  if1891_else4639:
    null $P5006
    set $P5007, $P5006
  if1891_end4640:
    unless_null $P5007, vivi_18924642
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_18924642:
    unless $P5007 goto if1890_else4637 
.annotate 'line', 1879
    unless_null _lex_param_1, fallback4645
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback4645:
    set fb_tmp_242, _lex_param_1
    repr_defined $I5002, fb_tmp_242
    unless $I5002 goto if1893_else4643 
    set $P5013, fb_tmp_242["statement"]
    set $P5015, $P5013
    goto if1893_end4644
  if1893_else4643:
    null $P5014
    set $P5015, $P5014
  if1893_end4644:
    unless_null $P5015, vivi_18944646
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_18944646:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4665:
    unless $P5011, for_done4667
    shift $P5018, $P5011
  for_redo4666:
    .const 'Sub' $P5017 = 'cuid_472_1382959278.72036' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4665
  for_done4667:
    goto if1890_end4638
  if1890_else4637:
.annotate 'line', 1888
.annotate 'line', 1889
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1890_end4638:
.annotate 'line', 1891
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1382959278.72036") :anon :lex :outer("cuid_251_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1880
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1881
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_243, $P101
    repr_defined $I5002, fb_tmp_243
    unless $I5002 goto if1896_else4649 
    set $P5003, fb_tmp_243["sink"]
    set $P5005, $P5003
    goto if1896_end4650
  if1896_else4649:
    null $P5004
    set $P5005, $P5004
  if1896_end4650:
    unless_null $P5005, vivi_18974651
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_18974651:
    defined $I5001, $P5005
    unless $I5001 goto if1895_end4648 
    set fb_tmp_244, $P101
    repr_defined $I5003, fb_tmp_244
    unless $I5003 goto if1898_else4652 
    set $P5007, fb_tmp_244["sink"]
    set $P5009, $P5007
    goto if1898_end4653
  if1898_else4652:
    null $P5008
    set $P5009, $P5008
  if1898_end4653:
    unless_null $P5009, vivi_18994654
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_18994654:
    set $P101, $P5009
  if1895_end4648:
    set fb_tmp_245, $P101
    repr_defined $I5004, fb_tmp_245
    unless $I5004 goto if1901_else4657 
    set $P5011, fb_tmp_245["bareblock"]
    set $P5013, $P5011
    goto if1901_end4658
  if1901_else4657:
    null $P5012
    set $P5013, $P5012
  if1901_end4658:
    unless_null $P5013, vivi_19024659
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_19024659:
    unless $P5013 goto if1900_end4656 
.annotate 'line', 1883
    set fb_tmp_246, $P101
    repr_defined $I5005, fb_tmp_246
    unless $I5005 goto if1903_else4660 
    set $P5015, fb_tmp_246[0]
    set $P5017, $P5015
    goto if1903_end4661
  if1903_else4660:
    null $P5016
    set $P5017, $P5016
  if1903_end4661:
    unless_null $P5017, vivi_19044662
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_19044662:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1900_end4656:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1905_end4664 
.annotate 'line', 1884
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1905_end4664:
.annotate 'line', 1885
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_252_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_6 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_473_1382959278.72036' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_247 
    .local pmc fb_tmp_258 
    .local pmc fb_tmp_259 
    if haz_param_6, default4723
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_2, $P5023
  default4723:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4672
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback4672:
    set fb_tmp_247, _lex_param_1
    repr_defined $I5001, fb_tmp_247
    unless $I5001 goto if1907_else4670 
    set $P5003, fb_tmp_247["EXPR"]
    set $P5005, $P5003
    goto if1907_end4671
  if1907_else4670:
    null $P5004
    set $P5005, $P5004
  if1907_end4671:
    unless_null $P5005, vivi_19084673
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_19084673:
    unless $P5005 goto if1906_else4668 
    .const 'Sub' $P5007 = 'cuid_473_1382959278.72036' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1906_end4669
  if1906_else4668:
    unless_null _lex_param_1, fallback4717
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5009
  fallback4717:
    set fb_tmp_258, _lex_param_1
    repr_defined $I5002, fb_tmp_258
    unless $I5002 goto if1933_else4715 
    set $P5010, fb_tmp_258["statement_control"]
    set $P5012, $P5010
    goto if1933_end4716
  if1933_else4715:
    null $P5011
    set $P5012, $P5011
  if1933_end4716:
    unless_null $P5012, vivi_19344718
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_19344718:
    unless $P5012 goto if1932_else4713 
.annotate 'line', 1917
    unless_null _lex_param_1, fallback4721
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5014
  fallback4721:
    set fb_tmp_259, _lex_param_1
    repr_defined $I5003, fb_tmp_259
    unless $I5003 goto if1935_else4719 
    set $P5015, fb_tmp_259["statement_control"]
    set $P5017, $P5015
    goto if1935_end4720
  if1935_else4719:
    null $P5016
    set $P5017, $P5016
  if1935_end4720:
    unless_null $P5017, vivi_19364722
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_19364722:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1932_end4714
  if1932_else4713:
.annotate 'line', 1918
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1932_end4714:
  if1906_end4669:
.annotate 'line', 1919
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1382959278.72036") :anon :lex :outer("cuid_252_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1896
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    .local pmc fb_tmp_252 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4676
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  fallback4676:
    set fb_tmp_248, $P5003
    repr_defined $I5001, fb_tmp_248
    unless $I5001 goto if1909_else4674 
    set $P5005, fb_tmp_248["statement_mod_cond"]
    set $P5007, $P5005
    goto if1909_end4675
  if1909_else4674:
    null $P5006
    set $P5007, $P5006
  if1909_end4675:
    unless_null $P5007, vivi_19104677
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_19104677:
    set $P101, $P5007
    find_lex $P5009, "$/"
    unless_null $P5009, fallback4680
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  fallback4680:
    set fb_tmp_249, $P5009
    repr_defined $I5002, fb_tmp_249
    unless $I5002 goto if1911_else4678 
    set $P5011, fb_tmp_249["statement_mod_loop"]
    set $P5013, $P5011
    goto if1911_end4679
  if1911_else4678:
    null $P5012
    set $P5013, $P5012
  if1911_end4679:
    unless_null $P5013, vivi_19124681
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_19124681:
    set $P102, $P5013
.annotate 'line', 1899
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4684
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  fallback4684:
    set fb_tmp_250, $P5015
    repr_defined $I5003, fb_tmp_250
    unless $I5003 goto if1913_else4682 
    set $P5017, fb_tmp_250["EXPR"]
    set $P5019, $P5017
    goto if1913_end4683
  if1913_else4682:
    null $P5018
    set $P5019, $P5018
  if1913_end4683:
    unless_null $P5019, vivi_19144685
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_19144685:
    $P5021 = $P5019."ast"()
    store_lex "$past", $P5021
    unless $P101 goto if1915_end4687 
.annotate 'line', 1900
.annotate 'line', 1901
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    set fb_tmp_251, $P101
    repr_defined $I5004, fb_tmp_251
    unless $I5004 goto if1916_else4688 
    set $P5023, fb_tmp_251["cond"]
    set $P5025, $P5023
    goto if1916_end4689
  if1916_else4688:
    null $P5024
    set $P5025, $P5024
  if1916_end4689:
    unless_null $P5025, vivi_19174690
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_19174690:
    $P5027 = $P5025."ast"()
    find_lex $P5028, "$past"
    set fb_tmp_252, $P101
    repr_defined $I5005, fb_tmp_252
    unless $I5005 goto if1918_else4691 
    set $P5029, fb_tmp_252["sym"]
    set $P5031, $P5029
    goto if1918_end4692
  if1918_else4691:
    null $P5030
    set $P5031, $P5030
  if1918_end4692:
    unless_null $P5031, vivi_19194693
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_19194693:
    set $S5001, $P5031
    find_lex $P5033, "$/"
    $P5034 = $P5022."new"($P5027, $P5028, $S5001 :named("op"), $P5033 :named("node"))
    store_lex "$past", $P5034
  if1915_end4687:
    set $P5073, $P102
    unless $P102 goto if1920_end4695 
.annotate 'line', 1903
    set fb_tmp_253, $P102
    repr_defined $I5007, fb_tmp_253
    unless $I5007 goto if1922_else4698 
    set $P5035, fb_tmp_253["sym"]
    set $P5037, $P5035
    goto if1922_end4699
  if1922_else4698:
    null $P5036
    set $P5037, $P5036
  if1922_end4699:
    unless_null $P5037, vivi_19234700
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_19234700:
    set $S5002, $P5037
    iseq $I5006, $S5002, "for"
    unless $I5006 goto if1921_else4696 
.annotate 'line', 1904
.annotate 'line', 1905
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 108
.annotate 'line', 1906
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5041 = $P5040."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5042, "$past"
    $P5043 = $P5039."new"($P5041, $P5042, "immediate" :named("blocktype"))
    store_lex "$past", $P5043
.annotate 'line', 1908
    find_lex $P5044, "$past"
    $P5044."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1909
    find_lex $P5045, "$past"
    $P5045."arity"(1)
.annotate 'line', 1910
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    set fb_tmp_254, $P102
    repr_defined $I5008, fb_tmp_254
    unless $I5008 goto if1924_else4701 
    set $P5047, fb_tmp_254["cond"]
    set $P5049, $P5047
    goto if1924_end4702
  if1924_else4701:
    null $P5048
    set $P5049, $P5048
  if1924_end4702:
    unless_null $P5049, vivi_19254703
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_19254703:
    $P5051 = $P5049."ast"()
    find_lex $P5052, "$past"
    set fb_tmp_255, $P102
    repr_defined $I5009, fb_tmp_255
    unless $I5009 goto if1926_else4704 
    set $P5053, fb_tmp_255["sym"]
    set $P5055, $P5053
    goto if1926_end4705
  if1926_else4704:
    null $P5054
    set $P5055, $P5054
  if1926_end4705:
    unless_null $P5055, vivi_19274706
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5055, $P5056
  vivi_19274706:
    set $S5003, $P5055
    find_lex $P5057, "$/"
    $P5058 = $P5046."new"($P5051, $P5052, $S5003 :named("op"), $P5057 :named("node"))
    store_lex "$past", $P5058
    set $P5072, $P5058
    goto if1921_end4697
  if1921_else4696:
.annotate 'line', 1912
.annotate 'line', 1913
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    set fb_tmp_256, $P102
    repr_defined $I5010, fb_tmp_256
    unless $I5010 goto if1928_else4707 
    set $P5060, fb_tmp_256["cond"]
    set $P5062, $P5060
    goto if1928_end4708
  if1928_else4707:
    null $P5061
    set $P5062, $P5061
  if1928_end4708:
    unless_null $P5062, vivi_19294709
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5062, $P5063
  vivi_19294709:
    $P5064 = $P5062."ast"()
    find_lex $P5065, "$past"
    set fb_tmp_257, $P102
    repr_defined $I5011, fb_tmp_257
    unless $I5011 goto if1930_else4710 
    set $P5066, fb_tmp_257["sym"]
    set $P5068, $P5066
    goto if1930_end4711
  if1930_else4710:
    null $P5067
    set $P5068, $P5067
  if1930_end4711:
    unless_null $P5068, vivi_19314712
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5068, $P5069
  vivi_19314712:
    set $S5004, $P5068
    find_lex $P5070, "$/"
    $P5071 = $P5059."new"($P5064, $P5065, $S5004 :named("op"), $P5070 :named("node"))
    store_lex "$past", $P5071
    set $P5072, $P5071
  if1921_end4697:
    set $P5073, $P5072
  if1920_end4695:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_253_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1922
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
.annotate 'line', 1923
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    unless_null _lex_param_1, fallback4726
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback4726:
    set fb_tmp_260, _lex_param_1
    repr_defined $I5001, fb_tmp_260
    unless $I5001 goto if1937_else4724 
    set $P5003, fb_tmp_260["EXPR"]
    set $P5005, $P5003
    goto if1937_end4725
  if1937_else4724:
    null $P5004
    set $P5005, $P5004
  if1937_end4725:
    unless_null $P5005, vivi_19384727
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_19384727:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4730
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback4730:
    set fb_tmp_261, _lex_param_1
    repr_defined $I5002, fb_tmp_261
    unless $I5002 goto if1939_else4728 
    set $P5009, fb_tmp_261["pblock"]
    set $P5011, $P5009
    goto if1939_end4729
  if1939_else4728:
    null $P5010
    set $P5011, $P5010
  if1939_end4729:
    unless_null $P5011, vivi_19404731
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_19404731:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_254_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1926
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_262 
.annotate 'line', 1927
    unless_null _lex_param_1, fallback4734
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback4734:
    set fb_tmp_262, _lex_param_1
    repr_defined $I5001, fb_tmp_262
    unless $I5001 goto if1941_else4732 
    set $P5002, fb_tmp_262["blockoid"]
    set $P5004, $P5002
    goto if1941_end4733
  if1941_else4732:
    null $P5003
    set $P5004, $P5003
  if1941_end4733:
    unless_null $P5004, vivi_19424735
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_19424735:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_255_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1930
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_263 
.annotate 'line', 1931
    unless_null _lex_param_1, fallback4738
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback4738:
    set fb_tmp_263, _lex_param_1
    repr_defined $I5001, fb_tmp_263
    unless $I5001 goto if1943_else4736 
    set $P5002, fb_tmp_263["blockoid"]
    set $P5004, $P5002
    goto if1943_end4737
  if1943_else4736:
    null $P5003
    set $P5004, $P5003
  if1943_end4737:
    unless_null $P5004, vivi_19444739
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_19444739:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_256_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1934
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_475_1382959278.72036' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1935
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4740
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_264, $P5003
    repr_defined $I5001, fb_tmp_264
    unless $I5001 goto if1945_else4741 
    set $P5005, fb_tmp_264["$W"]
    set $P5007, $P5005
    goto if1945_end4742
  if1945_else4741:
    null $P5006
    set $P5007, $P5006
  if1945_end4742:
    unless_null $P5007, vivi_19464743
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_19464743:
    unless_null $P5007, vivi_19474744
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19474744:
    set $P5002, $P5007
  fallback4740:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4749
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5011
  fallback4749:
    set fb_tmp_265, _lex_param_1
    repr_defined $I5002, fb_tmp_265
    unless $I5002 goto if1949_else4747 
    set $P5012, fb_tmp_265["statementlist"]
    set $P5014, $P5012
    goto if1949_end4748
  if1949_else4747:
    null $P5013
    set $P5014, $P5013
  if1949_end4748:
    unless_null $P5014, vivi_19504750
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_19504750:
    unless $P5014 goto if1948_else4745 
    .const 'Sub' $P5016 = 'cuid_475_1382959278.72036' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1948_end4746
  if1948_else4745:
.annotate 'line', 1950
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4784
    nqp_get_sc_object $P5020, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5019, $P5020
    set fb_tmp_271, $P5019
    repr_defined $I5003, fb_tmp_271
    unless $I5003 goto if1968_else4785 
    set $P5021, fb_tmp_271["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1968_end4786
  if1968_else4785:
    null $P5022
    set $P5023, $P5022
  if1968_end4786:
    unless_null $P5023, vivi_19694787
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_19694787:
    unless_null $P5023, vivi_19704788
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19704788:
    set $P5018, $P5023
  fallback4784:
    unless $P5018 goto if1967_end4783 
.annotate 'line', 1951
.annotate 'line', 1952
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1967_end4783:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1955
    unless_null _lex_param_1, fallback4791
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5029
  fallback4791:
    set fb_tmp_272, _lex_param_1
    repr_defined $I5004, fb_tmp_272
    unless $I5004 goto if1971_else4789 
    set $P5030, fb_tmp_272["you_are_here"]
    set $P5032, $P5030
    goto if1971_end4790
  if1971_else4789:
    null $P5031
    set $P5032, $P5031
  if1971_end4790:
    unless_null $P5032, vivi_19724792
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5032, $P5033
  vivi_19724792:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1948_end4746:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1382959278.72036") :anon :lex :outer("cuid_256_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1936
    .const 'Sub' $P5055 = 'cuid_474_1382959278.72036' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_268 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_269 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_270 
    .local pmc pkg_viv_tmp_35 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1937
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4753
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback4753:
    set fb_tmp_266, $P5002
    repr_defined $I5001, fb_tmp_266
    unless $I5001 goto if1951_else4751 
    set $P5004, fb_tmp_266["statementlist"]
    set $P5006, $P5004
    goto if1951_end4752
  if1951_else4751:
    null $P5005
    set $P5006, $P5005
  if1951_end4752:
    unless_null $P5006, vivi_19524754
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_19524754:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4757
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_33, $P5010
    set fb_tmp_267, pkg_viv_tmp_33
    repr_defined $I5002, fb_tmp_267
    unless $I5002 goto if1954_else4758 
    set $P5012, fb_tmp_267["%HANDLERS"]
    set $P5014, $P5012
    goto if1954_end4759
  if1954_else4758:
    null $P5013
    set $P5014, $P5013
  if1954_end4759:
    unless_null $P5014, vivi_19554760
    new $P5015, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19554760:
    unless_null $P5014, vivi_19564761
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19564761:
    set $P5009, $P5014
  fallback4757:
    unless $P5009 goto if1953_end4756 
.annotate 'line', 1938
.annotate 'line', 1939
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4762
    nqp_get_sc_object $P5024, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_34, $P5023
    set fb_tmp_268, pkg_viv_tmp_34
    repr_defined $I5003, fb_tmp_268
    unless $I5003 goto if1957_else4763 
    set $P5025, fb_tmp_268["%HANDLERS"]
    set $P5027, $P5025
    goto if1957_end4764
  if1957_else4763:
    null $P5026
    set $P5027, $P5026
  if1957_end4764:
    unless_null $P5027, vivi_19584765
    new $P5028, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19584765:
    unless_null $P5027, vivi_19594766
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19594766:
    set $P5022, $P5027
  fallback4762:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4767:
    unless $P5021, for_done4769
    shift $P5031, $P5021
  for_redo4768:
    .const 'Sub' $P5030 = 'cuid_474_1382959278.72036' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4767
  for_done4769:
  if1953_end4756:
.annotate 'line', 1945
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1946
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4772
    nqp_get_sc_object $P5037, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_36, $P5036
    set fb_tmp_269, pkg_viv_tmp_36
    repr_defined $I5004, fb_tmp_269
    unless $I5004 goto if1961_else4773 
    set $P5038, fb_tmp_269["%HANDLERS"]
    set $P5040, $P5038
    goto if1961_end4774
  if1961_else4773:
    null $P5039
    set $P5040, $P5039
  if1961_end4774:
    unless_null $P5040, vivi_19624775
    new $P5041, 'Hash'
    set pkg_viv_tmp_36["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19624775:
    unless_null $P5040, vivi_19634776
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19634776:
    set $P5035, $P5040
  fallback4772:
    unless $P5035 goto if1960_end4771 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4777
    nqp_get_sc_object $P5046, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_35, $P5045
    set fb_tmp_270, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_270
    unless $I5005 goto if1964_else4778 
    set $P5047, fb_tmp_270["%HANDLERS"]
    set $P5049, $P5047
    goto if1964_end4779
  if1964_else4778:
    null $P5048
    set $P5049, $P5048
  if1964_end4779:
    unless_null $P5049, vivi_19654780
    new $P5050, 'Hash'
    set pkg_viv_tmp_35["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19654780:
    unless_null $P5049, vivi_19664781
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19664781:
    set $P5044, $P5049
  fallback4777:
    set $P5043["handlers"], $P5044
  if1960_end4771:
.annotate 'line', 1948
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1382959278.72036") :anon :lex :outer("cuid_475_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1940
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1941
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1942
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_257_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1959
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_273 
.annotate 'line', 1960
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4793
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_273, $P5002
    repr_defined $I5001, fb_tmp_273
    unless $I5001 goto if1973_else4794 
    set $P5004, fb_tmp_273["$W"]
    set $P5006, $P5004
    goto if1973_end4795
  if1973_else4794:
    null $P5005
    set $P5006, $P5005
  if1973_end4795:
    unless_null $P5006, vivi_19744796
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_19744796:
    unless_null $P5006, vivi_19754797
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19754797:
    set $P5001, $P5006
  fallback4793:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_258_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1963
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_477_1382959278.72036' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_294 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4804
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_37, $P5002
    set fb_tmp_276, pkg_viv_tmp_37
    repr_defined $I5004, fb_tmp_276
    unless $I5004 goto if1979_else4805 
    set $P5004, fb_tmp_276["%COMPILING"]
    set $P5006, $P5004
    goto if1979_end4806
  if1979_else4805:
    null $P5005
    set $P5006, $P5005
  if1979_end4806:
    unless_null $P5006, vivi_19804807
    new $P5007, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19804807:
    unless_null $P5006, vivi_19814808
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19814808:
    set $P5001, $P5006
  fallback4804:
    set fb_tmp_275, $P5001
    repr_defined $I5003, fb_tmp_275
    unless $I5003 goto if1978_else4802 
    set $P5009, fb_tmp_275["%?OPTIONS"]
    set $P5011, $P5009
    goto if1978_end4803
  if1978_else4802:
    null $P5010
    set $P5011, $P5010
  if1978_end4803:
    unless_null $P5011, vivi_19824809
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_19824809:
    set fb_tmp_274, $P5011
    repr_defined $I5002, fb_tmp_274
    unless $I5002 goto if1977_else4800 
    set $P5013, fb_tmp_274["outer_ctx"]
    set $P5015, $P5013
    goto if1977_end4801
  if1977_else4800:
    null $P5014
    set $P5015, $P5014
  if1977_end4801:
    unless_null $P5015, vivi_19834810
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_19834810:
    defined $I5001, $P5015
    if $I5001 goto unless1976_end4799 
    .const 'Sub' $P5017 = 'cuid_477_1382959278.72036' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1976_end4799:
.annotate 'line', 1984
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4887
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set fb_tmp_294, $P5021
    repr_defined $I5005, fb_tmp_294
    unless $I5005 goto if2030_else4888 
    set $P5023, fb_tmp_294["$W"]
    set $P5025, $P5023
    goto if2030_end4889
  if2030_else4888:
    null $P5024
    set $P5025, $P5024
  if2030_end4889:
    unless_null $P5025, vivi_20314890
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_20314890:
    unless_null $P5025, vivi_20324891
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_20324891:
    set $P5020, $P5025
  fallback4887:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1382959278.72036") :anon :lex :outer("cuid_258_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1964
    .const 'Sub' $P5100 = 'cuid_476_1382959278.72036' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 1967
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4811
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_277, $P5003
    repr_defined $I5001, fb_tmp_277
    unless $I5001 goto if1984_else4812 
    set $P5005, fb_tmp_277["$W"]
    set $P5007, $P5005
    goto if1984_end4813
  if1984_else4812:
    null $P5006
    set $P5007, $P5006
  if1984_end4813:
    unless_null $P5007, vivi_19854814
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_19854814:
    unless_null $P5007, vivi_19864815
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19864815:
    set $P5002, $P5007
  fallback4811:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4821
    nqp_get_sc_object $P5013, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_38, $P5012
    set fb_tmp_280, pkg_viv_tmp_38
    repr_defined $I5005, fb_tmp_280
    unless $I5005 goto if1989_else4822 
    set $P5014, fb_tmp_280["%COMPILING"]
    set $P5016, $P5014
    goto if1989_end4823
  if1989_else4822:
    null $P5015
    set $P5016, $P5015
  if1989_end4823:
    unless_null $P5016, vivi_19904824
    new $P5017, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19904824:
    unless_null $P5016, vivi_19914825
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19914825:
    set $P5011, $P5016
  fallback4821:
    set fb_tmp_279, $P5011
    repr_defined $I5004, fb_tmp_279
    unless $I5004 goto if1988_else4819 
    set $P5019, fb_tmp_279["%?OPTIONS"]
    set $P5021, $P5019
    goto if1988_end4820
  if1988_else4819:
    null $P5020
    set $P5021, $P5020
  if1988_end4820:
    unless_null $P5021, vivi_19924826
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_19924826:
    set fb_tmp_278, $P5021
    repr_defined $I5003, fb_tmp_278
    unless $I5003 goto if1987_else4817 
    set $P5023, fb_tmp_278["setting"]
    set $P5025, $P5023
    goto if1987_end4818
  if1987_else4817:
    null $P5024
    set $P5025, $P5024
  if1987_end4818:
    unless_null $P5025, vivi_19934827
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_19934827:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4816
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4816:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4834
    nqp_get_sc_object $P5031, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_39, $P5030
    set fb_tmp_283, pkg_viv_tmp_39
    repr_defined $I5009, fb_tmp_283
    unless $I5009 goto if1997_else4835 
    set $P5032, fb_tmp_283["%COMPILING"]
    set $P5034, $P5032
    goto if1997_end4836
  if1997_else4835:
    null $P5033
    set $P5034, $P5033
  if1997_end4836:
    unless_null $P5034, vivi_19984837
    new $P5035, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19984837:
    unless_null $P5034, vivi_19994838
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19994838:
    set $P5029, $P5034
  fallback4834:
    set fb_tmp_282, $P5029
    repr_defined $I5008, fb_tmp_282
    unless $I5008 goto if1996_else4832 
    set $P5037, fb_tmp_282["%?OPTIONS"]
    set $P5039, $P5037
    goto if1996_end4833
  if1996_else4832:
    null $P5038
    set $P5039, $P5038
  if1996_end4833:
    unless_null $P5039, vivi_20004839
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5039, $P5040
  vivi_20004839:
    set fb_tmp_281, $P5039
    repr_defined $I5007, fb_tmp_281
    unless $I5007 goto if1995_else4830 
    set $P5041, fb_tmp_281["setting"]
    set $P5043, $P5041
    goto if1995_end4831
  if1995_else4830:
    null $P5042
    set $P5043, $P5042
  if1995_end4831:
    unless_null $P5043, vivi_20014840
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5043, $P5044
  vivi_20014840:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1994_end4829 
.annotate 'line', 1972
.annotate 'line', 1973
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4847
    nqp_get_sc_object $P5047, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_40, $P5046
    set fb_tmp_286, pkg_viv_tmp_40
    repr_defined $I5012, fb_tmp_286
    unless $I5012 goto if2005_else4848 
    set $P5048, fb_tmp_286["%COMPILING"]
    set $P5050, $P5048
    goto if2005_end4849
  if2005_else4848:
    null $P5049
    set $P5050, $P5049
  if2005_end4849:
    unless_null $P5050, vivi_20064850
    new $P5051, 'Hash'
    set pkg_viv_tmp_40["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_20064850:
    unless_null $P5050, vivi_20074851
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_20074851:
    set $P5045, $P5050
  fallback4847:
    set fb_tmp_285, $P5045
    repr_defined $I5011, fb_tmp_285
    unless $I5011 goto if2004_else4845 
    set $P5053, fb_tmp_285["%?OPTIONS"]
    set $P5055, $P5053
    goto if2004_end4846
  if2004_else4845:
    null $P5054
    set $P5055, $P5054
  if2004_end4846:
    unless_null $P5055, vivi_20084852
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5055, $P5056
  vivi_20084852:
    set fb_tmp_284, $P5055
    repr_defined $I5010, fb_tmp_284
    unless $I5010 goto if2003_else4843 
    set $P5057, fb_tmp_284["no-regex-lib"]
    set $P5059, $P5057
    goto if2003_end4844
  if2003_else4843:
    null $P5058
    set $P5059, $P5058
  if2003_end4844:
    unless_null $P5059, vivi_20094853
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5059, $P5060
  vivi_20094853:
    set $P5097, $P5059
    if $P5059 goto unless2002_end4842 
.annotate 'line', 1974
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4860
    nqp_get_sc_object $P5063, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_41, $P5062
    set fb_tmp_289, pkg_viv_tmp_41
    repr_defined $I5015, fb_tmp_289
    unless $I5015 goto if2013_else4861 
    set $P5064, fb_tmp_289["%COMPILING"]
    set $P5066, $P5064
    goto if2013_end4862
  if2013_else4861:
    null $P5065
    set $P5066, $P5065
  if2013_end4862:
    unless_null $P5066, vivi_20144863
    new $P5067, 'Hash'
    set pkg_viv_tmp_41["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_20144863:
    unless_null $P5066, vivi_20154864
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_20154864:
    set $P5061, $P5066
  fallback4860:
    set fb_tmp_288, $P5061
    repr_defined $I5014, fb_tmp_288
    unless $I5014 goto if2012_else4858 
    set $P5069, fb_tmp_288["%?OPTIONS"]
    set $P5071, $P5069
    goto if2012_end4859
  if2012_else4858:
    null $P5070
    set $P5071, $P5070
  if2012_end4859:
    unless_null $P5071, vivi_20164865
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5071, $P5072
  vivi_20164865:
    set fb_tmp_287, $P5071
    repr_defined $I5013, fb_tmp_287
    unless $I5013 goto if2011_else4856 
    set $P5073, fb_tmp_287["custom-regex-lib"]
    set $P5075, $P5073
    goto if2011_end4857
  if2011_else4856:
    null $P5074
    set $P5075, $P5074
  if2011_end4857:
    unless_null $P5075, vivi_20174866
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5075, $P5076
  vivi_20174866:
    unless $P5075 goto if2010_else4854 
    .const 'Sub' $P5077 = 'cuid_476_1382959278.72036' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if2010_end4855
  if2010_else4854:
.annotate 'line', 1978
.annotate 'line', 1979
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4877
    nqp_get_sc_object $P5081, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5080, $P5081
    set fb_tmp_292, $P5080
    repr_defined $I5016, fb_tmp_292
    unless $I5016 goto if2024_else4878 
    set $P5082, fb_tmp_292["$W"]
    set $P5084, $P5082
    goto if2024_end4879
  if2024_else4878:
    null $P5083
    set $P5084, $P5083
  if2024_end4879:
    unless_null $P5084, vivi_20254880
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5084, $P5085
  vivi_20254880:
    unless_null $P5084, vivi_20264881
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_20264881:
    set $P5079, $P5084
  fallback4877:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4882
    nqp_get_sc_object $P5089, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5088, $P5089
    set fb_tmp_293, $P5088
    repr_defined $I5017, fb_tmp_293
    unless $I5017 goto if2027_else4883 
    set $P5090, fb_tmp_293["$GLOBALish"]
    set $P5092, $P5090
    goto if2027_end4884
  if2027_else4883:
    null $P5091
    set $P5092, $P5091
  if2027_end4884:
    unless_null $P5092, vivi_20284885
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5092, $P5093
  vivi_20284885:
    unless_null $P5092, vivi_20294886
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_20294886:
    set $P5087, $P5092
  fallback4882:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if2010_end4855:
    set $P5097, $P5096
  unless2002_end4842:
    set $P5098, $P5097
  unless1994_end4829:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1382959278.72036") :anon :lex :outer("cuid_477_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1975
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
.annotate 'line', 1976
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4867
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_290, $P5002
    repr_defined $I5001, fb_tmp_290
    unless $I5001 goto if2018_else4868 
    set $P5004, fb_tmp_290["$W"]
    set $P5006, $P5004
    goto if2018_end4869
  if2018_else4868:
    null $P5005
    set $P5006, $P5005
  if2018_end4869:
    unless_null $P5006, vivi_20194870
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_20194870:
    unless_null $P5006, vivi_20204871
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20204871:
    set $P5001, $P5006
  fallback4867:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4872
    nqp_get_sc_object $P5011, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5010, $P5011
    set fb_tmp_291, $P5010
    repr_defined $I5002, fb_tmp_291
    unless $I5002 goto if2021_else4873 
    set $P5012, fb_tmp_291["$GLOBALish"]
    set $P5014, $P5012
    goto if2021_end4874
  if2021_else4873:
    null $P5013
    set $P5014, $P5013
  if2021_end4874:
    unless_null $P5014, vivi_20224875
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_20224875:
    unless_null $P5014, vivi_20234876
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_20234876:
    set $P5009, $P5014
  fallback4872:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_259_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 1996
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1997
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_260_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2002
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2003
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4892
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_295, $P5003
    repr_defined $I5001, fb_tmp_295
    unless $I5001 goto if2033_else4893 
    set $P5005, fb_tmp_295["$W"]
    set $P5007, $P5005
    goto if2033_end4894
  if2033_else4893:
    null $P5006
    set $P5007, $P5006
  if2033_end4894:
    unless_null $P5007, vivi_20344895
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_20344895:
    unless_null $P5007, vivi_20354896
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_20354896:
    set $P5002, $P5007
  fallback4892:
    unless_null _lex_param_1, fallback4899
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5010
  fallback4899:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5002, fb_tmp_296
    unless $I5002 goto if2036_else4897 
    set $P5011, fb_tmp_296["name"]
    set $P5013, $P5011
    goto if2036_end4898
  if2036_else4897:
    null $P5012
    set $P5013, $P5012
  if2036_end4898:
    unless_null $P5013, vivi_20374900
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_20374900:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4901
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5016, $P5017
    set fb_tmp_297, $P5016
    repr_defined $I5003, fb_tmp_297
    unless $I5003 goto if2038_else4902 
    set $P5018, fb_tmp_297["$GLOBALish"]
    set $P5020, $P5018
    goto if2038_end4903
  if2038_else4902:
    null $P5019
    set $P5020, $P5019
  if2038_end4903:
    unless_null $P5020, vivi_20394904
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_20394904:
    unless_null $P5020, vivi_20404905
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_20404905:
    set $P5015, $P5020
  fallback4901:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2041_end4907 
.annotate 'line', 2004
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2043_end4911 
    set fb_tmp_298, $P101
    repr_defined $I5007, fb_tmp_298
    unless $I5007 goto if2044_else4912 
    set $P5025, fb_tmp_298["EXPORT"]
    set $P5027, $P5025
    goto if2044_end4913
  if2044_else4912:
    null $P5026
    set $P5027, $P5026
  if2044_end4913:
    unless_null $P5027, vivi_20454914
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5027, $P5028
  vivi_20454914:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2043_end4911:
    unless $I5008 goto if2042_end4909 
.annotate 'line', 2005
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4915
    nqp_get_sc_object $P5031, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5030, $P5031
    set fb_tmp_299, $P5030
    repr_defined $I5009, fb_tmp_299
    unless $I5009 goto if2046_else4916 
    set $P5032, fb_tmp_299["$W"]
    set $P5034, $P5032
    goto if2046_end4917
  if2046_else4916:
    null $P5033
    set $P5034, $P5033
  if2046_end4917:
    unless_null $P5034, vivi_20474918
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  vivi_20474918:
    unless_null $P5034, vivi_20484919
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20484919:
    set $P5029, $P5034
  fallback4915:
    set fb_tmp_301, $P101
    repr_defined $I5011, fb_tmp_301
    unless $I5011 goto if2050_else4922 
    set $P5039, fb_tmp_301["EXPORT"]
    set $P5041, $P5039
    goto if2050_end4923
  if2050_else4922:
    null $P5040
    set $P5041, $P5040
  if2050_end4923:
    unless_null $P5041, vivi_20514924
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5041, $P5042
  vivi_20514924:
    get_who $P5038, $P5041
    set fb_tmp_300, $P5038
    repr_defined $I5010, fb_tmp_300
    unless $I5010 goto if2049_else4920 
    set $P5043, fb_tmp_300["DEFAULT"]
    set $P5045, $P5043
    goto if2049_end4921
  if2049_else4920:
    null $P5044
    set $P5045, $P5044
  if2049_end4921:
    unless_null $P5045, vivi_20524925
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  vivi_20524925:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2042_end4909:
.annotate 'line', 2008
    $P5048 = "&import_HOW_exports"($P101)
  if2041_end4907:
.annotate 'line', 2010
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_261_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2013
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_478_1382959278.72036' 
    capture_lex $P5038 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_302 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4928
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback4928:
    set fb_tmp_302, _lex_param_1
    repr_defined $I5001, fb_tmp_302
    unless $I5001 goto if2053_else4926 
    set $P5004, fb_tmp_302["xblock"]
    set $P5006, $P5004
    goto if2053_end4927
  if2053_else4926:
    null $P5005
    set $P5006, $P5005
  if2053_end4927:
    unless_null $P5006, vivi_20544929
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_20544929:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 2015
    unless_null _lex_param_1, fallback4934
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5009
  fallback4934:
    set fb_tmp_304, _lex_param_1
    repr_defined $I5003, fb_tmp_304
    unless $I5003 goto if2056_else4932 
    set $P5010, fb_tmp_304["xblock"]
    set $P5012, $P5010
    goto if2056_end4933
  if2056_else4932:
    null $P5011
    set $P5012, $P5011
  if2056_end4933:
    unless_null $P5012, vivi_20574935
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_20574935:
    set fb_tmp_303, $P5012
    repr_defined $I5002, fb_tmp_303
    unless $I5002 goto if2055_else4930 
    set $I5004, $P101
    set $P5014, fb_tmp_303[$I5004]
    set $P5016, $P5014
    goto if2055_end4931
  if2055_else4930:
    null $P5015
    set $P5016, $P5015
  if2055_end4931:
    unless_null $P5016, vivi_20584936
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_20584936:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4941
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5020
  fallback4941:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5005, fb_tmp_305
    unless $I5005 goto if2060_else4939 
    set $P5021, fb_tmp_305["else"]
    set $P5023, $P5021
    goto if2060_end4940
  if2060_else4939:
    null $P5022
    set $P5023, $P5022
  if2060_end4940:
    unless_null $P5023, vivi_20614942
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_20614942:
    unless $P5023 goto if2059_end4938 
.annotate 'line', 2016
.annotate 'line', 2017
    unless_null _lex_param_1, fallback4945
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5025
  fallback4945:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5006, fb_tmp_306
    unless $I5006 goto if2062_else4943 
    set $P5026, fb_tmp_306["else"]
    set $P5028, $P5026
    goto if2062_end4944
  if2062_else4943:
    null $P5027
    set $P5028, $P5027
  if2062_end4944:
    unless_null $P5028, vivi_20634946
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_20634946:
    $P5030 = $P5028."ast"()
    $P5031 = "&block_immediate"($P5030)
    $P5032 = $P102."push"($P5031)
  if2059_end4938:
  while2064_test4947:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5007, $N5004, $N5005
    box $P5036, $I5007
    set $P5035, $P5036
    unless $I5007 goto while2064_done4951 
  while2064_redo4949:
    .const 'Sub' $P5033 = 'cuid_478_1382959278.72036' 
    capture_lex $P5033
    $P5034 = $P5033()
    set $P5035, $P5034
    goto while2064_test4947 
  while2064_done4951:
.annotate 'line', 2026
    $P5037 = _lex_param_1."!make"($P102)
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1382959278.72036") :anon :lex :outer("cuid_261_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2020
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 2023
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4956
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  fallback4956:
    set fb_tmp_308, $P5003
    repr_defined $I5002, fb_tmp_308
    unless $I5002 goto if2066_else4954 
    set $P5005, fb_tmp_308["xblock"]
    set $P5007, $P5005
    goto if2066_end4955
  if2066_else4954:
    null $P5006
    set $P5007, $P5006
  if2066_end4955:
    unless_null $P5007, vivi_20674957
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_20674957:
    set fb_tmp_307, $P5007
    repr_defined $I5001, fb_tmp_307
    unless $I5001 goto if2065_else4952 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_307[$I5003]
    set $P5012, $P5009
    goto if2065_end4953
  if2065_else4952:
    null $P5011
    set $P5012, $P5011
  if2065_end4953:
    unless_null $P5012, vivi_20684958
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_20684958:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 2024
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_262_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2029
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_309 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2030
    unless_null _lex_param_1, fallback4961
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback4961:
    set fb_tmp_309, _lex_param_1
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2069_else4959 
    set $P5003, fb_tmp_309["xblock"]
    set $P5005, $P5003
    goto if2069_end4960
  if2069_else4959:
    null $P5004
    set $P5005, $P5004
  if2069_end4960:
    unless_null $P5005, vivi_20704962
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_20704962:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 2031
    $P101."op"("unless")
.annotate 'line', 2032
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_263_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2036
    unless_null _lex_param_1, fallback4965
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback4965:
    set fb_tmp_310, _lex_param_1
    repr_defined $I5001, fb_tmp_310
    unless $I5001 goto if2071_else4963 
    set $P5003, fb_tmp_310["xblock"]
    set $P5005, $P5003
    goto if2071_end4964
  if2071_else4963:
    null $P5004
    set $P5005, $P5004
  if2071_end4964:
    unless_null $P5005, vivi_20724966
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_20724966:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 2037
    unless_null _lex_param_1, fallback4969
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5009
  fallback4969:
    set fb_tmp_311, _lex_param_1
    repr_defined $I5002, fb_tmp_311
    unless $I5002 goto if2073_else4967 
    set $P5010, fb_tmp_311["sym"]
    set $P5012, $P5010
    goto if2073_end4968
  if2073_else4967:
    null $P5011
    set $P5012, $P5011
  if2073_end4968:
    unless_null $P5012, vivi_20744970
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_20744970:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4973
    nqp_get_sc_object $P5016, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5015, $P5016
    set fb_tmp_312, $P5015
    repr_defined $I5003, fb_tmp_312
    unless $I5003 goto if2076_else4974 
    set $P5017, fb_tmp_312["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2076_end4975
  if2076_else4974:
    null $P5018
    set $P5019, $P5018
  if2076_end4975:
    unless_null $P5019, vivi_20774976
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_20774976:
    unless_null $P5019, vivi_20784977
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20784977:
    set $P5014, $P5019
  fallback4973:
    if $P5014 goto unless2075_end4972 
.annotate 'line', 2038
.annotate 'line', 2039
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2075_end4972:
.annotate 'line', 2041
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_264_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2044
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_313 
    .local pmc fb_tmp_314 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4980
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback4980:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5001, fb_tmp_313
    unless $I5001 goto if2079_else4978 
    set $P5004, fb_tmp_313["wu"]
    set $P5006, $P5004
    goto if2079_end4979
  if2079_else4978:
    null $P5005
    set $P5006, $P5005
  if2079_end4979:
    unless_null $P5006, vivi_20804981
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_20804981:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4986
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5009
  fallback4986:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5002, fb_tmp_314
    unless $I5002 goto if2082_else4984 
    set $P5010, fb_tmp_314["xblock"]
    set $P5012, $P5010
    goto if2082_end4985
  if2082_else4984:
    null $P5011
    set $P5012, $P5011
  if2082_end4985:
    unless_null $P5012, vivi_20834987
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_20834987:
    unless $P5012 goto if2081_else4982 
.annotate 'line', 2047
.annotate 'line', 2048
    unless_null _lex_param_1, fallback4990
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5014
  fallback4990:
    set fb_tmp_315, _lex_param_1
    repr_defined $I5003, fb_tmp_315
    unless $I5003 goto if2084_else4988 
    set $P5015, fb_tmp_315["xblock"]
    set $P5017, $P5015
    goto if2084_end4989
  if2084_else4988:
    null $P5016
    set $P5017, $P5016
  if2084_end4989:
    unless_null $P5017, vivi_20854991
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_20854991:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 2049
    $P5021 = $P102."op"($P101)
    goto if2081_end4983
  if2081_else4982:
.annotate 'line', 2051
.annotate 'line', 2052
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    unless_null _lex_param_1, fallback4994
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5023
  fallback4994:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5004, fb_tmp_316
    unless $I5004 goto if2086_else4992 
    set $P5024, fb_tmp_316["EXPR"]
    set $P5026, $P5024
    goto if2086_end4993
  if2086_else4992:
    null $P5025
    set $P5026, $P5025
  if2086_end4993:
    unless_null $P5026, vivi_20874995
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_20874995:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4998
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5029
  fallback4998:
    set fb_tmp_317, _lex_param_1
    repr_defined $I5005, fb_tmp_317
    unless $I5005 goto if2088_else4996 
    set $P5030, fb_tmp_317["pblock"]
    set $P5032, $P5030
    goto if2088_end4997
  if2088_else4996:
    null $P5031
    set $P5032, $P5031
  if2088_end4997:
    unless_null $P5032, vivi_20894999
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5032, $P5033
  vivi_20894999:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2081_end4983:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback5002
    nqp_get_sc_object $P5039, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5038, $P5039
    set fb_tmp_318, $P5038
    repr_defined $I5006, fb_tmp_318
    unless $I5006 goto if2091_else5003 
    set $P5040, fb_tmp_318["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2091_end5004
  if2091_else5003:
    null $P5041
    set $P5042, $P5041
  if2091_end5004:
    unless_null $P5042, vivi_20925005
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5042, $P5043
  vivi_20925005:
    unless_null $P5042, vivi_20935006
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20935006:
    set $P5037, $P5042
  fallback5002:
    if $P5037 goto unless2090_end5001 
.annotate 'line', 2055
.annotate 'line', 2056
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2090_end5001:
.annotate 'line', 2058
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_265_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2061
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    .local pmc fb_tmp_320 
    .local pmc fb_tmp_321 
    .local pmc fb_tmp_322 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 2062
    unless_null _lex_param_1, fallback5009
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback5009:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2094_else5007 
    set $P5004, fb_tmp_319["xblock"]
    set $P5006, $P5004
    goto if2094_end5008
  if2094_else5007:
    null $P5005
    set $P5006, $P5005
  if2094_end5008:
    unless_null $P5006, vivi_20955010
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_20955010:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2063
    $P101."op"("for")
    set fb_tmp_320, $P101
    repr_defined $I5002, fb_tmp_320
    unless $I5002 goto if2096_else5011 
    set $P5009, fb_tmp_320[1]
    set $P5011, $P5009
    goto if2096_end5012
  if2096_else5011:
    null $P5010
    set $P5011, $P5010
  if2096_end5012:
    unless_null $P5011, vivi_20975013
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_20975013:
    set $P102, $P5011
.annotate 'line', 2065
    $P5013 = $P102."arity"()
    if $P5013 goto unless2098_end5015 
.annotate 'line', 2066
    set fb_tmp_321, $P102
    repr_defined $I5003, fb_tmp_321
    unless $I5003 goto if2099_else5016 
    set $P5014, fb_tmp_321[0]
    set $P5016, $P5014
    goto if2099_end5017
  if2099_else5016:
    null $P5015
    set $P5016, $P5015
  if2099_end5017:
    unless_null $P5016, vivi_21005018
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_21005018:
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 2067
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 2068
    $P5020 = $P102."arity"(1)
  unless2098_end5015:
.annotate 'line', 2070
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback5021
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set fb_tmp_322, $P5022
    repr_defined $I5004, fb_tmp_322
    unless $I5004 goto if2102_else5022 
    set $P5024, fb_tmp_322["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2102_end5023
  if2102_else5022:
    null $P5025
    set $P5026, $P5025
  if2102_end5023:
    unless_null $P5026, vivi_21035024
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_21035024:
    unless_null $P5026, vivi_21045025
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_21045025:
    set $P5021, $P5026
  fallback5021:
    if $P5021 goto unless2101_end5020 
.annotate 'line', 2071
.annotate 'line', 2072
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2101_end5020:
.annotate 'line', 2074
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_266_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2077
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_323 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2078
    unless_null _lex_param_1, fallback5028
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback5028:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5001, fb_tmp_323
    unless $I5001 goto if2105_else5026 
    set $P5003, fb_tmp_323["block"]
    set $P5005, $P5003
    goto if2105_end5027
  if2105_else5026:
    null $P5004
    set $P5005, $P5004
  if2105_end5027:
    unless_null $P5005, vivi_21065029
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_21065029:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2079
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 2080
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_267_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_324 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2084
    unless_null _lex_param_1, fallback5032
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback5032:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5001, fb_tmp_324
    unless $I5001 goto if2107_else5030 
    set $P5003, fb_tmp_324["block"]
    set $P5005, $P5003
    goto if2107_end5031
  if2107_else5030:
    null $P5004
    set $P5005, $P5004
  if2107_end5031:
    unless_null $P5005, vivi_21085033
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_21085033:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2085
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 2086
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_268_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    .local pmc fb_tmp_326 
.annotate 'line', 2125
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5034
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_325, $P5002
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2109_else5035 
    set $P5004, fb_tmp_325["$W"]
    set $P5006, $P5004
    goto if2109_end5036
  if2109_else5035:
    null $P5005
    set $P5006, $P5005
  if2109_end5036:
    unless_null $P5006, vivi_21105037
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_21105037:
    unless_null $P5006, vivi_21115038
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_21115038:
    set $P5001, $P5006
  fallback5034:
    unless_null _lex_param_1, fallback5041
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5009
  fallback5041:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5002, fb_tmp_326
    unless $I5002 goto if2112_else5039 
    set $P5010, fb_tmp_326["blorst"]
    set $P5012, $P5010
    goto if2112_end5040
  if2112_else5039:
    null $P5011
    set $P5012, $P5011
  if2112_end5040:
    unless_null $P5012, vivi_21135042
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_21135042:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_269_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2128
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
    .local pmc fb_tmp_328 
.annotate 'line', 2129
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5043
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_327, $P5002
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2114_else5044 
    set $P5004, fb_tmp_327["$W"]
    set $P5006, $P5004
    goto if2114_end5045
  if2114_else5044:
    null $P5005
    set $P5006, $P5005
  if2114_end5045:
    unless_null $P5006, vivi_21155046
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_21155046:
    unless_null $P5006, vivi_21165047
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_21165047:
    set $P5001, $P5006
  fallback5043:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback5050
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5010
  fallback5050:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5002, fb_tmp_328
    unless $I5002 goto if2117_else5048 
    set $P5011, fb_tmp_328["blorst"]
    set $P5013, $P5011
    goto if2117_end5049
  if2117_else5048:
    null $P5012
    set $P5013, $P5012
  if2117_end5049:
    unless_null $P5013, vivi_21185051
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_21185051:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 2130
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_270_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2133
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_329 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_5052
    .lex "RETURN", $P102
.annotate 'line', 2134
    unless_null _lex_param_1, fallback5056
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback5056:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5001, fb_tmp_329
    unless $I5001 goto if2119_else5054 
    set $P5003, fb_tmp_329["blorst"]
    set $P5005, $P5003
    goto if2119_end5055
  if2119_else5054:
    null $P5004
    set $P5005, $P5004
  if2119_end5055:
    unless_null $P5005, vivi_21205057
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_21205057:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 108
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2121_end5059 
.annotate 'line', 2135
    set fb_tmp_330, $P101
    repr_defined $I5003, fb_tmp_330
    unless $I5003 goto if2124_else5064 
    set $P5009, fb_tmp_330["handlers"]
    set $P5011, $P5009
    goto if2124_end5065
  if2124_else5064:
    null $P5010
    set $P5011, $P5010
  if2124_end5065:
    unless_null $P5011, vivi_21255066
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_21255066:
    set $P5017, $P5011
    unless $P5011 goto if2123_end5063 
    set fb_tmp_331, $P101
    repr_defined $I5005, fb_tmp_331
    unless $I5005 goto if2126_else5067 
    set $P5013, fb_tmp_331["handlers"]
    set $P5015, $P5013
    goto if2126_end5068
  if2126_else5067:
    null $P5014
    set $P5015, $P5014
  if2126_end5068:
    unless_null $P5015, vivi_21275069
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_21275069:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2123_end5063:
    unless $P5017 goto if2122_else5060 
.annotate 'line', 2136
.annotate 'line', 2137
    _lex_param_1."!make"($P101)
    $P5019 = "RETURN"(1)
    set $P5021, $P5019
    goto if2122_end5061
  if2122_else5060:
.annotate 'line', 2140
.annotate 'line', 2141
    $P5020 = $P101."blocktype"("immediate")
    set $P5021, $P5020
  if2122_end5061:
  if2121_end5059:
.annotate 'line', 2144
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2148
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 2149
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
.annotate 'line', 2150
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2152
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5027 = $P5026."new"("exception" :named("op"))
.annotate 'line', 2153
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5029 = $P5028."new"("handled" :named("value"))
.annotate 'line', 2154
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5031 = $P5030."new"(1 :named("value"))
    $P5032 = $P5025."new"($P5027, $P5029, $P5031, "bindkey_i" :named("op"))
.annotate 'line', 2156
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5034 = $P5033."new"("null" :named("op"))
.annotate 'line', 2157
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5036 = $P5035."new"("null" :named("op"))
    $P5037 = $P5024."new"($P5032 :named("parrot"), $P5034 :named("jvm"), $P5036 :named("moar"))
.annotate 'line', 2159
    $P5038 = "&default_for"("$")
    $P5039 = $P5023."new"($P5037, $P5038)
    $P5040 = $P5022."new"($P101, "CATCH", $P5039, "handle" :named("op"))
    $P5041 = _lex_param_1."!make"($P5040)
    goto lexotic_5053
  lexotic_5052:
    .get_results ($P5041)
  lexotic_5053:
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_271_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2163
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
.annotate 'line', 2164
    unless_null _lex_param_1, fallback5074
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5074:
    set fb_tmp_332, _lex_param_1
    repr_defined $I5001, fb_tmp_332
    unless $I5001 goto if2129_else5072 
    set $P5002, fb_tmp_332["block"]
    set $P5004, $P5002
    goto if2129_end5073
  if2129_else5072:
    null $P5003
    set $P5004, $P5003
  if2129_end5073:
    unless_null $P5004, vivi_21305075
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21305075:
    unless $P5004 goto if2128_else5070 
.annotate 'line', 2165
    unless_null _lex_param_1, fallback5078
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5078:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5002, fb_tmp_333
    unless $I5002 goto if2131_else5076 
    set $P5007, fb_tmp_333["block"]
    set $P5009, $P5007
    goto if2131_end5077
  if2131_else5076:
    null $P5008
    set $P5009, $P5008
  if2131_end5077:
    unless_null $P5009, vivi_21325079
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_21325079:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2128_end5071
  if2128_else5070:
.annotate 'line', 2166
    unless_null _lex_param_1, fallback5082
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5013
  fallback5082:
    set fb_tmp_334, _lex_param_1
    repr_defined $I5003, fb_tmp_334
    unless $I5003 goto if2133_else5080 
    set $P5014, fb_tmp_334["statement"]
    set $P5016, $P5014
    goto if2133_end5081
  if2133_else5080:
    null $P5015
    set $P5016, $P5015
  if2133_end5081:
    unless_null $P5016, vivi_21345083
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_21345083:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2128_end5071:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_272_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2171
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_335 
    unless_null _lex_param_1, fallback5086
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5086:
    set fb_tmp_335, _lex_param_1
    repr_defined $I5001, fb_tmp_335
    unless $I5001 goto if2135_else5084 
    set $P5002, fb_tmp_335["cond"]
    set $P5004, $P5002
    goto if2135_end5085
  if2135_else5084:
    null $P5003
    set $P5004, $P5003
  if2135_end5085:
    unless_null $P5004, vivi_21365087
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21365087:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_273_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_336 
    unless_null _lex_param_1, fallback5090
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5090:
    set fb_tmp_336, _lex_param_1
    repr_defined $I5001, fb_tmp_336
    unless $I5001 goto if2137_else5088 
    set $P5002, fb_tmp_336["cond"]
    set $P5004, $P5002
    goto if2137_end5089
  if2137_else5088:
    null $P5003
    set $P5004, $P5003
  if2137_end5089:
    unless_null $P5004, vivi_21385091
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21385091:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_274_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_337 
    unless_null _lex_param_1, fallback5094
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5094:
    set fb_tmp_337, _lex_param_1
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if2139_else5092 
    set $P5002, fb_tmp_337["cond"]
    set $P5004, $P5002
    goto if2139_end5093
  if2139_else5092:
    null $P5003
    set $P5004, $P5003
  if2139_end5093:
    unless_null $P5004, vivi_21405095
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21405095:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_275_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2175
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_338 
    unless_null _lex_param_1, fallback5098
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5098:
    set fb_tmp_338, _lex_param_1
    repr_defined $I5001, fb_tmp_338
    unless $I5001 goto if2141_else5096 
    set $P5002, fb_tmp_338["cond"]
    set $P5004, $P5002
    goto if2141_end5097
  if2141_else5096:
    null $P5003
    set $P5004, $P5003
  if2141_end5097:
    unless_null $P5004, vivi_21425099
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21425099:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_276_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2179
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_339 
    unless_null _lex_param_1, fallback5102
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5102:
    set fb_tmp_339, _lex_param_1
    repr_defined $I5001, fb_tmp_339
    unless $I5001 goto if2143_else5100 
    set $P5002, fb_tmp_339["fatarrow"]
    set $P5004, $P5002
    goto if2143_end5101
  if2143_else5100:
    null $P5003
    set $P5004, $P5003
  if2143_end5101:
    unless_null $P5004, vivi_21445103
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21445103:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_277_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2180
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_340 
    unless_null _lex_param_1, fallback5106
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5106:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2145_else5104 
    set $P5002, fb_tmp_340["colonpair"]
    set $P5004, $P5002
    goto if2145_end5105
  if2145_else5104:
    null $P5003
    set $P5004, $P5003
  if2145_end5105:
    unless_null $P5004, vivi_21465107
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21465107:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_278_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2181
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_341 
    unless_null _lex_param_1, fallback5110
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5110:
    set fb_tmp_341, _lex_param_1
    repr_defined $I5001, fb_tmp_341
    unless $I5001 goto if2147_else5108 
    set $P5002, fb_tmp_341["variable"]
    set $P5004, $P5002
    goto if2147_end5109
  if2147_else5108:
    null $P5003
    set $P5004, $P5003
  if2147_end5109:
    unless_null $P5004, vivi_21485111
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21485111:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_279_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2182
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_342 
    unless_null _lex_param_1, fallback5114
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5114:
    set fb_tmp_342, _lex_param_1
    repr_defined $I5001, fb_tmp_342
    unless $I5001 goto if2149_else5112 
    set $P5002, fb_tmp_342["package_declarator"]
    set $P5004, $P5002
    goto if2149_end5113
  if2149_else5112:
    null $P5003
    set $P5004, $P5003
  if2149_end5113:
    unless_null $P5004, vivi_21505115
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21505115:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_280_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2183
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_343 
    unless_null _lex_param_1, fallback5118
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5118:
    set fb_tmp_343, _lex_param_1
    repr_defined $I5001, fb_tmp_343
    unless $I5001 goto if2151_else5116 
    set $P5002, fb_tmp_343["scope_declarator"]
    set $P5004, $P5002
    goto if2151_end5117
  if2151_else5116:
    null $P5003
    set $P5004, $P5003
  if2151_end5117:
    unless_null $P5004, vivi_21525119
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21525119:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_281_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2184
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_344 
    unless_null _lex_param_1, fallback5122
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5122:
    set fb_tmp_344, _lex_param_1
    repr_defined $I5001, fb_tmp_344
    unless $I5001 goto if2153_else5120 
    set $P5002, fb_tmp_344["routine_declarator"]
    set $P5004, $P5002
    goto if2153_end5121
  if2153_else5120:
    null $P5003
    set $P5004, $P5003
  if2153_end5121:
    unless_null $P5004, vivi_21545123
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21545123:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_282_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2185
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_345 
    unless_null _lex_param_1, fallback5126
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5126:
    set fb_tmp_345, _lex_param_1
    repr_defined $I5001, fb_tmp_345
    unless $I5001 goto if2155_else5124 
    set $P5002, fb_tmp_345["regex_declarator"]
    set $P5004, $P5002
    goto if2155_end5125
  if2155_else5124:
    null $P5003
    set $P5004, $P5003
  if2155_end5125:
    unless_null $P5004, vivi_21565127
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21565127:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_283_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2186
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_346 
    unless_null _lex_param_1, fallback5130
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5130:
    set fb_tmp_346, _lex_param_1
    repr_defined $I5001, fb_tmp_346
    unless $I5001 goto if2157_else5128 
    set $P5002, fb_tmp_346["statement_prefix"]
    set $P5004, $P5002
    goto if2157_end5129
  if2157_else5128:
    null $P5003
    set $P5004, $P5003
  if2157_end5129:
    unless_null $P5004, vivi_21585131
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21585131:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_284_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2187
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_347 
.annotate 'line', 2188
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    unless_null _lex_param_1, fallback5134
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback5134:
    set fb_tmp_347, _lex_param_1
    repr_defined $I5001, fb_tmp_347
    unless $I5001 goto if2159_else5132 
    set $P5003, fb_tmp_347["pblock"]
    set $P5005, $P5003
    goto if2159_end5133
  if2159_else5132:
    null $P5004
    set $P5005, $P5004
  if2159_end5133:
    unless_null $P5005, vivi_21605135
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_21605135:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_285_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2191
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_348 
    .local pmc fb_tmp_349 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2192
    unless_null _lex_param_1, fallback5138
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback5138:
    set fb_tmp_348, _lex_param_1
    repr_defined $I5001, fb_tmp_348
    unless $I5001 goto if2161_else5136 
    set $P5003, fb_tmp_348["val"]
    set $P5005, $P5003
    goto if2161_end5137
  if2161_else5136:
    null $P5004
    set $P5005, $P5004
  if2161_end5137:
    unless_null $P5005, vivi_21625139
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_21625139:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2193
    unless_null _lex_param_1, fallback5142
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback5142:
    set fb_tmp_349, _lex_param_1
    repr_defined $I5002, fb_tmp_349
    unless $I5002 goto if2163_else5140 
    set $P5009, fb_tmp_349["key"]
    set $P5011, $P5009
    goto if2163_end5141
  if2163_else5140:
    null $P5010
    set $P5011, $P5010
  if2163_end5141:
    unless_null $P5011, vivi_21645143
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_21645143:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2194
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_286_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2197
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_479_1382959278.72036' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_350 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    unless_null _lex_param_1, fallback5148
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5148:
    set fb_tmp_350, _lex_param_1
    repr_defined $I5001, fb_tmp_350
    unless $I5001 goto if2166_else5146 
    set $P5002, fb_tmp_350["variable"]
    set $P5004, $P5002
    goto if2166_end5147
  if2166_else5146:
    null $P5003
    set $P5004, $P5003
  if2166_end5147:
    unless_null $P5004, vivi_21675149
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_21675149:
    unless $P5004 goto if2165_else5144 
.annotate 'line', 2198
.annotate 'line', 2199
    unless_null _lex_param_1, fallback5152
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5152:
    set fb_tmp_351, _lex_param_1
    repr_defined $I5002, fb_tmp_351
    unless $I5002 goto if2168_else5150 
    set $P5007, fb_tmp_351["variable"]
    set $P5009, $P5007
    goto if2168_end5151
  if2168_else5150:
    null $P5008
    set $P5009, $P5008
  if2168_end5151:
    unless_null $P5009, vivi_21695153
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_21695153:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback5158
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback5158:
    set fb_tmp_353, _lex_param_1
    repr_defined $I5004, fb_tmp_353
    unless $I5004 goto if2171_else5156 
    set $P5013, fb_tmp_353["variable"]
    set $P5015, $P5013
    goto if2171_end5157
  if2171_else5156:
    null $P5014
    set $P5015, $P5014
  if2171_end5157:
    unless_null $P5015, vivi_21725159
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_21725159:
    set fb_tmp_352, $P5015
    repr_defined $I5003, fb_tmp_352
    unless $I5003 goto if2170_else5154 
    set $P5017, fb_tmp_352["desigilname"]
    set $P5019, $P5017
    goto if2170_end5155
  if2170_else5154:
    null $P5018
    set $P5019, $P5018
  if2170_end5155:
    unless_null $P5019, vivi_21735160
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_21735160:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2200
    unless_null _lex_param_1, fallback5163
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5021
  fallback5163:
    set fb_tmp_354, _lex_param_1
    repr_defined $I5005, fb_tmp_354
    unless $I5005 goto if2174_else5161 
    set $P5022, fb_tmp_354["variable"]
    set $P5024, $P5022
    goto if2174_end5162
  if2174_else5161:
    null $P5023
    set $P5024, $P5023
  if2174_end5162:
    unless_null $P5024, vivi_21755164
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_21755164:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2165_end5145
  if2165_else5144:
    .const 'Sub' $P5028 = 'cuid_479_1382959278.72036' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2165_end5145:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1382959278.72036") :anon :lex :outer("cuid_286_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2201
    .lex "$past", $P101 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5169
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback5169:
    set fb_tmp_355, $P5002
    repr_defined $I5001, fb_tmp_355
    unless $I5001 goto if2177_else5167 
    set $P5004, fb_tmp_355["circumfix"]
    set $P5006, $P5004
    goto if2177_end5168
  if2177_else5167:
    null $P5005
    set $P5006, $P5005
  if2177_end5168:
    unless_null $P5006, vivi_21785170
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_21785170:
    unless $P5006 goto if2176_else5165 
.annotate 'line', 2203
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5173
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  fallback5173:
    set fb_tmp_356, $P5008
    repr_defined $I5002, fb_tmp_356
    unless $I5002 goto if2179_else5171 
    set $P5010, fb_tmp_356["circumfix"]
    set $P5012, $P5010
    goto if2179_end5172
  if2179_else5171:
    null $P5011
    set $P5012, $P5011
  if2179_end5172:
    unless_null $P5012, vivi_21805174
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_21805174:
    $P5014 = $P5012."ast"()
    set $P5023, $P5014
    goto if2176_end5166
  if2176_else5165:
.annotate 'line', 2204
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5177
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  fallback5177:
    set fb_tmp_357, $P5016
    repr_defined $I5004, fb_tmp_357
    unless $I5004 goto if2181_else5175 
    set $P5018, fb_tmp_357["not"]
    set $P5020, $P5018
    goto if2181_end5176
  if2181_else5175:
    null $P5019
    set $P5020, $P5019
  if2181_end5176:
    unless_null $P5020, vivi_21825178
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_21825178:
    isfalse $I5003, $P5020
    $P5022 = $P5015."new"($I5003 :named("value"))
    set $P5023, $P5022
  if2176_end5166:
    set $P101, $P5023
.annotate 'line', 2205
    find_lex $P5024, "$/"
    unless_null $P5024, fallback5181
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  fallback5181:
    set fb_tmp_358, $P5024
    repr_defined $I5005, fb_tmp_358
    unless $I5005 goto if2183_else5179 
    set $P5026, fb_tmp_358["identifier"]
    set $P5028, $P5026
    goto if2183_end5180
  if2183_else5179:
    null $P5027
    set $P5028, $P5027
  if2183_end5180:
    unless_null $P5028, vivi_21845182
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_21845182:
    set $S5001, $P5028
    $P101."named"($S5001)
.annotate 'line', 2206
    find_dynamic_lex $P5030, "$/"
    $P5031 = $P5030."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_287_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2210
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_481_1382959278.72036' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback5187
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback5187:
    set fb_tmp_359, _lex_param_1
    repr_defined $I5001, fb_tmp_359
    unless $I5001 goto if2186_else5185 
    set $P5003, fb_tmp_359["postcircumfix"]
    set $P5005, $P5003
    goto if2186_end5186
  if2186_else5185:
    null $P5004
    set $P5005, $P5004
  if2186_end5186:
    unless_null $P5005, vivi_21875188
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_21875188:
    unless $P5005 goto if2185_else5183 
.annotate 'line', 2212
.annotate 'line', 2213
    unless_null _lex_param_1, fallback5191
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5007
  fallback5191:
    set fb_tmp_360, _lex_param_1
    repr_defined $I5002, fb_tmp_360
    unless $I5002 goto if2188_else5189 
    set $P5008, fb_tmp_360["postcircumfix"]
    set $P5010, $P5008
    goto if2188_end5190
  if2188_else5189:
    null $P5009
    set $P5010, $P5009
  if2188_end5190:
    unless_null $P5010, vivi_21895192
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_21895192:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2214
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
.annotate 'line', 2215
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2185_end5184
  if2185_else5183:
    .const 'Sub' $P5017 = 'cuid_481_1382959278.72036' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2185_end5184:
.annotate 'line', 2296
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1382959278.72036") :anon :lex :outer("cuid_287_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2218
    .const 'Sub' $P5081 = 'cuid_480_1382959278.72036' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_484_1382959278.72036' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_485_1382959278.72036' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_486_1382959278.72036' 
    capture_lex $P5081 
    .lex "@name", $P101 
    .local pmc fb_tmp_361 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_362 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_366 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2219
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2191_else5195 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2191_end5196
  if2191_else5195:
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5007
  if2191_end5196:
    get_who $P5002, $P5008
    set fb_tmp_361, $P5002
    repr_defined $I5001, fb_tmp_361
    unless $I5001 goto if2190_else5193 
    set $P5009, fb_tmp_361["Compiler"]
    set $P5011, $P5009
    goto if2190_end5194
  if2190_else5193:
    null $P5010
    set $P5011, $P5010
  if2190_end5194:
    unless_null $P5011, vivi_21925197
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_21925197:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2193_else5198 
.annotate 'line', 2220
    find_lex $P5015, "$/"
    unless_null $P5015, fallback5204
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  fallback5204:
    set fb_tmp_362, $P5015
    repr_defined $I5004, fb_tmp_362
    unless $I5004 goto if2195_else5202 
    set $P5017, fb_tmp_362["twigil"]
    set $P5019, $P5017
    goto if2195_end5203
  if2195_else5202:
    null $P5018
    set $P5019, $P5018
  if2195_end5203:
    unless_null $P5019, vivi_21965205
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_21965205:
    unless $P5019 goto if2194_end5201 
.annotate 'line', 2221
.annotate 'line', 2222
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2194_end5201:
.annotate 'line', 2224
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5080, $P5025
    goto if2193_end5199
  if2193_else5198:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback5210
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  fallback5210:
    set fb_tmp_363, $P5026
    repr_defined $I5006, fb_tmp_363
    unless $I5006 goto if2198_else5208 
    set $P5028, fb_tmp_363["twigil"]
    set $P5030, $P5028
    goto if2198_end5209
  if2198_else5208:
    null $P5029
    set $P5030, $P5029
  if2198_end5209:
    unless_null $P5030, vivi_21995211
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5030, $P5031
  vivi_21995211:
    set $S5002, $P5030
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2197_else5206 
    .const 'Sub' $P5032 = 'cuid_480_1382959278.72036' 
    capture_lex $P5032
    $P5033 = $P5032()
    set $P5079, $P5033
    goto if2197_end5207
  if2197_else5206:
    find_lex $P5034, "$/"
    unless_null $P5034, fallback5224
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  fallback5224:
    set fb_tmp_366, $P5034
    repr_defined $I5008, fb_tmp_366
    unless $I5008 goto if2205_else5222 
    set $P5036, fb_tmp_366["twigil"]
    set $P5038, $P5036
    goto if2205_end5223
  if2205_else5222:
    null $P5037
    set $P5038, $P5037
  if2205_end5223:
    unless_null $P5038, vivi_22065225
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5038, $P5039
  vivi_22065225:
    set $S5003, $P5038
    iseq $I5007, $S5003, "!"
    unless $I5007 goto if2204_else5220 
    .const 'Sub' $P5040 = 'cuid_484_1382959278.72036' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5078, $P5041
    goto if2204_end5221
  if2204_else5220:
    find_lex $P5042, "$/"
    unless_null $P5042, fallback5274
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5042, $P5043
  fallback5274:
    set fb_tmp_373, $P5042
    repr_defined $I5009, fb_tmp_373
    unless $I5009 goto if2231_else5272 
    set $P5044, fb_tmp_373["semilist"]
    set $P5046, $P5044
    goto if2231_end5273
  if2231_else5272:
    null $P5045
    set $P5046, $P5045
  if2231_end5273:
    unless_null $P5046, vivi_22325275
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5046, $P5047
  vivi_22325275:
    unless $P5046 goto if2230_else5270 
    .const 'Sub' $P5048 = 'cuid_485_1382959278.72036' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5077, $P5049
    goto if2230_end5271
  if2230_else5270:
.annotate 'line', 2281
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback5294
    nqp_get_sc_object $P5052, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5051, $P5052
    set fb_tmp_377, $P5051
    repr_defined $I5010, fb_tmp_377
    unless $I5010 goto if2242_else5295 
    set $P5053, fb_tmp_377["$W"]
    set $P5055, $P5053
    goto if2242_end5296
  if2242_else5295:
    null $P5054
    set $P5055, $P5054
  if2242_end5296:
    unless_null $P5055, vivi_22435297
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5055, $P5056
  vivi_22435297:
    unless_null $P5055, vivi_22445298
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_22445298:
    set $P5050, $P5055
  fallback5294:
    set fb_tmp_378, $P101
    repr_defined $I5011, fb_tmp_378
    unless $I5011 goto if2245_else5299 
    set $P5058, fb_tmp_378[0]
    set $P5060, $P5058
    goto if2245_end5300
  if2245_else5299:
    null $P5059
    set $P5060, $P5059
  if2245_end5300:
    unless_null $P5060, vivi_22465301
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5060, $P5061
  vivi_22465301:
    set $S5004, $P5060
    $P5062 = $P5050."is_package"($S5004)
    unless $P5062 goto if2241_else5292 
.annotate 'line', 2282
    find_lex $P5063, "$/"
    $P5064 = "&lexical_package_lookup"($P101, $P5063)
    store_lex "$past", $P5064
.annotate 'line', 2283
    find_lex $P5065, "$past"
    find_lex $P5066, "$/"
    unless_null $P5066, fallback5304
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5066, $P5067
  fallback5304:
    set fb_tmp_379, $P5066
    repr_defined $I5012, fb_tmp_379
    unless $I5012 goto if2247_else5302 
    set $P5068, fb_tmp_379["sigil"]
    set $P5070, $P5068
    goto if2247_end5303
  if2247_else5302:
    null $P5069
    set $P5070, $P5069
  if2247_end5303:
    unless_null $P5070, vivi_22485305
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5070, $P5071
  vivi_22485305:
    $P5072 = "&default_for"($P5070)
    $P5073 = $P5065."fallback"($P5072)
    set $P5076, $P5073
    goto if2241_end5293
  if2241_else5292:
    .const 'Sub' $P5074 = 'cuid_486_1382959278.72036' 
    capture_lex $P5074
    $P5075 = $P5074()
    set $P5076, $P5075
  if2241_end5293:
    set $P5077, $P5076
  if2230_end5271:
    set $P5078, $P5077
  if2204_end5221:
    set $P5079, $P5078
  if2197_end5207:
    set $P5080, $P5079
  if2193_end5199:
    .return ($P5080) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1382959278.72036") :anon :lex :outer("cuid_481_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2226
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2227
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2229
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback5214
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  fallback5214:
    set fb_tmp_364, $P5005
    repr_defined $I5001, fb_tmp_364
    unless $I5001 goto if2200_else5212 
    set $P5007, fb_tmp_364["sigil"]
    set $P5009, $P5007
    goto if2200_end5213
  if2200_else5212:
    null $P5008
    set $P5009, $P5008
  if2200_end5213:
    unless_null $P5009, vivi_22015215
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_22015215:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback5218
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  fallback5218:
    set fb_tmp_365, $P5011
    repr_defined $I5002, fb_tmp_365
    unless $I5002 goto if2202_else5216 
    set $P5013, fb_tmp_365["desigilname"]
    set $P5015, $P5013
    goto if2202_end5217
  if2202_else5216:
    null $P5014
    set $P5015, $P5014
  if2202_end5217:
    unless_null $P5015, vivi_22035219
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_22035219:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2230
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2232
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2234
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
.annotate 'line', 2235
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1382959278.72036") :anon :lex :outer("cuid_481_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2239
    .const 'Sub' $P5052 = 'cuid_483_1382959278.72036' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    .local pmc fb_tmp_370 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 2240
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback5228
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5007, $P5008
    set fb_tmp_367, $P5007
    repr_defined $I5002, fb_tmp_367
    unless $I5002 goto if2208_else5229 
    set $P5009, fb_tmp_367["$PKGDECL"]
    set $P5011, $P5009
    goto if2208_end5230
  if2208_else5229:
    null $P5010
    set $P5011, $P5010
  if2208_end5230:
    unless_null $P5011, vivi_22095231
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_22095231:
    unless_null $P5011, vivi_22105232
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_22105232:
    set $P5006, $P5011
  fallback5228:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2207_else5226 
.annotate 'line', 2242
.annotate 'line', 2243
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2244
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback5233
    nqp_get_sc_object $P5018, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5017, $P5018
    set fb_tmp_368, $P5017
    repr_defined $I5003, fb_tmp_368
    unless $I5003 goto if2211_else5234 
    set $P5019, fb_tmp_368["$PACKAGE"]
    set $P5021, $P5019
    goto if2211_end5235
  if2211_else5234:
    null $P5020
    set $P5021, $P5020
  if2211_end5235:
    unless_null $P5021, vivi_22125236
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_22125236:
    unless_null $P5021, vivi_22135237
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_22135237:
    set $P5016, $P5021
  fallback5233:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2207_end5227
  if2207_else5226:
.annotate 'line', 2246
.annotate 'line', 2247
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback5238
    nqp_get_sc_object $P5028, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5027, $P5028
    set fb_tmp_369, $P5027
    repr_defined $I5004, fb_tmp_369
    unless $I5004 goto if2214_else5239 
    set $P5029, fb_tmp_369["$PACKAGE"]
    set $P5031, $P5029
    goto if2214_end5240
  if2214_else5239:
    null $P5030
    set $P5031, $P5030
  if2214_end5240:
    unless_null $P5031, vivi_22155241
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_22155241:
    unless_null $P5031, vivi_22165242
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_22165242:
    set $P5026, $P5031
  fallback5238:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2207_end5227:
.annotate 'line', 2249
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
.annotate 'line', 2251
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2252
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback5245
    nqp_get_sc_object $P5043, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5042, $P5043
    set fb_tmp_370, $P5042
    repr_defined $I5005, fb_tmp_370
    unless $I5005 goto if2218_else5246 
    set $P5044, fb_tmp_370["$IN_DECL"]
    set $P5046, $P5044
    goto if2218_end5247
  if2218_else5246:
    null $P5045
    set $P5046, $P5045
  if2218_end5247:
    unless_null $P5046, vivi_22195248
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5046, $P5047
  vivi_22195248:
    unless_null $P5046, vivi_22205249
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_22205249:
    set $P5041, $P5046
  fallback5245:
    set $P5051, $P5041
    if $P5041 goto unless2217_end5244 
    .const 'Sub' $P5049 = 'cuid_483_1382959278.72036' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2217_end5244:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1382959278.72036") :anon :lex :outer("cuid_484_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2257
    .const 'Sub' $P5036 = 'cuid_482_1382959278.72036' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2259
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback5250
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5007, $P5008
    set fb_tmp_371, $P5007
    repr_defined $I5001, fb_tmp_371
    unless $I5001 goto if2221_else5251 
    set $P5009, fb_tmp_371["$PACKAGE"]
    set $P5011, $P5009
    goto if2221_end5252
  if2221_else5251:
    null $P5010
    set $P5011, $P5010
  if2221_end5252:
    unless_null $P5011, vivi_22225253
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_22225253:
    unless_null $P5011, vivi_22235254
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_22235254:
    set $P5006, $P5011
  fallback5250:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback5255
    nqp_get_sc_object $P5016, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5015, $P5016
    set fb_tmp_372, $P5015
    repr_defined $I5002, fb_tmp_372
    unless $I5002 goto if2224_else5256 
    set $P5017, fb_tmp_372["$PACKAGE"]
    set $P5019, $P5017
    goto if2224_end5257
  if2224_else5256:
    null $P5018
    set $P5019, $P5018
  if2224_end5257:
    unless_null $P5019, vivi_22255258
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_22255258:
    unless_null $P5019, vivi_22265259
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_22265259:
    set $P5014, $P5019
  fallback5255:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers5262
    push_eh $P5024
  for_next5263:
    unless $P5004, for_done5265
    shift $P5025, $P5004
  for_redo5264:
    .const 'Sub' $P5023 = 'cuid_482_1382959278.72036' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next5263
  for_handlers5262:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next5263
    eq $P5024, .CONTROL_LOOP_REDO, for_redo5264
  for_done5265:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2228_else5266 
.annotate 'line', 2265
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2229_end5269 
.annotate 'line', 2266
.annotate 'line', 2267
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2229_end5269:
    set $P5035, $P5029
    goto if2228_end5267
  if2228_else5266:
.annotate 'line', 2270
.annotate 'line', 2271
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2228_end5267:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1382959278.72036") :anon :lex :outer("cuid_483_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2259
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2260
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2227_end5261 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2227_end5261:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1382959278.72036") :anon :lex :outer("cuid_481_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2275
    .lex "$name", $P101 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5280
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback5280:
    set fb_tmp_374, $P5002
    repr_defined $I5002, fb_tmp_374
    unless $I5002 goto if2234_else5278 
    set $P5004, fb_tmp_374["sigil"]
    set $P5006, $P5004
    goto if2234_end5279
  if2234_else5278:
    null $P5005
    set $P5006, $P5005
  if2234_end5279:
    unless_null $P5006, vivi_22355281
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_22355281:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2233_else5276 
    set $S5004, "list"
    goto if2233_end5277
  if2233_else5276:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5286
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  fallback5286:
    set fb_tmp_375, $P5008
    repr_defined $I5004, fb_tmp_375
    unless $I5004 goto if2237_else5284 
    set $P5010, fb_tmp_375["sigil"]
    set $P5012, $P5010
    goto if2237_end5285
  if2237_else5284:
    null $P5011
    set $P5012, $P5011
  if2237_end5285:
    unless_null $P5012, vivi_22385287
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_22385287:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2236_else5282 
    set $S5003, "hash"
    goto if2236_end5283
  if2236_else5282:
    set $S5003, "item"
  if2236_end5283:
    set $S5004, $S5003
  if2233_end5277:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2279
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5290
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  fallback5290:
    set fb_tmp_376, $P5016
    repr_defined $I5005, fb_tmp_376
    unless $I5005 goto if2239_else5288 
    set $P5018, fb_tmp_376["semilist"]
    set $P5020, $P5018
    goto if2239_end5289
  if2239_else5288:
    null $P5019
    set $P5020, $P5019
  if2239_end5289:
    unless_null $P5020, vivi_22405291
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_22405291:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1382959278.72036") :anon :lex :outer("cuid_481_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2285
    .lex "$name", $P101 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2286
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5318
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5006, $P5007
    set fb_tmp_380, $P5006
    repr_defined $I5002, fb_tmp_380
    unless $I5002 goto if2255_else5319 
    set $P5008, fb_tmp_380["$IN_DECL"]
    set $P5010, $P5008
    goto if2255_end5320
  if2255_else5319:
    null $P5009
    set $P5010, $P5009
  if2255_end5320:
    unless_null $P5010, vivi_22565321
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_22565321:
    unless_null $P5010, vivi_22575322
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22575322:
    set $P5005, $P5010
  fallback5318:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2254_end5317 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2254_end5317:
    set $I5006, $I5004
    if $I5004 goto unless2253_end5315 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2253_end5315:
    set $I5008, $I5006
    if $I5006 goto unless2252_end5313 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2252_end5313:
    set $I5011, $I5008
    if $I5008 goto unless2251_end5311 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5325
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  fallback5325:
    set fb_tmp_381, $P5013
    repr_defined $I5010, fb_tmp_381
    unless $I5010 goto if2258_else5323 
    set $P5015, fb_tmp_381["twigil"]
    set $P5017, $P5015
    goto if2258_end5324
  if2258_else5323:
    null $P5016
    set $P5017, $P5016
  if2258_end5324:
    unless_null $P5017, vivi_22595326
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_22595326:
    set $S5006, $P5017
    iseq $I5009, $S5006, "?"
    set $I5011, $I5009
  unless2251_end5311:
    box $P5029, $I5011
    set $P5028, $P5029
    if $I5011 goto unless2250_end5309 
.annotate 'line', 2288
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback5327
    nqp_get_sc_object $P5021, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5020, $P5021
    set fb_tmp_382, $P5020
    repr_defined $I5012, fb_tmp_382
    unless $I5012 goto if2260_else5328 
    set $P5022, fb_tmp_382["$W"]
    set $P5024, $P5022
    goto if2260_end5329
  if2260_else5328:
    null $P5023
    set $P5024, $P5023
  if2260_end5329:
    unless_null $P5024, vivi_22615330
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_22615330:
    unless_null $P5024, vivi_22625331
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_22625331:
    set $P5019, $P5024
  fallback5327:
    $P5027 = $P5019."is_lexical"($P101)
    set $P5028, $P5027
  unless2250_end5309:
    unless $P5028 goto if2249_else5306 
.annotate 'line', 2289
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5031 = $P5030."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5031
    set $P5035, $P5031
    goto if2249_end5307
  if2249_else5306:
.annotate 'line', 2291
.annotate 'line', 2292
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5034 = $P5033."panic"($S5007)
    set $P5035, $P5034
  if2249_end5307:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_288_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2299
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_383 
    unless_null _lex_param_1, fallback5334
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5334:
    set fb_tmp_383, _lex_param_1
    repr_defined $I5001, fb_tmp_383
    unless $I5001 goto if2263_else5332 
    set $P5002, fb_tmp_383["package_def"]
    set $P5004, $P5002
    goto if2263_end5333
  if2263_else5332:
    null $P5003
    set $P5004, $P5003
  if2263_end5333:
    unless_null $P5004, vivi_22645335
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_22645335:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_289_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_384 
    unless_null _lex_param_1, fallback5338
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5338:
    set fb_tmp_384, _lex_param_1
    repr_defined $I5001, fb_tmp_384
    unless $I5001 goto if2265_else5336 
    set $P5002, fb_tmp_384["package_def"]
    set $P5004, $P5002
    goto if2265_end5337
  if2265_else5336:
    null $P5003
    set $P5004, $P5003
  if2265_end5337:
    unless_null $P5004, vivi_22665339
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_22665339:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_290_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_385 
    unless_null _lex_param_1, fallback5342
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5342:
    set fb_tmp_385, _lex_param_1
    repr_defined $I5001, fb_tmp_385
    unless $I5001 goto if2267_else5340 
    set $P5002, fb_tmp_385["package_def"]
    set $P5004, $P5002
    goto if2267_end5341
  if2267_else5340:
    null $P5003
    set $P5004, $P5003
  if2267_end5341:
    unless_null $P5004, vivi_22685343
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_22685343:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_291_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_386 
    unless_null _lex_param_1, fallback5346
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5346:
    set fb_tmp_386, _lex_param_1
    repr_defined $I5001, fb_tmp_386
    unless $I5001 goto if2269_else5344 
    set $P5002, fb_tmp_386["package_def"]
    set $P5004, $P5002
    goto if2269_end5345
  if2269_else5344:
    null $P5003
    set $P5004, $P5003
  if2269_end5345:
    unless_null $P5004, vivi_22705347
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_22705347:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_292_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2303
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_387 
    unless_null _lex_param_1, fallback5350
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5350:
    set fb_tmp_387, _lex_param_1
    repr_defined $I5001, fb_tmp_387
    unless $I5001 goto if2271_else5348 
    set $P5002, fb_tmp_387["package_def"]
    set $P5004, $P5002
    goto if2271_end5349
  if2271_else5348:
    null $P5003
    set $P5004, $P5003
  if2271_end5349:
    unless_null $P5004, vivi_22725351
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_22725351:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_293_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_388 
    unless_null _lex_param_1, fallback5354
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5354:
    set fb_tmp_388, _lex_param_1
    repr_defined $I5001, fb_tmp_388
    unless $I5001 goto if2273_else5352 
    set $P5002, fb_tmp_388["package_def"]
    set $P5004, $P5002
    goto if2273_end5353
  if2273_else5352:
    null $P5003
    set $P5004, $P5003
  if2273_end5353:
    unless_null $P5004, vivi_22745355
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_22745355:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_294_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2306
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 2309
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5356
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_389, $P5004
    repr_defined $I5001, fb_tmp_389
    unless $I5001 goto if2275_else5357 
    set $P5006, fb_tmp_389["$W"]
    set $P5008, $P5006
    goto if2275_end5358
  if2275_else5357:
    null $P5007
    set $P5008, $P5007
  if2275_end5358:
    unless_null $P5008, vivi_22765359
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_22765359:
    unless_null $P5008, vivi_22775360
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22775360:
    set $P5003, $P5008
  fallback5356:
    unless_null _lex_param_1, fallback5365
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5011
  fallback5365:
    set fb_tmp_391, _lex_param_1
    repr_defined $I5003, fb_tmp_391
    unless $I5003 goto if2279_else5363 
    set $P5012, fb_tmp_391["metaclass"]
    set $P5014, $P5012
    goto if2279_end5364
  if2279_else5363:
    null $P5013
    set $P5014, $P5013
  if2279_end5364:
    unless_null $P5014, vivi_22805366
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_22805366:
    set fb_tmp_390, $P5014
    repr_defined $I5002, fb_tmp_390
    unless $I5002 goto if2278_else5361 
    set $P5016, fb_tmp_390["identifier"]
    set $P5018, $P5016
    goto if2278_end5362
  if2278_else5361:
    null $P5017
    set $P5018, $P5017
  if2278_end5362:
    unless_null $P5018, vivi_22815367
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_22815367:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2310
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5368
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set fb_tmp_392, $P5022
    repr_defined $I5004, fb_tmp_392
    unless $I5004 goto if2282_else5369 
    set $P5024, fb_tmp_392["$W"]
    set $P5026, $P5024
    goto if2282_end5370
  if2282_else5369:
    null $P5025
    set $P5026, $P5025
  if2282_end5370:
    unless_null $P5026, vivi_22835371
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_22835371:
    unless_null $P5026, vivi_22845372
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22845372:
    set $P5021, $P5026
  fallback5368:
    unless_null _lex_param_1, fallback5375
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5029
  fallback5375:
    set fb_tmp_393, _lex_param_1
    repr_defined $I5005, fb_tmp_393
    unless $I5005 goto if2285_else5373 
    set $P5030, fb_tmp_393["name"]
    set $P5032, $P5030
    goto if2285_end5374
  if2285_else5373:
    null $P5031
    set $P5032, $P5031
  if2285_end5374:
    unless_null $P5032, vivi_22865376
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5032, $P5033
  vivi_22865376:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5381
    nqp_get_sc_object $P5037, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5036, $P5037
    set fb_tmp_394, $P5036
    repr_defined $I5007, fb_tmp_394
    unless $I5007 goto if2289_else5382 
    set $P5038, fb_tmp_394["$SCOPE"]
    set $P5040, $P5038
    goto if2289_end5383
  if2289_else5382:
    null $P5039
    set $P5040, $P5039
  if2289_end5383:
    unless_null $P5040, vivi_22905384
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5041
  vivi_22905384:
    unless_null $P5040, vivi_22915385
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22915385:
    set $P5035, $P5040
  fallback5381:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2288_end5380 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5386
    nqp_get_sc_object $P5045, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5044, $P5045
    set fb_tmp_395, $P5044
    repr_defined $I5009, fb_tmp_395
    unless $I5009 goto if2292_else5387 
    set $P5046, fb_tmp_395["$SCOPE"]
    set $P5048, $P5046
    goto if2292_end5388
  if2292_else5387:
    null $P5047
    set $P5048, $P5047
  if2292_end5388:
    unless_null $P5048, vivi_22935389
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5048, $P5049
  vivi_22935389:
    unless_null $P5048, vivi_22945390
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22945390:
    set $P5043, $P5048
  fallback5386:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2288_end5380:
    unless $I5010 goto if2287_else5377 
.annotate 'line', 2313
.annotate 'line', 2314
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5391
    nqp_get_sc_object $P5053, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5052, $P5053
    set fb_tmp_396, $P5052
    repr_defined $I5011, fb_tmp_396
    unless $I5011 goto if2295_else5392 
    set $P5054, fb_tmp_396["$W"]
    set $P5056, $P5054
    goto if2295_end5393
  if2295_else5392:
    null $P5055
    set $P5056, $P5055
  if2295_end5393:
    unless_null $P5056, vivi_22965394
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5056, $P5057
  vivi_22965394:
    unless_null $P5056, vivi_22975395
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22975395:
    set $P5051, $P5056
  fallback5391:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5396
    nqp_get_sc_object $P5061, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5060, $P5061
    set fb_tmp_397, $P5060
    repr_defined $I5012, fb_tmp_397
    unless $I5012 goto if2298_else5397 
    set $P5062, fb_tmp_397["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2298_end5398
  if2298_else5397:
    null $P5063
    set $P5064, $P5063
  if2298_end5398:
    unless_null $P5064, vivi_22995399
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5064, $P5065
  vivi_22995399:
    unless_null $P5064, vivi_23005400
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_23005400:
    set $P5059, $P5064
  fallback5396:
    unless_null _lex_param_1, fallback5405
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5067
  fallback5405:
    set fb_tmp_399, _lex_param_1
    repr_defined $I5014, fb_tmp_399
    unless $I5014 goto if2302_else5403 
    set $P5068, fb_tmp_399["name"]
    set $P5070, $P5068
    goto if2302_end5404
  if2302_else5403:
    null $P5069
    set $P5070, $P5069
  if2302_end5404:
    unless_null $P5070, vivi_23035406
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5070, $P5071
  vivi_23035406:
    set fb_tmp_398, $P5070
    repr_defined $I5013, fb_tmp_398
    unless $I5013 goto if2301_else5401 
    set $P5072, fb_tmp_398["identifier"]
    set $P5074, $P5072
    goto if2301_end5402
  if2301_else5401:
    null $P5073
    set $P5074, $P5073
  if2301_end5402:
    unless_null $P5074, vivi_23045407
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5074, $P5075
  vivi_23045407:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5414
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5076
  fallback5414:
    set fb_tmp_401, _lex_param_1
    repr_defined $I5017, fb_tmp_401
    unless $I5017 goto if2307_else5412 
    set $P5077, fb_tmp_401["name"]
    set $P5079, $P5077
    goto if2307_end5413
  if2307_else5412:
    null $P5078
    set $P5079, $P5078
  if2307_end5413:
    unless_null $P5079, vivi_23085415
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5079, $P5080
  vivi_23085415:
    set fb_tmp_400, $P5079
    repr_defined $I5016, fb_tmp_400
    unless $I5016 goto if2306_else5410 
    set $P5081, fb_tmp_400["identifier"]
    set $P5083, $P5081
    goto if2306_end5411
  if2306_else5410:
    null $P5082
    set $P5083, $P5082
  if2306_end5411:
    unless_null $P5083, vivi_23095416
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5083, $P5084
  vivi_23095416:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2305_end5409 
.annotate 'line', 2315
.annotate 'line', 2316
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5417
    nqp_get_sc_object $P5087, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5086, $P5087
    set fb_tmp_402, $P5086
    repr_defined $I5018, fb_tmp_402
    unless $I5018 goto if2310_else5418 
    set $P5088, fb_tmp_402["$W"]
    set $P5090, $P5088
    goto if2310_end5419
  if2310_else5418:
    null $P5089
    set $P5090, $P5089
  if2310_end5419:
    unless_null $P5090, vivi_23115420
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5090, $P5091
  vivi_23115420:
    unless_null $P5090, vivi_23125421
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_23125421:
    set $P5085, $P5090
  fallback5417:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5422
    nqp_get_sc_object $P5095, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5094, $P5095
    set fb_tmp_403, $P5094
    repr_defined $I5019, fb_tmp_403
    unless $I5019 goto if2313_else5423 
    set $P5096, fb_tmp_403["$W"]
    set $P5098, $P5096
    goto if2313_end5424
  if2313_else5423:
    null $P5097
    set $P5098, $P5097
  if2313_end5424:
    unless_null $P5098, vivi_23145425
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5098, $P5099
  vivi_23145425:
    unless_null $P5098, vivi_23155426
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_23155426:
    set $P5093, $P5098
  fallback5422:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5433
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5102
  fallback5433:
    set fb_tmp_406, _lex_param_1
    repr_defined $I5022, fb_tmp_406
    unless $I5022 goto if2318_else5431 
    set $P5103, fb_tmp_406["name"]
    set $P5105, $P5103
    goto if2318_end5432
  if2318_else5431:
    null $P5104
    set $P5105, $P5104
  if2318_end5432:
    unless_null $P5105, vivi_23195434
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5105, $P5106
  vivi_23195434:
    set fb_tmp_405, $P5105
    repr_defined $I5021, fb_tmp_405
    unless $I5021 goto if2317_else5429 
    set $P5107, fb_tmp_405["identifier"]
    set $P5109, $P5107
    goto if2317_end5430
  if2317_else5429:
    null $P5108
    set $P5109, $P5108
  if2317_end5430:
    unless_null $P5109, vivi_23205435
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5109, $P5110
  vivi_23205435:
    set fb_tmp_404, $P5109
    repr_defined $I5020, fb_tmp_404
    unless $I5020 goto if2316_else5427 
    set $P5111, fb_tmp_404[0]
    set $P5113, $P5111
    goto if2316_end5428
  if2316_else5427:
    null $P5112
    set $P5113, $P5112
  if2316_end5428:
    unless_null $P5113, vivi_23215436
    nqp_get_sc_object $P5114, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5113, $P5114
  vivi_23215436:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2305_end5409:
    goto if2287_end5378
  if2287_else5377:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5439
    nqp_get_sc_object $P5120, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5119, $P5120
    set fb_tmp_407, $P5119
    repr_defined $I5024, fb_tmp_407
    unless $I5024 goto if2323_else5440 
    set $P5121, fb_tmp_407["$SCOPE"]
    set $P5123, $P5121
    goto if2323_end5441
  if2323_else5440:
    null $P5122
    set $P5123, $P5122
  if2323_end5441:
    unless_null $P5123, vivi_23245442
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5123, $P5124
  vivi_23245442:
    unless_null $P5123, vivi_23255443
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_23255443:
    set $P5118, $P5123
  fallback5439:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2322_else5437 
.annotate 'line', 2319
    unless_null _lex_param_1, fallback5450
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5126
  fallback5450:
    set fb_tmp_409, _lex_param_1
    repr_defined $I5027, fb_tmp_409
    unless $I5027 goto if2328_else5448 
    set $P5127, fb_tmp_409["name"]
    set $P5129, $P5127
    goto if2328_end5449
  if2328_else5448:
    null $P5128
    set $P5129, $P5128
  if2328_end5449:
    unless_null $P5129, vivi_23295451
    nqp_get_sc_object $P5130, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5129, $P5130
  vivi_23295451:
    set fb_tmp_408, $P5129
    repr_defined $I5026, fb_tmp_408
    unless $I5026 goto if2327_else5446 
    set $P5131, fb_tmp_408["identifier"]
    set $P5133, $P5131
    goto if2327_end5447
  if2327_else5446:
    null $P5132
    set $P5133, $P5132
  if2327_end5447:
    unless_null $P5133, vivi_23305452
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5133, $P5134
  vivi_23305452:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2326_end5445 
.annotate 'line', 2320
.annotate 'line', 2321
    unless_null _lex_param_1, fallback5455
    nqp_get_sc_object $P5135, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5135
  fallback5455:
    set fb_tmp_410, _lex_param_1
    repr_defined $I5028, fb_tmp_410
    unless $I5028 goto if2331_else5453 
    set $P5136, fb_tmp_410["name"]
    set $P5138, $P5136
    goto if2331_end5454
  if2331_else5453:
    null $P5137
    set $P5138, $P5137
  if2331_end5454:
    unless_null $P5138, vivi_23325456
    nqp_get_sc_object $P5139, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5138, $P5139
  vivi_23325456:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2326_end5445:
.annotate 'line', 2323
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5457
    nqp_get_sc_object $P5144, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5143, $P5144
    set fb_tmp_411, $P5143
    repr_defined $I5029, fb_tmp_411
    unless $I5029 goto if2333_else5458 
    set $P5145, fb_tmp_411["$W"]
    set $P5147, $P5145
    goto if2333_end5459
  if2333_else5458:
    null $P5146
    set $P5147, $P5146
  if2333_end5459:
    unless_null $P5147, vivi_23345460
    nqp_get_sc_object $P5148, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5147, $P5148
  vivi_23345460:
    unless_null $P5147, vivi_23355461
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23355461:
    set $P5142, $P5147
  fallback5457:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5462
    nqp_get_sc_object $P5152, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5151, $P5152
    set fb_tmp_412, $P5151
    repr_defined $I5030, fb_tmp_412
    unless $I5030 goto if2336_else5463 
    set $P5153, fb_tmp_412["$W"]
    set $P5155, $P5153
    goto if2336_end5464
  if2336_else5463:
    null $P5154
    set $P5155, $P5154
  if2336_end5464:
    unless_null $P5155, vivi_23375465
    nqp_get_sc_object $P5156, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5155, $P5156
  vivi_23375465:
    unless_null $P5155, vivi_23385466
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23385466:
    set $P5150, $P5155
  fallback5462:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5473
    nqp_get_sc_object $P5159, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5159
  fallback5473:
    set fb_tmp_415, _lex_param_1
    repr_defined $I5033, fb_tmp_415
    unless $I5033 goto if2341_else5471 
    set $P5160, fb_tmp_415["name"]
    set $P5162, $P5160
    goto if2341_end5472
  if2341_else5471:
    null $P5161
    set $P5162, $P5161
  if2341_end5472:
    unless_null $P5162, vivi_23425474
    nqp_get_sc_object $P5163, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5162, $P5163
  vivi_23425474:
    set fb_tmp_414, $P5162
    repr_defined $I5032, fb_tmp_414
    unless $I5032 goto if2340_else5469 
    set $P5164, fb_tmp_414["identifier"]
    set $P5166, $P5164
    goto if2340_end5470
  if2340_else5469:
    null $P5165
    set $P5166, $P5165
  if2340_end5470:
    unless_null $P5166, vivi_23435475
    nqp_get_sc_object $P5167, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5166, $P5167
  vivi_23435475:
    set fb_tmp_413, $P5166
    repr_defined $I5031, fb_tmp_413
    unless $I5031 goto if2339_else5467 
    set $P5168, fb_tmp_413[0]
    set $P5170, $P5168
    goto if2339_end5468
  if2339_else5467:
    null $P5169
    set $P5170, $P5169
  if2339_end5468:
    unless_null $P5170, vivi_23445476
    nqp_get_sc_object $P5171, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5170, $P5171
  vivi_23445476:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2322_end5438
  if2322_else5437:
.annotate 'line', 2325
.annotate 'line', 2326
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5477
    nqp_get_sc_object $P5176, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5175, $P5176
    set fb_tmp_416, $P5175
    repr_defined $I5034, fb_tmp_416
    unless $I5034 goto if2345_else5478 
    set $P5177, fb_tmp_416["$SCOPE"]
    set $P5179, $P5177
    goto if2345_end5479
  if2345_else5478:
    null $P5178
    set $P5179, $P5178
  if2345_end5479:
    unless_null $P5179, vivi_23465480
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5179, $P5180
  vivi_23465480:
    unless_null $P5179, vivi_23475481
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23475481:
    set $P5174, $P5179
  fallback5477:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2322_end5438:
  if2287_end5378:
.annotate 'line', 2329
    nqp_get_sc_object $P5184, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_295_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2332
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5165 = 'cuid_488_1382959278.72036' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_489_1382959278.72036' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_490_1382959278.72036' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_491_1382959278.72036' 
    capture_lex $P5165 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_431 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_448 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    .local pmc fb_tmp_451 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    unless_null _lex_param_1, fallback5486
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5486:
    set fb_tmp_418, _lex_param_1
    repr_defined $I5002, fb_tmp_418
    unless $I5002 goto if2349_else5484 
    set $P5007, fb_tmp_418["name"]
    set $P5009, $P5007
    goto if2349_end5485
  if2349_else5484:
    null $P5008
    set $P5009, $P5008
  if2349_end5485:
    unless_null $P5009, vivi_23505487
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_23505487:
    set fb_tmp_417, $P5009
    repr_defined $I5001, fb_tmp_417
    unless $I5001 goto if2348_else5482 
    set $P5011, fb_tmp_417["identifier"]
    set $P5013, $P5011
    goto if2348_end5483
  if2348_else5482:
    null $P5012
    set $P5013, $P5012
  if2348_end5483:
    unless_null $P5013, vivi_23515488
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_23515488:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2335
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5491
    nqp_get_sc_object $P5019, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_45, $P5018
    set fb_tmp_420, pkg_viv_tmp_45
    repr_defined $I5004, fb_tmp_420
    unless $I5004 goto if2353_else5492 
    set $P5020, fb_tmp_420["%HOW"]
    set $P5022, $P5020
    goto if2353_end5493
  if2353_else5492:
    null $P5021
    set $P5022, $P5021
  if2353_end5493:
    unless_null $P5022, vivi_23545494
    new $P5023, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23545494:
    unless_null $P5022, vivi_23555495
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23555495:
    set $P5017, $P5022
  fallback5491:
    set fb_tmp_419, $P5017
    repr_defined $I5003, fb_tmp_419
    unless $I5003 goto if2352_else5489 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5496
    nqp_get_sc_object $P5028, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5027, $P5028
    set fb_tmp_421, $P5027
    repr_defined $I5005, fb_tmp_421
    unless $I5005 goto if2356_else5497 
    set $P5029, fb_tmp_421["$PKGDECL"]
    set $P5031, $P5029
    goto if2356_end5498
  if2356_else5497:
    null $P5030
    set $P5031, $P5030
  if2356_end5498:
    unless_null $P5031, vivi_23575499
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_23575499:
    unless_null $P5031, vivi_23585500
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23585500:
    set $P5026, $P5031
  fallback5496:
    set $S5002, $P5026
    set $P5025, fb_tmp_419[$S5002]
    set $P5035, $P5025
    goto if2352_end5490
  if2352_else5489:
    null $P5034
    set $P5035, $P5034
  if2352_end5490:
    unless_null $P5035, vivi_23595501
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5035, $P5036
  vivi_23595501:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5506
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5037
  fallback5506:
    set fb_tmp_422, _lex_param_1
    repr_defined $I5006, fb_tmp_422
    unless $I5006 goto if2361_else5504 
    set $P5038, fb_tmp_422["blockoid"]
    set $P5040, $P5038
    goto if2361_end5505
  if2361_else5504:
    null $P5039
    set $P5040, $P5039
  if2361_end5505:
    unless_null $P5040, vivi_23625507
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5041
  vivi_23625507:
    unless $P5040 goto if2360_else5502 
.annotate 'line', 2340
.annotate 'line', 2341
    unless_null _lex_param_1, fallback5510
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5042
  fallback5510:
    set fb_tmp_423, _lex_param_1
    repr_defined $I5007, fb_tmp_423
    unless $I5007 goto if2363_else5508 
    set $P5043, fb_tmp_423["blockoid"]
    set $P5045, $P5043
    goto if2363_end5509
  if2363_else5508:
    null $P5044
    set $P5045, $P5044
  if2363_end5509:
    unless_null $P5045, vivi_23645511
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  vivi_23645511:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2360_end5503
  if2360_else5502:
.annotate 'line', 2343
.annotate 'line', 2344
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5512
    nqp_get_sc_object $P5050, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5049, $P5050
    set fb_tmp_424, $P5049
    repr_defined $I5008, fb_tmp_424
    unless $I5008 goto if2365_else5513 
    set $P5051, fb_tmp_424["$W"]
    set $P5053, $P5051
    goto if2365_end5514
  if2365_else5513:
    null $P5052
    set $P5053, $P5052
  if2365_end5514:
    unless_null $P5053, vivi_23665515
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5053, $P5054
  vivi_23665515:
    unless_null $P5053, vivi_23675516
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23675516:
    set $P5048, $P5053
  fallback5512:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2345
    unless_null _lex_param_1, fallback5519
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5057
  fallback5519:
    set fb_tmp_425, _lex_param_1
    repr_defined $I5009, fb_tmp_425
    unless $I5009 goto if2368_else5517 
    set $P5058, fb_tmp_425["statementlist"]
    set $P5060, $P5058
    goto if2368_end5518
  if2368_else5517:
    null $P5059
    set $P5060, $P5059
  if2368_end5518:
    unless_null $P5060, vivi_23695520
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5060, $P5061
  vivi_23695520:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2360_end5503:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2371_end5524 
.annotate 'line', 2352
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2371_end5524:
    unless $P5065 goto if2370_else5521 
    .const 'Sub' $P5067 = 'cuid_488_1382959278.72036' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2370_end5522
  if2370_else5521:
.annotate 'line', 2367
.annotate 'line', 2368
    $P5069 = $P104."blocktype"("immediate")
  if2370_end5522:
    unless_null _lex_param_1, fallback5555
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5070
  fallback5555:
    set fb_tmp_431, _lex_param_1
    repr_defined $I5011, fb_tmp_431
    unless $I5011 goto if2386_else5553 
    set $P5071, fb_tmp_431["parent"]
    set $P5073, $P5071
    goto if2386_end5554
  if2386_else5553:
    null $P5072
    set $P5073, $P5072
  if2386_end5554:
    unless_null $P5073, vivi_23875556
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5073, $P5074
  vivi_23875556:
    unless $P5073 goto if2385_else5551 
    .const 'Sub' $P5075 = 'cuid_489_1382959278.72036' 
    capture_lex $P5075
    $P5076 = $P5075()
    goto if2385_end5552
  if2385_else5551:
    can $I5012, $P103, "set_default_parent"
    box $P5080, $I5012
    set $P5079, $P5080
    unless $I5012 goto if2406_end5588 
    .const 'Sub' $P5077 = 'cuid_490_1382959278.72036' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
  if2406_end5588:
  if2385_end5552:
    unless_null _lex_param_1, fallback5615
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5081
  fallback5615:
    set fb_tmp_442, _lex_param_1
    repr_defined $I5013, fb_tmp_442
    unless $I5013 goto if2421_else5613 
    set $P5082, fb_tmp_442["role"]
    set $P5084, $P5082
    goto if2421_end5614
  if2421_else5613:
    null $P5083
    set $P5084, $P5083
  if2421_end5614:
    unless_null $P5084, vivi_24225616
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5084, $P5085
  vivi_24225616:
    unless $P5084 goto if2420_end5612 
.annotate 'line', 2393
    unless_null _lex_param_1, fallback5619
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5089
  fallback5619:
    set fb_tmp_443, _lex_param_1
    repr_defined $I5014, fb_tmp_443
    unless $I5014 goto if2423_else5617 
    set $P5090, fb_tmp_443["role"]
    set $P5092, $P5090
    goto if2423_end5618
  if2423_else5617:
    null $P5091
    set $P5092, $P5091
  if2423_end5618:
    unless_null $P5092, vivi_24245620
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5092, $P5093
  vivi_24245620:
    set $P5086, $P5092
    iter $P5088, $P5092
  for_next5643:
    unless $P5088, for_done5645
    shift $P5095, $P5088
  for_redo5644:
    .const 'Sub' $P5094 = 'cuid_491_1382959278.72036' 
    capture_lex $P5094
    $P5086 = $P5094($P5095)
    goto for_next5643
  for_done5645:
  if2420_end5612:
.annotate 'line', 2411
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback5646
    nqp_get_sc_object $P5098, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5097, $P5098
    set fb_tmp_448, $P5097
    repr_defined $I5015, fb_tmp_448
    unless $I5015 goto if2439_else5647 
    set $P5099, fb_tmp_448["$W"]
    set $P5101, $P5099
    goto if2439_end5648
  if2439_else5647:
    null $P5100
    set $P5101, $P5100
  if2439_end5648:
    unless_null $P5101, vivi_24405649
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5101, $P5102
  vivi_24405649:
    unless_null $P5101, vivi_24415650
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_24415650:
    set $P5096, $P5101
  fallback5646:
    find_dynamic_lex $P5104, "$*PACKAGE"
    unless_null $P5104, fallback5651
    nqp_get_sc_object $P5106, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5105, $P5106
    set fb_tmp_449, $P5105
    repr_defined $I5016, fb_tmp_449
    unless $I5016 goto if2442_else5652 
    set $P5107, fb_tmp_449["$PACKAGE"]
    set $P5109, $P5107
    goto if2442_end5653
  if2442_else5652:
    null $P5108
    set $P5109, $P5108
  if2442_end5653:
    unless_null $P5109, vivi_24435654
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5109, $P5110
  vivi_24435654:
    unless_null $P5109, vivi_24445655
    die "Contextual $*PACKAGE not found"
    box $P5111, "Contextual $*PACKAGE not found"
    set $P5109, $P5111
  vivi_24445655:
    set $P5104, $P5109
  fallback5651:
    $P5096."pkg_compose"($P5104)
    find_dynamic_lex $P5112, "$*PKGDECL"
    unless_null $P5112, fallback5660
    nqp_get_sc_object $P5114, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5113, $P5114
    set fb_tmp_450, $P5113
    repr_defined $I5018, fb_tmp_450
    unless $I5018 goto if2447_else5661 
    set $P5115, fb_tmp_450["$PKGDECL"]
    set $P5117, $P5115
    goto if2447_end5662
  if2447_else5661:
    null $P5116
    set $P5117, $P5116
  if2447_end5662:
    unless_null $P5117, vivi_24485663
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5117, $P5118
  vivi_24485663:
    unless_null $P5117, vivi_24495664
    die "Contextual $*PKGDECL not found"
    box $P5119, "Contextual $*PKGDECL not found"
    set $P5117, $P5119
  vivi_24495664:
    set $P5112, $P5117
  fallback5660:
    set $S5003, $P5112
    iseq $I5017, $S5003, "grammar"
    set $I5021, $I5017
    unless $I5017 goto if2446_end5659 
    find_dynamic_lex $P5120, "$*PACKAGE"
    unless_null $P5120, fallback5665
    nqp_get_sc_object $P5122, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5121, $P5122
    set fb_tmp_451, $P5121
    repr_defined $I5020, fb_tmp_451
    unless $I5020 goto if2450_else5666 
    set $P5123, fb_tmp_451["$PACKAGE"]
    set $P5125, $P5123
    goto if2450_end5667
  if2450_else5666:
    null $P5124
    set $P5125, $P5124
  if2450_end5667:
    unless_null $P5125, vivi_24515668
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5125, $P5126
  vivi_24515668:
    unless_null $P5125, vivi_24525669
    die "Contextual $*PACKAGE not found"
    box $P5127, "Contextual $*PACKAGE not found"
    set $P5125, $P5127
  vivi_24525669:
    set $P5120, $P5125
  fallback5665:
    can $I5019, $P5120, "!precompute_nfas"
    set $I5021, $I5019
  if2446_end5659:
    unless $I5021 goto if2445_end5657 
.annotate 'line', 2414
.annotate 'line', 2415
    find_dynamic_lex $P5128, "$*PACKAGE"
    unless_null $P5128, fallback5670
    nqp_get_sc_object $P5130, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5129, $P5130
    set fb_tmp_452, $P5129
    repr_defined $I5022, fb_tmp_452
    unless $I5022 goto if2453_else5671 
    set $P5131, fb_tmp_452["$PACKAGE"]
    set $P5133, $P5131
    goto if2453_end5672
  if2453_else5671:
    null $P5132
    set $P5133, $P5132
  if2453_end5672:
    unless_null $P5133, vivi_24545673
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5133, $P5134
  vivi_24545673:
    unless_null $P5133, vivi_24555674
    die "Contextual $*PACKAGE not found"
    box $P5135, "Contextual $*PACKAGE not found"
    set $P5133, $P5135
  vivi_24555674:
    set $P5128, $P5133
  fallback5670:
    $P5136 = $P5128."!precompute_nfas"()
  if2445_end5657:
    unless_null _lex_param_1, fallback5679
    nqp_get_sc_object $P5137, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5137
  fallback5679:
    set fb_tmp_453, _lex_param_1
    repr_defined $I5023, fb_tmp_453
    unless $I5023 goto if2457_else5677 
    set $P5138, fb_tmp_453["export"]
    set $P5140, $P5138
    goto if2457_end5678
  if2457_else5677:
    null $P5139
    set $P5140, $P5139
  if2457_end5678:
    unless_null $P5140, vivi_24585680
    nqp_get_sc_object $P5141, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5140, $P5141
  vivi_24585680:
    unless $P5140 goto if2456_end5676 
.annotate 'line', 2419
    find_dynamic_lex $P5144, "$*EXPORT"
    unless_null $P5144, fallback5683
    nqp_get_sc_object $P5146, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5145, $P5146
    set fb_tmp_455, $P5145
    repr_defined $I5025, fb_tmp_455
    unless $I5025 goto if2460_else5684 
    set $P5147, fb_tmp_455["$EXPORT"]
    set $P5149, $P5147
    goto if2460_end5685
  if2460_else5684:
    null $P5148
    set $P5149, $P5148
  if2460_end5685:
    unless_null $P5149, vivi_24615686
    nqp_get_sc_object $P5150, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5149, $P5150
  vivi_24615686:
    unless_null $P5149, vivi_24625687
    die "Contextual $*EXPORT not found"
    box $P5151, "Contextual $*EXPORT not found"
    set $P5149, $P5151
  vivi_24625687:
    set $P5144, $P5149
  fallback5683:
    get_who $P5143, $P5144
    set fb_tmp_454, $P5143
    repr_defined $I5024, fb_tmp_454
    unless $I5024 goto if2459_else5681 
    set $P5152, fb_tmp_454["DEFAULT"]
    set $P5154, $P5152
    goto if2459_end5682
  if2459_else5681:
    null $P5153
    set $P5154, $P5153
  if2459_end5682:
    unless_null $P5154, vivi_24635688
    nqp_get_sc_object $P5155, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5154, $P5155
  vivi_24635688:
    get_who $P5142, $P5154
    set $S5004, $P102
    find_dynamic_lex $P5156, "$*PACKAGE"
    unless_null $P5156, fallback5689
    nqp_get_sc_object $P5158, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5157, $P5158
    set fb_tmp_456, $P5157
    repr_defined $I5026, fb_tmp_456
    unless $I5026 goto if2464_else5690 
    set $P5159, fb_tmp_456["$PACKAGE"]
    set $P5161, $P5159
    goto if2464_end5691
  if2464_else5690:
    null $P5160
    set $P5161, $P5160
  if2464_end5691:
    unless_null $P5161, vivi_24655692
    nqp_get_sc_object $P5162, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5161, $P5162
  vivi_24655692:
    unless_null $P5161, vivi_24665693
    die "Contextual $*PACKAGE not found"
    box $P5163, "Contextual $*PACKAGE not found"
    set $P5161, $P5163
  vivi_24665693:
    set $P5156, $P5161
  fallback5689:
    set $P5142[$S5004], $P5156
  if2456_end5676:
.annotate 'line', 2423
    $P5164 = _lex_param_1."!make"($P104)
    .return ($P5164) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1382959278.72036") :anon :lex :outer("cuid_295_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2352
    .const 'Sub' $P5051 = 'cuid_487_1382959278.72036' 
    capture_lex $P5051 
    .lex "$params", $P101 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2353
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration_static")
.annotate 'line', 2354
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 2355
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5529
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  fallback5529:
    set fb_tmp_426, $P5007
    repr_defined $I5001, fb_tmp_426
    unless $I5001 goto if2373_else5527 
    set $P5009, fb_tmp_426["role_params"]
    set $P5011, $P5009
    goto if2373_end5528
  if2373_else5527:
    null $P5010
    set $P5011, $P5010
  if2373_end5528:
    unless_null $P5011, vivi_23745530
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_23745530:
    unless $P5011 goto if2372_end5526 
.annotate 'line', 2357
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5535
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  fallback5535:
    set fb_tmp_428, $P5016
    repr_defined $I5003, fb_tmp_428
    unless $I5003 goto if2376_else5533 
    set $P5018, fb_tmp_428["role_params"]
    set $P5020, $P5018
    goto if2376_end5534
  if2376_else5533:
    null $P5019
    set $P5020, $P5019
  if2376_end5534:
    unless_null $P5020, vivi_23775536
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_23775536:
    set fb_tmp_427, $P5020
    repr_defined $I5002, fb_tmp_427
    unless $I5002 goto if2375_else5531 
    set $P5022, fb_tmp_427["variable"]
    set $P5024, $P5022
    goto if2375_end5532
  if2375_else5531:
    null $P5023
    set $P5024, $P5023
  if2375_end5532:
    unless_null $P5024, vivi_23785537
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_23785537:
    set $P5013, $P5024
    iter $P5015, $P5024
  for_next5538:
    unless $P5015, for_done5540
    shift $P5027, $P5015
  for_redo5539:
    .const 'Sub' $P5026 = 'cuid_487_1382959278.72036' 
    capture_lex $P5026
    $P5013 = $P5026($P5027)
    goto for_next5538
  for_done5540:
  if2372_end5526:
.annotate 'line', 2362
    find_lex $P5028, "$past"
    $P5028."unshift"($P101)
.annotate 'line', 2363
    find_lex $P5029, "$past"
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5031 = $P5030."new"("curlexpad" :named("op"))
    $P5029."push"($P5031)
.annotate 'line', 2364
    find_lex $P5032, "$past"
    $P5032."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2365
    find_dynamic_lex $P5033, "$*W"
    unless_null $P5033, fallback5541
    nqp_get_sc_object $P5035, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5034, $P5035
    set fb_tmp_429, $P5034
    repr_defined $I5004, fb_tmp_429
    unless $I5004 goto if2379_else5542 
    set $P5036, fb_tmp_429["$W"]
    set $P5038, $P5036
    goto if2379_end5543
  if2379_else5542:
    null $P5037
    set $P5038, $P5037
  if2379_end5543:
    unless_null $P5038, vivi_23805544
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5038, $P5039
  vivi_23805544:
    unless_null $P5038, vivi_23815545
    die "Contextual $*W not found"
    box $P5040, "Contextual $*W not found"
    set $P5038, $P5040
  vivi_23815545:
    set $P5033, $P5038
  fallback5541:
    find_dynamic_lex $P5041, "$*PACKAGE"
    unless_null $P5041, fallback5546
    nqp_get_sc_object $P5043, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5042, $P5043
    set fb_tmp_430, $P5042
    repr_defined $I5005, fb_tmp_430
    unless $I5005 goto if2382_else5547 
    set $P5044, fb_tmp_430["$PACKAGE"]
    set $P5046, $P5044
    goto if2382_end5548
  if2382_else5547:
    null $P5045
    set $P5046, $P5045
  if2382_end5548:
    unless_null $P5046, vivi_23835549
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5046, $P5047
  vivi_23835549:
    unless_null $P5046, vivi_23845550
    die "Contextual $*PACKAGE not found"
    box $P5048, "Contextual $*PACKAGE not found"
    set $P5046, $P5048
  vivi_23845550:
    set $P5041, $P5046
  fallback5546:
    find_lex $P5049, "$past"
    $P5050 = $P5033."pkg_set_body_block"($P5041, $P5049)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1382959278.72036") :anon :lex :outer("cuid_488_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2358
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2359
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1382959278.72036") :anon :lex :outer("cuid_295_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2372
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_23965570
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2375
.annotate 'line', 2376
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5557
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_432, $P5004
    repr_defined $I5001, fb_tmp_432
    unless $I5001 goto if2388_else5558 
    set $P5006, fb_tmp_432["$W"]
    set $P5008, $P5006
    goto if2388_end5559
  if2388_else5558:
    null $P5007
    set $P5008, $P5007
  if2388_end5559:
    unless_null $P5008, vivi_23895560
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_23895560:
    unless_null $P5008, vivi_23905561
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23905561:
    set $P5003, $P5008
  fallback5557:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5566
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  fallback5566:
    set fb_tmp_434, $P5012
    repr_defined $I5003, fb_tmp_434
    unless $I5003 goto if2392_else5564 
    set $P5014, fb_tmp_434["parent"]
    set $P5016, $P5014
    goto if2392_end5565
  if2392_else5564:
    null $P5015
    set $P5016, $P5015
  if2392_end5565:
    unless_null $P5016, vivi_23935567
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_23935567:
    set fb_tmp_433, $P5016
    repr_defined $I5002, fb_tmp_433
    unless $I5002 goto if2391_else5562 
    set $P5018, fb_tmp_433["identifier"]
    set $P5020, $P5018
    goto if2391_end5563
  if2391_else5562:
    null $P5019
    set $P5020, $P5019
  if2391_end5563:
    unless_null $P5020, vivi_23945568
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_23945568:
    repr_clone $P5011, $P5020
    $P5022 = $P5003."find_sym"($P5011)
    set $P101, $P5022
    box $P5023, 1
    set $P102, $P5023
    set $P5025, $P102
    pop_eh 
    goto skip_handler_23955569
  catch_handler_23965570:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_23955569
  skip_handler_23955569:
    unless $P102 goto if2397_else5571 
.annotate 'line', 2379
.annotate 'line', 2380
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback5573
    nqp_get_sc_object $P5028, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5027, $P5028
    set fb_tmp_435, $P5027
    repr_defined $I5004, fb_tmp_435
    unless $I5004 goto if2398_else5574 
    set $P5029, fb_tmp_435["$W"]
    set $P5031, $P5029
    goto if2398_end5575
  if2398_else5574:
    null $P5030
    set $P5031, $P5030
  if2398_end5575:
    unless_null $P5031, vivi_23995576
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_23995576:
    unless_null $P5031, vivi_24005577
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_24005577:
    set $P5026, $P5031
  fallback5573:
    find_dynamic_lex $P5034, "$*PACKAGE"
    unless_null $P5034, fallback5578
    nqp_get_sc_object $P5036, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5035, $P5036
    set fb_tmp_436, $P5035
    repr_defined $I5005, fb_tmp_436
    unless $I5005 goto if2401_else5579 
    set $P5037, fb_tmp_436["$PACKAGE"]
    set $P5039, $P5037
    goto if2401_end5580
  if2401_else5579:
    null $P5038
    set $P5039, $P5038
  if2401_end5580:
    unless_null $P5039, vivi_24025581
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5039, $P5040
  vivi_24025581:
    unless_null $P5039, vivi_24035582
    die "Contextual $*PACKAGE not found"
    box $P5041, "Contextual $*PACKAGE not found"
    set $P5039, $P5041
  vivi_24035582:
    set $P5034, $P5039
  fallback5578:
    $P5042 = $P5026."pkg_add_parent_or_role"($P5034, "add_parent", $P101)
    set $P5052, $P5042
    goto if2397_end5572
  if2397_else5571:
.annotate 'line', 2382
.annotate 'line', 2383
    find_lex $P5043, "$/"
    $P5044 = $P5043."CURSOR"()
    find_lex $P5045, "$/"
    unless_null $P5045, fallback5585
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  fallback5585:
    set fb_tmp_437, $P5045
    repr_defined $I5006, fb_tmp_437
    unless $I5006 goto if2404_else5583 
    set $P5047, fb_tmp_437["parent"]
    set $P5049, $P5047
    goto if2404_end5584
  if2404_else5583:
    null $P5048
    set $P5049, $P5048
  if2404_end5584:
    unless_null $P5049, vivi_24055586
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_24055586:
    set $S5003, $P5049
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5051 = $P5044."panic"($S5001)
    set $P5052, $P5051
  if2397_end5572:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1382959278.72036") :anon :lex :outer("cuid_295_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2386
    .lex "$default", $P101 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5591
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_438, $P5003
    repr_defined $I5002, fb_tmp_438
    unless $I5002 goto if2408_else5592 
    set $P5005, fb_tmp_438["$PKGDECL"]
    set $P5007, $P5005
    goto if2408_end5593
  if2408_else5592:
    null $P5006
    set $P5007, $P5006
  if2408_end5593:
    unless_null $P5007, vivi_24095594
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_24095594:
    unless_null $P5007, vivi_24105595
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_24105595:
    set $P5002, $P5007
  fallback5591:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2407_else5589 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2407_end5590
  if2407_else5589:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2407_end5590:
    set $P101, $P5014
.annotate 'line', 2388
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5596
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5016, $P5017
    set fb_tmp_439, $P5016
    repr_defined $I5003, fb_tmp_439
    unless $I5003 goto if2411_else5597 
    set $P5018, fb_tmp_439["$W"]
    set $P5020, $P5018
    goto if2411_end5598
  if2411_else5597:
    null $P5019
    set $P5020, $P5019
  if2411_end5598:
    unless_null $P5020, vivi_24125599
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_24125599:
    unless_null $P5020, vivi_24135600
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_24135600:
    set $P5015, $P5020
  fallback5596:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5601
    nqp_get_sc_object $P5025, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5024, $P5025
    set fb_tmp_440, $P5024
    repr_defined $I5004, fb_tmp_440
    unless $I5004 goto if2414_else5602 
    set $P5026, fb_tmp_440["$PACKAGE"]
    set $P5028, $P5026
    goto if2414_end5603
  if2414_else5602:
    null $P5027
    set $P5028, $P5027
  if2414_end5603:
    unless_null $P5028, vivi_24155604
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_24155604:
    unless_null $P5028, vivi_24165605
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_24165605:
    set $P5023, $P5028
  fallback5601:
.annotate 'line', 2389
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5606
    nqp_get_sc_object $P5033, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5032, $P5033
    set fb_tmp_441, $P5032
    repr_defined $I5005, fb_tmp_441
    unless $I5005 goto if2417_else5607 
    set $P5034, fb_tmp_441["$W"]
    set $P5036, $P5034
    goto if2417_end5608
  if2417_else5607:
    null $P5035
    set $P5036, $P5035
  if2417_end5608:
    unless_null $P5036, vivi_24185609
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5036, $P5037
  vivi_24185609:
    unless_null $P5036, vivi_24195610
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_24195610:
    set $P5031, $P5036
  fallback5606:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1382959278.72036") :anon :lex :outer("cuid_295_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2394
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24315630
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2397
.annotate 'line', 2398
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5621
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_444, $P5004
    repr_defined $I5001, fb_tmp_444
    unless $I5001 goto if2425_else5622 
    set $P5006, fb_tmp_444["$W"]
    set $P5008, $P5006
    goto if2425_end5623
  if2425_else5622:
    null $P5007
    set $P5008, $P5007
  if2425_end5623:
    unless_null $P5008, vivi_24265624
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_24265624:
    unless_null $P5008, vivi_24275625
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24275625:
    set $P5003, $P5008
  fallback5621:
    set fb_tmp_445, _lex_param_0
    repr_defined $I5002, fb_tmp_445
    unless $I5002 goto if2428_else5626 
    set $P5012, fb_tmp_445["identifier"]
    set $P5014, $P5012
    goto if2428_end5627
  if2428_else5626:
    null $P5013
    set $P5014, $P5013
  if2428_end5627:
    unless_null $P5014, vivi_24295628
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_24295628:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24305629
  catch_handler_24315630:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24305629
  skip_handler_24305629:
    unless $P102 goto if2432_else5631 
.annotate 'line', 2401
.annotate 'line', 2402
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5633
    nqp_get_sc_object $P5022, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5021, $P5022
    set fb_tmp_446, $P5021
    repr_defined $I5003, fb_tmp_446
    unless $I5003 goto if2433_else5634 
    set $P5023, fb_tmp_446["$W"]
    set $P5025, $P5023
    goto if2433_end5635
  if2433_else5634:
    null $P5024
    set $P5025, $P5024
  if2433_end5635:
    unless_null $P5025, vivi_24345636
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5025, $P5026
  vivi_24345636:
    unless_null $P5025, vivi_24355637
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24355637:
    set $P5020, $P5025
  fallback5633:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5638
    nqp_get_sc_object $P5030, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5029, $P5030
    set fb_tmp_447, $P5029
    repr_defined $I5004, fb_tmp_447
    unless $I5004 goto if2436_else5639 
    set $P5031, fb_tmp_447["$PACKAGE"]
    set $P5033, $P5031
    goto if2436_end5640
  if2436_else5639:
    null $P5032
    set $P5033, $P5032
  if2436_end5640:
    unless_null $P5033, vivi_24375641
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5033, $P5034
  vivi_24375641:
    unless_null $P5033, vivi_24385642
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24385642:
    set $P5028, $P5033
  fallback5638:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2432_end5632
  if2432_else5631:
.annotate 'line', 2404
.annotate 'line', 2405
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2432_end5632:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_296_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2426
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_492_1382959278.72036' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_457 
    unless_null _lex_param_1, fallback5696
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5004
  fallback5696:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5001, fb_tmp_457
    unless $I5001 goto if2467_else5694 
    set $P5005, fb_tmp_457["variable"]
    set $P5007, $P5005
    goto if2467_end5695
  if2467_else5694:
    null $P5006
    set $P5007, $P5006
  if2467_end5695:
    unless_null $P5007, vivi_24685697
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_24685697:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5703:
    unless $P5003, for_done5705
    shift $P5010, $P5003
  for_redo5704:
    .const 'Sub' $P5009 = 'cuid_492_1382959278.72036' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5703
  for_done5705:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1382959278.72036") :anon :lex :outer("cuid_296_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2427
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_458 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2428
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2429
    $P101."scope"("lexical")
.annotate 'line', 2430
    $P101."decl"("param")
.annotate 'line', 2431
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5698
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_458, $P5004
    repr_defined $I5001, fb_tmp_458
    unless $I5001 goto if2469_else5699 
    set $P5006, fb_tmp_458["$W"]
    set $P5008, $P5006
    goto if2469_end5700
  if2469_else5699:
    null $P5007
    set $P5008, $P5007
  if2469_end5700:
    unless_null $P5008, vivi_24705701
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_24705701:
    unless_null $P5008, vivi_24715702
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24715702:
    set $P5003, $P5008
  fallback5698:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_297_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2435
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_459 
    unless_null _lex_param_1, fallback5708
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5708:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5001, fb_tmp_459
    unless $I5001 goto if2472_else5706 
    set $P5002, fb_tmp_459["scoped"]
    set $P5004, $P5002
    goto if2472_end5707
  if2472_else5706:
    null $P5003
    set $P5004, $P5003
  if2472_end5707:
    unless_null $P5004, vivi_24735709
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_24735709:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_298_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_460 
    unless_null _lex_param_1, fallback5712
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5712:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5001, fb_tmp_460
    unless $I5001 goto if2474_else5710 
    set $P5002, fb_tmp_460["scoped"]
    set $P5004, $P5002
    goto if2474_end5711
  if2474_else5710:
    null $P5003
    set $P5004, $P5003
  if2474_end5711:
    unless_null $P5004, vivi_24755713
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_24755713:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_299_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2437
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_461 
    unless_null _lex_param_1, fallback5716
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5716:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5001, fb_tmp_461
    unless $I5001 goto if2476_else5714 
    set $P5002, fb_tmp_461["scoped"]
    set $P5004, $P5002
    goto if2476_end5715
  if2476_else5714:
    null $P5003
    set $P5004, $P5003
  if2476_end5715:
    unless_null $P5004, vivi_24775717
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_24775717:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_300_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
.annotate 'line', 2440
    unless_null _lex_param_1, fallback5722
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5722:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5001, fb_tmp_462
    unless $I5001 goto if2479_else5720 
    set $P5002, fb_tmp_462["declarator"]
    set $P5004, $P5002
    goto if2479_end5721
  if2479_else5720:
    null $P5003
    set $P5004, $P5003
  if2479_end5721:
    unless_null $P5004, vivi_24805723
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_24805723:
    unless $P5004 goto if2478_else5718 
    unless_null _lex_param_1, fallback5726
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5726:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5002, fb_tmp_463
    unless $I5002 goto if2481_else5724 
    set $P5007, fb_tmp_463["declarator"]
    set $P5009, $P5007
    goto if2481_end5725
  if2481_else5724:
    null $P5008
    set $P5009, $P5008
  if2481_end5725:
    unless_null $P5009, vivi_24825727
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_24825727:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2478_end5719
  if2478_else5718:
    unless_null _lex_param_1, fallback5732
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback5732:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5003, fb_tmp_464
    unless $I5003 goto if2484_else5730 
    set $P5013, fb_tmp_464["multi_declarator"]
    set $P5015, $P5013
    goto if2484_end5731
  if2484_else5730:
    null $P5014
    set $P5015, $P5014
  if2484_end5731:
    unless_null $P5015, vivi_24855733
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_24855733:
    unless $P5015 goto if2483_else5728 
.annotate 'line', 2441
    unless_null _lex_param_1, fallback5736
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5017
  fallback5736:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5004, fb_tmp_465
    unless $I5004 goto if2486_else5734 
    set $P5018, fb_tmp_465["multi_declarator"]
    set $P5020, $P5018
    goto if2486_end5735
  if2486_else5734:
    null $P5019
    set $P5020, $P5019
  if2486_end5735:
    unless_null $P5020, vivi_24875737
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_24875737:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2483_end5729
  if2483_else5728:
.annotate 'line', 2442
    unless_null _lex_param_1, fallback5740
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5023
  fallback5740:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5005, fb_tmp_466
    unless $I5005 goto if2488_else5738 
    set $P5024, fb_tmp_466["package_declarator"]
    set $P5026, $P5024
    goto if2488_end5739
  if2488_else5738:
    null $P5025
    set $P5026, $P5025
  if2488_end5739:
    unless_null $P5026, vivi_24895741
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_24895741:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2483_end5729:
    set $P5030, $P5029
  if2478_end5719:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_301_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2445
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
.annotate 'line', 2446
    unless_null _lex_param_1, fallback5746
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5746:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5001, fb_tmp_467
    unless $I5001 goto if2491_else5744 
    set $P5002, fb_tmp_467["routine_declarator"]
    set $P5004, $P5002
    goto if2491_end5745
  if2491_else5744:
    null $P5003
    set $P5004, $P5003
  if2491_end5745:
    unless_null $P5004, vivi_24925747
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_24925747:
    unless $P5004 goto if2490_else5742 
.annotate 'line', 2447
    unless_null _lex_param_1, fallback5750
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5750:
    set fb_tmp_468, _lex_param_1
    repr_defined $I5002, fb_tmp_468
    unless $I5002 goto if2493_else5748 
    set $P5007, fb_tmp_468["routine_declarator"]
    set $P5009, $P5007
    goto if2493_end5749
  if2493_else5748:
    null $P5008
    set $P5009, $P5008
  if2493_end5749:
    unless_null $P5009, vivi_24945751
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_24945751:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2490_end5743
  if2490_else5742:
.annotate 'line', 2448
    unless_null _lex_param_1, fallback5754
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback5754:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5003, fb_tmp_469
    unless $I5003 goto if2495_else5752 
    set $P5013, fb_tmp_469["variable_declarator"]
    set $P5015, $P5013
    goto if2495_end5753
  if2495_else5752:
    null $P5014
    set $P5015, $P5014
  if2495_end5753:
    unless_null $P5015, vivi_24965755
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_24965755:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2490_end5743:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_302_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2451
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    unless_null _lex_param_1, fallback5760
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5760:
    set fb_tmp_470, _lex_param_1
    repr_defined $I5001, fb_tmp_470
    unless $I5001 goto if2498_else5758 
    set $P5002, fb_tmp_470["declarator"]
    set $P5004, $P5002
    goto if2498_end5759
  if2498_else5758:
    null $P5003
    set $P5004, $P5003
  if2498_end5759:
    unless_null $P5004, vivi_24995761
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_24995761:
    unless $P5004 goto if2497_else5756 
    unless_null _lex_param_1, fallback5764
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5764:
    set fb_tmp_471, _lex_param_1
    repr_defined $I5002, fb_tmp_471
    unless $I5002 goto if2500_else5762 
    set $P5007, fb_tmp_471["declarator"]
    set $P5009, $P5007
    goto if2500_end5763
  if2500_else5762:
    null $P5008
    set $P5009, $P5008
  if2500_end5763:
    unless_null $P5009, vivi_25015765
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_25015765:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2497_end5757
  if2497_else5756:
    unless_null _lex_param_1, fallback5768
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback5768:
    set fb_tmp_472, _lex_param_1
    repr_defined $I5003, fb_tmp_472
    unless $I5003 goto if2502_else5766 
    set $P5013, fb_tmp_472["routine_def"]
    set $P5015, $P5013
    goto if2502_end5767
  if2502_else5766:
    null $P5014
    set $P5015, $P5014
  if2502_end5767:
    unless_null $P5015, vivi_25035769
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_25035769:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2497_end5757:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_303_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2452
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    unless_null _lex_param_1, fallback5774
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5774:
    set fb_tmp_473, _lex_param_1
    repr_defined $I5001, fb_tmp_473
    unless $I5001 goto if2505_else5772 
    set $P5002, fb_tmp_473["declarator"]
    set $P5004, $P5002
    goto if2505_end5773
  if2505_else5772:
    null $P5003
    set $P5004, $P5003
  if2505_end5773:
    unless_null $P5004, vivi_25065775
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_25065775:
    unless $P5004 goto if2504_else5770 
    unless_null _lex_param_1, fallback5778
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5778:
    set fb_tmp_474, _lex_param_1
    repr_defined $I5002, fb_tmp_474
    unless $I5002 goto if2507_else5776 
    set $P5007, fb_tmp_474["declarator"]
    set $P5009, $P5007
    goto if2507_end5777
  if2507_else5776:
    null $P5008
    set $P5009, $P5008
  if2507_end5777:
    unless_null $P5009, vivi_25085779
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_25085779:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2504_end5771
  if2504_else5770:
    unless_null _lex_param_1, fallback5782
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback5782:
    set fb_tmp_475, _lex_param_1
    repr_defined $I5003, fb_tmp_475
    unless $I5003 goto if2509_else5780 
    set $P5013, fb_tmp_475["routine_def"]
    set $P5015, $P5013
    goto if2509_end5781
  if2509_else5780:
    null $P5014
    set $P5015, $P5014
  if2509_end5781:
    unless_null $P5015, vivi_25105783
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_25105783:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2504_end5771:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_304_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_476 
    unless_null _lex_param_1, fallback5786
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5786:
    set fb_tmp_476, _lex_param_1
    repr_defined $I5001, fb_tmp_476
    unless $I5001 goto if2511_else5784 
    set $P5002, fb_tmp_476["declarator"]
    set $P5004, $P5002
    goto if2511_end5785
  if2511_else5784:
    null $P5003
    set $P5004, $P5003
  if2511_end5785:
    unless_null $P5004, vivi_25125787
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_25125787:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_305_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2456
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_493_1382959278.72036' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_495_1382959278.72036' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_496_1382959278.72036' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_497 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P105, $P5005
.annotate 'line', 2457
    unless_null _lex_param_1, fallback5790
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback5790:
    set fb_tmp_477, _lex_param_1
    repr_defined $I5001, fb_tmp_477
    unless $I5001 goto if2513_else5788 
    set $P5007, fb_tmp_477["variable"]
    set $P5009, $P5007
    goto if2513_end5789
  if2513_else5788:
    null $P5008
    set $P5009, $P5008
  if2513_end5789:
    unless_null $P5009, vivi_25145791
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_25145791:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5796
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback5796:
    set fb_tmp_479, _lex_param_1
    repr_defined $I5003, fb_tmp_479
    unless $I5003 goto if2516_else5794 
    set $P5013, fb_tmp_479["variable"]
    set $P5015, $P5013
    goto if2516_end5795
  if2516_else5794:
    null $P5014
    set $P5015, $P5014
  if2516_end5795:
    unless_null $P5015, vivi_25175797
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_25175797:
    set fb_tmp_478, $P5015
    repr_defined $I5002, fb_tmp_478
    unless $I5002 goto if2515_else5792 
    set $P5017, fb_tmp_478["sigil"]
    set $P5019, $P5017
    goto if2515_end5793
  if2515_else5792:
    null $P5018
    set $P5019, $P5018
  if2515_end5793:
    unless_null $P5019, vivi_25185798
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_25185798:
    set $P102, $P5019
.annotate 'line', 2459
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2460
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5799
    nqp_get_sc_object $P5024, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5023, $P5024
    set fb_tmp_480, $P5023
    repr_defined $I5004, fb_tmp_480
    unless $I5004 goto if2519_else5800 
    set $P5025, fb_tmp_480["$W"]
    set $P5027, $P5025
    goto if2519_end5801
  if2519_else5800:
    null $P5026
    set $P5027, $P5026
  if2519_end5801:
    unless_null $P5027, vivi_25205802
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5027, $P5028
  vivi_25205802:
    unless_null $P5027, vivi_25215803
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_25215803:
    set $P5022, $P5027
  fallback5799:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2526_end5812 
.annotate 'line', 2462
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2526_end5812:
    unless $P5039 goto if2525_end5810 
.annotate 'line', 2463
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2525_end5810:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5815
    nqp_get_sc_object $P5044, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5043, $P5044
    set fb_tmp_482, $P5043
    repr_defined $I5007, fb_tmp_482
    unless $I5007 goto if2528_else5816 
    set $P5045, fb_tmp_482["$SCOPE"]
    set $P5047, $P5045
    goto if2528_end5817
  if2528_else5816:
    null $P5046
    set $P5047, $P5046
  if2528_end5817:
    unless_null $P5047, vivi_25295818
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5047, $P5048
  vivi_25295818:
    unless_null $P5047, vivi_25305819
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25305819:
    set $P5042, $P5047
  fallback5815:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2527_else5813 
    .const 'Sub' $P5050 = 'cuid_493_1382959278.72036' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2527_end5814
  if2527_else5813:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5897
    nqp_get_sc_object $P5054, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5053, $P5054
    set fb_tmp_497, $P5053
    repr_defined $I5009, fb_tmp_497
    unless $I5009 goto if2576_else5898 
    set $P5055, fb_tmp_497["$SCOPE"]
    set $P5057, $P5055
    goto if2576_end5899
  if2576_else5898:
    null $P5056
    set $P5057, $P5056
  if2576_end5899:
    unless_null $P5057, vivi_25775900
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5057, $P5058
  vivi_25775900:
    unless_null $P5057, vivi_25785901
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25785901:
    set $P5052, $P5057
  fallback5897:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2575_else5895 
.annotate 'line', 2493
    unless_null _lex_param_1, fallback5906
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5060
  fallback5906:
    set fb_tmp_498, _lex_param_1
    repr_defined $I5010, fb_tmp_498
    unless $I5010 goto if2580_else5904 
    set $P5061, fb_tmp_498["typename"]
    set $P5063, $P5061
    goto if2580_end5905
  if2580_else5904:
    null $P5062
    set $P5063, $P5062
  if2580_end5905:
    unless_null $P5063, vivi_25815907
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5063, $P5064
  vivi_25815907:
    unless $P5063 goto if2579_end5903 
.annotate 'line', 2497
.annotate 'line', 2498
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2579_end5903:
    unless_null _lex_param_1, fallback5910
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5067
  fallback5910:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5011, fb_tmp_499
    unless $I5011 goto if2582_else5908 
    set $P5068, fb_tmp_499["variable"]
    set $P5070, $P5068
    goto if2582_end5909
  if2582_else5908:
    null $P5069
    set $P5070, $P5069
  if2582_end5909:
    unless_null $P5070, vivi_25835911
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5070, $P5071
  vivi_25835911:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2501
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2502
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2575_end5896
  if2575_else5895:
    .const 'Sub' $P5076 = 'cuid_495_1382959278.72036' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2575_end5896:
  if2527_end5814:
    unless_null _lex_param_1, fallback5938
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5079
  fallback5938:
    set fb_tmp_504, _lex_param_1
    repr_defined $I5012, fb_tmp_504
    unless $I5012 goto if2597_else5936 
    set $P5080, fb_tmp_504["trait"]
    set $P5082, $P5080
    goto if2597_end5937
  if2597_else5936:
    null $P5081
    set $P5082, $P5081
  if2597_end5937:
    unless_null $P5082, vivi_25985939
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_25985939:
    unless $P5082 goto if2596_end5935 
.annotate 'line', 2531
    unless_null _lex_param_1, fallback5942
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5087
  fallback5942:
    set fb_tmp_505, _lex_param_1
    repr_defined $I5013, fb_tmp_505
    unless $I5013 goto if2599_else5940 
    set $P5088, fb_tmp_505["trait"]
    set $P5090, $P5088
    goto if2599_end5941
  if2599_else5940:
    null $P5089
    set $P5090, $P5089
  if2599_end5941:
    unless_null $P5090, vivi_26005943
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5090, $P5091
  vivi_26005943:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5944:
    unless $P5086, for_done5946
    shift $P5093, $P5086
  for_redo5945:
    .const 'Sub' $P5092 = 'cuid_496_1382959278.72036' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5944
  for_done5946:
  if2596_end5935:
.annotate 'line', 2535
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1382959278.72036") :anon :lex :outer("cuid_305_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2465
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_483 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_496 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5822
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_46, $P5004
    set fb_tmp_483, pkg_viv_tmp_46
    repr_defined $I5002, fb_tmp_483
    unless $I5002 goto if2532_else5823 
    set $P5006, fb_tmp_483["%HOW"]
    set $P5008, $P5006
    goto if2532_end5824
  if2532_else5823:
    null $P5007
    set $P5008, $P5007
  if2532_end5824:
    unless_null $P5008, vivi_25335825
    new $P5009, 'Hash'
    set pkg_viv_tmp_46["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25335825:
    unless_null $P5008, vivi_25345826
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25345826:
    set $P5003, $P5008
  fallback5822:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5827
    nqp_get_sc_object $P5013, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5012, $P5013
    set fb_tmp_484, $P5012
    repr_defined $I5003, fb_tmp_484
    unless $I5003 goto if2535_else5828 
    set $P5014, fb_tmp_484["$PKGDECL"]
    set $P5016, $P5014
    goto if2535_end5829
  if2535_else5828:
    null $P5015
    set $P5016, $P5015
  if2535_end5829:
    unless_null $P5016, vivi_25365830
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_25365830:
    unless_null $P5016, vivi_25375831
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25375831:
    set $P5011, $P5016
  fallback5827:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2531_end5821 
.annotate 'line', 2467
.annotate 'line', 2468
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5832
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set fb_tmp_485, $P5022
    repr_defined $I5004, fb_tmp_485
    unless $I5004 goto if2538_else5833 
    set $P5024, fb_tmp_485["$PKGDECL"]
    set $P5026, $P5024
    goto if2538_end5834
  if2538_else5833:
    null $P5025
    set $P5026, $P5025
  if2538_end5834:
    unless_null $P5026, vivi_25395835
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_25395835:
    unless_null $P5026, vivi_25405836
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25405836:
    set $P5021, $P5026
  fallback5832:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2531_end5821:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5841
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  fallback5841:
    set fb_tmp_486, $P5031
    repr_defined $I5005, fb_tmp_486
    unless $I5005 goto if2542_else5839 
    set $P5033, fb_tmp_486["typename"]
    set $P5035, $P5033
    goto if2542_end5840
  if2542_else5839:
    null $P5034
    set $P5035, $P5034
  if2542_end5840:
    unless_null $P5035, vivi_25435842
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5035, $P5036
  vivi_25435842:
    unless $P5035 goto if2541_end5838 
.annotate 'line', 2475
.annotate 'line', 2476
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5843
    nqp_get_sc_object $P5039, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5038, $P5039
    set fb_tmp_487, $P5038
    repr_defined $I5006, fb_tmp_487
    unless $I5006 goto if2544_else5844 
    set $P5040, fb_tmp_487["$W"]
    set $P5042, $P5040
    goto if2544_end5845
  if2544_else5844:
    null $P5041
    set $P5042, $P5041
  if2544_end5845:
    unless_null $P5042, vivi_25455846
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5042, $P5043
  vivi_25455846:
    unless_null $P5042, vivi_25465847
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25465847:
    set $P5037, $P5042
  fallback5843:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5850
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5046, $P5047
  fallback5850:
    set fb_tmp_488, $P5046
    repr_defined $I5007, fb_tmp_488
    unless $I5007 goto if2547_else5848 
    set $P5048, fb_tmp_488["typename"]
    set $P5050, $P5048
    goto if2547_end5849
  if2547_else5848:
    null $P5049
    set $P5050, $P5049
  if2547_end5849:
    unless_null $P5050, vivi_25485851
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5050, $P5051
  vivi_25485851:
    set $S5005, $P5050
    box $P5052, $S5005
    push $P5045, $P5052
    $P5053 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5053
  if2541_end5838:
    find_lex $P5054, "$sigil"
    set $S5006, $P5054
    iseq $I5008, $S5006, "$"
    set $I5010, $I5008
    if $I5008 goto unless2550_end5855 
    find_lex $P5055, "$sigil"
    set $S5007, $P5055
    iseq $I5009, $S5007, "&"
    set $I5010, $I5009
  unless2550_end5855:
    unless $I5010 goto if2549_end5853 
.annotate 'line', 2478
    find_lex $P5056, "$/"
    unless_null $P5056, fallback5860
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5056, $P5057
  fallback5860:
    set fb_tmp_489, $P5056
    repr_defined $I5011, fb_tmp_489
    unless $I5011 goto if2552_else5858 
    set $P5058, fb_tmp_489["typename"]
    set $P5060, $P5058
    goto if2552_end5859
  if2552_else5858:
    null $P5059
    set $P5060, $P5059
  if2552_end5859:
    unless_null $P5060, vivi_25535861
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5060, $P5061
  vivi_25535861:
    unless $P5060 goto if2551_else5856 
.annotate 'line', 2479
    set fb_tmp_490, $P102
    repr_defined $I5012, fb_tmp_490
    unless $I5012 goto if2554_else5862 
    set $P5062, fb_tmp_490["type"]
    set $P5064, $P5062
    goto if2554_end5863
  if2554_else5862:
    null $P5063
    set $P5064, $P5063
  if2554_end5863:
    unless_null $P5064, vivi_25555864
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5064, $P5065
  vivi_25555864:
    set $P102["default"], $P5064
    set $P5079, $P5064
    goto if2551_end5857
  if2551_else5856:
.annotate 'line', 2482
    new $P5077, 'ExceptionHandler'
    set_label $P5077, catch_handler_25605871
    $P5077.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5077
.annotate 'line', 2483
    find_dynamic_lex $P5066, "$*W"
    unless_null $P5066, fallback5865
    nqp_get_sc_object $P5068, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5067, $P5068
    set fb_tmp_491, $P5067
    repr_defined $I5013, fb_tmp_491
    unless $I5013 goto if2556_else5866 
    set $P5069, fb_tmp_491["$W"]
    set $P5071, $P5069
    goto if2556_end5867
  if2556_else5866:
    null $P5070
    set $P5071, $P5070
  if2556_end5867:
    unless_null $P5071, vivi_25575868
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5071, $P5072
  vivi_25575868:
    unless_null $P5071, vivi_25585869
    die "Contextual $*W not found"
    box $P5073, "Contextual $*W not found"
    set $P5071, $P5073
  vivi_25585869:
    set $P5066, $P5071
  fallback5865:
    new $P5074, 'ResizablePMCArray'
    box $P5075, "NQPMu"
    push $P5074, $P5075
    $P5076 = $P5066."find_sym"($P5074)
    set $P102["default"], $P5076
    set $P5078, $P5076
    pop_eh 
    goto skip_handler_25595870
  catch_handler_25605871:
    .get_results ($P5077) 
    set $I10001, 1
    set $P5077["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5077
    pop_upto_eh $P5077
    pop_eh 
    set $P5078, $P10001
    goto skip_handler_25595870
  skip_handler_25595870:
    set $P5079, $P5078
  if2551_end5857:
  if2549_end5853:
.annotate 'line', 2488
    find_dynamic_lex $P5080, "$*W"
    unless_null $P5080, fallback5872
    nqp_get_sc_object $P5082, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5081, $P5082
    set fb_tmp_492, $P5081
    repr_defined $I5014, fb_tmp_492
    unless $I5014 goto if2561_else5873 
    set $P5083, fb_tmp_492["$W"]
    set $P5085, $P5083
    goto if2561_end5874
  if2561_else5873:
    null $P5084
    set $P5085, $P5084
  if2561_end5874:
    unless_null $P5085, vivi_25625875
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5085, $P5086
  vivi_25625875:
    unless_null $P5085, vivi_25635876
    die "Contextual $*W not found"
    box $P5087, "Contextual $*W not found"
    set $P5085, $P5087
  vivi_25635876:
    set $P5080, $P5085
  fallback5872:
    find_dynamic_lex $P5088, "$*PACKAGE"
    unless_null $P5088, fallback5877
    nqp_get_sc_object $P5090, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5089, $P5090
    set fb_tmp_493, $P5089
    repr_defined $I5015, fb_tmp_493
    unless $I5015 goto if2564_else5878 
    set $P5091, fb_tmp_493["$PACKAGE"]
    set $P5093, $P5091
    goto if2564_end5879
  if2564_else5878:
    null $P5092
    set $P5093, $P5092
  if2564_end5879:
    unless_null $P5093, vivi_25655880
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5093, $P5094
  vivi_25655880:
    unless_null $P5093, vivi_25665881
    die "Contextual $*PACKAGE not found"
    box $P5095, "Contextual $*PACKAGE not found"
    set $P5093, $P5095
  vivi_25665881:
    set $P5088, $P5093
  fallback5877:
    find_dynamic_lex $P5096, "%*HOW"
    unless_null $P5096, fallback5884
    nqp_get_sc_object $P5098, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_47, $P5097
    set fb_tmp_495, pkg_viv_tmp_47
    repr_defined $I5017, fb_tmp_495
    unless $I5017 goto if2568_else5885 
    set $P5099, fb_tmp_495["%HOW"]
    set $P5101, $P5099
    goto if2568_end5886
  if2568_else5885:
    null $P5100
    set $P5101, $P5100
  if2568_end5886:
    unless_null $P5101, vivi_25695887
    new $P5102, 'Hash'
    set pkg_viv_tmp_47["%HOW"], $P5102
    set $P5101, $P5102
  vivi_25695887:
    unless_null $P5101, vivi_25705888
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_25705888:
    set $P5096, $P5101
  fallback5884:
    set fb_tmp_494, $P5096
    repr_defined $I5016, fb_tmp_494
    unless $I5016 goto if2567_else5882 
    find_dynamic_lex $P5105, "$*PKGDECL"
    unless_null $P5105, fallback5889
    nqp_get_sc_object $P5107, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5106, $P5107
    set fb_tmp_496, $P5106
    repr_defined $I5018, fb_tmp_496
    unless $I5018 goto if2571_else5890 
    set $P5108, fb_tmp_496["$PKGDECL"]
    set $P5110, $P5108
    goto if2571_end5891
  if2571_else5890:
    null $P5109
    set $P5110, $P5109
  if2571_end5891:
    unless_null $P5110, vivi_25725892
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5110, $P5111
  vivi_25725892:
    unless_null $P5110, vivi_25735893
    die "Contextual $*PKGDECL not found"
    box $P5112, "Contextual $*PKGDECL not found"
    set $P5110, $P5112
  vivi_25735893:
    set $P5105, $P5110
  fallback5889:
    set $S5009, $P5105
    concat $S5008, $S5009, "-attr"
    set $P5104, fb_tmp_494[$S5008]
    set $P5114, $P5104
    goto if2567_end5883
  if2567_else5882:
    null $P5113
    set $P5114, $P5113
  if2567_end5883:
    unless_null $P5114, vivi_25745894
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5114, $P5115
  vivi_25745894:
    $P5116 = $P5080."pkg_add_attribute"($P5088, $P5114, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5116
.annotate 'line', 2491
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
    $P5118 = $P5117."new"()
    store_lex "$past", $P5118
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1382959278.72036") :anon :lex :outer("cuid_305_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2504
    .const 'Sub' $P5052 = 'cuid_494_1382959278.72036' 
    capture_lex $P5052 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5916
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  fallback5916:
    set fb_tmp_500, $P5003
    repr_defined $I5001, fb_tmp_500
    unless $I5001 goto if2585_else5914 
    set $P5005, fb_tmp_500["typename"]
    set $P5007, $P5005
    goto if2585_end5915
  if2585_else5914:
    null $P5006
    set $P5007, $P5006
  if2585_end5915:
    unless_null $P5007, vivi_25865917
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_25865917:
    unless $P5007 goto if2584_else5912 
.annotate 'line', 2507
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2587_end5919 
.annotate 'line', 2508
.annotate 'line', 2509
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2587_end5919:
.annotate 'line', 2511
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5920
    nqp_get_sc_object $P5015, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5014, $P5015
    set fb_tmp_501, $P5014
    repr_defined $I5003, fb_tmp_501
    unless $I5003 goto if2588_else5921 
    set $P5016, fb_tmp_501["$W"]
    set $P5018, $P5016
    goto if2588_end5922
  if2588_else5921:
    null $P5017
    set $P5018, $P5017
  if2588_end5922:
    unless_null $P5018, vivi_25895923
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_25895923:
    unless_null $P5018, vivi_25905924
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25905924:
    set $P5013, $P5018
  fallback5920:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5927
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  fallback5927:
    set fb_tmp_502, $P5022
    repr_defined $I5004, fb_tmp_502
    unless $I5004 goto if2591_else5925 
    set $P5024, fb_tmp_502["typename"]
    set $P5026, $P5024
    goto if2591_end5926
  if2591_else5925:
    null $P5025
    set $P5026, $P5025
  if2591_end5926:
    unless_null $P5026, vivi_25925928
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_25925928:
    set $S5002, $P5026
    box $P5028, $S5002
    push $P5021, $P5028
    $P5029 = $P5013."find_sym"($P5021)
    set $P101, $P5029
    repr_get_primitive_type_spec $I5005, $P101
    unless $I5005 goto if2593_else5929 
    .const 'Sub' $P5030 = 'cuid_494_1382959278.72036' 
    capture_lex $P5030
    $P5031 = $P5030($I5005)
    set $P5035, $P5031
    goto if2593_end5930
  if2593_else5929:
.annotate 'line', 2515
.annotate 'line', 2516
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    $P5034 = $P5033."panic"("Only native types are currently supported/checked")
    set $P5035, $P5034
  if2593_end5930:
    goto if2584_end5913
  if2584_else5912:
.annotate 'line', 2519
.annotate 'line', 2520
    find_lex $P5036, "$sigil"
    $P5037 = "&default_for"($P5036)
    set $P102, $P5037
  if2584_end5913:
.annotate 'line', 2522
    find_lex $P5038, "$BLOCK"
    set fb_tmp_503, $P5038
    repr_defined $I5006, fb_tmp_503
    unless $I5006 goto if2594_else5931 
    set $P5039, fb_tmp_503[0]
    set $P5041, $P5039
    goto if2594_end5932
  if2594_else5931:
    null $P5040
    set $P5041, $P5040
  if2594_end5932:
    unless_null $P5041, vivi_25955933
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5041, $P5042
  vivi_25955933:
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    find_lex $P5044, "$/"
.annotate 'line', 2524
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_lex $P5046, "$name"
    $P5047 = $P5045."new"($P5046 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5048 = $P5043."new"($P5047, $P102, "bind" :named("op"), $P5044 :named("node"))
    $P5041."push"($P5048)
.annotate 'line', 2527
    find_lex $P5049, "$BLOCK"
    find_lex $P5050, "$name"
    $P5051 = $P5049."symbol"($P5050, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1382959278.72036") :anon :lex :outer("cuid_495_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2512
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2513
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1382959278.72036") :anon :lex :outer("cuid_305_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2532
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_306_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2538
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_506 
    unless_null _lex_param_1, fallback5949
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5949:
    set fb_tmp_506, _lex_param_1
    repr_defined $I5001, fb_tmp_506
    unless $I5001 goto if2601_else5947 
    set $P5002, fb_tmp_506["routine_def"]
    set $P5004, $P5002
    goto if2601_end5948
  if2601_else5947:
    null $P5003
    set $P5004, $P5003
  if2601_end5948:
    unless_null $P5004, vivi_26025950
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_26025950:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_307_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2539
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_507 
    unless_null _lex_param_1, fallback5953
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback5953:
    set fb_tmp_507, _lex_param_1
    repr_defined $I5001, fb_tmp_507
    unless $I5001 goto if2603_else5951 
    set $P5002, fb_tmp_507["method_def"]
    set $P5004, $P5002
    goto if2603_end5952
  if2603_else5951:
    null $P5003
    set $P5004, $P5003
  if2603_end5952:
    unless_null $P5004, vivi_26045954
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_26045954:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_308_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2541
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_500_1382959278.72036' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_503_1382959278.72036' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5959
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5004
  fallback5959:
    set fb_tmp_508, _lex_param_1
    repr_defined $I5001, fb_tmp_508
    unless $I5001 goto if2606_else5957 
    set $P5005, fb_tmp_508["onlystar"]
    set $P5007, $P5005
    goto if2606_end5958
  if2606_else5957:
    null $P5006
    set $P5007, $P5006
  if2606_end5958:
    unless_null $P5007, vivi_26075960
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_26075960:
    unless $P5007 goto if2605_else5955 
.annotate 'line', 2545
.annotate 'line', 2546
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2605_end5956
  if2605_else5955:
.annotate 'line', 2548
.annotate 'line', 2549
    unless_null _lex_param_1, fallback5963
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5010
  fallback5963:
    set fb_tmp_509, _lex_param_1
    repr_defined $I5002, fb_tmp_509
    unless $I5002 goto if2608_else5961 
    set $P5011, fb_tmp_509["blockoid"]
    set $P5013, $P5011
    goto if2608_end5962
  if2608_else5961:
    null $P5012
    set $P5013, $P5012
  if2608_end5962:
    unless_null $P5013, vivi_26095964
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_26095964:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5967
    nqp_get_sc_object $P5018, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5017, $P5018
    set fb_tmp_510, $P5017
    repr_defined $I5003, fb_tmp_510
    unless $I5003 goto if2611_else5968 
    set $P5019, fb_tmp_510["$RETURN_USED"]
    set $P5021, $P5019
    goto if2611_end5969
  if2611_else5968:
    null $P5020
    set $P5021, $P5020
  if2611_end5969:
    unless_null $P5021, vivi_26125970
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_26125970:
    unless_null $P5021, vivi_26135971
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_26135971:
    set $P5016, $P5021
  fallback5967:
    set $P5029, $P5016
    unless $P5016 goto if2610_end5966 
.annotate 'line', 2550
.annotate 'line', 2551
    set fb_tmp_511, $P101
    repr_defined $I5004, fb_tmp_511
    unless $I5004 goto if2614_else5972 
    set $P5024, fb_tmp_511[1]
    set $P5026, $P5024
    goto if2614_end5973
  if2614_else5972:
    null $P5025
    set $P5026, $P5025
  if2614_end5973:
    unless_null $P5026, vivi_26155974
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_26155974:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2610_end5966:
  if2605_end5956:
.annotate 'line', 2554
    $P101."blocktype"("declaration")
    set $P102, $P101
    unless_null _lex_param_1, fallback5979
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5030
  fallback5979:
    set fb_tmp_512, _lex_param_1
    repr_defined $I5005, fb_tmp_512
    unless $I5005 goto if2617_else5977 
    set $P5031, fb_tmp_512["deflongname"]
    set $P5033, $P5031
    goto if2617_end5978
  if2617_else5977:
    null $P5032
    set $P5033, $P5032
  if2617_end5978:
    unless_null $P5033, vivi_26185980
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5033, $P5034
  vivi_26185980:
    unless $P5033 goto if2616_else5975 
    .const 'Sub' $P5035 = 'cuid_500_1382959278.72036' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2616_end5976
  if2616_else5975:
.annotate 'line', 2674
.annotate 'line', 2675
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback6152
    nqp_get_sc_object $P5039, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5038, $P5039
    set fb_tmp_545, $P5038
    repr_defined $I5006, fb_tmp_545
    unless $I5006 goto if2718_else6153 
    set $P5040, fb_tmp_545["$W"]
    set $P5042, $P5040
    goto if2718_end6154
  if2718_else6153:
    null $P5041
    set $P5042, $P5041
  if2718_end6154:
    unless_null $P5042, vivi_27196155
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5042, $P5043
  vivi_27196155:
    unless_null $P5042, vivi_27206156
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_27206156:
    set $P5037, $P5042
  fallback6152:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2717_end6151 
.annotate 'line', 2676
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback6157
    nqp_get_sc_object $P5048, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5047, $P5048
    set fb_tmp_546, $P5047
    repr_defined $I5007, fb_tmp_546
    unless $I5007 goto if2721_else6158 
    set $P5049, fb_tmp_546["$W"]
    set $P5051, $P5049
    goto if2721_end6159
  if2721_else6158:
    null $P5050
    set $P5051, $P5050
  if2721_end6159:
    unless_null $P5051, vivi_27226160
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5051, $P5052
  vivi_27226160:
    unless_null $P5051, vivi_27236161
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_27236161:
    set $P5046, $P5051
  fallback6157:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2717_end6151:
  if2616_end5976:
.annotate 'line', 2680
    nqp_get_sc_object $P5056, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2683
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6166
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5058
  fallback6166:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5008, fb_tmp_547
    unless $I5008 goto if2725_else6164 
    set $P5059, fb_tmp_547["trait"]
    set $P5061, $P5059
    goto if2725_end6165
  if2725_else6164:
    null $P5060
    set $P5061, $P5060
  if2725_end6165:
    unless_null $P5061, vivi_27266167
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5061, $P5062
  vivi_27266167:
    set $P5073, $P5061
    unless $P5061 goto if2724_end6163 
.annotate 'line', 2686
    unless_null _lex_param_1, fallback6170
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5066
  fallback6170:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5009, fb_tmp_548
    unless $I5009 goto if2727_else6168 
    set $P5067, fb_tmp_548["trait"]
    set $P5069, $P5067
    goto if2727_end6169
  if2727_else6168:
    null $P5068
    set $P5069, $P5068
  if2727_end6169:
    unless_null $P5069, vivi_27286171
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5069, $P5070
  vivi_27286171:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next6172:
    unless $P5065, for_done6174
    shift $P5072, $P5065
  for_redo6173:
    .const 'Sub' $P5071 = 'cuid_503_1382959278.72036' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next6172
  for_done6174:
    set $P5073, $P5063
  if2724_end6163:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1382959278.72036") :anon :lex :outer("cuid_308_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2557
    .const 'Sub' $P5088 = 'cuid_499_1382959278.72036' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_501_1382959278.72036' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_502_1382959278.72036' 
    capture_lex $P5088 
    .lex "$name", $P101 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5983
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback5983:
    set fb_tmp_513, $P5002
    repr_defined $I5001, fb_tmp_513
    unless $I5001 goto if2619_else5981 
    set $P5004, fb_tmp_513["sigil"]
    set $P5006, $P5004
    goto if2619_end5982
  if2619_else5981:
    null $P5005
    set $P5006, $P5005
  if2619_end5982:
    unless_null $P5006, vivi_26205984
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_26205984:
    set $S5002, $P5006
.annotate 'line', 2558
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5987
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  fallback5987:
    set fb_tmp_514, $P5008
    repr_defined $I5002, fb_tmp_514
    unless $I5002 goto if2621_else5985 
    set $P5010, fb_tmp_514["deflongname"]
    set $P5012, $P5010
    goto if2621_end5986
  if2621_else5985:
    null $P5011
    set $P5012, $P5011
  if2621_end5986:
    unless_null $P5012, vivi_26225988
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_26225988:
    $P5014 = $P5012."ast"()
    set $S5003, $P5014
    concat $S5001, $S5002, $S5003
    box $P5015, $S5001
    set $P101, $P5015
.annotate 'line', 2559
    find_lex $P5016, "$past"
    $P5016."name"($P101)
    find_dynamic_lex $P5017, "$*SCOPE"
    unless_null $P5017, fallback5995
    nqp_get_sc_object $P5019, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5018, $P5019
    set fb_tmp_515, $P5018
    repr_defined $I5004, fb_tmp_515
    unless $I5004 goto if2626_else5996 
    set $P5020, fb_tmp_515["$SCOPE"]
    set $P5022, $P5020
    goto if2626_end5997
  if2626_else5996:
    null $P5021
    set $P5022, $P5021
  if2626_end5997:
    unless_null $P5022, vivi_26275998
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_26275998:
    unless_null $P5022, vivi_26285999
    die "Contextual $*SCOPE not found"
    box $P5024, "Contextual $*SCOPE not found"
    set $P5022, $P5024
  vivi_26285999:
    set $P5017, $P5022
  fallback5995:
    set $S5004, $P5017
    iseq $I5003, $S5004, ""
    set $I5007, $I5003
    if $I5003 goto unless2625_end5994 
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback6000
    nqp_get_sc_object $P5027, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5026, $P5027
    set fb_tmp_516, $P5026
    repr_defined $I5006, fb_tmp_516
    unless $I5006 goto if2629_else6001 
    set $P5028, fb_tmp_516["$SCOPE"]
    set $P5030, $P5028
    goto if2629_end6002
  if2629_else6001:
    null $P5029
    set $P5030, $P5029
  if2629_end6002:
    unless_null $P5030, vivi_26306003
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5030, $P5031
  vivi_26306003:
    unless_null $P5030, vivi_26316004
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26316004:
    set $P5025, $P5030
  fallback6000:
    set $S5005, $P5025
    iseq $I5005, $S5005, "my"
    set $I5007, $I5005
  unless2625_end5994:
    set $I5010, $I5007
    if $I5007 goto unless2624_end5992 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback6005
    nqp_get_sc_object $P5035, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5034, $P5035
    set fb_tmp_517, $P5034
    repr_defined $I5009, fb_tmp_517
    unless $I5009 goto if2632_else6006 
    set $P5036, fb_tmp_517["$SCOPE"]
    set $P5038, $P5036
    goto if2632_end6007
  if2632_else6006:
    null $P5037
    set $P5038, $P5037
  if2632_end6007:
    unless_null $P5038, vivi_26336008
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5038, $P5039
  vivi_26336008:
    unless_null $P5038, vivi_26346009
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26346009:
    set $P5033, $P5038
  fallback6005:
    set $S5006, $P5033
    iseq $I5008, $S5006, "our"
    set $I5010, $I5008
  unless2624_end5992:
    unless $I5010 goto if2623_else5989 
.annotate 'line', 2560
    find_dynamic_lex $P5041, "$*MULTINESS"
    unless_null $P5041, fallback6012
    nqp_get_sc_object $P5043, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5042, $P5043
    set fb_tmp_518, $P5042
    repr_defined $I5012, fb_tmp_518
    unless $I5012 goto if2636_else6013 
    set $P5044, fb_tmp_518["$MULTINESS"]
    set $P5046, $P5044
    goto if2636_end6014
  if2636_else6013:
    null $P5045
    set $P5046, $P5045
  if2636_end6014:
    unless_null $P5046, vivi_26376015
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5046, $P5047
  vivi_26376015:
    unless_null $P5046, vivi_26386016
    die "Contextual $*MULTINESS not found"
    box $P5048, "Contextual $*MULTINESS not found"
    set $P5046, $P5048
  vivi_26386016:
    set $P5041, $P5046
  fallback6012:
    set $S5007, $P5041
    iseq $I5011, $S5007, "multi"
    unless $I5011 goto if2635_else6010 
    .const 'Sub' $P5049 = 'cuid_499_1382959278.72036' 
    capture_lex $P5049
    $P5050 = $P5049()
    goto if2635_end6011
  if2635_else6010:
    find_dynamic_lex $P5051, "$*MULTINESS"
    unless_null $P5051, fallback6072
    nqp_get_sc_object $P5053, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5052, $P5053
    set fb_tmp_529, $P5052
    repr_defined $I5014, fb_tmp_529
    unless $I5014 goto if2670_else6073 
    set $P5054, fb_tmp_529["$MULTINESS"]
    set $P5056, $P5054
    goto if2670_end6074
  if2670_else6073:
    null $P5055
    set $P5056, $P5055
  if2670_end6074:
    unless_null $P5056, vivi_26716075
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5056, $P5057
  vivi_26716075:
    unless_null $P5056, vivi_26726076
    die "Contextual $*MULTINESS not found"
    box $P5058, "Contextual $*MULTINESS not found"
    set $P5056, $P5058
  vivi_26726076:
    set $P5051, $P5056
  fallback6072:
    set $S5008, $P5051
    iseq $I5013, $S5008, "proto"
    unless $I5013 goto if2669_else6070 
    .const 'Sub' $P5059 = 'cuid_501_1382959278.72036' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if2669_end6071
  if2669_else6070:
    .const 'Sub' $P5061 = 'cuid_502_1382959278.72036' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if2669_end6071:
  if2635_end6011:
.annotate 'line', 2663
    nqp_get_sc_object $P5064, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5065 = $P5064."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5065
    goto if2623_end5990
  if2623_else5989:
.annotate 'line', 2665
.annotate 'line', 2666
    find_lex $P5066, "$/"
    $P5067 = $P5066."CURSOR"()
    find_dynamic_lex $P5068, "$*SCOPE"
    unless_null $P5068, fallback6136
    nqp_get_sc_object $P5070, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5069, $P5070
    set fb_tmp_543, $P5069
    repr_defined $I5015, fb_tmp_543
    unless $I5015 goto if2709_else6137 
    set $P5071, fb_tmp_543["$SCOPE"]
    set $P5073, $P5071
    goto if2709_end6138
  if2709_else6137:
    null $P5072
    set $P5073, $P5072
  if2709_end6138:
    unless_null $P5073, vivi_27106139
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5073, $P5074
  vivi_27106139:
    unless_null $P5073, vivi_27116140
    die "Contextual $*SCOPE not found"
    box $P5075, "Contextual $*SCOPE not found"
    set $P5073, $P5075
  vivi_27116140:
    set $P5068, $P5073
  fallback6136:
    set $S5012, $P5068
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5076 = $P5067."panic"($S5011)
  if2623_end5990:
    set $S5013, $P101
    iseq $I5016, $S5013, "MAIN"
    set $I5019, $I5016
    unless $I5016 goto if2713_end6144 
    find_dynamic_lex $P5077, "$*MULTINESS"
    unless_null $P5077, fallback6145
    nqp_get_sc_object $P5079, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5078, $P5079
    set fb_tmp_544, $P5078
    repr_defined $I5018, fb_tmp_544
    unless $I5018 goto if2714_else6146 
    set $P5080, fb_tmp_544["$MULTINESS"]
    set $P5082, $P5080
    goto if2714_end6147
  if2714_else6146:
    null $P5081
    set $P5082, $P5081
  if2714_end6147:
    unless_null $P5082, vivi_27156148
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_27156148:
    unless_null $P5082, vivi_27166149
    die "Contextual $*MULTINESS not found"
    box $P5084, "Contextual $*MULTINESS not found"
    set $P5082, $P5084
  vivi_27166149:
    set $P5077, $P5082
  fallback6145:
    set $S5014, $P5077
    isne $I5017, $S5014, "multi"
    set $I5019, $I5017
  if2713_end6144:
    box $P5087, $I5019
    set $P5086, $P5087
    unless $I5019 goto if2712_end6142 
.annotate 'line', 2670
    find_lex $P5085, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5085
    set $P5086, $P5085
  if2712_end6142:
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1382959278.72036") :anon :lex :outer("cuid_500_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2561
    .const 'Sub' $P5063 = 'cuid_498_1382959278.72036' 
    capture_lex $P5063 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback6019
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5006, $P5007
    set fb_tmp_519, $P5006
    repr_defined $I5002, fb_tmp_519
    unless $I5002 goto if2640_else6020 
    set $P5008, fb_tmp_519["$SCOPE"]
    set $P5010, $P5008
    goto if2640_end6021
  if2640_else6020:
    null $P5009
    set $P5010, $P5009
  if2640_end6021:
    unless_null $P5010, vivi_26416022
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_26416022:
    unless_null $P5010, vivi_26426023
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26426023:
    set $P5005, $P5010
  fallback6019:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2639_end6018 
.annotate 'line', 2563
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2639_end6018:
.annotate 'line', 2565
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback6024
    nqp_get_sc_object $P5016, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5015, $P5016
    set fb_tmp_520, $P5015
    repr_defined $I5003, fb_tmp_520
    unless $I5003 goto if2643_else6025 
    set $P5017, fb_tmp_520["$W"]
    set $P5019, $P5017
    goto if2643_end6026
  if2643_else6025:
    null $P5018
    set $P5019, $P5018
  if2643_end6026:
    unless_null $P5019, vivi_26446027
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_26446027:
    unless_null $P5019, vivi_26456028
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26456028:
    set $P5014, $P5019
  fallback6024:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_521, $P102
    repr_defined $I5004, fb_tmp_521
    unless $I5004 goto if2647_else6031 
    set $P5025, fb_tmp_521["proto"]
    set $P5027, $P5025
    goto if2647_end6032
  if2647_else6031:
    null $P5026
    set $P5027, $P5026
  if2647_end6032:
    unless_null $P5027, vivi_26486033
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5027, $P5028
  vivi_26486033:
    unless $P5027 goto if2646_else6029 
.annotate 'line', 2566
    set fb_tmp_522, $P102
    repr_defined $I5005, fb_tmp_522
    unless $I5005 goto if2649_else6034 
    set $P5029, fb_tmp_522["value"]
    set $P5031, $P5029
    goto if2649_end6035
  if2649_else6034:
    null $P5030
    set $P5031, $P5030
  if2649_end6035:
    unless_null $P5031, vivi_26506036
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_26506036:
    set $P101, $P5031
    goto if2646_end6030
  if2646_else6029:
    .const 'Sub' $P5033 = 'cuid_498_1382959278.72036' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2646_end6030:
.annotate 'line', 2595
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback6057
    nqp_get_sc_object $P5037, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5036, $P5037
    set fb_tmp_526, $P5036
    repr_defined $I5006, fb_tmp_526
    unless $I5006 goto if2661_else6058 
    set $P5038, fb_tmp_526["$W"]
    set $P5040, $P5038
    goto if2661_end6059
  if2661_else6058:
    null $P5039
    set $P5040, $P5039
  if2661_end6059:
    unless_null $P5040, vivi_26626060
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5041
  vivi_26626060:
    unless_null $P5040, vivi_26636061
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26636061:
    set $P5035, $P5040
  fallback6057:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2596
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2599
    $P101."add_dispatchee"($P103)
.annotate 'line', 2605
    find_lex $P5047, "$past"
    $P5047."blocktype"("declaration_static")
.annotate 'line', 2606
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback6062
    nqp_get_sc_object $P5050, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5049, $P5050
    set fb_tmp_527, $P5049
    repr_defined $I5007, fb_tmp_527
    unless $I5007 goto if2664_else6063 
    set $P5051, fb_tmp_527["$W"]
    set $P5053, $P5051
    goto if2664_end6064
  if2664_else6063:
    null $P5052
    set $P5053, $P5052
  if2664_end6064:
    unless_null $P5053, vivi_26656065
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5053, $P5054
  vivi_26656065:
    unless_null $P5053, vivi_26666066
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_26666066:
    set $P5048, $P5053
  fallback6062:
    $P5056 = $P5048."cur_lexpad"()
    set $P104, $P5056
.annotate 'line', 2607
    set fb_tmp_528, $P104
    repr_defined $I5008, fb_tmp_528
    unless $I5008 goto if2667_else6067 
    set $P5057, fb_tmp_528[0]
    set $P5059, $P5057
    goto if2667_end6068
  if2667_else6067:
    null $P5058
    set $P5059, $P5058
  if2667_end6068:
    unless_null $P5059, vivi_26686069
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5059, $P5060
  vivi_26686069:
    find_lex $P5061, "$past"
    $P5062 = $P5059."push"($P5061)
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1382959278.72036") :anon :lex :outer("cuid_499_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2571
    .const 'Sub' $P5020 = 'cuid_497_1382959278.72036' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_523 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2574
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback6037
    nqp_get_sc_object $P5007, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5006, $P5007
    set fb_tmp_523, $P5006
    repr_defined $I5001, fb_tmp_523
    unless $I5001 goto if2651_else6038 
    set $P5008, fb_tmp_523["$W"]
    set $P5010, $P5008
    goto if2651_end6039
  if2651_else6038:
    null $P5009
    set $P5010, $P5009
  if2651_end6039:
    unless_null $P5010, vivi_26526040
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_26526040:
    unless_null $P5010, vivi_26536041
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26536041:
    set $P5005, $P5010
  fallback6037:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next6052:
    unless $P5004, for_done6054
    shift $P5015, $P5004
  for_redo6053:
    .const 'Sub' $P5014 = 'cuid_497_1382959278.72036' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next6052
  for_done6054:
    if $P101 goto unless2660_end6056 
.annotate 'line', 2586
.annotate 'line', 2587
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2660_end6056:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1382959278.72036") :anon :lex :outer("cuid_498_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2574
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2575
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_524, $P101
    repr_defined $I5001, fb_tmp_524
    unless $I5001 goto if2655_else6044 
    set $P5004, fb_tmp_524["proto"]
    set $P5006, $P5004
    goto if2655_end6045
  if2655_else6044:
    null $P5005
    set $P5006, $P5005
  if2655_end6045:
    unless_null $P5006, vivi_26566046
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_26566046:
    unless $P5006 goto if2654_else6042 
.annotate 'line', 2576
    set fb_tmp_525, $P101
    repr_defined $I5002, fb_tmp_525
    unless $I5002 goto if2657_else6047 
    set $P5008, fb_tmp_525["value"]
    set $P5010, $P5008
    goto if2657_end6048
  if2657_else6047:
    null $P5009
    set $P5010, $P5009
  if2657_end6048:
    unless_null $P5010, vivi_26586049
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_26586049:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2654_end6043
  if2654_else6042:
    set $P5016, $P101
    unless $P101 goto if2659_end6051 
.annotate 'line', 2580
.annotate 'line', 2581
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2659_end6051:
    set $P5017, $P5016
  if2654_end6043:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1382959278.72036") :anon :lex :outer("cuid_500_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2609
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback6079
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_530, $P5004
    repr_defined $I5002, fb_tmp_530
    unless $I5002 goto if2674_else6080 
    set $P5006, fb_tmp_530["$SCOPE"]
    set $P5008, $P5006
    goto if2674_end6081
  if2674_else6080:
    null $P5007
    set $P5008, $P5007
  if2674_end6081:
    unless_null $P5008, vivi_26756082
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_26756082:
    unless_null $P5008, vivi_26766083
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26766083:
    set $P5003, $P5008
  fallback6079:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2673_end6078 
.annotate 'line', 2613
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2673_end6078:
.annotate 'line', 2614
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback6084
    nqp_get_sc_object $P5014, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5013, $P5014
    set fb_tmp_531, $P5013
    repr_defined $I5003, fb_tmp_531
    unless $I5003 goto if2677_else6085 
    set $P5015, fb_tmp_531["$W"]
    set $P5017, $P5015
    goto if2677_end6086
  if2677_else6085:
    null $P5016
    set $P5017, $P5016
  if2677_end6086:
    unless_null $P5017, vivi_26786087
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_26786087:
    unless_null $P5017, vivi_26796088
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26796088:
    set $P5012, $P5017
  fallback6084:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2615
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback6089
    nqp_get_sc_object $P5025, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5024, $P5025
    set fb_tmp_532, $P5024
    repr_defined $I5004, fb_tmp_532
    unless $I5004 goto if2680_else6090 
    set $P5026, fb_tmp_532["$W"]
    set $P5028, $P5026
    goto if2680_end6091
  if2680_else6090:
    null $P5027
    set $P5028, $P5027
  if2680_end6091:
    unless_null $P5028, vivi_26816092
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_26816092:
    unless_null $P5028, vivi_26826093
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26826093:
    set $P5023, $P5028
  fallback6089:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2616
    set fb_tmp_533, $P102
    repr_defined $I5005, fb_tmp_533
    unless $I5005 goto if2683_else6094 
    set $P5032, fb_tmp_533[0]
    set $P5034, $P5032
    goto if2683_end6095
  if2683_else6094:
    null $P5033
    set $P5034, $P5033
  if2683_end6095:
    unless_null $P5034, vivi_26846096
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  vivi_26846096:
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2618
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2621
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2625
    find_lex $P5043, "$block"
    set fb_tmp_534, $P5043
    repr_defined $I5006, fb_tmp_534
    unless $I5006 goto if2685_else6097 
    set $P5044, fb_tmp_534[0]
    set $P5046, $P5044
    goto if2685_end6098
  if2685_else6097:
    null $P5045
    set $P5046, $P5045
  if2685_end6098:
    unless_null $P5046, vivi_26866099
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5046, $P5047
  vivi_26866099:
    nqp_get_sc_object $P5048, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2627
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2628
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2630
    find_lex $P5054, "$block"
    set fb_tmp_535, $P5054
    repr_defined $I5007, fb_tmp_535
    unless $I5007 goto if2687_else6100 
    set $P5055, fb_tmp_535[0]
    set $P5057, $P5055
    goto if2687_end6101
  if2687_else6100:
    null $P5056
    set $P5057, $P5056
  if2687_end6101:
    unless_null $P5057, vivi_26886102
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5057, $P5058
  vivi_26886102:
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2632
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2633
    nqp_get_sc_object $P5062, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5063, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1382959278.72036") :anon :lex :outer("cuid_500_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2636
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2637
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6103
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_536, $P5003
    repr_defined $I5001, fb_tmp_536
    unless $I5001 goto if2689_else6104 
    set $P5005, fb_tmp_536["$W"]
    set $P5007, $P5005
    goto if2689_end6105
  if2689_else6104:
    null $P5006
    set $P5007, $P5006
  if2689_end6105:
    unless_null $P5007, vivi_26906106
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_26906106:
    unless_null $P5007, vivi_26916107
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26916107:
    set $P5002, $P5007
  fallback6103:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2638
    set fb_tmp_537, $P101
    repr_defined $I5002, fb_tmp_537
    unless $I5002 goto if2692_else6108 
    set $P5011, fb_tmp_537[0]
    set $P5013, $P5011
    goto if2692_end6109
  if2692_else6108:
    null $P5012
    set $P5013, $P5012
  if2692_end6109:
    unless_null $P5013, vivi_26936110
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_26936110:
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2640
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2643
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback6113
    nqp_get_sc_object $P5024, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5023, $P5024
    set fb_tmp_538, $P5023
    repr_defined $I5004, fb_tmp_538
    unless $I5004 goto if2695_else6114 
    set $P5025, fb_tmp_538["$SCOPE"]
    set $P5027, $P5025
    goto if2695_end6115
  if2695_else6114:
    null $P5026
    set $P5027, $P5026
  if2695_end6115:
    unless_null $P5027, vivi_26966116
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5027, $P5028
  vivi_26966116:
    unless_null $P5027, vivi_26976117
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_26976117:
    set $P5022, $P5027
  fallback6113:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5074, $I5003
    set $P5073, $P5074
    unless $I5003 goto if2694_end6112 
.annotate 'line', 2644
.annotate 'line', 2647
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback6118
    nqp_get_sc_object $P5032, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5031, $P5032
    set fb_tmp_539, $P5031
    repr_defined $I5005, fb_tmp_539
    unless $I5005 goto if2698_else6119 
    set $P5033, fb_tmp_539["$W"]
    set $P5035, $P5033
    goto if2698_end6120
  if2698_else6119:
    null $P5034
    set $P5035, $P5034
  if2698_end6120:
    unless_null $P5035, vivi_26996121
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5035, $P5036
  vivi_26996121:
    unless_null $P5035, vivi_27006122
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_27006122:
    set $P5030, $P5035
  fallback6118:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback6123
    nqp_get_sc_object $P5040, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5039, $P5040
    set fb_tmp_540, $P5039
    repr_defined $I5006, fb_tmp_540
    unless $I5006 goto if2701_else6124 
    set $P5041, fb_tmp_540["$PACKAGE"]
    set $P5043, $P5041
    goto if2701_end6125
  if2701_else6124:
    null $P5042
    set $P5043, $P5042
  if2701_end6125:
    unless_null $P5043, vivi_27026126
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5043, $P5044
  vivi_27026126:
    unless_null $P5043, vivi_27036127
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_27036127:
    set $P5038, $P5043
  fallback6123:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2648
    set fb_tmp_541, $P101
    repr_defined $I5007, fb_tmp_541
    unless $I5007 goto if2704_else6128 
    set $P5048, fb_tmp_541[0]
    set $P5050, $P5048
    goto if2704_end6129
  if2704_else6128:
    null $P5049
    set $P5050, $P5049
  if2704_end6129:
    unless_null $P5050, vivi_27056130
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5050, $P5051
  vivi_27056130:
    nqp_get_sc_object $P5052, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2650
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2651
    nqp_get_sc_object $P5057, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5050."push"($P5060)
.annotate 'line', 2656
    find_lex $P5061, "$past"
    $P5061."blocktype"("declaration_static")
.annotate 'line', 2660
    find_dynamic_lex $P5062, "$*W"
    unless_null $P5062, fallback6131
    nqp_get_sc_object $P5064, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5063, $P5064
    set fb_tmp_542, $P5063
    repr_defined $I5008, fb_tmp_542
    unless $I5008 goto if2706_else6132 
    set $P5065, fb_tmp_542["$W"]
    set $P5067, $P5065
    goto if2706_end6133
  if2706_else6132:
    null $P5066
    set $P5067, $P5066
  if2706_end6133:
    unless_null $P5067, vivi_27076134
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5067, $P5068
  vivi_27076134:
    unless_null $P5067, vivi_27086135
    die "Contextual $*W not found"
    box $P5069, "Contextual $*W not found"
    set $P5067, $P5069
  vivi_27086135:
    set $P5062, $P5067
  fallback6131:
    find_lex $P5070, "$past"
    find_lex $P5071, "$name"
    $P5072 = $P5062."create_code"($P5070, $P5071, 0)
    set $P5073, $P5072
  if2694_end6112:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1382959278.72036") :anon :lex :outer("cuid_308_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2687
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_309_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2691
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5113 = 'cuid_504_1382959278.72036' 
    capture_lex $P5113 
    .const 'Sub' $P5113 = 'cuid_505_1382959278.72036' 
    capture_lex $P5113 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6179
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5004
  fallback6179:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5001, fb_tmp_549
    unless $I5001 goto if2730_else6177 
    set $P5005, fb_tmp_549["onlystar"]
    set $P5007, $P5005
    goto if2730_end6178
  if2730_else6177:
    null $P5006
    set $P5007, $P5006
  if2730_end6178:
    unless_null $P5007, vivi_27316180
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_27316180:
    unless $P5007 goto if2729_else6175 
.annotate 'line', 2695
.annotate 'line', 2696
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2729_end6176
  if2729_else6175:
.annotate 'line', 2698
.annotate 'line', 2699
    unless_null _lex_param_1, fallback6183
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5010
  fallback6183:
    set fb_tmp_550, _lex_param_1
    repr_defined $I5002, fb_tmp_550
    unless $I5002 goto if2732_else6181 
    set $P5011, fb_tmp_550["blockoid"]
    set $P5013, $P5011
    goto if2732_end6182
  if2732_else6181:
    null $P5012
    set $P5013, $P5012
  if2732_end6182:
    unless_null $P5013, vivi_27336184
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_27336184:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback6187
    nqp_get_sc_object $P5018, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5017, $P5018
    set fb_tmp_551, $P5017
    repr_defined $I5003, fb_tmp_551
    unless $I5003 goto if2735_else6188 
    set $P5019, fb_tmp_551["$RETURN_USED"]
    set $P5021, $P5019
    goto if2735_end6189
  if2735_else6188:
    null $P5020
    set $P5021, $P5020
  if2735_end6189:
    unless_null $P5021, vivi_27366190
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_27366190:
    unless_null $P5021, vivi_27376191
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27376191:
    set $P5016, $P5021
  fallback6187:
    set $P5029, $P5016
    unless $P5016 goto if2734_end6186 
.annotate 'line', 2700
.annotate 'line', 2701
    set fb_tmp_552, $P101
    repr_defined $I5004, fb_tmp_552
    unless $I5004 goto if2738_else6192 
    set $P5024, fb_tmp_552[1]
    set $P5026, $P5024
    goto if2738_end6193
  if2738_else6192:
    null $P5025
    set $P5026, $P5025
  if2738_end6193:
    unless_null $P5026, vivi_27396194
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_27396194:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2734_end6186:
  if2729_end6176:
.annotate 'line', 2704
    $P101."blocktype"("declaration_static")
    set fb_tmp_553, $P101
    repr_defined $I5005, fb_tmp_553
    unless $I5005 goto if2741_else6197 
    set $P5030, fb_tmp_553["signature_has_invocant"]
    set $P5032, $P5030
    goto if2741_end6198
  if2741_else6197:
    null $P5031
    set $P5032, $P5031
  if2741_end6198:
    unless_null $P5032, vivi_27426199
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5032, $P5033
  vivi_27426199:
    if $P5032 goto unless2740_end6196 
.annotate 'line', 2707
.annotate 'line', 2708
    set fb_tmp_554, $P101
    repr_defined $I5006, fb_tmp_554
    unless $I5006 goto if2743_else6200 
    set $P5034, fb_tmp_554[0]
    set $P5036, $P5034
    goto if2743_end6201
  if2743_else6200:
    null $P5035
    set $P5036, $P5035
  if2743_end6201:
    unless_null $P5036, vivi_27446202
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5036, $P5037
  vivi_27446202:
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback6203
    nqp_get_sc_object $P5041, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5040, $P5041
    set fb_tmp_555, $P5040
    repr_defined $I5007, fb_tmp_555
    unless $I5007 goto if2745_else6204 
    set $P5042, fb_tmp_555["$PACKAGE"]
    set $P5044, $P5042
    goto if2745_end6205
  if2745_else6204:
    null $P5043
    set $P5044, $P5043
  if2745_end6205:
    unless_null $P5044, vivi_27466206
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5044, $P5045
  vivi_27466206:
    unless_null $P5044, vivi_27476207
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27476207:
    set $P5039, $P5044
  fallback6203:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2740_end6196:
.annotate 'line', 2713
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback6212
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5050
  fallback6212:
    set fb_tmp_556, _lex_param_1
    repr_defined $I5008, fb_tmp_556
    unless $I5008 goto if2749_else6210 
    set $P5051, fb_tmp_556["deflongname"]
    set $P5053, $P5051
    goto if2749_end6211
  if2749_else6210:
    null $P5052
    set $P5053, $P5052
  if2749_end6211:
    unless_null $P5053, vivi_27506213
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5053, $P5054
  vivi_27506213:
    unless $P5053 goto if2748_else6208 
.annotate 'line', 2717
    unless_null _lex_param_1, fallback6216
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5055
  fallback6216:
    set fb_tmp_557, _lex_param_1
    repr_defined $I5009, fb_tmp_557
    unless $I5009 goto if2751_else6214 
    set $P5056, fb_tmp_557["private"]
    set $P5058, $P5056
    goto if2751_end6215
  if2751_else6214:
    null $P5057
    set $P5058, $P5057
  if2751_end6215:
    unless_null $P5058, vivi_27526217
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5058, $P5059
  vivi_27526217:
    set $S5002, $P5058
.annotate 'line', 2718
    unless_null _lex_param_1, fallback6220
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5060
  fallback6220:
    set fb_tmp_558, _lex_param_1
    repr_defined $I5010, fb_tmp_558
    unless $I5010 goto if2753_else6218 
    set $P5061, fb_tmp_558["deflongname"]
    set $P5063, $P5061
    goto if2753_end6219
  if2753_else6218:
    null $P5062
    set $P5063, $P5062
  if2753_end6219:
    unless_null $P5063, vivi_27546221
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5063, $P5064
  vivi_27546221:
    $P5065 = $P5063."ast"()
    set $S5003, $P5065
    concat $S5001, $S5002, $S5003
    box $P5066, $S5001
    set $P102, $P5066
    goto if2748_end6209
  if2748_else6208:
    unless_null _lex_param_1, fallback6226
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5067
  fallback6226:
    set fb_tmp_559, _lex_param_1
    repr_defined $I5011, fb_tmp_559
    unless $I5011 goto if2756_else6224 
    set $P5068, fb_tmp_559["latename"]
    set $P5070, $P5068
    goto if2756_end6225
  if2756_else6224:
    null $P5069
    set $P5070, $P5069
  if2756_end6225:
    unless_null $P5070, vivi_27576227
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5070, $P5071
  vivi_27576227:
    set $P5088, $P5070
    unless $P5070 goto if2755_end6223 
.annotate 'line', 2720
    find_dynamic_lex $P5072, "$*PKGDECL"
    unless_null $P5072, fallback6230
    nqp_get_sc_object $P5074, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5073, $P5074
    set fb_tmp_560, $P5073
    repr_defined $I5013, fb_tmp_560
    unless $I5013 goto if2759_else6231 
    set $P5075, fb_tmp_560["$PKGDECL"]
    set $P5077, $P5075
    goto if2759_end6232
  if2759_else6231:
    null $P5076
    set $P5077, $P5076
  if2759_end6232:
    unless_null $P5077, vivi_27606233
    nqp_get_sc_object $P5078, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5077, $P5078
  vivi_27606233:
    unless_null $P5077, vivi_27616234
    die "Contextual $*PKGDECL not found"
    box $P5079, "Contextual $*PKGDECL not found"
    set $P5077, $P5079
  vivi_27616234:
    set $P5072, $P5077
  fallback6230:
    set $S5004, $P5072
    isne $I5012, $S5004, "role"
    unless $I5012 goto if2758_end6229 
.annotate 'line', 2721
.annotate 'line', 2722
    $P5080 = _lex_param_1."CURSOR"()
    $P5081 = $P5080."panic"("Late-bound method name only valid in role")
  if2758_end6229:
    unless_null _lex_param_1, fallback6237
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5082
  fallback6237:
    set fb_tmp_561, _lex_param_1
    repr_defined $I5014, fb_tmp_561
    unless $I5014 goto if2762_else6235 
    set $P5083, fb_tmp_561["latename"]
    set $P5085, $P5083
    goto if2762_end6236
  if2762_else6235:
    null $P5084
    set $P5085, $P5084
  if2762_end6236:
    unless_null $P5085, vivi_27636238
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5085, $P5086
  vivi_27636238:
    set $S5006, $P5085
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5087, $S5005
    set $P102, $P5087
    set $P5088, $P102
  if2755_end6223:
  if2748_end6209:
    set $S5007, $P102
    isne $I5015, $S5007, ""
    unless $I5015 goto if2764_end6240 
    .const 'Sub' $P5089 = 'cuid_504_1382959278.72036' 
    capture_lex $P5089
    $P5090 = $P5089()
  if2764_end6240:
.annotate 'line', 2760
    nqp_get_sc_object $P5091, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5092 = $P5091."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5092
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_573, $P101
    repr_defined $I5016, fb_tmp_573
    unless $I5016 goto if2800_else6300 
    set $P5093, fb_tmp_573["code_obj"]
    set $P5095, $P5093
    goto if2800_end6301
  if2800_else6300:
    null $P5094
    set $P5095, $P5094
  if2800_end6301:
    unless_null $P5095, vivi_28016302
    nqp_get_sc_object $P5096, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5095, $P5096
  vivi_28016302:
    set $P103["code_obj"], $P5095
.annotate 'line', 2764
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6307
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5097
  fallback6307:
    set fb_tmp_574, _lex_param_1
    repr_defined $I5017, fb_tmp_574
    unless $I5017 goto if2803_else6305 
    set $P5098, fb_tmp_574["trait"]
    set $P5100, $P5098
    goto if2803_end6306
  if2803_else6305:
    null $P5099
    set $P5100, $P5099
  if2803_end6306:
    unless_null $P5100, vivi_28046308
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5100, $P5101
  vivi_28046308:
    set $P5112, $P5100
    unless $P5100 goto if2802_end6304 
.annotate 'line', 2765
    unless_null _lex_param_1, fallback6311
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5105
  fallback6311:
    set fb_tmp_575, _lex_param_1
    repr_defined $I5018, fb_tmp_575
    unless $I5018 goto if2805_else6309 
    set $P5106, fb_tmp_575["trait"]
    set $P5108, $P5106
    goto if2805_end6310
  if2805_else6309:
    null $P5107
    set $P5108, $P5107
  if2805_end6310:
    unless_null $P5108, vivi_28066312
    nqp_get_sc_object $P5109, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5108, $P5109
  vivi_28066312:
    set $P5102, $P5108
    iter $P5104, $P5108
  for_next6313:
    unless $P5104, for_done6315
    shift $P5111, $P5104
  for_redo6314:
    .const 'Sub' $P5110 = 'cuid_505_1382959278.72036' 
    capture_lex $P5110
    $P5102 = $P5110($P5111)
    goto for_next6313
  for_done6315:
    set $P5112, $P5102
  if2802_end6304:
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1382959278.72036") :anon :lex :outer("cuid_309_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2726
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 2728
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6243
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5007, $P5008
    set fb_tmp_562, $P5007
    repr_defined $I5002, fb_tmp_562
    unless $I5002 goto if2766_else6244 
    set $P5009, fb_tmp_562["$MULTINESS"]
    set $P5011, $P5009
    goto if2766_end6245
  if2766_else6244:
    null $P5010
    set $P5011, $P5010
  if2766_end6245:
    unless_null $P5011, vivi_27676246
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_27676246:
    unless_null $P5011, vivi_27686247
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27686247:
    set $P5006, $P5011
  fallback6243:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2765_else6241 
    set $S5002, "add_multi_method"
    goto if2765_end6242
  if2765_else6241:
    set $S5002, "add_method"
  if2765_end6242:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6248
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5016, $P5017
    set fb_tmp_563, $P5016
    repr_defined $I5004, fb_tmp_563
    unless $I5004 goto if2769_else6249 
    set $P5018, fb_tmp_563["$MULTINESS"]
    set $P5020, $P5018
    goto if2769_end6250
  if2769_else6249:
    null $P5019
    set $P5020, $P5019
  if2769_end6250:
    unless_null $P5020, vivi_27706251
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_27706251:
    unless_null $P5020, vivi_27716252
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27716252:
    set $P5015, $P5020
  fallback6248:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2733
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6253
    nqp_get_sc_object $P5026, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5025, $P5026
    set fb_tmp_564, $P5025
    repr_defined $I5005, fb_tmp_564
    unless $I5005 goto if2772_else6254 
    set $P5027, fb_tmp_564["$W"]
    set $P5029, $P5027
    goto if2772_end6255
  if2772_else6254:
    null $P5028
    set $P5029, $P5028
  if2772_end6255:
    unless_null $P5029, vivi_27736256
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5029, $P5030
  vivi_27736256:
    unless_null $P5029, vivi_27746257
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27746257:
    set $P5024, $P5029
  fallback6253:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6260
    nqp_get_sc_object $P5037, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5036, $P5037
    set fb_tmp_565, $P5036
    repr_defined $I5007, fb_tmp_565
    unless $I5007 goto if2776_else6261 
    set $P5038, fb_tmp_565["$MULTINESS"]
    set $P5040, $P5038
    goto if2776_end6262
  if2776_else6261:
    null $P5039
    set $P5040, $P5039
  if2776_end6262:
    unless_null $P5040, vivi_27776263
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5041
  vivi_27776263:
    unless_null $P5040, vivi_27786264
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27786264:
    set $P5035, $P5040
  fallback6260:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2775_end6259 
.annotate 'line', 2734
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2775_end6259:
.annotate 'line', 2735
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6265
    nqp_get_sc_object $P5047, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5046, $P5047
    set fb_tmp_566, $P5046
    repr_defined $I5008, fb_tmp_566
    unless $I5008 goto if2779_else6266 
    set $P5048, fb_tmp_566["$W"]
    set $P5050, $P5048
    goto if2779_end6267
  if2779_else6266:
    null $P5049
    set $P5050, $P5049
  if2779_end6267:
    unless_null $P5050, vivi_27806268
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5050, $P5051
  vivi_27806268:
    unless_null $P5050, vivi_27816269
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27816269:
    set $P5045, $P5050
  fallback6265:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6270
    nqp_get_sc_object $P5055, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5054, $P5055
    set fb_tmp_567, $P5054
    repr_defined $I5009, fb_tmp_567
    unless $I5009 goto if2782_else6271 
    set $P5056, fb_tmp_567["$PACKAGE"]
    set $P5058, $P5056
    goto if2782_end6272
  if2782_else6271:
    null $P5057
    set $P5058, $P5057
  if2782_end6272:
    unless_null $P5058, vivi_27836273
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5058, $P5059
  vivi_27836273:
    unless_null $P5058, vivi_27846274
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27846274:
    set $P5053, $P5058
  fallback6270:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6277
    nqp_get_sc_object $P5065, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5064, $P5065
    set fb_tmp_568, $P5064
    repr_defined $I5011, fb_tmp_568
    unless $I5011 goto if2786_else6278 
    set $P5066, fb_tmp_568["$SCOPE"]
    set $P5068, $P5066
    goto if2786_end6279
  if2786_else6278:
    null $P5067
    set $P5068, $P5067
  if2786_end6279:
    unless_null $P5068, vivi_27876280
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5068, $P5069
  vivi_27876280:
    unless_null $P5068, vivi_27886281
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27886281:
    set $P5063, $P5068
  fallback6277:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2785_end6276 
.annotate 'line', 2739
.annotate 'line', 2740
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6282
    nqp_get_sc_object $P5073, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5072, $P5073
    set fb_tmp_569, $P5072
    repr_defined $I5012, fb_tmp_569
    unless $I5012 goto if2789_else6283 
    set $P5074, fb_tmp_569["$W"]
    set $P5076, $P5074
    goto if2789_end6284
  if2789_else6283:
    null $P5075
    set $P5076, $P5075
  if2789_end6284:
    unless_null $P5076, vivi_27906285
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5076, $P5077
  vivi_27906285:
    unless_null $P5076, vivi_27916286
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_27916286:
    set $P5071, $P5076
  fallback6282:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6287
    nqp_get_sc_object $P5081, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5080, $P5081
    set fb_tmp_570, $P5080
    repr_defined $I5013, fb_tmp_570
    unless $I5013 goto if2792_else6288 
    set $P5082, fb_tmp_570["$PACKAGE"]
    set $P5084, $P5082
    goto if2792_end6289
  if2792_else6288:
    null $P5083
    set $P5084, $P5083
  if2792_end6289:
    unless_null $P5084, vivi_27936290
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5084, $P5085
  vivi_27936290:
    unless_null $P5084, vivi_27946291
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_27946291:
    set $P5079, $P5084
  fallback6287:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2785_end6276:
    set $P5115, $P102
    unless $P102 goto if2795_end6293 
.annotate 'line', 2745
.annotate 'line', 2746
    find_lex $P5090, "$past"
    set fb_tmp_571, $P5090
    repr_defined $I5014, fb_tmp_571
    unless $I5014 goto if2796_else6294 
    set $P5091, fb_tmp_571[0]
    set $P5093, $P5091
    goto if2796_end6295
  if2796_else6294:
    null $P5092
    set $P5093, $P5092
  if2796_end6295:
    unless_null $P5093, vivi_27976296
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5093, $P5094
  vivi_27976296:
    nqp_get_sc_object $P5095, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2748
    nqp_get_sc_object $P5096, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2749
    nqp_get_sc_object $P5098, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2751
    find_lex $P5101, "$past"
    set fb_tmp_572, $P5101
    repr_defined $I5015, fb_tmp_572
    unless $I5015 goto if2798_else6297 
    set $P5102, fb_tmp_572[0]
    set $P5104, $P5102
    goto if2798_end6298
  if2798_else6297:
    null $P5103
    set $P5104, $P5103
  if2798_end6298:
    unless_null $P5104, vivi_27996299
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5104, $P5105
  vivi_27996299:
    nqp_get_sc_object $P5106, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2753
    nqp_get_sc_object $P5107, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2754
    nqp_get_sc_object $P5109, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    nqp_get_sc_object $P5110, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2795_end6293:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1382959278.72036") :anon :lex :outer("cuid_309_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2766
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_310_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2818
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_506_1382959278.72036' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_507_1382959278.72036' 
    capture_lex $P5039 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 2819
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6316
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_576, $P5004
    repr_defined $I5001, fb_tmp_576
    unless $I5001 goto if2807_else6317 
    set $P5006, fb_tmp_576["$W"]
    set $P5008, $P5006
    goto if2807_end6318
  if2807_else6317:
    null $P5007
    set $P5008, $P5007
  if2807_end6318:
    unless_null $P5008, vivi_28086319
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_28086319:
    unless_null $P5008, vivi_28096320
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_28096320:
    set $P5003, $P5008
  fallback6316:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_577, $P101
    repr_defined $I5002, fb_tmp_577
    unless $I5002 goto if2810_else6321 
    set $P5012, fb_tmp_577[0]
    set $P5014, $P5012
    goto if2810_end6322
  if2810_else6321:
    null $P5013
    set $P5014, $P5013
  if2810_end6322:
    unless_null $P5014, vivi_28116323
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_28116323:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6328
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5016
  fallback6328:
    set fb_tmp_578, _lex_param_1
    repr_defined $I5003, fb_tmp_578
    unless $I5003 goto if2813_else6326 
    set $P5017, fb_tmp_578["invocant"]
    set $P5019, $P5017
    goto if2813_end6327
  if2813_else6326:
    null $P5018
    set $P5019, $P5018
  if2813_end6327:
    unless_null $P5019, vivi_28146329
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_28146329:
    unless $P5019 goto if2812_end6325 
    .const 'Sub' $P5021 = 'cuid_506_1382959278.72036' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2812_end6325:
    unless_null _lex_param_1, fallback6338
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5023
  fallback6338:
    set fb_tmp_580, _lex_param_1
    repr_defined $I5004, fb_tmp_580
    unless $I5004 goto if2818_else6336 
    set $P5024, fb_tmp_580["parameter"]
    set $P5026, $P5024
    goto if2818_end6337
  if2818_else6336:
    null $P5025
    set $P5026, $P5025
  if2818_end6337:
    unless_null $P5026, vivi_28196339
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_28196339:
    set $P5038, $P5026
    unless $P5026 goto if2817_end6335 
.annotate 'line', 2831
    unless_null _lex_param_1, fallback6342
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5031
  fallback6342:
    set fb_tmp_581, _lex_param_1
    repr_defined $I5005, fb_tmp_581
    unless $I5005 goto if2820_else6340 
    set $P5032, fb_tmp_581["parameter"]
    set $P5034, $P5032
    goto if2820_end6341
  if2820_else6340:
    null $P5033
    set $P5034, $P5033
  if2820_end6341:
    unless_null $P5034, vivi_28216343
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  vivi_28216343:
    set $P5028, $P5034
    iter $P5030, $P5034
  for_next6344:
    unless $P5030, for_done6346
    shift $P5037, $P5030
  for_redo6345:
    .const 'Sub' $P5036 = 'cuid_507_1382959278.72036' 
    capture_lex $P5036
    $P5028 = $P5036($P5037)
    goto for_next6344
  for_done6346:
    set $P5038, $P5028
  if2817_end6335:
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1382959278.72036") :anon :lex :outer("cuid_310_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2821
    .lex "$inv", $P101 
    .local pmc fb_tmp_579 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2822
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6332
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback6332:
    set fb_tmp_579, $P5002
    repr_defined $I5001, fb_tmp_579
    unless $I5001 goto if2815_else6330 
    set $P5004, fb_tmp_579["invocant"]
    set $P5006, $P5004
    goto if2815_end6331
  if2815_else6330:
    null $P5005
    set $P5006, $P5005
  if2815_end6331:
    unless_null $P5006, vivi_28166333
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_28166333:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2823
    find_lex $P5009, "$BLOCKINIT"
    $P5009."push"($P101)
.annotate 'line', 2824
    find_lex $P5010, "$BLOCKINIT"
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2826
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5013 = $P5012."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2827
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5015 = $P101."name"()
    $P5016 = $P5014."new"("lexical" :named("scope"), $P5015 :named("name"))
    $P5017 = $P5011."new"($P5013, $P5016, "bind" :named("op"))
    $P5010."push"($P5017)
    find_lex $P5018, "$BLOCK"
    box $P5019, 1
    set $P5018["signature_has_invocant"], $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1382959278.72036") :anon :lex :outer("cuid_310_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2832
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_311_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2836
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_509_1382959278.72036' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6349
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback6349:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5001, fb_tmp_582
    unless $I5001 goto if2822_else6347 
    set $P5004, fb_tmp_582["quant"]
    set $P5006, $P5004
    goto if2822_end6348
  if2822_else6347:
    null $P5005
    set $P5006, $P5005
  if2822_end6348:
    unless_null $P5006, vivi_28236350
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_28236350:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6355
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback6355:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5002, fb_tmp_583
    unless $I5002 goto if2825_else6353 
    set $P5009, fb_tmp_583["named_param"]
    set $P5011, $P5009
    goto if2825_end6354
  if2825_else6353:
    null $P5010
    set $P5011, $P5010
  if2825_end6354:
    unless_null $P5011, vivi_28266356
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_28266356:
    unless $P5011 goto if2824_else6351 
.annotate 'line', 2839
.annotate 'line', 2840
    unless_null _lex_param_1, fallback6359
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5013
  fallback6359:
    set fb_tmp_584, _lex_param_1
    repr_defined $I5003, fb_tmp_584
    unless $I5003 goto if2827_else6357 
    set $P5014, fb_tmp_584["named_param"]
    set $P5016, $P5014
    goto if2827_end6358
  if2827_else6357:
    null $P5015
    set $P5016, $P5015
  if2827_end6358:
    unless_null $P5016, vivi_28286360
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_28286360:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2829_end6362 
.annotate 'line', 2841
.annotate 'line', 2842
    unless_null _lex_param_1, fallback6369
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5019
  fallback6369:
    set fb_tmp_587, _lex_param_1
    repr_defined $I5007, fb_tmp_587
    unless $I5007 goto if2832_else6367 
    set $P5020, fb_tmp_587["named_param"]
    set $P5022, $P5020
    goto if2832_end6368
  if2832_else6367:
    null $P5021
    set $P5022, $P5021
  if2832_end6368:
    unless_null $P5022, vivi_28336370
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_28336370:
    set fb_tmp_586, $P5022
    repr_defined $I5006, fb_tmp_586
    unless $I5006 goto if2831_else6365 
    set $P5024, fb_tmp_586["param_var"]
    set $P5026, $P5024
    goto if2831_end6366
  if2831_else6365:
    null $P5025
    set $P5026, $P5025
  if2831_end6366:
    unless_null $P5026, vivi_28346371
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_28346371:
    set fb_tmp_585, $P5026
    repr_defined $I5005, fb_tmp_585
    unless $I5005 goto if2830_else6363 
    set $P5028, fb_tmp_585["sigil"]
    set $P5030, $P5028
    goto if2830_end6364
  if2830_else6363:
    null $P5029
    set $P5030, $P5029
  if2830_end6364:
    unless_null $P5030, vivi_28356372
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5030, $P5031
  vivi_28356372:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2829_end6362:
    goto if2824_end6352
  if2824_else6351:
.annotate 'line', 2845
.annotate 'line', 2846
    unless_null _lex_param_1, fallback6375
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5036
  fallback6375:
    set fb_tmp_588, _lex_param_1
    repr_defined $I5008, fb_tmp_588
    unless $I5008 goto if2836_else6373 
    set $P5037, fb_tmp_588["param_var"]
    set $P5039, $P5037
    goto if2836_end6374
  if2836_else6373:
    null $P5038
    set $P5039, $P5038
  if2836_end6374:
    unless_null $P5039, vivi_28376376
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5039, $P5040
  vivi_28376376:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2838_else6377 
.annotate 'line', 2847
.annotate 'line', 2848
    $P102."slurpy"(1)
.annotate 'line', 2849
    unless_null _lex_param_1, fallback6383
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5042
  fallback6383:
    set fb_tmp_590, _lex_param_1
    repr_defined $I5012, fb_tmp_590
    unless $I5012 goto if2840_else6381 
    set $P5043, fb_tmp_590["param_var"]
    set $P5045, $P5043
    goto if2840_end6382
  if2840_else6381:
    null $P5044
    set $P5045, $P5044
  if2840_end6382:
    unless_null $P5045, vivi_28416384
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  vivi_28416384:
    set fb_tmp_589, $P5045
    repr_defined $I5011, fb_tmp_589
    unless $I5011 goto if2839_else6379 
    set $P5047, fb_tmp_589["sigil"]
    set $P5049, $P5047
    goto if2839_end6380
  if2839_else6379:
    null $P5048
    set $P5049, $P5048
  if2839_end6380:
    unless_null $P5049, vivi_28426385
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_28426385:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2838_end6378
  if2838_else6377:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2843_end6387 
.annotate 'line', 2851
.annotate 'line', 2852
    unless_null _lex_param_1, fallback6392
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5052
  fallback6392:
    set fb_tmp_592, _lex_param_1
    repr_defined $I5015, fb_tmp_592
    unless $I5015 goto if2845_else6390 
    set $P5053, fb_tmp_592["param_var"]
    set $P5055, $P5053
    goto if2845_end6391
  if2845_else6390:
    null $P5054
    set $P5055, $P5054
  if2845_end6391:
    unless_null $P5055, vivi_28466393
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5055, $P5056
  vivi_28466393:
    set fb_tmp_591, $P5055
    repr_defined $I5014, fb_tmp_591
    unless $I5014 goto if2844_else6388 
    set $P5057, fb_tmp_591["sigil"]
    set $P5059, $P5057
    goto if2844_end6389
  if2844_else6388:
    null $P5058
    set $P5059, $P5058
  if2844_end6389:
    unless_null $P5059, vivi_28476394
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5059, $P5060
  vivi_28476394:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2843_end6387:
    set $P5065, $P5063
  if2838_end6378:
  if2824_end6352:
    unless_null _lex_param_1, fallback6399
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5066
  fallback6399:
    set fb_tmp_593, _lex_param_1
    repr_defined $I5016, fb_tmp_593
    unless $I5016 goto if2849_else6397 
    set $P5067, fb_tmp_593["default_value"]
    set $P5069, $P5067
    goto if2849_end6398
  if2849_else6397:
    null $P5068
    set $P5069, $P5068
  if2849_end6398:
    unless_null $P5069, vivi_28506400
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5069, $P5070
  vivi_28506400:
    unless $P5069 goto if2848_end6396 
.annotate 'line', 2855
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2851_end6402 
.annotate 'line', 2856
.annotate 'line', 2857
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2851_end6402:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2852_end6404 
.annotate 'line', 2859
.annotate 'line', 2860
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2852_end6404:
.annotate 'line', 2862
    unless_null _lex_param_1, fallback6411
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5075
  fallback6411:
    set fb_tmp_596, _lex_param_1
    repr_defined $I5021, fb_tmp_596
    unless $I5021 goto if2855_else6409 
    set $P5076, fb_tmp_596["default_value"]
    set $P5078, $P5076
    goto if2855_end6410
  if2855_else6409:
    null $P5077
    set $P5078, $P5077
  if2855_end6410:
    unless_null $P5078, vivi_28566412
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5078, $P5079
  vivi_28566412:
    set fb_tmp_595, $P5078
    repr_defined $I5020, fb_tmp_595
    unless $I5020 goto if2854_else6407 
    set $P5080, fb_tmp_595[0]
    set $P5082, $P5080
    goto if2854_end6408
  if2854_else6407:
    null $P5081
    set $P5082, $P5081
  if2854_end6408:
    unless_null $P5082, vivi_28576413
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5082, $P5083
  vivi_28576413:
    set fb_tmp_594, $P5082
    repr_defined $I5019, fb_tmp_594
    unless $I5019 goto if2853_else6405 
    set $P5084, fb_tmp_594["EXPR"]
    set $P5086, $P5084
    goto if2853_end6406
  if2853_else6405:
    null $P5085
    set $P5086, $P5085
  if2853_end6406:
    unless_null $P5086, vivi_28586414
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5086, $P5087
  vivi_28586414:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2848_end6396:
.annotate 'line', 2864
    $P5090 = $P102."default"()
    if $P5090 goto unless2859_end6416 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6417
    nqp_get_sc_object $P5093, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5092, $P5093
    set fb_tmp_597, $P5092
    repr_defined $I5022, fb_tmp_597
    unless $I5022 goto if2860_else6418 
    set $P5094, fb_tmp_597["$W"]
    set $P5096, $P5094
    goto if2860_end6419
  if2860_else6418:
    null $P5095
    set $P5096, $P5095
  if2860_end6419:
    unless_null $P5096, vivi_28616420
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5096, $P5097
  vivi_28616420:
    unless_null $P5096, vivi_28626421
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28626421:
    set $P5091, $P5096
  fallback6417:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6422
    nqp_get_sc_object $P5102, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5101, $P5102
    set fb_tmp_598, $P5101
    repr_defined $I5023, fb_tmp_598
    unless $I5023 goto if2863_else6423 
    set $P5103, fb_tmp_598["$W"]
    set $P5105, $P5103
    goto if2863_end6424
  if2863_else6423:
    null $P5104
    set $P5105, $P5104
  if2863_end6424:
    unless_null $P5105, vivi_28646425
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5105, $P5106
  vivi_28646425:
    unless_null $P5105, vivi_28656426
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28656426:
    set $P5100, $P5105
  fallback6422:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2859_end6416:
    unless_null _lex_param_1, fallback6431
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5111
  fallback6431:
    set fb_tmp_599, _lex_param_1
    repr_defined $I5024, fb_tmp_599
    unless $I5024 goto if2867_else6429 
    set $P5112, fb_tmp_599["typename"]
    set $P5114, $P5112
    goto if2867_end6430
  if2867_else6429:
    null $P5113
    set $P5114, $P5113
  if2867_end6430:
    unless_null $P5114, vivi_28686432
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5114, $P5115
  vivi_28686432:
    unless $P5114 goto if2866_end6428 
    .const 'Sub' $P5116 = 'cuid_509_1382959278.72036' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2866_end6428:
    unless_null _lex_param_1, fallback6459
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5118
  fallback6459:
    set fb_tmp_604, _lex_param_1
    repr_defined $I5025, fb_tmp_604
    unless $I5025 goto if2882_else6457 
    set $P5119, fb_tmp_604["definedness"]
    set $P5121, $P5119
    goto if2882_end6458
  if2882_else6457:
    null $P5120
    set $P5121, $P5120
  if2882_end6458:
    unless_null $P5121, vivi_28836460
    nqp_get_sc_object $P5122, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5121, $P5122
  vivi_28836460:
    unless $P5121 goto if2881_end6456 
.annotate 'line', 2879
    unless_null _lex_param_1, fallback6465
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5123
  fallback6465:
    set fb_tmp_606, _lex_param_1
    repr_defined $I5027, fb_tmp_606
    unless $I5027 goto if2885_else6463 
    set $P5124, fb_tmp_606["definedness"]
    set $P5126, $P5124
    goto if2885_end6464
  if2885_else6463:
    null $P5125
    set $P5126, $P5125
  if2885_end6464:
    unless_null $P5126, vivi_28866466
    nqp_get_sc_object $P5127, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5126, $P5127
  vivi_28866466:
    set fb_tmp_605, $P5126
    repr_defined $I5026, fb_tmp_605
    unless $I5026 goto if2884_else6461 
    set $P5128, fb_tmp_605[0]
    set $P5130, $P5128
    goto if2884_end6462
  if2884_else6461:
    null $P5129
    set $P5130, $P5129
  if2884_end6462:
    unless_null $P5130, vivi_28876467
    nqp_get_sc_object $P5131, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5130, $P5131
  vivi_28876467:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2881_end6456:
.annotate 'line', 2883
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1382959278.72036") :anon :lex :outer("cuid_311_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2867
    .const 'Sub' $P5019 = 'cuid_508_1382959278.72036' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2868
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6437
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback6437:
    set fb_tmp_601, $P5002
    repr_defined $I5002, fb_tmp_601
    unless $I5002 goto if2870_else6435 
    set $P5004, fb_tmp_601["typename"]
    set $P5006, $P5004
    goto if2870_end6436
  if2870_else6435:
    null $P5005
    set $P5006, $P5005
  if2870_end6436:
    unless_null $P5006, vivi_28716438
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_28716438:
    set fb_tmp_600, $P5006
    repr_defined $I5001, fb_tmp_600
    unless $I5001 goto if2869_else6433 
    set $P5008, fb_tmp_600[0]
    set $P5010, $P5008
    goto if2869_end6434
  if2869_else6433:
    null $P5009
    set $P5010, $P5009
  if2869_end6434:
    unless_null $P5010, vivi_28726439
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_28726439:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2869
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2873_end6441 
    .const 'Sub' $P5015 = 'cuid_508_1382959278.72036' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2873_end6441:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1382959278.72036") :anon :lex :outer("cuid_509_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2870
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
.annotate 'line', 2871
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6442
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_602, $P5002
    repr_defined $I5001, fb_tmp_602
    unless $I5001 goto if2874_else6443 
    set $P5004, fb_tmp_602["$W"]
    set $P5006, $P5004
    goto if2874_end6444
  if2874_else6443:
    null $P5005
    set $P5006, $P5005
  if2874_end6444:
    unless_null $P5006, vivi_28756445
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_28756445:
    unless_null $P5006, vivi_28766446
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28766446:
    set $P5001, $P5006
  fallback6442:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2872
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2878_end6450 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6453
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  fallback6453:
    set fb_tmp_603, $P5015
    repr_defined $I5003, fb_tmp_603
    unless $I5003 goto if2879_else6451 
    set $P5017, fb_tmp_603["default_value"]
    set $P5019, $P5017
    goto if2879_end6452
  if2879_else6451:
    null $P5018
    set $P5019, $P5018
  if2879_end6452:
    unless_null $P5019, vivi_28806454
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5019, $P5020
  vivi_28806454:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2878_end6450:
    set $P5026, $P5021
    unless $P5021 goto if2877_end6448 
.annotate 'line', 2873
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2877_end6448:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_312_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2886
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2888
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2890
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6468
    nqp_get_sc_object $P5008, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5007, $P5008
    set fb_tmp_607, $P5007
    repr_defined $I5001, fb_tmp_607
    unless $I5001 goto if2888_else6469 
    set $P5009, fb_tmp_607["$W"]
    set $P5011, $P5009
    goto if2888_end6470
  if2888_else6469:
    null $P5010
    set $P5011, $P5010
  if2888_end6470:
    unless_null $P5011, vivi_28896471
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_28896471:
    unless_null $P5011, vivi_28906472
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28906472:
    set $P5006, $P5011
  fallback6468:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2891
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_313_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_608 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2895
    unless_null _lex_param_1, fallback6475
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback6475:
    set fb_tmp_608, _lex_param_1
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2891_else6473 
    set $P5003, fb_tmp_608["param_var"]
    set $P5005, $P5003
    goto if2891_end6474
  if2891_else6473:
    null $P5004
    set $P5005, $P5004
  if2891_end6474:
    unless_null $P5005, vivi_28926476
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_28926476:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2896
    unless_null _lex_param_1, fallback6481
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback6481:
    set fb_tmp_610, _lex_param_1
    repr_defined $I5003, fb_tmp_610
    unless $I5003 goto if2894_else6479 
    set $P5009, fb_tmp_610["param_var"]
    set $P5011, $P5009
    goto if2894_end6480
  if2894_else6479:
    null $P5010
    set $P5011, $P5010
  if2894_end6480:
    unless_null $P5011, vivi_28956482
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_28956482:
    set fb_tmp_609, $P5011
    repr_defined $I5002, fb_tmp_609
    unless $I5002 goto if2893_else6477 
    set $P5013, fb_tmp_609["name"]
    set $P5015, $P5013
    goto if2893_end6478
  if2893_else6477:
    null $P5014
    set $P5015, $P5014
  if2893_end6478:
    unless_null $P5015, vivi_28966483
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_28966483:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2897
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_314_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2900
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_510_1382959278.72036' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 2904
    nqp_get_sc_object $P5003, "239E5693F0E91359B3D18A6C517018B527DB748D-1382959247.33355", 127
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_29016490
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_510_1382959278.72036' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_29006489
  catch_handler_29016490:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_29006489
  skip_handler_29006489:
    set $P5012, $P102
    if $P102 goto unless2902_end6492 
.annotate 'line', 2911
.annotate 'line', 2912
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2902_end6492:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1382959278.72036") :anon :lex :outer("cuid_314_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2906
    .lex "$sym", $P101 
    .local pmc fb_tmp_611 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 2907
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6484
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_611, $P5003
    repr_defined $I5001, fb_tmp_611
    unless $I5001 goto if2897_else6485 
    set $P5005, fb_tmp_611["$W"]
    set $P5007, $P5005
    goto if2897_end6486
  if2897_else6485:
    null $P5006
    set $P5007, $P5006
  if2897_end6486:
    unless_null $P5007, vivi_28986487
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_28986487:
    unless_null $P5007, vivi_28996488
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_28996488:
    set $P5002, $P5007
  fallback6484:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2908
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_315_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2916
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_612 
.annotate 'line', 2917
    unless_null _lex_param_1, fallback6495
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback6495:
    set fb_tmp_612, _lex_param_1
    repr_defined $I5001, fb_tmp_612
    unless $I5001 goto if2903_else6493 
    set $P5002, fb_tmp_612["trait_mod"]
    set $P5004, $P5002
    goto if2903_end6494
  if2903_else6493:
    null $P5003
    set $P5004, $P5003
  if2903_end6494:
    unless_null $P5004, vivi_29046496
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_29046496:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_316_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2920
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_512_1382959278.72036' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_514_1382959278.72036' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_515_1382959278.72036' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_516_1382959278.72036' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_517_1382959278.72036' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_639 
    unless_null _lex_param_1, fallback6501
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback6501:
    set fb_tmp_613, _lex_param_1
    repr_defined $I5002, fb_tmp_613
    unless $I5002 goto if2906_else6499 
    set $P5002, fb_tmp_613["longname"]
    set $P5004, $P5002
    goto if2906_end6500
  if2906_else6499:
    null $P5003
    set $P5004, $P5003
  if2906_end6500:
    unless_null $P5004, vivi_29076502
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_29076502:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2905_else6497 
    .const 'Sub' $P5006 = 'cuid_512_1382959278.72036' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2905_end6498
  if2905_else6497:
    unless_null _lex_param_1, fallback6543
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback6543:
    set fb_tmp_622, _lex_param_1
    repr_defined $I5004, fb_tmp_622
    unless $I5004 goto if2930_else6541 
    set $P5009, fb_tmp_622["longname"]
    set $P5011, $P5009
    goto if2930_end6542
  if2930_else6541:
    null $P5010
    set $P5011, $P5010
  if2930_end6542:
    unless_null $P5011, vivi_29316544
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_29316544:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2929_else6539 
    .const 'Sub' $P5013 = 'cuid_514_1382959278.72036' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2929_end6540
  if2929_else6539:
    unless_null _lex_param_1, fallback6571
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5015
  fallback6571:
    set fb_tmp_628, _lex_param_1
    repr_defined $I5006, fb_tmp_628
    unless $I5006 goto if2946_else6569 
    set $P5016, fb_tmp_628["longname"]
    set $P5018, $P5016
    goto if2946_end6570
  if2946_else6569:
    null $P5017
    set $P5018, $P5017
  if2946_end6570:
    unless_null $P5018, vivi_29476572
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_29476572:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2945_else6567 
.annotate 'line', 2946
.annotate 'line', 2947
    .const 'Sub' $P5021 = 'cuid_515_1382959278.72036' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2945_end6568
  if2945_else6567:
    unless_null _lex_param_1, fallback6582
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5023
  fallback6582:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5008, fb_tmp_630
    unless $I5008 goto if2952_else6580 
    set $P5024, fb_tmp_630["longname"]
    set $P5026, $P5024
    goto if2952_end6581
  if2952_else6580:
    null $P5025
    set $P5026, $P5025
  if2952_end6581:
    unless_null $P5026, vivi_29536583
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_29536583:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2951_else6578 
.annotate 'line', 2949
.annotate 'line', 2950
    .const 'Sub' $P5029 = 'cuid_516_1382959278.72036' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2951_end6579
  if2951_else6578:
    unless_null _lex_param_1, fallback6593
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5031
  fallback6593:
    set fb_tmp_632, _lex_param_1
    repr_defined $I5010, fb_tmp_632
    unless $I5010 goto if2958_else6591 
    set $P5032, fb_tmp_632["longname"]
    set $P5034, $P5032
    goto if2958_end6592
  if2958_else6591:
    null $P5033
    set $P5034, $P5033
  if2958_end6592:
    unless_null $P5034, vivi_29596594
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  vivi_29596594:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2957_else6589 
.annotate 'line', 2952
.annotate 'line', 2953
    .const 'Sub' $P5037 = 'cuid_517_1382959278.72036' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2957_end6590
  if2957_else6589:
.annotate 'line', 2960
.annotate 'line', 2961
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6620
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5040
  fallback6620:
    set fb_tmp_639, _lex_param_1
    repr_defined $I5011, fb_tmp_639
    unless $I5011 goto if2974_else6618 
    set $P5041, fb_tmp_639["longname"]
    set $P5043, $P5041
    goto if2974_end6619
  if2974_else6618:
    null $P5042
    set $P5043, $P5042
  if2974_end6619:
    unless_null $P5043, vivi_29756621
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5043, $P5044
  vivi_29756621:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2957_end6590:
    set $P5047, $P5046
  if2951_end6579:
    set $P5048, $P5047
  if2945_end6568:
    set $P5049, $P5048
  if2929_end6540:
    set $P5050, $P5049
  if2905_end6498:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1382959278.72036") :anon :lex :outer("cuid_316_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2921
    .const 'Sub' $P5043 = 'cuid_511_1382959278.72036' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P104, $P5004
.annotate 'line', 2923
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6507
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  fallback6507:
    set fb_tmp_615, $P5005
    repr_defined $I5002, fb_tmp_615
    unless $I5002 goto if2909_else6505 
    set $P5007, fb_tmp_615["circumfix"]
    set $P5009, $P5007
    goto if2909_end6506
  if2909_else6505:
    null $P5008
    set $P5009, $P5008
  if2909_end6506:
    unless_null $P5009, vivi_29106508
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_29106508:
    set fb_tmp_614, $P5009
    repr_defined $I5001, fb_tmp_614
    unless $I5001 goto if2908_else6503 
    set $P5011, fb_tmp_614[0]
    set $P5013, $P5011
    goto if2908_end6504
  if2908_else6503:
    null $P5012
    set $P5013, $P5012
  if2908_end6504:
    unless_null $P5013, vivi_29116509
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_29116509:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2925
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2912_end6511 
.annotate 'line', 2924
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2912_end6511:
.annotate 'line', 2926
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6512
    nqp_get_sc_object $P5024, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5023, $P5024
    set fb_tmp_616, $P5023
    repr_defined $I5003, fb_tmp_616
    unless $I5003 goto if2913_else6513 
    set $P5025, fb_tmp_616["$PACKAGE"]
    set $P5027, $P5025
    goto if2913_end6514
  if2913_else6513:
    null $P5026
    set $P5027, $P5026
  if2913_end6514:
    unless_null $P5027, vivi_29146515
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5027, $P5028
  vivi_29146515:
    unless_null $P5027, vivi_29156516
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_29156516:
    set $P5022, $P5027
  fallback6512:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6517
    nqp_get_sc_object $P5032, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5031, $P5032
    set fb_tmp_617, $P5031
    repr_defined $I5005, fb_tmp_617
    unless $I5005 goto if2916_else6518 
    set $P5033, fb_tmp_617["$SCOPE"]
    set $P5035, $P5033
    goto if2916_end6519
  if2916_else6518:
    null $P5034
    set $P5035, $P5034
  if2916_end6519:
    unless_null $P5035, vivi_29176520
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5035, $P5036
  vivi_29176520:
    unless_null $P5035, vivi_29186521
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_29186521:
    set $P5030, $P5035
  fallback6517:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2929
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_511_1382959278.72036' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1382959278.72036") :anon :lex :outer("cuid_512_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2929
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
.annotate 'line', 2930
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6522
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_618, $P5002
    repr_defined $I5001, fb_tmp_618
    unless $I5001 goto if2919_else6523 
    set $P5004, fb_tmp_618["$W"]
    set $P5006, $P5004
    goto if2919_end6524
  if2919_else6523:
    null $P5005
    set $P5006, $P5005
  if2919_end6524:
    unless_null $P5006, vivi_29206525
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_29206525:
    unless_null $P5006, vivi_29216526
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29216526:
    set $P5001, $P5006
  fallback6522:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2931
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_619, $P5012
    repr_defined $I5003, fb_tmp_619
    unless $I5003 goto if2922_else6528 
    set $P5013, fb_tmp_619["code_obj"]
    set $P5015, $P5013
    goto if2922_end6529
  if2922_else6528:
    null $P5014
    set $P5015, $P5014
  if2922_end6529:
    unless_null $P5015, vivi_29236530
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_29236530:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6527
.annotate 'line', 2932
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6531
    nqp_get_sc_object $P5019, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5018, $P5019
    set fb_tmp_620, $P5018
    repr_defined $I5004, fb_tmp_620
    unless $I5004 goto if2924_else6532 
    set $P5020, fb_tmp_620["$W"]
    set $P5022, $P5020
    goto if2924_end6533
  if2924_else6532:
    null $P5021
    set $P5022, $P5021
  if2924_end6533:
    unless_null $P5022, vivi_29256534
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_29256534:
    unless_null $P5022, vivi_29266535
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29266535:
    set $P5017, $P5022
  fallback6531:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_621, $P5025
    repr_defined $I5005, fb_tmp_621
    unless $I5005 goto if2927_else6536 
    set $P5026, fb_tmp_621["block_past"]
    set $P5028, $P5026
    goto if2927_end6537
  if2927_else6536:
    null $P5027
    set $P5028, $P5027
  if2927_end6537:
    unless_null $P5028, vivi_29286538
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_29286538:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6527:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_514_1382959278.72036") :anon :lex :outer("cuid_316_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2935
    .const 'Sub' $P5033 = 'cuid_513_1382959278.72036' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 2937
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6549
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  fallback6549:
    set fb_tmp_624, $P5004
    repr_defined $I5002, fb_tmp_624
    unless $I5002 goto if2933_else6547 
    set $P5006, fb_tmp_624["circumfix"]
    set $P5008, $P5006
    goto if2933_end6548
  if2933_else6547:
    null $P5007
    set $P5008, $P5007
  if2933_end6548:
    unless_null $P5008, vivi_29346550
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_29346550:
    set fb_tmp_623, $P5008
    repr_defined $I5001, fb_tmp_623
    unless $I5001 goto if2932_else6545 
    set $P5010, fb_tmp_623[0]
    set $P5012, $P5010
    goto if2932_end6546
  if2932_else6545:
    null $P5011
    set $P5012, $P5011
  if2932_end6546:
    unless_null $P5012, vivi_29356551
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_29356551:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2939
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2936_end6553 
.annotate 'line', 2938
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2936_end6553:
.annotate 'line', 2940
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6554
    nqp_get_sc_object $P5023, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5022, $P5023
    set fb_tmp_625, $P5022
    repr_defined $I5003, fb_tmp_625
    unless $I5003 goto if2937_else6555 
    set $P5024, fb_tmp_625["$PACKAGE"]
    set $P5026, $P5024
    goto if2937_end6556
  if2937_else6555:
    null $P5025
    set $P5026, $P5025
  if2937_end6556:
    unless_null $P5026, vivi_29386557
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_29386557:
    unless_null $P5026, vivi_29396558
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29396558:
    set $P5021, $P5026
  fallback6554:
    set $P103, $P5021
.annotate 'line', 2942
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_513_1382959278.72036' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_513_1382959278.72036") :anon :lex :outer("cuid_514_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2942
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
.annotate 'line', 2943
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6559
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_626, $P5002
    repr_defined $I5001, fb_tmp_626
    unless $I5001 goto if2940_else6560 
    set $P5004, fb_tmp_626["$W"]
    set $P5006, $P5004
    goto if2940_end6561
  if2940_else6560:
    null $P5005
    set $P5006, $P5005
  if2940_end6561:
    unless_null $P5006, vivi_29416562
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_29416562:
    unless_null $P5006, vivi_29426563
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29426563:
    set $P5001, $P5006
  fallback6559:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_627, _lex_param_0
    repr_defined $I5002, fb_tmp_627
    unless $I5002 goto if2943_else6564 
    set $P5011, fb_tmp_627["variable"]
    set $P5013, $P5011
    goto if2943_end6565
  if2943_else6564:
    null $P5012
    set $P5013, $P5012
  if2943_end6565:
    unless_null $P5013, vivi_29446566
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_29446566:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_515_1382959278.72036") :anon :lex :outer("cuid_316_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2947
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_629 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6573
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_629, $P5002
    repr_defined $I5001, fb_tmp_629
    unless $I5001 goto if2948_else6574 
    set $P5004, fb_tmp_629["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2948_end6575
  if2948_else6574:
    null $P5005
    set $P5006, $P5005
  if2948_end6575:
    unless_null $P5006, vivi_29496576
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_29496576:
    unless_null $P5006, vivi_29506577
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29506577:
    set $P5001, $P5006
  fallback6573:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_516_1382959278.72036") :anon :lex :outer("cuid_316_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2950
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_631 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6584
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set fb_tmp_631, $P5002
    repr_defined $I5001, fb_tmp_631
    unless $I5001 goto if2954_else6585 
    set $P5004, fb_tmp_631["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2954_end6586
  if2954_else6585:
    null $P5005
    set $P5006, $P5005
  if2954_end6586:
    unless_null $P5006, vivi_29556587
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_29556587:
    unless_null $P5006, vivi_29566588
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29566588:
    set $P5001, $P5006
  fallback6584:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_517_1382959278.72036") :anon :lex :outer("cuid_316_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2953
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 2954
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2955
    set fb_tmp_633, $P101
    repr_defined $I5001, fb_tmp_633
    unless $I5001 goto if2960_else6595 
    set $P5004, fb_tmp_633["block_past"]
    set $P5006, $P5004
    goto if2960_end6596
  if2960_else6595:
    null $P5005
    set $P5006, $P5005
  if2960_end6596:
    unless_null $P5006, vivi_29616597
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_29616597:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6600
    nqp_get_sc_object $P5013, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5012, $P5013
    set fb_tmp_635, $P5012
    repr_defined $I5003, fb_tmp_635
    unless $I5003 goto if2963_else6601 
    set $P5014, fb_tmp_635["$EXPORT"]
    set $P5016, $P5014
    goto if2963_end6602
  if2963_else6601:
    null $P5015
    set $P5016, $P5015
  if2963_end6602:
    unless_null $P5016, vivi_29646603
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_29646603:
    unless_null $P5016, vivi_29656604
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29656604:
    set $P5011, $P5016
  fallback6600:
    get_who $P5010, $P5011
    set fb_tmp_634, $P5010
    repr_defined $I5002, fb_tmp_634
    unless $I5002 goto if2962_else6598 
    set $P5019, fb_tmp_634["DEFAULT"]
    set $P5021, $P5019
    goto if2962_end6599
  if2962_else6598:
    null $P5020
    set $P5021, $P5020
  if2962_end6599:
    unless_null $P5021, vivi_29666605
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_29666605:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_636, $P101
    repr_defined $I5005, fb_tmp_636
    unless $I5005 goto if2967_else6607 
    set $P5024, fb_tmp_636["code_obj"]
    set $P5026, $P5024
    goto if2967_end6608
  if2967_else6607:
    null $P5025
    set $P5026, $P5025
  if2967_end6608:
    unless_null $P5026, vivi_29686609
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5026, $P5027
  vivi_29686609:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6606
.annotate 'line', 2957
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6610
    nqp_get_sc_object $P5030, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5029, $P5030
    set fb_tmp_637, $P5029
    repr_defined $I5006, fb_tmp_637
    unless $I5006 goto if2969_else6611 
    set $P5031, fb_tmp_637["$W"]
    set $P5033, $P5031
    goto if2969_end6612
  if2969_else6611:
    null $P5032
    set $P5033, $P5032
  if2969_end6612:
    unless_null $P5033, vivi_29706613
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5033, $P5034
  vivi_29706613:
    unless_null $P5033, vivi_29716614
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29716614:
    set $P5028, $P5033
  fallback6610:
    set fb_tmp_638, $P101
    repr_defined $I5007, fb_tmp_638
    unless $I5007 goto if2972_else6615 
    set $P5036, fb_tmp_638["block_past"]
    set $P5038, $P5036
    goto if2972_end6616
  if2972_else6615:
    null $P5037
    set $P5038, $P5037
  if2972_end6616:
    unless_null $P5038, vivi_29736617
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5038, $P5039
  vivi_29736617:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6606:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_317_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2965
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_7 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_519_1382959278.72036' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    if haz_param_7, default6738
    nqp_get_sc_object $P5073, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_2, $P5073
  default6738:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6626
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback6626:
    set fb_tmp_640, _lex_param_1
    repr_defined $I5001, fb_tmp_640
    unless $I5001 goto if2977_else6624 
    set $P5004, fb_tmp_640["deflongname"]
    set $P5006, $P5004
    goto if2977_end6625
  if2977_else6624:
    null $P5005
    set $P5006, $P5005
  if2977_end6625:
    unless_null $P5006, vivi_29786627
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_29786627:
    unless $P5006 goto if2976_else6622 
.annotate 'line', 2967
.annotate 'line', 2968
    unless_null _lex_param_1, fallback6630
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback6630:
    set fb_tmp_641, _lex_param_1
    repr_defined $I5002, fb_tmp_641
    unless $I5002 goto if2979_else6628 
    set $P5009, fb_tmp_641["deflongname"]
    set $P5011, $P5009
    goto if2979_end6629
  if2979_else6628:
    null $P5010
    set $P5011, $P5010
  if2979_end6629:
    unless_null $P5011, vivi_29806631
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_29806631:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2976_end6623
  if2976_else6622:
.annotate 'line', 2970
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6634
    nqp_get_sc_object $P5017, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5016, $P5017
    set fb_tmp_642, $P5016
    repr_defined $I5004, fb_tmp_642
    unless $I5004 goto if2982_else6635 
    set $P5018, fb_tmp_642["$PKGDECL"]
    set $P5020, $P5018
    goto if2982_end6636
  if2982_else6635:
    null $P5019
    set $P5020, $P5019
  if2982_end6636:
    unless_null $P5020, vivi_29836637
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_29836637:
    unless_null $P5020, vivi_29846638
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29846638:
    set $P5015, $P5020
  fallback6634:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2981_end6633 
.annotate 'line', 2971
.annotate 'line', 2972
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2981_end6633:
    unless_null _lex_param_1, fallback6641
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5025
  fallback6641:
    set fb_tmp_643, _lex_param_1
    repr_defined $I5005, fb_tmp_643
    unless $I5005 goto if2985_else6639 
    set $P5026, fb_tmp_643["latename"]
    set $P5028, $P5026
    goto if2985_end6640
  if2985_else6639:
    null $P5027
    set $P5028, $P5027
  if2985_end6640:
    unless_null $P5028, vivi_29866642
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_29866642:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2976_end6623:
    unless_null _lex_param_1, fallback6647
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5031
  fallback6647:
    set fb_tmp_644, _lex_param_1
    repr_defined $I5006, fb_tmp_644
    unless $I5006 goto if2988_else6645 
    set $P5032, fb_tmp_644["proto"]
    set $P5034, $P5032
    goto if2988_end6646
  if2988_else6645:
    null $P5033
    set $P5034, $P5033
  if2988_end6646:
    unless_null $P5034, vivi_29896648
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5034, $P5035
  vivi_29896648:
    unless $P5034 goto if2987_else6643 
.annotate 'line', 2977
.annotate 'line', 2978
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 108
.annotate 'line', 2980
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2981
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2982
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration_static" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2989
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6649
    nqp_get_sc_object $P5046, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5045, $P5046
    set fb_tmp_645, $P5045
    repr_defined $I5007, fb_tmp_645
    unless $I5007 goto if2990_else6650 
    set $P5047, fb_tmp_645["$W"]
    set $P5049, $P5047
    goto if2990_end6651
  if2990_else6650:
    null $P5048
    set $P5049, $P5048
  if2990_end6651:
    unless_null $P5049, vivi_29916652
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_29916652:
    unless_null $P5049, vivi_29926653
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_29926653:
    set $P5044, $P5049
  fallback6649:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6654
    nqp_get_sc_object $P5054, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5053, $P5054
    set fb_tmp_646, $P5053
    repr_defined $I5008, fb_tmp_646
    unless $I5008 goto if2993_else6655 
    set $P5055, fb_tmp_646["$PACKAGE"]
    set $P5057, $P5055
    goto if2993_end6656
  if2993_else6655:
    null $P5056
    set $P5057, $P5056
  if2993_end6656:
    unless_null $P5057, vivi_29946657
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5057, $P5058
  vivi_29946657:
    unless_null $P5057, vivi_29956658
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_29956658:
    set $P5052, $P5057
  fallback6654:
.annotate 'line', 2990
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6659
    nqp_get_sc_object $P5062, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5061, $P5062
    set fb_tmp_647, $P5061
    repr_defined $I5009, fb_tmp_647
    unless $I5009 goto if2996_else6660 
    set $P5063, fb_tmp_647["$W"]
    set $P5065, $P5063
    goto if2996_end6661
  if2996_else6660:
    null $P5064
    set $P5065, $P5064
  if2996_end6661:
    unless_null $P5065, vivi_29976662
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5065, $P5066
  vivi_29976662:
    unless_null $P5065, vivi_29986663
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_29986663:
    set $P5060, $P5065
  fallback6659:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2987_end6644
  if2987_else6643:
    .const 'Sub' $P5070 = 'cuid_519_1382959278.72036' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2987_end6644:
.annotate 'line', 3031
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_519_1382959278.72036") :anon :lex :outer("cuid_317_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 2992
    .const 'Sub' $P5128 = 'cuid_518_1382959278.72036' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 2993
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6664
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5005, $P5006
    set fb_tmp_648, $P5005
    repr_defined $I5001, fb_tmp_648
    unless $I5001 goto if2999_else6665 
    set $P5007, fb_tmp_648["$W"]
    set $P5009, $P5007
    goto if2999_end6666
  if2999_else6665:
    null $P5008
    set $P5009, $P5008
  if2999_end6666:
    unless_null $P5009, vivi_30006667
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_30006667:
    unless_null $P5009, vivi_30016668
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_30016668:
    set $P5004, $P5009
  fallback6664:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2994
    set fb_tmp_649, $P101
    repr_defined $I5002, fb_tmp_649
    unless $I5002 goto if3002_else6669 
    set $P5013, fb_tmp_649[0]
    set $P5015, $P5013
    goto if3002_end6670
  if3002_else6669:
    null $P5014
    set $P5015, $P5014
  if3002_end6670:
    unless_null $P5015, vivi_30036671
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_30036671:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2995
    set fb_tmp_650, $P101
    repr_defined $I5003, fb_tmp_650
    unless $I5003 goto if3004_else6672 
    set $P5019, fb_tmp_650[0]
    set $P5021, $P5019
    goto if3004_end6673
  if3004_else6672:
    null $P5020
    set $P5021, $P5020
  if3004_end6673:
    unless_null $P5021, vivi_30056674
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_30056674:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 2997
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2998
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2999
    set fb_tmp_651, $P101
    repr_defined $I5004, fb_tmp_651
    unless $I5004 goto if3006_else6675 
    set $P5029, fb_tmp_651[0]
    set $P5031, $P5029
    goto if3006_end6676
  if3006_else6675:
    null $P5030
    set $P5031, $P5030
  if3006_end6676:
    unless_null $P5031, vivi_30076677
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_30076677:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3000
    set fb_tmp_652, $P101
    repr_defined $I5005, fb_tmp_652
    unless $I5005 goto if3008_else6678 
    set $P5035, fb_tmp_652[0]
    set $P5037, $P5035
    goto if3008_end6679
  if3008_else6678:
    null $P5036
    set $P5037, $P5036
  if3008_end6679:
    unless_null $P5037, vivi_30096680
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_30096680:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3001
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3002
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6683
    nqp_get_sc_object $P5043, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_48, $P5042
    set fb_tmp_654, pkg_viv_tmp_48
    repr_defined $I5007, fb_tmp_654
    unless $I5007 goto if3011_else6684 
    set $P5044, fb_tmp_654["%RX"]
    set $P5046, $P5044
    goto if3011_end6685
  if3011_else6684:
    null $P5045
    set $P5046, $P5045
  if3011_end6685:
    unless_null $P5046, vivi_30126686
    new $P5047, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5047
    set $P5046, $P5047
  vivi_30126686:
    unless_null $P5046, vivi_30136687
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_30136687:
    set $P5041, $P5046
  fallback6683:
    set fb_tmp_653, $P5041
    repr_defined $I5006, fb_tmp_653
    unless $I5006 goto if3010_else6681 
    set $P5049, fb_tmp_653["code"]
    set $P5051, $P5049
    goto if3010_end6682
  if3010_else6681:
    null $P5050
    set $P5051, $P5050
  if3010_end6682:
    unless_null $P5051, vivi_30146688
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5051, $P5052
  vivi_30146688:
    set $P102, $P5051
.annotate 'line', 3004
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6691
    nqp_get_sc_object $P5055, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_49, $P5054
    set fb_tmp_656, pkg_viv_tmp_49
    repr_defined $I5009, fb_tmp_656
    unless $I5009 goto if3016_else6692 
    set $P5056, fb_tmp_656["%LANG"]
    set $P5058, $P5056
    goto if3016_end6693
  if3016_else6692:
    null $P5057
    set $P5058, $P5057
  if3016_end6693:
    unless_null $P5058, vivi_30176694
    new $P5059, 'Hash'
    set pkg_viv_tmp_49["%LANG"], $P5059
    set $P5058, $P5059
  vivi_30176694:
    unless_null $P5058, vivi_30186695
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_30186695:
    set $P5053, $P5058
  fallback6691:
    set fb_tmp_655, $P5053
    repr_defined $I5008, fb_tmp_655
    unless $I5008 goto if3015_else6689 
    set $P5061, fb_tmp_655["Regex-actions"]
    set $P5063, $P5061
    goto if3015_end6690
  if3015_else6689:
    null $P5062
    set $P5063, $P5062
  if3015_end6690:
    unless_null $P5063, vivi_30196696
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5063, $P5064
  vivi_30196696:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6699
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5065, $P5066
  fallback6699:
    set fb_tmp_657, $P5065
    repr_defined $I5010, fb_tmp_657
    unless $I5010 goto if3020_else6697 
    set $P5067, fb_tmp_657["p6regex"]
    set $P5069, $P5067
    goto if3020_end6698
  if3020_else6697:
    null $P5068
    set $P5069, $P5068
  if3020_end6698:
    unless_null $P5069, vivi_30216700
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5069, $P5070
  vivi_30216700:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 3005
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6705
    nqp_get_sc_object $P5076, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5075, $P5076
    set fb_tmp_658, $P5075
    repr_defined $I5011, fb_tmp_658
    unless $I5011 goto if3024_else6706 
    set $P5077, fb_tmp_658["$PKGDECL"]
    set $P5079, $P5077
    goto if3024_end6707
  if3024_else6706:
    null $P5078
    set $P5079, $P5078
  if3024_end6707:
    unless_null $P5079, vivi_30256708
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5079, $P5080
  vivi_30256708:
    unless_null $P5079, vivi_30266709
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30266709:
    set $P5074, $P5079
  fallback6705:
    set $P5091, $P5074
    unless $P5074 goto if3023_end6704 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6710
    nqp_get_sc_object $P5085, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5084, $P5085
    set fb_tmp_659, $P5084
    repr_defined $I5013, fb_tmp_659
    unless $I5013 goto if3027_else6711 
    set $P5086, fb_tmp_659["$PACKAGE"]
    set $P5088, $P5086
    goto if3027_end6712
  if3027_else6711:
    null $P5087
    set $P5088, $P5087
  if3027_end6712:
    unless_null $P5088, vivi_30286713
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5088, $P5089
  vivi_30286713:
    unless_null $P5088, vivi_30296714
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30296714:
    set $P5083, $P5088
  fallback6710:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if3023_end6704:
    unless $P5091 goto if3022_end6702 
.annotate 'line', 3007
.annotate 'line', 3010
    $P101."blocktype"("declaration_static")
.annotate 'line', 3011
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6715
    nqp_get_sc_object $P5095, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5094, $P5095
    set fb_tmp_660, $P5094
    repr_defined $I5014, fb_tmp_660
    unless $I5014 goto if3030_else6716 
    set $P5096, fb_tmp_660["$W"]
    set $P5098, $P5096
    goto if3030_end6717
  if3030_else6716:
    null $P5097
    set $P5098, $P5097
  if3030_end6717:
    unless_null $P5098, vivi_30316718
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5098, $P5099
  vivi_30316718:
    unless_null $P5098, vivi_30326719
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30326719:
    set $P5093, $P5098
  fallback6715:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6720
    nqp_get_sc_object $P5103, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5102, $P5103
    set fb_tmp_661, $P5102
    repr_defined $I5015, fb_tmp_661
    unless $I5015 goto if3033_else6721 
    set $P5104, fb_tmp_661["$PACKAGE"]
    set $P5106, $P5104
    goto if3033_end6722
  if3033_else6721:
    null $P5105
    set $P5106, $P5105
  if3033_end6722:
    unless_null $P5106, vivi_30346723
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5106, $P5107
  vivi_30346723:
    unless_null $P5106, vivi_30356724
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30356724:
    set $P5101, $P5106
  fallback6720:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if3022_end6702:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6727
    nqp_get_sc_object $P5113, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5112, $P5113
    set fb_tmp_662, $P5112
    repr_defined $I5017, fb_tmp_662
    unless $I5017 goto if3037_else6728 
    set $P5114, fb_tmp_662["$PKGDECL"]
    set $P5116, $P5114
    goto if3037_end6729
  if3037_else6728:
    null $P5115
    set $P5116, $P5115
  if3037_end6729:
    unless_null $P5116, vivi_30386730
    nqp_get_sc_object $P5117, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5116, $P5117
  vivi_30386730:
    unless_null $P5116, vivi_30396731
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30396731:
    set $P5111, $P5116
  fallback6727:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3036_end6726 
    .const 'Sub' $P5119 = 'cuid_518_1382959278.72036' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3036_end6726:
.annotate 'line', 3025
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3027
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_518_1382959278.72036") :anon :lex :outer("cuid_519_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3016
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_663 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3017
    nqp_get_sc_object $P5002, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1382959242.28914", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 3018
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6734
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  fallback6734:
    set fb_tmp_663, $P5004
    repr_defined $I5001, fb_tmp_663
    unless $I5001 goto if3040_else6732 
    set $P5006, fb_tmp_663["p6regex"]
    set $P5008, $P5006
    goto if3040_end6733
  if3040_else6732:
    null $P5007
    set $P5008, $P5007
  if3040_end6733:
    unless_null $P5008, vivi_30416735
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_30416735:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 3019
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3042_end6737 
.annotate 'line', 3020
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3042_end6737:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_318_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6743
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback6743:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5001, fb_tmp_664
    unless $I5001 goto if3044_else6741 
    set $P5003, fb_tmp_664["args"]
    set $P5005, $P5003
    goto if3044_end6742
  if3044_else6741:
    null $P5004
    set $P5005, $P5004
  if3044_end6742:
    unless_null $P5005, vivi_30456744
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_30456744:
    unless $P5005 goto if3043_else6739 
.annotate 'line', 3036
    unless_null _lex_param_1, fallback6749
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5007
  fallback6749:
    set fb_tmp_666, _lex_param_1
    repr_defined $I5003, fb_tmp_666
    unless $I5003 goto if3047_else6747 
    set $P5008, fb_tmp_666["args"]
    set $P5010, $P5008
    goto if3047_end6748
  if3047_else6747:
    null $P5009
    set $P5010, $P5009
  if3047_end6748:
    unless_null $P5010, vivi_30486750
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_30486750:
    set fb_tmp_665, $P5010
    repr_defined $I5002, fb_tmp_665
    unless $I5002 goto if3046_else6745 
    set $P5012, fb_tmp_665[0]
    set $P5014, $P5012
    goto if3046_end6746
  if3046_else6745:
    null $P5013
    set $P5014, $P5013
  if3046_end6746:
    unless_null $P5014, vivi_30496751
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_30496751:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3043_end6740
  if3043_else6739:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3043_end6740:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6756
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5020
  fallback6756:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5004, fb_tmp_667
    unless $I5004 goto if3051_else6754 
    set $P5021, fb_tmp_667["quote"]
    set $P5023, $P5021
    goto if3051_end6755
  if3051_else6754:
    null $P5022
    set $P5023, $P5022
  if3051_end6755:
    unless_null $P5023, vivi_30526757
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_30526757:
    unless $P5023 goto if3050_else6752 
.annotate 'line', 3037
.annotate 'line', 3038
    unless_null _lex_param_1, fallback6760
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5025
  fallback6760:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5005, fb_tmp_668
    unless $I5005 goto if3053_else6758 
    set $P5026, fb_tmp_668["quote"]
    set $P5028, $P5026
    goto if3053_end6759
  if3053_else6758:
    null $P5027
    set $P5028, $P5027
  if3053_end6759:
    unless_null $P5028, vivi_30546761
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_30546761:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 3039
    $P5031 = $P101."op"("callmethod")
    goto if3050_end6753
  if3050_else6752:
    unless_null _lex_param_1, fallback6766
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5032
  fallback6766:
    set fb_tmp_669, _lex_param_1
    repr_defined $I5007, fb_tmp_669
    unless $I5007 goto if3056_else6764 
    set $P5033, fb_tmp_669["longname"]
    set $P5035, $P5033
    goto if3056_end6765
  if3056_else6764:
    null $P5034
    set $P5035, $P5034
  if3056_end6765:
    unless_null $P5035, vivi_30576767
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5035, $P5036
  vivi_30576767:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3055_else6762 
.annotate 'line', 3041
.annotate 'line', 3042
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3055_end6763
  if3055_else6762:
    unless_null _lex_param_1, fallback6772
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5038
  fallback6772:
    set fb_tmp_670, _lex_param_1
    repr_defined $I5009, fb_tmp_670
    unless $I5009 goto if3059_else6770 
    set $P5039, fb_tmp_670["longname"]
    set $P5041, $P5039
    goto if3059_end6771
  if3059_else6770:
    null $P5040
    set $P5041, $P5040
  if3059_end6771:
    unless_null $P5041, vivi_30606773
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5041, $P5042
  vivi_30606773:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3058_else6768 
.annotate 'line', 3044
.annotate 'line', 3045
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3058_end6769
  if3058_else6768:
    unless_null _lex_param_1, fallback6778
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5044
  fallback6778:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5011, fb_tmp_671
    unless $I5011 goto if3062_else6776 
    set $P5045, fb_tmp_671["longname"]
    set $P5047, $P5045
    goto if3062_end6777
  if3062_else6776:
    null $P5046
    set $P5047, $P5046
  if3062_end6777:
    unless_null $P5047, vivi_30636779
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5047, $P5048
  vivi_30636779:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3061_else6774 
.annotate 'line', 3047
.annotate 'line', 3048
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3061_end6775
  if3061_else6774:
    unless_null _lex_param_1, fallback6784
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5050
  fallback6784:
    set fb_tmp_672, _lex_param_1
    repr_defined $I5013, fb_tmp_672
    unless $I5013 goto if3065_else6782 
    set $P5051, fb_tmp_672["longname"]
    set $P5053, $P5051
    goto if3065_end6783
  if3065_else6782:
    null $P5052
    set $P5053, $P5052
  if3065_end6783:
    unless_null $P5053, vivi_30666785
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5053, $P5054
  vivi_30666785:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3064_else6780 
.annotate 'line', 3050
.annotate 'line', 3051
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3064_end6781
  if3064_else6780:
.annotate 'line', 3053
.annotate 'line', 3054
    unless_null _lex_param_1, fallback6788
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5056
  fallback6788:
    set fb_tmp_673, _lex_param_1
    repr_defined $I5014, fb_tmp_673
    unless $I5014 goto if3067_else6786 
    set $P5057, fb_tmp_673["longname"]
    set $P5059, $P5057
    goto if3067_end6787
  if3067_else6786:
    null $P5058
    set $P5059, $P5058
  if3067_end6787:
    unless_null $P5059, vivi_30686789
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5059, $P5060
  vivi_30686789:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 3055
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3064_end6781:
    set $P5063, $P5062
  if3061_end6775:
    set $P5064, $P5063
  if3058_end6769:
    set $P5065, $P5064
  if3055_end6763:
  if3050_end6753:
.annotate 'line', 3057
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_319_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3063
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3064
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_320_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3067
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3068
    unless_null _lex_param_1, fallback6792
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback6792:
    set fb_tmp_674, _lex_param_1
    repr_defined $I5001, fb_tmp_674
    unless $I5001 goto if3069_else6790 
    set $P5003, fb_tmp_674["args"]
    set $P5005, $P5003
    goto if3069_end6791
  if3069_else6790:
    null $P5004
    set $P5005, $P5004
  if3069_end6791:
    unless_null $P5005, vivi_30706793
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_30706793:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3069
    unless_null _lex_param_1, fallback6796
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback6796:
    set fb_tmp_675, _lex_param_1
    repr_defined $I5002, fb_tmp_675
    unless $I5002 goto if3071_else6794 
    set $P5009, fb_tmp_675["deflongname"]
    set $P5011, $P5009
    goto if3071_end6795
  if3071_else6794:
    null $P5010
    set $P5011, $P5010
  if3071_end6795:
    unless_null $P5011, vivi_30726797
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_30726797:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 3070
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_321_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3073
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_520_1382959278.72036' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_522_1382959278.72036' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 3076
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6800
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5004, $P5005
    set fb_tmp_676, $P5004
    repr_defined $I5001, fb_tmp_676
    unless $I5001 goto if3074_else6801 
    set $P5006, fb_tmp_676["$W"]
    set $P5008, $P5006
    goto if3074_end6802
  if3074_else6801:
    null $P5007
    set $P5008, $P5007
  if3074_end6802:
    unless_null $P5008, vivi_30756803
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_30756803:
    unless_null $P5008, vivi_30766804
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30766804:
    set $P5003, $P5008
  fallback6800:
    unless_null _lex_param_1, fallback6807
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5011
  fallback6807:
    set fb_tmp_677, _lex_param_1
    repr_defined $I5002, fb_tmp_677
    unless $I5002 goto if3077_else6805 
    set $P5012, fb_tmp_677["name"]
    set $P5014, $P5012
    goto if3077_end6806
  if3077_else6805:
    null $P5013
    set $P5014, $P5013
  if3077_end6806:
    unless_null $P5014, vivi_30786808
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_30786808:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3073_else6798 
    unless_null _lex_param_1, fallback6813
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5017
  fallback6813:
    set fb_tmp_678, _lex_param_1
    repr_defined $I5003, fb_tmp_678
    unless $I5003 goto if3080_else6811 
    set $P5018, fb_tmp_678["args"]
    set $P5020, $P5018
    goto if3080_end6812
  if3080_else6811:
    null $P5019
    set $P5020, $P5019
  if3080_end6812:
    unless_null $P5020, vivi_30816814
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5020, $P5021
  vivi_30816814:
    if $P5020 goto unless3079_end6810 
.annotate 'line', 3077
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30896827
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_520_1382959278.72036' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30886826
  catch_handler_30896827:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30886826
  skip_handler_30886826:
  unless3079_end6810:
    set $P5033, $P101
    if $P101 goto unless3090_end6829 
.annotate 'line', 3085
.annotate 'line', 3086
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    unless_null _lex_param_1, fallback6832
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5027
  fallback6832:
    set fb_tmp_681, _lex_param_1
    repr_defined $I5004, fb_tmp_681
    unless $I5004 goto if3091_else6830 
    set $P5028, fb_tmp_681["name"]
    set $P5030, $P5028
    goto if3091_end6831
  if3091_else6830:
    null $P5029
    set $P5030, $P5029
  if3091_end6831:
    unless_null $P5030, vivi_30926833
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5030, $P5031
  vivi_30926833:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3090_end6829:
    goto if3073_end6799
  if3073_else6798:
    .const 'Sub' $P5034 = 'cuid_522_1382959278.72036' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3073_end6799:
    set $P102, $P101
    unless_null _lex_param_1, fallback6862
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5036
  fallback6862:
    set fb_tmp_686, _lex_param_1
    repr_defined $I5005, fb_tmp_686
    unless $I5005 goto if3108_else6860 
    set $P5037, fb_tmp_686["args"]
    set $P5039, $P5037
    goto if3108_end6861
  if3108_else6860:
    null $P5038
    set $P5039, $P5038
  if3108_end6861:
    unless_null $P5039, vivi_31096863
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5039, $P5040
  vivi_31096863:
    unless $P5039 goto if3107_end6859 
.annotate 'line', 3106
.annotate 'line', 3107
    unless_null _lex_param_1, fallback6868
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5041
  fallback6868:
    set fb_tmp_688, _lex_param_1
    repr_defined $I5007, fb_tmp_688
    unless $I5007 goto if3111_else6866 
    set $P5042, fb_tmp_688["args"]
    set $P5044, $P5042
    goto if3111_end6867
  if3111_else6866:
    null $P5043
    set $P5044, $P5043
  if3111_end6867:
    unless_null $P5044, vivi_31126869
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5044, $P5045
  vivi_31126869:
    set fb_tmp_687, $P5044
    repr_defined $I5006, fb_tmp_687
    unless $I5006 goto if3110_else6864 
    set $P5046, fb_tmp_687[0]
    set $P5048, $P5046
    goto if3110_end6865
  if3110_else6864:
    null $P5047
    set $P5048, $P5047
  if3110_end6865:
    unless_null $P5048, vivi_31136870
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5048, $P5049
  vivi_31136870:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 3108
    $P5051 = $P102."unshift"($P101)
  if3107_end6859:
.annotate 'line', 3110
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_520_1382959278.72036") :anon :lex :outer("cuid_321_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3078
    .lex "$sym", $P101 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3079
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6815
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_679, $P5003
    repr_defined $I5001, fb_tmp_679
    unless $I5001 goto if3082_else6816 
    set $P5005, fb_tmp_679["$W"]
    set $P5007, $P5005
    goto if3082_end6817
  if3082_else6816:
    null $P5006
    set $P5007, $P5006
  if3082_end6817:
    unless_null $P5007, vivi_30836818
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_30836818:
    unless_null $P5007, vivi_30846819
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30846819:
    set $P5002, $P5007
  fallback6815:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6822
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  fallback6822:
    set fb_tmp_680, $P5011
    repr_defined $I5002, fb_tmp_680
    unless $I5002 goto if3085_else6820 
    set $P5013, fb_tmp_680["name"]
    set $P5015, $P5013
    goto if3085_end6821
  if3085_else6820:
    null $P5014
    set $P5015, $P5014
  if3085_end6821:
    unless_null $P5015, vivi_30866823
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_30866823:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3087_end6825 
.annotate 'line', 3080
.annotate 'line', 3081
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3087_end6825:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_522_1382959278.72036") :anon :lex :outer("cuid_321_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3089
    .const 'Sub' $P5027 = 'cuid_521_1382959278.72036' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_684 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6838
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  fallback6838:
    set fb_tmp_683, $P5003
    repr_defined $I5002, fb_tmp_683
    unless $I5002 goto if3094_else6836 
    set $P5005, fb_tmp_683["name"]
    set $P5007, $P5005
    goto if3094_end6837
  if3094_else6836:
    null $P5006
    set $P5007, $P5006
  if3094_end6837:
    unless_null $P5007, vivi_30956839
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_30956839:
    set fb_tmp_682, $P5007
    repr_defined $I5001, fb_tmp_682
    unless $I5001 goto if3093_else6834 
    set $P5009, fb_tmp_682["identifier"]
    set $P5011, $P5009
    goto if3093_end6835
  if3093_else6834:
    null $P5010
    set $P5011, $P5010
  if3093_end6835:
    unless_null $P5011, vivi_30966840
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_30966840:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6845
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  fallback6845:
    set fb_tmp_684, $P5013
    repr_defined $I5003, fb_tmp_684
    unless $I5003 goto if3098_else6843 
    set $P5015, fb_tmp_684["args"]
    set $P5017, $P5015
    goto if3098_end6844
  if3098_else6843:
    null $P5016
    set $P5017, $P5016
  if3098_end6844:
    unless_null $P5017, vivi_30996846
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_30996846:
    if $P5017 goto unless3097_end6842 
.annotate 'line', 3091
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_31056855
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_521_1382959278.72036' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_31046854
  catch_handler_31056855:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_31046854
  skip_handler_31046854:
  unless3097_end6842:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3106_end6857 
.annotate 'line', 3099
.annotate 'line', 3100
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3106_end6857:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_521_1382959278.72036") :anon :lex :outer("cuid_522_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3092
    .lex "$sym", $P101 
    .local pmc fb_tmp_685 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3093
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6847
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_685, $P5003
    repr_defined $I5001, fb_tmp_685
    unless $I5001 goto if3100_else6848 
    set $P5005, fb_tmp_685["$W"]
    set $P5007, $P5005
    goto if3100_end6849
  if3100_else6848:
    null $P5006
    set $P5007, $P5006
  if3100_end6849:
    unless_null $P5007, vivi_31016850
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_31016850:
    unless_null $P5007, vivi_31026851
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_31026851:
    set $P5002, $P5007
  fallback6847:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3103_end6853 
.annotate 'line', 3094
.annotate 'line', 3095
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3103_end6853:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_322_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3113
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6875
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback6875:
    set fb_tmp_689, _lex_param_1
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if3115_else6873 
    set $P5004, fb_tmp_689["args"]
    set $P5006, $P5004
    goto if3115_end6874
  if3115_else6873:
    null $P5005
    set $P5006, $P5005
  if3115_end6874:
    unless_null $P5006, vivi_31166876
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_31166876:
    unless $P5006 goto if3114_else6871 
.annotate 'line', 3114
    unless_null _lex_param_1, fallback6881
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback6881:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5003, fb_tmp_691
    unless $I5003 goto if3118_else6879 
    set $P5009, fb_tmp_691["args"]
    set $P5011, $P5009
    goto if3118_end6880
  if3118_else6879:
    null $P5010
    set $P5011, $P5010
  if3118_end6880:
    unless_null $P5011, vivi_31196882
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_31196882:
    set fb_tmp_690, $P5011
    repr_defined $I5002, fb_tmp_690
    unless $I5002 goto if3117_else6877 
    set $P5013, fb_tmp_690[0]
    set $P5015, $P5013
    goto if3117_end6878
  if3117_else6877:
    null $P5014
    set $P5015, $P5014
  if3117_end6878:
    unless_null $P5015, vivi_31206883
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_31206883:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3114_end6872
  if3114_else6871:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3114_end6872:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6886
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5021
  fallback6886:
    set fb_tmp_692, _lex_param_1
    repr_defined $I5004, fb_tmp_692
    unless $I5004 goto if3121_else6884 
    set $P5022, fb_tmp_692["op"]
    set $P5024, $P5022
    goto if3121_end6885
  if3121_else6884:
    null $P5023
    set $P5024, $P5023
  if3121_end6885:
    unless_null $P5024, vivi_31226887
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_31226887:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
.annotate 'line', 3116
    set $S5002, $P102
    split $P5027, "__", $S5002
    $P5028 = "&join"(" ", $P5027)
    set $P102, $P5028
.annotate 'line', 3117
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_323_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3120
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_693 
.annotate 'line', 3121
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    unless_null _lex_param_1, fallback6890
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback6890:
    set fb_tmp_693, _lex_param_1
    repr_defined $I5001, fb_tmp_693
    unless $I5001 goto if3123_else6888 
    set $P5003, fb_tmp_693["const"]
    set $P5005, $P5003
    goto if3123_end6889
  if3123_else6888:
    null $P5004
    set $P5005, $P5004
  if3123_end6889:
    unless_null $P5005, vivi_31246891
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_31246891:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_324_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6894
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5004
  fallback6894:
    set fb_tmp_694, _lex_param_1
    repr_defined $I5001, fb_tmp_694
    unless $I5001 goto if3125_else6892 
    set $P5005, fb_tmp_694["op"]
    set $P5007, $P5005
    goto if3125_end6893
  if3125_else6892:
    null $P5006
    set $P5007, $P5006
  if3125_end6893:
    unless_null $P5007, vivi_31266895
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_31266895:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6900
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5010
  fallback6900:
    set fb_tmp_695, _lex_param_1
    repr_defined $I5002, fb_tmp_695
    unless $I5002 goto if3128_else6898 
    set $P5011, fb_tmp_695["args"]
    set $P5013, $P5011
    goto if3128_end6899
  if3128_else6898:
    null $P5012
    set $P5013, $P5012
  if3128_end6899:
    unless_null $P5013, vivi_31296901
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_31296901:
    unless $P5013 goto if3127_else6896 
.annotate 'line', 3126
    unless_null _lex_param_1, fallback6906
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5015
  fallback6906:
    set fb_tmp_697, _lex_param_1
    repr_defined $I5004, fb_tmp_697
    unless $I5004 goto if3131_else6904 
    set $P5016, fb_tmp_697["args"]
    set $P5018, $P5016
    goto if3131_end6905
  if3131_else6904:
    null $P5017
    set $P5018, $P5017
  if3131_end6905:
    unless_null $P5018, vivi_31326907
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_31326907:
    set fb_tmp_696, $P5018
    repr_defined $I5003, fb_tmp_696
    unless $I5003 goto if3130_else6902 
    set $P5020, fb_tmp_696[0]
    set $P5022, $P5020
    goto if3130_end6903
  if3130_else6902:
    null $P5021
    set $P5022, $P5021
  if3130_end6903:
    unless_null $P5022, vivi_31336908
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5022, $P5023
  vivi_31336908:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3127_end6897
  if3127_else6896:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3127_end6897:
    set $P102, $P5027
.annotate 'line', 3127
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 3128
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_325_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_698 
.annotate 'line', 3132
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    unless_null _lex_param_1, fallback6911
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback6911:
    set fb_tmp_698, _lex_param_1
    repr_defined $I5001, fb_tmp_698
    unless $I5001 goto if3134_else6909 
    set $P5003, fb_tmp_698["const"]
    set $P5005, $P5003
    goto if3134_end6910
  if3134_else6909:
    null $P5004
    set $P5005, $P5004
  if3134_end6910:
    unless_null $P5005, vivi_31356912
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_31356912:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_326_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3135
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "$stmts", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_699 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 3136
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
    $P5004 = $P5003."unique"("dispatch_cap")
    set $P101, $P5004
.annotate 'line', 3137
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 3138
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3140
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5008 = $P5007."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3141
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5010 = $P5009."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5011 = $P5006."new"($P5008, $P5010, "bind" :named("op"))
.annotate 'line', 3143
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3145
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3147
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3149
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
.annotate 'line', 3151
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5017 = $P5016."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3152
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 64
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback6913
    nqp_get_sc_object $P5021, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5020, $P5021
    set fb_tmp_699, $P5020
    repr_defined $I5001, fb_tmp_699
    unless $I5001 goto if3136_else6914 
    set $P5022, fb_tmp_699["$W"]
    set $P5024, $P5022
    goto if3136_end6915
  if3136_else6914:
    null $P5023
    set $P5024, $P5023
  if3136_end6915:
    unless_null $P5024, vivi_31376916
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5024, $P5025
  vivi_31376916:
    unless_null $P5024, vivi_31386917
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_31386917:
    set $P5019, $P5024
  fallback6913:
    new $P5027, 'ResizablePMCArray'
    box $P5028, "NQPRoutine"
    push $P5027, $P5028
    $P5029 = $P5019."find_sym"($P5027)
    $P5030 = $P5018."new"($P5029 :named("value"))
    $P5031 = $P5015."new"($P5017, $P5030, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 3154
    nqp_get_sc_object $P5032, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5033 = $P5032."new"($P101 :named("name"), "local" :named("scope"))
    $P5034 = $P5014."new"($P5031, $P5033, "multicachefind" :named("op"))
.annotate 'line', 3156
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3158
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5037 = $P5036."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3159
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5039 = $P5038."new"($P101 :named("name"), "local" :named("scope"))
    $P5040 = $P5035."new"($P5037, $P5039, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5041 = $P5013."new"($P5034, $P5040, "ifnull" :named("op"))
.annotate 'line', 3162
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5043 = $P5042."new"($P101 :named("name"), "local" :named("scope"))
    $P5044 = $P5012."new"($P5041, $P5043, "invokewithcapture" :named("op"))
    $P5045 = $P5005."new"($P5011, $P5044)
    set $P102, $P5045
.annotate 'line', 3164
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5047 = $P5046."new"($P102, $P101, "locallifetime" :named("op"))
    $P5048 = _lex_param_1."!make"($P5047)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_327_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3167
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_700 
    unless_null _lex_param_1, fallback6920
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback6920:
    set fb_tmp_700, _lex_param_1
    repr_defined $I5001, fb_tmp_700
    unless $I5001 goto if3139_else6918 
    set $P5002, fb_tmp_700["arglist"]
    set $P5004, $P5002
    goto if3139_end6919
  if3139_else6918:
    null $P5003
    set $P5004, $P5003
  if3139_end6919:
    unless_null $P5004, vivi_31406921
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31406921:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_328_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3169
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_524_1382959278.72036' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 3170
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6926
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback6926:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if3142_else6924 
    set $P5007, fb_tmp_701["EXPR"]
    set $P5009, $P5007
    goto if3142_end6925
  if3142_else6924:
    null $P5008
    set $P5009, $P5008
  if3142_end6925:
    unless_null $P5009, vivi_31436927
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_31436927:
    unless $P5009 goto if3141_end6923 
    .const 'Sub' $P5011 = 'cuid_524_1382959278.72036' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3141_end6923:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3179
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3149_test6941:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3149_done6945 
  while3149_redo6943:
.annotate 'line', 3180
    set fb_tmp_703, $P101
    repr_defined $I5004, fb_tmp_703
    unless $I5004 goto if3152_else6950 
    set $I5005, $P102
    set $P5016, fb_tmp_703[$I5005]
    set $P5018, $P5016
    goto if3152_end6951
  if3152_else6950:
    null $P5017
    set $P5018, $P5017
  if3152_end6951:
    unless_null $P5018, vivi_31536952
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5018, $P5019
  vivi_31536952:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3151_end6949 
.annotate 'line', 3181
    set fb_tmp_704, $P101
    repr_defined $I5007, fb_tmp_704
    unless $I5007 goto if3154_else6953 
    set $I5008, $P102
    set $P5021, fb_tmp_704[$I5008]
    set $P5023, $P5021
    goto if3154_end6954
  if3154_else6953:
    null $P5022
    set $P5023, $P5022
  if3154_end6954:
    unless_null $P5023, vivi_31556955
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_31556955:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3151_end6949:
    unless $I5009 goto if3150_end6947 
    set $I5010, $P102
    set fb_tmp_706, $P101
    repr_defined $I5012, fb_tmp_706
    unless $I5012 goto if3157_else6958 
    set $I5013, $P102
    set $P5026, fb_tmp_706[$I5013]
    set $P5028, $P5026
    goto if3157_end6959
  if3157_else6958:
    null $P5027
    set $P5028, $P5027
  if3157_end6959:
    unless_null $P5028, vivi_31586960
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5028, $P5029
  vivi_31586960:
    set fb_tmp_705, $P5028
    repr_defined $I5011, fb_tmp_705
    unless $I5011 goto if3156_else6956 
    set $P5030, fb_tmp_705[0]
    set $P5032, $P5030
    goto if3156_end6957
  if3156_else6956:
    null $P5031
    set $P5032, $P5031
  if3156_end6957:
    unless_null $P5032, vivi_31596961
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5032, $P5033
  vivi_31596961:
    set $P101[$I5010], $P5032
.annotate 'line', 3183
    set fb_tmp_707, $P101
    repr_defined $I5014, fb_tmp_707
    unless $I5014 goto if3160_else6962 
    set $I5015, $P102
    set $P5034, fb_tmp_707[$I5015]
    set $P5036, $P5034
    goto if3160_end6963
  if3160_else6962:
    null $P5035
    set $P5036, $P5035
  if3160_end6963:
    unless_null $P5036, vivi_31616964
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5036, $P5037
  vivi_31616964:
    $P5036."flat"(1)
    set fb_tmp_708, $P101
    repr_defined $I5017, fb_tmp_708
    unless $I5017 goto if3164_else6969 
    set $I5018, $P102
    set $P5038, fb_tmp_708[$I5018]
    set $P5040, $P5038
    goto if3164_end6970
  if3164_else6969:
    null $P5039
    set $P5040, $P5039
  if3164_end6970:
    unless_null $P5040, vivi_31656971
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5040, $P5041
  vivi_31656971:
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3163_end6968 
.annotate 'line', 3185
    set fb_tmp_709, $P101
    repr_defined $I5020, fb_tmp_709
    unless $I5020 goto if3166_else6972 
    set $I5021, $P102
    set $P5043, fb_tmp_709[$I5021]
    set $P5045, $P5043
    goto if3166_end6973
  if3166_else6972:
    null $P5044
    set $P5045, $P5044
  if3166_end6973:
    unless_null $P5045, vivi_31676974
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  vivi_31676974:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3163_end6968:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3162_end6966 
.annotate 'line', 3184
    set fb_tmp_710, $P101
    repr_defined $I5023, fb_tmp_710
    unless $I5023 goto if3168_else6975 
    set $I5024, $P102
    set $P5048, fb_tmp_710[$I5024]
    set $P5050, $P5048
    goto if3168_end6976
  if3168_else6975:
    null $P5049
    set $P5050, $P5049
  if3168_end6976:
    unless_null $P5050, vivi_31696977
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5050, $P5051
  vivi_31696977:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3162_end6966:
  if3150_end6947:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3149_test6941 
  while3149_done6945:
.annotate 'line', 3189
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_524_1382959278.72036") :anon :lex :outer("cuid_328_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3171
    .const 'Sub' $P5021 = 'cuid_523_1382959278.72036' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_702 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3172
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6930
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5002, $P5003
  fallback6930:
    set fb_tmp_702, $P5002
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if3144_else6928 
    set $P5004, fb_tmp_702["EXPR"]
    set $P5006, $P5004
    goto if3144_end6929
  if3144_else6928:
    null $P5005
    set $P5006, $P5005
  if3144_end6929:
    unless_null $P5006, vivi_31456931
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_31456931:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3148_end6937 
.annotate 'line', 3173
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3148_end6937:
    set $I5006, $I5004
    unless $I5004 goto if3147_end6935 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3147_end6935:
    unless $I5006 goto if3146_else6932 
.annotate 'line', 3174
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6938:
    unless $P5014, for_done6940
    shift $P5017, $P5014
  for_redo6939:
    .const 'Sub' $P5016 = 'cuid_523_1382959278.72036' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6938
  for_done6940:
    set $P5020, $P5012
    goto if3146_end6933
  if3146_else6932:
.annotate 'line', 3176
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3146_end6933:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_523_1382959278.72036") :anon :lex :outer("cuid_524_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3174
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_329_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3192
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    unless_null _lex_param_1, fallback6980
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback6980:
    set fb_tmp_711, _lex_param_1
    repr_defined $I5001, fb_tmp_711
    unless $I5001 goto if3170_else6978 
    set $P5002, fb_tmp_711["multi_declarator"]
    set $P5004, $P5002
    goto if3170_end6979
  if3170_else6978:
    null $P5003
    set $P5004, $P5003
  if3170_end6979:
    unless_null $P5004, vivi_31716981
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31716981:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_330_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3194
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_712 
    unless_null _lex_param_1, fallback6984
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback6984:
    set fb_tmp_712, _lex_param_1
    repr_defined $I5001, fb_tmp_712
    unless $I5001 goto if3172_else6982 
    set $P5002, fb_tmp_712["value"]
    set $P5004, $P5002
    goto if3172_end6983
  if3172_else6982:
    null $P5003
    set $P5004, $P5003
  if3172_end6983:
    unless_null $P5004, vivi_31736985
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31736985:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_331_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3196
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_715 
.annotate 'line', 3197
    unless_null _lex_param_1, fallback6990
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback6990:
    set fb_tmp_713, _lex_param_1
    repr_defined $I5001, fb_tmp_713
    unless $I5001 goto if3175_else6988 
    set $P5002, fb_tmp_713["EXPR"]
    set $P5004, $P5002
    goto if3175_end6989
  if3175_else6988:
    null $P5003
    set $P5004, $P5003
  if3175_end6989:
    unless_null $P5004, vivi_31766991
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31766991:
    unless $P5004 goto if3174_else6986 
.annotate 'line', 3198
    unless_null _lex_param_1, fallback6996
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback6996:
    set fb_tmp_715, _lex_param_1
    repr_defined $I5003, fb_tmp_715
    unless $I5003 goto if3178_else6994 
    set $P5007, fb_tmp_715["EXPR"]
    set $P5009, $P5007
    goto if3178_end6995
  if3178_else6994:
    null $P5008
    set $P5009, $P5008
  if3178_end6995:
    unless_null $P5009, vivi_31796997
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_31796997:
    set fb_tmp_714, $P5009
    repr_defined $I5002, fb_tmp_714
    unless $I5002 goto if3177_else6992 
    set $P5011, fb_tmp_714[0]
    set $P5013, $P5011
    goto if3177_end6993
  if3177_else6992:
    null $P5012
    set $P5013, $P5012
  if3177_end6993:
    unless_null $P5013, vivi_31806998
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5013, $P5014
  vivi_31806998:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3174_end6987
  if3174_else6986:
.annotate 'line', 3199
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3174_end6987:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_332_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3202
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback7003
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7003:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5001, fb_tmp_716
    unless $I5001 goto if3182_else7001 
    set $P5003, fb_tmp_716["EXPR"]
    set $P5005, $P5003
    goto if3182_end7002
  if3182_else7001:
    null $P5004
    set $P5005, $P5004
  if3182_end7002:
    unless_null $P5005, vivi_31837004
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_31837004:
    unless $P5005 goto if3181_else6999 
.annotate 'line', 3204
.annotate 'line', 3205
    unless_null _lex_param_1, fallback7009
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5007
  fallback7009:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5003, fb_tmp_718
    unless $I5003 goto if3185_else7007 
    set $P5008, fb_tmp_718["EXPR"]
    set $P5010, $P5008
    goto if3185_end7008
  if3185_else7007:
    null $P5009
    set $P5010, $P5009
  if3185_end7008:
    unless_null $P5010, vivi_31867010
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_31867010:
    set fb_tmp_717, $P5010
    repr_defined $I5002, fb_tmp_717
    unless $I5002 goto if3184_else7005 
    set $P5012, fb_tmp_717[0]
    set $P5014, $P5012
    goto if3184_end7006
  if3184_else7005:
    null $P5013
    set $P5014, $P5013
  if3184_end7006:
    unless_null $P5014, vivi_31877011
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5014, $P5015
  vivi_31877011:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3189_end7015 
.annotate 'line', 3206
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3189_end7015:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3188_end7013 
.annotate 'line', 3207
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3188_end7013:
    goto if3181_end7000
  if3181_else6999:
.annotate 'line', 3210
.annotate 'line', 3211
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3181_end7000:
.annotate 'line', 3213
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3214
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_333_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3217
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_719 
    unless_null _lex_param_1, fallback7018
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7018:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5001, fb_tmp_719
    unless $I5001 goto if3190_else7016 
    set $P5002, fb_tmp_719["quote_EXPR"]
    set $P5004, $P5002
    goto if3190_end7017
  if3190_else7016:
    null $P5003
    set $P5004, $P5003
  if3190_end7017:
    unless_null $P5004, vivi_31917019
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31917019:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_334_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3218
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_720 
    unless_null _lex_param_1, fallback7022
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7022:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5001, fb_tmp_720
    unless $I5001 goto if3192_else7020 
    set $P5002, fb_tmp_720["quote_EXPR"]
    set $P5004, $P5002
    goto if3192_end7021
  if3192_else7020:
    null $P5003
    set $P5004, $P5003
  if3192_end7021:
    unless_null $P5004, vivi_31937023
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31937023:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_335_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3220
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_525_1382959278.72036' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    unless_null _lex_param_1, fallback7034
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7034:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5005, fb_tmp_724
    unless $I5005 goto if3198_else7032 
    set $P5002, fb_tmp_724["pblock"]
    set $P5004, $P5002
    goto if3198_end7033
  if3198_else7032:
    null $P5003
    set $P5004, $P5003
  if3198_end7033:
    unless_null $P5004, vivi_31997035
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_31997035:
    set fb_tmp_723, $P5004
    repr_defined $I5004, fb_tmp_723
    unless $I5004 goto if3197_else7030 
    set $P5006, fb_tmp_723["blockoid"]
    set $P5008, $P5006
    goto if3197_end7031
  if3197_else7030:
    null $P5007
    set $P5008, $P5007
  if3197_end7031:
    unless_null $P5008, vivi_32007036
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_32007036:
    set fb_tmp_722, $P5008
    repr_defined $I5003, fb_tmp_722
    unless $I5003 goto if3196_else7028 
    set $P5010, fb_tmp_722["statementlist"]
    set $P5012, $P5010
    goto if3196_end7029
  if3196_else7028:
    null $P5011
    set $P5012, $P5011
  if3196_end7029:
    unless_null $P5012, vivi_32017037
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_32017037:
    set fb_tmp_721, $P5012
    repr_defined $I5002, fb_tmp_721
    unless $I5002 goto if3195_else7026 
    set $P5014, fb_tmp_721["statement"]
    set $P5016, $P5014
    goto if3195_end7027
  if3195_else7026:
    null $P5015
    set $P5016, $P5015
  if3195_end7027:
    unless_null $P5016, vivi_32027038
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_32027038:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3194_else7024 
    .const 'Sub' $P5018 = 'cuid_525_1382959278.72036' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3194_end7025
  if3194_else7024:
    unless_null _lex_param_1, fallback7051
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5020
  fallback7051:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5008, fb_tmp_728
    unless $I5008 goto if3208_else7049 
    set $P5021, fb_tmp_728["pblock"]
    set $P5023, $P5021
    goto if3208_end7050
  if3208_else7049:
    null $P5022
    set $P5023, $P5022
  if3208_end7050:
    unless_null $P5023, vivi_32097052
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_32097052:
    set fb_tmp_727, $P5023
    repr_defined $I5007, fb_tmp_727
    unless $I5007 goto if3207_else7047 
    set $P5025, fb_tmp_727["blockoid"]
    set $P5027, $P5025
    goto if3207_end7048
  if3207_else7047:
    null $P5026
    set $P5027, $P5026
  if3207_end7048:
    unless_null $P5027, vivi_32107053
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5027, $P5028
  vivi_32107053:
    set fb_tmp_726, $P5027
    repr_defined $I5006, fb_tmp_726
    unless $I5006 goto if3206_else7045 
    set $P5029, fb_tmp_726["you_are_here"]
    set $P5031, $P5029
    goto if3206_end7046
  if3206_else7045:
    null $P5030
    set $P5031, $P5030
  if3206_end7046:
    unless_null $P5031, vivi_32117054
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_32117054:
    unless $P5031 goto if3205_else7043 
.annotate 'line', 3226
.annotate 'line', 3227
    unless_null _lex_param_1, fallback7057
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5033
  fallback7057:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5009, fb_tmp_729
    unless $I5009 goto if3212_else7055 
    set $P5034, fb_tmp_729["pblock"]
    set $P5036, $P5034
    goto if3212_end7056
  if3212_else7055:
    null $P5035
    set $P5036, $P5035
  if3212_end7056:
    unless_null $P5036, vivi_32137058
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5036, $P5037
  vivi_32137058:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3205_end7044
  if3205_else7043:
.annotate 'line', 3229
.annotate 'line', 3230
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3205_end7044:
    set $P5043, $P5042
  if3194_end7025:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_525_1382959278.72036") :anon :lex :outer("cuid_335_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3221
    .lex "$past", $P101 
    .local pmc fb_tmp_725 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3222
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    find_lex $P5003, "$/"
    unless_null $P5003, fallback7041
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  fallback7041:
    set fb_tmp_725, $P5003
    repr_defined $I5001, fb_tmp_725
    unless $I5001 goto if3203_else7039 
    set $P5005, fb_tmp_725["pblock"]
    set $P5007, $P5005
    goto if3203_end7040
  if3203_else7039:
    null $P5006
    set $P5007, $P5006
  if3203_end7040:
    unless_null $P5007, vivi_32047042
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_32047042:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3224
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_336_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3234
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_730 
    unless_null _lex_param_1, fallback7061
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7061:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5001, fb_tmp_730
    unless $I5001 goto if3214_else7059 
    set $P5002, fb_tmp_730["statement"]
    set $P5004, $P5002
    goto if3214_end7060
  if3214_else7059:
    null $P5003
    set $P5004, $P5003
  if3214_end7060:
    unless_null $P5004, vivi_32157062
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32157062:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_337_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3236
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_731 
.annotate 'line', 3237
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
    unless_null _lex_param_1, fallback7065
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7065:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5001, fb_tmp_731
    unless $I5001 goto if3216_else7063 
    set $P5003, fb_tmp_731["EXPR"]
    set $P5005, $P5003
    goto if3216_end7064
  if3216_else7063:
    null $P5004
    set $P5005, $P5004
  if3216_end7064:
    unless_null $P5005, vivi_32177066
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32177066:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_338_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3240
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_732 
.annotate 'line', 3241
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
    unless_null _lex_param_1, fallback7069
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7069:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5001, fb_tmp_732
    unless $I5001 goto if3218_else7067 
    set $P5003, fb_tmp_732["EXPR"]
    set $P5005, $P5003
    goto if3218_end7068
  if3218_else7067:
    null $P5004
    set $P5005, $P5004
  if3218_end7068:
    unless_null $P5005, vivi_32197070
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32197070:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_339_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3244
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
.annotate 'line', 3245
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 84
    unless_null _lex_param_1, fallback7073
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7073:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3220_else7071 
    set $P5003, fb_tmp_733["quote_EXPR"]
    set $P5005, $P5003
    goto if3220_end7072
  if3220_else7071:
    null $P5004
    set $P5005, $P5004
  if3220_end7072:
    unless_null $P5005, vivi_32217074
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32217074:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_340_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3248
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
.annotate 'line', 3249
    unless_null _lex_param_1, fallback7077
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7077:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3222_else7075 
    set $P5002, fb_tmp_734["arglist"]
    set $P5004, $P5002
    goto if3222_end7076
  if3222_else7075:
    null $P5003
    set $P5004, $P5003
  if3222_end7076:
    unless_null $P5004, vivi_32237078
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32237078:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_341_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3252
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_735 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
.annotate 'line', 3253
    unless_null _lex_param_1, fallback7083
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7083:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5001, fb_tmp_735
    unless $I5001 goto if3225_else7081 
    set $P5002, fb_tmp_735["quote"]
    set $P5004, $P5002
    goto if3225_end7082
  if3225_else7081:
    null $P5003
    set $P5004, $P5003
  if3225_end7082:
    unless_null $P5004, vivi_32267084
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32267084:
    unless $P5004 goto if3224_else7079 
    unless_null _lex_param_1, fallback7087
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5006
  fallback7087:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5002, fb_tmp_736
    unless $I5002 goto if3227_else7085 
    set $P5007, fb_tmp_736["quote"]
    set $P5009, $P5007
    goto if3227_end7086
  if3227_else7085:
    null $P5008
    set $P5009, $P5008
  if3227_end7086:
    unless_null $P5009, vivi_32287088
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_32287088:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3224_end7080
  if3224_else7079:
    unless_null _lex_param_1, fallback7091
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5012
  fallback7091:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5003, fb_tmp_737
    unless $I5003 goto if3229_else7089 
    set $P5013, fb_tmp_737["number"]
    set $P5015, $P5013
    goto if3229_end7090
  if3229_else7089:
    null $P5014
    set $P5015, $P5014
  if3229_end7090:
    unless_null $P5015, vivi_32307092
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_32307092:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3224_end7080:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_342_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3256
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_738 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback7097
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7097:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5001, fb_tmp_738
    unless $I5001 goto if3232_else7095 
    set $P5003, fb_tmp_738["dec_number"]
    set $P5005, $P5003
    goto if3232_end7096
  if3232_else7095:
    null $P5004
    set $P5005, $P5004
  if3232_end7096:
    unless_null $P5005, vivi_32337098
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32337098:
    unless $P5005 goto if3231_else7093 
.annotate 'line', 3257
    unless_null _lex_param_1, fallback7101
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5007
  fallback7101:
    set fb_tmp_739, _lex_param_1
    repr_defined $I5002, fb_tmp_739
    unless $I5002 goto if3234_else7099 
    set $P5008, fb_tmp_739["dec_number"]
    set $P5010, $P5008
    goto if3234_end7100
  if3234_else7099:
    null $P5009
    set $P5010, $P5009
  if3234_end7100:
    unless_null $P5010, vivi_32357102
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5010, $P5011
  vivi_32357102:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3231_end7094
  if3231_else7093:
    unless_null _lex_param_1, fallback7105
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5013
  fallback7105:
    set fb_tmp_740, _lex_param_1
    repr_defined $I5003, fb_tmp_740
    unless $I5003 goto if3236_else7103 
    set $P5014, fb_tmp_740["integer"]
    set $P5016, $P5014
    goto if3236_end7104
  if3236_else7103:
    null $P5015
    set $P5016, $P5015
  if3236_end7104:
    unless_null $P5016, vivi_32377106
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5016, $P5017
  vivi_32377106:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3231_end7094:
    set $P101, $P5019
    unless_null _lex_param_1, fallback7111
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5020
  fallback7111:
    set fb_tmp_741, _lex_param_1
    repr_defined $I5005, fb_tmp_741
    unless $I5005 goto if3239_else7109 
    set $P5021, fb_tmp_741["sign"]
    set $P5023, $P5021
    goto if3239_end7110
  if3239_else7109:
    null $P5022
    set $P5023, $P5022
  if3239_end7110:
    unless_null $P5023, vivi_32407112
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5023, $P5024
  vivi_32407112:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3238_end7108 
.annotate 'line', 3258
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3238_end7108:
.annotate 'line', 3259
    unless_null _lex_param_1, fallback7117
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5026
  fallback7117:
    set fb_tmp_742, _lex_param_1
    repr_defined $I5006, fb_tmp_742
    unless $I5006 goto if3242_else7115 
    set $P5027, fb_tmp_742["dec_number"]
    set $P5029, $P5027
    goto if3242_end7116
  if3242_else7115:
    null $P5028
    set $P5029, $P5028
  if3242_end7116:
    unless_null $P5029, vivi_32437118
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5029, $P5030
  vivi_32437118:
    unless $P5029 goto if3241_else7113 
.annotate 'line', 3260
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 49
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3241_end7114
  if3241_else7113:
.annotate 'line', 3261
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3241_end7114:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_343_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3264
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_743 
    unless_null _lex_param_1, fallback7121
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7121:
    set fb_tmp_743, _lex_param_1
    repr_defined $I5001, fb_tmp_743
    unless $I5001 goto if3244_else7119 
    set $P5002, fb_tmp_743["quote_EXPR"]
    set $P5004, $P5002
    goto if3244_end7120
  if3244_else7119:
    null $P5003
    set $P5004, $P5003
  if3244_end7120:
    unless_null $P5004, vivi_32457122
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32457122:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_344_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3265
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_744 
    unless_null _lex_param_1, fallback7125
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7125:
    set fb_tmp_744, _lex_param_1
    repr_defined $I5001, fb_tmp_744
    unless $I5001 goto if3246_else7123 
    set $P5002, fb_tmp_744["quote_EXPR"]
    set $P5004, $P5002
    goto if3246_end7124
  if3246_else7123:
    null $P5003
    set $P5004, $P5003
  if3246_end7124:
    unless_null $P5004, vivi_32477126
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32477126:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_345_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3266
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_745 
    unless_null _lex_param_1, fallback7129
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7129:
    set fb_tmp_745, _lex_param_1
    repr_defined $I5001, fb_tmp_745
    unless $I5001 goto if3248_else7127 
    set $P5002, fb_tmp_745["quote_EXPR"]
    set $P5004, $P5002
    goto if3248_end7128
  if3248_else7127:
    null $P5003
    set $P5004, $P5003
  if3248_end7128:
    unless_null $P5004, vivi_32497130
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32497130:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_346_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3267
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_746 
    unless_null _lex_param_1, fallback7133
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7133:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5001, fb_tmp_746
    unless $I5001 goto if3250_else7131 
    set $P5002, fb_tmp_746["quote_EXPR"]
    set $P5004, $P5002
    goto if3250_end7132
  if3250_else7131:
    null $P5003
    set $P5004, $P5003
  if3250_end7132:
    unless_null $P5004, vivi_32517134
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32517134:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_347_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3268
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    unless_null _lex_param_1, fallback7137
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7137:
    set fb_tmp_747, _lex_param_1
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3252_else7135 
    set $P5002, fb_tmp_747["quote_EXPR"]
    set $P5004, $P5002
    goto if3252_end7136
  if3252_else7135:
    null $P5003
    set $P5004, $P5003
  if3252_end7136:
    unless_null $P5004, vivi_32537138
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32537138:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_348_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_748 
.annotate 'line', 3270
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 93
    unless_null _lex_param_1, fallback7141
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7141:
    set fb_tmp_748, _lex_param_1
    repr_defined $I5001, fb_tmp_748
    unless $I5001 goto if3254_else7139 
    set $P5003, fb_tmp_748["quote_EXPR"]
    set $P5005, $P5003
    goto if3254_end7140
  if3254_else7139:
    null $P5004
    set $P5005, $P5004
  if3254_end7140:
    unless_null $P5005, vivi_32557142
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32557142:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_349_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3273
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_749 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
    .local pmc fb_tmp_754 
    .local pmc fb_tmp_755 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_756 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P103, $P5003
.annotate 'line', 3274
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback7143
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5005, $P5006
    set fb_tmp_749, $P5005
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if3256_else7144 
    set $P5007, fb_tmp_749["$W"]
    set $P5009, $P5007
    goto if3256_end7145
  if3256_else7144:
    null $P5008
    set $P5009, $P5008
  if3256_end7145:
    unless_null $P5009, vivi_32577146
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5009, $P5010
  vivi_32577146:
    unless_null $P5009, vivi_32587147
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32587147:
    set $P5004, $P5009
  fallback7143:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3275
    set fb_tmp_750, $P101
    repr_defined $I5002, fb_tmp_750
    unless $I5002 goto if3259_else7148 
    set $P5013, fb_tmp_750[0]
    set $P5015, $P5013
    goto if3259_end7149
  if3259_else7148:
    null $P5014
    set $P5015, $P5014
  if3259_end7149:
    unless_null $P5015, vivi_32607150
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5015, $P5016
  vivi_32607150:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3276
    set fb_tmp_751, $P101
    repr_defined $I5003, fb_tmp_751
    unless $I5003 goto if3261_else7151 
    set $P5019, fb_tmp_751[0]
    set $P5021, $P5019
    goto if3261_end7152
  if3261_else7151:
    null $P5020
    set $P5021, $P5020
  if3261_end7152:
    unless_null $P5021, vivi_32627153
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_32627153:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3278
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3279
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3280
    set fb_tmp_752, $P101
    repr_defined $I5004, fb_tmp_752
    unless $I5004 goto if3263_else7154 
    set $P5029, fb_tmp_752[0]
    set $P5031, $P5029
    goto if3263_end7155
  if3263_else7154:
    null $P5030
    set $P5031, $P5030
  if3263_end7155:
    unless_null $P5031, vivi_32647156
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5031, $P5032
  vivi_32647156:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3281
    set fb_tmp_753, $P101
    repr_defined $I5005, fb_tmp_753
    unless $I5005 goto if3265_else7157 
    set $P5035, fb_tmp_753[0]
    set $P5037, $P5035
    goto if3265_end7158
  if3265_else7157:
    null $P5036
    set $P5037, $P5036
  if3265_end7158:
    unless_null $P5037, vivi_32667159
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_32667159:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3282
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3283
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3285
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback7162
    nqp_get_sc_object $P5043, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_50, $P5042
    set fb_tmp_755, pkg_viv_tmp_50
    repr_defined $I5007, fb_tmp_755
    unless $I5007 goto if3268_else7163 
    set $P5044, fb_tmp_755["%LANG"]
    set $P5046, $P5044
    goto if3268_end7164
  if3268_else7163:
    null $P5045
    set $P5046, $P5045
  if3268_end7164:
    unless_null $P5046, vivi_32697165
    new $P5047, 'Hash'
    set pkg_viv_tmp_50["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32697165:
    unless_null $P5046, vivi_32707166
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32707166:
    set $P5041, $P5046
  fallback7162:
    set fb_tmp_754, $P5041
    repr_defined $I5006, fb_tmp_754
    unless $I5006 goto if3267_else7160 
    set $P5049, fb_tmp_754["Regex-actions"]
    set $P5051, $P5049
    goto if3267_end7161
  if3267_else7160:
    null $P5050
    set $P5051, $P5050
  if3267_end7161:
    unless_null $P5051, vivi_32717167
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5051, $P5052
  vivi_32717167:
    unless_null _lex_param_1, fallback7170
    nqp_get_sc_object $P5053, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5053
  fallback7170:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5008, fb_tmp_756
    unless $I5008 goto if3272_else7168 
    set $P5054, fb_tmp_756["p6regex"]
    set $P5056, $P5054
    goto if3272_end7169
  if3272_else7168:
    null $P5055
    set $P5056, $P5055
  if3272_end7169:
    unless_null $P5056, vivi_32737171
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5056, $P5057
  vivi_32737171:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3286
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3288
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3293
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_350_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3296
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
    unless_null _lex_param_1, fallback7174
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7174:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3274_else7172 
    set $P5002, fb_tmp_757["variable"]
    set $P5004, $P5002
    goto if3274_end7173
  if3274_else7172:
    null $P5003
    set $P5004, $P5003
  if3274_end7173:
    unless_null $P5004, vivi_32757175
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32757175:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_351_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3297
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
.annotate 'line', 3298
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3299
    unless_null _lex_param_1, fallback7178
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7178:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3276_else7176 
    set $P5003, fb_tmp_758["block"]
    set $P5005, $P5003
    goto if3276_end7177
  if3276_else7176:
    null $P5004
    set $P5005, $P5004
  if3276_end7177:
    unless_null $P5005, vivi_32777179
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32777179:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_352_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_353_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3306
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
    unless_null _lex_param_1, fallback7182
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7182:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3278_else7180 
    set $P5002, fb_tmp_759["dotty"]
    set $P5004, $P5002
    goto if3278_end7181
  if3278_else7180:
    null $P5003
    set $P5004, $P5003
  if3278_end7181:
    unless_null $P5004, vivi_32797183
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_32797183:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_354_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3309
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("call" :named("op"), "RETURN" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_355_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3312
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3313
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3314
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_356_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3321
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_357_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3322
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_358_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3323
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_359_1382959278.72036") :anon :lex :outer("cuid_447_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3325
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3326
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_526_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3431
    .const 'Sub' $P5015 = 'cuid_360_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_361_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_362_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_363_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_364_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_365_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_366_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_367_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_368_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_369_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_370_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_371_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_372_1382959278.72036' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_373_1382959278.72036' 
    capture_lex $P5015 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_360_1382959278.72036' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_361_1382959278.72036' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_362_1382959278.72036' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_363_1382959278.72036' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_364_1382959278.72036' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_365_1382959278.72036' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_366_1382959278.72036' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_367_1382959278.72036' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_368_1382959278.72036' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_369_1382959278.72036' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_370_1382959278.72036' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_371_1382959278.72036' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_372_1382959278.72036' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_373_1382959278.72036' 
    capture_lex $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_360_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3433
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_760 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3434
    unless_null _lex_param_1, fallback7186
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7186:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5001, fb_tmp_760
    unless $I5001 goto if3280_else7184 
    set $P5003, fb_tmp_760["statement"]
    set $P5005, $P5003
    goto if3280_end7185
  if3280_else7184:
    null $P5004
    set $P5005, $P5004
  if3280_end7185:
    unless_null $P5005, vivi_32817187
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32817187:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3435
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_361_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_761 
.annotate 'line', 3440
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    unless_null _lex_param_1, fallback7190
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7190:
    set fb_tmp_761, _lex_param_1
    repr_defined $I5001, fb_tmp_761
    unless $I5001 goto if3282_else7188 
    set $P5003, fb_tmp_761["codeblock"]
    set $P5005, $P5003
    goto if3282_end7189
  if3282_else7188:
    null $P5004
    set $P5005, $P5004
  if3282_end7189:
    unless_null $P5005, vivi_32837191
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32837191:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_362_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3444
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_763 
.annotate 'line', 3445
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
.annotate 'line', 3446
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3447
    unless_null _lex_param_1, fallback7194
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5005
  fallback7194:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5001, fb_tmp_762
    unless $I5001 goto if3284_else7192 
    set $P5006, fb_tmp_762["var"]
    set $P5008, $P5006
    goto if3284_end7193
  if3284_else7192:
    null $P5007
    set $P5008, $P5007
  if3284_end7193:
    unless_null $P5008, vivi_32857195
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_32857195:
    $P5010 = $P5008."ast"()
.annotate 'line', 3448
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 43
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback7198
    nqp_get_sc_object $P5014, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5013, $P5014
    set fb_tmp_763, $P5013
    repr_defined $I5002, fb_tmp_763
    unless $I5002 goto if3287_else7199 
    set $P5015, fb_tmp_763["$SEQ"]
    set $P5017, $P5015
    goto if3287_end7200
  if3287_else7199:
    null $P5016
    set $P5017, $P5016
  if3287_end7200:
    unless_null $P5017, vivi_32887201
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_32887201:
    unless_null $P5017, vivi_32897202
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_32897202:
    set $P5012, $P5017
  fallback7198:
    unless $P5012 goto if3286_else7196 
    set $I5003, 1
    goto if3286_end7197
  if3286_else7196:
    set $I5003, 0
  if3286_end7197:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_363_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3452
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_764 
.annotate 'line', 3453
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
.annotate 'line', 3454
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3455
    unless_null _lex_param_1, fallback7205
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5005
  fallback7205:
    set fb_tmp_764, _lex_param_1
    repr_defined $I5001, fb_tmp_764
    unless $I5001 goto if3290_else7203 
    set $P5006, fb_tmp_764["codeblock"]
    set $P5008, $P5006
    goto if3290_end7204
  if3290_else7203:
    null $P5007
    set $P5008, $P5007
  if3290_end7204:
    unless_null $P5008, vivi_32917206
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_32917206:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_364_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3459
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
.annotate 'line', 3460
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    unless_null _lex_param_1, fallback7209
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5002
  fallback7209:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5001, fb_tmp_765
    unless $I5001 goto if3292_else7207 
    set $P5003, fb_tmp_765["codeblock"]
    set $P5005, $P5003
    goto if3292_end7208
  if3292_else7207:
    null $P5004
    set $P5005, $P5004
  if3292_end7208:
    unless_null $P5005, vivi_32937210
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5005, $P5006
  vivi_32937210:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback7213
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5008
  fallback7213:
    set fb_tmp_766, _lex_param_1
    repr_defined $I5003, fb_tmp_766
    unless $I5003 goto if3294_else7211 
    set $P5009, fb_tmp_766["zw"]
    set $P5011, $P5009
    goto if3294_end7212
  if3294_else7211:
    null $P5010
    set $P5011, $P5010
  if3294_end7212:
    unless_null $P5011, vivi_32957214
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_32957214:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_365_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3465
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_767 
.annotate 'line', 3466
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
.annotate 'line', 3467
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3468
    unless_null _lex_param_1, fallback7217
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5005
  fallback7217:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5001, fb_tmp_767
    unless $I5001 goto if3296_else7215 
    set $P5006, fb_tmp_767["var"]
    set $P5008, $P5006
    goto if3296_end7216
  if3296_else7215:
    null $P5007
    set $P5008, $P5007
  if3296_end7216:
    unless_null $P5008, vivi_32977218
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5008, $P5009
  vivi_32977218:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_366_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3472
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_768 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
.annotate 'line', 3473
    unless_null _lex_param_1, fallback7221
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback7221:
    set fb_tmp_768, _lex_param_1
    repr_defined $I5001, fb_tmp_768
    unless $I5001 goto if3298_else7219 
    set $P5004, fb_tmp_768["block"]
    set $P5006, $P5004
    goto if3298_end7220
  if3298_else7219:
    null $P5005
    set $P5006, $P5005
  if3298_end7220:
    unless_null $P5006, vivi_32997222
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_32997222:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3474
    $P101."blocktype"("immediate")
.annotate 'line', 3476
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 98
.annotate 'line', 3477
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3479
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3480
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 86
.annotate 'line', 3481
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 74
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3488
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_367_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3491
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_528_1382959278.72036' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_529_1382959278.72036' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_776 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    .local pmc fb_tmp_782 
    .local pmc fb_tmp_783 
    .local pmc fb_tmp_784 
    .local pmc fb_tmp_785 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback7225
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5003
  fallback7225:
    set fb_tmp_769, _lex_param_1
    repr_defined $I5001, fb_tmp_769
    unless $I5001 goto if3300_else7223 
    set $P5004, fb_tmp_769["longname"]
    set $P5006, $P5004
    goto if3300_end7224
  if3300_else7223:
    null $P5005
    set $P5006, $P5005
  if3300_end7224:
    unless_null $P5006, vivi_33017226
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5006, $P5007
  vivi_33017226:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback7231
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5009
  fallback7231:
    set fb_tmp_770, _lex_param_1
    repr_defined $I5002, fb_tmp_770
    unless $I5002 goto if3303_else7229 
    set $P5010, fb_tmp_770["assertion"]
    set $P5012, $P5010
    goto if3303_end7230
  if3303_else7229:
    null $P5011
    set $P5012, $P5011
  if3303_end7230:
    unless_null $P5012, vivi_33047232
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5012, $P5013
  vivi_33047232:
    unless $P5012 goto if3302_else7227 
.annotate 'line', 3494
.annotate 'line', 3495
    unless_null _lex_param_1, fallback7237
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5014
  fallback7237:
    set fb_tmp_772, _lex_param_1
    repr_defined $I5004, fb_tmp_772
    unless $I5004 goto if3306_else7235 
    set $P5015, fb_tmp_772["assertion"]
    set $P5017, $P5015
    goto if3306_end7236
  if3306_else7235:
    null $P5016
    set $P5017, $P5016
  if3306_end7236:
    unless_null $P5017, vivi_33077238
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5017, $P5018
  vivi_33077238:
    set fb_tmp_771, $P5017
    repr_defined $I5003, fb_tmp_771
    unless $I5003 goto if3305_else7233 
    set $P5019, fb_tmp_771[0]
    set $P5021, $P5019
    goto if3305_end7234
  if3305_else7233:
    null $P5020
    set $P5021, $P5020
  if3305_end7234:
    unless_null $P5021, vivi_33087239
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5021, $P5022
  vivi_33087239:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3496
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3302_end7228
  if3302_else7227:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3309_else7240 
    .const 'Sub' $P5026 = 'cuid_528_1382959278.72036' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3309_end7241
  if3309_else7240:
.annotate 'line', 3519
.annotate 'line', 3520
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
.annotate 'line', 3522
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 12
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 55
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback7260
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5034
  fallback7260:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5006, fb_tmp_775
    unless $I5006 goto if3319_else7258 
    set $P5035, fb_tmp_775["arglist"]
    set $P5037, $P5035
    goto if3319_end7259
  if3319_else7258:
    null $P5036
    set $P5037, $P5036
  if3319_end7259:
    unless_null $P5037, vivi_33207261
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5037, $P5038
  vivi_33207261:
    unless $P5037 goto if3318_else7256 
.annotate 'line', 3523
.annotate 'line', 3524
    unless_null _lex_param_1, fallback7266
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5042
  fallback7266:
    set fb_tmp_777, _lex_param_1
    repr_defined $I5008, fb_tmp_777
    unless $I5008 goto if3322_else7264 
    set $P5043, fb_tmp_777["arglist"]
    set $P5045, $P5043
    goto if3322_end7265
  if3322_else7264:
    null $P5044
    set $P5045, $P5044
  if3322_end7265:
    unless_null $P5045, vivi_33237267
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5045, $P5046
  vivi_33237267:
    set fb_tmp_776, $P5045
    repr_defined $I5007, fb_tmp_776
    unless $I5007 goto if3321_else7262 
    set $P5047, fb_tmp_776[0]
    set $P5049, $P5047
    goto if3321_end7263
  if3321_else7262:
    null $P5048
    set $P5049, $P5048
  if3321_end7263:
    unless_null $P5049, vivi_33247268
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5049, $P5050
  vivi_33247268:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next7272:
    unless $P5041, for_done7274
    shift $P5054, $P5041
  for_redo7273:
    .const 'Sub' $P5053 = 'cuid_529_1382959278.72036' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next7272
  for_done7274:
    set $P5098, $P5039
    goto if3318_end7257
  if3318_else7256:
    unless_null _lex_param_1, fallback7279
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5055
  fallback7279:
    set fb_tmp_779, _lex_param_1
    repr_defined $I5009, fb_tmp_779
    unless $I5009 goto if3328_else7277 
    set $P5056, fb_tmp_779["nibbler"]
    set $P5058, $P5056
    goto if3328_end7278
  if3328_else7277:
    null $P5057
    set $P5058, $P5057
  if3328_end7278:
    unless_null $P5058, vivi_33297280
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5058, $P5059
  vivi_33297280:
    set $P5097, $P5058
    unless $P5058 goto if3327_end7276 
.annotate 'line', 3526
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3330_else7281 
.annotate 'line', 3528
    set fb_tmp_780, $P102
    repr_defined $I5011, fb_tmp_780
    unless $I5011 goto if3331_else7283 
    set $P5060, fb_tmp_780[0]
    set $P5062, $P5060
    goto if3331_end7284
  if3331_else7283:
    null $P5061
    set $P5062, $P5061
  if3331_end7284:
    unless_null $P5062, vivi_33327285
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5062, $P5063
  vivi_33327285:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback7290
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5066
  fallback7290:
    set fb_tmp_782, _lex_param_1
    repr_defined $I5013, fb_tmp_782
    unless $I5013 goto if3334_else7288 
    set $P5067, fb_tmp_782["nibbler"]
    set $P5069, $P5067
    goto if3334_end7289
  if3334_else7288:
    null $P5068
    set $P5069, $P5068
  if3334_end7289:
    unless_null $P5069, vivi_33357291
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5069, $P5070
  vivi_33357291:
    set fb_tmp_781, $P5069
    repr_defined $I5012, fb_tmp_781
    unless $I5012 goto if3333_else7286 
    set $P5071, fb_tmp_781[0]
    set $P5073, $P5071
    goto if3333_end7287
  if3333_else7286:
    null $P5072
    set $P5073, $P5072
  if3333_end7287:
    unless_null $P5073, vivi_33367292
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5073, $P5074
  vivi_33367292:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3330_end7282
  if3330_else7281:
.annotate 'line', 3529
    set fb_tmp_783, $P102
    repr_defined $I5014, fb_tmp_783
    unless $I5014 goto if3337_else7293 
    set $P5079, fb_tmp_783[0]
    set $P5081, $P5079
    goto if3337_end7294
  if3337_else7293:
    null $P5080
    set $P5081, $P5080
  if3337_end7294:
    unless_null $P5081, vivi_33387295
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5081, $P5082
  vivi_33387295:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback7300
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5084
  fallback7300:
    set fb_tmp_785, _lex_param_1
    repr_defined $I5016, fb_tmp_785
    unless $I5016 goto if3340_else7298 
    set $P5085, fb_tmp_785["nibbler"]
    set $P5087, $P5085
    goto if3340_end7299
  if3340_else7298:
    null $P5086
    set $P5087, $P5086
  if3340_end7299:
    unless_null $P5087, vivi_33417301
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5087, $P5088
  vivi_33417301:
    set fb_tmp_784, $P5087
    repr_defined $I5015, fb_tmp_784
    unless $I5015 goto if3339_else7296 
    set $P5089, fb_tmp_784[0]
    set $P5091, $P5089
    goto if3339_end7297
  if3339_else7296:
    null $P5090
    set $P5091, $P5090
  if3339_end7297:
    unless_null $P5091, vivi_33427302
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5091, $P5092
  vivi_33427302:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3330_end7282:
    set $P5097, $P5096
  if3327_end7276:
    set $P5098, $P5097
  if3318_end7257:
    set $P5099, $P5098
  if3309_end7241:
  if3302_end7228:
.annotate 'line', 3532
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_528_1382959278.72036") :anon :lex :outer("cuid_367_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3498
    .const 'Sub' $P5025 = 'cuid_527_1382959278.72036' 
    capture_lex $P5025 
    .lex "$fullrxname", $S101 
    .lex "$rxname", $S102 
    .lex "$loc", $I101 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc pkg_viv_tmp_51 
    set $S101, ""
    set $S102, ""
    set $I101, 0
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback7244
    nqp_get_sc_object $P5003, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_51, $P5002
    set fb_tmp_774, pkg_viv_tmp_51
    repr_defined $I5002, fb_tmp_774
    unless $I5002 goto if3311_else7245 
    set $P5004, fb_tmp_774["%RX"]
    set $P5006, $P5004
    goto if3311_end7246
  if3311_else7245:
    null $P5005
    set $P5006, $P5005
  if3311_end7246:
    unless_null $P5006, vivi_33127247
    new $P5007, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5007
    set $P5006, $P5007
  vivi_33127247:
    unless_null $P5006, vivi_33137248
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_33137248:
    set $P5001, $P5006
  fallback7244:
    set fb_tmp_773, $P5001
    repr_defined $I5001, fb_tmp_773
    unless $I5001 goto if3310_else7242 
    set $P5009, fb_tmp_773["name"]
    set $P5011, $P5009
    goto if3310_end7243
  if3310_else7242:
    null $P5010
    set $P5011, $P5010
  if3310_end7243:
    unless_null $P5011, vivi_33147249
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5011, $P5012
  vivi_33147249:
    set $S5001, $P5011
    set $S101, $S5001
    set $S102, ""
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    isge $I5004, $N5001, $N5002
    unless $I5004 goto if3315_else7250 
.annotate 'line', 3502
    add $I5005, $I101, 5
    substr $S5002, $S101, $I5005
    set $S102, $S5002
    length $I5007, $S102
    sub $I5006, $I5007, 1
    substr $S5003, $S102, 0, $I5006
    set $S102, $S5003
    goto if3315_end7251
  if3315_else7250:
    .const 'Sub' $P5013 = 'cuid_527_1382959278.72036' 
    capture_lex $P5013
    $P5014 = $P5013()
  if3315_end7251:
    set $N5003, $I101
    set $N5004, 0
    isge $I5008, $N5003, $N5004
    unless $I5008 goto if3317_else7254 
.annotate 'line', 3511
.annotate 'line', 3512
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    find_lex $P5016, "$/"
.annotate 'line', 3513
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668", 34
    find_lex $P5018, "$/"
    $P5019 = $P5017."new"($S102, "literal" :named("rxtype"), $P5018 :named("node"))
    $P5020 = $P5015."new"($P5019, "sym" :named("name"), "subcapture" :named("rxtype"), $P5016 :named("node"))
    store_lex "$qast", $P5020
    set $P5024, $P5020
    goto if3317_end7255
  if3317_else7254:
.annotate 'line', 3515
.annotate 'line', 3516
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."panic"("<sym> only valid in multiregexes")
    set $P5024, $P5023
  if3317_end7255:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_527_1382959278.72036") :anon :lex :outer("cuid_528_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3506
    .lex "$angleloc", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
    find_lex $S5001, "$fullrxname"
    index $I5001, $S5001, ":", 0
    store_lex "$loc", $I5001
    find_lex $S5002, "$fullrxname"
    find_lex $I5003, "$loc"
    index $I5002, $S5002, "<", $I5003
    box $P5002, $I5002
    set $P101, $P5002
    find_lex $I5005, "$loc"
    set $N5001, $I5005
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    box $P5004, $I5004
    set $P5003, $P5004
    if $I5004 goto unless3316_end7253 
    find_lex $S5004, "$fullrxname"
    find_lex $I5007, "$loc"
    add $I5006, $I5007, 1
    set $N5005, $P101
    find_lex $I5008, "$loc"
    set $N5006, $I5008
    sub $N5004, $N5005, $N5006
    set $N5007, 1
    sub $N5003, $N5004, $N5007
    set $I5009, $N5003
    substr $S5003, $S5004, $I5006, $I5009
    store_lex "$rxname", $S5003
    box $P5005, $S5003
    set $P5003, $P5005
  unless3316_end7253:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_529_1382959278.72036") :anon :lex :outer("cuid_367_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3524
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_778 
    find_lex $P5001, "$qast"
    set fb_tmp_778, $P5001
    repr_defined $I5001, fb_tmp_778
    unless $I5001 goto if3325_else7269 
    set $P5002, fb_tmp_778[0]
    set $P5004, $P5002
    goto if3325_end7270
  if3325_else7269:
    null $P5003
    set $P5004, $P5003
  if3325_end7270:
    unless_null $P5004, vivi_33267271
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_33267271:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_368_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3535
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_786 
    unless_null _lex_param_1, fallback7305
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7305:
    set fb_tmp_786, _lex_param_1
    repr_defined $I5001, fb_tmp_786
    unless $I5001 goto if3343_else7303 
    set $P5002, fb_tmp_786["arglist"]
    set $P5004, $P5002
    goto if3343_end7304
  if3343_else7303:
    null $P5003
    set $P5004, $P5003
  if3343_end7304:
    unless_null $P5004, vivi_33447306
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_33447306:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_369_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3537
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_787 
.annotate 'line', 3538
    unless_null _lex_param_1, fallback7309
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set _lex_param_1, $P5001
  fallback7309:
    set fb_tmp_787, _lex_param_1
    repr_defined $I5001, fb_tmp_787
    unless $I5001 goto if3345_else7307 
    set $P5002, fb_tmp_787["quote_EXPR"]
    set $P5004, $P5002
    goto if3345_end7308
  if3345_else7307:
    null $P5003
    set $P5004, $P5003
  if3345_end7308:
    unless_null $P5004, vivi_33467310
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5004, $P5005
  vivi_33467310:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_370_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3541
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_788 
    .local pmc fb_tmp_789 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_790 
    .local pmc fb_tmp_791 
    .local pmc pkg_viv_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P101, $P5001
.annotate 'line', 3542
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7311
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5003, $P5004
    set fb_tmp_788, $P5003
    repr_defined $I5001, fb_tmp_788
    unless $I5001 goto if3347_else7312 
    set $P5005, fb_tmp_788["$W"]
    set $P5007, $P5005
    goto if3347_end7313
  if3347_else7312:
    null $P5006
    set $P5007, $P5006
  if3347_end7313:
    unless_null $P5007, vivi_33487314
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5007, $P5008
  vivi_33487314:
    unless_null $P5007, vivi_33497315
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33497315:
    set $P5002, $P5007
  fallback7311:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback7318
    nqp_get_sc_object $P5013, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_52, $P5012
    set fb_tmp_789, pkg_viv_tmp_52
    repr_defined $I5003, fb_tmp_789
    unless $I5003 goto if3351_else7319 
    set $P5014, fb_tmp_789["%RX"]
    set $P5016, $P5014
    goto if3351_end7320
  if3351_else7319:
    null $P5015
    set $P5016, $P5015
  if3351_end7320:
    unless_null $P5016, vivi_33527321
    new $P5017, 'Hash'
    set pkg_viv_tmp_52["%RX"], $P5017
    set $P5016, $P5017
  vivi_33527321:
    unless_null $P5016, vivi_33537322
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33537322:
    set $P5011, $P5016
  fallback7318:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3350_end7317 
.annotate 'line', 3543
.annotate 'line', 3544
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback7325
    nqp_get_sc_object $P5021, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_53, $P5020
    set fb_tmp_791, pkg_viv_tmp_53
    repr_defined $I5005, fb_tmp_791
    unless $I5005 goto if3355_else7326 
    set $P5022, fb_tmp_791["%RX"]
    set $P5024, $P5022
    goto if3355_end7327
  if3355_else7326:
    null $P5023
    set $P5024, $P5023
  if3355_end7327:
    unless_null $P5024, vivi_33567328
    new $P5025, 'Hash'
    set pkg_viv_tmp_53["%RX"], $P5025
    set $P5024, $P5025
  vivi_33567328:
    unless_null $P5024, vivi_33577329
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33577329:
    set $P5019, $P5024
  fallback7325:
    set fb_tmp_790, $P5019
    repr_defined $I5004, fb_tmp_790
    unless $I5004 goto if3354_else7323 
    set $P5027, fb_tmp_790["code"]
    set $P5029, $P5027
    goto if3354_end7324
  if3354_else7323:
    null $P5028
    set $P5029, $P5028
  if3354_end7324:
    unless_null $P5029, vivi_33587330
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5029, $P5030
  vivi_33587330:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3350_end7317:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_371_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3549
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3550
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_372_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3553
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3554
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_373_1382959278.72036") :anon :lex :outer("cuid_526_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3557
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_530_1382959278.72036' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next7331:
    unless $P5004, for_done7333
    shift $P5006, $P5004
  for_redo7332:
    .const 'Sub' $P5005 = 'cuid_530_1382959278.72036' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next7331
  for_done7333:
.annotate 'line', 3562
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_530_1382959278.72036") :anon :lex :outer("cuid_373_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3559
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3560
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_531_1382959278.72036") :anon :lex :outer("cuid_375_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3569
    .const 'Sub' $P5002 = 'cuid_374_1382959278.72036' 
    capture_lex $P5002 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_374_1382959278.72036' 
    capture_lex $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_374_1382959278.72036") :anon :lex :outer("cuid_531_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
.annotate 'line', 3570
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_792 
    set fb_tmp_792, _lex_param_2
    repr_defined $I5002, fb_tmp_792
    unless $I5002 goto if3360_else7336 
    set $P5001, fb_tmp_792["optimize"]
    set $P5003, $P5001
    goto if3360_end7337
  if3360_else7336:
    null $P5002
    set $P5003, $P5002
  if3360_end7337:
    unless_null $P5003, vivi_33617338
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144", 26
    set $P5003, $P5004
  vivi_33617338:
    set $S5001, $P5003
    iseq $I5001, $S5001, "off"
    unless $I5001 goto if3359_else7334 
    set $P5008, _lex_param_1
    goto if3359_end7335
  if3359_else7334:
.annotate 'line', 3573
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    $P5006 = $P5005."new"()
    $P5007 = $P5006."optimize"(_lex_param_1, _lex_param_2 :flat :named)
    set $P5008, $P5007
  if3359_end7335:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_533_1382959278.72036") :load :init
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .const 'Sub' $P5001 = 'cuid_532_1382959278.72036' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_375_1382959278.72036" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    nqp_create_sc $P5001, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("gen/parrot/stage2/NQP.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1382959242.28914"
    push $P5004, "gen/parrot/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382959237.84144"
    push $P5004, "gen/parrot/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "add_object"
    push $P5004, "239E5693F0E91359B3D18A6C517018B527DB748D-1382959247.33355"
    push $P5004, "gen/parrot/stage2/NQPHLL.nqp"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_fail"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "term:sym<name>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "A25436BBD8E0FDF14BC40920C4910ECF82BD6374-1382959272.95143"
    push $P5004, "gen/parrot/stage2/NQPP6QRegex.nqp"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termseq"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "SIGOK"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "sigmaybe"
    push $P5004, "sigmaybe:sym<normspace>"
    push $P5004, "sigmaybe:sym<sigwhite>"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<unsp>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "cclass_backslash"
    push $P5004, "cclass_backslash:sym<s>"
    push $P5004, "cclass_backslash:sym<b>"
    push $P5004, "cclass_backslash:sym<e>"
    push $P5004, "cclass_backslash:sym<f>"
    push $P5004, "cclass_backslash:sym<h>"
    push $P5004, "cclass_backslash:sym<r>"
    push $P5004, "cclass_backslash:sym<t>"
    push $P5004, "cclass_backslash:sym<v>"
    push $P5004, "cclass_backslash:sym<o>"
    push $P5004, "cclass_backslash:sym<x>"
    push $P5004, "cclass_backslash:sym<c>"
    push $P5004, "cclass_backslash:sym<any>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "optimize"
    push $P5004, "visit_block"
    push $P5004, "find_lex"
    push $P5004, "visit_op"
    push $P5004, "visit_handle"
    push $P5004, "visit_children"
    push $P5004, "@!block_stack"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "recursion_limit"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, "-'"
    push $P5004, "alt_nfa__1_1382959280.41643"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__3_1382959280.43572"
    push $P5004, "alt_nfa__2_1382959280.42648"
    push $P5004, "alt_nfa__5_1382959280.5181"
    push $P5004, "alt_nfa__4_1382959280.50544"
    push $P5004, ")]}"
    push $P5004, "alt_nfa__6_1382959280.61809"
    push $P5004, "alt_nfa__8_1382959280.63788"
    push $P5004, "])}"
    push $P5004, "alt_nfa__7_1382959280.62414"
    push $P5004, "{"
    push $P5004, "alt_nfa__9_1382959280.66533"
    push $P5004, "alt_nfa__10_1382959280.67088"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__11_1382959280.77123"
    push $P5004, "wu"
    push $P5004, "alt_nfa__12_1382959280.79561"
    push $P5004, "alt_nfa__13_1382959280.79623"
    push $P5004, "alt_nfa__14_1382959280.7967"
    push $P5004, "alt_nfa__15_1382959280.91743"
    push $P5004, "alt_nfa__16_1382959280.91769"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1382959280.9934"
    push $P5004, "alt_nfa__18_1382959281.00324"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1382959281.06782"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1382959281.08866"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1382959281.44206"
    push $P5004, "alt_nfa__22_1382959281.4569"
    push $P5004, "alt_nfa__23_1382959281.51274"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1382959281.55195"
    push $P5004, "invocant"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__25_1382959281.64729"
    push $P5004, "alt_nfa__26_1382959281.64755"
    push $P5004, "alt_nfa__27_1382959281.64786"
    push $P5004, "/!"
    push $P5004, "alt_nfa__28_1382959281.65881"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__29_1382959281.77722"
    push $P5004, "alt_nfa__30_1382959281.77826"
    push $P5004, "alt_nfa__31_1382959281.7789"
    push $P5004, "'\""
    push $P5004, "alt_nfa__32_1382959281.79996"
    push $P5004, "alt_nfa__33_1382959281.80021"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__34_1382959281.94318"
    push $P5004, "alt_nfa__35_1382959281.95296"
    push $P5004, "sign"
    push $P5004, "+-"
    push $P5004, "alt_nfa__36_1382959281.96312"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "("
    push $P5004, "$"
    push $P5004, "\\"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "alt_nfa__37_1382959282.1596"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__38_1382959282.95796"
    push $P5004, "alt_nfa__39_1382959282.98026"
    push $P5004, "alt_nfa__40_1382959282.99011"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__41_1382959283.02721"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "82C8134F4F1F98F3955D960634CCE916B8CF0355-1382959233.539"
    push $P5004, "gen/parrot/stage2/nqpmo.nqp"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1382959247.87061"
    push $P5004, "alt_nfa__2_1382959247.90296"
    push $P5004, "alt_nfa__3_1382959247.97896"
    push $P5004, "alt_nfa__4_1382959247.97944"
    push $P5004, "alt_nfa__5_1382959247.99867"
    push $P5004, "alt_nfa__6_1382959248.07234"
    push $P5004, "alt_nfa__7_1382959248.08443"
    push $P5004, "alt_nfa__8_1382959248.12275"
    push $P5004, "alt_nfa__9_1382959248.16147"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1382959273.11046"
    push $P5004, "alt_nfa__2_1382959273.13925"
    push $P5004, "alt_nfa__3_1382959273.2247"
    push $P5004, "alt_nfa__4_1382959273.24183"
    push $P5004, "alt_nfa__5_1382959273.25397"
    push $P5004, "alt_nfa__6_1382959273.38225"
    push $P5004, "alt_nfa__7_1382959273.4126"
    push $P5004, "alt_nfa__8_1382959273.57856"
    push $P5004, "alt_nfa__9_1382959273.57904"
    push $P5004, "alt_nfa__10_1382959273.59339"
    push $P5004, "alt_nfa__11_1382959273.67712"
    push $P5004, "alt_nfa__12_1382959273.68577"
    push $P5004, "alt_nfa__13_1382959273.77788"
    push $P5004, "alt_nfa__14_1382959273.84587"
    push $P5004, "alt_nfa__15_1382959273.85809"
    push $P5004, "alt_nfa__16_1382959273.92365"
    push $P5004, "alt_nfa__17_1382959274.05982"
    push $P5004, "alt_nfa__18_1382959274.07309"
    push $P5004, "alt_nfa__19_1382959274.10186"
    push $P5004, "alt_nfa__20_1382959274.11246"
    push $P5004, "alt_nfa__21_1382959274.14336"
    push $P5004, "alt_nfa__22_1382959274.15244"
    push $P5004, "alt_nfa__23_1382959274.21689"
    push $P5004, "alt_nfa__24_1382959274.21745"
    push $P5004, "alt_nfa__25_1382959274.21772"
    push $P5004, "alt_nfa__27_1382959274.26426"
    push $P5004, "alt_nfa__28_1382959274.26468"
    push $P5004, "alt_nfa__26_1382959274.22507"
    push $P5004, "NQP::Optimizer"
    push $P5004, "block_stack"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382959239.95668"
    push $P5004, "gen/parrot/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "E2F59F9241F21BC72C1091E6F9B5588294F77486-1382959255.19431"
    push $P5004, "gen/parrot/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Backend"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "Optimizer"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, ")}]"
    push $P5004, "&|~"
    push $P5004, ":"
    .const 'Sub' $P5005 = 'cuid_532_1382959278.72036' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3363_end7342 
    die "Repossession conflicts occurred during deserialization"
  if3363_end7342:
    .const 'Sub' $P5001 = "cuid_1_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 37
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 231
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 232
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_228_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 252
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 253
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_248_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 365
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 366
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_360_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 379
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 380
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_373_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 381
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_374_1382959278.72036" 
    nqp_get_sc_object $P5002, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 383
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_375_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "GLOBALish"
    push $P5002, "$?PACKAGE"
    push $P5002, "EXPORT"
    push $P5002, "ParseShared"
    push $P5002, "NQPCursorRole"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 0
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 1
    push $P5003, $P5006
    nqp_get_sc_object $P5007, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1382959242.28914", 32
    push $P5003, $P5007
    nqp_get_sc_object $P5008, "65475E2A0C14FDD82BB949E6EFAAEB49870261A5-1382959242.28914", 35
    push $P5003, $P5008
    new $P5009, 'ResizableIntegerArray'
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5009)
    .const "LexInfo" $P5001 = "cuid_386_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 3
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_410_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 38
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_436_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 230
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 230
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_437_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 246
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_447_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 254
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 254
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_526_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 367
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 367
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_531_1382959278.72036"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 382
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "6288F701493DFAA3128B9CE73B241A2B9593C48F-1382959278.78949", 382
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5007 = $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_532_1382959278.72036") :anon :lex :outer("cuid_533_1382959278.72036")
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_373_1382959278.72036" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_374_1382959278.72036" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_534_1382959278.72036") :load
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .const 'Sub' $P5001 = "cuid_375_1382959278.72036" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_535_1382959278.72036") :main
.annotate 'file', "gen/parrot/stage2/NQP.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_375_1382959278.72036" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end