.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_372_1381944288.90674") :anon :lex
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5047 = 'cuid_373_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_374_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_375_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_399_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_419_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_420_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_421_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_422_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_423_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_424_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_425_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_426_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_427_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_506_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_510_1381944288.90674' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_520_1381944288.90674' 
    capture_lex $P5047 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "ParseShared", $P105 
    .lex "NQPCursorRole", $P106 
    .lex "$nqpcomp", $P107 
    .lex "@clo", $P108 
    .lex "&MAIN", $P109 
    .lex "&hll-config", $P110 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P107, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P108, $P5003
    .const 'Sub' $P5004 = 'cuid_373_1381944288.90674' 
    capture_lex $P5004
    set $P109, $P5004
    .const 'Sub' $P5005 = 'cuid_374_1381944288.90674' 
    capture_lex $P5005
    set $P110, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_375_1381944288.90674' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_399_1381944288.90674' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_419_1381944288.90674' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1491
    nqp_get_sc_object $P5016, "96F80A66F2271DAB0F3CD1D5EC903FD7ED58994D-1381944260.71446", 60
    $P5017 = $P5016."operations"()
    set $P104, $P5017
.annotate 'line', 1493
    .const 'Sub' $P5019 = 'cuid_420_1381944288.90674' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "preinc", $P5018)
.annotate 'line', 1508
    .const 'Sub' $P5021 = 'cuid_421_1381944288.90674' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "predec", $P5020)
.annotate 'line', 1523
    .const 'Sub' $P5023 = 'cuid_422_1381944288.90674' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "postinc", $P5022)
.annotate 'line', 1547
    .const 'Sub' $P5025 = 'cuid_423_1381944288.90674' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "postdec", $P5024)
.annotate 'line', 1571
    .const 'Sub' $P5027 = 'cuid_424_1381944288.90674' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "numify", $P5026)
.annotate 'line', 1575
    .const 'Sub' $P5029 = 'cuid_425_1381944288.90674' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "stringify", $P5028)
.annotate 'line', 1579
    .const 'Sub' $P5031 = 'cuid_426_1381944288.90674' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "falsey", $P5030)
    .const 'Sub' $P5032 = 'cuid_427_1381944288.90674' 
    capture_lex $P5032
    $P5033 = $P5032()
    .const 'Sub' $P5034 = 'cuid_506_1381944288.90674' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_510_1381944288.90674' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_520_1381944288.90674' 
    capture_lex $P5038
    $P5039 = $P5038()
.annotate 'line', 3546
    nqp_get_sc_object $P5040, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 379
    $P5041 = $P5040."new"()
    set $P107, $P5041
.annotate 'line', 3547
    $P107."language"("nqp")
.annotate 'line', 3548
    nqp_get_sc_object $P5042, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P107."parsegrammar"($P5042)
.annotate 'line', 3549
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 244
    $P107."parseactions"($P5043)
.annotate 'line', 3550
    $P5044 = $P107."config"()
    "&hll-config"($P5044)
.annotate 'line', 3552
    $P107."addstage"("optimize", "ast" :named("after"))
.annotate 'line', 3555
    $P5045 = $P107."commandline_options"()
    set $P108, $P5045
.annotate 'line', 3556
    $P108."push"("parsetrace")
.annotate 'line', 3557
    $P108."push"("setting=s")
.annotate 'line', 3558
    $P108."push"("setting-path=s")
.annotate 'line', 3559
    $P108."push"("module-path=s")
.annotate 'line', 3560
    $P108."push"("no-regex-lib")
.annotate 'line', 3561
    $P108."push"("stable-sc")
.annotate 'line', 3562
    $P108."push"("optimize=s")
.annotate 'line', 3563
    $P108."push"("vmlibs=s")
.annotate 'line', 3564
    $P108."push"("dynext=s")
    unless _lex_param_0 goto if3392_end7111 
    $P5046 = "&MAIN"(_lex_param_0 :flat)
  if3392_end7111:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_373_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3567
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3569
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3576
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_374_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3580
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.09-233-g0637faa"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-10-16T17:24:48Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 8
    .const 'Sub' $P5033 = 'cuid_376_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_1_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_2_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_3_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_4_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_5_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_6_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_7_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_8_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_9_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_10_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_11_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_17_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_18_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_19_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_20_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_21_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_22_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_23_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_24_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_25_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_26_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_27_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_28_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_29_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_30_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_31_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_32_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_33_1381944288.90674' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_34_1381944288.90674' 
    capture_lex $P5033 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "$loader", $P103 
    .lex "&compilee_list", $P104 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_376_1381944288.90674' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_1_1381944288.90674' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_2_1381944288.90674' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_3_1381944288.90674' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_4_1381944288.90674' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_5_1381944288.90674' 
    capture_lex $P5007
    get_hll_global $P5008, "ModuleLoader"
    set $P103, $P5008
    .const 'Sub' $P5009 = 'cuid_6_1381944288.90674' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_7_1381944288.90674' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_8_1381944288.90674' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_9_1381944288.90674' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_10_1381944288.90674' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_11_1381944288.90674' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_17_1381944288.90674' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_18_1381944288.90674' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_19_1381944288.90674' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_20_1381944288.90674' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_21_1381944288.90674' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_22_1381944288.90674' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_23_1381944288.90674' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_24_1381944288.90674' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_25_1381944288.90674' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_26_1381944288.90674' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_27_1381944288.90674' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_28_1381944288.90674' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_29_1381944288.90674' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_30_1381944288.90674' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_31_1381944288.90674' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_32_1381944288.90674' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_33_1381944288.90674' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_34_1381944288.90674' 
    capture_lex $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "compilee_list" :subid("cuid_376_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 531
    .param pmc _lex_param_0 :optional 
    .param int haz_param_1 :opt_flag 
    .lex "@orig", _lex_param_0 
    if haz_param_1, default16
    new $P5003, 'ResizablePMCArray'
    set _lex_param_0, $P5003
  default16:
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if12_else14 
    set $P5002, _lex_param_0
    goto if12_end15
  if12_else14:
    new $P5001, 'ResizablePMCArray'
    set $P5002, $P5001
  if12_end15:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_377_1381944288.90674' 
    capture_lex $P5039 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc fb_tmp_2 
    .local pmc fb_tmp_3 
    .local pmc pkg_viv_tmp_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", 8, $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", 9, $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", 10, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", 11, $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", 12, $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", 13, $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback23
    nqp_get_sc_object $P5021, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_1, $P5020
    set fb_tmp_3, pkg_viv_tmp_1
    repr_defined $I5004, fb_tmp_3
    unless $I5004 goto if16_else24 
    set $P5022, fb_tmp_3["%COMPILING"]
    set $P5024, $P5022
    goto if16_end25
  if16_else24:
    null $P5023
    set $P5024, $P5023
  if16_end25:
    unless_null $P5024, vivi_1726
    new $P5025, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5025
    set $P5024, $P5025
  vivi_1726:
    unless_null $P5024, vivi_1827
    die "Contextual %*COMPILING not found"
    box $P5026, "Contextual %*COMPILING not found"
    set $P5024, $P5026
  vivi_1827:
    set $P5019, $P5024
  fallback23:
    set fb_tmp_2, $P5019
    repr_defined $I5003, fb_tmp_2
    unless $I5003 goto if15_else21 
    set $P5027, fb_tmp_2["%?OPTIONS"]
    set $P5029, $P5027
    goto if15_end22
  if15_else21:
    null $P5028
    set $P5029, $P5028
  if15_end22:
    unless_null $P5029, vivi_1928
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5029, $P5030
  vivi_1928:
    set fb_tmp_1, $P5029
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if14_else19 
    set $P5031, fb_tmp_1["dynext"]
    set $P5033, $P5031
    goto if14_end20
  if14_else19:
    null $P5032
    set $P5033, $P5032
  if14_end20:
    unless_null $P5033, vivi_2029
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5034
  vivi_2029:
    defined $I5001, $P5033
    box $P5038, $I5001
    set $P5037, $P5038
    unless $I5001 goto if13_end18 
    .const 'Sub' $P5035 = 'cuid_377_1381944288.90674' 
    capture_lex $P5035
    $P5036 = $P5035()
    set $P5037, $P5036
  if13_end18:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1381944288.90674") :anon :lex :outer("cuid_1_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 41
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_4 
    .local pmc fb_tmp_5 
    .local pmc fb_tmp_6 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback34
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_6, pkg_viv_tmp_2
    repr_defined $I5003, fb_tmp_6
    unless $I5003 goto if23_else35 
    set $P5006, fb_tmp_6["%COMPILING"]
    set $P5008, $P5006
    goto if23_end36
  if23_else35:
    null $P5007
    set $P5008, $P5007
  if23_end36:
    unless_null $P5008, vivi_2437
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2437:
    unless_null $P5008, vivi_2538
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2538:
    set $P5003, $P5008
  fallback34:
    set fb_tmp_5, $P5003
    repr_defined $I5002, fb_tmp_5
    unless $I5002 goto if22_else32 
    set $P5011, fb_tmp_5["%?OPTIONS"]
    set $P5013, $P5011
    goto if22_end33
  if22_else32:
    null $P5012
    set $P5013, $P5012
  if22_end33:
    unless_null $P5013, vivi_2639
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_2639:
    set fb_tmp_4, $P5013
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if21_else30 
    set $P5015, fb_tmp_4["dynext"]
    set $P5017, $P5015
    goto if21_end31
  if21_else30:
    null $P5016
    set $P5017, $P5016
  if21_end31:
    unless_null $P5017, vivi_2740
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_2740:
    set $P101, $P5017
    getinterp $P5019
    set fb_tmp_8, $P5019
    repr_defined $I5005, fb_tmp_8
    unless $I5005 goto if29_else43 
    set $P5020, fb_tmp_8[.IGLOBALS_LIB_PATHS]
    set $P5022, $P5020
    goto if29_end44
  if29_else43:
    null $P5021
    set $P5022, $P5021
  if29_end44:
    unless_null $P5022, vivi_3045
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_3045:
    set fb_tmp_7, $P5022
    repr_defined $I5004, fb_tmp_7
    unless $I5004 goto if28_else41 
    set $P5024, fb_tmp_7[.PARROT_LIB_PATH_DYNEXT]
    set $P5026, $P5024
    goto if28_end42
  if28_else41:
    null $P5025
    set $P5026, $P5025
  if28_end42:
    unless_null $P5026, vivi_3146
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_3146:
    set $P102, $P5026
.annotate 'line', 45
    $P5028 = $P102."push"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 50
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_9 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 52
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 108
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS", 8
    set $N5001, $P5008
    unless $N5001 goto if32_end48 
.annotate 'line', 53
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS", 8
    set fb_tmp_9, $P5011
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if33_else49 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS", 8
    set $N5002, $P5015
    set $I5003, $N5002
    sub $I5002, $I5003, 1
    set $P5012, fb_tmp_9[$I5002]
    set $P5017, $P5012
    goto if33_end50
  if33_else49:
    null $P5016
    set $P5017, $P5016
  if33_end50:
    unless_null $P5017, vivi_3451
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_3451:
    set $P101["outer"], $P5017
  if32_end48:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS", 8
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS", 8
    set $N5003, $P5024
    set $I5004, $N5003
    set $P5021[$I5004], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 62
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 8
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_10 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 8
    set fb_tmp_10, $P5003
    repr_defined $I5001, fb_tmp_10
    unless $I5001 goto if35_else52 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS", 8
    set $N5001, $P5007
    set $I5003, $N5001
    sub $I5002, $I5003, 1
    set $P5004, fb_tmp_10[$I5002]
    set $P5009, $P5004
    goto if35_end53
  if35_else52:
    null $P5008
    set $P5009, $P5008
  if35_end53:
    unless_null $P5009, vivi_3654
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_3654:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 71
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS", 8
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 73
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 83
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_378_1381944288.90674' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_55
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if37_end58 
    .const 'Sub' $P5001 = 'cuid_378_1381944288.90674' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if37_end58:
    goto lexotic_56
  lexotic_55:
    .get_results ($P5003)
  lexotic_56:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1381944288.90674") :anon :lex :outer("cuid_6_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 85
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_11 
    .local pmc fb_tmp_12 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_13 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback61
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_3, $P5004
    set fb_tmp_12, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_12
    unless $I5002 goto if39_else62 
    set $P5006, fb_tmp_12["%COMPILING"]
    set $P5008, $P5006
    goto if39_end63
  if39_else62:
    null $P5007
    set $P5008, $P5007
  if39_end63:
    unless_null $P5008, vivi_4064
    new $P5009, 'Hash'
    set pkg_viv_tmp_3["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_4064:
    unless_null $P5008, vivi_4165
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_4165:
    set $P5003, $P5008
  fallback61:
    set fb_tmp_11, $P5003
    repr_defined $I5001, fb_tmp_11
    unless $I5001 goto if38_else59 
    set $P5011, fb_tmp_11["%?OPTIONS"]
    set $P5013, $P5011
    goto if38_end60
  if38_else59:
    null $P5012
    set $P5013, $P5012
  if38_end60:
    unless_null $P5013, vivi_4266
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_4266:
.annotate 'line', 90
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 94
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 96
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback67
    nqp_get_sc_object $P5022, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5021, $P5022
    set fb_tmp_13, $P5021
    repr_defined $I5003, fb_tmp_13
    unless $I5003 goto if43_else68 
    set $P5023, fb_tmp_13["$UNIT"]
    set $P5025, $P5023
    goto if43_end69
  if43_else68:
    null $P5024
    set $P5025, $P5024
  if43_end69:
    unless_null $P5025, vivi_4470
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_4470:
    unless_null $P5025, vivi_4571
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_4571:
    set $P5020, $P5025
  fallback67:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 97
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 99
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 101
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 103
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 105
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if46_else72 
.annotate 'line', 106
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 107
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 109
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
.annotate 'line', 110
    nqp_get_sc_object $P5047, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 111
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 112
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5052 = $P5051."new"("ModuleLoader.moarvm" :named("value"))
    $P5053 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"), $P5052 :named("moar"))
    $P5054 = $P5045."new"($P5053, "loadbytecode" :named("op"))
    $P5055 = $P5044."new"($P5054, $P102)
    $P5056 = $P5042."add_load_dependency_task"($P5055 :named("deserialize_past"))
    goto if46_end73
  if46_else72:
.annotate 'line', 117
.annotate 'line', 118
    find_lex $P5058, "self"
    nqp_decontainerize $P5057, $P5058
    $P5059 = $P5057."add_fixup_task"($P102 :named("fixup_past"))
  if46_end73:
    getattribute $P5060, $P101, 'lex_pad'
    $P5061 = "RETURN"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 127
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_74
    .lex "RETURN", $P102
.annotate 'line', 129
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 132
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if47_end77 
.annotate 'line', 133
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 134
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 136
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
.annotate 'line', 137
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 138
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 139
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5015 = $P5014."new"("ModuleLoader.moarvm" :named("value"))
    $P5016 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"), $P5015 :named("moar"))
    $P5017 = $P5008."new"($P5016, "loadbytecode" :named("op"))
.annotate 'line', 141
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 143
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 145
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5021 = $P5020."new"("ModuleLoader" :named("value"))
    $P5022 = $P5019."new"($P5021, "getcurhllsym" :named("op"))
.annotate 'line', 147
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5024 = $P5023."new"(_lex_param_1 :named("value"))
    $P5025 = $P5018."new"($P5022, $P5024, "callmethod" :named("op"), "load_module" :named("name"))
    $P5026 = $P5007."new"($P5017, $P5025)
    $P5027 = $P5006."add_load_dependency_task"($P5026 :named("deserialize_past"))
  if47_end77:
    getattribute $P5028, $P101, 'lex_pad'
    $P5029 = "RETURN"($P5028)
    goto lexotic_75
  lexotic_74:
    .get_results ($P5029)
  lexotic_75:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_379_1381944288.90674' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 155
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next78:
    unless $P5006, for_done80
    shift $P5008, $P5006
  for_redo79:
    .const 'Sub' $P5007 = 'cuid_379_1381944288.90674' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next78
  for_done80:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1381944288.90674") :anon :lex :outer("cuid_8_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 156
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 157
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 163
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_381_1381944288.90674' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 165
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next100:
    unless $P5008, for_done102
    shift $P5010, $P5008
  for_redo101:
    .const 'Sub' $P5009 = 'cuid_381_1381944288.90674' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next100
  for_done102:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1381944288.90674") :anon :lex :outer("cuid_9_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 169
    .param pmc _lex_param_0 
    .const 'Sub' $P5011 = 'cuid_380_1381944288.90674' 
    capture_lex $P5011 
    .lex "$part", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set $S5001, _lex_param_0
    box $P5002, $S5001
    set $P101, $P5002
    find_lex $P5004, "$target"
    get_who $P5003, $P5004
    set $S5002, $P101
    exists $I5001, $P5003[$S5002]
    unless $I5001 goto if48_else81 
.annotate 'line', 171
    find_lex $P5007, "$target"
    get_who $P5006, $P5007
    set $S5003, $P101
    set $P5005, $P5006[$S5003]
    store_lex "$target", $P5005
    set $P5010, $P5005
    goto if48_end82
  if48_else81:
    .const 'Sub' $P5008 = 'cuid_380_1381944288.90674' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if48_end82:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1381944288.90674") :anon :lex :outer("cuid_381_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 174
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_15 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_16 
    .local pmc pkg_viv_tmp_6 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback85
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_14, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_14
    unless $I5002 goto if50_else86 
    set $P5006, fb_tmp_14["%HOW"]
    set $P5008, $P5006
    goto if50_end87
  if50_else86:
    null $P5007
    set $P5008, $P5007
  if50_end87:
    unless_null $P5008, vivi_5188
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5009
    set $P5008, $P5009
  vivi_5188:
    unless_null $P5008, vivi_5289
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_5289:
    set $P5003, $P5008
  fallback85:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if49_else83 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback90
    nqp_get_sc_object $P5014, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_5, $P5013
    set fb_tmp_15, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_15
    unless $I5003 goto if53_else91 
    set $P5015, fb_tmp_15["%HOW"]
    set $P5017, $P5015
    goto if53_end92
  if53_else91:
    null $P5016
    set $P5017, $P5016
  if53_end92:
    unless_null $P5017, vivi_5493
    new $P5018, 'Hash'
    set pkg_viv_tmp_5["%HOW"], $P5018
    set $P5017, $P5018
  vivi_5493:
    unless_null $P5017, vivi_5594
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_5594:
    set $P5012, $P5017
  fallback90:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if49_end84
  if49_else83:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback95
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_6, $P5022
    set fb_tmp_16, pkg_viv_tmp_6
    repr_defined $I5004, fb_tmp_16
    unless $I5004 goto if56_else96 
    set $P5024, fb_tmp_16["%HOW"]
    set $P5026, $P5024
    goto if56_end97
  if56_else96:
    null $P5025
    set $P5026, $P5025
  if56_end97:
    unless_null $P5026, vivi_5798
    new $P5027, 'Hash'
    set pkg_viv_tmp_6["%HOW"], $P5027
    set $P5026, $P5027
  vivi_5798:
    unless_null $P5026, vivi_5899
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_5899:
    set $P5021, $P5026
  fallback95:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if49_end84:
    set $P101, $P5029
.annotate 'line', 178
    find_lex $P5030, "$part"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 179
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$part"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 188
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_17 
.annotate 'line', 189
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 190
    set fb_tmp_17, _lex_param_1
    repr_defined $I5001, fb_tmp_17
    unless $I5001 goto if59_else103 
    set $P5001, fb_tmp_17[0]
    set $P5003, $P5001
    goto if59_end104
  if59_else103:
    null $P5002
    set $P5003, $P5002
  if59_end104:
    unless_null $P5003, vivi_60105
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  vivi_60105:
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5006 = $P5005."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "static" :named("decl"), _lex_param_3 :named("value"))
    $P5007 = $P5003."push"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 198
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 200
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 201
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 202
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 204
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 209
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_2 :opt_flag 
    .const 'Sub' $P5083 = 'cuid_12_1381944288.90674' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_385_1381944288.90674' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_386_1381944288.90674' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_387_1381944288.90674' 
    capture_lex $P5083 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    if haz_param_2, default216
    box $P5082, "NQPRoutine"
    set _lex_param_4, $P5082
  default216:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_106
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_68119
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 215
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback108
    nqp_get_sc_object $P5015, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5014, $P5015
    set fb_tmp_18, $P5014
    repr_defined $I5002, fb_tmp_18
    unless $I5002 goto if61_else109 
    set $P5016, fb_tmp_18["$PACKAGE"]
    set $P5018, $P5016
    goto if61_end110
  if61_else109:
    null $P5017
    set $P5018, $P5017
  if61_end110:
    unless_null $P5018, vivi_62111
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_62111:
    unless_null $P5018, vivi_63112
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_63112:
    set $P5013, $P5018
  fallback108:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback113
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set fb_tmp_19, $P5022
    repr_defined $I5003, fb_tmp_19
    unless $I5003 goto if64_else114 
    set $P5024, fb_tmp_19["$PACKAGE"]
    set $P5026, $P5024
    goto if64_end115
  if64_else114:
    null $P5025
    set $P5026, $P5025
  if64_end115:
    unless_null $P5026, vivi_65116
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_65116:
    unless_null $P5026, vivi_66117
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_66117:
    set $P5021, $P5026
  fallback113:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_67118
  catch_handler_68119:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_67118
  skip_handler_67118:
    .const 'Sub' $P5034 = 'cuid_12_1381944288.90674' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if109_end193 
.annotate 'line', 264
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if109_end193:
.annotate 'line', 269
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_37, _lex_param_1
    repr_defined $I5005, fb_tmp_37
    unless $I5005 goto if111_else196 
    set $P5038, fb_tmp_37["compile_time_dummy"]
    set $P5040, $P5038
    goto if111_end197
  if111_else196:
    null $P5039
    set $P5040, $P5039
  if111_end197:
    unless_null $P5040, vivi_112198
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5041
  vivi_112198:
    defined $I5004, $P5040
    unless $I5004 goto if110_else194 
.annotate 'line', 272
    set fb_tmp_38, _lex_param_1
    repr_defined $I5006, fb_tmp_38
    unless $I5006 goto if113_else199 
    set $P5042, fb_tmp_38["compile_time_dummy"]
    set $P5044, $P5042
    goto if113_end200
  if113_else199:
    null $P5043
    set $P5044, $P5043
  if113_end200:
    unless_null $P5044, vivi_114201
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5044, $P5045
  vivi_114201:
    set $P106, $P5044
    goto if110_end195
  if110_else194:
.annotate 'line', 275
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 283
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx", 12
.annotate 'line', 284
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if115_end203 
.annotate 'line', 290
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list", 11
.annotate 'line', 291
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 292
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if116_else204 
    .const 'Sub' $P5059 = 'cuid_385_1381944288.90674' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if116_end205
  if116_else204:
    .const 'Sub' $P5061 = 'cuid_386_1381944288.90674' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if116_end205:
    set $P5064, $P5063
  if115_end203:
  if110_end195:
.annotate 'line', 332
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if121_else212 
    .const 'Sub' $P5066 = 'cuid_387_1381944288.90674' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5081, $P5067
    goto if121_end213
  if121_else212:
.annotate 'line', 371
.annotate 'line', 374
    nqp_get_sc_object $P5068, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 376
    nqp_get_sc_object $P5069, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 378
    nqp_get_sc_object $P5070, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 379
    nqp_get_sc_object $P5074, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 381
    nqp_get_sc_object $P5077, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    $P5080 = "RETURN"($P106)
    set $P5081, $P5080
  if121_end213:
    goto lexotic_107
  lexotic_106:
    .get_results ($P5081)
  lexotic_107:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1381944288.90674") :anon :lex :outer("cuid_17_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 222
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5051 = 'cuid_384_1381944288.90674' 
    capture_lex $P5051 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc pkg_viv_tmp_7 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P106, $P5006
.annotate 'line', 224
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 226
.annotate 'line', 227
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 120
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    find_dynamic_lex $P5015, "$*LINEPOSCACHE"
    unless_null $P5015, fallback120
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5016, $P5017
    set fb_tmp_20, $P5016
    repr_defined $I5001, fb_tmp_20
    unless $I5001 goto if69_else121 
    set $P5018, fb_tmp_20["$LINEPOSCACHE"]
    set $P5020, $P5018
    goto if69_end122
  if69_else121:
    null $P5019
    set $P5020, $P5019
  if69_end122:
    unless_null $P5020, vivi_70123
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_70123:
    unless_null $P5020, vivi_71124
    die "Contextual $*LINEPOSCACHE not found"
    box $P5022, "Contextual $*LINEPOSCACHE not found"
    set $P5020, $P5022
  vivi_71124:
    set $P5015, $P5020
  fallback120:
    find_dynamic_lex $P5023, "%*COMPILING"
    unless_null $P5023, fallback131
    nqp_get_sc_object $P5025, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_7, $P5024
    set fb_tmp_23, pkg_viv_tmp_7
    repr_defined $I5004, fb_tmp_23
    unless $I5004 goto if75_else132 
    set $P5026, fb_tmp_23["%COMPILING"]
    set $P5028, $P5026
    goto if75_end133
  if75_else132:
    null $P5027
    set $P5028, $P5027
  if75_end133:
    unless_null $P5028, vivi_76134
    new $P5029, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5029
    set $P5028, $P5029
  vivi_76134:
    unless_null $P5028, vivi_77135
    die "Contextual %*COMPILING not found"
    box $P5030, "Contextual %*COMPILING not found"
    set $P5028, $P5030
  vivi_77135:
    set $P5023, $P5028
  fallback131:
    set fb_tmp_22, $P5023
    repr_defined $I5003, fb_tmp_22
    unless $I5003 goto if74_else129 
    set $P5031, fb_tmp_22["%?OPTIONS"]
    set $P5033, $P5031
    goto if74_end130
  if74_else129:
    null $P5032
    set $P5033, $P5032
  if74_end130:
    unless_null $P5033, vivi_78136
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5034
  vivi_78136:
    set fb_tmp_21, $P5033
    repr_defined $I5002, fb_tmp_21
    unless $I5002 goto if73_else127 
    set $P5035, fb_tmp_21["bootstrap"]
    set $P5037, $P5035
    goto if73_end128
  if73_else127:
    null $P5036
    set $P5037, $P5036
  if73_end128:
    unless_null $P5037, vivi_79137
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_79137:
    unless $P5037 goto if72_else125 
    set $I5005, 1
    goto if72_end126
  if72_else125:
    set $I5005, 0
  if72_end126:
    $P5039 = $P101."compile"($P5014, "ast" :named("from"), 1 :named("compunit_ok"), $P5015 :named("lineposcache"), $I5005 :named("bootstrap"))
    set $P102, $P5039
.annotate 'line', 232
    $P5040 = $P101."backend"()
    $P5041 = $P5040."compunit_coderefs"($P102)
    set $P103, $P5041
    elements $I5006, $P103
    box $P5042, $I5006
    set $P104, $P5042
    box $P5043, 0
    set $P105, $P5043
  while80_test138:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5007, $N5001, $N5002
    box $P5047, $I5007
    set $P5046, $P5047
    unless $I5007 goto while80_done142 
  while80_redo140:
    .const 'Sub' $P5044 = 'cuid_384_1381944288.90674' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5046, $P5045
    goto while80_test138 
  while80_done142:
.annotate 'line', 258
    $P5048 = $P101."backend"()
    $P5049 = $P5048."compunit_mainline"($P102)
    set $P106, $P5049
.annotate 'line', 259
    $P5050 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1381944288.90674") :anon :lex :outer("cuid_12_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 235
    .const 'Sub' $P5017 = 'cuid_383_1381944288.90674' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_24, $P5002
    repr_defined $I5001, fb_tmp_24
    unless $I5001 goto if81_else143 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_24[$I5002]
    set $P5006, $P5003
    goto if81_end144
  if81_else143:
    null $P5005
    set $P5006, $P5005
  if81_end144:
    unless_null $P5006, vivi_82145
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_82145:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up", 9
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if83_end147 
    .const 'Sub' $P5013 = 'cuid_383_1381944288.90674' 
    capture_lex $P5013
    $P5014 = $P5013()
  if83_end147:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1381944288.90674") :anon :lex :outer("cuid_384_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 237
    .const 'Sub' $P5089 = 'cuid_382_1381944288.90674' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 241
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up", 9
    set fb_tmp_25, $P5006
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if84_else148 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_25[$S5001]
    set $P5010, $P5007
    goto if84_end149
  if84_else148:
    null $P5009
    set $P5010, $P5009
  if84_end149:
    unless_null $P5010, vivi_85150
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_85150:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types", 10
    set fb_tmp_26, $P5016
    repr_defined $I5002, fb_tmp_26
    unless $I5002 goto if86_else151 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_26[$S5002]
    set $P5020, $P5017
    goto if86_end152
  if86_else151:
    null $P5019
    set $P5020, $P5019
  if86_end152:
    unless_null $P5020, vivi_87153
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_87153:
    find_lex $P5022, "@allcodes"
    set fb_tmp_27, $P5022
    repr_defined $I5003, fb_tmp_27
    unless $I5003 goto if88_else154 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_27[$I5004]
    set $P5026, $P5023
    goto if88_end155
  if88_else154:
    null $P5025
    set $P5026, $P5025
  if88_end155:
    unless_null $P5026, vivi_89156
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_89156:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types", 10
    set fb_tmp_28, $P5031
    repr_defined $I5005, fb_tmp_28
    unless $I5005 goto if90_else157 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_28[$S5003]
    set $P5035, $P5032
    goto if90_end158
  if90_else157:
    null $P5034
    set $P5035, $P5034
  if90_end158:
    unless_null $P5035, vivi_91159
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5035, $P5036
  vivi_91159:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up", 9
    set fb_tmp_29, $P5044
    repr_defined $I5006, fb_tmp_29
    unless $I5006 goto if92_else160 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_29[$S5004]
    set $P5048, $P5045
    goto if92_end161
  if92_else160:
    null $P5047
    set $P5048, $P5047
  if92_end161:
    unless_null $P5048, vivi_93162
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5048, $P5049
  vivi_93162:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next172:
    unless $P5040, for_done174
    shift $P5051, $P5040
  for_redo173:
    .const 'Sub' $P5050 = 'cuid_382_1381944288.90674' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next172
  for_done174:
    find_lex $P5052, "@allcodes"
    set fb_tmp_33, $P5052
    repr_defined $I5007, fb_tmp_33
    unless $I5007 goto if100_else175 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_33[$I5008]
    set $P5056, $P5053
    goto if100_end176
  if100_else175:
    null $P5055
    set $P5056, $P5055
  if100_end176:
    unless_null $P5056, vivi_101177
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5056, $P5057
  vivi_101177:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 249
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx", 12
    set fb_tmp_34, $P5063
    repr_defined $I5009, fb_tmp_34
    unless $I5009 goto if102_else178 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_34[$S5005]
    set $P5067, $P5064
    goto if102_end179
  if102_else178:
    null $P5066
    set $P5067, $P5066
  if102_end179:
    unless_null $P5067, vivi_103180
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5067, $P5068
  vivi_103180:
    find_lex $P5069, "@allcodes"
    set fb_tmp_35, $P5069
    repr_defined $I5010, fb_tmp_35
    unless $I5010 goto if104_else181 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_35[$I5011]
    set $P5073, $P5070
    goto if104_end182
  if104_else181:
    null $P5072
    set $P5073, $P5072
  if104_end182:
    unless_null $P5073, vivi_105183
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5073, $P5074
  vivi_105183:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list", 11
    set fb_tmp_36, $P5078
    repr_defined $I5012, fb_tmp_36
    unless $I5012 goto if106_else184 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_36[$S5006]
    set $P5082, $P5079
    goto if106_end185
  if106_else184:
    null $P5081
    set $P5082, $P5081
  if106_end185:
    unless_null $P5082, vivi_107186
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_107186:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while108_handlers190
    push_eh $P5087
  while108_test187:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while108_done191 
  while108_redo189:
.annotate 'line', 253
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while108_test187 
  while108_handlers190:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while108_test187
    eq $P5087, .CONTROL_LOOP_REDO, while108_redo189
  while108_done191:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1381944288.90674") :anon :lex :outer("cuid_383_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 244
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types", 10
    set fb_tmp_30, $P5004
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if94_else163 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_30[$S5001]
    set $P5008, $P5005
    goto if94_end164
  if94_else163:
    null $P5007
    set $P5008, $P5007
  if94_end164:
    unless_null $P5008, vivi_95165
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_95165:
    find_lex $P5011, "@allcodes"
    set fb_tmp_31, $P5011
    repr_defined $I5002, fb_tmp_31
    unless $I5002 goto if96_else166 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_31[$I5003]
    set $P5015, $P5012
    goto if96_end167
  if96_else166:
    null $P5014
    set $P5015, $P5014
  if96_end167:
    unless_null $P5015, vivi_97168
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_97168:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types", 10
    set fb_tmp_32, $P5020
    repr_defined $I5004, fb_tmp_32
    unless $I5004 goto if98_else169 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_32[$S5002]
    set $P5024, $P5021
    goto if98_end170
  if98_else169:
    null $P5023
    set $P5024, $P5023
  if98_end170:
    unless_null $P5024, vivi_99171
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_99171:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1381944288.90674") :anon :lex :outer("cuid_17_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 292
    .const 'Sub' $P5012 = 'cuid_13_1381944288.90674' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1381944288.90674' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1381944288.90674' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 13
    .const 'Sub' $P5011 = 'cuid_14_1381944288.90674' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1381944288.90674") :anon :lex :outer("cuid_385_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 293
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_39 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 294
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up", 9
    set fb_tmp_39, $P5005
    repr_defined $I5001, fb_tmp_39
    unless $I5001 goto if117_else206 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_39[$S5001]
    set $P5010, $P5006
    goto if117_end207
  if117_else206:
    null $P5009
    set $P5010, $P5009
  if117_end207:
    unless_null $P5010, vivi_118208
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_118208:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1381944288.90674") :anon :lex :outer("cuid_385_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 300

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1381944288.90674") :anon :lex :outer("cuid_17_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 304
    .const 'Sub' $P5012 = 'cuid_15_1381944288.90674' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1381944288.90674' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1381944288.90674' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 13
    .const 'Sub' $P5011 = 'cuid_16_1381944288.90674' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1381944288.90674") :anon :lex :outer("cuid_386_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 305
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_40 
.annotate 'line', 307
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 308
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 310
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 312
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 313
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 314
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 315
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 317
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 321
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up", 9
    set fb_tmp_40, $P5025
    repr_defined $I5001, fb_tmp_40
    unless $I5001 goto if119_else209 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_40[$S5001]
    set $P5030, $P5026
    goto if119_end210
  if119_else209:
    null $P5029
    set $P5030, $P5029
  if119_end210:
    unless_null $P5030, vivi_120211
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5030, $P5031
  vivi_120211:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1381944288.90674") :anon :lex :outer("cuid_386_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 324

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1381944288.90674") :anon :lex :outer("cuid_17_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 336
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if122_end215 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
.annotate 'line', 339
    $P5008 = "&compilee_list"()
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if122_end215:
.annotate 'line', 341
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 344
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 345
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 347
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 348
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 352
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 354
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 355
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 356
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 357
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 359
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 361
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 362
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up", 9
.annotate 'line', 366
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types", 10
.annotate 'line', 367
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 389
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_4 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_3, default223
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_2, $P5006
  default223:
    if haz_param_4, default224
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_3, $P5007
  default224:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_217
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if123_end220 
.annotate 'line', 392
    set $P101["name"], _lex_param_2
  if123_end220:
    defined $I5002, _lex_param_3
    unless $I5002 goto if124_end222 
.annotate 'line', 393
    set $P101["repr"], _lex_param_3
  if124_end222:
.annotate 'line', 394
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 395
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    $P5005 = "RETURN"($P102)
    goto lexotic_218
  lexotic_217:
    .get_results ($P5005)
  lexotic_218:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 406
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 407
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 408
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 413
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 414
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 418
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 419
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 420
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
.annotate 'line', 423
    $P5013 = "&compilee_list"(_lex_param_2)
    setattribute $P103, $P101, "$!types", $P5013
.annotate 'line', 425
    $P5014 = "&compilee_list"(_lex_param_3)
    setattribute $P103, $P101, "$!definednesses", $P5014
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 430
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 432
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 435
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 440
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 443
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 444
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 448
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 449
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_390_1381944288.90674' 
    capture_lex $P5030 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_45 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_225
    .lex "RETURN", $P106
.annotate 'line', 455
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 108
.annotate 'line', 456
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS", 8
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while125_test227:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while125_done231 
  while125_redo229:
    .const 'Sub' $P5014 = 'cuid_390_1381944288.90674' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while125_test227 
  while125_done231:
.annotate 'line', 480
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback253
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set fb_tmp_45, $P5022
    repr_defined $I5002, fb_tmp_45
    unless $I5002 goto if137_else254 
    set $P5024, fb_tmp_45["$GLOBALish"]
    set $P5026, $P5024
    goto if137_end255
  if137_else254:
    null $P5025
    set $P5026, $P5025
  if137_end255:
    unless_null $P5026, vivi_138256
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_138256:
    unless_null $P5026, vivi_139257
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_139257:
    set $P5021, $P5026
  fallback253:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 483
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 488
    $P101."shift"()
    $P5029 = "RETURN"($P101)
    goto lexotic_226
  lexotic_225:
    .get_results ($P5029)
  lexotic_226:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1381944288.90674") :anon :lex :outer("cuid_26_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 461
    .const 'Sub' $P5019 = 'cuid_389_1381944288.90674' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_41 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 463
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_41, $P5007
    repr_defined $I5001, fb_tmp_41
    unless $I5001 goto if126_else232 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_41[$I5002]
    set $P5011, $P5008
    goto if126_end233
  if126_else232:
    null $P5010
    set $P5011, $P5010
  if126_end233:
    unless_null $P5011, vivi_127234
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_127234:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next250:
    unless $P5016, for_done252
    shift $P5018, $P5016
  for_redo251:
    .const 'Sub' $P5017 = 'cuid_389_1381944288.90674' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next250
  for_done252:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1381944288.90674") :anon :lex :outer("cuid_390_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_388_1381944288.90674' 
    capture_lex $P5012 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_42 
    find_lex $P5001, "%seen"
    set fb_tmp_42, $P5001
    repr_defined $I5002, fb_tmp_42
    unless $I5002 goto if130_else239 
.annotate 'line', 465
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_42[$S5001]
    set $P5005, $P5002
    goto if130_end240
  if130_else239:
    null $P5004
    set $P5005, $P5004
  if130_end240:
    unless_null $P5005, vivi_131241
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_131241:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if129_end238 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if129_end238:
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if128_end236 
    .const 'Sub' $P5008 = 'cuid_388_1381944288.90674' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if128_end236:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1381944288.90674") :anon :lex :outer("cuid_389_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 465
    .lex "$value", $P101 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 466
    find_lex $P5002, "$_"
    $P5003 = $P5002."value"()
    set fb_tmp_43, $P5003
    repr_defined $I5001, fb_tmp_43
    unless $I5001 goto if132_else242 
    set $P5004, fb_tmp_43["value"]
    set $P5006, $P5004
    goto if132_end243
  if132_else242:
    null $P5005
    set $P5006, $P5005
  if132_end243:
    unless_null $P5006, vivi_133244
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_133244:
    set $P101, $P5006
    nqp_get_sc_for_object $P5008, $P101
    isnull $I5002, $P5008
    if $I5002 goto unless134_end246 
.annotate 'line', 467
.annotate 'line', 468
    find_lex $P5009, "$wrapper"
    set fb_tmp_44, $P5009
    repr_defined $I5003, fb_tmp_44
    unless $I5003 goto if135_else247 
    set $P5010, fb_tmp_44[0]
    set $P5012, $P5010
    goto if135_end248
  if135_else247:
    null $P5011
    set $P5012, $P5011
  if135_end248:
    unless_null $P5012, vivi_136249
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_136249:
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 470
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_lex $P5016, "$_"
    $P5017 = $P5016."key"()
    $P5018 = $P5015."new"($P5017 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 471
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5020 = $P5019."new"($P101 :named("value"))
    $P5021 = $P5014."new"($P5018, $P5020, "bind" :named("op"))
    $P5022 = $P5012."push"($P5021)
  unless134_end246:
    find_lex $P5023, "%seen"
.annotate 'line', 474
    find_lex $P5024, "$_"
    $P5025 = $P5024."key"()
    set $S5001, $P5025
    box $P5026, 1
    set $P5023[$S5001], $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 493
    .param pmc _lex_param_0 
    .const 'Sub' $P5052 = 'cuid_391_1381944288.90674' 
    capture_lex $P5052 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_46 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    .local pmc fb_tmp_51 
    .local pmc pkg_viv_tmp_9 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback264
    nqp_get_sc_object $P5010, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_8, $P5009
    set fb_tmp_48, pkg_viv_tmp_8
    repr_defined $I5003, fb_tmp_48
    unless $I5003 goto if143_else265 
    set $P5011, fb_tmp_48["%COMPILING"]
    set $P5013, $P5011
    goto if143_end266
  if143_else265:
    null $P5012
    set $P5013, $P5012
  if143_end266:
    unless_null $P5013, vivi_144267
    new $P5014, 'Hash'
    set pkg_viv_tmp_8["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_144267:
    unless_null $P5013, vivi_145268
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_145268:
    set $P5008, $P5013
  fallback264:
    set fb_tmp_47, $P5008
    repr_defined $I5002, fb_tmp_47
    unless $I5002 goto if142_else262 
    set $P5016, fb_tmp_47["%?OPTIONS"]
    set $P5018, $P5016
    goto if142_end263
  if142_else262:
    null $P5017
    set $P5018, $P5017
  if142_end263:
    unless_null $P5018, vivi_146269
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_146269:
    set fb_tmp_46, $P5018
    repr_defined $I5001, fb_tmp_46
    unless $I5001 goto if141_else260 
    set $P5020, fb_tmp_46["vmlibs"]
    set $P5022, $P5020
    goto if141_end261
  if141_else260:
    null $P5021
    set $P5022, $P5021
  if141_end261:
    unless_null $P5022, vivi_147270
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_147270:
    unless $P5022 goto if140_end259 
.annotate 'line', 496
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback275
    nqp_get_sc_object $P5030, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_9, $P5029
    set fb_tmp_51, pkg_viv_tmp_9
    repr_defined $I5006, fb_tmp_51
    unless $I5006 goto if150_else276 
    set $P5031, fb_tmp_51["%COMPILING"]
    set $P5033, $P5031
    goto if150_end277
  if150_else276:
    null $P5032
    set $P5033, $P5032
  if150_end277:
    unless_null $P5033, vivi_151278
    new $P5034, 'Hash'
    set pkg_viv_tmp_9["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_151278:
    unless_null $P5033, vivi_152279
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_152279:
    set $P5028, $P5033
  fallback275:
    set fb_tmp_50, $P5028
    repr_defined $I5005, fb_tmp_50
    unless $I5005 goto if149_else273 
    set $P5036, fb_tmp_50["%?OPTIONS"]
    set $P5038, $P5036
    goto if149_end274
  if149_else273:
    null $P5037
    set $P5038, $P5037
  if149_end274:
    unless_null $P5038, vivi_153280
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5038, $P5039
  vivi_153280:
    set fb_tmp_49, $P5038
    repr_defined $I5004, fb_tmp_49
    unless $I5004 goto if148_else271 
    set $P5040, fb_tmp_49["vmlibs"]
    set $P5042, $P5040
    goto if148_end272
  if148_else271:
    null $P5041
    set $P5042, $P5041
  if148_end272:
    unless_null $P5042, vivi_154281
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5042, $P5043
  vivi_154281:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next282:
    unless $P5026, for_done284
    shift $P5045, $P5026
  for_redo283:
    .const 'Sub' $P5044 = 'cuid_391_1381944288.90674' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next282
  for_done284:
  if140_end259:
.annotate 'line', 501
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
.annotate 'line', 503
    nqp_get_sc_object $P5047, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5048 = $P5047."new"("null" :named("op"))
.annotate 'line', 504
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5050 = $P5049."new"("null" :named("op"))
    $P5051 = $P5046."new"($P101 :named("loadlibs"), $P5048 :named("jvm"), $P5050 :named("moar"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1381944288.90674") :anon :lex :outer("cuid_27_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 497
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 498
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 509
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 510
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
.annotate 'line', 511
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 512
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 513
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 514
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 516
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 517
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 518
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 520
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5022 = $P5021."new"("null" :named("op"))
.annotate 'line', 521
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5024 = $P5023."new"("null" :named("op"))
    $P5025 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"), $P5024 :named("moar"))
    $P5026 = $P5001."add_load_dependency_task"($P5025 :named("deserialize_past"))
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 526
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_392_1381944288.90674' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks", 13
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next285:
    unless $P5003, for_done287
    shift $P5008, $P5003
  for_redo286:
    .const 'Sub' $P5007 = 'cuid_392_1381944288.90674' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next285
  for_done287:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1381944288.90674") :anon :lex :outer("cuid_29_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 527
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 537
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 538
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 543
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 544
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 549
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_393_1381944288.90674' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_288
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS", 8
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while155_test290:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while155_done294 
  while155_redo292:
    .const 'Sub' $P5006 = 'cuid_393_1381944288.90674' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while155_test290 
  while155_done294:
    box $P5010, 0
    goto lexotic_289
  lexotic_288:
    .get_results ($P5010)
  lexotic_289:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1381944288.90674") :anon :lex :outer("cuid_32_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 551
    .lex "%sym", $P101 
    .local pmc fb_tmp_52 
    .local pmc fb_tmp_53 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 553
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_52, $P5007
    repr_defined $I5001, fb_tmp_52
    unless $I5001 goto if156_else295 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_52[$I5002]
    set $P5011, $P5008
    goto if156_end296
  if156_else295:
    null $P5010
    set $P5011, $P5010
  if156_end296:
    unless_null $P5011, vivi_157297
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_157297:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5022, $N5004
    set $P5021, $P5022
    unless $N5004 goto if158_end299 
.annotate 'line', 554
    set fb_tmp_53, $P101
    repr_defined $I5004, fb_tmp_53
    unless $I5004 goto if159_else300 
    set $P5015, fb_tmp_53["scope"]
    set $P5017, $P5015
    goto if159_end301
  if159_else300:
    null $P5016
    set $P5017, $P5016
  if159_end301:
    unless_null $P5017, vivi_160302
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_160302:
    set $S5001, $P5017
    find_lex $P5019, "$wanted_scope"
    set $S5002, $P5019
    iseq $I5003, $S5001, $S5002
    $P5020 = "RETURN"($I5003)
    set $P5021, $P5020
  if158_end299:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 562
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_162304
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 564
.annotate 'line', 565
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_161303
  catch_handler_162304:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_161303
  skip_handler_161303:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1381944288.90674") :anon :lex :outer("cuid_375_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 574
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_395_1381944288.90674' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_397_1381944288.90674' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_398_1381944288.90674' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_305
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless163_end308 
.annotate 'line', 576
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless163_end308:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if164_end310 
    .const 'Sub' $P5003 = 'cuid_395_1381944288.90674' 
    capture_lex $P5003
    $P5004 = $P5003()
  if164_end310:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback329
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5006, $P5007
    set fb_tmp_57, $P5006
    repr_defined $I5002, fb_tmp_57
    unless $I5002 goto if174_else330 
    set $P5008, fb_tmp_57["$GLOBALish"]
    set $P5010, $P5008
    goto if174_end331
  if174_else330:
    null $P5009
    set $P5010, $P5009
  if174_end331:
    unless_null $P5010, vivi_175332
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_175332:
    unless_null $P5010, vivi_176333
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_176333:
    set $P5005, $P5010
  fallback329:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if177_end335 
    .const 'Sub' $P5013 = 'cuid_397_1381944288.90674' 
    capture_lex $P5013
    $P5014 = $P5013()
  if177_end335:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next359:
    unless $P5017, for_done361
    shift $P5019, $P5017
  for_redo360:
    .const 'Sub' $P5018 = 'cuid_398_1381944288.90674' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next359
  for_done361:
    goto lexotic_306
  lexotic_305:
    .get_results ($P101)
  lexotic_306:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1381944288.90674") :anon :lex :outer("cuid_34_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 580
    .const 'Sub' $P5017 = 'cuid_394_1381944288.90674' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_54 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_54, $P5003
    repr_defined $I5001, fb_tmp_54
    unless $I5001 goto if165_else311 
    set $P5004, fb_tmp_54[0]
    set $P5006, $P5004
    goto if165_end312
  if165_else311:
    null $P5005
    set $P5006, $P5005
  if165_end312:
    unless_null $P5006, vivi_166313
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_166313:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 8
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while167_test314:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while167_done318 
  while167_redo316:
    .const 'Sub' $P5013 = 'cuid_394_1381944288.90674' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while167_test314 
  while167_done318:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1381944288.90674") :anon :lex :outer("cuid_395_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 583
    .lex "%sym", $P101 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 585
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_55, $P5007
    repr_defined $I5001, fb_tmp_55
    unless $I5001 goto if168_else319 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_55[$I5002]
    set $P5011, $P5008
    goto if168_end320
  if168_else319:
    null $P5010
    set $P5011, $P5010
  if168_end320:
    unless_null $P5011, vivi_169321
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_169321:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5024, $N5004
    set $P5023, $P5024
    unless $N5004 goto if170_end323 
.annotate 'line', 586
    exists $I5003, $P101["value"]
    unless $I5003 goto if171_else324 
.annotate 'line', 587
    set fb_tmp_56, $P101
    repr_defined $I5004, fb_tmp_56
    unless $I5004 goto if172_else326 
    set $P5015, fb_tmp_56["value"]
    set $P5017, $P5015
    goto if172_end327
  if172_else326:
    null $P5016
    set $P5017, $P5016
  if172_end327:
    unless_null $P5017, vivi_173328
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_173328:
    $P5019 = "RETURN"($P5017)
    set $P5022, $P5019
    goto if171_end325
  if171_else324:
.annotate 'line', 590
    find_lex $P5020, "$final_name"
    set $S5002, $P5020
    concat $S5001, "No compile-time value for ", $S5002
    box $P5021, $S5001
    die $P5021
    set $P5022, $P5021
  if171_end325:
    set $P5023, $P5022
  if170_end323:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1381944288.90674") :anon :lex :outer("cuid_34_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 601
    .const 'Sub' $P5017 = 'cuid_396_1381944288.90674' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_58 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_58, $P5003
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if178_else336 
    set $P5004, fb_tmp_58[0]
    set $P5006, $P5004
    goto if178_end337
  if178_else336:
    null $P5005
    set $P5006, $P5005
  if178_end337:
    unless_null $P5006, vivi_179338
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_179338:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 8
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while180_test339:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while180_done343 
  while180_redo341:
    .const 'Sub' $P5013 = 'cuid_396_1381944288.90674' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while180_test339 
  while180_done343:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1381944288.90674") :anon :lex :outer("cuid_397_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 604
    .lex "%sym", $P101 
    .local pmc fb_tmp_59 
    .local pmc fb_tmp_60 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 606
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_59, $P5007
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if181_else344 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_59[$I5002]
    set $P5011, $P5008
    goto if181_end345
  if181_else344:
    null $P5010
    set $P5011, $P5010
  if181_end345:
    unless_null $P5011, vivi_182346
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_182346:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if183_end348 
.annotate 'line', 607
    exists $I5003, $P101["value"]
    unless $I5003 goto if184_else349 
.annotate 'line', 608
    set fb_tmp_60, $P101
    repr_defined $I5004, fb_tmp_60
    unless $I5004 goto if185_else351 
    set $P5015, fb_tmp_60["value"]
    set $P5017, $P5015
    goto if185_end352
  if185_else351:
    null $P5016
    set $P5017, $P5016
  if185_end352:
    unless_null $P5017, vivi_186353
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_186353:
    store_lex "$result", $P5017
.annotate 'line', 610
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if184_end350
  if184_else349:
.annotate 'line', 613
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if184_end350:
    set $P5024, $P5023
  if183_end348:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1381944288.90674") :anon :lex :outer("cuid_34_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 621
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_61 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if187_else354 
.annotate 'line', 622
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_61, $P5003
    repr_defined $I5002, fb_tmp_61
    unless $I5002 goto if188_else356 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_61[$S5002]
    set $P5007, $P5005
    goto if188_end357
  if188_else356:
    null $P5006
    set $P5007, $P5006
  if188_end357:
    unless_null $P5007, vivi_189358
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_189358:
    store_lex "$result", $P5007
    set $P5012, $P5007
    goto if187_end355
  if187_else354:
.annotate 'line', 625
.annotate 'line', 627
    find_lex $P5009, "@name"
    $P5010 = "&join"("::", $P5009)
    set $S5004, $P5010
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5011, $S5003
    die $P5011
    set $P5012, $P5011
  if187_end355:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 636
    .const 'Sub' $P5199 = 'cuid_35_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_47_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_49_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_67_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_78_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_93_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_94_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_130_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_222_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1381944288.90674' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_224_1381944288.90674' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1321
.annotate 'line', 1322
    nqp_get_sc_object $P5001, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1323
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1324
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1325
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1326
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1327
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1328
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1329
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5008."O"(":prec<m=>, :assoc<non>", "%relational")
.annotate 'line', 1330
    nqp_get_sc_object $P5009, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1331
    nqp_get_sc_object $P5010, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1332
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1333
    nqp_get_sc_object $P5012, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1334
    nqp_get_sc_object $P5013, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1335
    nqp_get_sc_object $P5014, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1336
    nqp_get_sc_object $P5015, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 636
    .const 'Sub' $P5016 = 'cuid_35_1381944288.90674' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1381944288.90674' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1381944288.90674' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1381944288.90674' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1381944288.90674' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1381944288.90674' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1381944288.90674' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1381944288.90674' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1381944288.90674' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1381944288.90674' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_47_1381944288.90674' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_49_1381944288.90674' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_50_1381944288.90674' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_51_1381944288.90674' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_52_1381944288.90674' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_53_1381944288.90674' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_54_1381944288.90674' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_55_1381944288.90674' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_56_1381944288.90674' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_57_1381944288.90674' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_58_1381944288.90674' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_59_1381944288.90674' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_60_1381944288.90674' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_61_1381944288.90674' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_62_1381944288.90674' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_63_1381944288.90674' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_64_1381944288.90674' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_65_1381944288.90674' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_67_1381944288.90674' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_68_1381944288.90674' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_69_1381944288.90674' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_70_1381944288.90674' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_71_1381944288.90674' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_72_1381944288.90674' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_73_1381944288.90674' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_74_1381944288.90674' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_75_1381944288.90674' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_76_1381944288.90674' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_77_1381944288.90674' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_78_1381944288.90674' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_79_1381944288.90674' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_80_1381944288.90674' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_81_1381944288.90674' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_82_1381944288.90674' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_83_1381944288.90674' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_84_1381944288.90674' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_85_1381944288.90674' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_86_1381944288.90674' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_87_1381944288.90674' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_88_1381944288.90674' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_89_1381944288.90674' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_90_1381944288.90674' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_93_1381944288.90674' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_94_1381944288.90674' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_95_1381944288.90674' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_96_1381944288.90674' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_97_1381944288.90674' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_98_1381944288.90674' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_99_1381944288.90674' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_100_1381944288.90674' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_101_1381944288.90674' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_102_1381944288.90674' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_103_1381944288.90674' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_104_1381944288.90674' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_105_1381944288.90674' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_106_1381944288.90674' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_107_1381944288.90674' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_108_1381944288.90674' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_109_1381944288.90674' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_110_1381944288.90674' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_111_1381944288.90674' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_112_1381944288.90674' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_113_1381944288.90674' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_114_1381944288.90674' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_115_1381944288.90674' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_116_1381944288.90674' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_117_1381944288.90674' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_118_1381944288.90674' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_119_1381944288.90674' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_120_1381944288.90674' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_121_1381944288.90674' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_122_1381944288.90674' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_123_1381944288.90674' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_124_1381944288.90674' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_125_1381944288.90674' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_126_1381944288.90674' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_127_1381944288.90674' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_128_1381944288.90674' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_129_1381944288.90674' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_130_1381944288.90674' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_131_1381944288.90674' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_132_1381944288.90674' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_134_1381944288.90674' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_135_1381944288.90674' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_136_1381944288.90674' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_137_1381944288.90674' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_138_1381944288.90674' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_139_1381944288.90674' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_140_1381944288.90674' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_141_1381944288.90674' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_142_1381944288.90674' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_143_1381944288.90674' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_144_1381944288.90674' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_145_1381944288.90674' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_146_1381944288.90674' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_147_1381944288.90674' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_148_1381944288.90674' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_149_1381944288.90674' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_150_1381944288.90674' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_151_1381944288.90674' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_152_1381944288.90674' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_153_1381944288.90674' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_154_1381944288.90674' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_155_1381944288.90674' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_156_1381944288.90674' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_157_1381944288.90674' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_158_1381944288.90674' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_159_1381944288.90674' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_160_1381944288.90674' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_161_1381944288.90674' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_162_1381944288.90674' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_163_1381944288.90674' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_164_1381944288.90674' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_165_1381944288.90674' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_166_1381944288.90674' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_167_1381944288.90674' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_168_1381944288.90674' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_169_1381944288.90674' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_170_1381944288.90674' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_171_1381944288.90674' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_172_1381944288.90674' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_173_1381944288.90674' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_174_1381944288.90674' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_175_1381944288.90674' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_176_1381944288.90674' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_177_1381944288.90674' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_178_1381944288.90674' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_179_1381944288.90674' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_180_1381944288.90674' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_181_1381944288.90674' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_182_1381944288.90674' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_183_1381944288.90674' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_184_1381944288.90674' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_185_1381944288.90674' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_186_1381944288.90674' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_187_1381944288.90674' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_188_1381944288.90674' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_189_1381944288.90674' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_190_1381944288.90674' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_191_1381944288.90674' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_192_1381944288.90674' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_193_1381944288.90674' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_194_1381944288.90674' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_195_1381944288.90674' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_196_1381944288.90674' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_197_1381944288.90674' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_198_1381944288.90674' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_199_1381944288.90674' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_200_1381944288.90674' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_201_1381944288.90674' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_202_1381944288.90674' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_203_1381944288.90674' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_204_1381944288.90674' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_205_1381944288.90674' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_206_1381944288.90674' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_207_1381944288.90674' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_208_1381944288.90674' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_209_1381944288.90674' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_210_1381944288.90674' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_211_1381944288.90674' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_212_1381944288.90674' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_213_1381944288.90674' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_214_1381944288.90674' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_215_1381944288.90674' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_216_1381944288.90674' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_217_1381944288.90674' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_218_1381944288.90674' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_219_1381944288.90674' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_220_1381944288.90674' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_221_1381944288.90674' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_222_1381944288.90674' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_223_1381944288.90674' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_224_1381944288.90674' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 637
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_62 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_63 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_64 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_65 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_66 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_67 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_68 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_69 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_70 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_71 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_72 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    .local pmc fb_tmp_75 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_76 
    .local pmc pkg_viv_tmp_19 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback367
    nqp_get_sc_object $P5021, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_11, $P5020
    set fb_tmp_63, pkg_viv_tmp_11
    repr_defined $I5002, fb_tmp_63
    unless $I5002 goto if193_else368 
    set $P5022, fb_tmp_63["%LANG"]
    set $P5024, $P5022
    goto if193_end369
  if193_else368:
    null $P5023
    set $P5024, $P5023
  if193_end369:
    unless_null $P5024, vivi_194370
    new $P5025, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5025
    set $P5024, $P5025
  vivi_194370:
    unless_null $P5024, vivi_195371
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_195371:
    set $P101, $P5024
  fallback367:
    nqp_get_sc_object $P5028, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    set pkg_lookup_tmp_1, $P5028
    get_who $P5029, pkg_lookup_tmp_1
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if197_else374 
    get_who $P5031, pkg_lookup_tmp_1
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if197_end375
  if197_else374:
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5032
  if197_end375:
    get_who $P5027, $P5033
    set fb_tmp_64, $P5027
    repr_defined $I5003, fb_tmp_64
    unless $I5003 goto if196_else372 
    set $P5034, fb_tmp_64["Regex"]
    set $P5036, $P5034
    goto if196_end373
  if196_else372:
    null $P5035
    set $P5036, $P5035
  if196_end373:
    unless_null $P5036, vivi_198376
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5036, $P5037
  vivi_198376:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback377
    nqp_get_sc_object $P5039, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_12, $P5038
    set fb_tmp_65, pkg_viv_tmp_12
    repr_defined $I5005, fb_tmp_65
    unless $I5005 goto if199_else378 
    set $P5040, fb_tmp_65["%LANG"]
    set $P5042, $P5040
    goto if199_end379
  if199_else378:
    null $P5041
    set $P5042, $P5041
  if199_end379:
    unless_null $P5042, vivi_200380
    new $P5043, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5043
    set $P5042, $P5043
  vivi_200380:
    unless_null $P5042, vivi_201381
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_201381:
    set $P101, $P5042
  fallback377:
    nqp_get_sc_object $P5046, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    set pkg_lookup_tmp_2, $P5046
    get_who $P5047, pkg_lookup_tmp_2
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if203_else384 
    get_who $P5049, pkg_lookup_tmp_2
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if203_end385
  if203_else384:
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5051, $P5050
  if203_end385:
    get_who $P5045, $P5051
    set fb_tmp_66, $P5045
    repr_defined $I5006, fb_tmp_66
    unless $I5006 goto if202_else382 
    set $P5052, fb_tmp_66["RegexActions"]
    set $P5054, $P5052
    goto if202_end383
  if202_else382:
    null $P5053
    set $P5054, $P5053
  if202_end383:
    unless_null $P5054, vivi_204386
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5054, $P5055
  vivi_204386:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback387
    nqp_get_sc_object $P5057, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_13, $P5056
    set fb_tmp_67, pkg_viv_tmp_13
    repr_defined $I5008, fb_tmp_67
    unless $I5008 goto if205_else388 
    set $P5058, fb_tmp_67["%LANG"]
    set $P5060, $P5058
    goto if205_end389
  if205_else388:
    null $P5059
    set $P5060, $P5059
  if205_end389:
    unless_null $P5060, vivi_206390
    new $P5061, 'Hash'
    set pkg_viv_tmp_13["%LANG"], $P5061
    set $P5060, $P5061
  vivi_206390:
    unless_null $P5060, vivi_207391
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_207391:
    set $P101, $P5060
  fallback387:
    nqp_get_sc_object $P5063, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    set $P101["MAIN"], $P5063
    unless_null $P101, fallback392
    nqp_get_sc_object $P5065, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5064, $P5065
    set pkg_viv_tmp_14, $P5064
    set fb_tmp_68, pkg_viv_tmp_14
    repr_defined $I5009, fb_tmp_68
    unless $I5009 goto if208_else393 
    set $P5066, fb_tmp_68["%LANG"]
    set $P5068, $P5066
    goto if208_end394
  if208_else393:
    null $P5067
    set $P5068, $P5067
  if208_end394:
    unless_null $P5068, vivi_209395
    new $P5069, 'Hash'
    set pkg_viv_tmp_14["%LANG"], $P5069
    set $P5068, $P5069
  vivi_209395:
    unless_null $P5068, vivi_210396
    die "Contextual %*LANG not found"
    box $P5070, "Contextual %*LANG not found"
    set $P5068, $P5070
  vivi_210396:
    set $P101, $P5068
  fallback392:
    nqp_get_sc_object $P5072, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    set pkg_lookup_tmp_3, $P5072
    get_who $P5073, pkg_lookup_tmp_3
    exists $I5011, $P5073["NQP"]
    unless $I5011 goto if212_else399 
    get_who $P5075, pkg_lookup_tmp_3
    set $P5074, $P5075["NQP"]
    set $P5077, $P5074
    goto if212_end400
  if212_else399:
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5077, $P5076
  if212_end400:
    get_who $P5071, $P5077
    set fb_tmp_69, $P5071
    repr_defined $I5010, fb_tmp_69
    unless $I5010 goto if211_else397 
    set $P5078, fb_tmp_69["Actions"]
    set $P5080, $P5078
    goto if211_end398
  if211_else397:
    null $P5079
    set $P5080, $P5079
  if211_end398:
    unless_null $P5080, vivi_213401
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5080, $P5081
  vivi_213401:
    set $P101["MAIN-actions"], $P5080
    unless_null $P102, fallback407
    nqp_get_sc_object $P5090, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_16, $P5089
    set fb_tmp_71, pkg_viv_tmp_16
    repr_defined $I5013, fb_tmp_71
    unless $I5013 goto if217_else408 
    set $P5091, fb_tmp_71["%HOW"]
    set $P5093, $P5091
    goto if217_end409
  if217_else408:
    null $P5092
    set $P5093, $P5092
  if217_end409:
    unless_null $P5093, vivi_218410
    new $P5094, 'Hash'
    set pkg_viv_tmp_16["%HOW"], $P5094
    set $P5093, $P5094
  vivi_218410:
    unless_null $P5093, vivi_219411
    die "Contextual %*HOW not found"
    box $P5095, "Contextual %*HOW not found"
    set $P5093, $P5095
  vivi_219411:
    set $P102, $P5093
  fallback407:
    get_knowhow $P5096
    set $P102["knowhow"], $P5096
    unless_null $P102, fallback412
    nqp_get_sc_object $P5098, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_17, $P5097
    set fb_tmp_72, pkg_viv_tmp_17
    repr_defined $I5014, fb_tmp_72
    unless $I5014 goto if220_else413 
    set $P5099, fb_tmp_72["%HOW"]
    set $P5101, $P5099
    goto if220_end414
  if220_else413:
    null $P5100
    set $P5101, $P5100
  if220_end414:
    unless_null $P5101, vivi_221415
    new $P5102, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5102
    set $P5101, $P5102
  vivi_221415:
    unless_null $P5101, vivi_222416
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_222416:
    set $P102, $P5101
  fallback412:
    get_knowhow_attribute $P5104
    set $P102["knowhow-attr"], $P5104
    find_dynamic_lex $P5105, "$?FILES"
    set $P103, $P5105
.annotate 'line', 656
    nqp_decontainerize $P5106, _lex_param_0
    $P5107 = $P5106."target"()
    set $S5003, $P5107
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5108, "%*COMPILING"
    unless_null $P5108, fallback423
    nqp_get_sc_object $P5110, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_18, $P5109
    set fb_tmp_75, pkg_viv_tmp_18
    repr_defined $I5017, fb_tmp_75
    unless $I5017 goto if226_else424 
    set $P5111, fb_tmp_75["%COMPILING"]
    set $P5113, $P5111
    goto if226_end425
  if226_else424:
    null $P5112
    set $P5113, $P5112
  if226_end425:
    unless_null $P5113, vivi_227426
    new $P5114, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5114
    set $P5113, $P5114
  vivi_227426:
    unless_null $P5113, vivi_228427
    die "Contextual %*COMPILING not found"
    box $P5115, "Contextual %*COMPILING not found"
    set $P5113, $P5115
  vivi_228427:
    set $P5108, $P5113
  fallback423:
    set fb_tmp_74, $P5108
    repr_defined $I5016, fb_tmp_74
    unless $I5016 goto if225_else421 
    set $P5116, fb_tmp_74["%?OPTIONS"]
    set $P5118, $P5116
    goto if225_end422
  if225_else421:
    null $P5117
    set $P5118, $P5117
  if225_end422:
    unless_null $P5118, vivi_229428
    nqp_get_sc_object $P5119, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5118, $P5119
  vivi_229428:
    set fb_tmp_73, $P5118
    repr_defined $I5015, fb_tmp_73
    unless $I5015 goto if224_else419 
    set $P5120, fb_tmp_73["stable-sc"]
    set $P5122, $P5120
    goto if224_end420
  if224_else419:
    null $P5121
    set $P5122, $P5121
  if224_end420:
    unless_null $P5122, vivi_230429
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5122, $P5123
  vivi_230429:
    unless $P5122 goto if223_else417 
    set $S5006, ""
    goto if223_end418
  if223_else417:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if223_end418:
    concat $S5001, $S5002, $S5006
    box $P5124, $S5001
    set $P104, $P5124
    isnull $I5018, $P103
    unless $I5018 goto if231_else430 
.annotate 'line', 659
    nqp_get_sc_object $P5125, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    $P5126 = $P5125."new"($P104 :named("handle"))
    set $P5129, $P5126
    goto if231_end431
  if231_else430:
.annotate 'line', 660
    nqp_get_sc_object $P5127, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    $P5128 = $P5127."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5129, $P5128
  if231_end431:
    set $P105, $P5129
    box $P5130, ""
    set $P106, $P5130
    box $P5131, ""
    set $P107, $P5131
    box $P5132, ""
    set $P108, $P5132
    box $P5133, 0
    set $P109, $P5133
    box $P5134, 0
    set $P110, $P5134
    box $P5135, 0
    set $P111, $P5135
.annotate 'line', 669
    nqp_decontainerize $P5143, _lex_param_0
    $P5144 = $P5143."comp_unit"()
    .return ($P5144) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 674
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx235_start
    .local string rx235_tgt
    .local int rx235_pos
    .local int rx235_off
    .local int rx235_eos
    .local int rx235_rep
    .local pmc rx235_cur
    .local pmc rx235_curclass
    .local pmc rx235_bstack
    .local pmc rx235_cstack
    rx235_start = self."!cursor_start_all"()
    set rx235_cur, rx235_start[0]
    set rx235_tgt, rx235_start[1]
    set rx235_pos, rx235_start[2]
    set rx235_curclass, rx235_start[3]
    set rx235_bstack, rx235_start[4]
    set $I19, rx235_start[5]
    store_lex unicode:"$\x{a2}", rx235_cur
    length rx235_eos, rx235_tgt
    eq $I19, 1, rx235_restart439
    gt rx235_pos, rx235_eos, rx235_fail440
    repr_get_attr_int $I11, self, rx235_curclass, "$!from"
    ne $I11, -1, rxscan236_done446
    goto rxscan236_scan445
  rxscan236_loop444:
    inc rx235_pos
    gt rx235_pos, rx235_eos, rx235_fail440
    repr_bind_attr_int rx235_cur, rx235_curclass, "$!from", rx235_pos
  rxscan236_scan445:
    nqp_rxmark rx235_bstack, rxscan236_loop444, rx235_pos, 0
  rxscan236_done446:
    repr_bind_attr_int rx235_cur, rx235_curclass, "$!pos", rx235_pos
    $P11 = rx235_cur."ident"()
    repr_get_attr_int $I11, $P11, rx235_curclass, "$!pos"
    lt $I11, 0, rx235_fail440
    repr_get_attr_int rx235_pos, $P11, rx235_curclass, "$!pos"
    nqp_rxmark rx235_bstack, rxquantr238_done449, rx235_pos, 0
  rxquantr238_loop448:
    ge rx235_pos, rx235_eos, rx235_fail440
    substr $S11, rx235_tgt, rx235_pos, 1
    index $I11, ucs4:"-'", $S11
    lt $I11, 0, rx235_fail440
    inc rx235_pos
    repr_bind_attr_int rx235_cur, rx235_curclass, "$!pos", rx235_pos
    $P11 = rx235_cur."ident"()
    repr_get_attr_int $I11, $P11, rx235_curclass, "$!pos"
    lt $I11, 0, rx235_fail440
    repr_get_attr_int rx235_pos, $P11, rx235_curclass, "$!pos"
    nqp_rxpeek $I19, rx235_bstack, rxquantr238_done449
    inc $I19
    inc $I19
    set rx235_rep, rx235_bstack[$I19]
    nqp_rxcommit rx235_bstack, rxquantr238_done449
    inc rx235_rep
    nqp_rxmark rx235_bstack, rxquantr238_done449, rx235_pos, rx235_rep
    goto rxquantr238_loop448
  rxquantr238_done449:
    rx235_cur."!cursor_pass"(rx235_pos, "identifier", 'backtrack'=>1)
    .return (rx235_cur)
  rx235_restart439:
    repr_get_attr_obj rx235_cstack, rx235_cur, rx235_curclass, "$!cstack"
  rx235_fail440:
    unless rx235_bstack, rx235_done438
    pop $I19, rx235_bstack
    if_null rx235_cstack, rx235_cstack_done443
    unless rx235_cstack, rx235_cstack_done443
    dec $I19
    set $P11, rx235_cstack[$I19]
  rx235_cstack_done443:
    pop rx235_rep, rx235_bstack
    pop rx235_pos, rx235_bstack
    pop $I19, rx235_bstack
    lt rx235_pos, -1, rx235_done438
    lt rx235_pos, 0, rx235_fail440
    eq $I19, 0, rx235_fail440
    nqp_islist $I20, rx235_cstack
    unless $I20, rx235_jump441
    elements $I18, rx235_bstack
    le $I18, 0, rx235_cut442
    dec $I18
    set $I18, rx235_bstack[$I18]
  rx235_cut442:
    assign rx235_cstack, $I18
  rx235_jump441:
    jump $I19
  rx235_done438:
    rx235_cur."!cursor_fail"()
    .return (rx235_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 676
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx240_start
    .local string rx240_tgt
    .local int rx240_pos
    .local int rx240_off
    .local int rx240_eos
    .local int rx240_rep
    .local pmc rx240_cur
    .local pmc rx240_curclass
    .local pmc rx240_bstack
    .local pmc rx240_cstack
    rx240_start = self."!cursor_start_all"()
    set rx240_cur, rx240_start[0]
    set rx240_tgt, rx240_start[1]
    set rx240_pos, rx240_start[2]
    set rx240_curclass, rx240_start[3]
    set rx240_bstack, rx240_start[4]
    set $I19, rx240_start[5]
    store_lex unicode:"$\x{a2}", rx240_cur
    length rx240_eos, rx240_tgt
    eq $I19, 1, rx240_restart453
    gt rx240_pos, rx240_eos, rx240_fail454
    repr_get_attr_int $I11, self, rx240_curclass, "$!from"
    ne $I11, -1, rxscan241_done460
    goto rxscan241_scan459
  rxscan241_loop458:
    inc rx240_pos
    gt rx240_pos, rx240_eos, rx240_fail454
    repr_bind_attr_int rx240_cur, rx240_curclass, "$!from", rx240_pos
  rxscan241_scan459:
    nqp_rxmark rx240_bstack, rxscan241_loop458, rx240_pos, 0
  rxscan241_done460:
    repr_bind_attr_int rx240_cur, rx240_curclass, "$!pos", rx240_pos
    $P11 = rx240_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx240_curclass, "$!pos"
    lt $I11, 0, rx240_fail454
    nqp_rxmark rx240_bstack, rxsubrule242_pass461, -1, 0
  rxsubrule242_pass461:
    rx240_cstack = rx240_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx240_pos, $P11, rx240_curclass, "$!pos"
    nqp_rxmark rx240_bstack, rxquantr243_done463, rx240_pos, 0
  rxquantr243_loop462:
    add $I11, rx240_pos, 2
    gt $I11, rx240_eos, rx240_fail454
    substr $S10, rx240_tgt, rx240_pos, 2
    ne $S10, ucs4:"::", rx240_fail454
    add rx240_pos, 2
    repr_bind_attr_int rx240_cur, rx240_curclass, "$!pos", rx240_pos
    $P11 = rx240_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx240_curclass, "$!pos"
    lt $I11, 0, rx240_fail454
    nqp_rxmark rx240_bstack, rxsubrule244_pass464, -1, 0
  rxsubrule244_pass464:
    rx240_cstack = rx240_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx240_pos, $P11, rx240_curclass, "$!pos"
    nqp_rxpeek $I19, rx240_bstack, rxquantr243_done463
    inc $I19
    inc $I19
    set rx240_rep, rx240_bstack[$I19]
    nqp_rxcommit rx240_bstack, rxquantr243_done463
    inc rx240_rep
    nqp_rxmark rx240_bstack, rxquantr243_done463, rx240_pos, rx240_rep
    goto rxquantr243_loop462
  rxquantr243_done463:
    rx240_cur."!cursor_pass"(rx240_pos, "name", 'backtrack'=>1)
    .return (rx240_cur)
  rx240_restart453:
    repr_get_attr_obj rx240_cstack, rx240_cur, rx240_curclass, "$!cstack"
  rx240_fail454:
    unless rx240_bstack, rx240_done452
    pop $I19, rx240_bstack
    if_null rx240_cstack, rx240_cstack_done457
    unless rx240_cstack, rx240_cstack_done457
    dec $I19
    set $P11, rx240_cstack[$I19]
  rx240_cstack_done457:
    pop rx240_rep, rx240_bstack
    pop rx240_pos, rx240_bstack
    pop $I19, rx240_bstack
    lt rx240_pos, -1, rx240_done452
    lt rx240_pos, 0, rx240_fail454
    eq $I19, 0, rx240_fail454
    nqp_islist $I20, rx240_cstack
    unless $I20, rx240_jump455
    elements $I18, rx240_bstack
    le $I18, 0, rx240_cut456
    dec $I18
    set $I18, rx240_bstack[$I18]
  rx240_cut456:
    assign rx240_cstack, $I18
  rx240_jump455:
    jump $I19
  rx240_done452:
    rx240_cur."!cursor_fail"()
    .return (rx240_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 678
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx245_start
    .local string rx245_tgt
    .local int rx245_pos
    .local int rx245_off
    .local int rx245_eos
    .local int rx245_rep
    .local pmc rx245_cur
    .local pmc rx245_curclass
    .local pmc rx245_bstack
    .local pmc rx245_cstack
    rx245_start = self."!cursor_start_all"()
    set rx245_cur, rx245_start[0]
    set rx245_tgt, rx245_start[1]
    set rx245_pos, rx245_start[2]
    set rx245_curclass, rx245_start[3]
    set rx245_bstack, rx245_start[4]
    set $I19, rx245_start[5]
    store_lex unicode:"$\x{a2}", rx245_cur
    length rx245_eos, rx245_tgt
    eq $I19, 1, rx245_restart467
    gt rx245_pos, rx245_eos, rx245_fail468
    repr_get_attr_int $I11, self, rx245_curclass, "$!from"
    ne $I11, -1, rxscan246_done474
    goto rxscan246_scan473
  rxscan246_loop472:
    inc rx245_pos
    gt rx245_pos, rx245_eos, rx245_fail468
    repr_bind_attr_int rx245_cur, rx245_curclass, "$!from", rx245_pos
  rxscan246_scan473:
    nqp_rxmark rx245_bstack, rxscan246_loop472, rx245_pos, 0
  rxscan246_done474:
    repr_bind_attr_int rx245_cur, rx245_curclass, "$!pos", rx245_pos
    $P11 = rx245_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx245_curclass, "$!pos"
    lt $I11, 0, rx245_fail468
    nqp_rxmark rx245_bstack, rxsubrule247_pass475, -1, 0
  rxsubrule247_pass475:
    rx245_cstack = rx245_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx245_pos, $P11, rx245_curclass, "$!pos"
    nqp_rxmark rx245_bstack, rxquantr248_done477, rx245_pos, 0
  rxquantr248_loop476:
    repr_bind_attr_int rx245_cur, rx245_curclass, "$!pos", rx245_pos
    $P11 = rx245_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx245_curclass, "$!pos"
    lt $I11, 0, rx245_fail468
    goto rxsubrule249_pass478
  rxsubrule249_back479:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx245_curclass, "$!pos"
    lt $I11, 0, rx245_fail468
  rxsubrule249_pass478:
    rx245_cstack = rx245_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule249_back479
    push rx245_bstack, $I11
    push rx245_bstack, 0
    push rx245_bstack, rx245_pos
    elements $I11, rx245_cstack
    push rx245_bstack, $I11
    repr_get_attr_int rx245_pos, $P11, rx245_curclass, "$!pos"
    nqp_rxpeek $I19, rx245_bstack, rxquantr248_done477
    inc $I19
    inc $I19
    set rx245_rep, rx245_bstack[$I19]
    nqp_rxcommit rx245_bstack, rxquantr248_done477
    inc rx245_rep
  rxquantr248_done477:
    rx245_cur."!cursor_pass"(rx245_pos, "deflongname", 'backtrack'=>1)
    .return (rx245_cur)
  rx245_restart467:
    repr_get_attr_obj rx245_cstack, rx245_cur, rx245_curclass, "$!cstack"
  rx245_fail468:
    unless rx245_bstack, rx245_done466
    pop $I19, rx245_bstack
    if_null rx245_cstack, rx245_cstack_done471
    unless rx245_cstack, rx245_cstack_done471
    dec $I19
    set $P11, rx245_cstack[$I19]
  rx245_cstack_done471:
    pop rx245_rep, rx245_bstack
    pop rx245_pos, rx245_bstack
    pop $I19, rx245_bstack
    lt rx245_pos, -1, rx245_done466
    lt rx245_pos, 0, rx245_fail468
    eq $I19, 0, rx245_fail468
    nqp_islist $I20, rx245_cstack
    unless $I20, rx245_jump469
    elements $I18, rx245_bstack
    le $I18, 0, rx245_cut470
    dec $I18
    set $I18, rx245_bstack[$I18]
  rx245_cut470:
    assign rx245_cstack, $I18
  rx245_jump469:
    jump $I19
  rx245_done466:
    rx245_cur."!cursor_fail"()
    .return (rx245_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 682
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx250_start
    .local string rx250_tgt
    .local int rx250_pos
    .local int rx250_off
    .local int rx250_eos
    .local int rx250_rep
    .local pmc rx250_cur
    .local pmc rx250_curclass
    .local pmc rx250_bstack
    .local pmc rx250_cstack
    rx250_start = self."!cursor_start_all"()
    set rx250_cur, rx250_start[0]
    set rx250_tgt, rx250_start[1]
    set rx250_pos, rx250_start[2]
    set rx250_curclass, rx250_start[3]
    set rx250_bstack, rx250_start[4]
    set $I19, rx250_start[5]
    store_lex unicode:"$\x{a2}", rx250_cur
    length rx250_eos, rx250_tgt
    eq $I19, 1, rx250_restart482
    gt rx250_pos, rx250_eos, rx250_fail483
    repr_get_attr_int $I11, self, rx250_curclass, "$!from"
    ne $I11, -1, rxscan251_done489
    goto rxscan251_scan488
  rxscan251_loop487:
    inc rx250_pos
    gt rx250_pos, rx250_eos, rx250_fail483
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!from", rx250_pos
  rxscan251_scan488:
    nqp_rxmark rx250_bstack, rxscan251_loop487, rx250_pos, 0
  rxscan251_done489:
    nqp_rxmark rx250_bstack, rxquantr252_done491, rx250_pos, 0
  rxquantr252_loop490:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt253_0493
    nqp_push_label $P11, alt253_1498
    nqp_rxmark rx250_bstack, alt253_end492, -1, 0
    rx250_cur."!alt"(rx250_pos, "alt_nfa__1_1381944290.58188", $P11)
    goto rx250_fail483
  alt253_0493:
    nqp_rxmark rx250_bstack, rxquantr254_done495, rx250_pos, 0
  rxquantr254_loop494:
    ge rx250_pos, rx250_eos, rx250_fail483
    substr $S11, rx250_tgt, rx250_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx250_fail483
    inc rx250_pos
    nqp_rxpeek $I19, rx250_bstack, rxquantr254_done495
    inc $I19
    inc $I19
    set rx250_rep, rx250_bstack[$I19]
    nqp_rxcommit rx250_bstack, rxquantr254_done495
    inc rx250_rep
    nqp_rxmark rx250_bstack, rxquantr254_done495, rx250_pos, rx250_rep
    goto rxquantr254_loop494
  rxquantr254_done495:
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, rx250_pos
    if $I11, rxanchor255_done496
    ne rx250_pos, rx250_eos, rx250_fail483
    eq rx250_pos, 0, rxanchor255_done496
    sub $I11, rx250_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, $I11
    if $I11, rx250_fail483
  rxanchor255_done496:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."ws"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    goto alt253_end492
  alt253_1498:
    nqp_rxmark rx250_bstack, rxquantr257_done500, rx250_pos, 0
  rxquantr257_loop499:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."unv"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    goto rxsubrule258_pass501
  rxsubrule258_back502:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
  rxsubrule258_pass501:
    rx250_cstack = rx250_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule258_back502
    push rx250_bstack, $I11
    push rx250_bstack, 0
    push rx250_bstack, rx250_pos
    elements $I11, rx250_cstack
    push rx250_bstack, $I11
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    nqp_rxpeek $I19, rx250_bstack, rxquantr257_done500
    inc $I19
    inc $I19
    set rx250_rep, rx250_bstack[$I19]
    nqp_rxcommit rx250_bstack, rxquantr257_done500
    inc rx250_rep
  rxquantr257_done500:
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, rx250_pos
    if $I11, rxanchor259_done503
    ne rx250_pos, rx250_eos, rx250_fail483
    eq rx250_pos, 0, rxanchor259_done503
    sub $I11, rx250_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, $I11
    if $I11, rx250_fail483
  rxanchor259_done503:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."ws"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    goto alt253_end492
  alt253_end492:
    nqp_rxpeek $I19, rx250_bstack, rxquantr252_done491
    inc $I19
    inc $I19
    set rx250_rep, rx250_bstack[$I19]
    nqp_rxcommit rx250_bstack, rxquantr252_done491
    inc rx250_rep
  rxquantr252_done491:
    rx250_cur."!cursor_pass"(rx250_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx250_cur)
  rx250_restart482:
    repr_get_attr_obj rx250_cstack, rx250_cur, rx250_curclass, "$!cstack"
  rx250_fail483:
    unless rx250_bstack, rx250_done481
    pop $I19, rx250_bstack
    if_null rx250_cstack, rx250_cstack_done486
    unless rx250_cstack, rx250_cstack_done486
    dec $I19
    set $P11, rx250_cstack[$I19]
  rx250_cstack_done486:
    pop rx250_rep, rx250_bstack
    pop rx250_pos, rx250_bstack
    pop $I19, rx250_bstack
    lt rx250_pos, -1, rx250_done481
    lt rx250_pos, 0, rx250_fail483
    eq $I19, 0, rx250_fail483
    nqp_islist $I20, rx250_cstack
    unless $I20, rx250_jump484
    elements $I18, rx250_bstack
    le $I18, 0, rx250_cut485
    dec $I18
    set $I18, rx250_bstack[$I18]
  rx250_cut485:
    assign rx250_cstack, $I18
  rx250_jump484:
    jump $I19
  rx250_done481:
    rx250_cur."!cursor_fail"()
    .return (rx250_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 689
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx261_start
    .local string rx261_tgt
    .local int rx261_pos
    .local int rx261_off
    .local int rx261_eos
    .local int rx261_rep
    .local pmc rx261_cur
    .local pmc rx261_curclass
    .local pmc rx261_bstack
    .local pmc rx261_cstack
    rx261_start = self."!cursor_start_all"()
    set rx261_cur, rx261_start[0]
    set rx261_tgt, rx261_start[1]
    set rx261_pos, rx261_start[2]
    set rx261_curclass, rx261_start[3]
    set rx261_bstack, rx261_start[4]
    set $I19, rx261_start[5]
    store_lex unicode:"$\x{a2}", rx261_cur
    length rx261_eos, rx261_tgt
    eq $I19, 1, rx261_restart507
    gt rx261_pos, rx261_eos, rx261_fail508
    repr_get_attr_int $I11, self, rx261_curclass, "$!from"
    ne $I11, -1, rxscan262_done514
    goto rxscan262_scan513
  rxscan262_loop512:
    inc rx261_pos
    gt rx261_pos, rx261_eos, rx261_fail508
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!from", rx261_pos
  rxscan262_scan513:
    nqp_rxmark rx261_bstack, rxscan262_loop512, rx261_pos, 0
  rxscan262_done514:
  alt263_0516:
    nqp_rxmark rx261_bstack, alt263_1517, rx261_pos, 0
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    lt $I11, 0, rx261_fail508
    goto alt263_end515
  alt263_1517:
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."ww"()
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    ge $I11, 0, rx261_fail508
    nqp_rxmark rx261_bstack, rxquantr264_done519, rx261_pos, 0
  rxquantr264_loop518:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt265_0521
    nqp_push_label $P11, alt265_1524
    nqp_push_label $P11, alt265_2527
    nqp_push_label $P11, alt265_3530
    nqp_rxmark rx261_bstack, alt265_end520, -1, 0
    rx261_cur."!alt"(rx261_pos, "alt_nfa__2_1381944290.60375", $P11)
    goto rx261_fail508
  alt265_0521:
    nqp_rxmark rx261_bstack, rxquantr266_done523, -1, 0
  rxquantr266_loop522:
    ge rx261_pos, rx261_eos, rx261_fail508
    substr $S11, rx261_tgt, rx261_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx261_fail508
    inc rx261_pos
    nqp_rxpeek $I19, rx261_bstack, rxquantr266_done523
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr266_done523
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr266_done523, rx261_pos, rx261_rep
    goto rxquantr266_loop522
  rxquantr266_done523:
    goto alt265_end520
  alt265_1524:
    add $I11, rx261_pos, 1
    gt $I11, rx261_eos, rx261_fail508
    substr $S10, rx261_tgt, rx261_pos, 1
    ne $S10, ucs4:"#", rx261_fail508
    add rx261_pos, 1
    nqp_rxmark rx261_bstack, rxquantr267_done526, rx261_pos, 0
  rxquantr267_loop525:
    ge rx261_pos, rx261_eos, rx261_fail508
    is_cclass $I11, .CCLASS_NEWLINE, rx261_tgt, rx261_pos
    if $I11, rx261_fail508
    substr $S10, rx261_tgt, rx261_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx261_pos, $I11
    add rx261_pos, 1
    nqp_rxpeek $I19, rx261_bstack, rxquantr267_done526
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr267_done526
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr267_done526, rx261_pos, rx261_rep
    goto rxquantr267_loop525
  rxquantr267_done526:
    goto alt265_end520
  alt265_2527:
    eq rx261_pos, 0, rxanchor268_done528
    ge rx261_pos, rx261_eos, rx261_fail508
    sub $I11, rx261_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx261_tgt, $I11
    unless $I11, rx261_fail508
  rxanchor268_done528:
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    lt $I11, 0, rx261_fail508
    repr_get_attr_int rx261_pos, $P11, rx261_curclass, "$!pos"
    goto alt265_end520
  alt265_3530:
    nqp_rxmark rx261_bstack, rxquantr270_done532, -1, 0
  rxquantr270_loop531:
    ge rx261_pos, rx261_eos, rx261_fail508
    substr $S11, rx261_tgt, rx261_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx261_fail508
    inc rx261_pos
    nqp_rxpeek $I19, rx261_bstack, rxquantr270_done532
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr270_done532
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr270_done532, rx261_pos, rx261_rep
    goto rxquantr270_loop531
  rxquantr270_done532:
    goto alt265_end520
  alt265_end520:
    nqp_rxpeek $I19, rx261_bstack, rxquantr264_done519
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr264_done519
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr264_done519, rx261_pos, rx261_rep
    goto rxquantr264_loop518
  rxquantr264_done519:
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    lt $I11, 0, rx261_fail508
  alt263_end515:
    rx261_cur."!cursor_pass"(rx261_pos, "ws", 'backtrack'=>1)
    .return (rx261_cur)
  rx261_restart507:
    repr_get_attr_obj rx261_cstack, rx261_cur, rx261_curclass, "$!cstack"
  rx261_fail508:
    unless rx261_bstack, rx261_done506
    pop $I19, rx261_bstack
    if_null rx261_cstack, rx261_cstack_done511
    unless rx261_cstack, rx261_cstack_done511
    dec $I19
    set $P11, rx261_cstack[$I19]
  rx261_cstack_done511:
    pop rx261_rep, rx261_bstack
    pop rx261_pos, rx261_bstack
    pop $I19, rx261_bstack
    lt rx261_pos, -1, rx261_done506
    lt rx261_pos, 0, rx261_fail508
    eq $I19, 0, rx261_fail508
    nqp_islist $I20, rx261_cstack
    unless $I20, rx261_jump509
    elements $I18, rx261_bstack
    le $I18, 0, rx261_cut510
    dec $I18
    set $I18, rx261_bstack[$I18]
  rx261_cut510:
    assign rx261_cstack, $I18
  rx261_jump509:
    jump $I19
  rx261_done506:
    rx261_cur."!cursor_fail"()
    .return (rx261_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 700
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1381944288.90674' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx271_start
    .local string rx271_tgt
    .local int rx271_pos
    .local int rx271_off
    .local int rx271_eos
    .local int rx271_rep
    .local pmc rx271_cur
    .local pmc rx271_curclass
    .local pmc rx271_bstack
    .local pmc rx271_cstack
    rx271_start = self."!cursor_start_all"()
    set rx271_cur, rx271_start[0]
    set rx271_tgt, rx271_start[1]
    set rx271_pos, rx271_start[2]
    set rx271_curclass, rx271_start[3]
    set rx271_bstack, rx271_start[4]
    set $I19, rx271_start[5]
    store_lex unicode:"$\x{a2}", rx271_cur
    length rx271_eos, rx271_tgt
    eq $I19, 1, rx271_restart535
    gt rx271_pos, rx271_eos, rx271_fail536
    repr_get_attr_int $I11, self, rx271_curclass, "$!from"
    ne $I11, -1, rxscan272_done542
    goto rxscan272_scan541
  rxscan272_loop540:
    inc rx271_pos
    gt rx271_pos, rx271_eos, rx271_fail536
    repr_bind_attr_int rx271_cur, rx271_curclass, "$!from", rx271_pos
  rxscan272_scan541:
    nqp_rxmark rx271_bstack, rxscan272_loop540, rx271_pos, 0
  rxscan272_done542:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt273_0544
    nqp_push_label $P11, alt273_1562
    nqp_push_label $P11, alt273_2567
    nqp_rxmark rx271_bstack, alt273_end543, -1, 0
    rx271_cur."!alt"(rx271_pos, "alt_nfa__4_1381944290.6286", $P11)
    goto rx271_fail536
  alt273_0544:
    eq rx271_pos, 0, rxanchor274_done545
    ge rx271_pos, rx271_eos, rx271_fail536
    sub $I11, rx271_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx271_tgt, $I11
    unless $I11, rx271_fail536
  rxanchor274_done545:
    .const 'Sub' $P5001 = 'cuid_42_1381944288.90674' 
    capture_lex $P5001
    repr_bind_attr_int rx271_cur, rx271_curclass, "$!pos", rx271_pos
    $P11 = rx271_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx271_curclass, "$!pos"
    lt $I11, 0, rx271_fail536
    repr_bind_attr_int rx271_cur, rx271_curclass, "$!pos", rx271_pos
    $P11 = rx271_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx271_curclass, "$!pos"
    lt $I11, 0, rx271_fail536
    repr_get_attr_int rx271_pos, $P11, rx271_curclass, "$!pos"
    goto alt273_end543
  alt273_1562:
    nqp_rxmark rx271_bstack, rxquantr280_done564, rx271_pos, 0
  rxquantr280_loop563:
    ge rx271_pos, rx271_eos, rx271_fail536
    substr $S11, rx271_tgt, rx271_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx271_fail536
    inc rx271_pos
    nqp_rxpeek $I19, rx271_bstack, rxquantr280_done564
    inc $I19
    inc $I19
    set rx271_rep, rx271_bstack[$I19]
    nqp_rxcommit rx271_bstack, rxquantr280_done564
    inc rx271_rep
    nqp_rxmark rx271_bstack, rxquantr280_done564, rx271_pos, rx271_rep
    goto rxquantr280_loop563
  rxquantr280_done564:
    add $I11, rx271_pos, 1
    gt $I11, rx271_eos, rx271_fail536
    substr $S10, rx271_tgt, rx271_pos, 1
    ne $S10, ucs4:"#", rx271_fail536
    add rx271_pos, 1
    nqp_rxmark rx271_bstack, rxquantr281_done566, rx271_pos, 0
  rxquantr281_loop565:
    ge rx271_pos, rx271_eos, rx271_fail536
    is_cclass $I11, .CCLASS_NEWLINE, rx271_tgt, rx271_pos
    if $I11, rx271_fail536
    substr $S10, rx271_tgt, rx271_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx271_pos, $I11
    add rx271_pos, 1
    nqp_rxpeek $I19, rx271_bstack, rxquantr281_done566
    inc $I19
    inc $I19
    set rx271_rep, rx271_bstack[$I19]
    nqp_rxcommit rx271_bstack, rxquantr281_done566
    inc rx271_rep
    nqp_rxmark rx271_bstack, rxquantr281_done566, rx271_pos, rx271_rep
    goto rxquantr281_loop565
  rxquantr281_done566:
    goto alt273_end543
  alt273_2567:
    nqp_rxmark rx271_bstack, rxquantr282_done569, -1, 0
  rxquantr282_loop568:
    ge rx271_pos, rx271_eos, rx271_fail536
    substr $S11, rx271_tgt, rx271_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx271_fail536
    inc rx271_pos
    nqp_rxpeek $I19, rx271_bstack, rxquantr282_done569
    inc $I19
    inc $I19
    set rx271_rep, rx271_bstack[$I19]
    nqp_rxcommit rx271_bstack, rxquantr282_done569
    inc rx271_rep
    nqp_rxmark rx271_bstack, rxquantr282_done569, rx271_pos, rx271_rep
    goto rxquantr282_loop568
  rxquantr282_done569:
    goto alt273_end543
  alt273_end543:
    nqp_rxcommit rx271_bstack, alt273_end543
    rx271_cur."!cursor_pass"(rx271_pos, "unv", 'backtrack'=>1)
    .return (rx271_cur)
  rx271_restart535:
    repr_get_attr_obj rx271_cstack, rx271_cur, rx271_curclass, "$!cstack"
  rx271_fail536:
    unless rx271_bstack, rx271_done534
    pop $I19, rx271_bstack
    if_null rx271_cstack, rx271_cstack_done539
    unless rx271_cstack, rx271_cstack_done539
    dec $I19
    set $P11, rx271_cstack[$I19]
  rx271_cstack_done539:
    pop rx271_rep, rx271_bstack
    pop rx271_pos, rx271_bstack
    pop $I19, rx271_bstack
    lt rx271_pos, -1, rx271_done534
    lt rx271_pos, 0, rx271_fail536
    eq $I19, 0, rx271_fail536
    nqp_islist $I20, rx271_cstack
    unless $I20, rx271_jump537
    elements $I18, rx271_bstack
    le $I18, 0, rx271_cut538
    dec $I18
    set $I18, rx271_bstack[$I18]
  rx271_cut538:
    assign rx271_cstack, $I18
  rx271_jump537:
    jump $I19
  rx271_done534:
    rx271_cur."!cursor_fail"()
    .return (rx271_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1381944288.90674") :anon :lex :outer("cuid_41_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx275_start
    .local string rx275_tgt
    .local int rx275_pos
    .local int rx275_off
    .local int rx275_eos
    .local int rx275_rep
    .local pmc rx275_cur
    .local pmc rx275_curclass
    .local pmc rx275_bstack
    .local pmc rx275_cstack
    rx275_start = self."!cursor_start_all"()
    set rx275_cur, rx275_start[0]
    set rx275_tgt, rx275_start[1]
    set rx275_pos, rx275_start[2]
    set rx275_curclass, rx275_start[3]
    set rx275_bstack, rx275_start[4]
    set $I19, rx275_start[5]
    store_lex unicode:"$\x{a2}", rx275_cur
    length rx275_eos, rx275_tgt
    eq $I19, 1, rx275_restart548
    gt rx275_pos, rx275_eos, rx275_fail549
    repr_get_attr_int $I11, self, rx275_curclass, "$!from"
    ne $I11, -1, rxscan276_done555
    goto rxscan276_scan554
  rxscan276_loop553:
    inc rx275_pos
    gt rx275_pos, rx275_eos, rx275_fail549
    repr_bind_attr_int rx275_cur, rx275_curclass, "$!from", rx275_pos
  rxscan276_scan554:
    nqp_rxmark rx275_bstack, rxscan276_loop553, rx275_pos, 0
  rxscan276_done555:
    nqp_rxmark rx275_bstack, rxquantr277_done557, rx275_pos, 0
  rxquantr277_loop556:
    ge rx275_pos, rx275_eos, rx275_fail549
    substr $S11, rx275_tgt, rx275_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx275_fail549
    inc rx275_pos
    nqp_rxpeek $I19, rx275_bstack, rxquantr277_done557
    inc $I19
    inc $I19
    set rx275_rep, rx275_bstack[$I19]
    nqp_rxcommit rx275_bstack, rxquantr277_done557
    inc rx275_rep
    nqp_rxmark rx275_bstack, rxquantr277_done557, rx275_pos, rx275_rep
    goto rxquantr277_loop556
  rxquantr277_done557:
    add $I11, rx275_pos, 1
    gt $I11, rx275_eos, rx275_fail549
    substr $S10, rx275_tgt, rx275_pos, 1
    ne $S10, ucs4:"=", rx275_fail549
    add rx275_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt278_0559
    nqp_push_label $P11, alt278_1560
    nqp_rxmark rx275_bstack, alt278_end558, -1, 0
    rx275_cur."!alt"(rx275_pos, "alt_nfa__3_1381944290.61693", $P11)
    goto rx275_fail549
  alt278_0559:
    ge rx275_pos, rx275_eos, rx275_fail549
    is_cclass $I11, .CCLASS_WORD, rx275_tgt, rx275_pos
    unless $I11, rx275_fail549
    add rx275_pos, 1
    goto alt278_end558
  alt278_1560:
    add $I11, rx275_pos, 1
    gt $I11, rx275_eos, rx275_fail549
    substr $S10, rx275_tgt, rx275_pos, 1
    ne $S10, ucs4:"\\", rx275_fail549
    add rx275_pos, 1
    goto alt278_end558
  alt278_end558:
    nqp_rxcommit rx275_bstack, alt278_end558
    rx275_cur."!cursor_pass"(rx275_pos, 'backtrack'=>1)
    .return (rx275_cur)
  rx275_restart548:
    repr_get_attr_obj rx275_cstack, rx275_cur, rx275_curclass, "$!cstack"
  rx275_fail549:
    unless rx275_bstack, rx275_done547
    pop $I19, rx275_bstack
    if_null rx275_cstack, rx275_cstack_done552
    unless rx275_cstack, rx275_cstack_done552
    dec $I19
    set $P11, rx275_cstack[$I19]
  rx275_cstack_done552:
    pop rx275_rep, rx275_bstack
    pop rx275_pos, rx275_bstack
    pop $I19, rx275_bstack
    lt rx275_pos, -1, rx275_done547
    lt rx275_pos, 0, rx275_fail549
    eq $I19, 0, rx275_fail549
    nqp_islist $I20, rx275_cstack
    unless $I20, rx275_jump550
    elements $I18, rx275_bstack
    le $I18, 0, rx275_cut551
    dec $I18
    set $I18, rx275_bstack[$I18]
  rx275_cut551:
    assign rx275_cstack, $I18
  rx275_jump550:
    jump $I19
  rx275_done547:
    rx275_cur."!cursor_fail"()
    .return (rx275_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 709
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_400_1381944288.90674' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_44_1381944288.90674' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx283_start
    .local string rx283_tgt
    .local int rx283_pos
    .local int rx283_off
    .local int rx283_eos
    .local int rx283_rep
    .local pmc rx283_cur
    .local pmc rx283_curclass
    .local pmc rx283_bstack
    .local pmc rx283_cstack
    rx283_start = self."!cursor_start_all"()
    set rx283_cur, rx283_start[0]
    set rx283_tgt, rx283_start[1]
    set rx283_pos, rx283_start[2]
    set rx283_curclass, rx283_start[3]
    set rx283_bstack, rx283_start[4]
    set $I19, rx283_start[5]
    store_lex unicode:"$\x{a2}", rx283_cur
    length rx283_eos, rx283_tgt
    eq $I19, 1, rx283_restart572
    gt rx283_pos, rx283_eos, rx283_fail573
    repr_get_attr_int $I11, self, rx283_curclass, "$!from"
    ne $I11, -1, rxscan284_done579
    goto rxscan284_scan578
  rxscan284_loop577:
    inc rx283_pos
    gt rx283_pos, rx283_eos, rx283_fail573
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!from", rx283_pos
  rxscan284_scan578:
    nqp_rxmark rx283_bstack, rxscan284_loop577, rx283_pos, 0
  rxscan284_done579:
    eq rx283_pos, 0, rxanchor285_done580
    ge rx283_pos, rx283_eos, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, $I11
    unless $I11, rx283_fail573
  rxanchor285_done580:
    nqp_rxmark rx283_bstack, rxquantr286_done582, rx283_pos, 0
  rxquantr286_loop581:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr286_done582
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr286_done582
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr286_done582, rx283_pos, rx283_rep
    goto rxquantr286_loop581
  rxquantr286_done582:
    add $I11, rx283_pos, 1
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 1
    ne $S10, ucs4:"=", rx283_fail573
    add rx283_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt287_0584
    nqp_push_label $P11, alt287_1603
    nqp_push_label $P11, alt287_2622
    nqp_push_label $P11, alt287_3644
    nqp_push_label $P11, alt287_4668
    nqp_rxmark rx283_bstack, alt287_end583, -1, 0
    rx283_cur."!alt"(rx283_pos, "alt_nfa__6_1381944290.73409", $P11)
    goto rx283_fail573
  alt287_0584:
    add $I11, rx283_pos, 5
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 5
    ne $S10, ucs4:"begin", rx283_fail573
    add rx283_pos, 5
    nqp_rxmark rx283_bstack, rxquantr288_done586, -1, 0
  rxquantr288_loop585:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr288_done586
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr288_done586
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr288_done586, rx283_pos, rx283_rep
    goto rxquantr288_loop585
  rxquantr288_done586:
    add $I11, rx283_pos, 3
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 3
    ne $S10, ucs4:"END", rx283_fail573
    add rx283_pos, 3
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
  alt290_0589:
    nqp_rxmark rx283_bstack, alt290_1600, rx283_pos, 0
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf291_loop590, rx283_pos, rx283_rep
    goto rxquantf291_done591
  rxquantf291_loop590:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf291_loop590, rx283_pos, rx283_rep
  rxquantf291_done591:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxmark rx283_bstack, rxquantr292_done594, rx283_pos, 0
  rxquantr292_loop593:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr292_done594
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr292_done594
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr292_done594, rx283_pos, rx283_rep
    goto rxquantr292_loop593
  rxquantr292_done594:
    add $I11, rx283_pos, 4
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 4
    ne $S10, ucs4:"=end", rx283_fail573
    add rx283_pos, 4
    nqp_rxmark rx283_bstack, rxquantr293_done596, -1, 0
  rxquantr293_loop595:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr293_done596
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr293_done596
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr293_done596, rx283_pos, rx283_rep
    goto rxquantr293_loop595
  rxquantr293_done596:
    add $I11, rx283_pos, 3
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 3
    ne $S10, ucs4:"END", rx283_fail573
    add rx283_pos, 3
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr295_done599, rx283_pos, 0
  rxquantr295_loop598:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr295_done599
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr295_done599
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr295_done599, rx283_pos, rx283_rep
    goto rxquantr295_loop598
  rxquantr295_done599:
    goto alt290_end588
  alt290_1600:
    nqp_rxmark rx283_bstack, rxquantr296_done602, rx283_pos, 0
  rxquantr296_loop601:
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr296_done602
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr296_done602
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr296_done602, rx283_pos, rx283_rep
    goto rxquantr296_loop601
  rxquantr296_done602:
  alt290_end588:
    goto alt287_end583
  alt287_1603:
    add $I11, rx283_pos, 5
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 5
    ne $S10, ucs4:"begin", rx283_fail573
    add rx283_pos, 5
    nqp_rxmark rx283_bstack, rxquantr297_done605, -1, 0
  rxquantr297_loop604:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr297_done605
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr297_done605
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr297_done605, rx283_pos, rx283_rep
    goto rxquantr297_loop604
  rxquantr297_done605:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    nqp_rxmark rx283_bstack, rxsubrule298_pass606, -1, 0
  rxsubrule298_pass606:
    rx283_cstack = rx283_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt299_0608:
    nqp_rxmark rx283_bstack, alt299_1620, rx283_pos, 0
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf300_loop609, rx283_pos, rx283_rep
    goto rxquantf300_done610
  rxquantf300_loop609:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf300_loop609, rx283_pos, rx283_rep
  rxquantf300_done610:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxmark rx283_bstack, rxquantr301_done613, rx283_pos, 0
  rxquantr301_loop612:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr301_done613
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr301_done613
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr301_done613, rx283_pos, rx283_rep
    goto rxquantr301_loop612
  rxquantr301_done613:
    add $I11, rx283_pos, 4
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 4
    ne $S10, ucs4:"=end", rx283_fail573
    add rx283_pos, 4
    nqp_rxmark rx283_bstack, rxquantr302_done615, -1, 0
  rxquantr302_loop614:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr302_done615
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr302_done615
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr302_done615, rx283_pos, rx283_rep
    goto rxquantr302_loop614
  rxquantr302_done615:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr305_done619, rx283_pos, 0
  rxquantr305_loop618:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr305_done619
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr305_done619
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr305_done619, rx283_pos, rx283_rep
    goto rxquantr305_loop618
  rxquantr305_done619:
    goto alt299_end607
  alt299_1620:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt299_end607:
    goto alt287_end583
  alt287_2622:
    add $I11, rx283_pos, 5
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 5
    ne $S10, ucs4:"begin", rx283_fail573
    add rx283_pos, 5
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr308_done625, rx283_pos, 0
  rxquantr308_loop624:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr308_done625
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr308_done625
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr308_done625, rx283_pos, rx283_rep
    goto rxquantr308_loop624
  rxquantr308_done625:
  alt309_0627:
    nqp_rxmark rx283_bstack, alt309_1629, rx283_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rxanchor310_done628
    ne rx283_pos, rx283_eos, rx283_fail573
    eq rx283_pos, 0, rxanchor310_done628
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, $I11
    if $I11, rx283_fail573
  rxanchor310_done628:
    goto alt309_end626
  alt309_1629:
    nqp_rxmark rx283_bstack, alt309_2630, rx283_pos, 0
    add $I11, rx283_pos, 1
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 1
    ne $S10, ucs4:"#", rx283_fail573
    add rx283_pos, 1
    goto alt309_end626
  alt309_2630:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt309_end626:
  alt312_0633:
    nqp_rxmark rx283_bstack, alt312_1642, rx283_pos, 0
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf313_loop634, rx283_pos, rx283_rep
    goto rxquantf313_done635
  rxquantf313_loop634:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf313_loop634, rx283_pos, rx283_rep
  rxquantf313_done635:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxmark rx283_bstack, rxquantr314_done638, rx283_pos, 0
  rxquantr314_loop637:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr314_done638
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr314_done638
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr314_done638, rx283_pos, rx283_rep
    goto rxquantr314_loop637
  rxquantr314_done638:
    add $I11, rx283_pos, 4
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 4
    ne $S10, ucs4:"=end", rx283_fail573
    add rx283_pos, 4
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr316_done641, rx283_pos, 0
  rxquantr316_loop640:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr316_done641
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr316_done641
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr316_done641, rx283_pos, rx283_rep
    goto rxquantr316_loop640
  rxquantr316_done641:
    goto alt312_end632
  alt312_1642:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt312_end632:
    goto alt287_end583
  alt287_3644:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    nqp_rxmark rx283_bstack, rxsubrule318_pass645, -1, 0
  rxsubrule318_pass645:
    rx283_cstack = rx283_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    store_lex unicode:"$\x{a2}", rx283_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_400_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf319_loop646, rx283_pos, rx283_rep
    goto rxquantf319_done647
  rxquantf319_loop646:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf319_loop646, rx283_pos, rx283_rep
  rxquantf319_done647:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    .const 'Sub' $P5004 = 'cuid_44_1381944288.90674' 
    capture_lex $P5004
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    goto alt287_end583
  alt287_4668:
  alt327_0670:
    nqp_rxmark rx283_bstack, alt327_1671, rx283_pos, 0
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_WHITESPACE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    add rx283_pos, 1
    goto alt327_end669
  alt327_1671:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt327_end669:
    nqp_rxmark rx283_bstack, rxquantr329_done674, rx283_pos, 0
  rxquantr329_loop673:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr329_done674
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr329_done674
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr329_done674, rx283_pos, rx283_rep
    goto rxquantr329_loop673
  rxquantr329_done674:
    goto alt287_end583
  alt287_end583:
    nqp_rxcommit rx283_bstack, alt287_end583
    rx283_cur."!cursor_pass"(rx283_pos, "pod_comment", 'backtrack'=>1)
    .return (rx283_cur)
  rx283_restart572:
    repr_get_attr_obj rx283_cstack, rx283_cur, rx283_curclass, "$!cstack"
  rx283_fail573:
    unless rx283_bstack, rx283_done571
    pop $I19, rx283_bstack
    if_null rx283_cstack, rx283_cstack_done576
    unless rx283_cstack, rx283_cstack_done576
    dec $I19
    set $P11, rx283_cstack[$I19]
  rx283_cstack_done576:
    pop rx283_rep, rx283_bstack
    pop rx283_pos, rx283_bstack
    pop $I19, rx283_bstack
    lt rx283_pos, -1, rx283_done571
    lt rx283_pos, 0, rx283_fail573
    eq $I19, 0, rx283_fail573
    nqp_islist $I20, rx283_cstack
    unless $I20, rx283_jump574
    elements $I18, rx283_bstack
    le $I18, 0, rx283_cut575
    dec $I18
    set $I18, rx283_bstack[$I18]
  rx283_cut575:
    assign rx283_cstack, $I18
  rx283_jump574:
    jump $I19
  rx283_done571:
    rx283_cur."!cursor_fail"()
    .return (rx283_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1381944288.90674") :anon :lex :outer("cuid_43_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 725

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1381944288.90674") :anon :lex :outer("cuid_43_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx320_start
    .local string rx320_tgt
    .local int rx320_pos
    .local int rx320_off
    .local int rx320_eos
    .local int rx320_rep
    .local pmc rx320_cur
    .local pmc rx320_curclass
    .local pmc rx320_bstack
    .local pmc rx320_cstack
    rx320_start = self."!cursor_start_all"()
    set rx320_cur, rx320_start[0]
    set rx320_tgt, rx320_start[1]
    set rx320_pos, rx320_start[2]
    set rx320_curclass, rx320_start[3]
    set rx320_bstack, rx320_start[4]
    set $I19, rx320_start[5]
    store_lex unicode:"$\x{a2}", rx320_cur
    length rx320_eos, rx320_tgt
    eq $I19, 1, rx320_restart651
    gt rx320_pos, rx320_eos, rx320_fail652
    repr_get_attr_int $I11, self, rx320_curclass, "$!from"
    ne $I11, -1, rxscan321_done658
    goto rxscan321_scan657
  rxscan321_loop656:
    inc rx320_pos
    gt rx320_pos, rx320_eos, rx320_fail652
    repr_bind_attr_int rx320_cur, rx320_curclass, "$!from", rx320_pos
  rxscan321_scan657:
    nqp_rxmark rx320_bstack, rxscan321_loop656, rx320_pos, 0
  rxscan321_done658:
    nqp_rxmark rx320_bstack, rxquantr322_done660, rx320_pos, 0
  rxquantr322_loop659:
    ge rx320_pos, rx320_eos, rx320_fail652
    substr $S11, rx320_tgt, rx320_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx320_fail652
    inc rx320_pos
    nqp_rxpeek $I19, rx320_bstack, rxquantr322_done660
    inc $I19
    inc $I19
    set rx320_rep, rx320_bstack[$I19]
    nqp_rxcommit rx320_bstack, rxquantr322_done660
    inc rx320_rep
    nqp_rxmark rx320_bstack, rxquantr322_done660, rx320_pos, rx320_rep
    goto rxquantr322_loop659
  rxquantr322_done660:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt323_0662
    nqp_push_label $P11, alt323_1667
    nqp_rxmark rx320_bstack, alt323_end661, -1, 0
    rx320_cur."!alt"(rx320_pos, "alt_nfa__5_1381944290.71882", $P11)
    goto rx320_fail652
  alt323_0662:
    add $I11, rx320_pos, 1
    gt $I11, rx320_eos, rx320_fail652
    substr $S10, rx320_tgt, rx320_pos, 1
    ne $S10, ucs4:"=", rx320_fail652
    add rx320_pos, 1
    nqp_rxmark rx320_bstack, rxquantr324_done664, rx320_pos, 0
  rxquantr324_loop663:
    add $I11, rx320_pos, 3
    gt $I11, rx320_eos, rx320_fail652
    substr $S10, rx320_tgt, rx320_pos, 3
    ne $S10, ucs4:"cut", rx320_fail652
    add rx320_pos, 3
    le rx320_pos, 0, rx320_fail652
    is_cclass $I11, .CCLASS_WORD, rx320_tgt, rx320_pos
    if $I11, rx320_fail652
    sub $I11, rx320_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx320_tgt, $I11
    unless $I11, rx320_fail652
    repr_bind_attr_int rx320_cur, rx320_curclass, "$!pos", rx320_pos
    $P11 = rx320_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx320_curclass, "$!pos"
    lt $I11, 0, rx320_fail652
    repr_get_attr_int rx320_pos, $P11, rx320_curclass, "$!pos"
    nqp_rxpeek $I19, rx320_bstack, rxquantr324_done664
    inc $I19
    inc $I19
    set rx320_rep, rx320_bstack[$I19]
    nqp_rxcommit rx320_bstack, rxquantr324_done664
    inc rx320_rep
  rxquantr324_done664:
    goto alt323_end661
  alt323_1667:
    ge rx320_pos, rx320_eos, rx320_fail652
    is_cclass $I11, .CCLASS_NEWLINE, rx320_tgt, rx320_pos
    unless $I11, rx320_fail652
    substr $S10, rx320_tgt, rx320_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx320_pos, $I11
    add rx320_pos, 1
    goto alt323_end661
  alt323_end661:
    nqp_rxcommit rx320_bstack, alt323_end661
    rx320_cur."!cursor_pass"(rx320_pos, 'backtrack'=>1)
    .return (rx320_cur)
  rx320_restart651:
    repr_get_attr_obj rx320_cstack, rx320_cur, rx320_curclass, "$!cstack"
  rx320_fail652:
    unless rx320_bstack, rx320_done650
    pop $I19, rx320_bstack
    if_null rx320_cstack, rx320_cstack_done655
    unless rx320_cstack, rx320_cstack_done655
    dec $I19
    set $P11, rx320_cstack[$I19]
  rx320_cstack_done655:
    pop rx320_rep, rx320_bstack
    pop rx320_pos, rx320_bstack
    pop $I19, rx320_bstack
    lt rx320_pos, -1, rx320_done650
    lt rx320_pos, 0, rx320_fail652
    eq $I19, 0, rx320_fail652
    nqp_islist $I20, rx320_cstack
    unless $I20, rx320_jump653
    elements $I18, rx320_bstack
    le $I18, 0, rx320_cut654
    dec $I18
    set $I18, rx320_bstack[$I18]
  rx320_cut654:
    assign rx320_cstack, $I18
  rx320_jump653:
    jump $I19
  rx320_done650:
    rx320_cur."!cursor_fail"()
    .return (rx320_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 740
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_401_1381944288.90674' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_402_1381944288.90674' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_404_1381944288.90674' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_405_1381944288.90674' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_91 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx330_start
    .local string rx330_tgt
    .local int rx330_pos
    .local int rx330_off
    .local int rx330_eos
    .local int rx330_rep
    .local pmc rx330_cur
    .local pmc rx330_curclass
    .local pmc rx330_bstack
    .local pmc rx330_cstack
    rx330_start = self."!cursor_start_all"()
    set rx330_cur, rx330_start[0]
    set rx330_tgt, rx330_start[1]
    set rx330_pos, rx330_start[2]
    set rx330_curclass, rx330_start[3]
    set rx330_bstack, rx330_start[4]
    set $I19, rx330_start[5]
    store_lex unicode:"$\x{a2}", rx330_cur
    length rx330_eos, rx330_tgt
    eq $I19, 1, rx330_restart677
    gt rx330_pos, rx330_eos, rx330_fail678
    repr_get_attr_int $I11, self, rx330_curclass, "$!from"
    ne $I11, -1, rxscan331_done684
    goto rxscan331_scan683
  rxscan331_loop682:
    inc rx330_pos
    gt rx330_pos, rx330_eos, rx330_fail678
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!from", rx330_pos
  rxscan331_scan683:
    nqp_rxmark rx330_bstack, rxscan331_loop682, rx330_pos, 0
  rxscan331_done684:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    unless_null $P103, fallback685
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5010, $P5011
    set fb_tmp_77, $P5010
    repr_defined $I5001, fb_tmp_77
    unless $I5001 goto if332_else686 
    set $P5012, fb_tmp_77["$MAIN_SUB"]
    set $P5014, $P5012
    goto if332_end687
  if332_else686:
    null $P5013
    set $P5014, $P5013
  if332_end687:
    unless_null $P5014, vivi_333688
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_333688:
    unless_null $P5014, vivi_334689
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_334689:
    set $P103, $P5014
  fallback685:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
.annotate 'line', 745
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback690
    nqp_get_sc_object $P5019, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5018, $P5019
    set fb_tmp_78, $P5018
    repr_defined $I5002, fb_tmp_78
    unless $I5002 goto if335_else691 
    set $P5020, fb_tmp_78["$W"]
    set $P5022, $P5020
    goto if335_end692
  if335_else691:
    null $P5021
    set $P5022, $P5021
  if335_end692:
    unless_null $P5022, vivi_336693
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_336693:
    unless_null $P5022, vivi_337694
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_337694:
    set $P5017, $P5022
  fallback690:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
.annotate 'line', 749
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback695
    nqp_get_sc_object $P5028, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5027, $P5028
    set fb_tmp_79, $P5027
    repr_defined $I5003, fb_tmp_79
    unless $I5003 goto if338_else696 
    set $P5029, fb_tmp_79["$W"]
    set $P5031, $P5029
    goto if338_end697
  if338_else696:
    null $P5030
    set $P5031, $P5030
  if338_end697:
    unless_null $P5031, vivi_339698
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_339698:
    unless_null $P5031, vivi_340699
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_340699:
    set $P5026, $P5031
  fallback695:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback702
    nqp_get_sc_object $P5036, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_20, $P5035
    set fb_tmp_81, pkg_viv_tmp_20
    repr_defined $I5005, fb_tmp_81
    unless $I5005 goto if342_else703 
    set $P5037, fb_tmp_81["%HOW"]
    set $P5039, $P5037
    goto if342_end704
  if342_else703:
    null $P5038
    set $P5039, $P5038
  if342_end704:
    unless_null $P5039, vivi_343705
    new $P5040, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5040
    set $P5039, $P5040
  vivi_343705:
    unless_null $P5039, vivi_344706
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_344706:
    set $P5034, $P5039
  fallback702:
    set fb_tmp_80, $P5034
    repr_defined $I5004, fb_tmp_80
    unless $I5004 goto if341_else700 
    set $P5042, fb_tmp_80["knowhow"]
    set $P5044, $P5042
    goto if341_end701
  if341_else700:
    null $P5043
    set $P5044, $P5043
  if341_end701:
    unless_null $P5044, vivi_345707
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5044, $P5045
  vivi_345707:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_401_1381944288.90674' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    unless_null $P105, fallback733
    nqp_get_sc_object $P5051, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5050, $P5051
    set fb_tmp_87, $P5050
    repr_defined $I5006, fb_tmp_87
    unless $I5006 goto if361_else734 
    set $P5052, fb_tmp_87["$GLOBALish"]
    set $P5054, $P5052
    goto if361_end735
  if361_else734:
    null $P5053
    set $P5054, $P5053
  if361_end735:
    unless_null $P5054, vivi_362736
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5054, $P5055
  vivi_362736:
    unless_null $P5054, vivi_363737
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_363737:
    set $P105, $P5054
  fallback733:
    set $P106, $P105
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_402_1381944288.90674' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    unless_null $P107, fallback753
    nqp_get_sc_object $P5061, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5060, $P5061
    set fb_tmp_91, $P5060
    repr_defined $I5007, fb_tmp_91
    unless $I5007 goto if373_else754 
    set $P5062, fb_tmp_91["$EXPORT"]
    set $P5064, $P5062
    goto if373_end755
  if373_else754:
    null $P5063
    set $P5064, $P5063
  if373_end755:
    unless_null $P5064, vivi_374756
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5064, $P5065
  vivi_374756:
    unless_null $P5064, vivi_375757
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_375757:
    set $P107, $P5064
  fallback753:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_404_1381944288.90674' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_405_1381944288.90674' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    $P11 = rx330_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx330_curclass, "$!pos"
    lt $I11, 0, rx330_fail678
    repr_get_attr_int rx330_pos, $P11, rx330_curclass, "$!pos"
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    $P11 = rx330_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx330_curclass, "$!pos"
    lt $I11, 0, rx330_fail678
    nqp_rxmark rx330_bstack, rxsubrule422_pass833, -1, 0
  rxsubrule422_pass833:
    rx330_cstack = rx330_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx330_pos, $P11, rx330_curclass, "$!pos"
  alt423_0835:
    nqp_rxmark rx330_bstack, alt423_1837, rx330_pos, 0
    lt rx330_pos, rx330_eos, rx330_fail678
    goto alt423_end834
  alt423_1837:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    $P11 = rx330_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx330_curclass, "$!pos"
    lt $I11, 0, rx330_fail678
    repr_get_attr_int rx330_pos, $P11, rx330_curclass, "$!pos"
  alt423_end834:
    rx330_cur."!cursor_pass"(rx330_pos, "comp_unit", 'backtrack'=>1)
    .return (rx330_cur)
  rx330_restart677:
    repr_get_attr_obj rx330_cstack, rx330_cur, rx330_curclass, "$!cstack"
  rx330_fail678:
    unless rx330_bstack, rx330_done676
    pop $I19, rx330_bstack
    if_null rx330_cstack, rx330_cstack_done681
    unless rx330_cstack, rx330_cstack_done681
    dec $I19
    set $P11, rx330_cstack[$I19]
  rx330_cstack_done681:
    pop rx330_rep, rx330_bstack
    pop rx330_pos, rx330_bstack
    pop $I19, rx330_bstack
    lt rx330_pos, -1, rx330_done676
    lt rx330_pos, 0, rx330_fail678
    eq $I19, 0, rx330_fail678
    nqp_islist $I20, rx330_cstack
    unless $I20, rx330_jump679
    elements $I18, rx330_bstack
    le $I18, 0, rx330_cut680
    dec $I18
    set $I18, rx330_bstack[$I18]
  rx330_cut680:
    assign rx330_cstack, $I18
  rx330_jump679:
    jump $I19
  rx330_done676:
    rx330_cur."!cursor_fail"()
    .return (rx330_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1381944288.90674") :anon :lex :outer("cuid_45_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 750
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
.annotate 'line', 751
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback708
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_82, $P5003
    repr_defined $I5001, fb_tmp_82
    unless $I5001 goto if346_else709 
    set $P5005, fb_tmp_82["$GLOBALish"]
    set $P5007, $P5005
    goto if346_end710
  if346_else709:
    null $P5006
    set $P5007, $P5006
  if346_end710:
    unless_null $P5007, vivi_347711
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_347711:
    unless_null $P5007, vivi_348712
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_348712:
    set $P5002, $P5007
  fallback708:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback713
    nqp_get_sc_object $P5012, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5011, $P5012
    set fb_tmp_83, $P5011
    repr_defined $I5002, fb_tmp_83
    unless $I5002 goto if349_else714 
    set $P5013, fb_tmp_83["$GLOBALish"]
    set $P5015, $P5013
    goto if349_end715
  if349_else714:
    null $P5014
    set $P5015, $P5014
  if349_end715:
    unless_null $P5015, vivi_350716
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_350716:
    unless_null $P5015, vivi_351717
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_351717:
    set $P5010, $P5015
  fallback713:
    $P5001."compose"($P5010)
.annotate 'line', 752
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback718
    nqp_get_sc_object $P5020, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5019, $P5020
    set fb_tmp_84, $P5019
    repr_defined $I5003, fb_tmp_84
    unless $I5003 goto if352_else719 
    set $P5021, fb_tmp_84["$W"]
    set $P5023, $P5021
    goto if352_end720
  if352_else719:
    null $P5022
    set $P5023, $P5022
  if352_end720:
    unless_null $P5023, vivi_353721
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_353721:
    unless_null $P5023, vivi_354722
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_354722:
    set $P5018, $P5023
  fallback718:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback723
    nqp_get_sc_object $P5028, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5027, $P5028
    set fb_tmp_85, $P5027
    repr_defined $I5004, fb_tmp_85
    unless $I5004 goto if355_else724 
    set $P5029, fb_tmp_85["$UNIT"]
    set $P5031, $P5029
    goto if355_end725
  if355_else724:
    null $P5030
    set $P5031, $P5030
  if355_end725:
    unless_null $P5031, vivi_356726
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_356726:
    unless_null $P5031, vivi_357727
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_357727:
    set $P5026, $P5031
  fallback723:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback728
    nqp_get_sc_object $P5036, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5035, $P5036
    set fb_tmp_86, $P5035
    repr_defined $I5005, fb_tmp_86
    unless $I5005 goto if358_else729 
    set $P5037, fb_tmp_86["$GLOBALish"]
    set $P5039, $P5037
    goto if358_end730
  if358_else729:
    null $P5038
    set $P5039, $P5038
  if358_end730:
    unless_null $P5039, vivi_359731
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5039, $P5040
  vivi_359731:
    unless_null $P5039, vivi_360732
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_360732:
    set $P5034, $P5039
  fallback728:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1381944288.90674") :anon :lex :outer("cuid_45_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 757
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback738
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_88, $P5002
    repr_defined $I5001, fb_tmp_88
    unless $I5001 goto if364_else739 
    set $P5004, fb_tmp_88["$W"]
    set $P5006, $P5004
    goto if364_end740
  if364_else739:
    null $P5005
    set $P5006, $P5005
  if364_end740:
    unless_null $P5006, vivi_365741
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_365741:
    unless_null $P5006, vivi_366742
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_366742:
    set $P5001, $P5006
  fallback738:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback743
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5010, $P5011
    set fb_tmp_89, $P5010
    repr_defined $I5002, fb_tmp_89
    unless $I5002 goto if367_else744 
    set $P5012, fb_tmp_89["$UNIT"]
    set $P5014, $P5012
    goto if367_end745
  if367_else744:
    null $P5013
    set $P5014, $P5013
  if367_end745:
    unless_null $P5014, vivi_368746
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_368746:
    unless_null $P5014, vivi_369747
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_369747:
    set $P5009, $P5014
  fallback743:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback748
    nqp_get_sc_object $P5019, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5018, $P5019
    set fb_tmp_90, $P5018
    repr_defined $I5003, fb_tmp_90
    unless $I5003 goto if370_else749 
    set $P5020, fb_tmp_90["$PACKAGE"]
    set $P5022, $P5020
    goto if370_end750
  if370_else749:
    null $P5021
    set $P5022, $P5021
  if370_end750:
    unless_null $P5022, vivi_371751
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_371751:
    unless_null $P5022, vivi_372752
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_372752:
    set $P5017, $P5022
  fallback748:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1381944288.90674") :anon :lex :outer("cuid_45_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 761
    .const 'Sub' $P5021 = 'cuid_403_1381944288.90674' 
    capture_lex $P5021 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    .local pmc pkg_viv_tmp_21 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback764
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_94, pkg_viv_tmp_21
    repr_defined $I5004, fb_tmp_94
    unless $I5004 goto if379_else765 
    set $P5004, fb_tmp_94["%COMPILING"]
    set $P5006, $P5004
    goto if379_end766
  if379_else765:
    null $P5005
    set $P5006, $P5005
  if379_end766:
    unless_null $P5006, vivi_380767
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_380767:
    unless_null $P5006, vivi_381768
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_381768:
    set $P5001, $P5006
  fallback764:
    set fb_tmp_93, $P5001
    repr_defined $I5003, fb_tmp_93
    unless $I5003 goto if378_else762 
    set $P5009, fb_tmp_93["%?OPTIONS"]
    set $P5011, $P5009
    goto if378_end763
  if378_else762:
    null $P5010
    set $P5011, $P5010
  if378_end763:
    unless_null $P5011, vivi_382769
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_382769:
    set fb_tmp_92, $P5011
    repr_defined $I5002, fb_tmp_92
    unless $I5002 goto if377_else760 
    set $P5013, fb_tmp_92["setting"]
    set $P5015, $P5013
    goto if377_end761
  if377_else760:
    null $P5014
    set $P5015, $P5014
  if377_end761:
    unless_null $P5015, vivi_383770
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_383770:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless376_end759 
    .const 'Sub' $P5017 = 'cuid_403_1381944288.90674' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless376_end759:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1381944288.90674") :anon :lex :outer("cuid_404_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 762
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_106 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 763
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback771
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_95, $P5003
    repr_defined $I5001, fb_tmp_95
    unless $I5001 goto if384_else772 
    set $P5005, fb_tmp_95["$W"]
    set $P5007, $P5005
    goto if384_end773
  if384_else772:
    null $P5006
    set $P5007, $P5006
  if384_end773:
    unless_null $P5007, vivi_385774
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_385774:
    unless_null $P5007, vivi_386775
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_386775:
    set $P5002, $P5007
  fallback771:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback778
    nqp_get_sc_object $P5012, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_22, $P5011
    set fb_tmp_97, pkg_viv_tmp_22
    repr_defined $I5003, fb_tmp_97
    unless $I5003 goto if388_else779 
    set $P5013, fb_tmp_97["%HOW"]
    set $P5015, $P5013
    goto if388_end780
  if388_else779:
    null $P5014
    set $P5015, $P5014
  if388_end780:
    unless_null $P5015, vivi_389781
    new $P5016, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5016
    set $P5015, $P5016
  vivi_389781:
    unless_null $P5015, vivi_390782
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_390782:
    set $P5010, $P5015
  fallback778:
    set fb_tmp_96, $P5010
    repr_defined $I5002, fb_tmp_96
    unless $I5002 goto if387_else776 
    set $P5018, fb_tmp_96["knowhow"]
    set $P5020, $P5018
    goto if387_end777
  if387_else776:
    null $P5019
    set $P5020, $P5019
  if387_end777:
    unless_null $P5020, vivi_391783
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_391783:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 764
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback784
    nqp_get_sc_object $P5026, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5025, $P5026
    set fb_tmp_98, $P5025
    repr_defined $I5004, fb_tmp_98
    unless $I5004 goto if392_else785 
    set $P5027, fb_tmp_98["$EXPORT"]
    set $P5029, $P5027
    goto if392_end786
  if392_else785:
    null $P5028
    set $P5029, $P5028
  if392_end786:
    unless_null $P5029, vivi_393787
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5029, $P5030
  vivi_393787:
    unless_null $P5029, vivi_394788
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_394788:
    set $P5024, $P5029
  fallback784:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback789
    nqp_get_sc_object $P5034, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5033, $P5034
    set fb_tmp_99, $P5033
    repr_defined $I5005, fb_tmp_99
    unless $I5005 goto if395_else790 
    set $P5035, fb_tmp_99["$EXPORT"]
    set $P5037, $P5035
    goto if395_end791
  if395_else790:
    null $P5036
    set $P5037, $P5036
  if395_end791:
    unless_null $P5037, vivi_396792
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_396792:
    unless_null $P5037, vivi_397793
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_397793:
    set $P5032, $P5037
  fallback789:
    $P5023."compose"($P5032)
.annotate 'line', 765
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback794
    nqp_get_sc_object $P5042, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5041, $P5042
    set fb_tmp_100, $P5041
    repr_defined $I5006, fb_tmp_100
    unless $I5006 goto if398_else795 
    set $P5043, fb_tmp_100["$W"]
    set $P5045, $P5043
    goto if398_end796
  if398_else795:
    null $P5044
    set $P5045, $P5044
  if398_end796:
    unless_null $P5045, vivi_399797
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  vivi_399797:
    unless_null $P5045, vivi_400798
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_400798:
    set $P5040, $P5045
  fallback794:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback799
    nqp_get_sc_object $P5050, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5049, $P5050
    set fb_tmp_101, $P5049
    repr_defined $I5007, fb_tmp_101
    unless $I5007 goto if401_else800 
    set $P5051, fb_tmp_101["$UNIT"]
    set $P5053, $P5051
    goto if401_end801
  if401_else800:
    null $P5052
    set $P5053, $P5052
  if401_end801:
    unless_null $P5053, vivi_402802
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5053, $P5054
  vivi_402802:
    unless_null $P5053, vivi_403803
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_403803:
    set $P5048, $P5053
  fallback799:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback804
    nqp_get_sc_object $P5058, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5057, $P5058
    set fb_tmp_102, $P5057
    repr_defined $I5008, fb_tmp_102
    unless $I5008 goto if404_else805 
    set $P5059, fb_tmp_102["$EXPORT"]
    set $P5061, $P5059
    goto if404_end806
  if404_else805:
    null $P5060
    set $P5061, $P5060
  if404_end806:
    unless_null $P5061, vivi_405807
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5061, $P5062
  vivi_405807:
    unless_null $P5061, vivi_406808
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_406808:
    set $P5056, $P5061
  fallback804:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 766
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback809
    nqp_get_sc_object $P5066, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5065, $P5066
    set fb_tmp_103, $P5065
    repr_defined $I5009, fb_tmp_103
    unless $I5009 goto if407_else810 
    set $P5067, fb_tmp_103["$W"]
    set $P5069, $P5067
    goto if407_end811
  if407_else810:
    null $P5068
    set $P5069, $P5068
  if407_end811:
    unless_null $P5069, vivi_408812
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5069, $P5070
  vivi_408812:
    unless_null $P5069, vivi_409813
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_409813:
    set $P5064, $P5069
  fallback809:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback816
    nqp_get_sc_object $P5074, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_23, $P5073
    set fb_tmp_105, pkg_viv_tmp_23
    repr_defined $I5011, fb_tmp_105
    unless $I5011 goto if411_else817 
    set $P5075, fb_tmp_105["%HOW"]
    set $P5077, $P5075
    goto if411_end818
  if411_else817:
    null $P5076
    set $P5077, $P5076
  if411_end818:
    unless_null $P5077, vivi_412819
    new $P5078, 'Hash'
    set pkg_viv_tmp_23["%HOW"], $P5078
    set $P5077, $P5078
  vivi_412819:
    unless_null $P5077, vivi_413820
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_413820:
    set $P5072, $P5077
  fallback816:
    set fb_tmp_104, $P5072
    repr_defined $I5010, fb_tmp_104
    unless $I5010 goto if410_else814 
    set $P5080, fb_tmp_104["knowhow"]
    set $P5082, $P5080
    goto if410_end815
  if410_else814:
    null $P5081
    set $P5082, $P5081
  if410_end815:
    unless_null $P5082, vivi_414821
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_414821:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 767
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback822
    nqp_get_sc_object $P5089, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5088, $P5089
    set fb_tmp_106, $P5088
    repr_defined $I5012, fb_tmp_106
    unless $I5012 goto if415_else823 
    set $P5090, fb_tmp_106["$EXPORT"]
    set $P5092, $P5090
    goto if415_end824
  if415_else823:
    null $P5091
    set $P5092, $P5091
  if415_end824:
    unless_null $P5092, vivi_416825
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5092, $P5093
  vivi_416825:
    unless_null $P5092, vivi_417826
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_417826:
    set $P5087, $P5092
  fallback822:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1381944288.90674") :anon :lex :outer("cuid_45_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 772
    .local pmc fb_tmp_107 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback827
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_107, $P5002
    repr_defined $I5001, fb_tmp_107
    unless $I5001 goto if418_else828 
    set $P5004, fb_tmp_107["$W"]
    set $P5006, $P5004
    goto if418_end829
  if418_else828:
    null $P5005
    set $P5006, $P5005
  if418_end829:
    unless_null $P5006, vivi_419830
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_419830:
    unless_null $P5006, vivi_420831
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_420831:
    set $P5001, $P5006
  fallback827:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 780
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx426_start
    .local string rx426_tgt
    .local int rx426_pos
    .local int rx426_off
    .local int rx426_eos
    .local int rx426_rep
    .local pmc rx426_cur
    .local pmc rx426_curclass
    .local pmc rx426_bstack
    .local pmc rx426_cstack
    rx426_start = self."!cursor_start_all"()
    set rx426_cur, rx426_start[0]
    set rx426_tgt, rx426_start[1]
    set rx426_pos, rx426_start[2]
    set rx426_curclass, rx426_start[3]
    set rx426_bstack, rx426_start[4]
    set $I19, rx426_start[5]
    store_lex unicode:"$\x{a2}", rx426_cur
    length rx426_eos, rx426_tgt
    eq $I19, 1, rx426_restart841
    gt rx426_pos, rx426_eos, rx426_fail842
    repr_get_attr_int $I11, self, rx426_curclass, "$!from"
    ne $I11, -1, rxscan427_done848
    goto rxscan427_scan847
  rxscan427_loop846:
    inc rx426_pos
    gt rx426_pos, rx426_eos, rx426_fail842
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!from", rx426_pos
  rxscan427_scan847:
    nqp_rxmark rx426_bstack, rxscan427_loop846, rx426_pos, 0
  rxscan427_done848:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt428_0850
    nqp_push_label $P11, alt428_1854
    nqp_rxmark rx426_bstack, alt428_end849, -1, 0
    rx426_cur."!alt"(rx426_pos, "alt_nfa__7_1381944290.84371", $P11)
    goto rx426_fail842
  alt428_0850:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    lt rx426_pos, rx426_eos, rx426_fail842
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    goto alt428_end849
  alt428_1854:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    nqp_rxmark rx426_bstack, rxquantr433_done857, rx426_pos, 0
  rxquantr433_loop856:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."statement"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    nqp_rxmark rx426_bstack, rxsubrule434_pass858, -1, 0
  rxsubrule434_pass858:
    rx426_cstack = rx426_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    nqp_rxpeek $I19, rx426_bstack, rxquantr433_done857
    inc $I19
    inc $I19
    set rx426_rep, rx426_bstack[$I19]
    nqp_rxcommit rx426_bstack, rxquantr433_done857
    inc rx426_rep
    nqp_rxmark rx426_bstack, rxquantr433_done857, rx426_pos, rx426_rep
    goto rxquantr433_loop856
  rxquantr433_done857:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    goto alt428_end849
  alt428_end849:
    rx426_cur."!cursor_pass"(rx426_pos, "statementlist", 'backtrack'=>1)
    .return (rx426_cur)
  rx426_restart841:
    repr_get_attr_obj rx426_cstack, rx426_cur, rx426_curclass, "$!cstack"
  rx426_fail842:
    unless rx426_bstack, rx426_done840
    pop $I19, rx426_bstack
    if_null rx426_cstack, rx426_cstack_done845
    unless rx426_cstack, rx426_cstack_done845
    dec $I19
    set $P11, rx426_cstack[$I19]
  rx426_cstack_done845:
    pop rx426_rep, rx426_bstack
    pop rx426_pos, rx426_bstack
    pop $I19, rx426_bstack
    lt rx426_pos, -1, rx426_done840
    lt rx426_pos, 0, rx426_fail842
    eq $I19, 0, rx426_fail842
    nqp_islist $I20, rx426_cstack
    unless $I20, rx426_jump843
    elements $I18, rx426_bstack
    le $I18, 0, rx426_cut844
    dec $I18
    set $I18, rx426_bstack[$I18]
  rx426_cut844:
    assign rx426_cstack, $I18
  rx426_jump843:
    jump $I19
  rx426_done840:
    rx426_cur."!cursor_fail"()
    .return (rx426_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 785
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1381944288.90674' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx438_start
    .local string rx438_tgt
    .local int rx438_pos
    .local int rx438_off
    .local int rx438_eos
    .local int rx438_rep
    .local pmc rx438_cur
    .local pmc rx438_curclass
    .local pmc rx438_bstack
    .local pmc rx438_cstack
    rx438_start = self."!cursor_start_all"()
    set rx438_cur, rx438_start[0]
    set rx438_tgt, rx438_start[1]
    set rx438_pos, rx438_start[2]
    set rx438_curclass, rx438_start[3]
    set rx438_bstack, rx438_start[4]
    set $I19, rx438_start[5]
    store_lex unicode:"$\x{a2}", rx438_cur
    length rx438_eos, rx438_tgt
    eq $I19, 1, rx438_restart864
    gt rx438_pos, rx438_eos, rx438_fail865
    repr_get_attr_int $I11, self, rx438_curclass, "$!from"
    ne $I11, -1, rxscan439_done871
    goto rxscan439_scan870
  rxscan439_loop869:
    inc rx438_pos
    gt rx438_pos, rx438_eos, rx438_fail865
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!from", rx438_pos
  rxscan439_scan870:
    nqp_rxmark rx438_bstack, rxscan439_loop869, rx438_pos, 0
  rxscan439_done871:
    .const 'Sub' $P5001 = 'cuid_48_1381944288.90674' 
    capture_lex $P5001
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    ge $I11, 0, rx438_fail865
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt444_0887
    nqp_push_label $P11, alt444_1889
    nqp_rxmark rx438_bstack, alt444_end886, -1, 0
    rx438_cur."!alt"(rx438_pos, "alt_nfa__9_1381944290.86933", $P11)
    goto rx438_fail865
  alt444_0887:
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    nqp_rxmark rx438_bstack, rxsubrule445_pass888, -1, 0
  rxsubrule445_pass888:
    rx438_cstack = rx438_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx438_pos, $P11, rx438_curclass, "$!pos"
    goto alt444_end886
  alt444_1889:
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    nqp_rxmark rx438_bstack, rxsubrule446_pass890, -1, 0
  rxsubrule446_pass890:
    rx438_cstack = rx438_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx438_pos, $P11, rx438_curclass, "$!pos"
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."ws"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    repr_get_attr_int rx438_pos, $P11, rx438_curclass, "$!pos"
    nqp_rxmark rx438_bstack, rxquantr448_done893, rx438_pos, 0
  rxquantr448_loop892:
  alt449_0895:
    nqp_rxmark rx438_bstack, alt449_1896, rx438_pos, 0
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    goto alt449_end894
  alt449_1896:
    nqp_rxmark rx438_bstack, alt449_2902, rx438_pos, 0
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    nqp_rxmark rx438_bstack, rxsubrule450_pass897, -1, 0
  rxsubrule450_pass897:
    rx438_cstack = rx438_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx438_pos, $P11, rx438_curclass, "$!pos"
    nqp_rxmark rx438_bstack, rxquantr451_done899, rx438_pos, 0
  rxquantr451_loop898:
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    goto rxsubrule452_pass900
  rxsubrule452_back901:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
  rxsubrule452_pass900:
    rx438_cstack = rx438_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule452_back901
    push rx438_bstack, $I11
    push rx438_bstack, 0
    push rx438_bstack, rx438_pos
    elements $I11, rx438_cstack
    push rx438_bstack, $I11
    repr_get_attr_int rx438_pos, $P11, rx438_curclass, "$!pos"
    nqp_rxpeek $I19, rx438_bstack, rxquantr451_done899
    inc $I19
    inc $I19
    set rx438_rep, rx438_bstack[$I19]
    nqp_rxcommit rx438_bstack, rxquantr451_done899
    inc rx438_rep
  rxquantr451_done899:
    goto alt449_end894
  alt449_2902:
    repr_bind_attr_int rx438_cur, rx438_curclass, "$!pos", rx438_pos
    $P11 = rx438_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx438_curclass, "$!pos"
    lt $I11, 0, rx438_fail865
    nqp_rxmark rx438_bstack, rxsubrule453_pass903, -1, 0
  rxsubrule453_pass903:
    rx438_cstack = rx438_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx438_pos, $P11, rx438_curclass, "$!pos"
  alt449_end894:
    nqp_rxpeek $I19, rx438_bstack, rxquantr448_done893
    inc $I19
    inc $I19
    set rx438_rep, rx438_bstack[$I19]
    nqp_rxcommit rx438_bstack, rxquantr448_done893
    inc rx438_rep
  rxquantr448_done893:
    goto alt444_end886
  alt444_end886:
    nqp_rxcommit rx438_bstack, alt444_end886
    rx438_cur."!cursor_pass"(rx438_pos, "statement", 'backtrack'=>1)
    .return (rx438_cur)
  rx438_restart864:
    repr_get_attr_obj rx438_cstack, rx438_cur, rx438_curclass, "$!cstack"
  rx438_fail865:
    unless rx438_bstack, rx438_done863
    pop $I19, rx438_bstack
    if_null rx438_cstack, rx438_cstack_done868
    unless rx438_cstack, rx438_cstack_done868
    dec $I19
    set $P11, rx438_cstack[$I19]
  rx438_cstack_done868:
    pop rx438_rep, rx438_bstack
    pop rx438_pos, rx438_bstack
    pop $I19, rx438_bstack
    lt rx438_pos, -1, rx438_done863
    lt rx438_pos, 0, rx438_fail865
    eq $I19, 0, rx438_fail865
    nqp_islist $I20, rx438_cstack
    unless $I20, rx438_jump866
    elements $I18, rx438_bstack
    le $I18, 0, rx438_cut867
    dec $I18
    set $I18, rx438_bstack[$I18]
  rx438_cut867:
    assign rx438_cstack, $I18
  rx438_jump866:
    jump $I19
  rx438_done863:
    rx438_cur."!cursor_fail"()
    .return (rx438_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1381944288.90674") :anon :lex :outer("cuid_47_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx440_start
    .local string rx440_tgt
    .local int rx440_pos
    .local int rx440_off
    .local int rx440_eos
    .local int rx440_rep
    .local pmc rx440_cur
    .local pmc rx440_curclass
    .local pmc rx440_bstack
    .local pmc rx440_cstack
    rx440_start = self."!cursor_start_all"()
    set rx440_cur, rx440_start[0]
    set rx440_tgt, rx440_start[1]
    set rx440_pos, rx440_start[2]
    set rx440_curclass, rx440_start[3]
    set rx440_bstack, rx440_start[4]
    set $I19, rx440_start[5]
    store_lex unicode:"$\x{a2}", rx440_cur
    length rx440_eos, rx440_tgt
    eq $I19, 1, rx440_restart874
    gt rx440_pos, rx440_eos, rx440_fail875
    repr_get_attr_int $I11, self, rx440_curclass, "$!from"
    ne $I11, -1, rxscan441_done881
    goto rxscan441_scan880
  rxscan441_loop879:
    inc rx440_pos
    gt rx440_pos, rx440_eos, rx440_fail875
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!from", rx440_pos
  rxscan441_scan880:
    nqp_rxmark rx440_bstack, rxscan441_loop879, rx440_pos, 0
  rxscan441_done881:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt442_0883
    nqp_push_label $P11, alt442_1884
    nqp_rxmark rx440_bstack, alt442_end882, -1, 0
    rx440_cur."!alt"(rx440_pos, "alt_nfa__8_1381944290.85124", $P11)
    goto rx440_fail875
  alt442_0883:
    ge rx440_pos, rx440_eos, rx440_fail875
    substr $S11, rx440_tgt, rx440_pos, 1
    index $I11, ucs4:"])}", $S11
    lt $I11, 0, rx440_fail875
    inc rx440_pos
    goto alt442_end882
  alt442_1884:
    lt rx440_pos, rx440_eos, rx440_fail875
    goto alt442_end882
  alt442_end882:
    rx440_cur."!cursor_pass"(rx440_pos, 'backtrack'=>1)
    .return (rx440_cur)
  rx440_restart874:
    repr_get_attr_obj rx440_cstack, rx440_cur, rx440_curclass, "$!cstack"
  rx440_fail875:
    unless rx440_bstack, rx440_done873
    pop $I19, rx440_bstack
    if_null rx440_cstack, rx440_cstack_done878
    unless rx440_cstack, rx440_cstack_done878
    dec $I19
    set $P11, rx440_cstack[$I19]
  rx440_cstack_done878:
    pop rx440_rep, rx440_bstack
    pop rx440_pos, rx440_bstack
    pop $I19, rx440_bstack
    lt rx440_pos, -1, rx440_done873
    lt rx440_pos, 0, rx440_fail875
    eq $I19, 0, rx440_fail875
    nqp_islist $I20, rx440_cstack
    unless $I20, rx440_jump876
    elements $I18, rx440_bstack
    le $I18, 0, rx440_cut877
    dec $I18
    set $I18, rx440_bstack[$I18]
  rx440_cut877:
    assign rx440_cstack, $I18
  rx440_jump876:
    jump $I19
  rx440_done873:
    rx440_cur."!cursor_fail"()
    .return (rx440_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 798
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx454_start
    .local string rx454_tgt
    .local int rx454_pos
    .local int rx454_off
    .local int rx454_eos
    .local int rx454_rep
    .local pmc rx454_cur
    .local pmc rx454_curclass
    .local pmc rx454_bstack
    .local pmc rx454_cstack
    rx454_start = self."!cursor_start_all"()
    set rx454_cur, rx454_start[0]
    set rx454_tgt, rx454_start[1]
    set rx454_pos, rx454_start[2]
    set rx454_curclass, rx454_start[3]
    set rx454_bstack, rx454_start[4]
    set $I19, rx454_start[5]
    store_lex unicode:"$\x{a2}", rx454_cur
    length rx454_eos, rx454_tgt
    eq $I19, 1, rx454_restart906
    gt rx454_pos, rx454_eos, rx454_fail907
    repr_get_attr_int $I11, self, rx454_curclass, "$!from"
    ne $I11, -1, rxscan455_done913
    goto rxscan455_scan912
  rxscan455_loop911:
    inc rx454_pos
    gt rx454_pos, rx454_eos, rx454_fail907
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!from", rx454_pos
  rxscan455_scan912:
    nqp_rxmark rx454_bstack, rxscan455_loop911, rx454_pos, 0
  rxscan455_done913:
  alt456_0915:
    nqp_rxmark rx454_bstack, alt456_1916, rx454_pos, 0
    add $I11, rx454_pos, 1
    gt $I11, rx454_eos, rx454_fail907
    substr $S10, rx454_tgt, rx454_pos, 1
    ne $S10, ucs4:";", rx454_fail907
    add rx454_pos, 1
    goto alt456_end914
  alt456_1916:
    nqp_rxmark rx454_bstack, alt456_2917, rx454_pos, 0
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!pos", rx454_pos
    $P11 = rx454_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx454_curclass, "$!pos"
    lt $I11, 0, rx454_fail907
    goto alt456_end914
  alt456_2917:
    nqp_rxmark rx454_bstack, alt456_3918, rx454_pos, 0
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!pos", rx454_pos
    $P11 = rx454_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx454_curclass, "$!pos"
    lt $I11, 0, rx454_fail907
    goto alt456_end914
  alt456_3918:
    lt rx454_pos, rx454_eos, rx454_fail907
  alt456_end914:
    rx454_cur."!cursor_pass"(rx454_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx454_cur)
  rx454_restart906:
    repr_get_attr_obj rx454_cstack, rx454_cur, rx454_curclass, "$!cstack"
  rx454_fail907:
    unless rx454_bstack, rx454_done905
    pop $I19, rx454_bstack
    if_null rx454_cstack, rx454_cstack_done910
    unless rx454_cstack, rx454_cstack_done910
    dec $I19
    set $P11, rx454_cstack[$I19]
  rx454_cstack_done910:
    pop rx454_rep, rx454_bstack
    pop rx454_pos, rx454_bstack
    pop $I19, rx454_bstack
    lt rx454_pos, -1, rx454_done905
    lt rx454_pos, 0, rx454_fail907
    eq $I19, 0, rx454_fail907
    nqp_islist $I20, rx454_cstack
    unless $I20, rx454_jump908
    elements $I18, rx454_bstack
    le $I18, 0, rx454_cut909
    dec $I18
    set $I18, rx454_bstack[$I18]
  rx454_cut909:
    assign rx454_cstack, $I18
  rx454_jump908:
    jump $I19
  rx454_done905:
    rx454_cur."!cursor_fail"()
    .return (rx454_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 805
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx458_start
    .local string rx458_tgt
    .local int rx458_pos
    .local int rx458_off
    .local int rx458_eos
    .local int rx458_rep
    .local pmc rx458_cur
    .local pmc rx458_curclass
    .local pmc rx458_bstack
    .local pmc rx458_cstack
    rx458_start = self."!cursor_start_all"()
    set rx458_cur, rx458_start[0]
    set rx458_tgt, rx458_start[1]
    set rx458_pos, rx458_start[2]
    set rx458_curclass, rx458_start[3]
    set rx458_bstack, rx458_start[4]
    set $I19, rx458_start[5]
    store_lex unicode:"$\x{a2}", rx458_cur
    length rx458_eos, rx458_tgt
    eq $I19, 1, rx458_restart922
    gt rx458_pos, rx458_eos, rx458_fail923
    repr_get_attr_int $I11, self, rx458_curclass, "$!from"
    ne $I11, -1, rxscan459_done929
    goto rxscan459_scan928
  rxscan459_loop927:
    inc rx458_pos
    gt rx458_pos, rx458_eos, rx458_fail923
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!from", rx458_pos
  rxscan459_scan928:
    nqp_rxmark rx458_bstack, rxscan459_loop927, rx458_pos, 0
  rxscan459_done929:
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!pos", rx458_pos
    $P11 = rx458_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx458_curclass, "$!pos"
    lt $I11, 0, rx458_fail923
    nqp_rxmark rx458_bstack, rxsubrule460_pass930, -1, 0
  rxsubrule460_pass930:
    rx458_cstack = rx458_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx458_pos, $P11, rx458_curclass, "$!pos"
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!pos", rx458_pos
    $P11 = rx458_cur."ws"()
    repr_get_attr_int $I11, $P11, rx458_curclass, "$!pos"
    lt $I11, 0, rx458_fail923
    repr_get_attr_int rx458_pos, $P11, rx458_curclass, "$!pos"
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!pos", rx458_pos
    $P11 = rx458_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx458_curclass, "$!pos"
    lt $I11, 0, rx458_fail923
    nqp_rxmark rx458_bstack, rxsubrule462_pass932, -1, 0
  rxsubrule462_pass932:
    rx458_cstack = rx458_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx458_pos, $P11, rx458_curclass, "$!pos"
    rx458_cur."!cursor_pass"(rx458_pos, "xblock", 'backtrack'=>1)
    .return (rx458_cur)
  rx458_restart922:
    repr_get_attr_obj rx458_cstack, rx458_cur, rx458_curclass, "$!cstack"
  rx458_fail923:
    unless rx458_bstack, rx458_done921
    pop $I19, rx458_bstack
    if_null rx458_cstack, rx458_cstack_done926
    unless rx458_cstack, rx458_cstack_done926
    dec $I19
    set $P11, rx458_cstack[$I19]
  rx458_cstack_done926:
    pop rx458_rep, rx458_bstack
    pop rx458_pos, rx458_bstack
    pop $I19, rx458_bstack
    lt rx458_pos, -1, rx458_done921
    lt rx458_pos, 0, rx458_fail923
    eq $I19, 0, rx458_fail923
    nqp_islist $I20, rx458_cstack
    unless $I20, rx458_jump924
    elements $I18, rx458_bstack
    le $I18, 0, rx458_cut925
    dec $I18
    set $I18, rx458_bstack[$I18]
  rx458_cut925:
    assign rx458_cstack, $I18
  rx458_jump924:
    jump $I19
  rx458_done921:
    rx458_cur."!cursor_fail"()
    .return (rx458_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 809
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx463_start
    .local string rx463_tgt
    .local int rx463_pos
    .local int rx463_off
    .local int rx463_eos
    .local int rx463_rep
    .local pmc rx463_cur
    .local pmc rx463_curclass
    .local pmc rx463_bstack
    .local pmc rx463_cstack
    rx463_start = self."!cursor_start_all"()
    set rx463_cur, rx463_start[0]
    set rx463_tgt, rx463_start[1]
    set rx463_pos, rx463_start[2]
    set rx463_curclass, rx463_start[3]
    set rx463_bstack, rx463_start[4]
    set $I19, rx463_start[5]
    store_lex unicode:"$\x{a2}", rx463_cur
    length rx463_eos, rx463_tgt
    eq $I19, 1, rx463_restart935
    gt rx463_pos, rx463_eos, rx463_fail936
    repr_get_attr_int $I11, self, rx463_curclass, "$!from"
    ne $I11, -1, rxscan464_done942
    goto rxscan464_scan941
  rxscan464_loop940:
    inc rx463_pos
    gt rx463_pos, rx463_eos, rx463_fail936
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!from", rx463_pos
  rxscan464_scan941:
    nqp_rxmark rx463_bstack, rxscan464_loop940, rx463_pos, 0
  rxscan464_done942:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt465_0944
    nqp_push_label $P11, alt465_1950
    nqp_push_label $P11, alt465_2953
    nqp_rxmark rx463_bstack, alt465_end943, -1, 0
    rx463_cur."!alt"(rx463_pos, "alt_nfa__10_1381944290.99727", $P11)
    goto rx463_fail936
  alt465_0944:
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."signature"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    nqp_rxmark rx463_bstack, rxsubrule468_pass947, -1, 0
  rxsubrule468_pass947:
    rx463_cstack = rx463_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."ws"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    nqp_rxmark rx463_bstack, rxsubrule470_pass949, -1, 0
  rxsubrule470_pass949:
    rx463_cstack = rx463_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    goto alt465_end943
  alt465_1950:
    ge rx463_pos, rx463_eos, rx463_fail936
    substr $S11, rx463_tgt, rx463_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx463_fail936
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    nqp_rxmark rx463_bstack, rxsubrule472_pass952, -1, 0
  rxsubrule472_pass952:
    rx463_cstack = rx463_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    goto alt465_end943
  alt465_2953:
    repr_bind_attr_int rx463_cur, rx463_curclass, "$!pos", rx463_pos
    $P11 = rx463_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx463_curclass, "$!pos"
    lt $I11, 0, rx463_fail936
    repr_get_attr_int rx463_pos, $P11, rx463_curclass, "$!pos"
    goto alt465_end943
  alt465_end943:
    rx463_cur."!cursor_pass"(rx463_pos, "pblock", 'backtrack'=>1)
    .return (rx463_cur)
  rx463_restart935:
    repr_get_attr_obj rx463_cstack, rx463_cur, rx463_curclass, "$!cstack"
  rx463_fail936:
    unless rx463_bstack, rx463_done934
    pop $I19, rx463_bstack
    if_null rx463_cstack, rx463_cstack_done939
    unless rx463_cstack, rx463_cstack_done939
    dec $I19
    set $P11, rx463_cstack[$I19]
  rx463_cstack_done939:
    pop rx463_rep, rx463_bstack
    pop rx463_pos, rx463_bstack
    pop $I19, rx463_bstack
    lt rx463_pos, -1, rx463_done934
    lt rx463_pos, 0, rx463_fail936
    eq $I19, 0, rx463_fail936
    nqp_islist $I20, rx463_cstack
    unless $I20, rx463_jump937
    elements $I18, rx463_bstack
    le $I18, 0, rx463_cut938
    dec $I18
    set $I18, rx463_bstack[$I18]
  rx463_cut938:
    assign rx463_cstack, $I18
  rx463_jump937:
    jump $I19
  rx463_done934:
    rx463_cur."!cursor_fail"()
    .return (rx463_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 820
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx474_start
    .local string rx474_tgt
    .local int rx474_pos
    .local int rx474_off
    .local int rx474_eos
    .local int rx474_rep
    .local pmc rx474_cur
    .local pmc rx474_curclass
    .local pmc rx474_bstack
    .local pmc rx474_cstack
    rx474_start = self."!cursor_start_all"()
    set rx474_cur, rx474_start[0]
    set rx474_tgt, rx474_start[1]
    set rx474_pos, rx474_start[2]
    set rx474_curclass, rx474_start[3]
    set rx474_bstack, rx474_start[4]
    set $I19, rx474_start[5]
    store_lex unicode:"$\x{a2}", rx474_cur
    length rx474_eos, rx474_tgt
    eq $I19, 1, rx474_restart957
    gt rx474_pos, rx474_eos, rx474_fail958
    repr_get_attr_int $I11, self, rx474_curclass, "$!from"
    ne $I11, -1, rxscan475_done964
    goto rxscan475_scan963
  rxscan475_loop962:
    inc rx474_pos
    gt rx474_pos, rx474_eos, rx474_fail958
    repr_bind_attr_int rx474_cur, rx474_curclass, "$!from", rx474_pos
  rxscan475_scan963:
    nqp_rxmark rx474_bstack, rxscan475_loop962, rx474_pos, 0
  rxscan475_done964:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt476_0966
    nqp_push_label $P11, alt476_1967
    nqp_rxmark rx474_bstack, alt476_end965, -1, 0
    rx474_cur."!alt"(rx474_pos, "alt_nfa__11_1381944291.00452", $P11)
    goto rx474_fail958
  alt476_0966:
    add $I11, rx474_pos, 2
    gt $I11, rx474_eos, rx474_fail958
    substr $S10, rx474_tgt, rx474_pos, 2
    ne $S10, ucs4:"->", rx474_fail958
    add rx474_pos, 2
    goto alt476_end965
  alt476_1967:
    add $I11, rx474_pos, 3
    gt $I11, rx474_eos, rx474_fail958
    substr $S10, rx474_tgt, rx474_pos, 3
    ne $S10, ucs4:"<->", rx474_fail958
    add rx474_pos, 3
    goto alt476_end965
  alt476_end965:
    rx474_cur."!cursor_pass"(rx474_pos, "lambda", 'backtrack'=>1)
    .return (rx474_cur)
  rx474_restart957:
    repr_get_attr_obj rx474_cstack, rx474_cur, rx474_curclass, "$!cstack"
  rx474_fail958:
    unless rx474_bstack, rx474_done956
    pop $I19, rx474_bstack
    if_null rx474_cstack, rx474_cstack_done961
    unless rx474_cstack, rx474_cstack_done961
    dec $I19
    set $P11, rx474_cstack[$I19]
  rx474_cstack_done961:
    pop rx474_rep, rx474_bstack
    pop rx474_pos, rx474_bstack
    pop $I19, rx474_bstack
    lt rx474_pos, -1, rx474_done956
    lt rx474_pos, 0, rx474_fail958
    eq $I19, 0, rx474_fail958
    nqp_islist $I20, rx474_cstack
    unless $I20, rx474_jump959
    elements $I18, rx474_bstack
    le $I18, 0, rx474_cut960
    dec $I18
    set $I18, rx474_bstack[$I18]
  rx474_cut960:
    assign rx474_cstack, $I18
  rx474_jump959:
    jump $I19
  rx474_done956:
    rx474_cur."!cursor_fail"()
    .return (rx474_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 822
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx477_start
    .local string rx477_tgt
    .local int rx477_pos
    .local int rx477_off
    .local int rx477_eos
    .local int rx477_rep
    .local pmc rx477_cur
    .local pmc rx477_curclass
    .local pmc rx477_bstack
    .local pmc rx477_cstack
    rx477_start = self."!cursor_start_all"()
    set rx477_cur, rx477_start[0]
    set rx477_tgt, rx477_start[1]
    set rx477_pos, rx477_start[2]
    set rx477_curclass, rx477_start[3]
    set rx477_bstack, rx477_start[4]
    set $I19, rx477_start[5]
    store_lex unicode:"$\x{a2}", rx477_cur
    length rx477_eos, rx477_tgt
    eq $I19, 1, rx477_restart970
    gt rx477_pos, rx477_eos, rx477_fail971
    repr_get_attr_int $I11, self, rx477_curclass, "$!from"
    ne $I11, -1, rxscan478_done977
    goto rxscan478_scan976
  rxscan478_loop975:
    inc rx477_pos
    gt rx477_pos, rx477_eos, rx477_fail971
    repr_bind_attr_int rx477_cur, rx477_curclass, "$!from", rx477_pos
  rxscan478_scan976:
    nqp_rxmark rx477_bstack, rxscan478_loop975, rx477_pos, 0
  rxscan478_done977:
  alt479_0979:
    nqp_rxmark rx477_bstack, alt479_1980, rx477_pos, 0
    ge rx477_pos, rx477_eos, rx477_fail971
    substr $S11, rx477_tgt, rx477_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx477_fail971
    goto alt479_end978
  alt479_1980:
    repr_bind_attr_int rx477_cur, rx477_curclass, "$!pos", rx477_pos
    $P11 = rx477_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx477_curclass, "$!pos"
    lt $I11, 0, rx477_fail971
    repr_get_attr_int rx477_pos, $P11, rx477_curclass, "$!pos"
  alt479_end978:
    repr_bind_attr_int rx477_cur, rx477_curclass, "$!pos", rx477_pos
    $P11 = rx477_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx477_curclass, "$!pos"
    lt $I11, 0, rx477_fail971
    repr_get_attr_int rx477_pos, $P11, rx477_curclass, "$!pos"
    repr_bind_attr_int rx477_cur, rx477_curclass, "$!pos", rx477_pos
    $P11 = rx477_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx477_curclass, "$!pos"
    lt $I11, 0, rx477_fail971
    nqp_rxmark rx477_bstack, rxsubrule482_pass983, -1, 0
  rxsubrule482_pass983:
    rx477_cstack = rx477_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx477_pos, $P11, rx477_curclass, "$!pos"
    rx477_cur."!cursor_pass"(rx477_pos, "block", 'backtrack'=>1)
    .return (rx477_cur)
  rx477_restart970:
    repr_get_attr_obj rx477_cstack, rx477_cur, rx477_curclass, "$!cstack"
  rx477_fail971:
    unless rx477_bstack, rx477_done969
    pop $I19, rx477_bstack
    if_null rx477_cstack, rx477_cstack_done974
    unless rx477_cstack, rx477_cstack_done974
    dec $I19
    set $P11, rx477_cstack[$I19]
  rx477_cstack_done974:
    pop rx477_rep, rx477_bstack
    pop rx477_pos, rx477_bstack
    pop $I19, rx477_bstack
    lt rx477_pos, -1, rx477_done969
    lt rx477_pos, 0, rx477_fail971
    eq $I19, 0, rx477_fail971
    nqp_islist $I20, rx477_cstack
    unless $I20, rx477_jump972
    elements $I18, rx477_bstack
    le $I18, 0, rx477_cut973
    dec $I18
    set $I18, rx477_bstack[$I18]
  rx477_cut973:
    assign rx477_cstack, $I18
  rx477_jump972:
    jump $I19
  rx477_done969:
    rx477_cur."!cursor_fail"()
    .return (rx477_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 828
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_108 
    .local pmc pkg_viv_tmp_24 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx483_start
    .local string rx483_tgt
    .local int rx483_pos
    .local int rx483_off
    .local int rx483_eos
    .local int rx483_rep
    .local pmc rx483_cur
    .local pmc rx483_curclass
    .local pmc rx483_bstack
    .local pmc rx483_cstack
    rx483_start = self."!cursor_start_all"()
    set rx483_cur, rx483_start[0]
    set rx483_tgt, rx483_start[1]
    set rx483_pos, rx483_start[2]
    set rx483_curclass, rx483_start[3]
    set rx483_bstack, rx483_start[4]
    set $I19, rx483_start[5]
    store_lex unicode:"$\x{a2}", rx483_cur
    length rx483_eos, rx483_tgt
    eq $I19, 1, rx483_restart986
    gt rx483_pos, rx483_eos, rx483_fail987
    repr_get_attr_int $I11, self, rx483_curclass, "$!from"
    ne $I11, -1, rxscan484_done993
    goto rxscan484_scan992
  rxscan484_loop991:
    inc rx483_pos
    gt rx483_pos, rx483_eos, rx483_fail987
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!from", rx483_pos
  rxscan484_scan992:
    nqp_rxmark rx483_bstack, rxscan484_loop991, rx483_pos, 0
  rxscan484_done993:
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    store_lex unicode:"$\x{a2}", rx483_cur
    unless_null $P101, fallback994
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_108, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_108
    unless $I5001 goto if485_else995 
    set $P5004, fb_tmp_108["%HANDLERS"]
    set $P5006, $P5004
    goto if485_end996
  if485_else995:
    null $P5005
    set $P5006, $P5005
  if485_end996:
    unless_null $P5006, vivi_486997
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_486997:
    unless_null $P5006, vivi_487998
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_487998:
    set $P101, $P5006
  fallback994:
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail987
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
  alt489_01001:
    nqp_rxmark rx483_bstack, alt489_11003, rx483_pos, 0
    add $I11, rx483_pos, 14
    gt $I11, rx483_eos, rx483_fail987
    substr $S10, rx483_tgt, rx483_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx483_fail987
    add rx483_pos, 14
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail987
    nqp_rxmark rx483_bstack, rxsubrule490_pass1002, -1, 0
  rxsubrule490_pass1002:
    rx483_cstack = rx483_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
    goto alt489_end1000
  alt489_11003:
    add $I11, rx483_pos, 1
    gt $I11, rx483_eos, rx483_fail987
    substr $S10, rx483_tgt, rx483_pos, 1
    ne $S10, ucs4:"{", rx483_fail987
    add rx483_pos, 1
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail987
    nqp_rxmark rx483_bstack, rxsubrule491_pass1004, -1, 0
  rxsubrule491_pass1004:
    rx483_cstack = rx483_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
  alt492_01006:
    nqp_rxmark rx483_bstack, alt492_11007, rx483_pos, 0
    add $I11, rx483_pos, 1
    gt $I11, rx483_eos, rx483_fail987
    substr $S10, rx483_tgt, rx483_pos, 1
    ne $S10, ucs4:"}", rx483_fail987
    add rx483_pos, 1
    goto alt492_end1005
  alt492_11007:
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail987
    goto rxsubrule493_pass1008
  rxsubrule493_back1009:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail987
  rxsubrule493_pass1008:
    rx483_cstack = rx483_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule493_back1009
    push rx483_bstack, $I11
    push rx483_bstack, 0
    push rx483_bstack, rx483_pos
    elements $I11, rx483_cstack
    push rx483_bstack, $I11
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
  alt492_end1005:
  alt489_end1000:
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail987
    rx483_cur."!cursor_pass"(rx483_pos, "blockoid", 'backtrack'=>1)
    .return (rx483_cur)
  rx483_restart986:
    repr_get_attr_obj rx483_cstack, rx483_cur, rx483_curclass, "$!cstack"
  rx483_fail987:
    unless rx483_bstack, rx483_done985
    pop $I19, rx483_bstack
    if_null rx483_cstack, rx483_cstack_done990
    unless rx483_cstack, rx483_cstack_done990
    dec $I19
    set $P11, rx483_cstack[$I19]
  rx483_cstack_done990:
    pop rx483_rep, rx483_bstack
    pop rx483_pos, rx483_bstack
    pop $I19, rx483_bstack
    lt rx483_pos, -1, rx483_done985
    lt rx483_pos, 0, rx483_fail987
    eq $I19, 0, rx483_fail987
    nqp_islist $I20, rx483_cstack
    unless $I20, rx483_jump988
    elements $I18, rx483_bstack
    le $I18, 0, rx483_cut989
    dec $I18
    set $I18, rx483_bstack[$I18]
  rx483_cut989:
    assign rx483_cstack, $I18
  rx483_jump988:
    jump $I19
  rx483_done985:
    rx483_cur."!cursor_fail"()
    .return (rx483_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 838
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx494_start
    .local string rx494_tgt
    .local int rx494_pos
    .local int rx494_off
    .local int rx494_eos
    .local int rx494_rep
    .local pmc rx494_cur
    .local pmc rx494_curclass
    .local pmc rx494_bstack
    .local pmc rx494_cstack
    rx494_start = self."!cursor_start_all"()
    set rx494_cur, rx494_start[0]
    set rx494_tgt, rx494_start[1]
    set rx494_pos, rx494_start[2]
    set rx494_curclass, rx494_start[3]
    set rx494_bstack, rx494_start[4]
    set $I19, rx494_start[5]
    store_lex unicode:"$\x{a2}", rx494_cur
    length rx494_eos, rx494_tgt
    eq $I19, 1, rx494_restart1012
    gt rx494_pos, rx494_eos, rx494_fail1013
    repr_get_attr_int $I11, self, rx494_curclass, "$!from"
    ne $I11, -1, rxscan495_done1019
    goto rxscan495_scan1018
  rxscan495_loop1017:
    inc rx494_pos
    gt rx494_pos, rx494_eos, rx494_fail1013
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!from", rx494_pos
  rxscan495_scan1018:
    nqp_rxmark rx494_bstack, rxscan495_loop1017, rx494_pos, 0
  rxscan495_done1019:
    rx494_cur."!cursor_pass"(rx494_pos, "newpad", 'backtrack'=>1)
    .return (rx494_cur)
  rx494_restart1012:
    repr_get_attr_obj rx494_cstack, rx494_cur, rx494_curclass, "$!cstack"
  rx494_fail1013:
    unless rx494_bstack, rx494_done1011
    pop $I19, rx494_bstack
    if_null rx494_cstack, rx494_cstack_done1016
    unless rx494_cstack, rx494_cstack_done1016
    dec $I19
    set $P11, rx494_cstack[$I19]
  rx494_cstack_done1016:
    pop rx494_rep, rx494_bstack
    pop rx494_pos, rx494_bstack
    pop $I19, rx494_bstack
    lt rx494_pos, -1, rx494_done1011
    lt rx494_pos, 0, rx494_fail1013
    eq $I19, 0, rx494_fail1013
    nqp_islist $I20, rx494_cstack
    unless $I20, rx494_jump1014
    elements $I18, rx494_bstack
    le $I18, 0, rx494_cut1015
    dec $I18
    set $I18, rx494_bstack[$I18]
  rx494_cut1015:
    assign rx494_cstack, $I18
  rx494_jump1014:
    jump $I19
  rx494_done1011:
    rx494_cur."!cursor_fail"()
    .return (rx494_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 839
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx497_start
    .local string rx497_tgt
    .local int rx497_pos
    .local int rx497_off
    .local int rx497_eos
    .local int rx497_rep
    .local pmc rx497_cur
    .local pmc rx497_curclass
    .local pmc rx497_bstack
    .local pmc rx497_cstack
    rx497_start = self."!cursor_start_all"()
    set rx497_cur, rx497_start[0]
    set rx497_tgt, rx497_start[1]
    set rx497_pos, rx497_start[2]
    set rx497_curclass, rx497_start[3]
    set rx497_bstack, rx497_start[4]
    set $I19, rx497_start[5]
    store_lex unicode:"$\x{a2}", rx497_cur
    length rx497_eos, rx497_tgt
    eq $I19, 1, rx497_restart1023
    gt rx497_pos, rx497_eos, rx497_fail1024
    repr_get_attr_int $I11, self, rx497_curclass, "$!from"
    ne $I11, -1, rxscan498_done1030
    goto rxscan498_scan1029
  rxscan498_loop1028:
    inc rx497_pos
    gt rx497_pos, rx497_eos, rx497_fail1024
    repr_bind_attr_int rx497_cur, rx497_curclass, "$!from", rx497_pos
  rxscan498_scan1029:
    nqp_rxmark rx497_bstack, rxscan498_loop1028, rx497_pos, 0
  rxscan498_done1030:
    rx497_cur."!cursor_pass"(rx497_pos, "outerctx", 'backtrack'=>1)
    .return (rx497_cur)
  rx497_restart1023:
    repr_get_attr_obj rx497_cstack, rx497_cur, rx497_curclass, "$!cstack"
  rx497_fail1024:
    unless rx497_bstack, rx497_done1022
    pop $I19, rx497_bstack
    if_null rx497_cstack, rx497_cstack_done1027
    unless rx497_cstack, rx497_cstack_done1027
    dec $I19
    set $P11, rx497_cstack[$I19]
  rx497_cstack_done1027:
    pop rx497_rep, rx497_bstack
    pop rx497_pos, rx497_bstack
    pop $I19, rx497_bstack
    lt rx497_pos, -1, rx497_done1022
    lt rx497_pos, 0, rx497_fail1024
    eq $I19, 0, rx497_fail1024
    nqp_islist $I20, rx497_cstack
    unless $I20, rx497_jump1025
    elements $I18, rx497_bstack
    le $I18, 0, rx497_cut1026
    dec $I18
    set $I18, rx497_bstack[$I18]
  rx497_cut1026:
    assign rx497_cstack, $I18
  rx497_jump1025:
    jump $I19
  rx497_done1022:
    rx497_cur."!cursor_fail"()
    .return (rx497_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 840
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx500_start
    .local string rx500_tgt
    .local int rx500_pos
    .local int rx500_off
    .local int rx500_eos
    .local int rx500_rep
    .local pmc rx500_cur
    .local pmc rx500_curclass
    .local pmc rx500_bstack
    .local pmc rx500_cstack
    rx500_start = self."!cursor_start_all"()
    set rx500_cur, rx500_start[0]
    set rx500_tgt, rx500_start[1]
    set rx500_pos, rx500_start[2]
    set rx500_curclass, rx500_start[3]
    set rx500_bstack, rx500_start[4]
    set $I19, rx500_start[5]
    store_lex unicode:"$\x{a2}", rx500_cur
    length rx500_eos, rx500_tgt
    eq $I19, 1, rx500_restart1034
    gt rx500_pos, rx500_eos, rx500_fail1035
    repr_get_attr_int $I11, self, rx500_curclass, "$!from"
    ne $I11, -1, rxscan501_done1041
    goto rxscan501_scan1040
  rxscan501_loop1039:
    inc rx500_pos
    gt rx500_pos, rx500_eos, rx500_fail1035
    repr_bind_attr_int rx500_cur, rx500_curclass, "$!from", rx500_pos
  rxscan501_scan1040:
    nqp_rxmark rx500_bstack, rxscan501_loop1039, rx500_pos, 0
  rxscan501_done1041:
    rx500_cur."!cursor_pass"(rx500_pos, "finishpad", 'backtrack'=>1)
    .return (rx500_cur)
  rx500_restart1034:
    repr_get_attr_obj rx500_cstack, rx500_cur, rx500_curclass, "$!cstack"
  rx500_fail1035:
    unless rx500_bstack, rx500_done1033
    pop $I19, rx500_bstack
    if_null rx500_cstack, rx500_cstack_done1038
    unless rx500_cstack, rx500_cstack_done1038
    dec $I19
    set $P11, rx500_cstack[$I19]
  rx500_cstack_done1038:
    pop rx500_rep, rx500_bstack
    pop rx500_pos, rx500_bstack
    pop $I19, rx500_bstack
    lt rx500_pos, -1, rx500_done1033
    lt rx500_pos, 0, rx500_fail1035
    eq $I19, 0, rx500_fail1035
    nqp_islist $I20, rx500_cstack
    unless $I20, rx500_jump1036
    elements $I18, rx500_bstack
    le $I18, 0, rx500_cut1037
    dec $I18
    set $I18, rx500_bstack[$I18]
  rx500_cut1037:
    assign rx500_cstack, $I18
  rx500_jump1036:
    jump $I19
  rx500_done1033:
    rx500_cur."!cursor_fail"()
    .return (rx500_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 841
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx503_start
    .local string rx503_tgt
    .local int rx503_pos
    .local int rx503_off
    .local int rx503_eos
    .local int rx503_rep
    .local pmc rx503_cur
    .local pmc rx503_curclass
    .local pmc rx503_bstack
    .local pmc rx503_cstack
    rx503_start = self."!cursor_start_all"()
    set rx503_cur, rx503_start[0]
    set rx503_tgt, rx503_start[1]
    set rx503_pos, rx503_start[2]
    set rx503_curclass, rx503_start[3]
    set rx503_bstack, rx503_start[4]
    set $I19, rx503_start[5]
    store_lex unicode:"$\x{a2}", rx503_cur
    length rx503_eos, rx503_tgt
    eq $I19, 1, rx503_restart1045
    gt rx503_pos, rx503_eos, rx503_fail1046
    repr_get_attr_int $I11, self, rx503_curclass, "$!from"
    ne $I11, -1, rxscan504_done1052
    goto rxscan504_scan1051
  rxscan504_loop1050:
    inc rx503_pos
    gt rx503_pos, rx503_eos, rx503_fail1046
    repr_bind_attr_int rx503_cur, rx503_curclass, "$!from", rx503_pos
  rxscan504_scan1051:
    nqp_rxmark rx503_bstack, rxscan504_loop1050, rx503_pos, 0
  rxscan504_done1052:
    rx503_cur."!cursor_pass"(rx503_pos, "you_are_here", 'backtrack'=>1)
    .return (rx503_cur)
  rx503_restart1045:
    repr_get_attr_obj rx503_cstack, rx503_cur, rx503_curclass, "$!cstack"
  rx503_fail1046:
    unless rx503_bstack, rx503_done1044
    pop $I19, rx503_bstack
    if_null rx503_cstack, rx503_cstack_done1049
    unless rx503_cstack, rx503_cstack_done1049
    dec $I19
    set $P11, rx503_cstack[$I19]
  rx503_cstack_done1049:
    pop rx503_rep, rx503_bstack
    pop rx503_pos, rx503_bstack
    pop $I19, rx503_bstack
    lt rx503_pos, -1, rx503_done1044
    lt rx503_pos, 0, rx503_fail1046
    eq $I19, 0, rx503_fail1046
    nqp_islist $I20, rx503_cstack
    unless $I20, rx503_jump1047
    elements $I18, rx503_bstack
    le $I18, 0, rx503_cut1048
    dec $I18
    set $I18, rx503_bstack[$I18]
  rx503_cut1048:
    assign rx503_cstack, $I18
  rx503_jump1047:
    jump $I19
  rx503_done1044:
    rx503_cur."!cursor_fail"()
    .return (rx503_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 843
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 845
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx506_start
    .local string rx506_tgt
    .local int rx506_pos
    .local int rx506_off
    .local int rx506_eos
    .local int rx506_rep
    .local pmc rx506_cur
    .local pmc rx506_curclass
    .local pmc rx506_bstack
    .local pmc rx506_cstack
    rx506_start = self."!cursor_start_all"()
    set rx506_cur, rx506_start[0]
    set rx506_tgt, rx506_start[1]
    set rx506_pos, rx506_start[2]
    set rx506_curclass, rx506_start[3]
    set rx506_bstack, rx506_start[4]
    set $I19, rx506_start[5]
    store_lex unicode:"$\x{a2}", rx506_cur
    length rx506_eos, rx506_tgt
    eq $I19, 1, rx506_restart1056
    gt rx506_pos, rx506_eos, rx506_fail1057
    repr_get_attr_int $I11, self, rx506_curclass, "$!from"
    ne $I11, -1, rxscan507_done1063
    goto rxscan507_scan1062
  rxscan507_loop1061:
    inc rx506_pos
    gt rx506_pos, rx506_eos, rx506_fail1057
    repr_bind_attr_int rx506_cur, rx506_curclass, "$!from", rx506_pos
  rxscan507_scan1062:
    nqp_rxmark rx506_bstack, rxscan507_loop1061, rx506_pos, 0
  rxscan507_done1063:
    ge rx506_pos, rx506_eos, rx506_fail1057
    substr $S11, rx506_tgt, rx506_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx506_fail1057
    rx506_cur."!cursor_pass"(rx506_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx506_cur)
  rx506_restart1056:
    repr_get_attr_obj rx506_cstack, rx506_cur, rx506_curclass, "$!cstack"
  rx506_fail1057:
    unless rx506_bstack, rx506_done1055
    pop $I19, rx506_bstack
    if_null rx506_cstack, rx506_cstack_done1060
    unless rx506_cstack, rx506_cstack_done1060
    dec $I19
    set $P11, rx506_cstack[$I19]
  rx506_cstack_done1060:
    pop rx506_rep, rx506_bstack
    pop rx506_pos, rx506_bstack
    pop $I19, rx506_bstack
    lt rx506_pos, -1, rx506_done1055
    lt rx506_pos, 0, rx506_fail1057
    eq $I19, 0, rx506_fail1057
    nqp_islist $I20, rx506_cstack
    unless $I20, rx506_jump1058
    elements $I18, rx506_bstack
    le $I18, 0, rx506_cut1059
    dec $I18
    set $I18, rx506_bstack[$I18]
  rx506_cut1059:
    assign rx506_cstack, $I18
  rx506_jump1058:
    jump $I19
  rx506_done1055:
    rx506_cur."!cursor_fail"()
    .return (rx506_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 846
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx508_start
    .local string rx508_tgt
    .local int rx508_pos
    .local int rx508_off
    .local int rx508_eos
    .local int rx508_rep
    .local pmc rx508_cur
    .local pmc rx508_curclass
    .local pmc rx508_bstack
    .local pmc rx508_cstack
    rx508_start = self."!cursor_start_all"()
    set rx508_cur, rx508_start[0]
    set rx508_tgt, rx508_start[1]
    set rx508_pos, rx508_start[2]
    set rx508_curclass, rx508_start[3]
    set rx508_bstack, rx508_start[4]
    set $I19, rx508_start[5]
    store_lex unicode:"$\x{a2}", rx508_cur
    length rx508_eos, rx508_tgt
    eq $I19, 1, rx508_restart1066
    gt rx508_pos, rx508_eos, rx508_fail1067
    repr_get_attr_int $I11, self, rx508_curclass, "$!from"
    ne $I11, -1, rxscan509_done1073
    goto rxscan509_scan1072
  rxscan509_loop1071:
    inc rx508_pos
    gt rx508_pos, rx508_eos, rx508_fail1067
    repr_bind_attr_int rx508_cur, rx508_curclass, "$!from", rx508_pos
  rxscan509_scan1072:
    nqp_rxmark rx508_bstack, rxscan509_loop1071, rx508_pos, 0
  rxscan509_done1073:
    ge rx508_pos, rx508_eos, rx508_fail1067
    substr $S11, rx508_tgt, rx508_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx508_fail1067
    rx508_cur."!cursor_pass"(rx508_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx508_cur)
  rx508_restart1066:
    repr_get_attr_obj rx508_cstack, rx508_cur, rx508_curclass, "$!cstack"
  rx508_fail1067:
    unless rx508_bstack, rx508_done1065
    pop $I19, rx508_bstack
    if_null rx508_cstack, rx508_cstack_done1070
    unless rx508_cstack, rx508_cstack_done1070
    dec $I19
    set $P11, rx508_cstack[$I19]
  rx508_cstack_done1070:
    pop rx508_rep, rx508_bstack
    pop rx508_pos, rx508_bstack
    pop $I19, rx508_bstack
    lt rx508_pos, -1, rx508_done1065
    lt rx508_pos, 0, rx508_fail1067
    eq $I19, 0, rx508_fail1067
    nqp_islist $I20, rx508_cstack
    unless $I20, rx508_jump1068
    elements $I18, rx508_bstack
    le $I18, 0, rx508_cut1069
    dec $I18
    set $I18, rx508_bstack[$I18]
  rx508_cut1069:
    assign rx508_cstack, $I18
  rx508_jump1068:
    jump $I19
  rx508_done1065:
    rx508_cur."!cursor_fail"()
    .return (rx508_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 850
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 852
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx510_start
    .local string rx510_tgt
    .local int rx510_pos
    .local int rx510_off
    .local int rx510_eos
    .local int rx510_rep
    .local pmc rx510_cur
    .local pmc rx510_curclass
    .local pmc rx510_bstack
    .local pmc rx510_cstack
    rx510_start = self."!cursor_start_all"()
    set rx510_cur, rx510_start[0]
    set rx510_tgt, rx510_start[1]
    set rx510_pos, rx510_start[2]
    set rx510_curclass, rx510_start[3]
    set rx510_bstack, rx510_start[4]
    set $I19, rx510_start[5]
    store_lex unicode:"$\x{a2}", rx510_cur
    length rx510_eos, rx510_tgt
    eq $I19, 1, rx510_restart1076
    gt rx510_pos, rx510_eos, rx510_fail1077
    repr_get_attr_int $I11, self, rx510_curclass, "$!from"
    ne $I11, -1, rxscan511_done1083
    goto rxscan511_scan1082
  rxscan511_loop1081:
    inc rx510_pos
    gt rx510_pos, rx510_eos, rx510_fail1077
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!from", rx510_pos
  rxscan511_scan1082:
    nqp_rxmark rx510_bstack, rxscan511_loop1081, rx510_pos, 0
  rxscan511_done1083:
    nqp_rxmark rx510_bstack, rxcap512_fail1085, rx510_pos, 0
    add $I11, rx510_pos, 3
    gt $I11, rx510_eos, rx510_fail1077
    substr $S10, rx510_tgt, rx510_pos, 3
    ne $S10, ucs4:"use", rx510_fail1077
    add rx510_pos, 3
    nqp_rxpeek $I19, rx510_bstack, rxcap512_fail1085
    inc $I19
    set $I11, rx510_bstack[$I19]
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!pos", rx510_pos
    $P11 = rx510_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx510_pos)
    rx510_cstack = rx510_cur."!cursor_capture"($P11, "sym")
    goto rxcap512_done1084
  rxcap512_fail1085:
    goto rx510_fail1077
  rxcap512_done1084:
    ge rx510_pos, rx510_eos, rx510_fail1077
    is_cclass $I11, .CCLASS_WHITESPACE, rx510_tgt, rx510_pos
    unless $I11, rx510_fail1077
    add rx510_pos, 1
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!pos", rx510_pos
    $P11 = rx510_cur."ws"()
    repr_get_attr_int $I11, $P11, rx510_curclass, "$!pos"
    lt $I11, 0, rx510_fail1077
    repr_get_attr_int rx510_pos, $P11, rx510_curclass, "$!pos"
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!pos", rx510_pos
    $P11 = rx510_cur."name"()
    repr_get_attr_int $I11, $P11, rx510_curclass, "$!pos"
    lt $I11, 0, rx510_fail1077
    nqp_rxmark rx510_bstack, rxsubrule514_pass1087, -1, 0
  rxsubrule514_pass1087:
    rx510_cstack = rx510_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx510_pos, $P11, rx510_curclass, "$!pos"
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!pos", rx510_pos
    $P11 = rx510_cur."ws"()
    repr_get_attr_int $I11, $P11, rx510_curclass, "$!pos"
    lt $I11, 0, rx510_fail1077
    repr_get_attr_int rx510_pos, $P11, rx510_curclass, "$!pos"
    rx510_cur."!cursor_pass"(rx510_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx510_cur)
  rx510_restart1076:
    repr_get_attr_obj rx510_cstack, rx510_cur, rx510_curclass, "$!cstack"
  rx510_fail1077:
    unless rx510_bstack, rx510_done1075
    pop $I19, rx510_bstack
    if_null rx510_cstack, rx510_cstack_done1080
    unless rx510_cstack, rx510_cstack_done1080
    dec $I19
    set $P11, rx510_cstack[$I19]
  rx510_cstack_done1080:
    pop rx510_rep, rx510_bstack
    pop rx510_pos, rx510_bstack
    pop $I19, rx510_bstack
    lt rx510_pos, -1, rx510_done1075
    lt rx510_pos, 0, rx510_fail1077
    eq $I19, 0, rx510_fail1077
    nqp_islist $I20, rx510_cstack
    unless $I20, rx510_jump1078
    elements $I18, rx510_bstack
    le $I18, 0, rx510_cut1079
    dec $I18
    set $I18, rx510_bstack[$I18]
  rx510_cut1079:
    assign rx510_cstack, $I18
  rx510_jump1078:
    jump $I19
  rx510_done1075:
    rx510_cur."!cursor_fail"()
    .return (rx510_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 856
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx516_start
    .local string rx516_tgt
    .local int rx516_pos
    .local int rx516_off
    .local int rx516_eos
    .local int rx516_rep
    .local pmc rx516_cur
    .local pmc rx516_curclass
    .local pmc rx516_bstack
    .local pmc rx516_cstack
    rx516_start = self."!cursor_start_all"()
    set rx516_cur, rx516_start[0]
    set rx516_tgt, rx516_start[1]
    set rx516_pos, rx516_start[2]
    set rx516_curclass, rx516_start[3]
    set rx516_bstack, rx516_start[4]
    set $I19, rx516_start[5]
    store_lex unicode:"$\x{a2}", rx516_cur
    length rx516_eos, rx516_tgt
    eq $I19, 1, rx516_restart1091
    gt rx516_pos, rx516_eos, rx516_fail1092
    repr_get_attr_int $I11, self, rx516_curclass, "$!from"
    ne $I11, -1, rxscan517_done1098
    goto rxscan517_scan1097
  rxscan517_loop1096:
    inc rx516_pos
    gt rx516_pos, rx516_eos, rx516_fail1092
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!from", rx516_pos
  rxscan517_scan1097:
    nqp_rxmark rx516_bstack, rxscan517_loop1096, rx516_pos, 0
  rxscan517_done1098:
    nqp_rxmark rx516_bstack, rxcap518_fail1100, rx516_pos, 0
    add $I11, rx516_pos, 2
    gt $I11, rx516_eos, rx516_fail1092
    substr $S10, rx516_tgt, rx516_pos, 2
    ne $S10, ucs4:"if", rx516_fail1092
    add rx516_pos, 2
    nqp_rxpeek $I19, rx516_bstack, rxcap518_fail1100
    inc $I19
    set $I11, rx516_bstack[$I19]
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx516_pos)
    rx516_cstack = rx516_cur."!cursor_capture"($P11, "sym")
    goto rxcap518_done1099
  rxcap518_fail1100:
    goto rx516_fail1092
  rxcap518_done1099:
    ge rx516_pos, rx516_eos, rx516_fail1092
    is_cclass $I11, .CCLASS_WHITESPACE, rx516_tgt, rx516_pos
    unless $I11, rx516_fail1092
    add rx516_pos, 1
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    nqp_rxmark rx516_bstack, rxsubrule520_pass1102, -1, 0
  rxsubrule520_pass1102:
    rx516_cstack = rx516_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    nqp_rxmark rx516_bstack, rxquantr522_done1105, rx516_pos, 0
  rxquantr522_loop1104:
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    add $I11, rx516_pos, 5
    gt $I11, rx516_eos, rx516_fail1092
    substr $S10, rx516_tgt, rx516_pos, 5
    ne $S10, ucs4:"elsif", rx516_fail1092
    add rx516_pos, 5
    ge rx516_pos, rx516_eos, rx516_fail1092
    is_cclass $I11, .CCLASS_WHITESPACE, rx516_tgt, rx516_pos
    unless $I11, rx516_fail1092
    add rx516_pos, 1
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    nqp_rxmark rx516_bstack, rxsubrule525_pass1108, -1, 0
  rxsubrule525_pass1108:
    rx516_cstack = rx516_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    nqp_rxpeek $I19, rx516_bstack, rxquantr522_done1105
    inc $I19
    inc $I19
    set rx516_rep, rx516_bstack[$I19]
    nqp_rxcommit rx516_bstack, rxquantr522_done1105
    inc rx516_rep
    nqp_rxmark rx516_bstack, rxquantr522_done1105, rx516_pos, rx516_rep
    goto rxquantr522_loop1104
  rxquantr522_done1105:
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    nqp_rxmark rx516_bstack, rxquantr528_done1112, rx516_pos, 0
  rxquantr528_loop1111:
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    add $I11, rx516_pos, 4
    gt $I11, rx516_eos, rx516_fail1092
    substr $S10, rx516_tgt, rx516_pos, 4
    ne $S10, ucs4:"else", rx516_fail1092
    add rx516_pos, 4
    ge rx516_pos, rx516_eos, rx516_fail1092
    is_cclass $I11, .CCLASS_WHITESPACE, rx516_tgt, rx516_pos
    unless $I11, rx516_fail1092
    add rx516_pos, 1
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    nqp_rxmark rx516_bstack, rxsubrule531_pass1115, -1, 0
  rxsubrule531_pass1115:
    rx516_cstack = rx516_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    nqp_rxpeek $I19, rx516_bstack, rxquantr528_done1112
    inc $I19
    inc $I19
    set rx516_rep, rx516_bstack[$I19]
    nqp_rxcommit rx516_bstack, rxquantr528_done1112
    inc rx516_rep
  rxquantr528_done1112:
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1092
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    rx516_cur."!cursor_pass"(rx516_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx516_cur)
  rx516_restart1091:
    repr_get_attr_obj rx516_cstack, rx516_cur, rx516_curclass, "$!cstack"
  rx516_fail1092:
    unless rx516_bstack, rx516_done1090
    pop $I19, rx516_bstack
    if_null rx516_cstack, rx516_cstack_done1095
    unless rx516_cstack, rx516_cstack_done1095
    dec $I19
    set $P11, rx516_cstack[$I19]
  rx516_cstack_done1095:
    pop rx516_rep, rx516_bstack
    pop rx516_pos, rx516_bstack
    pop $I19, rx516_bstack
    lt rx516_pos, -1, rx516_done1090
    lt rx516_pos, 0, rx516_fail1092
    eq $I19, 0, rx516_fail1092
    nqp_islist $I20, rx516_cstack
    unless $I20, rx516_jump1093
    elements $I18, rx516_bstack
    le $I18, 0, rx516_cut1094
    dec $I18
    set $I18, rx516_bstack[$I18]
  rx516_cut1094:
    assign rx516_cstack, $I18
  rx516_jump1093:
    jump $I19
  rx516_done1090:
    rx516_cur."!cursor_fail"()
    .return (rx516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 863
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1381944288.90674' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx534_start
    .local string rx534_tgt
    .local int rx534_pos
    .local int rx534_off
    .local int rx534_eos
    .local int rx534_rep
    .local pmc rx534_cur
    .local pmc rx534_curclass
    .local pmc rx534_bstack
    .local pmc rx534_cstack
    rx534_start = self."!cursor_start_all"()
    set rx534_cur, rx534_start[0]
    set rx534_tgt, rx534_start[1]
    set rx534_pos, rx534_start[2]
    set rx534_curclass, rx534_start[3]
    set rx534_bstack, rx534_start[4]
    set $I19, rx534_start[5]
    store_lex unicode:"$\x{a2}", rx534_cur
    length rx534_eos, rx534_tgt
    eq $I19, 1, rx534_restart1120
    gt rx534_pos, rx534_eos, rx534_fail1121
    repr_get_attr_int $I11, self, rx534_curclass, "$!from"
    ne $I11, -1, rxscan535_done1127
    goto rxscan535_scan1126
  rxscan535_loop1125:
    inc rx534_pos
    gt rx534_pos, rx534_eos, rx534_fail1121
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!from", rx534_pos
  rxscan535_scan1126:
    nqp_rxmark rx534_bstack, rxscan535_loop1125, rx534_pos, 0
  rxscan535_done1127:
    nqp_rxmark rx534_bstack, rxcap536_fail1129, rx534_pos, 0
    add $I11, rx534_pos, 6
    gt $I11, rx534_eos, rx534_fail1121
    substr $S10, rx534_tgt, rx534_pos, 6
    ne $S10, ucs4:"unless", rx534_fail1121
    add rx534_pos, 6
    nqp_rxpeek $I19, rx534_bstack, rxcap536_fail1129
    inc $I19
    set $I11, rx534_bstack[$I19]
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx534_pos)
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "sym")
    goto rxcap536_done1128
  rxcap536_fail1129:
    goto rx534_fail1121
  rxcap536_done1128:
    ge rx534_pos, rx534_eos, rx534_fail1121
    is_cclass $I11, .CCLASS_WHITESPACE, rx534_tgt, rx534_pos
    unless $I11, rx534_fail1121
    add rx534_pos, 1
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    nqp_rxmark rx534_bstack, rxsubrule538_pass1131, -1, 0
  rxsubrule538_pass1131:
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
  alt540_01134:
    nqp_rxmark rx534_bstack, alt540_11147, rx534_pos, 0
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1381944288.90674' 
    capture_lex $P5001
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    ge $I11, 0, rx534_fail1121
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    goto alt540_end1133
  alt540_11147:
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
  alt540_end1133:
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1121
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    rx534_cur."!cursor_pass"(rx534_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx534_cur)
  rx534_restart1120:
    repr_get_attr_obj rx534_cstack, rx534_cur, rx534_curclass, "$!cstack"
  rx534_fail1121:
    unless rx534_bstack, rx534_done1119
    pop $I19, rx534_bstack
    if_null rx534_cstack, rx534_cstack_done1124
    unless rx534_cstack, rx534_cstack_done1124
    dec $I19
    set $P11, rx534_cstack[$I19]
  rx534_cstack_done1124:
    pop rx534_rep, rx534_bstack
    pop rx534_pos, rx534_bstack
    pop $I19, rx534_bstack
    lt rx534_pos, -1, rx534_done1119
    lt rx534_pos, 0, rx534_fail1121
    eq $I19, 0, rx534_fail1121
    nqp_islist $I20, rx534_cstack
    unless $I20, rx534_jump1122
    elements $I18, rx534_bstack
    le $I18, 0, rx534_cut1123
    dec $I18
    set $I18, rx534_bstack[$I18]
  rx534_cut1123:
    assign rx534_cstack, $I18
  rx534_jump1122:
    jump $I19
  rx534_done1119:
    rx534_cur."!cursor_fail"()
    .return (rx534_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1381944288.90674") :anon :lex :outer("cuid_65_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx542_start
    .local string rx542_tgt
    .local int rx542_pos
    .local int rx542_off
    .local int rx542_eos
    .local int rx542_rep
    .local pmc rx542_cur
    .local pmc rx542_curclass
    .local pmc rx542_bstack
    .local pmc rx542_cstack
    rx542_start = self."!cursor_start_all"()
    set rx542_cur, rx542_start[0]
    set rx542_tgt, rx542_start[1]
    set rx542_pos, rx542_start[2]
    set rx542_curclass, rx542_start[3]
    set rx542_bstack, rx542_start[4]
    set $I19, rx542_start[5]
    store_lex unicode:"$\x{a2}", rx542_cur
    length rx542_eos, rx542_tgt
    eq $I19, 1, rx542_restart1138
    gt rx542_pos, rx542_eos, rx542_fail1139
    repr_get_attr_int $I11, self, rx542_curclass, "$!from"
    ne $I11, -1, rxscan543_done1145
    goto rxscan543_scan1144
  rxscan543_loop1143:
    inc rx542_pos
    gt rx542_pos, rx542_eos, rx542_fail1139
    repr_bind_attr_int rx542_cur, rx542_curclass, "$!from", rx542_pos
  rxscan543_scan1144:
    nqp_rxmark rx542_bstack, rxscan543_loop1143, rx542_pos, 0
  rxscan543_done1145:
    add $I11, rx542_pos, 4
    gt $I11, rx542_eos, rx542_fail1139
    substr $S10, rx542_tgt, rx542_pos, 4
    ne $S10, ucs4:"else", rx542_fail1139
    add rx542_pos, 4
    rx542_cur."!cursor_pass"(rx542_pos, 'backtrack'=>1)
    .return (rx542_cur)
  rx542_restart1138:
    repr_get_attr_obj rx542_cstack, rx542_cur, rx542_curclass, "$!cstack"
  rx542_fail1139:
    unless rx542_bstack, rx542_done1137
    pop $I19, rx542_bstack
    if_null rx542_cstack, rx542_cstack_done1142
    unless rx542_cstack, rx542_cstack_done1142
    dec $I19
    set $P11, rx542_cstack[$I19]
  rx542_cstack_done1142:
    pop rx542_rep, rx542_bstack
    pop rx542_pos, rx542_bstack
    pop $I19, rx542_bstack
    lt rx542_pos, -1, rx542_done1137
    lt rx542_pos, 0, rx542_fail1139
    eq $I19, 0, rx542_fail1139
    nqp_islist $I20, rx542_cstack
    unless $I20, rx542_jump1140
    elements $I18, rx542_bstack
    le $I18, 0, rx542_cut1141
    dec $I18
    set $I18, rx542_bstack[$I18]
  rx542_cut1141:
    assign rx542_cstack, $I18
  rx542_jump1140:
    jump $I19
  rx542_done1137:
    rx542_cur."!cursor_fail"()
    .return (rx542_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 869
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx549_start
    .local string rx549_tgt
    .local int rx549_pos
    .local int rx549_off
    .local int rx549_eos
    .local int rx549_rep
    .local pmc rx549_cur
    .local pmc rx549_curclass
    .local pmc rx549_bstack
    .local pmc rx549_cstack
    rx549_start = self."!cursor_start_all"()
    set rx549_cur, rx549_start[0]
    set rx549_tgt, rx549_start[1]
    set rx549_pos, rx549_start[2]
    set rx549_curclass, rx549_start[3]
    set rx549_bstack, rx549_start[4]
    set $I19, rx549_start[5]
    store_lex unicode:"$\x{a2}", rx549_cur
    length rx549_eos, rx549_tgt
    eq $I19, 1, rx549_restart1154
    gt rx549_pos, rx549_eos, rx549_fail1155
    repr_get_attr_int $I11, self, rx549_curclass, "$!from"
    ne $I11, -1, rxscan550_done1161
    goto rxscan550_scan1160
  rxscan550_loop1159:
    inc rx549_pos
    gt rx549_pos, rx549_eos, rx549_fail1155
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!from", rx549_pos
  rxscan550_scan1160:
    nqp_rxmark rx549_bstack, rxscan550_loop1159, rx549_pos, 0
  rxscan550_done1161:
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    store_lex unicode:"$\x{a2}", rx549_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx549_bstack, rxcap551_fail1163, rx549_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt552_01165
    nqp_push_label $P11, alt552_11166
    nqp_rxmark rx549_bstack, alt552_end1164, -1, 0
    rx549_cur."!alt"(rx549_pos, "alt_nfa__12_1381944291.1296", $P11)
    goto rx549_fail1155
  alt552_01165:
    add $I11, rx549_pos, 5
    gt $I11, rx549_eos, rx549_fail1155
    substr $S10, rx549_tgt, rx549_pos, 5
    ne $S10, ucs4:"while", rx549_fail1155
    add rx549_pos, 5
    goto alt552_end1164
  alt552_11166:
    add $I11, rx549_pos, 5
    gt $I11, rx549_eos, rx549_fail1155
    substr $S10, rx549_tgt, rx549_pos, 5
    ne $S10, ucs4:"until", rx549_fail1155
    add rx549_pos, 5
    goto alt552_end1164
  alt552_end1164:
    nqp_rxcommit rx549_bstack, alt552_end1164
    nqp_rxpeek $I19, rx549_bstack, rxcap551_fail1163
    inc $I19
    set $I11, rx549_bstack[$I19]
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx549_pos)
    rx549_cstack = rx549_cur."!cursor_capture"($P11, "sym")
    goto rxcap551_done1162
  rxcap551_fail1163:
    goto rx549_fail1155
  rxcap551_done1162:
    ge rx549_pos, rx549_eos, rx549_fail1155
    is_cclass $I11, .CCLASS_WHITESPACE, rx549_tgt, rx549_pos
    unless $I11, rx549_fail1155
    add rx549_pos, 1
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."ws"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1155
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1155
    nqp_rxmark rx549_bstack, rxsubrule554_pass1168, -1, 0
  rxsubrule554_pass1168:
    rx549_cstack = rx549_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."ws"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1155
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    rx549_cur."!cursor_pass"(rx549_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx549_cur)
  rx549_restart1154:
    repr_get_attr_obj rx549_cstack, rx549_cur, rx549_curclass, "$!cstack"
  rx549_fail1155:
    unless rx549_bstack, rx549_done1153
    pop $I19, rx549_bstack
    if_null rx549_cstack, rx549_cstack_done1158
    unless rx549_cstack, rx549_cstack_done1158
    dec $I19
    set $P11, rx549_cstack[$I19]
  rx549_cstack_done1158:
    pop rx549_rep, rx549_bstack
    pop rx549_pos, rx549_bstack
    pop $I19, rx549_bstack
    lt rx549_pos, -1, rx549_done1153
    lt rx549_pos, 0, rx549_fail1155
    eq $I19, 0, rx549_fail1155
    nqp_islist $I20, rx549_cstack
    unless $I20, rx549_jump1156
    elements $I18, rx549_bstack
    le $I18, 0, rx549_cut1157
    dec $I18
    set $I18, rx549_bstack[$I18]
  rx549_cut1157:
    assign rx549_cstack, $I18
  rx549_jump1156:
    jump $I19
  rx549_done1153:
    rx549_cur."!cursor_fail"()
    .return (rx549_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 875
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx556_start
    .local string rx556_tgt
    .local int rx556_pos
    .local int rx556_off
    .local int rx556_eos
    .local int rx556_rep
    .local pmc rx556_cur
    .local pmc rx556_curclass
    .local pmc rx556_bstack
    .local pmc rx556_cstack
    rx556_start = self."!cursor_start_all"()
    set rx556_cur, rx556_start[0]
    set rx556_tgt, rx556_start[1]
    set rx556_pos, rx556_start[2]
    set rx556_curclass, rx556_start[3]
    set rx556_bstack, rx556_start[4]
    set $I19, rx556_start[5]
    store_lex unicode:"$\x{a2}", rx556_cur
    length rx556_eos, rx556_tgt
    eq $I19, 1, rx556_restart1172
    gt rx556_pos, rx556_eos, rx556_fail1173
    repr_get_attr_int $I11, self, rx556_curclass, "$!from"
    ne $I11, -1, rxscan557_done1179
    goto rxscan557_scan1178
  rxscan557_loop1177:
    inc rx556_pos
    gt rx556_pos, rx556_eos, rx556_fail1173
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!from", rx556_pos
  rxscan557_scan1178:
    nqp_rxmark rx556_bstack, rxscan557_loop1177, rx556_pos, 0
  rxscan557_done1179:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    store_lex unicode:"$\x{a2}", rx556_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx556_bstack, rxcap558_fail1181, rx556_pos, 0
    add $I11, rx556_pos, 6
    gt $I11, rx556_eos, rx556_fail1173
    substr $S10, rx556_tgt, rx556_pos, 6
    ne $S10, ucs4:"repeat", rx556_fail1173
    add rx556_pos, 6
    nqp_rxpeek $I19, rx556_bstack, rxcap558_fail1181
    inc $I19
    set $I11, rx556_bstack[$I19]
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx556_pos)
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "sym")
    goto rxcap558_done1180
  rxcap558_fail1181:
    goto rx556_fail1173
  rxcap558_done1180:
    ge rx556_pos, rx556_eos, rx556_fail1173
    is_cclass $I11, .CCLASS_WHITESPACE, rx556_tgt, rx556_pos
    unless $I11, rx556_fail1173
    add rx556_pos, 1
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt560_01184
    nqp_push_label $P11, alt560_11194
    nqp_rxmark rx556_bstack, alt560_end1183, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__15_1381944291.15817", $P11)
    goto rx556_fail1173
  alt560_01184:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    nqp_rxmark rx556_bstack, rxcap562_fail1187, rx556_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt563_01189
    nqp_push_label $P11, alt563_11190
    nqp_rxmark rx556_bstack, alt563_end1188, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__13_1381944291.15743", $P11)
    goto rx556_fail1173
  alt563_01189:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1173
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"while", rx556_fail1173
    add rx556_pos, 5
    goto alt563_end1188
  alt563_11190:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1173
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"until", rx556_fail1173
    add rx556_pos, 5
    goto alt563_end1188
  alt563_end1188:
    nqp_rxcommit rx556_bstack, alt563_end1188
    nqp_rxpeek $I19, rx556_bstack, rxcap562_fail1187
    inc $I19
    set $I11, rx556_bstack[$I19]
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx556_pos)
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "wu")
    goto rxcap562_done1186
  rxcap562_fail1187:
    goto rx556_fail1173
  rxcap562_done1186:
    ge rx556_pos, rx556_eos, rx556_fail1173
    is_cclass $I11, .CCLASS_WHITESPACE, rx556_tgt, rx556_pos
    unless $I11, rx556_fail1173
    add rx556_pos, 1
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    nqp_rxmark rx556_bstack, rxsubrule565_pass1192, -1, 0
  rxsubrule565_pass1192:
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    goto alt560_end1183
  alt560_11194:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    nqp_rxmark rx556_bstack, rxsubrule568_pass1196, -1, 0
  rxsubrule568_pass1196:
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    nqp_rxmark rx556_bstack, rxcap570_fail1199, rx556_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt571_01201
    nqp_push_label $P11, alt571_11202
    nqp_rxmark rx556_bstack, alt571_end1200, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__14_1381944291.15792", $P11)
    goto rx556_fail1173
  alt571_01201:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1173
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"while", rx556_fail1173
    add rx556_pos, 5
    goto alt571_end1200
  alt571_11202:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1173
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"until", rx556_fail1173
    add rx556_pos, 5
    goto alt571_end1200
  alt571_end1200:
    nqp_rxcommit rx556_bstack, alt571_end1200
    nqp_rxpeek $I19, rx556_bstack, rxcap570_fail1199
    inc $I19
    set $I11, rx556_bstack[$I19]
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx556_pos)
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "wu")
    goto rxcap570_done1198
  rxcap570_fail1199:
    goto rx556_fail1173
  rxcap570_done1198:
    ge rx556_pos, rx556_eos, rx556_fail1173
    is_cclass $I11, .CCLASS_WHITESPACE, rx556_tgt, rx556_pos
    unless $I11, rx556_fail1173
    add rx556_pos, 1
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    nqp_rxmark rx556_bstack, rxsubrule573_pass1204, -1, 0
  rxsubrule573_pass1204:
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    goto alt560_end1183
  alt560_end1183:
    nqp_rxcommit rx556_bstack, alt560_end1183
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1173
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    rx556_cur."!cursor_pass"(rx556_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx556_cur)
  rx556_restart1172:
    repr_get_attr_obj rx556_cstack, rx556_cur, rx556_curclass, "$!cstack"
  rx556_fail1173:
    unless rx556_bstack, rx556_done1171
    pop $I19, rx556_bstack
    if_null rx556_cstack, rx556_cstack_done1176
    unless rx556_cstack, rx556_cstack_done1176
    dec $I19
    set $P11, rx556_cstack[$I19]
  rx556_cstack_done1176:
    pop rx556_rep, rx556_bstack
    pop rx556_pos, rx556_bstack
    pop $I19, rx556_bstack
    lt rx556_pos, -1, rx556_done1171
    lt rx556_pos, 0, rx556_fail1173
    eq $I19, 0, rx556_fail1173
    nqp_islist $I20, rx556_cstack
    unless $I20, rx556_jump1174
    elements $I18, rx556_bstack
    le $I18, 0, rx556_cut1175
    dec $I18
    set $I18, rx556_bstack[$I18]
  rx556_cut1175:
    assign rx556_cstack, $I18
  rx556_jump1174:
    jump $I19
  rx556_done1171:
    rx556_cur."!cursor_fail"()
    .return (rx556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 884
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx576_start
    .local string rx576_tgt
    .local int rx576_pos
    .local int rx576_off
    .local int rx576_eos
    .local int rx576_rep
    .local pmc rx576_cur
    .local pmc rx576_curclass
    .local pmc rx576_bstack
    .local pmc rx576_cstack
    rx576_start = self."!cursor_start_all"()
    set rx576_cur, rx576_start[0]
    set rx576_tgt, rx576_start[1]
    set rx576_pos, rx576_start[2]
    set rx576_curclass, rx576_start[3]
    set rx576_bstack, rx576_start[4]
    set $I19, rx576_start[5]
    store_lex unicode:"$\x{a2}", rx576_cur
    length rx576_eos, rx576_tgt
    eq $I19, 1, rx576_restart1209
    gt rx576_pos, rx576_eos, rx576_fail1210
    repr_get_attr_int $I11, self, rx576_curclass, "$!from"
    ne $I11, -1, rxscan577_done1216
    goto rxscan577_scan1215
  rxscan577_loop1214:
    inc rx576_pos
    gt rx576_pos, rx576_eos, rx576_fail1210
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!from", rx576_pos
  rxscan577_scan1215:
    nqp_rxmark rx576_bstack, rxscan577_loop1214, rx576_pos, 0
  rxscan577_done1216:
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    store_lex unicode:"$\x{a2}", rx576_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx576_bstack, rxcap578_fail1218, rx576_pos, 0
    add $I11, rx576_pos, 3
    gt $I11, rx576_eos, rx576_fail1210
    substr $S10, rx576_tgt, rx576_pos, 3
    ne $S10, ucs4:"for", rx576_fail1210
    add rx576_pos, 3
    nqp_rxpeek $I19, rx576_bstack, rxcap578_fail1218
    inc $I19
    set $I11, rx576_bstack[$I19]
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx576_pos)
    rx576_cstack = rx576_cur."!cursor_capture"($P11, "sym")
    goto rxcap578_done1217
  rxcap578_fail1218:
    goto rx576_fail1210
  rxcap578_done1217:
    ge rx576_pos, rx576_eos, rx576_fail1210
    is_cclass $I11, .CCLASS_WHITESPACE, rx576_tgt, rx576_pos
    unless $I11, rx576_fail1210
    add rx576_pos, 1
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."ws"()
    repr_get_attr_int $I11, $P11, rx576_curclass, "$!pos"
    lt $I11, 0, rx576_fail1210
    repr_get_attr_int rx576_pos, $P11, rx576_curclass, "$!pos"
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx576_curclass, "$!pos"
    lt $I11, 0, rx576_fail1210
    nqp_rxmark rx576_bstack, rxsubrule580_pass1220, -1, 0
  rxsubrule580_pass1220:
    rx576_cstack = rx576_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx576_pos, $P11, rx576_curclass, "$!pos"
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."ws"()
    repr_get_attr_int $I11, $P11, rx576_curclass, "$!pos"
    lt $I11, 0, rx576_fail1210
    repr_get_attr_int rx576_pos, $P11, rx576_curclass, "$!pos"
    rx576_cur."!cursor_pass"(rx576_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx576_cur)
  rx576_restart1209:
    repr_get_attr_obj rx576_cstack, rx576_cur, rx576_curclass, "$!cstack"
  rx576_fail1210:
    unless rx576_bstack, rx576_done1208
    pop $I19, rx576_bstack
    if_null rx576_cstack, rx576_cstack_done1213
    unless rx576_cstack, rx576_cstack_done1213
    dec $I19
    set $P11, rx576_cstack[$I19]
  rx576_cstack_done1213:
    pop rx576_rep, rx576_bstack
    pop rx576_pos, rx576_bstack
    pop $I19, rx576_bstack
    lt rx576_pos, -1, rx576_done1208
    lt rx576_pos, 0, rx576_fail1210
    eq $I19, 0, rx576_fail1210
    nqp_islist $I20, rx576_cstack
    unless $I20, rx576_jump1211
    elements $I18, rx576_bstack
    le $I18, 0, rx576_cut1212
    dec $I18
    set $I18, rx576_bstack[$I18]
  rx576_cut1212:
    assign rx576_cstack, $I18
  rx576_jump1211:
    jump $I19
  rx576_done1208:
    rx576_cur."!cursor_fail"()
    .return (rx576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 890
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx582_start
    .local string rx582_tgt
    .local int rx582_pos
    .local int rx582_off
    .local int rx582_eos
    .local int rx582_rep
    .local pmc rx582_cur
    .local pmc rx582_curclass
    .local pmc rx582_bstack
    .local pmc rx582_cstack
    rx582_start = self."!cursor_start_all"()
    set rx582_cur, rx582_start[0]
    set rx582_tgt, rx582_start[1]
    set rx582_pos, rx582_start[2]
    set rx582_curclass, rx582_start[3]
    set rx582_bstack, rx582_start[4]
    set $I19, rx582_start[5]
    store_lex unicode:"$\x{a2}", rx582_cur
    length rx582_eos, rx582_tgt
    eq $I19, 1, rx582_restart1224
    gt rx582_pos, rx582_eos, rx582_fail1225
    repr_get_attr_int $I11, self, rx582_curclass, "$!from"
    ne $I11, -1, rxscan583_done1231
    goto rxscan583_scan1230
  rxscan583_loop1229:
    inc rx582_pos
    gt rx582_pos, rx582_eos, rx582_fail1225
    repr_bind_attr_int rx582_cur, rx582_curclass, "$!from", rx582_pos
  rxscan583_scan1230:
    nqp_rxmark rx582_bstack, rxscan583_loop1229, rx582_pos, 0
  rxscan583_done1231:
    nqp_rxmark rx582_bstack, rxcap584_fail1233, rx582_pos, 0
    add $I11, rx582_pos, 5
    gt $I11, rx582_eos, rx582_fail1225
    substr $S10, rx582_tgt, rx582_pos, 5
    ne $S10, ucs4:"CATCH", rx582_fail1225
    add rx582_pos, 5
    nqp_rxpeek $I19, rx582_bstack, rxcap584_fail1233
    inc $I19
    set $I11, rx582_bstack[$I19]
    repr_bind_attr_int rx582_cur, rx582_curclass, "$!pos", rx582_pos
    $P11 = rx582_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx582_pos)
    rx582_cstack = rx582_cur."!cursor_capture"($P11, "sym")
    goto rxcap584_done1232
  rxcap584_fail1233:
    goto rx582_fail1225
  rxcap584_done1232:
    ge rx582_pos, rx582_eos, rx582_fail1225
    is_cclass $I11, .CCLASS_WHITESPACE, rx582_tgt, rx582_pos
    unless $I11, rx582_fail1225
    add rx582_pos, 1
    repr_bind_attr_int rx582_cur, rx582_curclass, "$!pos", rx582_pos
    $P11 = rx582_cur."ws"()
    repr_get_attr_int $I11, $P11, rx582_curclass, "$!pos"
    lt $I11, 0, rx582_fail1225
    repr_get_attr_int rx582_pos, $P11, rx582_curclass, "$!pos"
    repr_bind_attr_int rx582_cur, rx582_curclass, "$!pos", rx582_pos
    $P11 = rx582_cur."block"()
    repr_get_attr_int $I11, $P11, rx582_curclass, "$!pos"
    lt $I11, 0, rx582_fail1225
    nqp_rxmark rx582_bstack, rxsubrule586_pass1235, -1, 0
  rxsubrule586_pass1235:
    rx582_cstack = rx582_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx582_pos, $P11, rx582_curclass, "$!pos"
    repr_bind_attr_int rx582_cur, rx582_curclass, "$!pos", rx582_pos
    $P11 = rx582_cur."ws"()
    repr_get_attr_int $I11, $P11, rx582_curclass, "$!pos"
    lt $I11, 0, rx582_fail1225
    repr_get_attr_int rx582_pos, $P11, rx582_curclass, "$!pos"
    rx582_cur."!cursor_pass"(rx582_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx582_cur)
  rx582_restart1224:
    repr_get_attr_obj rx582_cstack, rx582_cur, rx582_curclass, "$!cstack"
  rx582_fail1225:
    unless rx582_bstack, rx582_done1223
    pop $I19, rx582_bstack
    if_null rx582_cstack, rx582_cstack_done1228
    unless rx582_cstack, rx582_cstack_done1228
    dec $I19
    set $P11, rx582_cstack[$I19]
  rx582_cstack_done1228:
    pop rx582_rep, rx582_bstack
    pop rx582_pos, rx582_bstack
    pop $I19, rx582_bstack
    lt rx582_pos, -1, rx582_done1223
    lt rx582_pos, 0, rx582_fail1225
    eq $I19, 0, rx582_fail1225
    nqp_islist $I20, rx582_cstack
    unless $I20, rx582_jump1226
    elements $I18, rx582_bstack
    le $I18, 0, rx582_cut1227
    dec $I18
    set $I18, rx582_bstack[$I18]
  rx582_cut1227:
    assign rx582_cstack, $I18
  rx582_jump1226:
    jump $I19
  rx582_done1223:
    rx582_cur."!cursor_fail"()
    .return (rx582_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 895
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx588_start
    .local string rx588_tgt
    .local int rx588_pos
    .local int rx588_off
    .local int rx588_eos
    .local int rx588_rep
    .local pmc rx588_cur
    .local pmc rx588_curclass
    .local pmc rx588_bstack
    .local pmc rx588_cstack
    rx588_start = self."!cursor_start_all"()
    set rx588_cur, rx588_start[0]
    set rx588_tgt, rx588_start[1]
    set rx588_pos, rx588_start[2]
    set rx588_curclass, rx588_start[3]
    set rx588_bstack, rx588_start[4]
    set $I19, rx588_start[5]
    store_lex unicode:"$\x{a2}", rx588_cur
    length rx588_eos, rx588_tgt
    eq $I19, 1, rx588_restart1239
    gt rx588_pos, rx588_eos, rx588_fail1240
    repr_get_attr_int $I11, self, rx588_curclass, "$!from"
    ne $I11, -1, rxscan589_done1246
    goto rxscan589_scan1245
  rxscan589_loop1244:
    inc rx588_pos
    gt rx588_pos, rx588_eos, rx588_fail1240
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!from", rx588_pos
  rxscan589_scan1245:
    nqp_rxmark rx588_bstack, rxscan589_loop1244, rx588_pos, 0
  rxscan589_done1246:
    nqp_rxmark rx588_bstack, rxcap590_fail1248, rx588_pos, 0
    add $I11, rx588_pos, 7
    gt $I11, rx588_eos, rx588_fail1240
    substr $S10, rx588_tgt, rx588_pos, 7
    ne $S10, ucs4:"CONTROL", rx588_fail1240
    add rx588_pos, 7
    nqp_rxpeek $I19, rx588_bstack, rxcap590_fail1248
    inc $I19
    set $I11, rx588_bstack[$I19]
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx588_pos)
    rx588_cstack = rx588_cur."!cursor_capture"($P11, "sym")
    goto rxcap590_done1247
  rxcap590_fail1248:
    goto rx588_fail1240
  rxcap590_done1247:
    ge rx588_pos, rx588_eos, rx588_fail1240
    is_cclass $I11, .CCLASS_WHITESPACE, rx588_tgt, rx588_pos
    unless $I11, rx588_fail1240
    add rx588_pos, 1
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."ws"()
    repr_get_attr_int $I11, $P11, rx588_curclass, "$!pos"
    lt $I11, 0, rx588_fail1240
    repr_get_attr_int rx588_pos, $P11, rx588_curclass, "$!pos"
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."block"()
    repr_get_attr_int $I11, $P11, rx588_curclass, "$!pos"
    lt $I11, 0, rx588_fail1240
    nqp_rxmark rx588_bstack, rxsubrule592_pass1250, -1, 0
  rxsubrule592_pass1250:
    rx588_cstack = rx588_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx588_pos, $P11, rx588_curclass, "$!pos"
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."ws"()
    repr_get_attr_int $I11, $P11, rx588_curclass, "$!pos"
    lt $I11, 0, rx588_fail1240
    repr_get_attr_int rx588_pos, $P11, rx588_curclass, "$!pos"
    rx588_cur."!cursor_pass"(rx588_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx588_cur)
  rx588_restart1239:
    repr_get_attr_obj rx588_cstack, rx588_cur, rx588_curclass, "$!cstack"
  rx588_fail1240:
    unless rx588_bstack, rx588_done1238
    pop $I19, rx588_bstack
    if_null rx588_cstack, rx588_cstack_done1243
    unless rx588_cstack, rx588_cstack_done1243
    dec $I19
    set $P11, rx588_cstack[$I19]
  rx588_cstack_done1243:
    pop rx588_rep, rx588_bstack
    pop rx588_pos, rx588_bstack
    pop $I19, rx588_bstack
    lt rx588_pos, -1, rx588_done1238
    lt rx588_pos, 0, rx588_fail1240
    eq $I19, 0, rx588_fail1240
    nqp_islist $I20, rx588_cstack
    unless $I20, rx588_jump1241
    elements $I18, rx588_bstack
    le $I18, 0, rx588_cut1242
    dec $I18
    set $I18, rx588_bstack[$I18]
  rx588_cut1242:
    assign rx588_cstack, $I18
  rx588_jump1241:
    jump $I19
  rx588_done1238:
    rx588_cur."!cursor_fail"()
    .return (rx588_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 900
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 901
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx594_start
    .local string rx594_tgt
    .local int rx594_pos
    .local int rx594_off
    .local int rx594_eos
    .local int rx594_rep
    .local pmc rx594_cur
    .local pmc rx594_curclass
    .local pmc rx594_bstack
    .local pmc rx594_cstack
    rx594_start = self."!cursor_start_all"()
    set rx594_cur, rx594_start[0]
    set rx594_tgt, rx594_start[1]
    set rx594_pos, rx594_start[2]
    set rx594_curclass, rx594_start[3]
    set rx594_bstack, rx594_start[4]
    set $I19, rx594_start[5]
    store_lex unicode:"$\x{a2}", rx594_cur
    length rx594_eos, rx594_tgt
    eq $I19, 1, rx594_restart1254
    gt rx594_pos, rx594_eos, rx594_fail1255
    repr_get_attr_int $I11, self, rx594_curclass, "$!from"
    ne $I11, -1, rxscan595_done1261
    goto rxscan595_scan1260
  rxscan595_loop1259:
    inc rx594_pos
    gt rx594_pos, rx594_eos, rx594_fail1255
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!from", rx594_pos
  rxscan595_scan1260:
    nqp_rxmark rx594_bstack, rxscan595_loop1259, rx594_pos, 0
  rxscan595_done1261:
    nqp_rxmark rx594_bstack, rxcap596_fail1263, rx594_pos, 0
    add $I11, rx594_pos, 5
    gt $I11, rx594_eos, rx594_fail1255
    substr $S10, rx594_tgt, rx594_pos, 5
    ne $S10, ucs4:"BEGIN", rx594_fail1255
    add rx594_pos, 5
    nqp_rxpeek $I19, rx594_bstack, rxcap596_fail1263
    inc $I19
    set $I11, rx594_bstack[$I19]
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!pos", rx594_pos
    $P11 = rx594_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx594_pos)
    rx594_cstack = rx594_cur."!cursor_capture"($P11, "sym")
    goto rxcap596_done1262
  rxcap596_fail1263:
    goto rx594_fail1255
  rxcap596_done1262:
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!pos", rx594_pos
    $P11 = rx594_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx594_curclass, "$!pos"
    lt $I11, 0, rx594_fail1255
    nqp_rxmark rx594_bstack, rxsubrule597_pass1264, -1, 0
  rxsubrule597_pass1264:
    rx594_cstack = rx594_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx594_pos, $P11, rx594_curclass, "$!pos"
    rx594_cur."!cursor_pass"(rx594_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx594_cur)
  rx594_restart1254:
    repr_get_attr_obj rx594_cstack, rx594_cur, rx594_curclass, "$!cstack"
  rx594_fail1255:
    unless rx594_bstack, rx594_done1253
    pop $I19, rx594_bstack
    if_null rx594_cstack, rx594_cstack_done1258
    unless rx594_cstack, rx594_cstack_done1258
    dec $I19
    set $P11, rx594_cstack[$I19]
  rx594_cstack_done1258:
    pop rx594_rep, rx594_bstack
    pop rx594_pos, rx594_bstack
    pop $I19, rx594_bstack
    lt rx594_pos, -1, rx594_done1253
    lt rx594_pos, 0, rx594_fail1255
    eq $I19, 0, rx594_fail1255
    nqp_islist $I20, rx594_cstack
    unless $I20, rx594_jump1256
    elements $I18, rx594_bstack
    le $I18, 0, rx594_cut1257
    dec $I18
    set $I18, rx594_bstack[$I18]
  rx594_cut1257:
    assign rx594_cstack, $I18
  rx594_jump1256:
    jump $I19
  rx594_done1253:
    rx594_cur."!cursor_fail"()
    .return (rx594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 902
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx598_start
    .local string rx598_tgt
    .local int rx598_pos
    .local int rx598_off
    .local int rx598_eos
    .local int rx598_rep
    .local pmc rx598_cur
    .local pmc rx598_curclass
    .local pmc rx598_bstack
    .local pmc rx598_cstack
    rx598_start = self."!cursor_start_all"()
    set rx598_cur, rx598_start[0]
    set rx598_tgt, rx598_start[1]
    set rx598_pos, rx598_start[2]
    set rx598_curclass, rx598_start[3]
    set rx598_bstack, rx598_start[4]
    set $I19, rx598_start[5]
    store_lex unicode:"$\x{a2}", rx598_cur
    length rx598_eos, rx598_tgt
    eq $I19, 1, rx598_restart1267
    gt rx598_pos, rx598_eos, rx598_fail1268
    repr_get_attr_int $I11, self, rx598_curclass, "$!from"
    ne $I11, -1, rxscan599_done1274
    goto rxscan599_scan1273
  rxscan599_loop1272:
    inc rx598_pos
    gt rx598_pos, rx598_eos, rx598_fail1268
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!from", rx598_pos
  rxscan599_scan1273:
    nqp_rxmark rx598_bstack, rxscan599_loop1272, rx598_pos, 0
  rxscan599_done1274:
    nqp_rxmark rx598_bstack, rxcap600_fail1276, rx598_pos, 0
    add $I11, rx598_pos, 4
    gt $I11, rx598_eos, rx598_fail1268
    substr $S10, rx598_tgt, rx598_pos, 4
    ne $S10, ucs4:"INIT", rx598_fail1268
    add rx598_pos, 4
    nqp_rxpeek $I19, rx598_bstack, rxcap600_fail1276
    inc $I19
    set $I11, rx598_bstack[$I19]
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx598_pos)
    rx598_cstack = rx598_cur."!cursor_capture"($P11, "sym")
    goto rxcap600_done1275
  rxcap600_fail1276:
    goto rx598_fail1268
  rxcap600_done1275:
    repr_bind_attr_int rx598_cur, rx598_curclass, "$!pos", rx598_pos
    $P11 = rx598_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx598_curclass, "$!pos"
    lt $I11, 0, rx598_fail1268
    nqp_rxmark rx598_bstack, rxsubrule601_pass1277, -1, 0
  rxsubrule601_pass1277:
    rx598_cstack = rx598_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx598_pos, $P11, rx598_curclass, "$!pos"
    rx598_cur."!cursor_pass"(rx598_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx598_cur)
  rx598_restart1267:
    repr_get_attr_obj rx598_cstack, rx598_cur, rx598_curclass, "$!cstack"
  rx598_fail1268:
    unless rx598_bstack, rx598_done1266
    pop $I19, rx598_bstack
    if_null rx598_cstack, rx598_cstack_done1271
    unless rx598_cstack, rx598_cstack_done1271
    dec $I19
    set $P11, rx598_cstack[$I19]
  rx598_cstack_done1271:
    pop rx598_rep, rx598_bstack
    pop rx598_pos, rx598_bstack
    pop $I19, rx598_bstack
    lt rx598_pos, -1, rx598_done1266
    lt rx598_pos, 0, rx598_fail1268
    eq $I19, 0, rx598_fail1268
    nqp_islist $I20, rx598_cstack
    unless $I20, rx598_jump1269
    elements $I18, rx598_bstack
    le $I18, 0, rx598_cut1270
    dec $I18
    set $I18, rx598_bstack[$I18]
  rx598_cut1270:
    assign rx598_cstack, $I18
  rx598_jump1269:
    jump $I19
  rx598_done1266:
    rx598_cur."!cursor_fail"()
    .return (rx598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 904
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx602_start
    .local string rx602_tgt
    .local int rx602_pos
    .local int rx602_off
    .local int rx602_eos
    .local int rx602_rep
    .local pmc rx602_cur
    .local pmc rx602_curclass
    .local pmc rx602_bstack
    .local pmc rx602_cstack
    rx602_start = self."!cursor_start_all"()
    set rx602_cur, rx602_start[0]
    set rx602_tgt, rx602_start[1]
    set rx602_pos, rx602_start[2]
    set rx602_curclass, rx602_start[3]
    set rx602_bstack, rx602_start[4]
    set $I19, rx602_start[5]
    store_lex unicode:"$\x{a2}", rx602_cur
    length rx602_eos, rx602_tgt
    eq $I19, 1, rx602_restart1280
    gt rx602_pos, rx602_eos, rx602_fail1281
    repr_get_attr_int $I11, self, rx602_curclass, "$!from"
    ne $I11, -1, rxscan603_done1287
    goto rxscan603_scan1286
  rxscan603_loop1285:
    inc rx602_pos
    gt rx602_pos, rx602_eos, rx602_fail1281
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!from", rx602_pos
  rxscan603_scan1286:
    nqp_rxmark rx602_bstack, rxscan603_loop1285, rx602_pos, 0
  rxscan603_done1287:
    nqp_rxmark rx602_bstack, rxcap604_fail1289, rx602_pos, 0
    add $I11, rx602_pos, 3
    gt $I11, rx602_eos, rx602_fail1281
    substr $S10, rx602_tgt, rx602_pos, 3
    ne $S10, ucs4:"try", rx602_fail1281
    add rx602_pos, 3
    nqp_rxpeek $I19, rx602_bstack, rxcap604_fail1289
    inc $I19
    set $I11, rx602_bstack[$I19]
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!pos", rx602_pos
    $P11 = rx602_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx602_pos)
    rx602_cstack = rx602_cur."!cursor_capture"($P11, "sym")
    goto rxcap604_done1288
  rxcap604_fail1289:
    goto rx602_fail1281
  rxcap604_done1288:
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!pos", rx602_pos
    $P11 = rx602_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx602_curclass, "$!pos"
    lt $I11, 0, rx602_fail1281
    nqp_rxmark rx602_bstack, rxsubrule605_pass1290, -1, 0
  rxsubrule605_pass1290:
    rx602_cstack = rx602_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx602_pos, $P11, rx602_curclass, "$!pos"
    rx602_cur."!cursor_pass"(rx602_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx602_cur)
  rx602_restart1280:
    repr_get_attr_obj rx602_cstack, rx602_cur, rx602_curclass, "$!cstack"
  rx602_fail1281:
    unless rx602_bstack, rx602_done1279
    pop $I19, rx602_bstack
    if_null rx602_cstack, rx602_cstack_done1284
    unless rx602_cstack, rx602_cstack_done1284
    dec $I19
    set $P11, rx602_cstack[$I19]
  rx602_cstack_done1284:
    pop rx602_rep, rx602_bstack
    pop rx602_pos, rx602_bstack
    pop $I19, rx602_bstack
    lt rx602_pos, -1, rx602_done1279
    lt rx602_pos, 0, rx602_fail1281
    eq $I19, 0, rx602_fail1281
    nqp_islist $I20, rx602_cstack
    unless $I20, rx602_jump1282
    elements $I18, rx602_bstack
    le $I18, 0, rx602_cut1283
    dec $I18
    set $I18, rx602_bstack[$I18]
  rx602_cut1283:
    assign rx602_cstack, $I18
  rx602_jump1282:
    jump $I19
  rx602_done1279:
    rx602_cur."!cursor_fail"()
    .return (rx602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 909
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx606_start
    .local string rx606_tgt
    .local int rx606_pos
    .local int rx606_off
    .local int rx606_eos
    .local int rx606_rep
    .local pmc rx606_cur
    .local pmc rx606_curclass
    .local pmc rx606_bstack
    .local pmc rx606_cstack
    rx606_start = self."!cursor_start_all"()
    set rx606_cur, rx606_start[0]
    set rx606_tgt, rx606_start[1]
    set rx606_pos, rx606_start[2]
    set rx606_curclass, rx606_start[3]
    set rx606_bstack, rx606_start[4]
    set $I19, rx606_start[5]
    store_lex unicode:"$\x{a2}", rx606_cur
    length rx606_eos, rx606_tgt
    eq $I19, 1, rx606_restart1293
    gt rx606_pos, rx606_eos, rx606_fail1294
    repr_get_attr_int $I11, self, rx606_curclass, "$!from"
    ne $I11, -1, rxscan607_done1300
    goto rxscan607_scan1299
  rxscan607_loop1298:
    inc rx606_pos
    gt rx606_pos, rx606_eos, rx606_fail1294
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!from", rx606_pos
  rxscan607_scan1299:
    nqp_rxmark rx606_bstack, rxscan607_loop1298, rx606_pos, 0
  rxscan607_done1300:
    ge rx606_pos, rx606_eos, rx606_fail1294
    is_cclass $I11, .CCLASS_WHITESPACE, rx606_tgt, rx606_pos
    unless $I11, rx606_fail1294
    add rx606_pos, 1
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."ws"()
    repr_get_attr_int $I11, $P11, rx606_curclass, "$!pos"
    lt $I11, 0, rx606_fail1294
    repr_get_attr_int rx606_pos, $P11, rx606_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt609_01303
    nqp_push_label $P11, alt609_11305
    nqp_rxmark rx606_bstack, alt609_end1302, -1, 0
    rx606_cur."!alt"(rx606_pos, "alt_nfa__16_1381944291.22086", $P11)
    goto rx606_fail1294
  alt609_01303:
    ge rx606_pos, rx606_eos, rx606_fail1294
    substr $S11, rx606_tgt, rx606_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx606_fail1294
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."block"()
    repr_get_attr_int $I11, $P11, rx606_curclass, "$!pos"
    lt $I11, 0, rx606_fail1294
    nqp_rxmark rx606_bstack, rxsubrule610_pass1304, -1, 0
  rxsubrule610_pass1304:
    rx606_cstack = rx606_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx606_pos, $P11, rx606_curclass, "$!pos"
    goto alt609_end1302
  alt609_11305:
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."statement"()
    repr_get_attr_int $I11, $P11, rx606_curclass, "$!pos"
    lt $I11, 0, rx606_fail1294
    nqp_rxmark rx606_bstack, rxsubrule611_pass1306, -1, 0
  rxsubrule611_pass1306:
    rx606_cstack = rx606_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx606_pos, $P11, rx606_curclass, "$!pos"
    goto alt609_end1302
  alt609_end1302:
    nqp_rxcommit rx606_bstack, alt609_end1302
    rx606_cur."!cursor_pass"(rx606_pos, "blorst", 'backtrack'=>1)
    .return (rx606_cur)
  rx606_restart1293:
    repr_get_attr_obj rx606_cstack, rx606_cur, rx606_curclass, "$!cstack"
  rx606_fail1294:
    unless rx606_bstack, rx606_done1292
    pop $I19, rx606_bstack
    if_null rx606_cstack, rx606_cstack_done1297
    unless rx606_cstack, rx606_cstack_done1297
    dec $I19
    set $P11, rx606_cstack[$I19]
  rx606_cstack_done1297:
    pop rx606_rep, rx606_bstack
    pop rx606_pos, rx606_bstack
    pop $I19, rx606_bstack
    lt rx606_pos, -1, rx606_done1292
    lt rx606_pos, 0, rx606_fail1294
    eq $I19, 0, rx606_fail1294
    nqp_islist $I20, rx606_cstack
    unless $I20, rx606_jump1295
    elements $I18, rx606_bstack
    le $I18, 0, rx606_cut1296
    dec $I18
    set $I18, rx606_bstack[$I18]
  rx606_cut1296:
    assign rx606_cstack, $I18
  rx606_jump1295:
    jump $I19
  rx606_done1292:
    rx606_cur."!cursor_fail"()
    .return (rx606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 915
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 917
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx612_start
    .local string rx612_tgt
    .local int rx612_pos
    .local int rx612_off
    .local int rx612_eos
    .local int rx612_rep
    .local pmc rx612_cur
    .local pmc rx612_curclass
    .local pmc rx612_bstack
    .local pmc rx612_cstack
    rx612_start = self."!cursor_start_all"()
    set rx612_cur, rx612_start[0]
    set rx612_tgt, rx612_start[1]
    set rx612_pos, rx612_start[2]
    set rx612_curclass, rx612_start[3]
    set rx612_bstack, rx612_start[4]
    set $I19, rx612_start[5]
    store_lex unicode:"$\x{a2}", rx612_cur
    length rx612_eos, rx612_tgt
    eq $I19, 1, rx612_restart1309
    gt rx612_pos, rx612_eos, rx612_fail1310
    repr_get_attr_int $I11, self, rx612_curclass, "$!from"
    ne $I11, -1, rxscan613_done1316
    goto rxscan613_scan1315
  rxscan613_loop1314:
    inc rx612_pos
    gt rx612_pos, rx612_eos, rx612_fail1310
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!from", rx612_pos
  rxscan613_scan1315:
    nqp_rxmark rx612_bstack, rxscan613_loop1314, rx612_pos, 0
  rxscan613_done1316:
    nqp_rxmark rx612_bstack, rxcap614_fail1318, rx612_pos, 0
    add $I11, rx612_pos, 2
    gt $I11, rx612_eos, rx612_fail1310
    substr $S10, rx612_tgt, rx612_pos, 2
    ne $S10, ucs4:"if", rx612_fail1310
    add rx612_pos, 2
    nqp_rxpeek $I19, rx612_bstack, rxcap614_fail1318
    inc $I19
    set $I11, rx612_bstack[$I19]
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx612_pos)
    rx612_cstack = rx612_cur."!cursor_capture"($P11, "sym")
    goto rxcap614_done1317
  rxcap614_fail1318:
    goto rx612_fail1310
  rxcap614_done1317:
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."ws"()
    repr_get_attr_int $I11, $P11, rx612_curclass, "$!pos"
    lt $I11, 0, rx612_fail1310
    repr_get_attr_int rx612_pos, $P11, rx612_curclass, "$!pos"
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx612_curclass, "$!pos"
    lt $I11, 0, rx612_fail1310
    nqp_rxmark rx612_bstack, rxsubrule616_pass1320, -1, 0
  rxsubrule616_pass1320:
    rx612_cstack = rx612_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx612_pos, $P11, rx612_curclass, "$!pos"
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."ws"()
    repr_get_attr_int $I11, $P11, rx612_curclass, "$!pos"
    lt $I11, 0, rx612_fail1310
    repr_get_attr_int rx612_pos, $P11, rx612_curclass, "$!pos"
    rx612_cur."!cursor_pass"(rx612_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx612_cur)
  rx612_restart1309:
    repr_get_attr_obj rx612_cstack, rx612_cur, rx612_curclass, "$!cstack"
  rx612_fail1310:
    unless rx612_bstack, rx612_done1308
    pop $I19, rx612_bstack
    if_null rx612_cstack, rx612_cstack_done1313
    unless rx612_cstack, rx612_cstack_done1313
    dec $I19
    set $P11, rx612_cstack[$I19]
  rx612_cstack_done1313:
    pop rx612_rep, rx612_bstack
    pop rx612_pos, rx612_bstack
    pop $I19, rx612_bstack
    lt rx612_pos, -1, rx612_done1308
    lt rx612_pos, 0, rx612_fail1310
    eq $I19, 0, rx612_fail1310
    nqp_islist $I20, rx612_cstack
    unless $I20, rx612_jump1311
    elements $I18, rx612_bstack
    le $I18, 0, rx612_cut1312
    dec $I18
    set $I18, rx612_bstack[$I18]
  rx612_cut1312:
    assign rx612_cstack, $I18
  rx612_jump1311:
    jump $I19
  rx612_done1308:
    rx612_cur."!cursor_fail"()
    .return (rx612_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 918
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx618_start
    .local string rx618_tgt
    .local int rx618_pos
    .local int rx618_off
    .local int rx618_eos
    .local int rx618_rep
    .local pmc rx618_cur
    .local pmc rx618_curclass
    .local pmc rx618_bstack
    .local pmc rx618_cstack
    rx618_start = self."!cursor_start_all"()
    set rx618_cur, rx618_start[0]
    set rx618_tgt, rx618_start[1]
    set rx618_pos, rx618_start[2]
    set rx618_curclass, rx618_start[3]
    set rx618_bstack, rx618_start[4]
    set $I19, rx618_start[5]
    store_lex unicode:"$\x{a2}", rx618_cur
    length rx618_eos, rx618_tgt
    eq $I19, 1, rx618_restart1324
    gt rx618_pos, rx618_eos, rx618_fail1325
    repr_get_attr_int $I11, self, rx618_curclass, "$!from"
    ne $I11, -1, rxscan619_done1331
    goto rxscan619_scan1330
  rxscan619_loop1329:
    inc rx618_pos
    gt rx618_pos, rx618_eos, rx618_fail1325
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!from", rx618_pos
  rxscan619_scan1330:
    nqp_rxmark rx618_bstack, rxscan619_loop1329, rx618_pos, 0
  rxscan619_done1331:
    nqp_rxmark rx618_bstack, rxcap620_fail1333, rx618_pos, 0
    add $I11, rx618_pos, 6
    gt $I11, rx618_eos, rx618_fail1325
    substr $S10, rx618_tgt, rx618_pos, 6
    ne $S10, ucs4:"unless", rx618_fail1325
    add rx618_pos, 6
    nqp_rxpeek $I19, rx618_bstack, rxcap620_fail1333
    inc $I19
    set $I11, rx618_bstack[$I19]
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx618_pos)
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "sym")
    goto rxcap620_done1332
  rxcap620_fail1333:
    goto rx618_fail1325
  rxcap620_done1332:
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."ws"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1325
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1325
    nqp_rxmark rx618_bstack, rxsubrule622_pass1335, -1, 0
  rxsubrule622_pass1335:
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."ws"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1325
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    rx618_cur."!cursor_pass"(rx618_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx618_cur)
  rx618_restart1324:
    repr_get_attr_obj rx618_cstack, rx618_cur, rx618_curclass, "$!cstack"
  rx618_fail1325:
    unless rx618_bstack, rx618_done1323
    pop $I19, rx618_bstack
    if_null rx618_cstack, rx618_cstack_done1328
    unless rx618_cstack, rx618_cstack_done1328
    dec $I19
    set $P11, rx618_cstack[$I19]
  rx618_cstack_done1328:
    pop rx618_rep, rx618_bstack
    pop rx618_pos, rx618_bstack
    pop $I19, rx618_bstack
    lt rx618_pos, -1, rx618_done1323
    lt rx618_pos, 0, rx618_fail1325
    eq $I19, 0, rx618_fail1325
    nqp_islist $I20, rx618_cstack
    unless $I20, rx618_jump1326
    elements $I18, rx618_bstack
    le $I18, 0, rx618_cut1327
    dec $I18
    set $I18, rx618_bstack[$I18]
  rx618_cut1327:
    assign rx618_cstack, $I18
  rx618_jump1326:
    jump $I19
  rx618_done1323:
    rx618_cur."!cursor_fail"()
    .return (rx618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 920
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 922
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx624_start
    .local string rx624_tgt
    .local int rx624_pos
    .local int rx624_off
    .local int rx624_eos
    .local int rx624_rep
    .local pmc rx624_cur
    .local pmc rx624_curclass
    .local pmc rx624_bstack
    .local pmc rx624_cstack
    rx624_start = self."!cursor_start_all"()
    set rx624_cur, rx624_start[0]
    set rx624_tgt, rx624_start[1]
    set rx624_pos, rx624_start[2]
    set rx624_curclass, rx624_start[3]
    set rx624_bstack, rx624_start[4]
    set $I19, rx624_start[5]
    store_lex unicode:"$\x{a2}", rx624_cur
    length rx624_eos, rx624_tgt
    eq $I19, 1, rx624_restart1339
    gt rx624_pos, rx624_eos, rx624_fail1340
    repr_get_attr_int $I11, self, rx624_curclass, "$!from"
    ne $I11, -1, rxscan625_done1346
    goto rxscan625_scan1345
  rxscan625_loop1344:
    inc rx624_pos
    gt rx624_pos, rx624_eos, rx624_fail1340
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!from", rx624_pos
  rxscan625_scan1345:
    nqp_rxmark rx624_bstack, rxscan625_loop1344, rx624_pos, 0
  rxscan625_done1346:
    nqp_rxmark rx624_bstack, rxcap626_fail1348, rx624_pos, 0
    add $I11, rx624_pos, 5
    gt $I11, rx624_eos, rx624_fail1340
    substr $S10, rx624_tgt, rx624_pos, 5
    ne $S10, ucs4:"while", rx624_fail1340
    add rx624_pos, 5
    nqp_rxpeek $I19, rx624_bstack, rxcap626_fail1348
    inc $I19
    set $I11, rx624_bstack[$I19]
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!pos", rx624_pos
    $P11 = rx624_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx624_pos)
    rx624_cstack = rx624_cur."!cursor_capture"($P11, "sym")
    goto rxcap626_done1347
  rxcap626_fail1348:
    goto rx624_fail1340
  rxcap626_done1347:
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!pos", rx624_pos
    $P11 = rx624_cur."ws"()
    repr_get_attr_int $I11, $P11, rx624_curclass, "$!pos"
    lt $I11, 0, rx624_fail1340
    repr_get_attr_int rx624_pos, $P11, rx624_curclass, "$!pos"
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!pos", rx624_pos
    $P11 = rx624_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx624_curclass, "$!pos"
    lt $I11, 0, rx624_fail1340
    nqp_rxmark rx624_bstack, rxsubrule628_pass1350, -1, 0
  rxsubrule628_pass1350:
    rx624_cstack = rx624_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx624_pos, $P11, rx624_curclass, "$!pos"
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!pos", rx624_pos
    $P11 = rx624_cur."ws"()
    repr_get_attr_int $I11, $P11, rx624_curclass, "$!pos"
    lt $I11, 0, rx624_fail1340
    repr_get_attr_int rx624_pos, $P11, rx624_curclass, "$!pos"
    rx624_cur."!cursor_pass"(rx624_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx624_cur)
  rx624_restart1339:
    repr_get_attr_obj rx624_cstack, rx624_cur, rx624_curclass, "$!cstack"
  rx624_fail1340:
    unless rx624_bstack, rx624_done1338
    pop $I19, rx624_bstack
    if_null rx624_cstack, rx624_cstack_done1343
    unless rx624_cstack, rx624_cstack_done1343
    dec $I19
    set $P11, rx624_cstack[$I19]
  rx624_cstack_done1343:
    pop rx624_rep, rx624_bstack
    pop rx624_pos, rx624_bstack
    pop $I19, rx624_bstack
    lt rx624_pos, -1, rx624_done1338
    lt rx624_pos, 0, rx624_fail1340
    eq $I19, 0, rx624_fail1340
    nqp_islist $I20, rx624_cstack
    unless $I20, rx624_jump1341
    elements $I18, rx624_bstack
    le $I18, 0, rx624_cut1342
    dec $I18
    set $I18, rx624_bstack[$I18]
  rx624_cut1342:
    assign rx624_cstack, $I18
  rx624_jump1341:
    jump $I19
  rx624_done1338:
    rx624_cur."!cursor_fail"()
    .return (rx624_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 923
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx630_start
    .local string rx630_tgt
    .local int rx630_pos
    .local int rx630_off
    .local int rx630_eos
    .local int rx630_rep
    .local pmc rx630_cur
    .local pmc rx630_curclass
    .local pmc rx630_bstack
    .local pmc rx630_cstack
    rx630_start = self."!cursor_start_all"()
    set rx630_cur, rx630_start[0]
    set rx630_tgt, rx630_start[1]
    set rx630_pos, rx630_start[2]
    set rx630_curclass, rx630_start[3]
    set rx630_bstack, rx630_start[4]
    set $I19, rx630_start[5]
    store_lex unicode:"$\x{a2}", rx630_cur
    length rx630_eos, rx630_tgt
    eq $I19, 1, rx630_restart1354
    gt rx630_pos, rx630_eos, rx630_fail1355
    repr_get_attr_int $I11, self, rx630_curclass, "$!from"
    ne $I11, -1, rxscan631_done1361
    goto rxscan631_scan1360
  rxscan631_loop1359:
    inc rx630_pos
    gt rx630_pos, rx630_eos, rx630_fail1355
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!from", rx630_pos
  rxscan631_scan1360:
    nqp_rxmark rx630_bstack, rxscan631_loop1359, rx630_pos, 0
  rxscan631_done1361:
    nqp_rxmark rx630_bstack, rxcap632_fail1363, rx630_pos, 0
    add $I11, rx630_pos, 5
    gt $I11, rx630_eos, rx630_fail1355
    substr $S10, rx630_tgt, rx630_pos, 5
    ne $S10, ucs4:"until", rx630_fail1355
    add rx630_pos, 5
    nqp_rxpeek $I19, rx630_bstack, rxcap632_fail1363
    inc $I19
    set $I11, rx630_bstack[$I19]
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx630_pos)
    rx630_cstack = rx630_cur."!cursor_capture"($P11, "sym")
    goto rxcap632_done1362
  rxcap632_fail1363:
    goto rx630_fail1355
  rxcap632_done1362:
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."ws"()
    repr_get_attr_int $I11, $P11, rx630_curclass, "$!pos"
    lt $I11, 0, rx630_fail1355
    repr_get_attr_int rx630_pos, $P11, rx630_curclass, "$!pos"
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx630_curclass, "$!pos"
    lt $I11, 0, rx630_fail1355
    nqp_rxmark rx630_bstack, rxsubrule634_pass1365, -1, 0
  rxsubrule634_pass1365:
    rx630_cstack = rx630_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx630_pos, $P11, rx630_curclass, "$!pos"
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."ws"()
    repr_get_attr_int $I11, $P11, rx630_curclass, "$!pos"
    lt $I11, 0, rx630_fail1355
    repr_get_attr_int rx630_pos, $P11, rx630_curclass, "$!pos"
    rx630_cur."!cursor_pass"(rx630_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx630_cur)
  rx630_restart1354:
    repr_get_attr_obj rx630_cstack, rx630_cur, rx630_curclass, "$!cstack"
  rx630_fail1355:
    unless rx630_bstack, rx630_done1353
    pop $I19, rx630_bstack
    if_null rx630_cstack, rx630_cstack_done1358
    unless rx630_cstack, rx630_cstack_done1358
    dec $I19
    set $P11, rx630_cstack[$I19]
  rx630_cstack_done1358:
    pop rx630_rep, rx630_bstack
    pop rx630_pos, rx630_bstack
    pop $I19, rx630_bstack
    lt rx630_pos, -1, rx630_done1353
    lt rx630_pos, 0, rx630_fail1355
    eq $I19, 0, rx630_fail1355
    nqp_islist $I20, rx630_cstack
    unless $I20, rx630_jump1356
    elements $I18, rx630_bstack
    le $I18, 0, rx630_cut1357
    dec $I18
    set $I18, rx630_bstack[$I18]
  rx630_cut1357:
    assign rx630_cstack, $I18
  rx630_jump1356:
    jump $I19
  rx630_done1353:
    rx630_cur."!cursor_fail"()
    .return (rx630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 924
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx636_start
    .local string rx636_tgt
    .local int rx636_pos
    .local int rx636_off
    .local int rx636_eos
    .local int rx636_rep
    .local pmc rx636_cur
    .local pmc rx636_curclass
    .local pmc rx636_bstack
    .local pmc rx636_cstack
    rx636_start = self."!cursor_start_all"()
    set rx636_cur, rx636_start[0]
    set rx636_tgt, rx636_start[1]
    set rx636_pos, rx636_start[2]
    set rx636_curclass, rx636_start[3]
    set rx636_bstack, rx636_start[4]
    set $I19, rx636_start[5]
    store_lex unicode:"$\x{a2}", rx636_cur
    length rx636_eos, rx636_tgt
    eq $I19, 1, rx636_restart1369
    gt rx636_pos, rx636_eos, rx636_fail1370
    repr_get_attr_int $I11, self, rx636_curclass, "$!from"
    ne $I11, -1, rxscan637_done1376
    goto rxscan637_scan1375
  rxscan637_loop1374:
    inc rx636_pos
    gt rx636_pos, rx636_eos, rx636_fail1370
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!from", rx636_pos
  rxscan637_scan1375:
    nqp_rxmark rx636_bstack, rxscan637_loop1374, rx636_pos, 0
  rxscan637_done1376:
    nqp_rxmark rx636_bstack, rxcap638_fail1378, rx636_pos, 0
    add $I11, rx636_pos, 3
    gt $I11, rx636_eos, rx636_fail1370
    substr $S10, rx636_tgt, rx636_pos, 3
    ne $S10, ucs4:"for", rx636_fail1370
    add rx636_pos, 3
    nqp_rxpeek $I19, rx636_bstack, rxcap638_fail1378
    inc $I19
    set $I11, rx636_bstack[$I19]
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!pos", rx636_pos
    $P11 = rx636_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx636_pos)
    rx636_cstack = rx636_cur."!cursor_capture"($P11, "sym")
    goto rxcap638_done1377
  rxcap638_fail1378:
    goto rx636_fail1370
  rxcap638_done1377:
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!pos", rx636_pos
    $P11 = rx636_cur."ws"()
    repr_get_attr_int $I11, $P11, rx636_curclass, "$!pos"
    lt $I11, 0, rx636_fail1370
    repr_get_attr_int rx636_pos, $P11, rx636_curclass, "$!pos"
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!pos", rx636_pos
    $P11 = rx636_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx636_curclass, "$!pos"
    lt $I11, 0, rx636_fail1370
    nqp_rxmark rx636_bstack, rxsubrule640_pass1380, -1, 0
  rxsubrule640_pass1380:
    rx636_cstack = rx636_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx636_pos, $P11, rx636_curclass, "$!pos"
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!pos", rx636_pos
    $P11 = rx636_cur."ws"()
    repr_get_attr_int $I11, $P11, rx636_curclass, "$!pos"
    lt $I11, 0, rx636_fail1370
    repr_get_attr_int rx636_pos, $P11, rx636_curclass, "$!pos"
    rx636_cur."!cursor_pass"(rx636_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx636_cur)
  rx636_restart1369:
    repr_get_attr_obj rx636_cstack, rx636_cur, rx636_curclass, "$!cstack"
  rx636_fail1370:
    unless rx636_bstack, rx636_done1368
    pop $I19, rx636_bstack
    if_null rx636_cstack, rx636_cstack_done1373
    unless rx636_cstack, rx636_cstack_done1373
    dec $I19
    set $P11, rx636_cstack[$I19]
  rx636_cstack_done1373:
    pop rx636_rep, rx636_bstack
    pop rx636_pos, rx636_bstack
    pop $I19, rx636_bstack
    lt rx636_pos, -1, rx636_done1368
    lt rx636_pos, 0, rx636_fail1370
    eq $I19, 0, rx636_fail1370
    nqp_islist $I20, rx636_cstack
    unless $I20, rx636_jump1371
    elements $I18, rx636_bstack
    le $I18, 0, rx636_cut1372
    dec $I18
    set $I18, rx636_bstack[$I18]
  rx636_cut1372:
    assign rx636_cstack, $I18
  rx636_jump1371:
    jump $I19
  rx636_done1368:
    rx636_cur."!cursor_fail"()
    .return (rx636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 928
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx642_start
    .local string rx642_tgt
    .local int rx642_pos
    .local int rx642_off
    .local int rx642_eos
    .local int rx642_rep
    .local pmc rx642_cur
    .local pmc rx642_curclass
    .local pmc rx642_bstack
    .local pmc rx642_cstack
    rx642_start = self."!cursor_start_all"()
    set rx642_cur, rx642_start[0]
    set rx642_tgt, rx642_start[1]
    set rx642_pos, rx642_start[2]
    set rx642_curclass, rx642_start[3]
    set rx642_bstack, rx642_start[4]
    set $I19, rx642_start[5]
    store_lex unicode:"$\x{a2}", rx642_cur
    length rx642_eos, rx642_tgt
    eq $I19, 1, rx642_restart1384
    gt rx642_pos, rx642_eos, rx642_fail1385
    repr_get_attr_int $I11, self, rx642_curclass, "$!from"
    ne $I11, -1, rxscan643_done1391
    goto rxscan643_scan1390
  rxscan643_loop1389:
    inc rx642_pos
    gt rx642_pos, rx642_eos, rx642_fail1385
    repr_bind_attr_int rx642_cur, rx642_curclass, "$!from", rx642_pos
  rxscan643_scan1390:
    nqp_rxmark rx642_bstack, rxscan643_loop1389, rx642_pos, 0
  rxscan643_done1391:
    repr_bind_attr_int rx642_cur, rx642_curclass, "$!pos", rx642_pos
    $P11 = rx642_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx642_curclass, "$!pos"
    lt $I11, 0, rx642_fail1385
    nqp_rxmark rx642_bstack, rxsubrule644_pass1392, -1, 0
  rxsubrule644_pass1392:
    rx642_cstack = rx642_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx642_pos, $P11, rx642_curclass, "$!pos"
    rx642_cur."!cursor_pass"(rx642_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx642_cur)
  rx642_restart1384:
    repr_get_attr_obj rx642_cstack, rx642_cur, rx642_curclass, "$!cstack"
  rx642_fail1385:
    unless rx642_bstack, rx642_done1383
    pop $I19, rx642_bstack
    if_null rx642_cstack, rx642_cstack_done1388
    unless rx642_cstack, rx642_cstack_done1388
    dec $I19
    set $P11, rx642_cstack[$I19]
  rx642_cstack_done1388:
    pop rx642_rep, rx642_bstack
    pop rx642_pos, rx642_bstack
    pop $I19, rx642_bstack
    lt rx642_pos, -1, rx642_done1383
    lt rx642_pos, 0, rx642_fail1385
    eq $I19, 0, rx642_fail1385
    nqp_islist $I20, rx642_cstack
    unless $I20, rx642_jump1386
    elements $I18, rx642_bstack
    le $I18, 0, rx642_cut1387
    dec $I18
    set $I18, rx642_bstack[$I18]
  rx642_cut1387:
    assign rx642_cstack, $I18
  rx642_jump1386:
    jump $I19
  rx642_done1383:
    rx642_cur."!cursor_fail"()
    .return (rx642_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx645_start
    .local string rx645_tgt
    .local int rx645_pos
    .local int rx645_off
    .local int rx645_eos
    .local int rx645_rep
    .local pmc rx645_cur
    .local pmc rx645_curclass
    .local pmc rx645_bstack
    .local pmc rx645_cstack
    rx645_start = self."!cursor_start_all"()
    set rx645_cur, rx645_start[0]
    set rx645_tgt, rx645_start[1]
    set rx645_pos, rx645_start[2]
    set rx645_curclass, rx645_start[3]
    set rx645_bstack, rx645_start[4]
    set $I19, rx645_start[5]
    store_lex unicode:"$\x{a2}", rx645_cur
    length rx645_eos, rx645_tgt
    eq $I19, 1, rx645_restart1395
    gt rx645_pos, rx645_eos, rx645_fail1396
    repr_get_attr_int $I11, self, rx645_curclass, "$!from"
    ne $I11, -1, rxscan646_done1402
    goto rxscan646_scan1401
  rxscan646_loop1400:
    inc rx645_pos
    gt rx645_pos, rx645_eos, rx645_fail1396
    repr_bind_attr_int rx645_cur, rx645_curclass, "$!from", rx645_pos
  rxscan646_scan1401:
    nqp_rxmark rx645_bstack, rxscan646_loop1400, rx645_pos, 0
  rxscan646_done1402:
    repr_bind_attr_int rx645_cur, rx645_curclass, "$!pos", rx645_pos
    $P11 = rx645_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx645_curclass, "$!pos"
    lt $I11, 0, rx645_fail1396
    nqp_rxmark rx645_bstack, rxsubrule647_pass1403, -1, 0
  rxsubrule647_pass1403:
    rx645_cstack = rx645_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx645_pos, $P11, rx645_curclass, "$!pos"
    rx645_cur."!cursor_pass"(rx645_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx645_cur)
  rx645_restart1395:
    repr_get_attr_obj rx645_cstack, rx645_cur, rx645_curclass, "$!cstack"
  rx645_fail1396:
    unless rx645_bstack, rx645_done1394
    pop $I19, rx645_bstack
    if_null rx645_cstack, rx645_cstack_done1399
    unless rx645_cstack, rx645_cstack_done1399
    dec $I19
    set $P11, rx645_cstack[$I19]
  rx645_cstack_done1399:
    pop rx645_rep, rx645_bstack
    pop rx645_pos, rx645_bstack
    pop $I19, rx645_bstack
    lt rx645_pos, -1, rx645_done1394
    lt rx645_pos, 0, rx645_fail1396
    eq $I19, 0, rx645_fail1396
    nqp_islist $I20, rx645_cstack
    unless $I20, rx645_jump1397
    elements $I18, rx645_bstack
    le $I18, 0, rx645_cut1398
    dec $I18
    set $I18, rx645_bstack[$I18]
  rx645_cut1398:
    assign rx645_cstack, $I18
  rx645_jump1397:
    jump $I19
  rx645_done1394:
    rx645_cur."!cursor_fail"()
    .return (rx645_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx648_start
    .local string rx648_tgt
    .local int rx648_pos
    .local int rx648_off
    .local int rx648_eos
    .local int rx648_rep
    .local pmc rx648_cur
    .local pmc rx648_curclass
    .local pmc rx648_bstack
    .local pmc rx648_cstack
    rx648_start = self."!cursor_start_all"()
    set rx648_cur, rx648_start[0]
    set rx648_tgt, rx648_start[1]
    set rx648_pos, rx648_start[2]
    set rx648_curclass, rx648_start[3]
    set rx648_bstack, rx648_start[4]
    set $I19, rx648_start[5]
    store_lex unicode:"$\x{a2}", rx648_cur
    length rx648_eos, rx648_tgt
    eq $I19, 1, rx648_restart1406
    gt rx648_pos, rx648_eos, rx648_fail1407
    repr_get_attr_int $I11, self, rx648_curclass, "$!from"
    ne $I11, -1, rxscan649_done1413
    goto rxscan649_scan1412
  rxscan649_loop1411:
    inc rx648_pos
    gt rx648_pos, rx648_eos, rx648_fail1407
    repr_bind_attr_int rx648_cur, rx648_curclass, "$!from", rx648_pos
  rxscan649_scan1412:
    nqp_rxmark rx648_bstack, rxscan649_loop1411, rx648_pos, 0
  rxscan649_done1413:
    repr_bind_attr_int rx648_cur, rx648_curclass, "$!pos", rx648_pos
    $P11 = rx648_cur."variable"()
    repr_get_attr_int $I11, $P11, rx648_curclass, "$!pos"
    lt $I11, 0, rx648_fail1407
    nqp_rxmark rx648_bstack, rxsubrule650_pass1414, -1, 0
  rxsubrule650_pass1414:
    rx648_cstack = rx648_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx648_pos, $P11, rx648_curclass, "$!pos"
    rx648_cur."!cursor_pass"(rx648_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx648_cur)
  rx648_restart1406:
    repr_get_attr_obj rx648_cstack, rx648_cur, rx648_curclass, "$!cstack"
  rx648_fail1407:
    unless rx648_bstack, rx648_done1405
    pop $I19, rx648_bstack
    if_null rx648_cstack, rx648_cstack_done1410
    unless rx648_cstack, rx648_cstack_done1410
    dec $I19
    set $P11, rx648_cstack[$I19]
  rx648_cstack_done1410:
    pop rx648_rep, rx648_bstack
    pop rx648_pos, rx648_bstack
    pop $I19, rx648_bstack
    lt rx648_pos, -1, rx648_done1405
    lt rx648_pos, 0, rx648_fail1407
    eq $I19, 0, rx648_fail1407
    nqp_islist $I20, rx648_cstack
    unless $I20, rx648_jump1408
    elements $I18, rx648_bstack
    le $I18, 0, rx648_cut1409
    dec $I18
    set $I18, rx648_bstack[$I18]
  rx648_cut1409:
    assign rx648_cstack, $I18
  rx648_jump1408:
    jump $I19
  rx648_done1405:
    rx648_cur."!cursor_fail"()
    .return (rx648_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx651_start
    .local string rx651_tgt
    .local int rx651_pos
    .local int rx651_off
    .local int rx651_eos
    .local int rx651_rep
    .local pmc rx651_cur
    .local pmc rx651_curclass
    .local pmc rx651_bstack
    .local pmc rx651_cstack
    rx651_start = self."!cursor_start_all"()
    set rx651_cur, rx651_start[0]
    set rx651_tgt, rx651_start[1]
    set rx651_pos, rx651_start[2]
    set rx651_curclass, rx651_start[3]
    set rx651_bstack, rx651_start[4]
    set $I19, rx651_start[5]
    store_lex unicode:"$\x{a2}", rx651_cur
    length rx651_eos, rx651_tgt
    eq $I19, 1, rx651_restart1417
    gt rx651_pos, rx651_eos, rx651_fail1418
    repr_get_attr_int $I11, self, rx651_curclass, "$!from"
    ne $I11, -1, rxscan652_done1424
    goto rxscan652_scan1423
  rxscan652_loop1422:
    inc rx651_pos
    gt rx651_pos, rx651_eos, rx651_fail1418
    repr_bind_attr_int rx651_cur, rx651_curclass, "$!from", rx651_pos
  rxscan652_scan1423:
    nqp_rxmark rx651_bstack, rxscan652_loop1422, rx651_pos, 0
  rxscan652_done1424:
    repr_bind_attr_int rx651_cur, rx651_curclass, "$!pos", rx651_pos
    $P11 = rx651_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx651_curclass, "$!pos"
    lt $I11, 0, rx651_fail1418
    nqp_rxmark rx651_bstack, rxsubrule653_pass1425, -1, 0
  rxsubrule653_pass1425:
    rx651_cstack = rx651_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx651_pos, $P11, rx651_curclass, "$!pos"
    rx651_cur."!cursor_pass"(rx651_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx651_cur)
  rx651_restart1417:
    repr_get_attr_obj rx651_cstack, rx651_cur, rx651_curclass, "$!cstack"
  rx651_fail1418:
    unless rx651_bstack, rx651_done1416
    pop $I19, rx651_bstack
    if_null rx651_cstack, rx651_cstack_done1421
    unless rx651_cstack, rx651_cstack_done1421
    dec $I19
    set $P11, rx651_cstack[$I19]
  rx651_cstack_done1421:
    pop rx651_rep, rx651_bstack
    pop rx651_pos, rx651_bstack
    pop $I19, rx651_bstack
    lt rx651_pos, -1, rx651_done1416
    lt rx651_pos, 0, rx651_fail1418
    eq $I19, 0, rx651_fail1418
    nqp_islist $I20, rx651_cstack
    unless $I20, rx651_jump1419
    elements $I18, rx651_bstack
    le $I18, 0, rx651_cut1420
    dec $I18
    set $I18, rx651_bstack[$I18]
  rx651_cut1420:
    assign rx651_cstack, $I18
  rx651_jump1419:
    jump $I19
  rx651_done1416:
    rx651_cur."!cursor_fail"()
    .return (rx651_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 932
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx654_start
    .local string rx654_tgt
    .local int rx654_pos
    .local int rx654_off
    .local int rx654_eos
    .local int rx654_rep
    .local pmc rx654_cur
    .local pmc rx654_curclass
    .local pmc rx654_bstack
    .local pmc rx654_cstack
    rx654_start = self."!cursor_start_all"()
    set rx654_cur, rx654_start[0]
    set rx654_tgt, rx654_start[1]
    set rx654_pos, rx654_start[2]
    set rx654_curclass, rx654_start[3]
    set rx654_bstack, rx654_start[4]
    set $I19, rx654_start[5]
    store_lex unicode:"$\x{a2}", rx654_cur
    length rx654_eos, rx654_tgt
    eq $I19, 1, rx654_restart1428
    gt rx654_pos, rx654_eos, rx654_fail1429
    repr_get_attr_int $I11, self, rx654_curclass, "$!from"
    ne $I11, -1, rxscan655_done1435
    goto rxscan655_scan1434
  rxscan655_loop1433:
    inc rx654_pos
    gt rx654_pos, rx654_eos, rx654_fail1429
    repr_bind_attr_int rx654_cur, rx654_curclass, "$!from", rx654_pos
  rxscan655_scan1434:
    nqp_rxmark rx654_bstack, rxscan655_loop1433, rx654_pos, 0
  rxscan655_done1435:
    repr_bind_attr_int rx654_cur, rx654_curclass, "$!pos", rx654_pos
    $P11 = rx654_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx654_curclass, "$!pos"
    lt $I11, 0, rx654_fail1429
    nqp_rxmark rx654_bstack, rxsubrule656_pass1436, -1, 0
  rxsubrule656_pass1436:
    rx654_cstack = rx654_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx654_pos, $P11, rx654_curclass, "$!pos"
    rx654_cur."!cursor_pass"(rx654_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx654_cur)
  rx654_restart1428:
    repr_get_attr_obj rx654_cstack, rx654_cur, rx654_curclass, "$!cstack"
  rx654_fail1429:
    unless rx654_bstack, rx654_done1427
    pop $I19, rx654_bstack
    if_null rx654_cstack, rx654_cstack_done1432
    unless rx654_cstack, rx654_cstack_done1432
    dec $I19
    set $P11, rx654_cstack[$I19]
  rx654_cstack_done1432:
    pop rx654_rep, rx654_bstack
    pop rx654_pos, rx654_bstack
    pop $I19, rx654_bstack
    lt rx654_pos, -1, rx654_done1427
    lt rx654_pos, 0, rx654_fail1429
    eq $I19, 0, rx654_fail1429
    nqp_islist $I20, rx654_cstack
    unless $I20, rx654_jump1430
    elements $I18, rx654_bstack
    le $I18, 0, rx654_cut1431
    dec $I18
    set $I18, rx654_bstack[$I18]
  rx654_cut1431:
    assign rx654_cstack, $I18
  rx654_jump1430:
    jump $I19
  rx654_done1427:
    rx654_cur."!cursor_fail"()
    .return (rx654_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 933
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx657_start
    .local string rx657_tgt
    .local int rx657_pos
    .local int rx657_off
    .local int rx657_eos
    .local int rx657_rep
    .local pmc rx657_cur
    .local pmc rx657_curclass
    .local pmc rx657_bstack
    .local pmc rx657_cstack
    rx657_start = self."!cursor_start_all"()
    set rx657_cur, rx657_start[0]
    set rx657_tgt, rx657_start[1]
    set rx657_pos, rx657_start[2]
    set rx657_curclass, rx657_start[3]
    set rx657_bstack, rx657_start[4]
    set $I19, rx657_start[5]
    store_lex unicode:"$\x{a2}", rx657_cur
    length rx657_eos, rx657_tgt
    eq $I19, 1, rx657_restart1439
    gt rx657_pos, rx657_eos, rx657_fail1440
    repr_get_attr_int $I11, self, rx657_curclass, "$!from"
    ne $I11, -1, rxscan658_done1446
    goto rxscan658_scan1445
  rxscan658_loop1444:
    inc rx657_pos
    gt rx657_pos, rx657_eos, rx657_fail1440
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!from", rx657_pos
  rxscan658_scan1445:
    nqp_rxmark rx657_bstack, rxscan658_loop1444, rx657_pos, 0
  rxscan658_done1446:
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!pos", rx657_pos
    $P11 = rx657_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx657_curclass, "$!pos"
    lt $I11, 0, rx657_fail1440
    nqp_rxmark rx657_bstack, rxsubrule659_pass1447, -1, 0
  rxsubrule659_pass1447:
    rx657_cstack = rx657_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx657_pos, $P11, rx657_curclass, "$!pos"
    rx657_cur."!cursor_pass"(rx657_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx657_cur)
  rx657_restart1439:
    repr_get_attr_obj rx657_cstack, rx657_cur, rx657_curclass, "$!cstack"
  rx657_fail1440:
    unless rx657_bstack, rx657_done1438
    pop $I19, rx657_bstack
    if_null rx657_cstack, rx657_cstack_done1443
    unless rx657_cstack, rx657_cstack_done1443
    dec $I19
    set $P11, rx657_cstack[$I19]
  rx657_cstack_done1443:
    pop rx657_rep, rx657_bstack
    pop rx657_pos, rx657_bstack
    pop $I19, rx657_bstack
    lt rx657_pos, -1, rx657_done1438
    lt rx657_pos, 0, rx657_fail1440
    eq $I19, 0, rx657_fail1440
    nqp_islist $I20, rx657_cstack
    unless $I20, rx657_jump1441
    elements $I18, rx657_bstack
    le $I18, 0, rx657_cut1442
    dec $I18
    set $I18, rx657_bstack[$I18]
  rx657_cut1442:
    assign rx657_cstack, $I18
  rx657_jump1441:
    jump $I19
  rx657_done1438:
    rx657_cur."!cursor_fail"()
    .return (rx657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 934
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1381944288.90674' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1381944288.90674' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx660_start
    .local string rx660_tgt
    .local int rx660_pos
    .local int rx660_off
    .local int rx660_eos
    .local int rx660_rep
    .local pmc rx660_cur
    .local pmc rx660_curclass
    .local pmc rx660_bstack
    .local pmc rx660_cstack
    rx660_start = self."!cursor_start_all"()
    set rx660_cur, rx660_start[0]
    set rx660_tgt, rx660_start[1]
    set rx660_pos, rx660_start[2]
    set rx660_curclass, rx660_start[3]
    set rx660_bstack, rx660_start[4]
    set $I19, rx660_start[5]
    store_lex unicode:"$\x{a2}", rx660_cur
    length rx660_eos, rx660_tgt
    eq $I19, 1, rx660_restart1450
    gt rx660_pos, rx660_eos, rx660_fail1451
    repr_get_attr_int $I11, self, rx660_curclass, "$!from"
    ne $I11, -1, rxscan661_done1457
    goto rxscan661_scan1456
  rxscan661_loop1455:
    inc rx660_pos
    gt rx660_pos, rx660_eos, rx660_fail1451
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!from", rx660_pos
  rxscan661_scan1456:
    nqp_rxmark rx660_bstack, rxscan661_loop1455, rx660_pos, 0
  rxscan661_done1457:
    .const 'Sub' $P5001 = 'cuid_91_1381944288.90674' 
    capture_lex $P5001
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!pos", rx660_pos
    $P11 = rx660_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx660_curclass, "$!pos"
    lt $I11, 0, rx660_fail1451
    .const 'Sub' $P5002 = 'cuid_92_1381944288.90674' 
    capture_lex $P5002
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!pos", rx660_pos
    $P11 = rx660_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx660_curclass, "$!pos"
    ge $I11, 0, rx660_fail1451
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!pos", rx660_pos
    $P11 = rx660_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx660_curclass, "$!pos"
    lt $I11, 0, rx660_fail1451
    nqp_rxmark rx660_bstack, rxsubrule669_pass1487, -1, 0
  rxsubrule669_pass1487:
    rx660_cstack = rx660_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx660_pos, $P11, rx660_curclass, "$!pos"
    rx660_cur."!cursor_pass"(rx660_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx660_cur)
  rx660_restart1450:
    repr_get_attr_obj rx660_cstack, rx660_cur, rx660_curclass, "$!cstack"
  rx660_fail1451:
    unless rx660_bstack, rx660_done1449
    pop $I19, rx660_bstack
    if_null rx660_cstack, rx660_cstack_done1454
    unless rx660_cstack, rx660_cstack_done1454
    dec $I19
    set $P11, rx660_cstack[$I19]
  rx660_cstack_done1454:
    pop rx660_rep, rx660_bstack
    pop rx660_pos, rx660_bstack
    pop $I19, rx660_bstack
    lt rx660_pos, -1, rx660_done1449
    lt rx660_pos, 0, rx660_fail1451
    eq $I19, 0, rx660_fail1451
    nqp_islist $I20, rx660_cstack
    unless $I20, rx660_jump1452
    elements $I18, rx660_bstack
    le $I18, 0, rx660_cut1453
    dec $I18
    set $I18, rx660_bstack[$I18]
  rx660_cut1453:
    assign rx660_cstack, $I18
  rx660_jump1452:
    jump $I19
  rx660_done1449:
    rx660_cur."!cursor_fail"()
    .return (rx660_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1381944288.90674") :anon :lex :outer("cuid_90_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx662_start
    .local string rx662_tgt
    .local int rx662_pos
    .local int rx662_off
    .local int rx662_eos
    .local int rx662_rep
    .local pmc rx662_cur
    .local pmc rx662_curclass
    .local pmc rx662_bstack
    .local pmc rx662_cstack
    rx662_start = self."!cursor_start_all"()
    set rx662_cur, rx662_start[0]
    set rx662_tgt, rx662_start[1]
    set rx662_pos, rx662_start[2]
    set rx662_curclass, rx662_start[3]
    set rx662_bstack, rx662_start[4]
    set $I19, rx662_start[5]
    store_lex unicode:"$\x{a2}", rx662_cur
    length rx662_eos, rx662_tgt
    eq $I19, 1, rx662_restart1460
    gt rx662_pos, rx662_eos, rx662_fail1461
    repr_get_attr_int $I11, self, rx662_curclass, "$!from"
    ne $I11, -1, rxscan663_done1467
    goto rxscan663_scan1466
  rxscan663_loop1465:
    inc rx662_pos
    gt rx662_pos, rx662_eos, rx662_fail1461
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!from", rx662_pos
  rxscan663_scan1466:
    nqp_rxmark rx662_bstack, rxscan663_loop1465, rx662_pos, 0
  rxscan663_done1467:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt664_01469
    nqp_push_label $P11, alt664_11470
    nqp_push_label $P11, alt664_21471
    nqp_rxmark rx662_bstack, alt664_end1468, -1, 0
    rx662_cur."!alt"(rx662_pos, "alt_nfa__17_1381944291.30486", $P11)
    goto rx662_fail1461
  alt664_01469:
    add $I11, rx662_pos, 5
    gt $I11, rx662_eos, rx662_fail1461
    substr $S10, rx662_tgt, rx662_pos, 5
    ne $S10, ucs4:"multi", rx662_fail1461
    add rx662_pos, 5
    goto alt664_end1468
  alt664_11470:
    add $I11, rx662_pos, 5
    gt $I11, rx662_eos, rx662_fail1461
    substr $S10, rx662_tgt, rx662_pos, 5
    ne $S10, ucs4:"proto", rx662_fail1461
    add rx662_pos, 5
    goto alt664_end1468
  alt664_21471:
    add $I11, rx662_pos, 4
    gt $I11, rx662_eos, rx662_fail1461
    substr $S10, rx662_tgt, rx662_pos, 4
    ne $S10, ucs4:"only", rx662_fail1461
    add rx662_pos, 4
    goto alt664_end1468
  alt664_end1468:
    rx662_cur."!cursor_pass"(rx662_pos, 'backtrack'=>1)
    .return (rx662_cur)
  rx662_restart1460:
    repr_get_attr_obj rx662_cstack, rx662_cur, rx662_curclass, "$!cstack"
  rx662_fail1461:
    unless rx662_bstack, rx662_done1459
    pop $I19, rx662_bstack
    if_null rx662_cstack, rx662_cstack_done1464
    unless rx662_cstack, rx662_cstack_done1464
    dec $I19
    set $P11, rx662_cstack[$I19]
  rx662_cstack_done1464:
    pop rx662_rep, rx662_bstack
    pop rx662_pos, rx662_bstack
    pop $I19, rx662_bstack
    lt rx662_pos, -1, rx662_done1459
    lt rx662_pos, 0, rx662_fail1461
    eq $I19, 0, rx662_fail1461
    nqp_islist $I20, rx662_cstack
    unless $I20, rx662_jump1462
    elements $I18, rx662_bstack
    le $I18, 0, rx662_cut1463
    dec $I18
    set $I18, rx662_bstack[$I18]
  rx662_cut1463:
    assign rx662_cstack, $I18
  rx662_jump1462:
    jump $I19
  rx662_done1459:
    rx662_cur."!cursor_fail"()
    .return (rx662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1381944288.90674") :anon :lex :outer("cuid_90_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx665_start
    .local string rx665_tgt
    .local int rx665_pos
    .local int rx665_off
    .local int rx665_eos
    .local int rx665_rep
    .local pmc rx665_cur
    .local pmc rx665_curclass
    .local pmc rx665_bstack
    .local pmc rx665_cstack
    rx665_start = self."!cursor_start_all"()
    set rx665_cur, rx665_start[0]
    set rx665_tgt, rx665_start[1]
    set rx665_pos, rx665_start[2]
    set rx665_curclass, rx665_start[3]
    set rx665_bstack, rx665_start[4]
    set $I19, rx665_start[5]
    store_lex unicode:"$\x{a2}", rx665_cur
    length rx665_eos, rx665_tgt
    eq $I19, 1, rx665_restart1474
    gt rx665_pos, rx665_eos, rx665_fail1475
    repr_get_attr_int $I11, self, rx665_curclass, "$!from"
    ne $I11, -1, rxscan666_done1481
    goto rxscan666_scan1480
  rxscan666_loop1479:
    inc rx665_pos
    gt rx665_pos, rx665_eos, rx665_fail1475
    repr_bind_attr_int rx665_cur, rx665_curclass, "$!from", rx665_pos
  rxscan666_scan1480:
    nqp_rxmark rx665_bstack, rxscan666_loop1479, rx665_pos, 0
  rxscan666_done1481:
    add $I11, rx665_pos, 5
    gt $I11, rx665_eos, rx665_fail1475
    substr $S10, rx665_tgt, rx665_pos, 5
    ne $S10, ucs4:"proto", rx665_fail1475
    add rx665_pos, 5
    repr_bind_attr_int rx665_cur, rx665_curclass, "$!pos", rx665_pos
    $P11 = rx665_cur."ws"()
    repr_get_attr_int $I11, $P11, rx665_curclass, "$!pos"
    lt $I11, 0, rx665_fail1475
    repr_get_attr_int rx665_pos, $P11, rx665_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt668_01484
    nqp_push_label $P11, alt668_11485
    nqp_push_label $P11, alt668_21486
    nqp_rxmark rx665_bstack, alt668_end1483, -1, 0
    rx665_cur."!alt"(rx665_pos, "alt_nfa__18_1381944291.31562", $P11)
    goto rx665_fail1475
  alt668_01484:
    add $I11, rx665_pos, 5
    gt $I11, rx665_eos, rx665_fail1475
    substr $S10, rx665_tgt, rx665_pos, 5
    ne $S10, ucs4:"regex", rx665_fail1475
    add rx665_pos, 5
    goto alt668_end1483
  alt668_11485:
    add $I11, rx665_pos, 5
    gt $I11, rx665_eos, rx665_fail1475
    substr $S10, rx665_tgt, rx665_pos, 5
    ne $S10, ucs4:"token", rx665_fail1475
    add rx665_pos, 5
    goto alt668_end1483
  alt668_21486:
    add $I11, rx665_pos, 4
    gt $I11, rx665_eos, rx665_fail1475
    substr $S10, rx665_tgt, rx665_pos, 4
    ne $S10, ucs4:"rule", rx665_fail1475
    add rx665_pos, 4
    goto alt668_end1483
  alt668_end1483:
    nqp_rxcommit rx665_bstack, alt668_end1483
    rx665_cur."!cursor_pass"(rx665_pos, 'backtrack'=>1)
    .return (rx665_cur)
  rx665_restart1474:
    repr_get_attr_obj rx665_cstack, rx665_cur, rx665_curclass, "$!cstack"
  rx665_fail1475:
    unless rx665_bstack, rx665_done1473
    pop $I19, rx665_bstack
    if_null rx665_cstack, rx665_cstack_done1478
    unless rx665_cstack, rx665_cstack_done1478
    dec $I19
    set $P11, rx665_cstack[$I19]
  rx665_cstack_done1478:
    pop rx665_rep, rx665_bstack
    pop rx665_pos, rx665_bstack
    pop $I19, rx665_bstack
    lt rx665_pos, -1, rx665_done1473
    lt rx665_pos, 0, rx665_fail1475
    eq $I19, 0, rx665_fail1475
    nqp_islist $I20, rx665_cstack
    unless $I20, rx665_jump1476
    elements $I18, rx665_bstack
    le $I18, 0, rx665_cut1477
    dec $I18
    set $I18, rx665_bstack[$I18]
  rx665_cut1477:
    assign rx665_cstack, $I18
  rx665_jump1476:
    jump $I19
  rx665_done1473:
    rx665_cur."!cursor_fail"()
    .return (rx665_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 939
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx670_start
    .local string rx670_tgt
    .local int rx670_pos
    .local int rx670_off
    .local int rx670_eos
    .local int rx670_rep
    .local pmc rx670_cur
    .local pmc rx670_curclass
    .local pmc rx670_bstack
    .local pmc rx670_cstack
    rx670_start = self."!cursor_start_all"()
    set rx670_cur, rx670_start[0]
    set rx670_tgt, rx670_start[1]
    set rx670_pos, rx670_start[2]
    set rx670_curclass, rx670_start[3]
    set rx670_bstack, rx670_start[4]
    set $I19, rx670_start[5]
    store_lex unicode:"$\x{a2}", rx670_cur
    length rx670_eos, rx670_tgt
    eq $I19, 1, rx670_restart1490
    gt rx670_pos, rx670_eos, rx670_fail1491
    repr_get_attr_int $I11, self, rx670_curclass, "$!from"
    ne $I11, -1, rxscan671_done1497
    goto rxscan671_scan1496
  rxscan671_loop1495:
    inc rx670_pos
    gt rx670_pos, rx670_eos, rx670_fail1491
    repr_bind_attr_int rx670_cur, rx670_curclass, "$!from", rx670_pos
  rxscan671_scan1496:
    nqp_rxmark rx670_bstack, rxscan671_loop1495, rx670_pos, 0
  rxscan671_done1497:
    repr_bind_attr_int rx670_cur, rx670_curclass, "$!pos", rx670_pos
    $P11 = rx670_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx670_curclass, "$!pos"
    lt $I11, 0, rx670_fail1491
    nqp_rxmark rx670_bstack, rxsubrule672_pass1498, -1, 0
  rxsubrule672_pass1498:
    rx670_cstack = rx670_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx670_pos, $P11, rx670_curclass, "$!pos"
    rx670_cur."!cursor_pass"(rx670_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx670_cur)
  rx670_restart1490:
    repr_get_attr_obj rx670_cstack, rx670_cur, rx670_curclass, "$!cstack"
  rx670_fail1491:
    unless rx670_bstack, rx670_done1489
    pop $I19, rx670_bstack
    if_null rx670_cstack, rx670_cstack_done1494
    unless rx670_cstack, rx670_cstack_done1494
    dec $I19
    set $P11, rx670_cstack[$I19]
  rx670_cstack_done1494:
    pop rx670_rep, rx670_bstack
    pop rx670_pos, rx670_bstack
    pop $I19, rx670_bstack
    lt rx670_pos, -1, rx670_done1489
    lt rx670_pos, 0, rx670_fail1491
    eq $I19, 0, rx670_fail1491
    nqp_islist $I20, rx670_cstack
    unless $I20, rx670_jump1492
    elements $I18, rx670_bstack
    le $I18, 0, rx670_cut1493
    dec $I18
    set $I18, rx670_bstack[$I18]
  rx670_cut1493:
    assign rx670_cstack, $I18
  rx670_jump1492:
    jump $I19
  rx670_done1489:
    rx670_cur."!cursor_fail"()
    .return (rx670_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 940
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx673_start
    .local string rx673_tgt
    .local int rx673_pos
    .local int rx673_off
    .local int rx673_eos
    .local int rx673_rep
    .local pmc rx673_cur
    .local pmc rx673_curclass
    .local pmc rx673_bstack
    .local pmc rx673_cstack
    rx673_start = self."!cursor_start_all"()
    set rx673_cur, rx673_start[0]
    set rx673_tgt, rx673_start[1]
    set rx673_pos, rx673_start[2]
    set rx673_curclass, rx673_start[3]
    set rx673_bstack, rx673_start[4]
    set $I19, rx673_start[5]
    store_lex unicode:"$\x{a2}", rx673_cur
    length rx673_eos, rx673_tgt
    eq $I19, 1, rx673_restart1501
    gt rx673_pos, rx673_eos, rx673_fail1502
    repr_get_attr_int $I11, self, rx673_curclass, "$!from"
    ne $I11, -1, rxscan674_done1508
    goto rxscan674_scan1507
  rxscan674_loop1506:
    inc rx673_pos
    gt rx673_pos, rx673_eos, rx673_fail1502
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!from", rx673_pos
  rxscan674_scan1507:
    nqp_rxmark rx673_bstack, rxscan674_loop1506, rx673_pos, 0
  rxscan674_done1508:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1502
    nqp_rxmark rx673_bstack, rxsubrule675_pass1509, -1, 0
  rxsubrule675_pass1509:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    rx673_cur."!cursor_pass"(rx673_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx673_cur)
  rx673_restart1501:
    repr_get_attr_obj rx673_cstack, rx673_cur, rx673_curclass, "$!cstack"
  rx673_fail1502:
    unless rx673_bstack, rx673_done1500
    pop $I19, rx673_bstack
    if_null rx673_cstack, rx673_cstack_done1505
    unless rx673_cstack, rx673_cstack_done1505
    dec $I19
    set $P11, rx673_cstack[$I19]
  rx673_cstack_done1505:
    pop rx673_rep, rx673_bstack
    pop rx673_pos, rx673_bstack
    pop $I19, rx673_bstack
    lt rx673_pos, -1, rx673_done1500
    lt rx673_pos, 0, rx673_fail1502
    eq $I19, 0, rx673_fail1502
    nqp_islist $I20, rx673_cstack
    unless $I20, rx673_jump1503
    elements $I18, rx673_bstack
    le $I18, 0, rx673_cut1504
    dec $I18
    set $I18, rx673_bstack[$I18]
  rx673_cut1504:
    assign rx673_cstack, $I18
  rx673_jump1503:
    jump $I19
  rx673_done1500:
    rx673_cur."!cursor_fail"()
    .return (rx673_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 941
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx676_start
    .local string rx676_tgt
    .local int rx676_pos
    .local int rx676_off
    .local int rx676_eos
    .local int rx676_rep
    .local pmc rx676_cur
    .local pmc rx676_curclass
    .local pmc rx676_bstack
    .local pmc rx676_cstack
    rx676_start = self."!cursor_start_all"()
    set rx676_cur, rx676_start[0]
    set rx676_tgt, rx676_start[1]
    set rx676_pos, rx676_start[2]
    set rx676_curclass, rx676_start[3]
    set rx676_bstack, rx676_start[4]
    set $I19, rx676_start[5]
    store_lex unicode:"$\x{a2}", rx676_cur
    length rx676_eos, rx676_tgt
    eq $I19, 1, rx676_restart1512
    gt rx676_pos, rx676_eos, rx676_fail1513
    repr_get_attr_int $I11, self, rx676_curclass, "$!from"
    ne $I11, -1, rxscan677_done1519
    goto rxscan677_scan1518
  rxscan677_loop1517:
    inc rx676_pos
    gt rx676_pos, rx676_eos, rx676_fail1513
    repr_bind_attr_int rx676_cur, rx676_curclass, "$!from", rx676_pos
  rxscan677_scan1518:
    nqp_rxmark rx676_bstack, rxscan677_loop1517, rx676_pos, 0
  rxscan677_done1519:
    repr_bind_attr_int rx676_cur, rx676_curclass, "$!pos", rx676_pos
    $P11 = rx676_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx676_curclass, "$!pos"
    lt $I11, 0, rx676_fail1513
    repr_bind_attr_int rx676_cur, rx676_curclass, "$!pos", rx676_pos
    $P11 = rx676_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx676_curclass, "$!pos"
    lt $I11, 0, rx676_fail1513
    nqp_rxmark rx676_bstack, rxsubrule678_pass1520, -1, 0
  rxsubrule678_pass1520:
    rx676_cstack = rx676_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx676_pos, $P11, rx676_curclass, "$!pos"
    rx676_cur."!cursor_pass"(rx676_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx676_cur)
  rx676_restart1512:
    repr_get_attr_obj rx676_cstack, rx676_cur, rx676_curclass, "$!cstack"
  rx676_fail1513:
    unless rx676_bstack, rx676_done1511
    pop $I19, rx676_bstack
    if_null rx676_cstack, rx676_cstack_done1516
    unless rx676_cstack, rx676_cstack_done1516
    dec $I19
    set $P11, rx676_cstack[$I19]
  rx676_cstack_done1516:
    pop rx676_rep, rx676_bstack
    pop rx676_pos, rx676_bstack
    pop $I19, rx676_bstack
    lt rx676_pos, -1, rx676_done1511
    lt rx676_pos, 0, rx676_fail1513
    eq $I19, 0, rx676_fail1513
    nqp_islist $I20, rx676_cstack
    unless $I20, rx676_jump1514
    elements $I18, rx676_bstack
    le $I18, 0, rx676_cut1515
    dec $I18
    set $I18, rx676_bstack[$I18]
  rx676_cut1515:
    assign rx676_cstack, $I18
  rx676_jump1514:
    jump $I19
  rx676_done1511:
    rx676_cur."!cursor_fail"()
    .return (rx676_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_96_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 942
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_406_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx679_start
    .local string rx679_tgt
    .local int rx679_pos
    .local int rx679_off
    .local int rx679_eos
    .local int rx679_rep
    .local pmc rx679_cur
    .local pmc rx679_curclass
    .local pmc rx679_bstack
    .local pmc rx679_cstack
    rx679_start = self."!cursor_start_all"()
    set rx679_cur, rx679_start[0]
    set rx679_tgt, rx679_start[1]
    set rx679_pos, rx679_start[2]
    set rx679_curclass, rx679_start[3]
    set rx679_bstack, rx679_start[4]
    set $I19, rx679_start[5]
    store_lex unicode:"$\x{a2}", rx679_cur
    length rx679_eos, rx679_tgt
    eq $I19, 1, rx679_restart1523
    gt rx679_pos, rx679_eos, rx679_fail1524
    repr_get_attr_int $I11, self, rx679_curclass, "$!from"
    ne $I11, -1, rxscan680_done1530
    goto rxscan680_scan1529
  rxscan680_loop1528:
    inc rx679_pos
    gt rx679_pos, rx679_eos, rx679_fail1524
    repr_bind_attr_int rx679_cur, rx679_curclass, "$!from", rx679_pos
  rxscan680_scan1529:
    nqp_rxmark rx679_bstack, rxscan680_loop1528, rx679_pos, 0
  rxscan680_done1530:
    nqp_rxmark rx679_bstack, rxcap681_fail1532, rx679_pos, 0
    add $I11, rx679_pos, 4
    gt $I11, rx679_eos, rx679_fail1524
    substr $S10, rx679_tgt, rx679_pos, 4
    ne $S10, ucs4:"last", rx679_fail1524
    add rx679_pos, 4
    nqp_rxpeek $I19, rx679_bstack, rxcap681_fail1532
    inc $I19
    set $I11, rx679_bstack[$I19]
    repr_bind_attr_int rx679_cur, rx679_curclass, "$!pos", rx679_pos
    $P11 = rx679_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx679_pos)
    rx679_cstack = rx679_cur."!cursor_capture"($P11, "sym")
    goto rxcap681_done1531
  rxcap681_fail1532:
    goto rx679_fail1524
  rxcap681_done1531:
    repr_bind_attr_int rx679_cur, rx679_curclass, "$!pos", rx679_pos
    $P11 = rx679_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx679_curclass, "$!pos"
    ge $I11, 0, rx679_fail1524
    repr_bind_attr_int rx679_cur, rx679_curclass, "$!pos", rx679_pos
    store_lex unicode:"$\x{a2}", rx679_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_406_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx679_cur."!cursor_pass"(rx679_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx679_cur)
  rx679_restart1523:
    repr_get_attr_obj rx679_cstack, rx679_cur, rx679_curclass, "$!cstack"
  rx679_fail1524:
    unless rx679_bstack, rx679_done1522
    pop $I19, rx679_bstack
    if_null rx679_cstack, rx679_cstack_done1527
    unless rx679_cstack, rx679_cstack_done1527
    dec $I19
    set $P11, rx679_cstack[$I19]
  rx679_cstack_done1527:
    pop rx679_rep, rx679_bstack
    pop rx679_pos, rx679_bstack
    pop $I19, rx679_bstack
    lt rx679_pos, -1, rx679_done1522
    lt rx679_pos, 0, rx679_fail1524
    eq $I19, 0, rx679_fail1524
    nqp_islist $I20, rx679_cstack
    unless $I20, rx679_jump1525
    elements $I18, rx679_bstack
    le $I18, 0, rx679_cut1526
    dec $I18
    set $I18, rx679_bstack[$I18]
  rx679_cut1526:
    assign rx679_cstack, $I18
  rx679_jump1525:
    jump $I19
  rx679_done1522:
    rx679_cur."!cursor_fail"()
    .return (rx679_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1381944288.90674") :anon :lex :outer("cuid_96_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 942

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_97_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 943
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_407_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx682_start
    .local string rx682_tgt
    .local int rx682_pos
    .local int rx682_off
    .local int rx682_eos
    .local int rx682_rep
    .local pmc rx682_cur
    .local pmc rx682_curclass
    .local pmc rx682_bstack
    .local pmc rx682_cstack
    rx682_start = self."!cursor_start_all"()
    set rx682_cur, rx682_start[0]
    set rx682_tgt, rx682_start[1]
    set rx682_pos, rx682_start[2]
    set rx682_curclass, rx682_start[3]
    set rx682_bstack, rx682_start[4]
    set $I19, rx682_start[5]
    store_lex unicode:"$\x{a2}", rx682_cur
    length rx682_eos, rx682_tgt
    eq $I19, 1, rx682_restart1535
    gt rx682_pos, rx682_eos, rx682_fail1536
    repr_get_attr_int $I11, self, rx682_curclass, "$!from"
    ne $I11, -1, rxscan683_done1542
    goto rxscan683_scan1541
  rxscan683_loop1540:
    inc rx682_pos
    gt rx682_pos, rx682_eos, rx682_fail1536
    repr_bind_attr_int rx682_cur, rx682_curclass, "$!from", rx682_pos
  rxscan683_scan1541:
    nqp_rxmark rx682_bstack, rxscan683_loop1540, rx682_pos, 0
  rxscan683_done1542:
    nqp_rxmark rx682_bstack, rxcap684_fail1544, rx682_pos, 0
    add $I11, rx682_pos, 4
    gt $I11, rx682_eos, rx682_fail1536
    substr $S10, rx682_tgt, rx682_pos, 4
    ne $S10, ucs4:"next", rx682_fail1536
    add rx682_pos, 4
    nqp_rxpeek $I19, rx682_bstack, rxcap684_fail1544
    inc $I19
    set $I11, rx682_bstack[$I19]
    repr_bind_attr_int rx682_cur, rx682_curclass, "$!pos", rx682_pos
    $P11 = rx682_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx682_pos)
    rx682_cstack = rx682_cur."!cursor_capture"($P11, "sym")
    goto rxcap684_done1543
  rxcap684_fail1544:
    goto rx682_fail1536
  rxcap684_done1543:
    repr_bind_attr_int rx682_cur, rx682_curclass, "$!pos", rx682_pos
    $P11 = rx682_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx682_curclass, "$!pos"
    ge $I11, 0, rx682_fail1536
    repr_bind_attr_int rx682_cur, rx682_curclass, "$!pos", rx682_pos
    store_lex unicode:"$\x{a2}", rx682_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_407_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx682_cur."!cursor_pass"(rx682_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx682_cur)
  rx682_restart1535:
    repr_get_attr_obj rx682_cstack, rx682_cur, rx682_curclass, "$!cstack"
  rx682_fail1536:
    unless rx682_bstack, rx682_done1534
    pop $I19, rx682_bstack
    if_null rx682_cstack, rx682_cstack_done1539
    unless rx682_cstack, rx682_cstack_done1539
    dec $I19
    set $P11, rx682_cstack[$I19]
  rx682_cstack_done1539:
    pop rx682_rep, rx682_bstack
    pop rx682_pos, rx682_bstack
    pop $I19, rx682_bstack
    lt rx682_pos, -1, rx682_done1534
    lt rx682_pos, 0, rx682_fail1536
    eq $I19, 0, rx682_fail1536
    nqp_islist $I20, rx682_cstack
    unless $I20, rx682_jump1537
    elements $I18, rx682_bstack
    le $I18, 0, rx682_cut1538
    dec $I18
    set $I18, rx682_bstack[$I18]
  rx682_cut1538:
    assign rx682_cstack, $I18
  rx682_jump1537:
    jump $I19
  rx682_done1534:
    rx682_cur."!cursor_fail"()
    .return (rx682_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1381944288.90674") :anon :lex :outer("cuid_97_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 943

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_98_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 944
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_408_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx685_start
    .local string rx685_tgt
    .local int rx685_pos
    .local int rx685_off
    .local int rx685_eos
    .local int rx685_rep
    .local pmc rx685_cur
    .local pmc rx685_curclass
    .local pmc rx685_bstack
    .local pmc rx685_cstack
    rx685_start = self."!cursor_start_all"()
    set rx685_cur, rx685_start[0]
    set rx685_tgt, rx685_start[1]
    set rx685_pos, rx685_start[2]
    set rx685_curclass, rx685_start[3]
    set rx685_bstack, rx685_start[4]
    set $I19, rx685_start[5]
    store_lex unicode:"$\x{a2}", rx685_cur
    length rx685_eos, rx685_tgt
    eq $I19, 1, rx685_restart1547
    gt rx685_pos, rx685_eos, rx685_fail1548
    repr_get_attr_int $I11, self, rx685_curclass, "$!from"
    ne $I11, -1, rxscan686_done1554
    goto rxscan686_scan1553
  rxscan686_loop1552:
    inc rx685_pos
    gt rx685_pos, rx685_eos, rx685_fail1548
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!from", rx685_pos
  rxscan686_scan1553:
    nqp_rxmark rx685_bstack, rxscan686_loop1552, rx685_pos, 0
  rxscan686_done1554:
    nqp_rxmark rx685_bstack, rxcap687_fail1556, rx685_pos, 0
    add $I11, rx685_pos, 4
    gt $I11, rx685_eos, rx685_fail1548
    substr $S10, rx685_tgt, rx685_pos, 4
    ne $S10, ucs4:"redo", rx685_fail1548
    add rx685_pos, 4
    nqp_rxpeek $I19, rx685_bstack, rxcap687_fail1556
    inc $I19
    set $I11, rx685_bstack[$I19]
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!pos", rx685_pos
    $P11 = rx685_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx685_pos)
    rx685_cstack = rx685_cur."!cursor_capture"($P11, "sym")
    goto rxcap687_done1555
  rxcap687_fail1556:
    goto rx685_fail1548
  rxcap687_done1555:
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!pos", rx685_pos
    $P11 = rx685_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx685_curclass, "$!pos"
    ge $I11, 0, rx685_fail1548
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!pos", rx685_pos
    store_lex unicode:"$\x{a2}", rx685_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_408_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx685_cur."!cursor_pass"(rx685_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx685_cur)
  rx685_restart1547:
    repr_get_attr_obj rx685_cstack, rx685_cur, rx685_curclass, "$!cstack"
  rx685_fail1548:
    unless rx685_bstack, rx685_done1546
    pop $I19, rx685_bstack
    if_null rx685_cstack, rx685_cstack_done1551
    unless rx685_cstack, rx685_cstack_done1551
    dec $I19
    set $P11, rx685_cstack[$I19]
  rx685_cstack_done1551:
    pop rx685_rep, rx685_bstack
    pop rx685_pos, rx685_bstack
    pop $I19, rx685_bstack
    lt rx685_pos, -1, rx685_done1546
    lt rx685_pos, 0, rx685_fail1548
    eq $I19, 0, rx685_fail1548
    nqp_islist $I20, rx685_cstack
    unless $I20, rx685_jump1549
    elements $I18, rx685_bstack
    le $I18, 0, rx685_cut1550
    dec $I18
    set $I18, rx685_bstack[$I18]
  rx685_cut1550:
    assign rx685_cstack, $I18
  rx685_jump1549:
    jump $I19
  rx685_done1546:
    rx685_cur."!cursor_fail"()
    .return (rx685_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1381944288.90674") :anon :lex :outer("cuid_98_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 944

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_99_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 946
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx688_start
    .local string rx688_tgt
    .local int rx688_pos
    .local int rx688_off
    .local int rx688_eos
    .local int rx688_rep
    .local pmc rx688_cur
    .local pmc rx688_curclass
    .local pmc rx688_bstack
    .local pmc rx688_cstack
    rx688_start = self."!cursor_start_all"()
    set rx688_cur, rx688_start[0]
    set rx688_tgt, rx688_start[1]
    set rx688_pos, rx688_start[2]
    set rx688_curclass, rx688_start[3]
    set rx688_bstack, rx688_start[4]
    set $I19, rx688_start[5]
    store_lex unicode:"$\x{a2}", rx688_cur
    length rx688_eos, rx688_tgt
    eq $I19, 1, rx688_restart1559
    gt rx688_pos, rx688_eos, rx688_fail1560
    repr_get_attr_int $I11, self, rx688_curclass, "$!from"
    ne $I11, -1, rxscan689_done1566
    goto rxscan689_scan1565
  rxscan689_loop1564:
    inc rx688_pos
    gt rx688_pos, rx688_eos, rx688_fail1560
    repr_bind_attr_int rx688_cur, rx688_curclass, "$!from", rx688_pos
  rxscan689_scan1565:
    nqp_rxmark rx688_bstack, rxscan689_loop1564, rx688_pos, 0
  rxscan689_done1566:
    repr_bind_attr_int rx688_cur, rx688_curclass, "$!pos", rx688_pos
    $P11 = rx688_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx688_curclass, "$!pos"
    lt $I11, 0, rx688_fail1560
    nqp_rxmark rx688_bstack, rxsubrule690_pass1567, -1, 0
  rxsubrule690_pass1567:
    rx688_cstack = rx688_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx688_pos, $P11, rx688_curclass, "$!pos"
    nqp_rxmark rx688_bstack, rxquantr691_done1569, rx688_pos, 0
  rxquantr691_loop1568:
    ge rx688_pos, rx688_eos, rx688_fail1560
    substr $S11, rx688_tgt, rx688_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx688_fail1560
    inc rx688_pos
    nqp_rxpeek $I19, rx688_bstack, rxquantr691_done1569
    inc $I19
    inc $I19
    set rx688_rep, rx688_bstack[$I19]
    nqp_rxcommit rx688_bstack, rxquantr691_done1569
    inc rx688_rep
    nqp_rxmark rx688_bstack, rxquantr691_done1569, rx688_pos, rx688_rep
    goto rxquantr691_loop1568
  rxquantr691_done1569:
    add $I11, rx688_pos, 2
    gt $I11, rx688_eos, rx688_fail1560
    substr $S10, rx688_tgt, rx688_pos, 2
    ne $S10, ucs4:"=>", rx688_fail1560
    add rx688_pos, 2
    repr_bind_attr_int rx688_cur, rx688_curclass, "$!pos", rx688_pos
    $P11 = rx688_cur."ws"()
    repr_get_attr_int $I11, $P11, rx688_curclass, "$!pos"
    lt $I11, 0, rx688_fail1560
    repr_get_attr_int rx688_pos, $P11, rx688_curclass, "$!pos"
    repr_bind_attr_int rx688_cur, rx688_curclass, "$!pos", rx688_pos
    $P11 = rx688_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx688_curclass, "$!pos"
    lt $I11, 0, rx688_fail1560
    nqp_rxmark rx688_bstack, rxsubrule693_pass1571, -1, 0
  rxsubrule693_pass1571:
    rx688_cstack = rx688_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx688_pos, $P11, rx688_curclass, "$!pos"
    rx688_cur."!cursor_pass"(rx688_pos, "fatarrow", 'backtrack'=>1)
    .return (rx688_cur)
  rx688_restart1559:
    repr_get_attr_obj rx688_cstack, rx688_cur, rx688_curclass, "$!cstack"
  rx688_fail1560:
    unless rx688_bstack, rx688_done1558
    pop $I19, rx688_bstack
    if_null rx688_cstack, rx688_cstack_done1563
    unless rx688_cstack, rx688_cstack_done1563
    dec $I19
    set $P11, rx688_cstack[$I19]
  rx688_cstack_done1563:
    pop rx688_rep, rx688_bstack
    pop rx688_pos, rx688_bstack
    pop $I19, rx688_bstack
    lt rx688_pos, -1, rx688_done1558
    lt rx688_pos, 0, rx688_fail1560
    eq $I19, 0, rx688_fail1560
    nqp_islist $I20, rx688_cstack
    unless $I20, rx688_jump1561
    elements $I18, rx688_bstack
    le $I18, 0, rx688_cut1562
    dec $I18
    set $I18, rx688_bstack[$I18]
  rx688_cut1562:
    assign rx688_cstack, $I18
  rx688_jump1561:
    jump $I19
  rx688_done1558:
    rx688_cur."!cursor_fail"()
    .return (rx688_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_100_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 950
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx694_start
    .local string rx694_tgt
    .local int rx694_pos
    .local int rx694_off
    .local int rx694_eos
    .local int rx694_rep
    .local pmc rx694_cur
    .local pmc rx694_curclass
    .local pmc rx694_bstack
    .local pmc rx694_cstack
    rx694_start = self."!cursor_start_all"()
    set rx694_cur, rx694_start[0]
    set rx694_tgt, rx694_start[1]
    set rx694_pos, rx694_start[2]
    set rx694_curclass, rx694_start[3]
    set rx694_bstack, rx694_start[4]
    set $I19, rx694_start[5]
    store_lex unicode:"$\x{a2}", rx694_cur
    length rx694_eos, rx694_tgt
    eq $I19, 1, rx694_restart1574
    gt rx694_pos, rx694_eos, rx694_fail1575
    repr_get_attr_int $I11, self, rx694_curclass, "$!from"
    ne $I11, -1, rxscan695_done1581
    goto rxscan695_scan1580
  rxscan695_loop1579:
    inc rx694_pos
    gt rx694_pos, rx694_eos, rx694_fail1575
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!from", rx694_pos
  rxscan695_scan1580:
    nqp_rxmark rx694_bstack, rxscan695_loop1579, rx694_pos, 0
  rxscan695_done1581:
    add $I11, rx694_pos, 1
    gt $I11, rx694_eos, rx694_fail1575
    substr $S10, rx694_tgt, rx694_pos, 1
    ne $S10, ucs4:":", rx694_fail1575
    add rx694_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt696_01583
    nqp_push_label $P11, alt696_11587
    nqp_push_label $P11, alt696_21593
    nqp_push_label $P11, alt696_31595
    nqp_rxmark rx694_bstack, alt696_end1582, -1, 0
    rx694_cur."!alt"(rx694_pos, "alt_nfa__19_1381944291.39381", $P11)
    goto rx694_fail1575
  alt696_01583:
    nqp_rxmark rx694_bstack, rxcap697_fail1585, rx694_pos, 0
    add $I11, rx694_pos, 1
    gt $I11, rx694_eos, rx694_fail1575
    substr $S10, rx694_tgt, rx694_pos, 1
    ne $S10, ucs4:"!", rx694_fail1575
    add rx694_pos, 1
    nqp_rxpeek $I19, rx694_bstack, rxcap697_fail1585
    inc $I19
    set $I11, rx694_bstack[$I19]
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx694_pos)
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "not")
    goto rxcap697_done1584
  rxcap697_fail1585:
    goto rx694_fail1575
  rxcap697_done1584:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1575
    nqp_rxmark rx694_bstack, rxsubrule698_pass1586, -1, 0
  rxsubrule698_pass1586:
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx694_pos, $P11, rx694_curclass, "$!pos"
    goto alt696_end1582
  alt696_11587:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1575
    nqp_rxmark rx694_bstack, rxsubrule699_pass1588, -1, 0
  rxsubrule699_pass1588:
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx694_pos, $P11, rx694_curclass, "$!pos"
    nqp_rxmark rx694_bstack, rxquantr700_done1590, rx694_pos, 0
  rxquantr700_loop1589:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1575
    goto rxsubrule701_pass1591
  rxsubrule701_back1592:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1575
  rxsubrule701_pass1591:
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule701_back1592
    push rx694_bstack, $I11
    push rx694_bstack, 0
    push rx694_bstack, rx694_pos
    elements $I11, rx694_cstack
    push rx694_bstack, $I11
    repr_get_attr_int rx694_pos, $P11, rx694_curclass, "$!pos"
    nqp_rxpeek $I19, rx694_bstack, rxquantr700_done1590
    inc $I19
    inc $I19
    set rx694_rep, rx694_bstack[$I19]
    nqp_rxcommit rx694_bstack, rxquantr700_done1590
    inc rx694_rep
  rxquantr700_done1590:
    goto alt696_end1582
  alt696_21593:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1575
    nqp_rxmark rx694_bstack, rxsubrule702_pass1594, -1, 0
  rxsubrule702_pass1594:
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx694_pos, $P11, rx694_curclass, "$!pos"
    goto alt696_end1582
  alt696_31595:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."variable"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1575
    nqp_rxmark rx694_bstack, rxsubrule703_pass1596, -1, 0
  rxsubrule703_pass1596:
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx694_pos, $P11, rx694_curclass, "$!pos"
    goto alt696_end1582
  alt696_end1582:
    nqp_rxcommit rx694_bstack, alt696_end1582
    rx694_cur."!cursor_pass"(rx694_pos, "colonpair", 'backtrack'=>1)
    .return (rx694_cur)
  rx694_restart1574:
    repr_get_attr_obj rx694_cstack, rx694_cur, rx694_curclass, "$!cstack"
  rx694_fail1575:
    unless rx694_bstack, rx694_done1573
    pop $I19, rx694_bstack
    if_null rx694_cstack, rx694_cstack_done1578
    unless rx694_cstack, rx694_cstack_done1578
    dec $I19
    set $P11, rx694_cstack[$I19]
  rx694_cstack_done1578:
    pop rx694_rep, rx694_bstack
    pop rx694_pos, rx694_bstack
    pop $I19, rx694_bstack
    lt rx694_pos, -1, rx694_done1573
    lt rx694_pos, 0, rx694_fail1575
    eq $I19, 0, rx694_fail1575
    nqp_islist $I20, rx694_cstack
    unless $I20, rx694_jump1576
    elements $I18, rx694_bstack
    le $I18, 0, rx694_cut1577
    dec $I18
    set $I18, rx694_bstack[$I18]
  rx694_cut1577:
    assign rx694_cstack, $I18
  rx694_jump1576:
    jump $I19
  rx694_done1573:
    rx694_cur."!cursor_fail"()
    .return (rx694_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_101_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 960
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx704_start
    .local string rx704_tgt
    .local int rx704_pos
    .local int rx704_off
    .local int rx704_eos
    .local int rx704_rep
    .local pmc rx704_cur
    .local pmc rx704_curclass
    .local pmc rx704_bstack
    .local pmc rx704_cstack
    rx704_start = self."!cursor_start_all"()
    set rx704_cur, rx704_start[0]
    set rx704_tgt, rx704_start[1]
    set rx704_pos, rx704_start[2]
    set rx704_curclass, rx704_start[3]
    set rx704_bstack, rx704_start[4]
    set $I19, rx704_start[5]
    store_lex unicode:"$\x{a2}", rx704_cur
    length rx704_eos, rx704_tgt
    eq $I19, 1, rx704_restart1599
    gt rx704_pos, rx704_eos, rx704_fail1600
    repr_get_attr_int $I11, self, rx704_curclass, "$!from"
    ne $I11, -1, rxscan705_done1606
    goto rxscan705_scan1605
  rxscan705_loop1604:
    inc rx704_pos
    gt rx704_pos, rx704_eos, rx704_fail1600
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!from", rx704_pos
  rxscan705_scan1605:
    nqp_rxmark rx704_bstack, rxscan705_loop1604, rx704_pos, 0
  rxscan705_done1606:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt706_01608
    nqp_push_label $P11, alt706_11615
    nqp_push_label $P11, alt706_21618
    nqp_push_label $P11, alt706_31626
    nqp_rxmark rx704_bstack, alt706_end1607, -1, 0
    rx704_cur."!alt"(rx704_pos, "alt_nfa__20_1381944291.41946", $P11)
    goto rx704_fail1600
  alt706_01608:
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    nqp_rxmark rx704_bstack, rxsubrule707_pass1609, -1, 0
  rxsubrule707_pass1609:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
    nqp_rxmark rx704_bstack, rxquantr708_done1611, rx704_pos, 0
  rxquantr708_loop1610:
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    goto rxsubrule709_pass1612
  rxsubrule709_back1613:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
  rxsubrule709_pass1612:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule709_back1613
    push rx704_bstack, $I11
    push rx704_bstack, 0
    push rx704_bstack, rx704_pos
    elements $I11, rx704_cstack
    push rx704_bstack, $I11
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
    nqp_rxpeek $I19, rx704_bstack, rxquantr708_done1611
    inc $I19
    inc $I19
    set rx704_rep, rx704_bstack[$I19]
    nqp_rxcommit rx704_bstack, rxquantr708_done1611
    inc rx704_rep
  rxquantr708_done1611:
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."name"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    nqp_rxmark rx704_bstack, rxsubrule710_pass1614, -1, 0
  rxsubrule710_pass1614:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
    goto alt706_end1607
  alt706_11615:
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    nqp_rxmark rx704_bstack, rxsubrule711_pass1616, -1, 0
  rxsubrule711_pass1616:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
    ge rx704_pos, rx704_eos, rx704_fail1600
    substr $S11, rx704_tgt, rx704_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx704_fail1600
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    nqp_rxmark rx704_bstack, rxsubrule712_pass1617, -1, 0
  rxsubrule712_pass1617:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
    goto alt706_end1607
  alt706_21618:
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    nqp_rxmark rx704_bstack, rxsubrule713_pass1619, -1, 0
  rxsubrule713_pass1619:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
    add $I11, rx704_pos, 1
    gt $I11, rx704_eos, rx704_fail1600
    substr $S10, rx704_tgt, rx704_pos, 1
    ne $S10, ucs4:"(", rx704_fail1600
    add rx704_pos, 1
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    nqp_rxmark rx704_bstack, rxsubrule714_pass1620, -1, 0
  rxsubrule714_pass1620:
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
  alt715_01622:
    nqp_rxmark rx704_bstack, alt715_11623, rx704_pos, 0
    add $I11, rx704_pos, 1
    gt $I11, rx704_eos, rx704_fail1600
    substr $S10, rx704_tgt, rx704_pos, 1
    ne $S10, ucs4:")", rx704_fail1600
    add rx704_pos, 1
    goto alt715_end1621
  alt715_11623:
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
    goto rxsubrule716_pass1624
  rxsubrule716_back1625:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx704_curclass, "$!pos"
    lt $I11, 0, rx704_fail1600
  rxsubrule716_pass1624:
    rx704_cstack = rx704_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule716_back1625
    push rx704_bstack, $I11
    push rx704_bstack, 0
    push rx704_bstack, rx704_pos
    elements $I11, rx704_cstack
    push rx704_bstack, $I11
    repr_get_attr_int rx704_pos, $P11, rx704_curclass, "$!pos"
  alt715_end1621:
    goto alt706_end1607
  alt706_31626:
    nqp_rxmark rx704_bstack, rxcap717_fail1628, rx704_pos, 0
    add $I11, rx704_pos, 1
    gt $I11, rx704_eos, rx704_fail1600
    substr $S10, rx704_tgt, rx704_pos, 1
    ne $S10, ucs4:"$", rx704_fail1600
    add rx704_pos, 1
    nqp_rxpeek $I19, rx704_bstack, rxcap717_fail1628
    inc $I19
    set $I11, rx704_bstack[$I19]
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx704_pos)
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "sigil")
    goto rxcap717_done1627
  rxcap717_fail1628:
    goto rx704_fail1600
  rxcap717_done1627:
    nqp_rxmark rx704_bstack, rxcap718_fail1630, rx704_pos, 0
    ge rx704_pos, rx704_eos, rx704_fail1600
    substr $S11, rx704_tgt, rx704_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx704_fail1600
    inc rx704_pos
    nqp_rxpeek $I19, rx704_bstack, rxcap718_fail1630
    inc $I19
    set $I11, rx704_bstack[$I19]
    repr_bind_attr_int rx704_cur, rx704_curclass, "$!pos", rx704_pos
    $P11 = rx704_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx704_pos)
    rx704_cstack = rx704_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap718_done1629
  rxcap718_fail1630:
    goto rx704_fail1600
  rxcap718_done1629:
    goto alt706_end1607
  alt706_end1607:
    rx704_cur."!cursor_pass"(rx704_pos, "variable", 'backtrack'=>1)
    .return (rx704_cur)
  rx704_restart1599:
    repr_get_attr_obj rx704_cstack, rx704_cur, rx704_curclass, "$!cstack"
  rx704_fail1600:
    unless rx704_bstack, rx704_done1598
    pop $I19, rx704_bstack
    if_null rx704_cstack, rx704_cstack_done1603
    unless rx704_cstack, rx704_cstack_done1603
    dec $I19
    set $P11, rx704_cstack[$I19]
  rx704_cstack_done1603:
    pop rx704_rep, rx704_bstack
    pop rx704_pos, rx704_bstack
    pop $I19, rx704_bstack
    lt rx704_pos, -1, rx704_done1598
    lt rx704_pos, 0, rx704_fail1600
    eq $I19, 0, rx704_fail1600
    nqp_islist $I20, rx704_cstack
    unless $I20, rx704_jump1601
    elements $I18, rx704_bstack
    le $I18, 0, rx704_cut1602
    dec $I18
    set $I18, rx704_bstack[$I18]
  rx704_cut1602:
    assign rx704_cstack, $I18
  rx704_jump1601:
    jump $I19
  rx704_done1598:
    rx704_cur."!cursor_fail"()
    .return (rx704_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_102_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 967
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx719_start
    .local string rx719_tgt
    .local int rx719_pos
    .local int rx719_off
    .local int rx719_eos
    .local int rx719_rep
    .local pmc rx719_cur
    .local pmc rx719_curclass
    .local pmc rx719_bstack
    .local pmc rx719_cstack
    rx719_start = self."!cursor_start_all"()
    set rx719_cur, rx719_start[0]
    set rx719_tgt, rx719_start[1]
    set rx719_pos, rx719_start[2]
    set rx719_curclass, rx719_start[3]
    set rx719_bstack, rx719_start[4]
    set $I19, rx719_start[5]
    store_lex unicode:"$\x{a2}", rx719_cur
    length rx719_eos, rx719_tgt
    eq $I19, 1, rx719_restart1633
    gt rx719_pos, rx719_eos, rx719_fail1634
    repr_get_attr_int $I11, self, rx719_curclass, "$!from"
    ne $I11, -1, rxscan720_done1640
    goto rxscan720_scan1639
  rxscan720_loop1638:
    inc rx719_pos
    gt rx719_pos, rx719_eos, rx719_fail1634
    repr_bind_attr_int rx719_cur, rx719_curclass, "$!from", rx719_pos
  rxscan720_scan1639:
    nqp_rxmark rx719_bstack, rxscan720_loop1638, rx719_pos, 0
  rxscan720_done1640:
    ge rx719_pos, rx719_eos, rx719_fail1634
    substr $S11, rx719_tgt, rx719_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx719_fail1634
    inc rx719_pos
    rx719_cur."!cursor_pass"(rx719_pos, "sigil", 'backtrack'=>1)
    .return (rx719_cur)
  rx719_restart1633:
    repr_get_attr_obj rx719_cstack, rx719_cur, rx719_curclass, "$!cstack"
  rx719_fail1634:
    unless rx719_bstack, rx719_done1632
    pop $I19, rx719_bstack
    if_null rx719_cstack, rx719_cstack_done1637
    unless rx719_cstack, rx719_cstack_done1637
    dec $I19
    set $P11, rx719_cstack[$I19]
  rx719_cstack_done1637:
    pop rx719_rep, rx719_bstack
    pop rx719_pos, rx719_bstack
    pop $I19, rx719_bstack
    lt rx719_pos, -1, rx719_done1632
    lt rx719_pos, 0, rx719_fail1634
    eq $I19, 0, rx719_fail1634
    nqp_islist $I20, rx719_cstack
    unless $I20, rx719_jump1635
    elements $I18, rx719_bstack
    le $I18, 0, rx719_cut1636
    dec $I18
    set $I18, rx719_bstack[$I18]
  rx719_cut1636:
    assign rx719_cstack, $I18
  rx719_jump1635:
    jump $I19
  rx719_done1632:
    rx719_cur."!cursor_fail"()
    .return (rx719_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_103_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 969
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx721_start
    .local string rx721_tgt
    .local int rx721_pos
    .local int rx721_off
    .local int rx721_eos
    .local int rx721_rep
    .local pmc rx721_cur
    .local pmc rx721_curclass
    .local pmc rx721_bstack
    .local pmc rx721_cstack
    rx721_start = self."!cursor_start_all"()
    set rx721_cur, rx721_start[0]
    set rx721_tgt, rx721_start[1]
    set rx721_pos, rx721_start[2]
    set rx721_curclass, rx721_start[3]
    set rx721_bstack, rx721_start[4]
    set $I19, rx721_start[5]
    store_lex unicode:"$\x{a2}", rx721_cur
    length rx721_eos, rx721_tgt
    eq $I19, 1, rx721_restart1643
    gt rx721_pos, rx721_eos, rx721_fail1644
    repr_get_attr_int $I11, self, rx721_curclass, "$!from"
    ne $I11, -1, rxscan722_done1650
    goto rxscan722_scan1649
  rxscan722_loop1648:
    inc rx721_pos
    gt rx721_pos, rx721_eos, rx721_fail1644
    repr_bind_attr_int rx721_cur, rx721_curclass, "$!from", rx721_pos
  rxscan722_scan1649:
    nqp_rxmark rx721_bstack, rxscan722_loop1648, rx721_pos, 0
  rxscan722_done1650:
    ge rx721_pos, rx721_eos, rx721_fail1644
    substr $S11, rx721_tgt, rx721_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx721_fail1644
    inc rx721_pos
    rx721_cur."!cursor_pass"(rx721_pos, "twigil", 'backtrack'=>1)
    .return (rx721_cur)
  rx721_restart1643:
    repr_get_attr_obj rx721_cstack, rx721_cur, rx721_curclass, "$!cstack"
  rx721_fail1644:
    unless rx721_bstack, rx721_done1642
    pop $I19, rx721_bstack
    if_null rx721_cstack, rx721_cstack_done1647
    unless rx721_cstack, rx721_cstack_done1647
    dec $I19
    set $P11, rx721_cstack[$I19]
  rx721_cstack_done1647:
    pop rx721_rep, rx721_bstack
    pop rx721_pos, rx721_bstack
    pop $I19, rx721_bstack
    lt rx721_pos, -1, rx721_done1642
    lt rx721_pos, 0, rx721_fail1644
    eq $I19, 0, rx721_fail1644
    nqp_islist $I20, rx721_cstack
    unless $I20, rx721_jump1645
    elements $I18, rx721_bstack
    le $I18, 0, rx721_cut1646
    dec $I18
    set $I18, rx721_bstack[$I18]
  rx721_cut1646:
    assign rx721_cstack, $I18
  rx721_jump1645:
    jump $I19
  rx721_done1642:
    rx721_cur."!cursor_fail"()
    .return (rx721_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_104_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 971
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_105_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 972
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_109 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx723_start
    .local string rx723_tgt
    .local int rx723_pos
    .local int rx723_off
    .local int rx723_eos
    .local int rx723_rep
    .local pmc rx723_cur
    .local pmc rx723_curclass
    .local pmc rx723_bstack
    .local pmc rx723_cstack
    rx723_start = self."!cursor_start_all"()
    set rx723_cur, rx723_start[0]
    set rx723_tgt, rx723_start[1]
    set rx723_pos, rx723_start[2]
    set rx723_curclass, rx723_start[3]
    set rx723_bstack, rx723_start[4]
    set $I19, rx723_start[5]
    store_lex unicode:"$\x{a2}", rx723_cur
    length rx723_eos, rx723_tgt
    eq $I19, 1, rx723_restart1653
    gt rx723_pos, rx723_eos, rx723_fail1654
    repr_get_attr_int $I11, self, rx723_curclass, "$!from"
    ne $I11, -1, rxscan724_done1660
    goto rxscan724_scan1659
  rxscan724_loop1658:
    inc rx723_pos
    gt rx723_pos, rx723_eos, rx723_fail1654
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!from", rx723_pos
  rxscan724_scan1659:
    nqp_rxmark rx723_bstack, rxscan724_loop1658, rx723_pos, 0
  rxscan724_done1660:
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!pos", rx723_pos
    store_lex unicode:"$\x{a2}", rx723_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1661
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_109, $P5004
    repr_defined $I5001, fb_tmp_109
    unless $I5001 goto if725_else1662 
    set $P5006, fb_tmp_109["$PACKAGE"]
    set $P5008, $P5006
    goto if725_end1663
  if725_else1662:
    null $P5007
    set $P5008, $P5007
  if725_end1663:
    unless_null $P5008, vivi_7261664
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7261664:
    unless_null $P5008, vivi_7271665
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7271665:
    set $P5003, $P5008
  fallback1661:
    set $P101, $P5003
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!pos", rx723_pos
    store_lex unicode:"$\x{a2}", rx723_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx723_bstack, rxcap728_fail1667, rx723_pos, 0
    add $I11, rx723_pos, 6
    gt $I11, rx723_eos, rx723_fail1654
    substr $S10, rx723_tgt, rx723_pos, 6
    ne $S10, ucs4:"module", rx723_fail1654
    add rx723_pos, 6
    nqp_rxpeek $I19, rx723_bstack, rxcap728_fail1667
    inc $I19
    set $I11, rx723_bstack[$I19]
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!pos", rx723_pos
    $P11 = rx723_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx723_pos)
    rx723_cstack = rx723_cur."!cursor_capture"($P11, "sym")
    goto rxcap728_done1666
  rxcap728_fail1667:
    goto rx723_fail1654
  rxcap728_done1666:
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!pos", rx723_pos
    $P11 = rx723_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx723_curclass, "$!pos"
    lt $I11, 0, rx723_fail1654
    nqp_rxmark rx723_bstack, rxsubrule729_pass1668, -1, 0
  rxsubrule729_pass1668:
    rx723_cstack = rx723_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx723_pos, $P11, rx723_curclass, "$!pos"
    rx723_cur."!cursor_pass"(rx723_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx723_cur)
  rx723_restart1653:
    repr_get_attr_obj rx723_cstack, rx723_cur, rx723_curclass, "$!cstack"
  rx723_fail1654:
    unless rx723_bstack, rx723_done1652
    pop $I19, rx723_bstack
    if_null rx723_cstack, rx723_cstack_done1657
    unless rx723_cstack, rx723_cstack_done1657
    dec $I19
    set $P11, rx723_cstack[$I19]
  rx723_cstack_done1657:
    pop rx723_rep, rx723_bstack
    pop rx723_pos, rx723_bstack
    pop $I19, rx723_bstack
    lt rx723_pos, -1, rx723_done1652
    lt rx723_pos, 0, rx723_fail1654
    eq $I19, 0, rx723_fail1654
    nqp_islist $I20, rx723_cstack
    unless $I20, rx723_jump1655
    elements $I18, rx723_bstack
    le $I18, 0, rx723_cut1656
    dec $I18
    set $I18, rx723_bstack[$I18]
  rx723_cut1656:
    assign rx723_cstack, $I18
  rx723_jump1655:
    jump $I19
  rx723_done1652:
    rx723_cur."!cursor_fail"()
    .return (rx723_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_106_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 977
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_110 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx730_start
    .local string rx730_tgt
    .local int rx730_pos
    .local int rx730_off
    .local int rx730_eos
    .local int rx730_rep
    .local pmc rx730_cur
    .local pmc rx730_curclass
    .local pmc rx730_bstack
    .local pmc rx730_cstack
    rx730_start = self."!cursor_start_all"()
    set rx730_cur, rx730_start[0]
    set rx730_tgt, rx730_start[1]
    set rx730_pos, rx730_start[2]
    set rx730_curclass, rx730_start[3]
    set rx730_bstack, rx730_start[4]
    set $I19, rx730_start[5]
    store_lex unicode:"$\x{a2}", rx730_cur
    length rx730_eos, rx730_tgt
    eq $I19, 1, rx730_restart1671
    gt rx730_pos, rx730_eos, rx730_fail1672
    repr_get_attr_int $I11, self, rx730_curclass, "$!from"
    ne $I11, -1, rxscan731_done1678
    goto rxscan731_scan1677
  rxscan731_loop1676:
    inc rx730_pos
    gt rx730_pos, rx730_eos, rx730_fail1672
    repr_bind_attr_int rx730_cur, rx730_curclass, "$!from", rx730_pos
  rxscan731_scan1677:
    nqp_rxmark rx730_bstack, rxscan731_loop1676, rx730_pos, 0
  rxscan731_done1678:
    repr_bind_attr_int rx730_cur, rx730_curclass, "$!pos", rx730_pos
    store_lex unicode:"$\x{a2}", rx730_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1679
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_110, $P5004
    repr_defined $I5001, fb_tmp_110
    unless $I5001 goto if732_else1680 
    set $P5006, fb_tmp_110["$PACKAGE"]
    set $P5008, $P5006
    goto if732_end1681
  if732_else1680:
    null $P5007
    set $P5008, $P5007
  if732_end1681:
    unless_null $P5008, vivi_7331682
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7331682:
    unless_null $P5008, vivi_7341683
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7341683:
    set $P5003, $P5008
  fallback1679:
    set $P101, $P5003
    repr_bind_attr_int rx730_cur, rx730_curclass, "$!pos", rx730_pos
    store_lex unicode:"$\x{a2}", rx730_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx730_bstack, rxcap735_fail1685, rx730_pos, 0
    add $I11, rx730_pos, 7
    gt $I11, rx730_eos, rx730_fail1672
    substr $S10, rx730_tgt, rx730_pos, 7
    ne $S10, ucs4:"knowhow", rx730_fail1672
    add rx730_pos, 7
    nqp_rxpeek $I19, rx730_bstack, rxcap735_fail1685
    inc $I19
    set $I11, rx730_bstack[$I19]
    repr_bind_attr_int rx730_cur, rx730_curclass, "$!pos", rx730_pos
    $P11 = rx730_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx730_pos)
    rx730_cstack = rx730_cur."!cursor_capture"($P11, "sym")
    goto rxcap735_done1684
  rxcap735_fail1685:
    goto rx730_fail1672
  rxcap735_done1684:
    repr_bind_attr_int rx730_cur, rx730_curclass, "$!pos", rx730_pos
    $P11 = rx730_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx730_curclass, "$!pos"
    lt $I11, 0, rx730_fail1672
    nqp_rxmark rx730_bstack, rxsubrule736_pass1686, -1, 0
  rxsubrule736_pass1686:
    rx730_cstack = rx730_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx730_pos, $P11, rx730_curclass, "$!pos"
    rx730_cur."!cursor_pass"(rx730_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx730_cur)
  rx730_restart1671:
    repr_get_attr_obj rx730_cstack, rx730_cur, rx730_curclass, "$!cstack"
  rx730_fail1672:
    unless rx730_bstack, rx730_done1670
    pop $I19, rx730_bstack
    if_null rx730_cstack, rx730_cstack_done1675
    unless rx730_cstack, rx730_cstack_done1675
    dec $I19
    set $P11, rx730_cstack[$I19]
  rx730_cstack_done1675:
    pop rx730_rep, rx730_bstack
    pop rx730_pos, rx730_bstack
    pop $I19, rx730_bstack
    lt rx730_pos, -1, rx730_done1670
    lt rx730_pos, 0, rx730_fail1672
    eq $I19, 0, rx730_fail1672
    nqp_islist $I20, rx730_cstack
    unless $I20, rx730_jump1673
    elements $I18, rx730_bstack
    le $I18, 0, rx730_cut1674
    dec $I18
    set $I18, rx730_bstack[$I18]
  rx730_cut1674:
    assign rx730_cstack, $I18
  rx730_jump1673:
    jump $I19
  rx730_done1670:
    rx730_cur."!cursor_fail"()
    .return (rx730_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_107_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 982
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_111 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx737_start
    .local string rx737_tgt
    .local int rx737_pos
    .local int rx737_off
    .local int rx737_eos
    .local int rx737_rep
    .local pmc rx737_cur
    .local pmc rx737_curclass
    .local pmc rx737_bstack
    .local pmc rx737_cstack
    rx737_start = self."!cursor_start_all"()
    set rx737_cur, rx737_start[0]
    set rx737_tgt, rx737_start[1]
    set rx737_pos, rx737_start[2]
    set rx737_curclass, rx737_start[3]
    set rx737_bstack, rx737_start[4]
    set $I19, rx737_start[5]
    store_lex unicode:"$\x{a2}", rx737_cur
    length rx737_eos, rx737_tgt
    eq $I19, 1, rx737_restart1689
    gt rx737_pos, rx737_eos, rx737_fail1690
    repr_get_attr_int $I11, self, rx737_curclass, "$!from"
    ne $I11, -1, rxscan738_done1696
    goto rxscan738_scan1695
  rxscan738_loop1694:
    inc rx737_pos
    gt rx737_pos, rx737_eos, rx737_fail1690
    repr_bind_attr_int rx737_cur, rx737_curclass, "$!from", rx737_pos
  rxscan738_scan1695:
    nqp_rxmark rx737_bstack, rxscan738_loop1694, rx737_pos, 0
  rxscan738_done1696:
    repr_bind_attr_int rx737_cur, rx737_curclass, "$!pos", rx737_pos
    store_lex unicode:"$\x{a2}", rx737_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1697
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_111, $P5004
    repr_defined $I5001, fb_tmp_111
    unless $I5001 goto if739_else1698 
    set $P5006, fb_tmp_111["$PACKAGE"]
    set $P5008, $P5006
    goto if739_end1699
  if739_else1698:
    null $P5007
    set $P5008, $P5007
  if739_end1699:
    unless_null $P5008, vivi_7401700
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7401700:
    unless_null $P5008, vivi_7411701
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7411701:
    set $P5003, $P5008
  fallback1697:
    set $P101, $P5003
    repr_bind_attr_int rx737_cur, rx737_curclass, "$!pos", rx737_pos
    store_lex unicode:"$\x{a2}", rx737_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx737_bstack, rxcap742_fail1703, rx737_pos, 0
    add $I11, rx737_pos, 5
    gt $I11, rx737_eos, rx737_fail1690
    substr $S10, rx737_tgt, rx737_pos, 5
    ne $S10, ucs4:"class", rx737_fail1690
    add rx737_pos, 5
    nqp_rxpeek $I19, rx737_bstack, rxcap742_fail1703
    inc $I19
    set $I11, rx737_bstack[$I19]
    repr_bind_attr_int rx737_cur, rx737_curclass, "$!pos", rx737_pos
    $P11 = rx737_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx737_pos)
    rx737_cstack = rx737_cur."!cursor_capture"($P11, "sym")
    goto rxcap742_done1702
  rxcap742_fail1703:
    goto rx737_fail1690
  rxcap742_done1702:
    repr_bind_attr_int rx737_cur, rx737_curclass, "$!pos", rx737_pos
    $P11 = rx737_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx737_curclass, "$!pos"
    lt $I11, 0, rx737_fail1690
    nqp_rxmark rx737_bstack, rxsubrule743_pass1704, -1, 0
  rxsubrule743_pass1704:
    rx737_cstack = rx737_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx737_pos, $P11, rx737_curclass, "$!pos"
    rx737_cur."!cursor_pass"(rx737_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx737_cur)
  rx737_restart1689:
    repr_get_attr_obj rx737_cstack, rx737_cur, rx737_curclass, "$!cstack"
  rx737_fail1690:
    unless rx737_bstack, rx737_done1688
    pop $I19, rx737_bstack
    if_null rx737_cstack, rx737_cstack_done1693
    unless rx737_cstack, rx737_cstack_done1693
    dec $I19
    set $P11, rx737_cstack[$I19]
  rx737_cstack_done1693:
    pop rx737_rep, rx737_bstack
    pop rx737_pos, rx737_bstack
    pop $I19, rx737_bstack
    lt rx737_pos, -1, rx737_done1688
    lt rx737_pos, 0, rx737_fail1690
    eq $I19, 0, rx737_fail1690
    nqp_islist $I20, rx737_cstack
    unless $I20, rx737_jump1691
    elements $I18, rx737_bstack
    le $I18, 0, rx737_cut1692
    dec $I18
    set $I18, rx737_bstack[$I18]
  rx737_cut1692:
    assign rx737_cstack, $I18
  rx737_jump1691:
    jump $I19
  rx737_done1688:
    rx737_cur."!cursor_fail"()
    .return (rx737_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_108_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 987
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_112 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx744_start
    .local string rx744_tgt
    .local int rx744_pos
    .local int rx744_off
    .local int rx744_eos
    .local int rx744_rep
    .local pmc rx744_cur
    .local pmc rx744_curclass
    .local pmc rx744_bstack
    .local pmc rx744_cstack
    rx744_start = self."!cursor_start_all"()
    set rx744_cur, rx744_start[0]
    set rx744_tgt, rx744_start[1]
    set rx744_pos, rx744_start[2]
    set rx744_curclass, rx744_start[3]
    set rx744_bstack, rx744_start[4]
    set $I19, rx744_start[5]
    store_lex unicode:"$\x{a2}", rx744_cur
    length rx744_eos, rx744_tgt
    eq $I19, 1, rx744_restart1707
    gt rx744_pos, rx744_eos, rx744_fail1708
    repr_get_attr_int $I11, self, rx744_curclass, "$!from"
    ne $I11, -1, rxscan745_done1714
    goto rxscan745_scan1713
  rxscan745_loop1712:
    inc rx744_pos
    gt rx744_pos, rx744_eos, rx744_fail1708
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!from", rx744_pos
  rxscan745_scan1713:
    nqp_rxmark rx744_bstack, rxscan745_loop1712, rx744_pos, 0
  rxscan745_done1714:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    store_lex unicode:"$\x{a2}", rx744_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1715
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_112, $P5004
    repr_defined $I5001, fb_tmp_112
    unless $I5001 goto if746_else1716 
    set $P5006, fb_tmp_112["$PACKAGE"]
    set $P5008, $P5006
    goto if746_end1717
  if746_else1716:
    null $P5007
    set $P5008, $P5007
  if746_end1717:
    unless_null $P5008, vivi_7471718
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7471718:
    unless_null $P5008, vivi_7481719
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7481719:
    set $P5003, $P5008
  fallback1715:
    set $P101, $P5003
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    store_lex unicode:"$\x{a2}", rx744_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx744_bstack, rxcap749_fail1721, rx744_pos, 0
    add $I11, rx744_pos, 7
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 7
    ne $S10, ucs4:"grammar", rx744_fail1708
    add rx744_pos, 7
    nqp_rxpeek $I19, rx744_bstack, rxcap749_fail1721
    inc $I19
    set $I11, rx744_bstack[$I19]
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx744_pos)
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "sym")
    goto rxcap749_done1720
  rxcap749_fail1721:
    goto rx744_fail1708
  rxcap749_done1720:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule750_pass1722, -1, 0
  rxsubrule750_pass1722:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    rx744_cur."!cursor_pass"(rx744_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx744_cur)
  rx744_restart1707:
    repr_get_attr_obj rx744_cstack, rx744_cur, rx744_curclass, "$!cstack"
  rx744_fail1708:
    unless rx744_bstack, rx744_done1706
    pop $I19, rx744_bstack
    if_null rx744_cstack, rx744_cstack_done1711
    unless rx744_cstack, rx744_cstack_done1711
    dec $I19
    set $P11, rx744_cstack[$I19]
  rx744_cstack_done1711:
    pop rx744_rep, rx744_bstack
    pop rx744_pos, rx744_bstack
    pop $I19, rx744_bstack
    lt rx744_pos, -1, rx744_done1706
    lt rx744_pos, 0, rx744_fail1708
    eq $I19, 0, rx744_fail1708
    nqp_islist $I20, rx744_cstack
    unless $I20, rx744_jump1709
    elements $I18, rx744_bstack
    le $I18, 0, rx744_cut1710
    dec $I18
    set $I18, rx744_bstack[$I18]
  rx744_cut1710:
    assign rx744_cstack, $I18
  rx744_jump1709:
    jump $I19
  rx744_done1706:
    rx744_cur."!cursor_fail"()
    .return (rx744_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_109_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 992
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_113 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx751_start
    .local string rx751_tgt
    .local int rx751_pos
    .local int rx751_off
    .local int rx751_eos
    .local int rx751_rep
    .local pmc rx751_cur
    .local pmc rx751_curclass
    .local pmc rx751_bstack
    .local pmc rx751_cstack
    rx751_start = self."!cursor_start_all"()
    set rx751_cur, rx751_start[0]
    set rx751_tgt, rx751_start[1]
    set rx751_pos, rx751_start[2]
    set rx751_curclass, rx751_start[3]
    set rx751_bstack, rx751_start[4]
    set $I19, rx751_start[5]
    store_lex unicode:"$\x{a2}", rx751_cur
    length rx751_eos, rx751_tgt
    eq $I19, 1, rx751_restart1725
    gt rx751_pos, rx751_eos, rx751_fail1726
    repr_get_attr_int $I11, self, rx751_curclass, "$!from"
    ne $I11, -1, rxscan752_done1732
    goto rxscan752_scan1731
  rxscan752_loop1730:
    inc rx751_pos
    gt rx751_pos, rx751_eos, rx751_fail1726
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!from", rx751_pos
  rxscan752_scan1731:
    nqp_rxmark rx751_bstack, rxscan752_loop1730, rx751_pos, 0
  rxscan752_done1732:
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!pos", rx751_pos
    store_lex unicode:"$\x{a2}", rx751_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1733
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_113, $P5004
    repr_defined $I5001, fb_tmp_113
    unless $I5001 goto if753_else1734 
    set $P5006, fb_tmp_113["$PACKAGE"]
    set $P5008, $P5006
    goto if753_end1735
  if753_else1734:
    null $P5007
    set $P5008, $P5007
  if753_end1735:
    unless_null $P5008, vivi_7541736
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7541736:
    unless_null $P5008, vivi_7551737
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7551737:
    set $P5003, $P5008
  fallback1733:
    set $P101, $P5003
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!pos", rx751_pos
    store_lex unicode:"$\x{a2}", rx751_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx751_bstack, rxcap756_fail1739, rx751_pos, 0
    add $I11, rx751_pos, 4
    gt $I11, rx751_eos, rx751_fail1726
    substr $S10, rx751_tgt, rx751_pos, 4
    ne $S10, ucs4:"role", rx751_fail1726
    add rx751_pos, 4
    nqp_rxpeek $I19, rx751_bstack, rxcap756_fail1739
    inc $I19
    set $I11, rx751_bstack[$I19]
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!pos", rx751_pos
    $P11 = rx751_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx751_pos)
    rx751_cstack = rx751_cur."!cursor_capture"($P11, "sym")
    goto rxcap756_done1738
  rxcap756_fail1739:
    goto rx751_fail1726
  rxcap756_done1738:
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!pos", rx751_pos
    $P11 = rx751_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx751_curclass, "$!pos"
    lt $I11, 0, rx751_fail1726
    nqp_rxmark rx751_bstack, rxsubrule757_pass1740, -1, 0
  rxsubrule757_pass1740:
    rx751_cstack = rx751_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx751_pos, $P11, rx751_curclass, "$!pos"
    rx751_cur."!cursor_pass"(rx751_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx751_cur)
  rx751_restart1725:
    repr_get_attr_obj rx751_cstack, rx751_cur, rx751_curclass, "$!cstack"
  rx751_fail1726:
    unless rx751_bstack, rx751_done1724
    pop $I19, rx751_bstack
    if_null rx751_cstack, rx751_cstack_done1729
    unless rx751_cstack, rx751_cstack_done1729
    dec $I19
    set $P11, rx751_cstack[$I19]
  rx751_cstack_done1729:
    pop rx751_rep, rx751_bstack
    pop rx751_pos, rx751_bstack
    pop $I19, rx751_bstack
    lt rx751_pos, -1, rx751_done1724
    lt rx751_pos, 0, rx751_fail1726
    eq $I19, 0, rx751_fail1726
    nqp_islist $I20, rx751_cstack
    unless $I20, rx751_jump1727
    elements $I18, rx751_bstack
    le $I18, 0, rx751_cut1728
    dec $I18
    set $I18, rx751_bstack[$I18]
  rx751_cut1728:
    assign rx751_cstack, $I18
  rx751_jump1727:
    jump $I19
  rx751_done1724:
    rx751_cur."!cursor_fail"()
    .return (rx751_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_110_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 997
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_114 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx758_start
    .local string rx758_tgt
    .local int rx758_pos
    .local int rx758_off
    .local int rx758_eos
    .local int rx758_rep
    .local pmc rx758_cur
    .local pmc rx758_curclass
    .local pmc rx758_bstack
    .local pmc rx758_cstack
    rx758_start = self."!cursor_start_all"()
    set rx758_cur, rx758_start[0]
    set rx758_tgt, rx758_start[1]
    set rx758_pos, rx758_start[2]
    set rx758_curclass, rx758_start[3]
    set rx758_bstack, rx758_start[4]
    set $I19, rx758_start[5]
    store_lex unicode:"$\x{a2}", rx758_cur
    length rx758_eos, rx758_tgt
    eq $I19, 1, rx758_restart1743
    gt rx758_pos, rx758_eos, rx758_fail1744
    repr_get_attr_int $I11, self, rx758_curclass, "$!from"
    ne $I11, -1, rxscan759_done1750
    goto rxscan759_scan1749
  rxscan759_loop1748:
    inc rx758_pos
    gt rx758_pos, rx758_eos, rx758_fail1744
    repr_bind_attr_int rx758_cur, rx758_curclass, "$!from", rx758_pos
  rxscan759_scan1749:
    nqp_rxmark rx758_bstack, rxscan759_loop1748, rx758_pos, 0
  rxscan759_done1750:
    repr_bind_attr_int rx758_cur, rx758_curclass, "$!pos", rx758_pos
    store_lex unicode:"$\x{a2}", rx758_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1751
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_114, $P5004
    repr_defined $I5001, fb_tmp_114
    unless $I5001 goto if760_else1752 
    set $P5006, fb_tmp_114["$PACKAGE"]
    set $P5008, $P5006
    goto if760_end1753
  if760_else1752:
    null $P5007
    set $P5008, $P5007
  if760_end1753:
    unless_null $P5008, vivi_7611754
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7611754:
    unless_null $P5008, vivi_7621755
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7621755:
    set $P5003, $P5008
  fallback1751:
    set $P101, $P5003
    repr_bind_attr_int rx758_cur, rx758_curclass, "$!pos", rx758_pos
    store_lex unicode:"$\x{a2}", rx758_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx758_bstack, rxcap763_fail1757, rx758_pos, 0
    add $I11, rx758_pos, 6
    gt $I11, rx758_eos, rx758_fail1744
    substr $S10, rx758_tgt, rx758_pos, 6
    ne $S10, ucs4:"native", rx758_fail1744
    add rx758_pos, 6
    nqp_rxpeek $I19, rx758_bstack, rxcap763_fail1757
    inc $I19
    set $I11, rx758_bstack[$I19]
    repr_bind_attr_int rx758_cur, rx758_curclass, "$!pos", rx758_pos
    $P11 = rx758_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx758_pos)
    rx758_cstack = rx758_cur."!cursor_capture"($P11, "sym")
    goto rxcap763_done1756
  rxcap763_fail1757:
    goto rx758_fail1744
  rxcap763_done1756:
    repr_bind_attr_int rx758_cur, rx758_curclass, "$!pos", rx758_pos
    $P11 = rx758_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx758_curclass, "$!pos"
    lt $I11, 0, rx758_fail1744
    nqp_rxmark rx758_bstack, rxsubrule764_pass1758, -1, 0
  rxsubrule764_pass1758:
    rx758_cstack = rx758_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx758_pos, $P11, rx758_curclass, "$!pos"
    rx758_cur."!cursor_pass"(rx758_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx758_cur)
  rx758_restart1743:
    repr_get_attr_obj rx758_cstack, rx758_cur, rx758_curclass, "$!cstack"
  rx758_fail1744:
    unless rx758_bstack, rx758_done1742
    pop $I19, rx758_bstack
    if_null rx758_cstack, rx758_cstack_done1747
    unless rx758_cstack, rx758_cstack_done1747
    dec $I19
    set $P11, rx758_cstack[$I19]
  rx758_cstack_done1747:
    pop rx758_rep, rx758_bstack
    pop rx758_pos, rx758_bstack
    pop $I19, rx758_bstack
    lt rx758_pos, -1, rx758_done1742
    lt rx758_pos, 0, rx758_fail1744
    eq $I19, 0, rx758_fail1744
    nqp_islist $I20, rx758_cstack
    unless $I20, rx758_jump1745
    elements $I18, rx758_bstack
    le $I18, 0, rx758_cut1746
    dec $I18
    set $I18, rx758_bstack[$I18]
  rx758_cut1746:
    assign rx758_cstack, $I18
  rx758_jump1745:
    jump $I19
  rx758_done1742:
    rx758_cur."!cursor_fail"()
    .return (rx758_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_111_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1002
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_115 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx765_start
    .local string rx765_tgt
    .local int rx765_pos
    .local int rx765_off
    .local int rx765_eos
    .local int rx765_rep
    .local pmc rx765_cur
    .local pmc rx765_curclass
    .local pmc rx765_bstack
    .local pmc rx765_cstack
    rx765_start = self."!cursor_start_all"()
    set rx765_cur, rx765_start[0]
    set rx765_tgt, rx765_start[1]
    set rx765_pos, rx765_start[2]
    set rx765_curclass, rx765_start[3]
    set rx765_bstack, rx765_start[4]
    set $I19, rx765_start[5]
    store_lex unicode:"$\x{a2}", rx765_cur
    length rx765_eos, rx765_tgt
    eq $I19, 1, rx765_restart1761
    gt rx765_pos, rx765_eos, rx765_fail1762
    repr_get_attr_int $I11, self, rx765_curclass, "$!from"
    ne $I11, -1, rxscan766_done1768
    goto rxscan766_scan1767
  rxscan766_loop1766:
    inc rx765_pos
    gt rx765_pos, rx765_eos, rx765_fail1762
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!from", rx765_pos
  rxscan766_scan1767:
    nqp_rxmark rx765_bstack, rxscan766_loop1766, rx765_pos, 0
  rxscan766_done1768:
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    store_lex unicode:"$\x{a2}", rx765_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1769
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_115, $P5004
    repr_defined $I5001, fb_tmp_115
    unless $I5001 goto if767_else1770 
    set $P5006, fb_tmp_115["$PACKAGE"]
    set $P5008, $P5006
    goto if767_end1771
  if767_else1770:
    null $P5007
    set $P5008, $P5007
  if767_end1771:
    unless_null $P5008, vivi_7681772
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_7681772:
    unless_null $P5008, vivi_7691773
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7691773:
    set $P5003, $P5008
  fallback1769:
    set $P101, $P5003
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    store_lex unicode:"$\x{a2}", rx765_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx765_bstack, rxcap770_fail1775, rx765_pos, 0
    add $I11, rx765_pos, 4
    gt $I11, rx765_eos, rx765_fail1762
    substr $S10, rx765_tgt, rx765_pos, 4
    ne $S10, ucs4:"stub", rx765_fail1762
    add rx765_pos, 4
    nqp_rxpeek $I19, rx765_bstack, rxcap770_fail1775
    inc $I19
    set $I11, rx765_bstack[$I19]
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx765_pos)
    rx765_cstack = rx765_cur."!cursor_capture"($P11, "sym")
    goto rxcap770_done1774
  rxcap770_fail1775:
    goto rx765_fail1762
  rxcap770_done1774:
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."name"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    nqp_rxmark rx765_bstack, rxsubrule772_pass1777, -1, 0
  rxsubrule772_pass1777:
    rx765_cstack = rx765_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    add $I11, rx765_pos, 9
    gt $I11, rx765_eos, rx765_fail1762
    substr $S10, rx765_tgt, rx765_pos, 9
    ne $S10, ucs4:"metaclass", rx765_fail1762
    add rx765_pos, 9
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."name"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    nqp_rxmark rx765_bstack, rxsubrule775_pass1780, -1, 0
  rxsubrule775_pass1780:
    rx765_cstack = rx765_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    add $I11, rx765_pos, 1
    gt $I11, rx765_eos, rx765_fail1762
    substr $S10, rx765_tgt, rx765_pos, 1
    ne $S10, ucs4:"{", rx765_fail1762
    add rx765_pos, 1
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    add $I11, rx765_pos, 3
    gt $I11, rx765_eos, rx765_fail1762
    substr $S10, rx765_tgt, rx765_pos, 3
    ne $S10, ucs4:"...", rx765_fail1762
    add rx765_pos, 3
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    add $I11, rx765_pos, 1
    gt $I11, rx765_eos, rx765_fail1762
    substr $S10, rx765_tgt, rx765_pos, 1
    ne $S10, ucs4:"}", rx765_fail1762
    add rx765_pos, 1
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1762
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    rx765_cur."!cursor_pass"(rx765_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx765_cur)
  rx765_restart1761:
    repr_get_attr_obj rx765_cstack, rx765_cur, rx765_curclass, "$!cstack"
  rx765_fail1762:
    unless rx765_bstack, rx765_done1760
    pop $I19, rx765_bstack
    if_null rx765_cstack, rx765_cstack_done1765
    unless rx765_cstack, rx765_cstack_done1765
    dec $I19
    set $P11, rx765_cstack[$I19]
  rx765_cstack_done1765:
    pop rx765_rep, rx765_bstack
    pop rx765_pos, rx765_bstack
    pop $I19, rx765_bstack
    lt rx765_pos, -1, rx765_done1760
    lt rx765_pos, 0, rx765_fail1762
    eq $I19, 0, rx765_fail1762
    nqp_islist $I20, rx765_cstack
    unless $I20, rx765_jump1763
    elements $I18, rx765_bstack
    le $I18, 0, rx765_cut1764
    dec $I18
    set $I18, rx765_bstack[$I18]
  rx765_cut1764:
    assign rx765_cstack, $I18
  rx765_jump1763:
    jump $I19
  rx765_done1760:
    rx765_cur."!cursor_fail"()
    .return (rx765_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_112_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1010
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_409_1381944288.90674' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_410_1381944288.90674' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx780_start
    .local string rx780_tgt
    .local int rx780_pos
    .local int rx780_off
    .local int rx780_eos
    .local int rx780_rep
    .local pmc rx780_cur
    .local pmc rx780_curclass
    .local pmc rx780_bstack
    .local pmc rx780_cstack
    rx780_start = self."!cursor_start_all"()
    set rx780_cur, rx780_start[0]
    set rx780_tgt, rx780_start[1]
    set rx780_pos, rx780_start[2]
    set rx780_curclass, rx780_start[3]
    set rx780_bstack, rx780_start[4]
    set $I19, rx780_start[5]
    store_lex unicode:"$\x{a2}", rx780_cur
    length rx780_eos, rx780_tgt
    eq $I19, 1, rx780_restart1787
    gt rx780_pos, rx780_eos, rx780_fail1788
    repr_get_attr_int $I11, self, rx780_curclass, "$!from"
    ne $I11, -1, rxscan781_done1794
    goto rxscan781_scan1793
  rxscan781_loop1792:
    inc rx780_pos
    gt rx780_pos, rx780_eos, rx780_fail1788
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!from", rx780_pos
  rxscan781_scan1793:
    nqp_rxmark rx780_bstack, rxscan781_loop1792, rx780_pos, 0
  rxscan781_done1794:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    store_lex unicode:"$\x{a2}", rx780_cur
    unless_null $P101, fallback1796
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_116, $P5003
    repr_defined $I5001, fb_tmp_116
    unless $I5001 goto if783_else1797 
    set $P5005, fb_tmp_116["$PACKAGE"]
    set $P5007, $P5005
    goto if783_end1798
  if783_else1797:
    null $P5006
    set $P5007, $P5006
  if783_end1798:
    unless_null $P5007, vivi_7841799
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_7841799:
    unless_null $P5007, vivi_7851800
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_7851800:
    set $P101, $P5007
  fallback1796:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    store_lex unicode:"$\x{a2}", rx780_cur
.annotate 'line', 1012
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1802
    nqp_get_sc_object $P5012, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5011, $P5012
    set fb_tmp_117, $P5011
    repr_defined $I5002, fb_tmp_117
    unless $I5002 goto if787_else1803 
    set $P5013, fb_tmp_117["$W"]
    set $P5015, $P5013
    goto if787_end1804
  if787_else1803:
    null $P5014
    set $P5015, $P5014
  if787_end1804:
    unless_null $P5015, vivi_7881805
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_7881805:
    unless_null $P5015, vivi_7891806
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_7891806:
    set $P5010, $P5015
  fallback1802:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."name"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule791_pass1808, -1, 0
  rxsubrule791_pass1808:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxmark rx780_bstack, rxquantr795_done1813, rx780_pos, 0
  rxquantr795_loop1812:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    store_lex unicode:"$\x{a2}", rx780_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_409_1381944288.90674' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx780_fail1788
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 1
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 1
    ne $S10, ucs4:"[", rx780_fail1788
    add rx780_pos, 1
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule802_pass1822, -1, 0
  rxsubrule802_pass1822:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt803_01824:
    nqp_rxmark rx780_bstack, alt803_11825, rx780_pos, 0
    add $I11, rx780_pos, 1
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 1
    ne $S10, ucs4:"]", rx780_fail1788
    add rx780_pos, 1
    goto alt803_end1823
  alt803_11825:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    goto rxsubrule804_pass1826
  rxsubrule804_back1827:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
  rxsubrule804_pass1826:
    rx780_cstack = rx780_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule804_back1827
    push rx780_bstack, $I11
    push rx780_bstack, 0
    push rx780_bstack, rx780_pos
    elements $I11, rx780_cstack
    push rx780_bstack, $I11
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt803_end1823:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxpeek $I19, rx780_bstack, rxquantr795_done1813
    inc $I19
    inc $I19
    set rx780_rep, rx780_bstack[$I19]
    nqp_rxcommit rx780_bstack, rxquantr795_done1813
    inc rx780_rep
  rxquantr795_done1813:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxmark rx780_bstack, rxquantr807_done1831, rx780_pos, 0
  rxquantr807_loop1830:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 2
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 2
    ne $S10, ucs4:"is", rx780_fail1788
    add rx780_pos, 2
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 5
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 5
    ne $S10, ucs4:"repr(", rx780_fail1788
    add rx780_pos, 5
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule811_pass1835, -1, 0
  rxsubrule811_pass1835:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 1
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 1
    ne $S10, ucs4:")", rx780_fail1788
    add rx780_pos, 1
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxpeek $I19, rx780_bstack, rxquantr807_done1831
    inc $I19
    inc $I19
    set rx780_rep, rx780_bstack[$I19]
    nqp_rxcommit rx780_bstack, rxquantr807_done1831
    inc rx780_rep
  rxquantr807_done1831:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    store_lex unicode:"$\x{a2}", rx780_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_410_1381944288.90674' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxmark rx780_bstack, rxquantr933_done2041, rx780_pos, 0
  rxquantr933_loop2040:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxmark rx780_bstack, rxcap935_fail2044, rx780_pos, 0
    add $I11, rx780_pos, 9
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 9
    ne $S10, ucs4:"is export", rx780_fail1788
    add rx780_pos, 9
    nqp_rxpeek $I19, rx780_bstack, rxcap935_fail2044
    inc $I19
    set $I11, rx780_bstack[$I19]
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx780_pos)
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "export")
    goto rxcap935_done2043
  rxcap935_fail2044:
    goto rx780_fail1788
  rxcap935_done2043:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxpeek $I19, rx780_bstack, rxquantr933_done2041
    inc $I19
    inc $I19
    set rx780_rep, rx780_bstack[$I19]
    nqp_rxcommit rx780_bstack, rxquantr933_done2041
    inc rx780_rep
  rxquantr933_done2041:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxmark rx780_bstack, rxquantr938_done2048, rx780_pos, 0
  rxquantr938_loop2047:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 2
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 2
    ne $S10, ucs4:"is", rx780_fail1788
    add rx780_pos, 2
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."name"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule941_pass2051, -1, 0
  rxsubrule941_pass2051:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxpeek $I19, rx780_bstack, rxquantr938_done2048
    inc $I19
    inc $I19
    set rx780_rep, rx780_bstack[$I19]
    nqp_rxcommit rx780_bstack, rxquantr938_done2048
    inc rx780_rep
  rxquantr938_done2048:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxmark rx780_bstack, rxquantr944_done2055, rx780_pos, 0
  rxquantr944_loop2054:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 4
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 4
    ne $S10, ucs4:"does", rx780_fail1788
    add rx780_pos, 4
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."name"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule947_pass2058, -1, 0
  rxsubrule947_pass2058:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    nqp_rxpeek $I19, rx780_bstack, rxquantr944_done2055
    inc $I19
    inc $I19
    set rx780_rep, rx780_bstack[$I19]
    nqp_rxcommit rx780_bstack, rxquantr944_done2055
    inc rx780_rep
    nqp_rxmark rx780_bstack, rxquantr944_done2055, rx780_pos, rx780_rep
    goto rxquantr944_loop2054
  rxquantr944_done2055:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt950_02062:
    nqp_rxmark rx780_bstack, alt950_12077, rx780_pos, 0
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    add $I11, rx780_pos, 1
    gt $I11, rx780_eos, rx780_fail1788
    substr $S10, rx780_tgt, rx780_pos, 1
    ne $S10, ucs4:";", rx780_fail1788
    add rx780_pos, 1
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule953_pass2065, -1, 0
  rxsubrule953_pass2065:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt955_02068:
    nqp_rxmark rx780_bstack, alt955_12072, rx780_pos, 0
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    lt rx780_pos, rx780_eos, rx780_fail1788
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    goto alt955_end2067
  alt955_12072:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt955_end2067:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    goto alt950_end2061
  alt950_12077:
    nqp_rxmark rx780_bstack, alt950_22082, rx780_pos, 0
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    ge rx780_pos, rx780_eos, rx780_fail1788
    substr $S11, rx780_tgt, rx780_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx780_fail1788
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    nqp_rxmark rx780_bstack, rxsubrule965_pass2080, -1, 0
  rxsubrule965_pass2080:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    goto alt950_end2061
  alt950_22082:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt950_end2061:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ws"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1788
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    rx780_cur."!cursor_pass"(rx780_pos, "package_def", 'backtrack'=>1)
    .return (rx780_cur)
  rx780_restart1787:
    repr_get_attr_obj rx780_cstack, rx780_cur, rx780_curclass, "$!cstack"
  rx780_fail1788:
    unless rx780_bstack, rx780_done1786
    pop $I19, rx780_bstack
    if_null rx780_cstack, rx780_cstack_done1791
    unless rx780_cstack, rx780_cstack_done1791
    dec $I19
    set $P11, rx780_cstack[$I19]
  rx780_cstack_done1791:
    pop rx780_rep, rx780_bstack
    pop rx780_pos, rx780_bstack
    pop $I19, rx780_bstack
    lt rx780_pos, -1, rx780_done1786
    lt rx780_pos, 0, rx780_fail1788
    eq $I19, 0, rx780_fail1788
    nqp_islist $I20, rx780_cstack
    unless $I20, rx780_jump1789
    elements $I18, rx780_bstack
    le $I18, 0, rx780_cut1790
    dec $I18
    set $I18, rx780_bstack[$I18]
  rx780_cut1790:
    assign rx780_cstack, $I18
  rx780_jump1789:
    jump $I19
  rx780_done1786:
    rx780_cur."!cursor_fail"()
    .return (rx780_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1381944288.90674") :anon :lex :outer("cuid_112_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1016
    .local pmc fb_tmp_118 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1815
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_118, $P5002
    repr_defined $I5002, fb_tmp_118
    unless $I5002 goto if797_else1816 
    set $P5004, fb_tmp_118["$PKGDECL"]
    set $P5006, $P5004
    goto if797_end1817
  if797_else1816:
    null $P5005
    set $P5006, $P5005
  if797_end1817:
    unless_null $P5006, vivi_7981818
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_7981818:
    unless_null $P5006, vivi_7991819
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_7991819:
    set $P5001, $P5006
  fallback1815:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1381944288.90674") :anon :lex :outer("cuid_112_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1019
    .lex "%args", $P101 
    .lex "$how", $P102 
    .lex "$INNER", $P103 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    find_lex $P5004, "$/"
    unless_null $P5004, fallback1841
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  fallback1841:
    set fb_tmp_119, $P5004
    repr_defined $I5001, fb_tmp_119
    unless $I5001 goto if815_else1839 
    set $P5006, fb_tmp_119["name"]
    set $P5008, $P5006
    goto if815_end1840
  if815_else1839:
    null $P5007
    set $P5008, $P5007
  if815_end1840:
    unless_null $P5008, vivi_8161842
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_8161842:
    set $S5001, $P5008
    box $P5010, $S5001
    set $P101["name"], $P5010
    find_lex $P5011, "$/"
    unless_null $P5011, fallback1847
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  fallback1847:
    set fb_tmp_120, $P5011
    repr_defined $I5002, fb_tmp_120
    unless $I5002 goto if818_else1845 
    set $P5013, fb_tmp_120["repr"]
    set $P5015, $P5013
    goto if818_end1846
  if818_else1845:
    null $P5014
    set $P5015, $P5014
  if818_end1846:
    unless_null $P5015, vivi_8191848
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_8191848:
    unless $P5015 goto if817_end1844 
.annotate 'line', 1024
    find_lex $P5017, "$/"
    unless_null $P5017, fallback1857
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  fallback1857:
    set fb_tmp_124, $P5017
    repr_defined $I5006, fb_tmp_124
    unless $I5006 goto if823_else1855 
    set $P5019, fb_tmp_124["repr"]
    set $P5021, $P5019
    goto if823_end1856
  if823_else1855:
    null $P5020
    set $P5021, $P5020
  if823_end1856:
    unless_null $P5021, vivi_8241858
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_8241858:
    set fb_tmp_123, $P5021
    repr_defined $I5005, fb_tmp_123
    unless $I5005 goto if822_else1853 
    set $P5023, fb_tmp_123["quote_delimited"]
    set $P5025, $P5023
    goto if822_end1854
  if822_else1853:
    null $P5024
    set $P5025, $P5024
  if822_end1854:
    unless_null $P5025, vivi_8251859
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_8251859:
    set fb_tmp_122, $P5025
    repr_defined $I5004, fb_tmp_122
    unless $I5004 goto if821_else1851 
    set $P5027, fb_tmp_122["quote_atom"]
    set $P5029, $P5027
    goto if821_end1852
  if821_else1851:
    null $P5028
    set $P5029, $P5028
  if821_end1852:
    unless_null $P5029, vivi_8261860
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5029, $P5030
  vivi_8261860:
    set fb_tmp_121, $P5029
    repr_defined $I5003, fb_tmp_121
    unless $I5003 goto if820_else1849 
    set $P5031, fb_tmp_121[0]
    set $P5033, $P5031
    goto if820_end1850
  if820_else1849:
    null $P5032
    set $P5033, $P5032
  if820_end1850:
    unless_null $P5033, vivi_8271861
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5034
  vivi_8271861:
    set $S5002, $P5033
    box $P5035, $S5002
    set $P101["repr"], $P5035
  if817_end1844:
    find_dynamic_lex $P5036, "%*HOW"
    unless_null $P5036, fallback1864
    nqp_get_sc_object $P5038, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5037, $P5038
    set pkg_viv_tmp_25, $P5037
    set fb_tmp_126, pkg_viv_tmp_25
    repr_defined $I5008, fb_tmp_126
    unless $I5008 goto if829_else1865 
    set $P5039, fb_tmp_126["%HOW"]
    set $P5041, $P5039
    goto if829_end1866
  if829_else1865:
    null $P5040
    set $P5041, $P5040
  if829_end1866:
    unless_null $P5041, vivi_8301867
    new $P5042, 'Hash'
    set pkg_viv_tmp_25["%HOW"], $P5042
    set $P5041, $P5042
  vivi_8301867:
    unless_null $P5041, vivi_8311868
    die "Contextual %*HOW not found"
    box $P5043, "Contextual %*HOW not found"
    set $P5041, $P5043
  vivi_8311868:
    set $P5036, $P5041
  fallback1864:
    set fb_tmp_125, $P5036
    repr_defined $I5007, fb_tmp_125
    unless $I5007 goto if828_else1862 
    find_dynamic_lex $P5045, "$*PKGDECL"
    unless_null $P5045, fallback1869
    nqp_get_sc_object $P5047, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5046, $P5047
    set fb_tmp_127, $P5046
    repr_defined $I5009, fb_tmp_127
    unless $I5009 goto if832_else1870 
    set $P5048, fb_tmp_127["$PKGDECL"]
    set $P5050, $P5048
    goto if832_end1871
  if832_else1870:
    null $P5049
    set $P5050, $P5049
  if832_end1871:
    unless_null $P5050, vivi_8331872
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5050, $P5051
  vivi_8331872:
    unless_null $P5050, vivi_8341873
    die "Contextual $*PKGDECL not found"
    box $P5052, "Contextual $*PKGDECL not found"
    set $P5050, $P5052
  vivi_8341873:
    set $P5045, $P5050
  fallback1869:
    set $S5003, $P5045
    set $P5044, fb_tmp_125[$S5003]
    set $P5054, $P5044
    goto if828_end1863
  if828_else1862:
    null $P5053
    set $P5054, $P5053
  if828_end1863:
    unless_null $P5054, vivi_8351874
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5054, $P5055
  vivi_8351874:
    set $P102, $P5054
.annotate 'line', 1028
    find_dynamic_lex $P5056, "$*W"
    unless_null $P5056, fallback1875
    nqp_get_sc_object $P5058, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5057, $P5058
    set fb_tmp_128, $P5057
    repr_defined $I5010, fb_tmp_128
    unless $I5010 goto if836_else1876 
    set $P5059, fb_tmp_128["$W"]
    set $P5061, $P5059
    goto if836_end1877
  if836_else1876:
    null $P5060
    set $P5061, $P5060
  if836_end1877:
    unless_null $P5061, vivi_8371878
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5061, $P5062
  vivi_8371878:
    unless_null $P5061, vivi_8381879
    die "Contextual $*W not found"
    box $P5063, "Contextual $*W not found"
    set $P5061, $P5063
  vivi_8381879:
    set $P5056, $P5061
  fallback1875:
    $P5064 = $P5056."cur_lexpad"()
    set $P103, $P5064
.annotate 'line', 1029
    find_dynamic_lex $P5065, "$*W"
    unless_null $P5065, fallback1880
    nqp_get_sc_object $P5067, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5066, $P5067
    set fb_tmp_129, $P5066
    repr_defined $I5011, fb_tmp_129
    unless $I5011 goto if839_else1881 
    set $P5068, fb_tmp_129["$W"]
    set $P5070, $P5068
    goto if839_end1882
  if839_else1881:
    null $P5069
    set $P5070, $P5069
  if839_end1882:
    unless_null $P5070, vivi_8401883
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5070, $P5071
  vivi_8401883:
    unless_null $P5070, vivi_8411884
    die "Contextual $*W not found"
    box $P5072, "Contextual $*W not found"
    set $P5070, $P5072
  vivi_8411884:
    set $P5065, $P5070
  fallback1880:
    $P5073 = $P5065."pkg_create_mo"($P102, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5073
    can $I5012, $P102, "parametric"
    box $P5076, $I5012
    set $P5075, $P5076
    unless $I5012 goto if843_end1888 
.annotate 'line', 1032
    $P5074 = $P102."parametric"($P102)
    set $P5075, $P5074
  if843_end1888:
    unless $P5075 goto if842_else1885 
.annotate 'line', 1033
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback1889
    nqp_get_sc_object $P5079, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5078, $P5079
    set fb_tmp_130, $P5078
    repr_defined $I5013, fb_tmp_130
    unless $I5013 goto if844_else1890 
    set $P5080, fb_tmp_130["$W"]
    set $P5082, $P5080
    goto if844_end1891
  if844_else1890:
    null $P5081
    set $P5082, $P5081
  if844_end1891:
    unless_null $P5082, vivi_8451892
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_8451892:
    unless_null $P5082, vivi_8461893
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_8461893:
    set $P5077, $P5082
  fallback1889:
    find_dynamic_lex $P5085, "$*PACKAGE"
    unless_null $P5085, fallback1894
    nqp_get_sc_object $P5087, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5086, $P5087
    set fb_tmp_131, $P5086
    repr_defined $I5014, fb_tmp_131
    unless $I5014 goto if847_else1895 
    set $P5088, fb_tmp_131["$PACKAGE"]
    set $P5090, $P5088
    goto if847_end1896
  if847_else1895:
    null $P5089
    set $P5090, $P5089
  if847_end1896:
    unless_null $P5090, vivi_8481897
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5090, $P5091
  vivi_8481897:
    unless_null $P5090, vivi_8491898
    die "Contextual $*PACKAGE not found"
    box $P5092, "Contextual $*PACKAGE not found"
    set $P5090, $P5092
  vivi_8491898:
    set $P5085, $P5090
  fallback1894:
    $P5077."install_lexical_symbol"($P103, "$?PACKAGE", $P5085)
.annotate 'line', 1034
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback1899
    nqp_get_sc_object $P5095, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5094, $P5095
    set fb_tmp_132, $P5094
    repr_defined $I5015, fb_tmp_132
    unless $I5015 goto if850_else1900 
    set $P5096, fb_tmp_132["$W"]
    set $P5098, $P5096
    goto if850_end1901
  if850_else1900:
    null $P5097
    set $P5098, $P5097
  if850_end1901:
    unless_null $P5098, vivi_8511902
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5098, $P5099
  vivi_8511902:
    unless_null $P5098, vivi_8521903
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_8521903:
    set $P5093, $P5098
  fallback1899:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback1904
    nqp_get_sc_object $P5103, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5102, $P5103
    set fb_tmp_133, $P5102
    repr_defined $I5016, fb_tmp_133
    unless $I5016 goto if853_else1905 
    set $P5104, fb_tmp_133["$PACKAGE"]
    set $P5106, $P5104
    goto if853_end1906
  if853_else1905:
    null $P5105
    set $P5106, $P5105
  if853_end1906:
    unless_null $P5106, vivi_8541907
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5106, $P5107
  vivi_8541907:
    unless_null $P5106, vivi_8551908
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_8551908:
    set $P5101, $P5106
  fallback1904:
    $P5109 = $P5093."install_lexical_symbol"($P103, "$?ROLE", $P5101)
    goto if842_end1886
  if842_else1885:
.annotate 'line', 1036
.annotate 'line', 1037
    find_dynamic_lex $P5110, "$*W"
    unless_null $P5110, fallback1909
    nqp_get_sc_object $P5112, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5111, $P5112
    set fb_tmp_134, $P5111
    repr_defined $I5017, fb_tmp_134
    unless $I5017 goto if856_else1910 
    set $P5113, fb_tmp_134["$W"]
    set $P5115, $P5113
    goto if856_end1911
  if856_else1910:
    null $P5114
    set $P5115, $P5114
  if856_end1911:
    unless_null $P5115, vivi_8571912
    nqp_get_sc_object $P5116, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5115, $P5116
  vivi_8571912:
    unless_null $P5115, vivi_8581913
    die "Contextual $*W not found"
    box $P5117, "Contextual $*W not found"
    set $P5115, $P5117
  vivi_8581913:
    set $P5110, $P5115
  fallback1909:
    find_dynamic_lex $P5118, "$*PACKAGE"
    unless_null $P5118, fallback1914
    nqp_get_sc_object $P5120, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5119, $P5120
    set fb_tmp_135, $P5119
    repr_defined $I5018, fb_tmp_135
    unless $I5018 goto if859_else1915 
    set $P5121, fb_tmp_135["$PACKAGE"]
    set $P5123, $P5121
    goto if859_end1916
  if859_else1915:
    null $P5122
    set $P5123, $P5122
  if859_end1916:
    unless_null $P5123, vivi_8601917
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5123, $P5124
  vivi_8601917:
    unless_null $P5123, vivi_8611918
    die "Contextual $*PACKAGE not found"
    box $P5125, "Contextual $*PACKAGE not found"
    set $P5123, $P5125
  vivi_8611918:
    set $P5118, $P5123
  fallback1914:
    $P5110."install_lexical_symbol"($P103, "$?PACKAGE", $P5118)
.annotate 'line', 1038
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback1919
    nqp_get_sc_object $P5128, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5127, $P5128
    set fb_tmp_136, $P5127
    repr_defined $I5019, fb_tmp_136
    unless $I5019 goto if862_else1920 
    set $P5129, fb_tmp_136["$W"]
    set $P5131, $P5129
    goto if862_end1921
  if862_else1920:
    null $P5130
    set $P5131, $P5130
  if862_end1921:
    unless_null $P5131, vivi_8631922
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5131, $P5132
  vivi_8631922:
    unless_null $P5131, vivi_8641923
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_8641923:
    set $P5126, $P5131
  fallback1919:
    find_dynamic_lex $P5134, "$*PACKAGE"
    unless_null $P5134, fallback1924
    nqp_get_sc_object $P5136, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5135, $P5136
    set fb_tmp_137, $P5135
    repr_defined $I5020, fb_tmp_137
    unless $I5020 goto if865_else1925 
    set $P5137, fb_tmp_137["$PACKAGE"]
    set $P5139, $P5137
    goto if865_end1926
  if865_else1925:
    null $P5138
    set $P5139, $P5138
  if865_end1926:
    unless_null $P5139, vivi_8661927
    nqp_get_sc_object $P5140, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5139, $P5140
  vivi_8661927:
    unless_null $P5139, vivi_8671928
    die "Contextual $*PACKAGE not found"
    box $P5141, "Contextual $*PACKAGE not found"
    set $P5139, $P5141
  vivi_8671928:
    set $P5134, $P5139
  fallback1924:
    $P5142 = $P5126."install_lexical_symbol"($P103, "$?CLASS", $P5134)
  if842_end1886:
    find_dynamic_lex $P5143, "$*SCOPE"
    unless_null $P5143, fallback1933
    nqp_get_sc_object $P5145, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5144, $P5145
    set fb_tmp_138, $P5144
    repr_defined $I5022, fb_tmp_138
    unless $I5022 goto if870_else1934 
    set $P5146, fb_tmp_138["$SCOPE"]
    set $P5148, $P5146
    goto if870_end1935
  if870_else1934:
    null $P5147
    set $P5148, $P5147
  if870_end1935:
    unless_null $P5148, vivi_8711936
    nqp_get_sc_object $P5149, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5148, $P5149
  vivi_8711936:
    unless_null $P5148, vivi_8721937
    die "Contextual $*SCOPE not found"
    box $P5150, "Contextual $*SCOPE not found"
    set $P5148, $P5150
  vivi_8721937:
    set $P5143, $P5148
  fallback1933:
    set $S5004, $P5143
    iseq $I5021, $S5004, "our"
    set $I5025, $I5021
    if $I5021 goto unless869_end1932 
    find_dynamic_lex $P5151, "$*SCOPE"
    unless_null $P5151, fallback1938
    nqp_get_sc_object $P5153, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5152, $P5153
    set fb_tmp_139, $P5152
    repr_defined $I5024, fb_tmp_139
    unless $I5024 goto if873_else1939 
    set $P5154, fb_tmp_139["$SCOPE"]
    set $P5156, $P5154
    goto if873_end1940
  if873_else1939:
    null $P5155
    set $P5156, $P5155
  if873_end1940:
    unless_null $P5156, vivi_8741941
    nqp_get_sc_object $P5157, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5156, $P5157
  vivi_8741941:
    unless_null $P5156, vivi_8751942
    die "Contextual $*SCOPE not found"
    box $P5158, "Contextual $*SCOPE not found"
    set $P5156, $P5158
  vivi_8751942:
    set $P5151, $P5156
  fallback1938:
    set $S5005, $P5151
    iseq $I5023, $S5005, ""
    set $I5025, $I5023
  unless869_end1932:
    unless $I5025 goto if868_else1929 
.annotate 'line', 1042
.annotate 'line', 1043
    find_dynamic_lex $P5159, "$*W"
    unless_null $P5159, fallback1943
    nqp_get_sc_object $P5161, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5160, $P5161
    set fb_tmp_140, $P5160
    repr_defined $I5026, fb_tmp_140
    unless $I5026 goto if876_else1944 
    set $P5162, fb_tmp_140["$W"]
    set $P5164, $P5162
    goto if876_end1945
  if876_else1944:
    null $P5163
    set $P5164, $P5163
  if876_end1945:
    unless_null $P5164, vivi_8771946
    nqp_get_sc_object $P5165, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5164, $P5165
  vivi_8771946:
    unless_null $P5164, vivi_8781947
    die "Contextual $*W not found"
    box $P5166, "Contextual $*W not found"
    set $P5164, $P5166
  vivi_8781947:
    set $P5159, $P5164
  fallback1943:
    find_dynamic_lex $P5167, "$*OUTERPACKAGE"
    unless_null $P5167, fallback1948
    nqp_get_sc_object $P5169, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5168, $P5169
    set fb_tmp_141, $P5168
    repr_defined $I5027, fb_tmp_141
    unless $I5027 goto if879_else1949 
    set $P5170, fb_tmp_141["$OUTERPACKAGE"]
    set $P5172, $P5170
    goto if879_end1950
  if879_else1949:
    null $P5171
    set $P5172, $P5171
  if879_end1950:
    unless_null $P5172, vivi_8801951
    nqp_get_sc_object $P5173, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5172, $P5173
  vivi_8801951:
    unless_null $P5172, vivi_8811952
    die "Contextual $*OUTERPACKAGE not found"
    box $P5174, "Contextual $*OUTERPACKAGE not found"
    set $P5172, $P5174
  vivi_8811952:
    set $P5167, $P5172
  fallback1948:
    find_lex $P5175, "$/"
    unless_null $P5175, fallback1957
    nqp_get_sc_object $P5176, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5175, $P5176
  fallback1957:
    set fb_tmp_143, $P5175
    repr_defined $I5029, fb_tmp_143
    unless $I5029 goto if883_else1955 
    set $P5177, fb_tmp_143["name"]
    set $P5179, $P5177
    goto if883_end1956
  if883_else1955:
    null $P5178
    set $P5179, $P5178
  if883_end1956:
    unless_null $P5179, vivi_8841958
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5179, $P5180
  vivi_8841958:
    set fb_tmp_142, $P5179
    repr_defined $I5028, fb_tmp_142
    unless $I5028 goto if882_else1953 
    set $P5181, fb_tmp_142["identifier"]
    set $P5183, $P5181
    goto if882_end1954
  if882_else1953:
    null $P5182
    set $P5183, $P5182
  if882_end1954:
    unless_null $P5183, vivi_8851959
    nqp_get_sc_object $P5184, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5183, $P5184
  vivi_8851959:
    find_dynamic_lex $P5185, "$*PACKAGE"
    unless_null $P5185, fallback1960
    nqp_get_sc_object $P5187, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5186, $P5187
    set fb_tmp_144, $P5186
    repr_defined $I5030, fb_tmp_144
    unless $I5030 goto if886_else1961 
    set $P5188, fb_tmp_144["$PACKAGE"]
    set $P5190, $P5188
    goto if886_end1962
  if886_else1961:
    null $P5189
    set $P5190, $P5189
  if886_end1962:
    unless_null $P5190, vivi_8871963
    nqp_get_sc_object $P5191, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5190, $P5191
  vivi_8871963:
    unless_null $P5190, vivi_8881964
    die "Contextual $*PACKAGE not found"
    box $P5192, "Contextual $*PACKAGE not found"
    set $P5190, $P5192
  vivi_8881964:
    set $P5185, $P5190
  fallback1960:
    $P5159."install_package_symbol"($P5167, $P5183, $P5185)
    find_lex $P5193, "$/"
    unless_null $P5193, fallback1971
    nqp_get_sc_object $P5194, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5193, $P5194
  fallback1971:
    set fb_tmp_146, $P5193
    repr_defined $I5033, fb_tmp_146
    unless $I5033 goto if891_else1969 
    set $P5195, fb_tmp_146["name"]
    set $P5197, $P5195
    goto if891_end1970
  if891_else1969:
    null $P5196
    set $P5197, $P5196
  if891_end1970:
    unless_null $P5197, vivi_8921972
    nqp_get_sc_object $P5198, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5197, $P5198
  vivi_8921972:
    set fb_tmp_145, $P5197
    repr_defined $I5032, fb_tmp_145
    unless $I5032 goto if890_else1967 
    set $P5199, fb_tmp_145["identifier"]
    set $P5201, $P5199
    goto if890_end1968
  if890_else1967:
    null $P5200
    set $P5201, $P5200
  if890_end1968:
    unless_null $P5201, vivi_8931973
    nqp_get_sc_object $P5202, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5201, $P5202
  vivi_8931973:
    set $N5001, $P5201
    set $N5002, 1
    iseq $I5031, $N5001, $N5002
    box $P5236, $I5031
    set $P5235, $P5236
    unless $I5031 goto if889_end1966 
.annotate 'line', 1044
.annotate 'line', 1045
    find_dynamic_lex $P5203, "$*W"
    unless_null $P5203, fallback1974
    nqp_get_sc_object $P5205, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5204, $P5205
    set fb_tmp_147, $P5204
    repr_defined $I5034, fb_tmp_147
    unless $I5034 goto if894_else1975 
    set $P5206, fb_tmp_147["$W"]
    set $P5208, $P5206
    goto if894_end1976
  if894_else1975:
    null $P5207
    set $P5208, $P5207
  if894_end1976:
    unless_null $P5208, vivi_8951977
    nqp_get_sc_object $P5209, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5208, $P5209
  vivi_8951977:
    unless_null $P5208, vivi_8961978
    die "Contextual $*W not found"
    box $P5210, "Contextual $*W not found"
    set $P5208, $P5210
  vivi_8961978:
    set $P5203, $P5208
  fallback1974:
    find_lex $P5211, "$OUTER"
    find_lex $P5212, "$/"
    unless_null $P5212, fallback1985
    nqp_get_sc_object $P5213, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5212, $P5213
  fallback1985:
    set fb_tmp_150, $P5212
    repr_defined $I5037, fb_tmp_150
    unless $I5037 goto if899_else1983 
    set $P5214, fb_tmp_150["name"]
    set $P5216, $P5214
    goto if899_end1984
  if899_else1983:
    null $P5215
    set $P5216, $P5215
  if899_end1984:
    unless_null $P5216, vivi_9001986
    nqp_get_sc_object $P5217, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5216, $P5217
  vivi_9001986:
    set fb_tmp_149, $P5216
    repr_defined $I5036, fb_tmp_149
    unless $I5036 goto if898_else1981 
    set $P5218, fb_tmp_149["identifier"]
    set $P5220, $P5218
    goto if898_end1982
  if898_else1981:
    null $P5219
    set $P5220, $P5219
  if898_end1982:
    unless_null $P5220, vivi_9011987
    nqp_get_sc_object $P5221, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5220, $P5221
  vivi_9011987:
    set fb_tmp_148, $P5220
    repr_defined $I5035, fb_tmp_148
    unless $I5035 goto if897_else1979 
    set $P5222, fb_tmp_148[0]
    set $P5224, $P5222
    goto if897_end1980
  if897_else1979:
    null $P5223
    set $P5224, $P5223
  if897_end1980:
    unless_null $P5224, vivi_9021988
    nqp_get_sc_object $P5225, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5224, $P5225
  vivi_9021988:
    find_dynamic_lex $P5226, "$*PACKAGE"
    unless_null $P5226, fallback1989
    nqp_get_sc_object $P5228, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5227, $P5228
    set fb_tmp_151, $P5227
    repr_defined $I5038, fb_tmp_151
    unless $I5038 goto if903_else1990 
    set $P5229, fb_tmp_151["$PACKAGE"]
    set $P5231, $P5229
    goto if903_end1991
  if903_else1990:
    null $P5230
    set $P5231, $P5230
  if903_end1991:
    unless_null $P5231, vivi_9041992
    nqp_get_sc_object $P5232, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5231, $P5232
  vivi_9041992:
    unless_null $P5231, vivi_9051993
    die "Contextual $*PACKAGE not found"
    box $P5233, "Contextual $*PACKAGE not found"
    set $P5231, $P5233
  vivi_9051993:
    set $P5226, $P5231
  fallback1989:
    $P5234 = $P5203."install_lexical_symbol"($P5211, $P5224, $P5226)
    set $P5235, $P5234
  if889_end1966:
    set $P5307, $P5235
    goto if868_end1930
  if868_else1929:
    find_dynamic_lex $P5237, "$*SCOPE"
    unless_null $P5237, fallback1996
    nqp_get_sc_object $P5239, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5238, $P5239
    set fb_tmp_152, $P5238
    repr_defined $I5040, fb_tmp_152
    unless $I5040 goto if907_else1997 
    set $P5240, fb_tmp_152["$SCOPE"]
    set $P5242, $P5240
    goto if907_end1998
  if907_else1997:
    null $P5241
    set $P5242, $P5241
  if907_end1998:
    unless_null $P5242, vivi_9081999
    nqp_get_sc_object $P5243, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5242, $P5243
  vivi_9081999:
    unless_null $P5242, vivi_9092000
    die "Contextual $*SCOPE not found"
    box $P5244, "Contextual $*SCOPE not found"
    set $P5242, $P5244
  vivi_9092000:
    set $P5237, $P5242
  fallback1996:
    set $S5006, $P5237
    iseq $I5039, $S5006, "my"
    unless $I5039 goto if906_else1994 
.annotate 'line', 1048
    find_lex $P5245, "$/"
    unless_null $P5245, fallback2007
    nqp_get_sc_object $P5246, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5245, $P5246
  fallback2007:
    set fb_tmp_154, $P5245
    repr_defined $I5043, fb_tmp_154
    unless $I5043 goto if912_else2005 
    set $P5247, fb_tmp_154["name"]
    set $P5249, $P5247
    goto if912_end2006
  if912_else2005:
    null $P5248
    set $P5249, $P5248
  if912_end2006:
    unless_null $P5249, vivi_9132008
    nqp_get_sc_object $P5250, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5249, $P5250
  vivi_9132008:
    set fb_tmp_153, $P5249
    repr_defined $I5042, fb_tmp_153
    unless $I5042 goto if911_else2003 
    set $P5251, fb_tmp_153["identifier"]
    set $P5253, $P5251
    goto if911_end2004
  if911_else2003:
    null $P5252
    set $P5253, $P5252
  if911_end2004:
    unless_null $P5253, vivi_9142009
    nqp_get_sc_object $P5254, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5253, $P5254
  vivi_9142009:
    set $N5003, $P5253
    set $N5004, 1
    isne $I5041, $N5003, $N5004
    unless $I5041 goto if910_end2002 
.annotate 'line', 1049
.annotate 'line', 1050
    find_lex $P5255, "$/"
    unless_null $P5255, fallback2012
    nqp_get_sc_object $P5256, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5255, $P5256
  fallback2012:
    set fb_tmp_155, $P5255
    repr_defined $I5044, fb_tmp_155
    unless $I5044 goto if915_else2010 
    set $P5257, fb_tmp_155["name"]
    set $P5259, $P5257
    goto if915_end2011
  if915_else2010:
    null $P5258
    set $P5259, $P5258
  if915_end2011:
    unless_null $P5259, vivi_9162013
    nqp_get_sc_object $P5260, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5259, $P5260
  vivi_9162013:
    $P5261 = $P5259."CURSOR"()
    $P5262 = $P5261."panic"("A my scoped package cannot have a multi-part name yet")
  if910_end2002:
.annotate 'line', 1052
    find_dynamic_lex $P5263, "$*W"
    unless_null $P5263, fallback2014
    nqp_get_sc_object $P5265, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5264, $P5265
    set fb_tmp_156, $P5264
    repr_defined $I5045, fb_tmp_156
    unless $I5045 goto if917_else2015 
    set $P5266, fb_tmp_156["$W"]
    set $P5268, $P5266
    goto if917_end2016
  if917_else2015:
    null $P5267
    set $P5268, $P5267
  if917_end2016:
    unless_null $P5268, vivi_9182017
    nqp_get_sc_object $P5269, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5268, $P5269
  vivi_9182017:
    unless_null $P5268, vivi_9192018
    die "Contextual $*W not found"
    box $P5270, "Contextual $*W not found"
    set $P5268, $P5270
  vivi_9192018:
    set $P5263, $P5268
  fallback2014:
    find_lex $P5271, "$OUTER"
    find_lex $P5272, "$/"
    unless_null $P5272, fallback2025
    nqp_get_sc_object $P5273, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5272, $P5273
  fallback2025:
    set fb_tmp_159, $P5272
    repr_defined $I5048, fb_tmp_159
    unless $I5048 goto if922_else2023 
    set $P5274, fb_tmp_159["name"]
    set $P5276, $P5274
    goto if922_end2024
  if922_else2023:
    null $P5275
    set $P5276, $P5275
  if922_end2024:
    unless_null $P5276, vivi_9232026
    nqp_get_sc_object $P5277, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5276, $P5277
  vivi_9232026:
    set fb_tmp_158, $P5276
    repr_defined $I5047, fb_tmp_158
    unless $I5047 goto if921_else2021 
    set $P5278, fb_tmp_158["identifier"]
    set $P5280, $P5278
    goto if921_end2022
  if921_else2021:
    null $P5279
    set $P5280, $P5279
  if921_end2022:
    unless_null $P5280, vivi_9242027
    nqp_get_sc_object $P5281, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5280, $P5281
  vivi_9242027:
    set fb_tmp_157, $P5280
    repr_defined $I5046, fb_tmp_157
    unless $I5046 goto if920_else2019 
    set $P5282, fb_tmp_157[0]
    set $P5284, $P5282
    goto if920_end2020
  if920_else2019:
    null $P5283
    set $P5284, $P5283
  if920_end2020:
    unless_null $P5284, vivi_9252028
    nqp_get_sc_object $P5285, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5284, $P5285
  vivi_9252028:
    find_dynamic_lex $P5286, "$*PACKAGE"
    unless_null $P5286, fallback2029
    nqp_get_sc_object $P5288, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5287, $P5288
    set fb_tmp_160, $P5287
    repr_defined $I5049, fb_tmp_160
    unless $I5049 goto if926_else2030 
    set $P5289, fb_tmp_160["$PACKAGE"]
    set $P5291, $P5289
    goto if926_end2031
  if926_else2030:
    null $P5290
    set $P5291, $P5290
  if926_end2031:
    unless_null $P5291, vivi_9272032
    nqp_get_sc_object $P5292, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5291, $P5292
  vivi_9272032:
    unless_null $P5291, vivi_9282033
    die "Contextual $*PACKAGE not found"
    box $P5293, "Contextual $*PACKAGE not found"
    set $P5291, $P5293
  vivi_9282033:
    set $P5286, $P5291
  fallback2029:
    $P5294 = $P5263."install_lexical_symbol"($P5271, $P5284, $P5286)
    set $P5306, $P5294
    goto if906_end1995
  if906_else1994:
.annotate 'line', 1054
.annotate 'line', 1055
    find_lex $P5295, "$/"
    $P5296 = $P5295."CURSOR"()
    find_dynamic_lex $P5297, "$*SCOPE"
    unless_null $P5297, fallback2034
    nqp_get_sc_object $P5299, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5298, $P5299
    set fb_tmp_161, $P5298
    repr_defined $I5050, fb_tmp_161
    unless $I5050 goto if929_else2035 
    set $P5300, fb_tmp_161["$SCOPE"]
    set $P5302, $P5300
    goto if929_end2036
  if929_else2035:
    null $P5301
    set $P5302, $P5301
  if929_end2036:
    unless_null $P5302, vivi_9302037
    nqp_get_sc_object $P5303, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5302, $P5303
  vivi_9302037:
    unless_null $P5302, vivi_9312038
    die "Contextual $*SCOPE not found"
    box $P5304, "Contextual $*SCOPE not found"
    set $P5302, $P5304
  vivi_9312038:
    set $P5297, $P5302
  fallback2034:
    set $S5008, $P5297
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5305 = $P5296."panic"($S5007)
    set $P5306, $P5305
  if906_end1995:
    set $P5307, $P5306
  if868_end1930:
    .return ($P5307) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_113_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1069
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx971_start
    .local string rx971_tgt
    .local int rx971_pos
    .local int rx971_off
    .local int rx971_eos
    .local int rx971_rep
    .local pmc rx971_cur
    .local pmc rx971_curclass
    .local pmc rx971_bstack
    .local pmc rx971_cstack
    rx971_start = self."!cursor_start_all"()
    set rx971_cur, rx971_start[0]
    set rx971_tgt, rx971_start[1]
    set rx971_pos, rx971_start[2]
    set rx971_curclass, rx971_start[3]
    set rx971_bstack, rx971_start[4]
    set $I19, rx971_start[5]
    store_lex unicode:"$\x{a2}", rx971_cur
    length rx971_eos, rx971_tgt
    eq $I19, 1, rx971_restart2089
    gt rx971_pos, rx971_eos, rx971_fail2090
    repr_get_attr_int $I11, self, rx971_curclass, "$!from"
    ne $I11, -1, rxscan972_done2096
    goto rxscan972_scan2095
  rxscan972_loop2094:
    inc rx971_pos
    gt rx971_pos, rx971_eos, rx971_fail2090
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!from", rx971_pos
  rxscan972_scan2095:
    nqp_rxmark rx971_bstack, rxscan972_loop2094, rx971_pos, 0
  rxscan972_done2096:
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    store_lex unicode:"$\x{a2}", rx971_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    store_lex unicode:"$\x{a2}", rx971_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    nqp_rxmark rx971_bstack, rxquantr976_done2101, -1, 0
  rxquantr976_loop2100:
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."variable"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    nqp_rxmark rx971_bstack, rxsubrule978_pass2103, -1, 0
  rxsubrule978_pass2103:
    rx971_cstack = rx971_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    nqp_rxpeek $I19, rx971_bstack, rxquantr976_done2101
    inc $I19
    inc $I19
    set rx971_rep, rx971_bstack[$I19]
    nqp_rxcommit rx971_bstack, rxquantr976_done2101
    inc rx971_rep
    nqp_rxmark rx971_bstack, rxquantr976_done2101, rx971_pos, rx971_rep
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    add $I11, rx971_pos, 1
    gt $I11, rx971_eos, rx971_fail2090
    substr $S10, rx971_tgt, rx971_pos, 1
    ne $S10, ucs4:",", rx971_fail2090
    add rx971_pos, 1
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    goto rxquantr976_loop2100
  rxquantr976_done2101:
    repr_bind_attr_int rx971_cur, rx971_curclass, "$!pos", rx971_pos
    $P11 = rx971_cur."ws"()
    repr_get_attr_int $I11, $P11, rx971_curclass, "$!pos"
    lt $I11, 0, rx971_fail2090
    repr_get_attr_int rx971_pos, $P11, rx971_curclass, "$!pos"
    rx971_cur."!cursor_pass"(rx971_pos, "role_params", 'backtrack'=>1)
    .return (rx971_cur)
  rx971_restart2089:
    repr_get_attr_obj rx971_cstack, rx971_cur, rx971_curclass, "$!cstack"
  rx971_fail2090:
    unless rx971_bstack, rx971_done2088
    pop $I19, rx971_bstack
    if_null rx971_cstack, rx971_cstack_done2093
    unless rx971_cstack, rx971_cstack_done2093
    dec $I19
    set $P11, rx971_cstack[$I19]
  rx971_cstack_done2093:
    pop rx971_rep, rx971_bstack
    pop rx971_pos, rx971_bstack
    pop $I19, rx971_bstack
    lt rx971_pos, -1, rx971_done2088
    lt rx971_pos, 0, rx971_fail2090
    eq $I19, 0, rx971_fail2090
    nqp_islist $I20, rx971_cstack
    unless $I20, rx971_jump2091
    elements $I18, rx971_bstack
    le $I18, 0, rx971_cut2092
    dec $I18
    set $I18, rx971_bstack[$I18]
  rx971_cut2092:
    assign rx971_cstack, $I18
  rx971_jump2091:
    jump $I19
  rx971_done2088:
    rx971_cur."!cursor_fail"()
    .return (rx971_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_114_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1075
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_115_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1076
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx983_start
    .local string rx983_tgt
    .local int rx983_pos
    .local int rx983_off
    .local int rx983_eos
    .local int rx983_rep
    .local pmc rx983_cur
    .local pmc rx983_curclass
    .local pmc rx983_bstack
    .local pmc rx983_cstack
    rx983_start = self."!cursor_start_all"()
    set rx983_cur, rx983_start[0]
    set rx983_tgt, rx983_start[1]
    set rx983_pos, rx983_start[2]
    set rx983_curclass, rx983_start[3]
    set rx983_bstack, rx983_start[4]
    set $I19, rx983_start[5]
    store_lex unicode:"$\x{a2}", rx983_cur
    length rx983_eos, rx983_tgt
    eq $I19, 1, rx983_restart2110
    gt rx983_pos, rx983_eos, rx983_fail2111
    repr_get_attr_int $I11, self, rx983_curclass, "$!from"
    ne $I11, -1, rxscan984_done2117
    goto rxscan984_scan2116
  rxscan984_loop2115:
    inc rx983_pos
    gt rx983_pos, rx983_eos, rx983_fail2111
    repr_bind_attr_int rx983_cur, rx983_curclass, "$!from", rx983_pos
  rxscan984_scan2116:
    nqp_rxmark rx983_bstack, rxscan984_loop2115, rx983_pos, 0
  rxscan984_done2117:
    nqp_rxmark rx983_bstack, rxcap985_fail2119, rx983_pos, 0
    add $I11, rx983_pos, 2
    gt $I11, rx983_eos, rx983_fail2111
    substr $S10, rx983_tgt, rx983_pos, 2
    ne $S10, ucs4:"my", rx983_fail2111
    add rx983_pos, 2
    nqp_rxpeek $I19, rx983_bstack, rxcap985_fail2119
    inc $I19
    set $I11, rx983_bstack[$I19]
    repr_bind_attr_int rx983_cur, rx983_curclass, "$!pos", rx983_pos
    $P11 = rx983_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx983_pos)
    rx983_cstack = rx983_cur."!cursor_capture"($P11, "sym")
    goto rxcap985_done2118
  rxcap985_fail2119:
    goto rx983_fail2111
  rxcap985_done2118:
    repr_bind_attr_int rx983_cur, rx983_curclass, "$!pos", rx983_pos
    $P11 = rx983_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx983_curclass, "$!pos"
    lt $I11, 0, rx983_fail2111
    nqp_rxmark rx983_bstack, rxsubrule986_pass2120, -1, 0
  rxsubrule986_pass2120:
    rx983_cstack = rx983_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx983_pos, $P11, rx983_curclass, "$!pos"
    rx983_cur."!cursor_pass"(rx983_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx983_cur)
  rx983_restart2110:
    repr_get_attr_obj rx983_cstack, rx983_cur, rx983_curclass, "$!cstack"
  rx983_fail2111:
    unless rx983_bstack, rx983_done2109
    pop $I19, rx983_bstack
    if_null rx983_cstack, rx983_cstack_done2114
    unless rx983_cstack, rx983_cstack_done2114
    dec $I19
    set $P11, rx983_cstack[$I19]
  rx983_cstack_done2114:
    pop rx983_rep, rx983_bstack
    pop rx983_pos, rx983_bstack
    pop $I19, rx983_bstack
    lt rx983_pos, -1, rx983_done2109
    lt rx983_pos, 0, rx983_fail2111
    eq $I19, 0, rx983_fail2111
    nqp_islist $I20, rx983_cstack
    unless $I20, rx983_jump2112
    elements $I18, rx983_bstack
    le $I18, 0, rx983_cut2113
    dec $I18
    set $I18, rx983_bstack[$I18]
  rx983_cut2113:
    assign rx983_cstack, $I18
  rx983_jump2112:
    jump $I19
  rx983_done2109:
    rx983_cur."!cursor_fail"()
    .return (rx983_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_116_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1077
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx987_start
    .local string rx987_tgt
    .local int rx987_pos
    .local int rx987_off
    .local int rx987_eos
    .local int rx987_rep
    .local pmc rx987_cur
    .local pmc rx987_curclass
    .local pmc rx987_bstack
    .local pmc rx987_cstack
    rx987_start = self."!cursor_start_all"()
    set rx987_cur, rx987_start[0]
    set rx987_tgt, rx987_start[1]
    set rx987_pos, rx987_start[2]
    set rx987_curclass, rx987_start[3]
    set rx987_bstack, rx987_start[4]
    set $I19, rx987_start[5]
    store_lex unicode:"$\x{a2}", rx987_cur
    length rx987_eos, rx987_tgt
    eq $I19, 1, rx987_restart2123
    gt rx987_pos, rx987_eos, rx987_fail2124
    repr_get_attr_int $I11, self, rx987_curclass, "$!from"
    ne $I11, -1, rxscan988_done2130
    goto rxscan988_scan2129
  rxscan988_loop2128:
    inc rx987_pos
    gt rx987_pos, rx987_eos, rx987_fail2124
    repr_bind_attr_int rx987_cur, rx987_curclass, "$!from", rx987_pos
  rxscan988_scan2129:
    nqp_rxmark rx987_bstack, rxscan988_loop2128, rx987_pos, 0
  rxscan988_done2130:
    nqp_rxmark rx987_bstack, rxcap989_fail2132, rx987_pos, 0
    add $I11, rx987_pos, 3
    gt $I11, rx987_eos, rx987_fail2124
    substr $S10, rx987_tgt, rx987_pos, 3
    ne $S10, ucs4:"our", rx987_fail2124
    add rx987_pos, 3
    nqp_rxpeek $I19, rx987_bstack, rxcap989_fail2132
    inc $I19
    set $I11, rx987_bstack[$I19]
    repr_bind_attr_int rx987_cur, rx987_curclass, "$!pos", rx987_pos
    $P11 = rx987_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx987_pos)
    rx987_cstack = rx987_cur."!cursor_capture"($P11, "sym")
    goto rxcap989_done2131
  rxcap989_fail2132:
    goto rx987_fail2124
  rxcap989_done2131:
    repr_bind_attr_int rx987_cur, rx987_curclass, "$!pos", rx987_pos
    $P11 = rx987_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx987_curclass, "$!pos"
    lt $I11, 0, rx987_fail2124
    nqp_rxmark rx987_bstack, rxsubrule990_pass2133, -1, 0
  rxsubrule990_pass2133:
    rx987_cstack = rx987_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx987_pos, $P11, rx987_curclass, "$!pos"
    rx987_cur."!cursor_pass"(rx987_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx987_cur)
  rx987_restart2123:
    repr_get_attr_obj rx987_cstack, rx987_cur, rx987_curclass, "$!cstack"
  rx987_fail2124:
    unless rx987_bstack, rx987_done2122
    pop $I19, rx987_bstack
    if_null rx987_cstack, rx987_cstack_done2127
    unless rx987_cstack, rx987_cstack_done2127
    dec $I19
    set $P11, rx987_cstack[$I19]
  rx987_cstack_done2127:
    pop rx987_rep, rx987_bstack
    pop rx987_pos, rx987_bstack
    pop $I19, rx987_bstack
    lt rx987_pos, -1, rx987_done2122
    lt rx987_pos, 0, rx987_fail2124
    eq $I19, 0, rx987_fail2124
    nqp_islist $I20, rx987_cstack
    unless $I20, rx987_jump2125
    elements $I18, rx987_bstack
    le $I18, 0, rx987_cut2126
    dec $I18
    set $I18, rx987_bstack[$I18]
  rx987_cut2126:
    assign rx987_cstack, $I18
  rx987_jump2125:
    jump $I19
  rx987_done2122:
    rx987_cur."!cursor_fail"()
    .return (rx987_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_117_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1078
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx991_start
    .local string rx991_tgt
    .local int rx991_pos
    .local int rx991_off
    .local int rx991_eos
    .local int rx991_rep
    .local pmc rx991_cur
    .local pmc rx991_curclass
    .local pmc rx991_bstack
    .local pmc rx991_cstack
    rx991_start = self."!cursor_start_all"()
    set rx991_cur, rx991_start[0]
    set rx991_tgt, rx991_start[1]
    set rx991_pos, rx991_start[2]
    set rx991_curclass, rx991_start[3]
    set rx991_bstack, rx991_start[4]
    set $I19, rx991_start[5]
    store_lex unicode:"$\x{a2}", rx991_cur
    length rx991_eos, rx991_tgt
    eq $I19, 1, rx991_restart2136
    gt rx991_pos, rx991_eos, rx991_fail2137
    repr_get_attr_int $I11, self, rx991_curclass, "$!from"
    ne $I11, -1, rxscan992_done2143
    goto rxscan992_scan2142
  rxscan992_loop2141:
    inc rx991_pos
    gt rx991_pos, rx991_eos, rx991_fail2137
    repr_bind_attr_int rx991_cur, rx991_curclass, "$!from", rx991_pos
  rxscan992_scan2142:
    nqp_rxmark rx991_bstack, rxscan992_loop2141, rx991_pos, 0
  rxscan992_done2143:
    nqp_rxmark rx991_bstack, rxcap993_fail2145, rx991_pos, 0
    add $I11, rx991_pos, 3
    gt $I11, rx991_eos, rx991_fail2137
    substr $S10, rx991_tgt, rx991_pos, 3
    ne $S10, ucs4:"has", rx991_fail2137
    add rx991_pos, 3
    nqp_rxpeek $I19, rx991_bstack, rxcap993_fail2145
    inc $I19
    set $I11, rx991_bstack[$I19]
    repr_bind_attr_int rx991_cur, rx991_curclass, "$!pos", rx991_pos
    $P11 = rx991_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx991_pos)
    rx991_cstack = rx991_cur."!cursor_capture"($P11, "sym")
    goto rxcap993_done2144
  rxcap993_fail2145:
    goto rx991_fail2137
  rxcap993_done2144:
    repr_bind_attr_int rx991_cur, rx991_curclass, "$!pos", rx991_pos
    $P11 = rx991_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx991_curclass, "$!pos"
    lt $I11, 0, rx991_fail2137
    nqp_rxmark rx991_bstack, rxsubrule994_pass2146, -1, 0
  rxsubrule994_pass2146:
    rx991_cstack = rx991_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx991_pos, $P11, rx991_curclass, "$!pos"
    rx991_cur."!cursor_pass"(rx991_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx991_cur)
  rx991_restart2136:
    repr_get_attr_obj rx991_cstack, rx991_cur, rx991_curclass, "$!cstack"
  rx991_fail2137:
    unless rx991_bstack, rx991_done2135
    pop $I19, rx991_bstack
    if_null rx991_cstack, rx991_cstack_done2140
    unless rx991_cstack, rx991_cstack_done2140
    dec $I19
    set $P11, rx991_cstack[$I19]
  rx991_cstack_done2140:
    pop rx991_rep, rx991_bstack
    pop rx991_pos, rx991_bstack
    pop $I19, rx991_bstack
    lt rx991_pos, -1, rx991_done2135
    lt rx991_pos, 0, rx991_fail2137
    eq $I19, 0, rx991_fail2137
    nqp_islist $I20, rx991_cstack
    unless $I20, rx991_jump2138
    elements $I18, rx991_bstack
    le $I18, 0, rx991_cut2139
    dec $I18
    set $I18, rx991_bstack[$I18]
  rx991_cut2139:
    assign rx991_cstack, $I18
  rx991_jump2138:
    jump $I19
  rx991_done2135:
    rx991_cur."!cursor_fail"()
    .return (rx991_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_118_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1080
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx995_start
    .local string rx995_tgt
    .local int rx995_pos
    .local int rx995_off
    .local int rx995_eos
    .local int rx995_rep
    .local pmc rx995_cur
    .local pmc rx995_curclass
    .local pmc rx995_bstack
    .local pmc rx995_cstack
    rx995_start = self."!cursor_start_all"()
    set rx995_cur, rx995_start[0]
    set rx995_tgt, rx995_start[1]
    set rx995_pos, rx995_start[2]
    set rx995_curclass, rx995_start[3]
    set rx995_bstack, rx995_start[4]
    set $I19, rx995_start[5]
    store_lex unicode:"$\x{a2}", rx995_cur
    length rx995_eos, rx995_tgt
    eq $I19, 1, rx995_restart2149
    gt rx995_pos, rx995_eos, rx995_fail2150
    repr_get_attr_int $I11, self, rx995_curclass, "$!from"
    ne $I11, -1, rxscan996_done2156
    goto rxscan996_scan2155
  rxscan996_loop2154:
    inc rx995_pos
    gt rx995_pos, rx995_eos, rx995_fail2150
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!from", rx995_pos
  rxscan996_scan2155:
    nqp_rxmark rx995_bstack, rxscan996_loop2154, rx995_pos, 0
  rxscan996_done2156:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt997_02158
    nqp_push_label $P11, alt997_12162
    nqp_push_label $P11, alt997_22166
    nqp_rxmark rx995_bstack, alt997_end2157, -1, 0
    rx995_cur."!alt"(rx995_pos, "alt_nfa__21_1381944291.8693", $P11)
    goto rx995_fail2150
  alt997_02158:
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."ws"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    nqp_rxmark rx995_bstack, rxsubrule999_pass2160, -1, 0
  rxsubrule999_pass2160:
    rx995_cstack = rx995_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."ws"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    goto alt997_end2157
  alt997_12162:
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."ws"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    nqp_rxmark rx995_bstack, rxsubrule1002_pass2164, -1, 0
  rxsubrule1002_pass2164:
    rx995_cstack = rx995_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."ws"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    goto alt997_end2157
  alt997_22166:
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."ws"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    nqp_rxmark rx995_bstack, rxsubrule1005_pass2168, -1, 0
  rxsubrule1005_pass2168:
    rx995_cstack = rx995_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    repr_bind_attr_int rx995_cur, rx995_curclass, "$!pos", rx995_pos
    $P11 = rx995_cur."ws"()
    repr_get_attr_int $I11, $P11, rx995_curclass, "$!pos"
    lt $I11, 0, rx995_fail2150
    repr_get_attr_int rx995_pos, $P11, rx995_curclass, "$!pos"
    goto alt997_end2157
  alt997_end2157:
    rx995_cur."!cursor_pass"(rx995_pos, "scoped", 'backtrack'=>1)
    .return (rx995_cur)
  rx995_restart2149:
    repr_get_attr_obj rx995_cstack, rx995_cur, rx995_curclass, "$!cstack"
  rx995_fail2150:
    unless rx995_bstack, rx995_done2148
    pop $I19, rx995_bstack
    if_null rx995_cstack, rx995_cstack_done2153
    unless rx995_cstack, rx995_cstack_done2153
    dec $I19
    set $P11, rx995_cstack[$I19]
  rx995_cstack_done2153:
    pop rx995_rep, rx995_bstack
    pop rx995_pos, rx995_bstack
    pop $I19, rx995_bstack
    lt rx995_pos, -1, rx995_done2148
    lt rx995_pos, 0, rx995_fail2150
    eq $I19, 0, rx995_fail2150
    nqp_islist $I20, rx995_cstack
    unless $I20, rx995_jump2151
    elements $I18, rx995_bstack
    le $I18, 0, rx995_cut2152
    dec $I18
    set $I18, rx995_bstack[$I18]
  rx995_cut2152:
    assign rx995_cstack, $I18
  rx995_jump2151:
    jump $I19
  rx995_done2148:
    rx995_cur."!cursor_fail"()
    .return (rx995_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_119_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1086
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_411_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1007_start
    .local string rx1007_tgt
    .local int rx1007_pos
    .local int rx1007_off
    .local int rx1007_eos
    .local int rx1007_rep
    .local pmc rx1007_cur
    .local pmc rx1007_curclass
    .local pmc rx1007_bstack
    .local pmc rx1007_cstack
    rx1007_start = self."!cursor_start_all"()
    set rx1007_cur, rx1007_start[0]
    set rx1007_tgt, rx1007_start[1]
    set rx1007_pos, rx1007_start[2]
    set rx1007_curclass, rx1007_start[3]
    set rx1007_bstack, rx1007_start[4]
    set $I19, rx1007_start[5]
    store_lex unicode:"$\x{a2}", rx1007_cur
    length rx1007_eos, rx1007_tgt
    eq $I19, 1, rx1007_restart2172
    gt rx1007_pos, rx1007_eos, rx1007_fail2173
    repr_get_attr_int $I11, self, rx1007_curclass, "$!from"
    ne $I11, -1, rxscan1008_done2179
    goto rxscan1008_scan2178
  rxscan1008_loop2177:
    inc rx1007_pos
    gt rx1007_pos, rx1007_eos, rx1007_fail2173
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!from", rx1007_pos
  rxscan1008_scan2178:
    nqp_rxmark rx1007_bstack, rxscan1008_loop2177, rx1007_pos, 0
  rxscan1008_done2179:
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."name"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2173
    nqp_rxmark rx1007_bstack, rxsubrule1009_pass2180, -1, 0
  rxsubrule1009_pass2180:
    rx1007_cstack = rx1007_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    store_lex unicode:"$\x{a2}", rx1007_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_411_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1007_fail2173
    rx1007_cur."!cursor_pass"(rx1007_pos, "typename", 'backtrack'=>1)
    .return (rx1007_cur)
  rx1007_restart2172:
    repr_get_attr_obj rx1007_cstack, rx1007_cur, rx1007_curclass, "$!cstack"
  rx1007_fail2173:
    unless rx1007_bstack, rx1007_done2171
    pop $I19, rx1007_bstack
    if_null rx1007_cstack, rx1007_cstack_done2176
    unless rx1007_cstack, rx1007_cstack_done2176
    dec $I19
    set $P11, rx1007_cstack[$I19]
  rx1007_cstack_done2176:
    pop rx1007_rep, rx1007_bstack
    pop rx1007_pos, rx1007_bstack
    pop $I19, rx1007_bstack
    lt rx1007_pos, -1, rx1007_done2171
    lt rx1007_pos, 0, rx1007_fail2173
    eq $I19, 0, rx1007_fail2173
    nqp_islist $I20, rx1007_cstack
    unless $I20, rx1007_jump2174
    elements $I18, rx1007_bstack
    le $I18, 0, rx1007_cut2175
    dec $I18
    set $I18, rx1007_bstack[$I18]
  rx1007_cut2175:
    assign rx1007_cstack, $I18
  rx1007_jump2174:
    jump $I19
  rx1007_done2171:
    rx1007_cur."!cursor_fail"()
    .return (rx1007_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1381944288.90674") :anon :lex :outer("cuid_119_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1088
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2181
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_162, $P5002
    repr_defined $I5001, fb_tmp_162
    unless $I5001 goto if1010_else2182 
    set $P5004, fb_tmp_162["$W"]
    set $P5006, $P5004
    goto if1010_end2183
  if1010_else2182:
    null $P5005
    set $P5006, $P5005
  if1010_end2183:
    unless_null $P5006, vivi_10112184
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_10112184:
    unless_null $P5006, vivi_10122185
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_10122185:
    set $P5001, $P5006
  fallback2181:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2190
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  fallback2190:
    set fb_tmp_164, $P5010
    repr_defined $I5003, fb_tmp_164
    unless $I5003 goto if1014_else2188 
    set $P5012, fb_tmp_164["name"]
    set $P5014, $P5012
    goto if1014_end2189
  if1014_else2188:
    null $P5013
    set $P5014, $P5013
  if1014_end2189:
    unless_null $P5014, vivi_10152191
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_10152191:
    set fb_tmp_163, $P5014
    repr_defined $I5002, fb_tmp_163
    unless $I5002 goto if1013_else2186 
    set $P5016, fb_tmp_163["identifier"]
    set $P5018, $P5016
    goto if1013_end2187
  if1013_else2186:
    null $P5017
    set $P5018, $P5017
  if1013_end2187:
    unless_null $P5018, vivi_10162192
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_10162192:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_120_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1091
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1017_start
    .local string rx1017_tgt
    .local int rx1017_pos
    .local int rx1017_off
    .local int rx1017_eos
    .local int rx1017_rep
    .local pmc rx1017_cur
    .local pmc rx1017_curclass
    .local pmc rx1017_bstack
    .local pmc rx1017_cstack
    rx1017_start = self."!cursor_start_all"()
    set rx1017_cur, rx1017_start[0]
    set rx1017_tgt, rx1017_start[1]
    set rx1017_pos, rx1017_start[2]
    set rx1017_curclass, rx1017_start[3]
    set rx1017_bstack, rx1017_start[4]
    set $I19, rx1017_start[5]
    store_lex unicode:"$\x{a2}", rx1017_cur
    length rx1017_eos, rx1017_tgt
    eq $I19, 1, rx1017_restart2195
    gt rx1017_pos, rx1017_eos, rx1017_fail2196
    repr_get_attr_int $I11, self, rx1017_curclass, "$!from"
    ne $I11, -1, rxscan1018_done2202
    goto rxscan1018_scan2201
  rxscan1018_loop2200:
    inc rx1017_pos
    gt rx1017_pos, rx1017_eos, rx1017_fail2196
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!from", rx1017_pos
  rxscan1018_scan2201:
    nqp_rxmark rx1017_bstack, rxscan1018_loop2200, rx1017_pos, 0
  rxscan1018_done2202:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1019_02204
    nqp_push_label $P11, alt1019_12206
    nqp_rxmark rx1017_bstack, alt1019_end2203, -1, 0
    rx1017_cur."!alt"(rx1017_pos, "alt_nfa__22_1381944291.88698", $P11)
    goto rx1017_fail2196
  alt1019_02204:
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!pos", rx1017_pos
    $P11 = rx1017_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2196
    nqp_rxmark rx1017_bstack, rxsubrule1020_pass2205, -1, 0
  rxsubrule1020_pass2205:
    rx1017_cstack = rx1017_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1017_pos, $P11, rx1017_curclass, "$!pos"
    goto alt1019_end2203
  alt1019_12206:
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!pos", rx1017_pos
    $P11 = rx1017_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2196
    nqp_rxmark rx1017_bstack, rxsubrule1021_pass2207, -1, 0
  rxsubrule1021_pass2207:
    rx1017_cstack = rx1017_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1017_pos, $P11, rx1017_curclass, "$!pos"
    goto alt1019_end2203
  alt1019_end2203:
    rx1017_cur."!cursor_pass"(rx1017_pos, "declarator", 'backtrack'=>1)
    .return (rx1017_cur)
  rx1017_restart2195:
    repr_get_attr_obj rx1017_cstack, rx1017_cur, rx1017_curclass, "$!cstack"
  rx1017_fail2196:
    unless rx1017_bstack, rx1017_done2194
    pop $I19, rx1017_bstack
    if_null rx1017_cstack, rx1017_cstack_done2199
    unless rx1017_cstack, rx1017_cstack_done2199
    dec $I19
    set $P11, rx1017_cstack[$I19]
  rx1017_cstack_done2199:
    pop rx1017_rep, rx1017_bstack
    pop rx1017_pos, rx1017_bstack
    pop $I19, rx1017_bstack
    lt rx1017_pos, -1, rx1017_done2194
    lt rx1017_pos, 0, rx1017_fail2196
    eq $I19, 0, rx1017_fail2196
    nqp_islist $I20, rx1017_cstack
    unless $I20, rx1017_jump2197
    elements $I18, rx1017_bstack
    le $I18, 0, rx1017_cut2198
    dec $I18
    set $I18, rx1017_bstack[$I18]
  rx1017_cut2198:
    assign rx1017_cstack, $I18
  rx1017_jump2197:
    jump $I19
  rx1017_done2194:
    rx1017_cur."!cursor_fail"()
    .return (rx1017_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_121_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1096
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_412_1381944288.90674' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1022_start
    .local string rx1022_tgt
    .local int rx1022_pos
    .local int rx1022_off
    .local int rx1022_eos
    .local int rx1022_rep
    .local pmc rx1022_cur
    .local pmc rx1022_curclass
    .local pmc rx1022_bstack
    .local pmc rx1022_cstack
    rx1022_start = self."!cursor_start_all"()
    set rx1022_cur, rx1022_start[0]
    set rx1022_tgt, rx1022_start[1]
    set rx1022_pos, rx1022_start[2]
    set rx1022_curclass, rx1022_start[3]
    set rx1022_bstack, rx1022_start[4]
    set $I19, rx1022_start[5]
    store_lex unicode:"$\x{a2}", rx1022_cur
    length rx1022_eos, rx1022_tgt
    eq $I19, 1, rx1022_restart2210
    gt rx1022_pos, rx1022_eos, rx1022_fail2211
    repr_get_attr_int $I11, self, rx1022_curclass, "$!from"
    ne $I11, -1, rxscan1023_done2217
    goto rxscan1023_scan2216
  rxscan1023_loop2215:
    inc rx1022_pos
    gt rx1022_pos, rx1022_eos, rx1022_fail2211
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!from", rx1022_pos
  rxscan1023_scan2216:
    nqp_rxmark rx1022_bstack, rxscan1023_loop2215, rx1022_pos, 0
  rxscan1023_done2217:
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    nqp_rxmark rx1022_bstack, rxquantr1025_done2220, rx1022_pos, 0
  rxquantr1025_loop2219:
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    goto rxsubrule1026_pass2221
  rxsubrule1026_back2222:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
  rxsubrule1026_pass2221:
    rx1022_cstack = rx1022_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1026_back2222
    push rx1022_bstack, $I11
    push rx1022_bstack, 0
    push rx1022_bstack, rx1022_pos
    elements $I11, rx1022_cstack
    push rx1022_bstack, $I11
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    nqp_rxpeek $I19, rx1022_bstack, rxquantr1025_done2220
    inc $I19
    inc $I19
    set rx1022_rep, rx1022_bstack[$I19]
    nqp_rxcommit rx1022_bstack, rxquantr1025_done2220
    inc rx1022_rep
  rxquantr1025_done2220:
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    store_lex unicode:"$\x{a2}", rx1022_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    nqp_rxmark rx1022_bstack, rxsubrule1029_pass2225, -1, 0
  rxsubrule1029_pass2225:
    rx1022_cstack = rx1022_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    store_lex unicode:"$\x{a2}", rx1022_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_412_1381944288.90674' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    nqp_rxmark rx1022_bstack, rxquantr1032_done2229, rx1022_pos, 0
  rxquantr1032_loop2228:
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    goto rxsubrule1033_pass2230
  rxsubrule1033_back2231:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
  rxsubrule1033_pass2230:
    rx1022_cstack = rx1022_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1033_back2231
    push rx1022_bstack, $I11
    push rx1022_bstack, 0
    push rx1022_bstack, rx1022_pos
    elements $I11, rx1022_cstack
    push rx1022_bstack, $I11
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    nqp_rxpeek $I19, rx1022_bstack, rxquantr1032_done2229
    inc $I19
    inc $I19
    set rx1022_rep, rx1022_bstack[$I19]
    nqp_rxcommit rx1022_bstack, rxquantr1032_done2229
    inc rx1022_rep
    nqp_rxmark rx1022_bstack, rxquantr1032_done2229, rx1022_pos, rx1022_rep
    goto rxquantr1032_loop2228
  rxquantr1032_done2229:
    repr_bind_attr_int rx1022_cur, rx1022_curclass, "$!pos", rx1022_pos
    $P11 = rx1022_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1022_curclass, "$!pos"
    lt $I11, 0, rx1022_fail2211
    repr_get_attr_int rx1022_pos, $P11, rx1022_curclass, "$!pos"
    rx1022_cur."!cursor_pass"(rx1022_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1022_cur)
  rx1022_restart2210:
    repr_get_attr_obj rx1022_cstack, rx1022_cur, rx1022_curclass, "$!cstack"
  rx1022_fail2211:
    unless rx1022_bstack, rx1022_done2209
    pop $I19, rx1022_bstack
    if_null rx1022_cstack, rx1022_cstack_done2214
    unless rx1022_cstack, rx1022_cstack_done2214
    dec $I19
    set $P11, rx1022_cstack[$I19]
  rx1022_cstack_done2214:
    pop rx1022_rep, rx1022_bstack
    pop rx1022_pos, rx1022_bstack
    pop $I19, rx1022_bstack
    lt rx1022_pos, -1, rx1022_done2209
    lt rx1022_pos, 0, rx1022_fail2211
    eq $I19, 0, rx1022_fail2211
    nqp_islist $I20, rx1022_cstack
    unless $I20, rx1022_jump2212
    elements $I18, rx1022_bstack
    le $I18, 0, rx1022_cut2213
    dec $I18
    set $I18, rx1022_bstack[$I18]
  rx1022_cut2213:
    assign rx1022_cstack, $I18
  rx1022_jump2212:
    jump $I19
  rx1022_done2209:
    rx1022_cur."!cursor_fail"()
    .return (rx1022_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1381944288.90674") :anon :lex :outer("cuid_121_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1100

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_122_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1104
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_123_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1105
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1035_start
    .local string rx1035_tgt
    .local int rx1035_pos
    .local int rx1035_off
    .local int rx1035_eos
    .local int rx1035_rep
    .local pmc rx1035_cur
    .local pmc rx1035_curclass
    .local pmc rx1035_bstack
    .local pmc rx1035_cstack
    rx1035_start = self."!cursor_start_all"()
    set rx1035_cur, rx1035_start[0]
    set rx1035_tgt, rx1035_start[1]
    set rx1035_pos, rx1035_start[2]
    set rx1035_curclass, rx1035_start[3]
    set rx1035_bstack, rx1035_start[4]
    set $I19, rx1035_start[5]
    store_lex unicode:"$\x{a2}", rx1035_cur
    length rx1035_eos, rx1035_tgt
    eq $I19, 1, rx1035_restart2235
    gt rx1035_pos, rx1035_eos, rx1035_fail2236
    repr_get_attr_int $I11, self, rx1035_curclass, "$!from"
    ne $I11, -1, rxscan1036_done2242
    goto rxscan1036_scan2241
  rxscan1036_loop2240:
    inc rx1035_pos
    gt rx1035_pos, rx1035_eos, rx1035_fail2236
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!from", rx1035_pos
  rxscan1036_scan2241:
    nqp_rxmark rx1035_bstack, rxscan1036_loop2240, rx1035_pos, 0
  rxscan1036_done2242:
    nqp_rxmark rx1035_bstack, rxcap1037_fail2244, rx1035_pos, 0
    add $I11, rx1035_pos, 3
    gt $I11, rx1035_eos, rx1035_fail2236
    substr $S10, rx1035_tgt, rx1035_pos, 3
    ne $S10, ucs4:"sub", rx1035_fail2236
    add rx1035_pos, 3
    nqp_rxpeek $I19, rx1035_bstack, rxcap1037_fail2244
    inc $I19
    set $I11, rx1035_bstack[$I19]
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1035_pos)
    rx1035_cstack = rx1035_cur."!cursor_capture"($P11, "sym")
    goto rxcap1037_done2243
  rxcap1037_fail2244:
    goto rx1035_fail2236
  rxcap1037_done2243:
    repr_bind_attr_int rx1035_cur, rx1035_curclass, "$!pos", rx1035_pos
    $P11 = rx1035_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1035_curclass, "$!pos"
    lt $I11, 0, rx1035_fail2236
    nqp_rxmark rx1035_bstack, rxsubrule1038_pass2245, -1, 0
  rxsubrule1038_pass2245:
    rx1035_cstack = rx1035_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1035_pos, $P11, rx1035_curclass, "$!pos"
    rx1035_cur."!cursor_pass"(rx1035_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1035_cur)
  rx1035_restart2235:
    repr_get_attr_obj rx1035_cstack, rx1035_cur, rx1035_curclass, "$!cstack"
  rx1035_fail2236:
    unless rx1035_bstack, rx1035_done2234
    pop $I19, rx1035_bstack
    if_null rx1035_cstack, rx1035_cstack_done2239
    unless rx1035_cstack, rx1035_cstack_done2239
    dec $I19
    set $P11, rx1035_cstack[$I19]
  rx1035_cstack_done2239:
    pop rx1035_rep, rx1035_bstack
    pop rx1035_pos, rx1035_bstack
    pop $I19, rx1035_bstack
    lt rx1035_pos, -1, rx1035_done2234
    lt rx1035_pos, 0, rx1035_fail2236
    eq $I19, 0, rx1035_fail2236
    nqp_islist $I20, rx1035_cstack
    unless $I20, rx1035_jump2237
    elements $I18, rx1035_bstack
    le $I18, 0, rx1035_cut2238
    dec $I18
    set $I18, rx1035_bstack[$I18]
  rx1035_cut2238:
    assign rx1035_cstack, $I18
  rx1035_jump2237:
    jump $I19
  rx1035_done2234:
    rx1035_cur."!cursor_fail"()
    .return (rx1035_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_124_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1106
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1039_start
    .local string rx1039_tgt
    .local int rx1039_pos
    .local int rx1039_off
    .local int rx1039_eos
    .local int rx1039_rep
    .local pmc rx1039_cur
    .local pmc rx1039_curclass
    .local pmc rx1039_bstack
    .local pmc rx1039_cstack
    rx1039_start = self."!cursor_start_all"()
    set rx1039_cur, rx1039_start[0]
    set rx1039_tgt, rx1039_start[1]
    set rx1039_pos, rx1039_start[2]
    set rx1039_curclass, rx1039_start[3]
    set rx1039_bstack, rx1039_start[4]
    set $I19, rx1039_start[5]
    store_lex unicode:"$\x{a2}", rx1039_cur
    length rx1039_eos, rx1039_tgt
    eq $I19, 1, rx1039_restart2248
    gt rx1039_pos, rx1039_eos, rx1039_fail2249
    repr_get_attr_int $I11, self, rx1039_curclass, "$!from"
    ne $I11, -1, rxscan1040_done2255
    goto rxscan1040_scan2254
  rxscan1040_loop2253:
    inc rx1039_pos
    gt rx1039_pos, rx1039_eos, rx1039_fail2249
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!from", rx1039_pos
  rxscan1040_scan2254:
    nqp_rxmark rx1039_bstack, rxscan1040_loop2253, rx1039_pos, 0
  rxscan1040_done2255:
    nqp_rxmark rx1039_bstack, rxcap1041_fail2257, rx1039_pos, 0
    add $I11, rx1039_pos, 6
    gt $I11, rx1039_eos, rx1039_fail2249
    substr $S10, rx1039_tgt, rx1039_pos, 6
    ne $S10, ucs4:"method", rx1039_fail2249
    add rx1039_pos, 6
    nqp_rxpeek $I19, rx1039_bstack, rxcap1041_fail2257
    inc $I19
    set $I11, rx1039_bstack[$I19]
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!pos", rx1039_pos
    $P11 = rx1039_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1039_pos)
    rx1039_cstack = rx1039_cur."!cursor_capture"($P11, "sym")
    goto rxcap1041_done2256
  rxcap1041_fail2257:
    goto rx1039_fail2249
  rxcap1041_done2256:
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!pos", rx1039_pos
    $P11 = rx1039_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1039_curclass, "$!pos"
    lt $I11, 0, rx1039_fail2249
    nqp_rxmark rx1039_bstack, rxsubrule1042_pass2258, -1, 0
  rxsubrule1042_pass2258:
    rx1039_cstack = rx1039_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx1039_pos, $P11, rx1039_curclass, "$!pos"
    rx1039_cur."!cursor_pass"(rx1039_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1039_cur)
  rx1039_restart2248:
    repr_get_attr_obj rx1039_cstack, rx1039_cur, rx1039_curclass, "$!cstack"
  rx1039_fail2249:
    unless rx1039_bstack, rx1039_done2247
    pop $I19, rx1039_bstack
    if_null rx1039_cstack, rx1039_cstack_done2252
    unless rx1039_cstack, rx1039_cstack_done2252
    dec $I19
    set $P11, rx1039_cstack[$I19]
  rx1039_cstack_done2252:
    pop rx1039_rep, rx1039_bstack
    pop rx1039_pos, rx1039_bstack
    pop $I19, rx1039_bstack
    lt rx1039_pos, -1, rx1039_done2247
    lt rx1039_pos, 0, rx1039_fail2249
    eq $I19, 0, rx1039_fail2249
    nqp_islist $I20, rx1039_cstack
    unless $I20, rx1039_jump2250
    elements $I18, rx1039_bstack
    le $I18, 0, rx1039_cut2251
    dec $I18
    set $I18, rx1039_bstack[$I18]
  rx1039_cut2251:
    assign rx1039_cstack, $I18
  rx1039_jump2250:
    jump $I19
  rx1039_done2247:
    rx1039_cur."!cursor_fail"()
    .return (rx1039_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_125_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1108
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1043_start
    .local string rx1043_tgt
    .local int rx1043_pos
    .local int rx1043_off
    .local int rx1043_eos
    .local int rx1043_rep
    .local pmc rx1043_cur
    .local pmc rx1043_curclass
    .local pmc rx1043_bstack
    .local pmc rx1043_cstack
    rx1043_start = self."!cursor_start_all"()
    set rx1043_cur, rx1043_start[0]
    set rx1043_tgt, rx1043_start[1]
    set rx1043_pos, rx1043_start[2]
    set rx1043_curclass, rx1043_start[3]
    set rx1043_bstack, rx1043_start[4]
    set $I19, rx1043_start[5]
    store_lex unicode:"$\x{a2}", rx1043_cur
    length rx1043_eos, rx1043_tgt
    eq $I19, 1, rx1043_restart2261
    gt rx1043_pos, rx1043_eos, rx1043_fail2262
    repr_get_attr_int $I11, self, rx1043_curclass, "$!from"
    ne $I11, -1, rxscan1044_done2268
    goto rxscan1044_scan2267
  rxscan1044_loop2266:
    inc rx1043_pos
    gt rx1043_pos, rx1043_eos, rx1043_fail2262
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!from", rx1043_pos
  rxscan1044_scan2267:
    nqp_rxmark rx1043_bstack, rxscan1044_loop2266, rx1043_pos, 0
  rxscan1044_done2268:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    store_lex unicode:"$\x{a2}", rx1043_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    nqp_rxmark rx1043_bstack, rxquantr1047_done2272, rx1043_pos, 0
  rxquantr1047_loop2271:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    nqp_rxmark rx1043_bstack, rxcap1049_fail2275, rx1043_pos, 0
    nqp_rxmark rx1043_bstack, rxquantr1050_done2277, rx1043_pos, 0
  rxquantr1050_loop2276:
    add $I11, rx1043_pos, 1
    gt $I11, rx1043_eos, rx1043_fail2262
    substr $S10, rx1043_tgt, rx1043_pos, 1
    ne $S10, ucs4:"&", rx1043_fail2262
    add rx1043_pos, 1
    nqp_rxpeek $I19, rx1043_bstack, rxquantr1050_done2277
    inc $I19
    inc $I19
    set rx1043_rep, rx1043_bstack[$I19]
    nqp_rxcommit rx1043_bstack, rxquantr1050_done2277
    inc rx1043_rep
  rxquantr1050_done2277:
    nqp_rxpeek $I19, rx1043_bstack, rxcap1049_fail2275
    inc $I19
    set $I11, rx1043_bstack[$I19]
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1043_pos)
    rx1043_cstack = rx1043_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1049_done2274
  rxcap1049_fail2275:
    goto rx1043_fail2262
  rxcap1049_done2274:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    nqp_rxmark rx1043_bstack, rxsubrule1051_pass2278, -1, 0
  rxsubrule1051_pass2278:
    rx1043_cstack = rx1043_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    nqp_rxpeek $I19, rx1043_bstack, rxquantr1047_done2272
    inc $I19
    inc $I19
    set rx1043_rep, rx1043_bstack[$I19]
    nqp_rxcommit rx1043_bstack, rxquantr1047_done2272
    inc rx1043_rep
  rxquantr1047_done2272:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
  alt1056_02284:
    nqp_rxmark rx1043_bstack, alt1056_12290, rx1043_pos, 0
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    add $I11, rx1043_pos, 1
    gt $I11, rx1043_eos, rx1043_fail2262
    substr $S10, rx1043_tgt, rx1043_pos, 1
    ne $S10, ucs4:"(", rx1043_fail2262
    add rx1043_pos, 1
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    nqp_rxmark rx1043_bstack, rxsubrule1059_pass2287, -1, 0
  rxsubrule1059_pass2287:
    rx1043_cstack = rx1043_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    add $I11, rx1043_pos, 1
    gt $I11, rx1043_eos, rx1043_fail2262
    substr $S10, rx1043_tgt, rx1043_pos, 1
    ne $S10, ucs4:")", rx1043_fail2262
    add rx1043_pos, 1
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    goto alt1056_end2283
  alt1056_12290:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
  alt1056_end2283:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    nqp_rxmark rx1043_bstack, rxquantr1066_done2296, rx1043_pos, 0
  rxquantr1066_loop2295:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    goto rxsubrule1067_pass2297
  rxsubrule1067_back2298:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
  rxsubrule1067_pass2297:
    rx1043_cstack = rx1043_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1067_back2298
    push rx1043_bstack, $I11
    push rx1043_bstack, 0
    push rx1043_bstack, rx1043_pos
    elements $I11, rx1043_cstack
    push rx1043_bstack, $I11
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    nqp_rxpeek $I19, rx1043_bstack, rxquantr1066_done2296
    inc $I19
    inc $I19
    set rx1043_rep, rx1043_bstack[$I19]
    nqp_rxcommit rx1043_bstack, rxquantr1066_done2296
    inc rx1043_rep
    nqp_rxmark rx1043_bstack, rxquantr1066_done2296, rx1043_pos, rx1043_rep
    goto rxquantr1066_loop2295
  rxquantr1066_done2296:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1069_02301
    nqp_push_label $P11, alt1069_12305
    nqp_rxmark rx1043_bstack, alt1069_end2300, -1, 0
    rx1043_cur."!alt"(rx1043_pos, "alt_nfa__23_1381944291.94819", $P11)
    goto rx1043_fail2262
  alt1069_02301:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    nqp_rxmark rx1043_bstack, rxsubrule1071_pass2303, -1, 0
  rxsubrule1071_pass2303:
    rx1043_cstack = rx1043_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    goto alt1069_end2300
  alt1069_12305:
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    nqp_rxmark rx1043_bstack, rxsubrule1074_pass2307, -1, 0
  rxsubrule1074_pass2307:
    rx1043_cstack = rx1043_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    goto alt1069_end2300
  alt1069_end2300:
    nqp_rxcommit rx1043_bstack, alt1069_end2300
    repr_bind_attr_int rx1043_cur, rx1043_curclass, "$!pos", rx1043_pos
    $P11 = rx1043_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1043_curclass, "$!pos"
    lt $I11, 0, rx1043_fail2262
    repr_get_attr_int rx1043_pos, $P11, rx1043_curclass, "$!pos"
    rx1043_cur."!cursor_pass"(rx1043_pos, "routine_def", 'backtrack'=>1)
    .return (rx1043_cur)
  rx1043_restart2261:
    repr_get_attr_obj rx1043_cstack, rx1043_cur, rx1043_curclass, "$!cstack"
  rx1043_fail2262:
    unless rx1043_bstack, rx1043_done2260
    pop $I19, rx1043_bstack
    if_null rx1043_cstack, rx1043_cstack_done2265
    unless rx1043_cstack, rx1043_cstack_done2265
    dec $I19
    set $P11, rx1043_cstack[$I19]
  rx1043_cstack_done2265:
    pop rx1043_rep, rx1043_bstack
    pop rx1043_pos, rx1043_bstack
    pop $I19, rx1043_bstack
    lt rx1043_pos, -1, rx1043_done2260
    lt rx1043_pos, 0, rx1043_fail2262
    eq $I19, 0, rx1043_fail2262
    nqp_islist $I20, rx1043_cstack
    unless $I20, rx1043_jump2263
    elements $I18, rx1043_bstack
    le $I18, 0, rx1043_cut2264
    dec $I18
    set $I18, rx1043_bstack[$I18]
  rx1043_cut2264:
    assign rx1043_cstack, $I18
  rx1043_jump2263:
    jump $I19
  rx1043_done2260:
    rx1043_cur."!cursor_fail"()
    .return (rx1043_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_126_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1121
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_413_1381944288.90674' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1077_start
    .local string rx1077_tgt
    .local int rx1077_pos
    .local int rx1077_off
    .local int rx1077_eos
    .local int rx1077_rep
    .local pmc rx1077_cur
    .local pmc rx1077_curclass
    .local pmc rx1077_bstack
    .local pmc rx1077_cstack
    rx1077_start = self."!cursor_start_all"()
    set rx1077_cur, rx1077_start[0]
    set rx1077_tgt, rx1077_start[1]
    set rx1077_pos, rx1077_start[2]
    set rx1077_curclass, rx1077_start[3]
    set rx1077_bstack, rx1077_start[4]
    set $I19, rx1077_start[5]
    store_lex unicode:"$\x{a2}", rx1077_cur
    length rx1077_eos, rx1077_tgt
    eq $I19, 1, rx1077_restart2312
    gt rx1077_pos, rx1077_eos, rx1077_fail2313
    repr_get_attr_int $I11, self, rx1077_curclass, "$!from"
    ne $I11, -1, rxscan1078_done2319
    goto rxscan1078_scan2318
  rxscan1078_loop2317:
    inc rx1077_pos
    gt rx1077_pos, rx1077_eos, rx1077_fail2313
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!from", rx1077_pos
  rxscan1078_scan2318:
    nqp_rxmark rx1077_bstack, rxscan1078_loop2317, rx1077_pos, 0
  rxscan1078_done2319:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    store_lex unicode:"$\x{a2}", rx1077_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    store_lex unicode:"$\x{a2}", rx1077_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
  alt1082_02324:
    nqp_rxmark rx1077_bstack, alt1082_12330, rx1077_pos, 0
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    add $I11, rx1077_pos, 3
    gt $I11, rx1077_eos, rx1077_fail2313
    substr $S10, rx1077_tgt, rx1077_pos, 3
    ne $S10, ucs4:"::(", rx1077_fail2313
    add rx1077_pos, 3
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    nqp_rxmark rx1077_bstack, rxsubrule1085_pass2327, -1, 0
  rxsubrule1085_pass2327:
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    add $I11, rx1077_pos, 1
    gt $I11, rx1077_eos, rx1077_fail2313
    substr $S10, rx1077_tgt, rx1077_pos, 1
    ne $S10, ucs4:")", rx1077_fail2313
    add rx1077_pos, 1
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    goto alt1082_end2323
  alt1082_12330:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    nqp_rxmark rx1077_bstack, rxcap1089_fail2333, rx1077_pos, 0
    nqp_rxmark rx1077_bstack, rxquantr1090_done2335, rx1077_pos, 0
  rxquantr1090_loop2334:
    add $I11, rx1077_pos, 1
    gt $I11, rx1077_eos, rx1077_fail2313
    substr $S10, rx1077_tgt, rx1077_pos, 1
    ne $S10, ucs4:"!", rx1077_fail2313
    add rx1077_pos, 1
    nqp_rxpeek $I19, rx1077_bstack, rxquantr1090_done2335
    inc $I19
    inc $I19
    set rx1077_rep, rx1077_bstack[$I19]
    nqp_rxcommit rx1077_bstack, rxquantr1090_done2335
    inc rx1077_rep
  rxquantr1090_done2335:
    nqp_rxpeek $I19, rx1077_bstack, rxcap1089_fail2333
    inc $I19
    set $I11, rx1077_bstack[$I19]
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1077_pos)
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "private")
    goto rxcap1089_done2332
  rxcap1089_fail2333:
    goto rx1077_fail2313
  rxcap1089_done2332:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    nqp_rxmark rx1077_bstack, rxquantr1092_done2338, rx1077_pos, 0
  rxquantr1092_loop2337:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    goto rxsubrule1093_pass2339
  rxsubrule1093_back2340:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
  rxsubrule1093_pass2339:
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1093_back2340
    push rx1077_bstack, $I11
    push rx1077_bstack, 0
    push rx1077_bstack, rx1077_pos
    elements $I11, rx1077_cstack
    push rx1077_bstack, $I11
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    nqp_rxpeek $I19, rx1077_bstack, rxquantr1092_done2338
    inc $I19
    inc $I19
    set rx1077_rep, rx1077_bstack[$I19]
    nqp_rxcommit rx1077_bstack, rxquantr1092_done2338
    inc rx1077_rep
  rxquantr1092_done2338:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
  alt1082_end2323:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
  alt1098_02346:
    nqp_rxmark rx1077_bstack, alt1098_12352, rx1077_pos, 0
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    add $I11, rx1077_pos, 1
    gt $I11, rx1077_eos, rx1077_fail2313
    substr $S10, rx1077_tgt, rx1077_pos, 1
    ne $S10, ucs4:"(", rx1077_fail2313
    add rx1077_pos, 1
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    nqp_rxmark rx1077_bstack, rxsubrule1101_pass2349, -1, 0
  rxsubrule1101_pass2349:
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    add $I11, rx1077_pos, 1
    gt $I11, rx1077_eos, rx1077_fail2313
    substr $S10, rx1077_tgt, rx1077_pos, 1
    ne $S10, ucs4:")", rx1077_fail2313
    add rx1077_pos, 1
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    goto alt1098_end2345
  alt1098_12352:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
  alt1098_end2345:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    store_lex unicode:"$\x{a2}", rx1077_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_413_1381944288.90674' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    nqp_rxmark rx1077_bstack, rxquantr1109_done2359, rx1077_pos, 0
  rxquantr1109_loop2358:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    goto rxsubrule1110_pass2360
  rxsubrule1110_back2361:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
  rxsubrule1110_pass2360:
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1110_back2361
    push rx1077_bstack, $I11
    push rx1077_bstack, 0
    push rx1077_bstack, rx1077_pos
    elements $I11, rx1077_cstack
    push rx1077_bstack, $I11
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    nqp_rxpeek $I19, rx1077_bstack, rxquantr1109_done2359
    inc $I19
    inc $I19
    set rx1077_rep, rx1077_bstack[$I19]
    nqp_rxcommit rx1077_bstack, rxquantr1109_done2359
    inc rx1077_rep
    nqp_rxmark rx1077_bstack, rxquantr1109_done2359, rx1077_pos, rx1077_rep
    goto rxquantr1109_loop2358
  rxquantr1109_done2359:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1112_02364
    nqp_push_label $P11, alt1112_12368
    nqp_rxmark rx1077_bstack, alt1112_end2363, -1, 0
    rx1077_cur."!alt"(rx1077_pos, "alt_nfa__24_1381944291.99303", $P11)
    goto rx1077_fail2313
  alt1112_02364:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    nqp_rxmark rx1077_bstack, rxsubrule1114_pass2366, -1, 0
  rxsubrule1114_pass2366:
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    goto alt1112_end2363
  alt1112_12368:
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    nqp_rxmark rx1077_bstack, rxsubrule1117_pass2370, -1, 0
  rxsubrule1117_pass2370:
    rx1077_cstack = rx1077_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    goto alt1112_end2363
  alt1112_end2363:
    nqp_rxcommit rx1077_bstack, alt1112_end2363
    repr_bind_attr_int rx1077_cur, rx1077_curclass, "$!pos", rx1077_pos
    $P11 = rx1077_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1077_curclass, "$!pos"
    lt $I11, 0, rx1077_fail2313
    repr_get_attr_int rx1077_pos, $P11, rx1077_curclass, "$!pos"
    rx1077_cur."!cursor_pass"(rx1077_pos, "method_def", 'backtrack'=>1)
    .return (rx1077_cur)
  rx1077_restart2312:
    repr_get_attr_obj rx1077_cstack, rx1077_cur, rx1077_curclass, "$!cstack"
  rx1077_fail2313:
    unless rx1077_bstack, rx1077_done2311
    pop $I19, rx1077_bstack
    if_null rx1077_cstack, rx1077_cstack_done2316
    unless rx1077_cstack, rx1077_cstack_done2316
    dec $I19
    set $P11, rx1077_cstack[$I19]
  rx1077_cstack_done2316:
    pop rx1077_rep, rx1077_bstack
    pop rx1077_pos, rx1077_bstack
    pop $I19, rx1077_bstack
    lt rx1077_pos, -1, rx1077_done2311
    lt rx1077_pos, 0, rx1077_fail2313
    eq $I19, 0, rx1077_fail2313
    nqp_islist $I20, rx1077_cstack
    unless $I20, rx1077_jump2314
    elements $I18, rx1077_bstack
    le $I18, 0, rx1077_cut2315
    dec $I18
    set $I18, rx1077_bstack[$I18]
  rx1077_cut2315:
    assign rx1077_cstack, $I18
  rx1077_jump2314:
    jump $I19
  rx1077_done2311:
    rx1077_cur."!cursor_fail"()
    .return (rx1077_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1381944288.90674") :anon :lex :outer("cuid_126_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1131

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_127_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1139
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_414_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1120_start
    .local string rx1120_tgt
    .local int rx1120_pos
    .local int rx1120_off
    .local int rx1120_eos
    .local int rx1120_rep
    .local pmc rx1120_cur
    .local pmc rx1120_curclass
    .local pmc rx1120_bstack
    .local pmc rx1120_cstack
    rx1120_start = self."!cursor_start_all"()
    set rx1120_cur, rx1120_start[0]
    set rx1120_tgt, rx1120_start[1]
    set rx1120_pos, rx1120_start[2]
    set rx1120_curclass, rx1120_start[3]
    set rx1120_bstack, rx1120_start[4]
    set $I19, rx1120_start[5]
    store_lex unicode:"$\x{a2}", rx1120_cur
    length rx1120_eos, rx1120_tgt
    eq $I19, 1, rx1120_restart2375
    gt rx1120_pos, rx1120_eos, rx1120_fail2376
    repr_get_attr_int $I11, self, rx1120_curclass, "$!from"
    ne $I11, -1, rxscan1121_done2382
    goto rxscan1121_scan2381
  rxscan1121_loop2380:
    inc rx1120_pos
    gt rx1120_pos, rx1120_eos, rx1120_fail2376
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!from", rx1120_pos
  rxscan1121_scan2381:
    nqp_rxmark rx1120_bstack, rxscan1121_loop2380, rx1120_pos, 0
  rxscan1121_done2382:
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    store_lex unicode:"$\x{a2}", rx1120_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_414_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1120_fail2376
    add $I11, rx1120_pos, 1
    gt $I11, rx1120_eos, rx1120_fail2376
    substr $S10, rx1120_tgt, rx1120_pos, 1
    ne $S10, ucs4:"{", rx1120_fail2376
    add rx1120_pos, 1
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2376
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    add $I11, rx1120_pos, 1
    gt $I11, rx1120_eos, rx1120_fail2376
    substr $S10, rx1120_tgt, rx1120_pos, 1
    ne $S10, ucs4:"*", rx1120_fail2376
    add rx1120_pos, 1
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2376
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    add $I11, rx1120_pos, 1
    gt $I11, rx1120_eos, rx1120_fail2376
    substr $S10, rx1120_tgt, rx1120_pos, 1
    ne $S10, ucs4:"}", rx1120_fail2376
    add rx1120_pos, 1
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2376
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2376
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    rx1120_cur."!cursor_pass"(rx1120_pos, "onlystar", 'backtrack'=>1)
    .return (rx1120_cur)
  rx1120_restart2375:
    repr_get_attr_obj rx1120_cstack, rx1120_cur, rx1120_curclass, "$!cstack"
  rx1120_fail2376:
    unless rx1120_bstack, rx1120_done2374
    pop $I19, rx1120_bstack
    if_null rx1120_cstack, rx1120_cstack_done2379
    unless rx1120_cstack, rx1120_cstack_done2379
    dec $I19
    set $P11, rx1120_cstack[$I19]
  rx1120_cstack_done2379:
    pop rx1120_rep, rx1120_bstack
    pop rx1120_pos, rx1120_bstack
    pop $I19, rx1120_bstack
    lt rx1120_pos, -1, rx1120_done2374
    lt rx1120_pos, 0, rx1120_fail2376
    eq $I19, 0, rx1120_fail2376
    nqp_islist $I20, rx1120_cstack
    unless $I20, rx1120_jump2377
    elements $I18, rx1120_bstack
    le $I18, 0, rx1120_cut2378
    dec $I18
    set $I18, rx1120_bstack[$I18]
  rx1120_cut2378:
    assign rx1120_cstack, $I18
  rx1120_jump2377:
    jump $I19
  rx1120_done2374:
    rx1120_cur."!cursor_fail"()
    .return (rx1120_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1381944288.90674") :anon :lex :outer("cuid_127_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1140
    .local pmc fb_tmp_165 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2383
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_165, $P5002
    repr_defined $I5002, fb_tmp_165
    unless $I5002 goto if1122_else2384 
    set $P5004, fb_tmp_165["$MULTINESS"]
    set $P5006, $P5004
    goto if1122_end2385
  if1122_else2384:
    null $P5005
    set $P5006, $P5005
  if1122_end2385:
    unless_null $P5006, vivi_11232386
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_11232386:
    unless_null $P5006, vivi_11242387
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_11242387:
    set $P5001, $P5006
  fallback2383:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_128_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1146
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_129_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1147
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1128_start
    .local string rx1128_tgt
    .local int rx1128_pos
    .local int rx1128_off
    .local int rx1128_eos
    .local int rx1128_rep
    .local pmc rx1128_cur
    .local pmc rx1128_curclass
    .local pmc rx1128_bstack
    .local pmc rx1128_cstack
    rx1128_start = self."!cursor_start_all"()
    set rx1128_cur, rx1128_start[0]
    set rx1128_tgt, rx1128_start[1]
    set rx1128_pos, rx1128_start[2]
    set rx1128_curclass, rx1128_start[3]
    set rx1128_bstack, rx1128_start[4]
    set $I19, rx1128_start[5]
    store_lex unicode:"$\x{a2}", rx1128_cur
    length rx1128_eos, rx1128_tgt
    eq $I19, 1, rx1128_restart2393
    gt rx1128_pos, rx1128_eos, rx1128_fail2394
    repr_get_attr_int $I11, self, rx1128_curclass, "$!from"
    ne $I11, -1, rxscan1129_done2400
    goto rxscan1129_scan2399
  rxscan1129_loop2398:
    inc rx1128_pos
    gt rx1128_pos, rx1128_eos, rx1128_fail2394
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!from", rx1128_pos
  rxscan1129_scan2399:
    nqp_rxmark rx1128_bstack, rxscan1129_loop2398, rx1128_pos, 0
  rxscan1129_done2400:
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!pos", rx1128_pos
    store_lex unicode:"$\x{a2}", rx1128_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1128_bstack, rxcap1130_fail2402, rx1128_pos, 0
    add $I11, rx1128_pos, 5
    gt $I11, rx1128_eos, rx1128_fail2394
    substr $S10, rx1128_tgt, rx1128_pos, 5
    ne $S10, ucs4:"multi", rx1128_fail2394
    add rx1128_pos, 5
    nqp_rxpeek $I19, rx1128_bstack, rxcap1130_fail2402
    inc $I19
    set $I11, rx1128_bstack[$I19]
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!pos", rx1128_pos
    $P11 = rx1128_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1128_pos)
    rx1128_cstack = rx1128_cur."!cursor_capture"($P11, "sym")
    goto rxcap1130_done2401
  rxcap1130_fail2402:
    goto rx1128_fail2394
  rxcap1130_done2401:
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!pos", rx1128_pos
    $P11 = rx1128_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1128_curclass, "$!pos"
    lt $I11, 0, rx1128_fail2394
    repr_get_attr_int rx1128_pos, $P11, rx1128_curclass, "$!pos"
  alt1132_02405:
    nqp_rxmark rx1128_bstack, alt1132_12407, rx1128_pos, 0
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!pos", rx1128_pos
    $P11 = rx1128_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1128_curclass, "$!pos"
    lt $I11, 0, rx1128_fail2394
    nqp_rxmark rx1128_bstack, rxsubrule1133_pass2406, -1, 0
  rxsubrule1133_pass2406:
    rx1128_cstack = rx1128_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1128_pos, $P11, rx1128_curclass, "$!pos"
    goto alt1132_end2404
  alt1132_12407:
    nqp_rxmark rx1128_bstack, alt1132_22409, rx1128_pos, 0
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!pos", rx1128_pos
    $P11 = rx1128_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1128_curclass, "$!pos"
    lt $I11, 0, rx1128_fail2394
    nqp_rxmark rx1128_bstack, rxsubrule1134_pass2408, -1, 0
  rxsubrule1134_pass2408:
    rx1128_cstack = rx1128_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1128_pos, $P11, rx1128_curclass, "$!pos"
    goto alt1132_end2404
  alt1132_22409:
    repr_bind_attr_int rx1128_cur, rx1128_curclass, "$!pos", rx1128_pos
    $P11 = rx1128_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1128_curclass, "$!pos"
    lt $I11, 0, rx1128_fail2394
    repr_get_attr_int rx1128_pos, $P11, rx1128_curclass, "$!pos"
  alt1132_end2404:
    rx1128_cur."!cursor_pass"(rx1128_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1128_cur)
  rx1128_restart2393:
    repr_get_attr_obj rx1128_cstack, rx1128_cur, rx1128_curclass, "$!cstack"
  rx1128_fail2394:
    unless rx1128_bstack, rx1128_done2392
    pop $I19, rx1128_bstack
    if_null rx1128_cstack, rx1128_cstack_done2397
    unless rx1128_cstack, rx1128_cstack_done2397
    dec $I19
    set $P11, rx1128_cstack[$I19]
  rx1128_cstack_done2397:
    pop rx1128_rep, rx1128_bstack
    pop rx1128_pos, rx1128_bstack
    pop $I19, rx1128_bstack
    lt rx1128_pos, -1, rx1128_done2392
    lt rx1128_pos, 0, rx1128_fail2394
    eq $I19, 0, rx1128_fail2394
    nqp_islist $I20, rx1128_cstack
    unless $I20, rx1128_jump2395
    elements $I18, rx1128_bstack
    le $I18, 0, rx1128_cut2396
    dec $I18
    set $I18, rx1128_bstack[$I18]
  rx1128_cut2396:
    assign rx1128_cstack, $I18
  rx1128_jump2395:
    jump $I19
  rx1128_done2392:
    rx1128_cur."!cursor_fail"()
    .return (rx1128_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_130_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1152
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1136_start
    .local string rx1136_tgt
    .local int rx1136_pos
    .local int rx1136_off
    .local int rx1136_eos
    .local int rx1136_rep
    .local pmc rx1136_cur
    .local pmc rx1136_curclass
    .local pmc rx1136_bstack
    .local pmc rx1136_cstack
    rx1136_start = self."!cursor_start_all"()
    set rx1136_cur, rx1136_start[0]
    set rx1136_tgt, rx1136_start[1]
    set rx1136_pos, rx1136_start[2]
    set rx1136_curclass, rx1136_start[3]
    set rx1136_bstack, rx1136_start[4]
    set $I19, rx1136_start[5]
    store_lex unicode:"$\x{a2}", rx1136_cur
    length rx1136_eos, rx1136_tgt
    eq $I19, 1, rx1136_restart2413
    gt rx1136_pos, rx1136_eos, rx1136_fail2414
    repr_get_attr_int $I11, self, rx1136_curclass, "$!from"
    ne $I11, -1, rxscan1137_done2420
    goto rxscan1137_scan2419
  rxscan1137_loop2418:
    inc rx1136_pos
    gt rx1136_pos, rx1136_eos, rx1136_fail2414
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!from", rx1136_pos
  rxscan1137_scan2419:
    nqp_rxmark rx1136_bstack, rxscan1137_loop2418, rx1136_pos, 0
  rxscan1137_done2420:
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!pos", rx1136_pos
    store_lex unicode:"$\x{a2}", rx1136_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1136_bstack, rxcap1138_fail2422, rx1136_pos, 0
    add $I11, rx1136_pos, 5
    gt $I11, rx1136_eos, rx1136_fail2414
    substr $S10, rx1136_tgt, rx1136_pos, 5
    ne $S10, ucs4:"proto", rx1136_fail2414
    add rx1136_pos, 5
    nqp_rxpeek $I19, rx1136_bstack, rxcap1138_fail2422
    inc $I19
    set $I11, rx1136_bstack[$I19]
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!pos", rx1136_pos
    $P11 = rx1136_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1136_pos)
    rx1136_cstack = rx1136_cur."!cursor_capture"($P11, "sym")
    goto rxcap1138_done2421
  rxcap1138_fail2422:
    goto rx1136_fail2414
  rxcap1138_done2421:
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!pos", rx1136_pos
    $P11 = rx1136_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1136_curclass, "$!pos"
    lt $I11, 0, rx1136_fail2414
    repr_get_attr_int rx1136_pos, $P11, rx1136_curclass, "$!pos"
  alt1140_02425:
    nqp_rxmark rx1136_bstack, alt1140_12427, rx1136_pos, 0
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!pos", rx1136_pos
    $P11 = rx1136_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1136_curclass, "$!pos"
    lt $I11, 0, rx1136_fail2414
    nqp_rxmark rx1136_bstack, rxsubrule1141_pass2426, -1, 0
  rxsubrule1141_pass2426:
    rx1136_cstack = rx1136_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1136_pos, $P11, rx1136_curclass, "$!pos"
    goto alt1140_end2424
  alt1140_12427:
    nqp_rxmark rx1136_bstack, alt1140_22429, rx1136_pos, 0
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!pos", rx1136_pos
    $P11 = rx1136_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1136_curclass, "$!pos"
    lt $I11, 0, rx1136_fail2414
    nqp_rxmark rx1136_bstack, rxsubrule1142_pass2428, -1, 0
  rxsubrule1142_pass2428:
    rx1136_cstack = rx1136_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1136_pos, $P11, rx1136_curclass, "$!pos"
    goto alt1140_end2424
  alt1140_22429:
    repr_bind_attr_int rx1136_cur, rx1136_curclass, "$!pos", rx1136_pos
    $P11 = rx1136_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1136_curclass, "$!pos"
    lt $I11, 0, rx1136_fail2414
    repr_get_attr_int rx1136_pos, $P11, rx1136_curclass, "$!pos"
  alt1140_end2424:
    rx1136_cur."!cursor_pass"(rx1136_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1136_cur)
  rx1136_restart2413:
    repr_get_attr_obj rx1136_cstack, rx1136_cur, rx1136_curclass, "$!cstack"
  rx1136_fail2414:
    unless rx1136_bstack, rx1136_done2412
    pop $I19, rx1136_bstack
    if_null rx1136_cstack, rx1136_cstack_done2417
    unless rx1136_cstack, rx1136_cstack_done2417
    dec $I19
    set $P11, rx1136_cstack[$I19]
  rx1136_cstack_done2417:
    pop rx1136_rep, rx1136_bstack
    pop rx1136_pos, rx1136_bstack
    pop $I19, rx1136_bstack
    lt rx1136_pos, -1, rx1136_done2412
    lt rx1136_pos, 0, rx1136_fail2414
    eq $I19, 0, rx1136_fail2414
    nqp_islist $I20, rx1136_cstack
    unless $I20, rx1136_jump2415
    elements $I18, rx1136_bstack
    le $I18, 0, rx1136_cut2416
    dec $I18
    set $I18, rx1136_bstack[$I18]
  rx1136_cut2416:
    assign rx1136_cstack, $I18
  rx1136_jump2415:
    jump $I19
  rx1136_done2412:
    rx1136_cur."!cursor_fail"()
    .return (rx1136_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_131_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1157
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1144_start
    .local string rx1144_tgt
    .local int rx1144_pos
    .local int rx1144_off
    .local int rx1144_eos
    .local int rx1144_rep
    .local pmc rx1144_cur
    .local pmc rx1144_curclass
    .local pmc rx1144_bstack
    .local pmc rx1144_cstack
    rx1144_start = self."!cursor_start_all"()
    set rx1144_cur, rx1144_start[0]
    set rx1144_tgt, rx1144_start[1]
    set rx1144_pos, rx1144_start[2]
    set rx1144_curclass, rx1144_start[3]
    set rx1144_bstack, rx1144_start[4]
    set $I19, rx1144_start[5]
    store_lex unicode:"$\x{a2}", rx1144_cur
    length rx1144_eos, rx1144_tgt
    eq $I19, 1, rx1144_restart2433
    gt rx1144_pos, rx1144_eos, rx1144_fail2434
    repr_get_attr_int $I11, self, rx1144_curclass, "$!from"
    ne $I11, -1, rxscan1145_done2440
    goto rxscan1145_scan2439
  rxscan1145_loop2438:
    inc rx1144_pos
    gt rx1144_pos, rx1144_eos, rx1144_fail2434
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!from", rx1144_pos
  rxscan1145_scan2439:
    nqp_rxmark rx1144_bstack, rxscan1145_loop2438, rx1144_pos, 0
  rxscan1145_done2440:
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    store_lex unicode:"$\x{a2}", rx1144_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2434
    nqp_rxmark rx1144_bstack, rxsubrule1146_pass2441, -1, 0
  rxsubrule1146_pass2441:
    rx1144_cstack = rx1144_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    rx1144_cur."!cursor_pass"(rx1144_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1144_cur)
  rx1144_restart2433:
    repr_get_attr_obj rx1144_cstack, rx1144_cur, rx1144_curclass, "$!cstack"
  rx1144_fail2434:
    unless rx1144_bstack, rx1144_done2432
    pop $I19, rx1144_bstack
    if_null rx1144_cstack, rx1144_cstack_done2437
    unless rx1144_cstack, rx1144_cstack_done2437
    dec $I19
    set $P11, rx1144_cstack[$I19]
  rx1144_cstack_done2437:
    pop rx1144_rep, rx1144_bstack
    pop rx1144_pos, rx1144_bstack
    pop $I19, rx1144_bstack
    lt rx1144_pos, -1, rx1144_done2432
    lt rx1144_pos, 0, rx1144_fail2434
    eq $I19, 0, rx1144_fail2434
    nqp_islist $I20, rx1144_cstack
    unless $I20, rx1144_jump2435
    elements $I18, rx1144_bstack
    le $I18, 0, rx1144_cut2436
    dec $I18
    set $I18, rx1144_bstack[$I18]
  rx1144_cut2436:
    assign rx1144_cstack, $I18
  rx1144_jump2435:
    jump $I19
  rx1144_done2432:
    rx1144_cur."!cursor_fail"()
    .return (rx1144_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_132_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1162
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_415_1381944288.90674' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_133_1381944288.90674' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1147_start
    .local string rx1147_tgt
    .local int rx1147_pos
    .local int rx1147_off
    .local int rx1147_eos
    .local int rx1147_rep
    .local pmc rx1147_cur
    .local pmc rx1147_curclass
    .local pmc rx1147_bstack
    .local pmc rx1147_cstack
    rx1147_start = self."!cursor_start_all"()
    set rx1147_cur, rx1147_start[0]
    set rx1147_tgt, rx1147_start[1]
    set rx1147_pos, rx1147_start[2]
    set rx1147_curclass, rx1147_start[3]
    set rx1147_bstack, rx1147_start[4]
    set $I19, rx1147_start[5]
    store_lex unicode:"$\x{a2}", rx1147_cur
    length rx1147_eos, rx1147_tgt
    eq $I19, 1, rx1147_restart2444
    gt rx1147_pos, rx1147_eos, rx1147_fail2445
    repr_get_attr_int $I11, self, rx1147_curclass, "$!from"
    ne $I11, -1, rxscan1148_done2451
    goto rxscan1148_scan2450
  rxscan1148_loop2449:
    inc rx1147_pos
    gt rx1147_pos, rx1147_eos, rx1147_fail2445
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!from", rx1147_pos
  rxscan1148_scan2450:
    nqp_rxmark rx1147_bstack, rxscan1148_loop2449, rx1147_pos, 0
  rxscan1148_done2451:
    nqp_rxmark rx1147_bstack, rxquantr1149_done2453, rx1147_pos, 0
  rxquantr1149_loop2452:
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    store_lex unicode:"$\x{a2}", rx1147_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_415_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1147_fail2445
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    nqp_rxmark rx1147_bstack, rxsubrule1154_pass2460, -1, 0
  rxsubrule1154_pass2460:
    rx1147_cstack = rx1147_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    add $I11, rx1147_pos, 1
    gt $I11, rx1147_eos, rx1147_fail2445
    substr $S10, rx1147_tgt, rx1147_pos, 1
    ne $S10, ucs4:":", rx1147_fail2445
    add rx1147_pos, 1
    nqp_rxpeek $I19, rx1147_bstack, rxquantr1149_done2453
    inc $I19
    inc $I19
    set rx1147_rep, rx1147_bstack[$I19]
    nqp_rxcommit rx1147_bstack, rxquantr1149_done2453
    inc rx1147_rep
  rxquantr1149_done2453:
    nqp_rxmark rx1147_bstack, rxquantr1156_done2463, rx1147_pos, 0
  rxquantr1156_loop2462:
    nqp_rxmark rx1147_bstack, rxquantr1157_done2465, rx1147_pos, 0
  rxquantr1157_loop2464:
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    nqp_rxmark rx1147_bstack, rxsubrule1159_pass2467, -1, 0
  rxsubrule1159_pass2467:
    rx1147_cstack = rx1147_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1161_02470
    nqp_push_label $P11, alt1161_12471
    nqp_rxmark rx1147_bstack, alt1161_end2469, -1, 0
    rx1147_cur."!alt"(rx1147_pos, "alt_nfa__26_1381944292.09072", $P11)
    goto rx1147_fail2445
  alt1161_02470:
    add $I11, rx1147_pos, 1
    gt $I11, rx1147_eos, rx1147_fail2445
    substr $S10, rx1147_tgt, rx1147_pos, 1
    ne $S10, ucs4:",", rx1147_fail2445
    add rx1147_pos, 1
    goto alt1161_end2469
  alt1161_12471:
    .const 'Sub' $P5004 = 'cuid_133_1381944288.90674' 
    capture_lex $P5004
    repr_bind_attr_int rx1147_cur, rx1147_curclass, "$!pos", rx1147_pos
    $P11 = rx1147_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1147_curclass, "$!pos"
    lt $I11, 0, rx1147_fail2445
    nqp_rxmark rx1147_bstack, rxsubrule1166_pass2487, -1, 0
  rxsubrule1166_pass2487:
    rx1147_cstack = rx1147_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1147_pos, $P11, rx1147_curclass, "$!pos"
    goto alt1161_end2469
  alt1161_end2469:
    nqp_rxcommit rx1147_bstack, alt1161_end2469
    nqp_rxpeek $I19, rx1147_bstack, rxquantr1157_done2465
    inc $I19
    inc $I19
    set rx1147_rep, rx1147_bstack[$I19]
    nqp_rxcommit rx1147_bstack, rxquantr1157_done2465
    inc rx1147_rep
    nqp_rxmark rx1147_bstack, rxquantr1157_done2465, rx1147_pos, rx1147_rep
    goto rxquantr1157_loop2464
  rxquantr1157_done2465:
    nqp_rxpeek $I19, rx1147_bstack, rxquantr1156_done2463
    inc $I19
    inc $I19
    set rx1147_rep, rx1147_bstack[$I19]
    nqp_rxcommit rx1147_bstack, rxquantr1156_done2463
    inc rx1147_rep
  rxquantr1156_done2463:
    rx1147_cur."!cursor_pass"(rx1147_pos, "signature", 'backtrack'=>1)
    .return (rx1147_cur)
  rx1147_restart2444:
    repr_get_attr_obj rx1147_cstack, rx1147_cur, rx1147_curclass, "$!cstack"
  rx1147_fail2445:
    unless rx1147_bstack, rx1147_done2443
    pop $I19, rx1147_bstack
    if_null rx1147_cstack, rx1147_cstack_done2448
    unless rx1147_cstack, rx1147_cstack_done2448
    dec $I19
    set $P11, rx1147_cstack[$I19]
  rx1147_cstack_done2448:
    pop rx1147_rep, rx1147_bstack
    pop rx1147_pos, rx1147_bstack
    pop $I19, rx1147_bstack
    lt rx1147_pos, -1, rx1147_done2443
    lt rx1147_pos, 0, rx1147_fail2445
    eq $I19, 0, rx1147_fail2445
    nqp_islist $I20, rx1147_cstack
    unless $I20, rx1147_jump2446
    elements $I18, rx1147_bstack
    le $I18, 0, rx1147_cut2447
    dec $I18
    set $I18, rx1147_bstack[$I18]
  rx1147_cut2447:
    assign rx1147_cstack, $I18
  rx1147_jump2446:
    jump $I19
  rx1147_done2443:
    rx1147_cur."!cursor_fail"()
    .return (rx1147_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1381944288.90674") :anon :lex :outer("cuid_132_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1163
    .local pmc fb_tmp_166 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2454
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_166, $P5002
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1150_else2455 
    set $P5004, fb_tmp_166["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1150_end2456
  if1150_else2455:
    null $P5005
    set $P5006, $P5005
  if1150_end2456:
    unless_null $P5006, vivi_11512457
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_11512457:
    unless_null $P5006, vivi_11522458
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_11522458:
    set $P5001, $P5006
  fallback2454:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_133_1381944288.90674") :anon :lex :outer("cuid_132_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1162_start
    .local string rx1162_tgt
    .local int rx1162_pos
    .local int rx1162_off
    .local int rx1162_eos
    .local int rx1162_rep
    .local pmc rx1162_cur
    .local pmc rx1162_curclass
    .local pmc rx1162_bstack
    .local pmc rx1162_cstack
    rx1162_start = self."!cursor_start_all"()
    set rx1162_cur, rx1162_start[0]
    set rx1162_tgt, rx1162_start[1]
    set rx1162_pos, rx1162_start[2]
    set rx1162_curclass, rx1162_start[3]
    set rx1162_bstack, rx1162_start[4]
    set $I19, rx1162_start[5]
    store_lex unicode:"$\x{a2}", rx1162_cur
    length rx1162_eos, rx1162_tgt
    eq $I19, 1, rx1162_restart2474
    gt rx1162_pos, rx1162_eos, rx1162_fail2475
    repr_get_attr_int $I11, self, rx1162_curclass, "$!from"
    ne $I11, -1, rxscan1163_done2481
    goto rxscan1163_scan2480
  rxscan1163_loop2479:
    inc rx1162_pos
    gt rx1162_pos, rx1162_eos, rx1162_fail2475
    repr_bind_attr_int rx1162_cur, rx1162_curclass, "$!from", rx1162_pos
  rxscan1163_scan2480:
    nqp_rxmark rx1162_bstack, rxscan1163_loop2479, rx1162_pos, 0
  rxscan1163_done2481:
    nqp_rxmark rx1162_bstack, rxquantr1164_done2483, rx1162_pos, 0
  rxquantr1164_loop2482:
    ge rx1162_pos, rx1162_eos, rx1162_fail2475
    is_cclass $I11, .CCLASS_WHITESPACE, rx1162_tgt, rx1162_pos
    unless $I11, rx1162_fail2475
    add rx1162_pos, 1
    nqp_rxpeek $I19, rx1162_bstack, rxquantr1164_done2483
    inc $I19
    inc $I19
    set rx1162_rep, rx1162_bstack[$I19]
    nqp_rxcommit rx1162_bstack, rxquantr1164_done2483
    inc rx1162_rep
    nqp_rxmark rx1162_bstack, rxquantr1164_done2483, rx1162_pos, rx1162_rep
    goto rxquantr1164_loop2482
  rxquantr1164_done2483:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1165_02485
    nqp_push_label $P11, alt1165_12486
    nqp_rxmark rx1162_bstack, alt1165_end2484, -1, 0
    rx1162_cur."!alt"(rx1162_pos, "alt_nfa__25_1381944292.08371", $P11)
    goto rx1162_fail2475
  alt1165_02485:
    add $I11, rx1162_pos, 1
    gt $I11, rx1162_eos, rx1162_fail2475
    substr $S10, rx1162_tgt, rx1162_pos, 1
    ne $S10, ucs4:")", rx1162_fail2475
    add rx1162_pos, 1
    goto alt1165_end2484
  alt1165_12486:
    add $I11, rx1162_pos, 1
    gt $I11, rx1162_eos, rx1162_fail2475
    substr $S10, rx1162_tgt, rx1162_pos, 1
    ne $S10, ucs4:"{", rx1162_fail2475
    add rx1162_pos, 1
    goto alt1165_end2484
  alt1165_end2484:
    nqp_rxcommit rx1162_bstack, alt1165_end2484
    rx1162_cur."!cursor_pass"(rx1162_pos, 'backtrack'=>1)
    .return (rx1162_cur)
  rx1162_restart2474:
    repr_get_attr_obj rx1162_cstack, rx1162_cur, rx1162_curclass, "$!cstack"
  rx1162_fail2475:
    unless rx1162_bstack, rx1162_done2473
    pop $I19, rx1162_bstack
    if_null rx1162_cstack, rx1162_cstack_done2478
    unless rx1162_cstack, rx1162_cstack_done2478
    dec $I19
    set $P11, rx1162_cstack[$I19]
  rx1162_cstack_done2478:
    pop rx1162_rep, rx1162_bstack
    pop rx1162_pos, rx1162_bstack
    pop $I19, rx1162_bstack
    lt rx1162_pos, -1, rx1162_done2473
    lt rx1162_pos, 0, rx1162_fail2475
    eq $I19, 0, rx1162_fail2475
    nqp_islist $I20, rx1162_cstack
    unless $I20, rx1162_jump2476
    elements $I18, rx1162_bstack
    le $I18, 0, rx1162_cut2477
    dec $I18
    set $I18, rx1162_bstack[$I18]
  rx1162_cut2477:
    assign rx1162_cstack, $I18
  rx1162_jump2476:
    jump $I19
  rx1162_done2473:
    rx1162_cur."!cursor_fail"()
    .return (rx1162_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_134_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1167
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1167_start
    .local string rx1167_tgt
    .local int rx1167_pos
    .local int rx1167_off
    .local int rx1167_eos
    .local int rx1167_rep
    .local pmc rx1167_cur
    .local pmc rx1167_curclass
    .local pmc rx1167_bstack
    .local pmc rx1167_cstack
    rx1167_start = self."!cursor_start_all"()
    set rx1167_cur, rx1167_start[0]
    set rx1167_tgt, rx1167_start[1]
    set rx1167_pos, rx1167_start[2]
    set rx1167_curclass, rx1167_start[3]
    set rx1167_bstack, rx1167_start[4]
    set $I19, rx1167_start[5]
    store_lex unicode:"$\x{a2}", rx1167_cur
    length rx1167_eos, rx1167_tgt
    eq $I19, 1, rx1167_restart2490
    gt rx1167_pos, rx1167_eos, rx1167_fail2491
    repr_get_attr_int $I11, self, rx1167_curclass, "$!from"
    ne $I11, -1, rxscan1168_done2497
    goto rxscan1168_scan2496
  rxscan1168_loop2495:
    inc rx1167_pos
    gt rx1167_pos, rx1167_eos, rx1167_fail2491
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!from", rx1167_pos
  rxscan1168_scan2496:
    nqp_rxmark rx1167_bstack, rxscan1168_loop2495, rx1167_pos, 0
  rxscan1168_done2497:
    nqp_rxmark rx1167_bstack, rxquantr1169_done2499, rx1167_pos, 0
  rxquantr1169_loop2498:
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
    nqp_rxmark rx1167_bstack, rxsubrule1170_pass2500, -1, 0
  rxsubrule1170_pass2500:
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    nqp_rxmark rx1167_bstack, rxquantr1171_done2502, rx1167_pos, 0
  rxquantr1171_loop2501:
    add $I11, rx1167_pos, 1
    gt $I11, rx1167_eos, rx1167_fail2491
    substr $S10, rx1167_tgt, rx1167_pos, 1
    ne $S10, ucs4:":", rx1167_fail2491
    add rx1167_pos, 1
    nqp_rxmark rx1167_bstack, rxcap1172_fail2504, rx1167_pos, 0
    ge rx1167_pos, rx1167_eos, rx1167_fail2491
    substr $S11, rx1167_tgt, rx1167_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1167_fail2491
    inc rx1167_pos
    nqp_rxpeek $I19, rx1167_bstack, rxcap1172_fail2504
    inc $I19
    set $I11, rx1167_bstack[$I19]
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1167_pos)
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1172_done2503
  rxcap1172_fail2504:
    goto rx1167_fail2491
  rxcap1172_done2503:
    nqp_rxpeek $I19, rx1167_bstack, rxquantr1171_done2502
    inc $I19
    inc $I19
    set rx1167_rep, rx1167_bstack[$I19]
    nqp_rxcommit rx1167_bstack, rxquantr1171_done2502
    inc rx1167_rep
  rxquantr1171_done2502:
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    nqp_rxpeek $I19, rx1167_bstack, rxquantr1169_done2499
    inc $I19
    inc $I19
    set rx1167_rep, rx1167_bstack[$I19]
    nqp_rxcommit rx1167_bstack, rxquantr1169_done2499
    inc rx1167_rep
    nqp_rxmark rx1167_bstack, rxquantr1169_done2499, rx1167_pos, rx1167_rep
    goto rxquantr1169_loop2498
  rxquantr1169_done2499:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1174_02507
    nqp_push_label $P11, alt1174_12511
    nqp_rxmark rx1167_bstack, alt1174_end2506, -1, 0
    rx1167_cur."!alt"(rx1167_pos, "alt_nfa__29_1381944292.1239", $P11)
    goto rx1167_fail2491
  alt1174_02507:
    nqp_rxmark rx1167_bstack, rxcap1175_fail2509, rx1167_pos, 0
    add $I11, rx1167_pos, 1
    gt $I11, rx1167_eos, rx1167_fail2491
    substr $S10, rx1167_tgt, rx1167_pos, 1
    ne $S10, ucs4:"*", rx1167_fail2491
    add rx1167_pos, 1
    nqp_rxpeek $I19, rx1167_bstack, rxcap1175_fail2509
    inc $I19
    set $I11, rx1167_bstack[$I19]
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1167_pos)
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "quant")
    goto rxcap1175_done2508
  rxcap1175_fail2509:
    goto rx1167_fail2491
  rxcap1175_done2508:
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
    nqp_rxmark rx1167_bstack, rxsubrule1176_pass2510, -1, 0
  rxsubrule1176_pass2510:
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    goto alt1174_end2506
  alt1174_12511:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1177_02513
    nqp_push_label $P11, alt1177_12515
    nqp_rxmark rx1167_bstack, alt1177_end2512, -1, 0
    rx1167_cur."!alt"(rx1167_pos, "alt_nfa__27_1381944292.12325", $P11)
    goto rx1167_fail2491
  alt1177_02513:
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
    nqp_rxmark rx1167_bstack, rxsubrule1178_pass2514, -1, 0
  rxsubrule1178_pass2514:
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    goto alt1177_end2512
  alt1177_12515:
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
    nqp_rxmark rx1167_bstack, rxsubrule1179_pass2516, -1, 0
  rxsubrule1179_pass2516:
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    goto alt1177_end2512
  alt1177_end2512:
    nqp_rxcommit rx1167_bstack, alt1177_end2512
    nqp_rxmark rx1167_bstack, rxcap1180_fail2518, rx1167_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1181_02520
    nqp_push_label $P11, alt1181_12521
    nqp_push_label $P11, alt1181_22522
    nqp_rxmark rx1167_bstack, alt1181_end2519, -1, 0
    rx1167_cur."!alt"(rx1167_pos, "alt_nfa__28_1381944292.12355", $P11)
    goto rx1167_fail2491
  alt1181_02520:
    add $I11, rx1167_pos, 1
    gt $I11, rx1167_eos, rx1167_fail2491
    substr $S10, rx1167_tgt, rx1167_pos, 1
    ne $S10, ucs4:"?", rx1167_fail2491
    add rx1167_pos, 1
    goto alt1181_end2519
  alt1181_12521:
    add $I11, rx1167_pos, 1
    gt $I11, rx1167_eos, rx1167_fail2491
    substr $S10, rx1167_tgt, rx1167_pos, 1
    ne $S10, ucs4:"!", rx1167_fail2491
    add rx1167_pos, 1
    goto alt1181_end2519
  alt1181_22522:
    goto alt1181_end2519
  alt1181_end2519:
    nqp_rxcommit rx1167_bstack, alt1181_end2519
    nqp_rxpeek $I19, rx1167_bstack, rxcap1180_fail2518
    inc $I19
    set $I11, rx1167_bstack[$I19]
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1167_pos)
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "quant")
    goto rxcap1180_done2517
  rxcap1180_fail2518:
    goto rx1167_fail2491
  rxcap1180_done2517:
    goto alt1174_end2506
  alt1174_end2506:
    nqp_rxcommit rx1167_bstack, alt1174_end2506
    nqp_rxmark rx1167_bstack, rxquantr1183_done2525, rx1167_pos, 0
  rxquantr1183_loop2524:
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
    goto rxsubrule1184_pass2526
  rxsubrule1184_back2527:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2491
  rxsubrule1184_pass2526:
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1184_back2527
    push rx1167_bstack, $I11
    push rx1167_bstack, 0
    push rx1167_bstack, rx1167_pos
    elements $I11, rx1167_cstack
    push rx1167_bstack, $I11
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    nqp_rxpeek $I19, rx1167_bstack, rxquantr1183_done2525
    inc $I19
    inc $I19
    set rx1167_rep, rx1167_bstack[$I19]
    nqp_rxcommit rx1167_bstack, rxquantr1183_done2525
    inc rx1167_rep
  rxquantr1183_done2525:
    rx1167_cur."!cursor_pass"(rx1167_pos, "parameter", 'backtrack'=>1)
    .return (rx1167_cur)
  rx1167_restart2490:
    repr_get_attr_obj rx1167_cstack, rx1167_cur, rx1167_curclass, "$!cstack"
  rx1167_fail2491:
    unless rx1167_bstack, rx1167_done2489
    pop $I19, rx1167_bstack
    if_null rx1167_cstack, rx1167_cstack_done2494
    unless rx1167_cstack, rx1167_cstack_done2494
    dec $I19
    set $P11, rx1167_cstack[$I19]
  rx1167_cstack_done2494:
    pop rx1167_rep, rx1167_bstack
    pop rx1167_pos, rx1167_bstack
    pop $I19, rx1167_bstack
    lt rx1167_pos, -1, rx1167_done2489
    lt rx1167_pos, 0, rx1167_fail2491
    eq $I19, 0, rx1167_fail2491
    nqp_islist $I20, rx1167_cstack
    unless $I20, rx1167_jump2492
    elements $I18, rx1167_bstack
    le $I18, 0, rx1167_cut2493
    dec $I18
    set $I18, rx1167_bstack[$I18]
  rx1167_cut2493:
    assign rx1167_cstack, $I18
  rx1167_jump2492:
    jump $I19
  rx1167_done2489:
    rx1167_cur."!cursor_fail"()
    .return (rx1167_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_135_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1176
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1185_start
    .local string rx1185_tgt
    .local int rx1185_pos
    .local int rx1185_off
    .local int rx1185_eos
    .local int rx1185_rep
    .local pmc rx1185_cur
    .local pmc rx1185_curclass
    .local pmc rx1185_bstack
    .local pmc rx1185_cstack
    rx1185_start = self."!cursor_start_all"()
    set rx1185_cur, rx1185_start[0]
    set rx1185_tgt, rx1185_start[1]
    set rx1185_pos, rx1185_start[2]
    set rx1185_curclass, rx1185_start[3]
    set rx1185_bstack, rx1185_start[4]
    set $I19, rx1185_start[5]
    store_lex unicode:"$\x{a2}", rx1185_cur
    length rx1185_eos, rx1185_tgt
    eq $I19, 1, rx1185_restart2530
    gt rx1185_pos, rx1185_eos, rx1185_fail2531
    repr_get_attr_int $I11, self, rx1185_curclass, "$!from"
    ne $I11, -1, rxscan1186_done2537
    goto rxscan1186_scan2536
  rxscan1186_loop2535:
    inc rx1185_pos
    gt rx1185_pos, rx1185_eos, rx1185_fail2531
    repr_bind_attr_int rx1185_cur, rx1185_curclass, "$!from", rx1185_pos
  rxscan1186_scan2536:
    nqp_rxmark rx1185_bstack, rxscan1186_loop2535, rx1185_pos, 0
  rxscan1186_done2537:
    repr_bind_attr_int rx1185_cur, rx1185_curclass, "$!pos", rx1185_pos
    $P11 = rx1185_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1185_curclass, "$!pos"
    lt $I11, 0, rx1185_fail2531
    nqp_rxmark rx1185_bstack, rxsubrule1187_pass2538, -1, 0
  rxsubrule1187_pass2538:
    rx1185_cstack = rx1185_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1185_pos, $P11, rx1185_curclass, "$!pos"
    nqp_rxmark rx1185_bstack, rxquantr1188_done2540, rx1185_pos, 0
  rxquantr1188_loop2539:
    repr_bind_attr_int rx1185_cur, rx1185_curclass, "$!pos", rx1185_pos
    $P11 = rx1185_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1185_curclass, "$!pos"
    lt $I11, 0, rx1185_fail2531
    goto rxsubrule1189_pass2541
  rxsubrule1189_back2542:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1185_curclass, "$!pos"
    lt $I11, 0, rx1185_fail2531
  rxsubrule1189_pass2541:
    rx1185_cstack = rx1185_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1189_back2542
    push rx1185_bstack, $I11
    push rx1185_bstack, 0
    push rx1185_bstack, rx1185_pos
    elements $I11, rx1185_cstack
    push rx1185_bstack, $I11
    repr_get_attr_int rx1185_pos, $P11, rx1185_curclass, "$!pos"
    nqp_rxpeek $I19, rx1185_bstack, rxquantr1188_done2540
    inc $I19
    inc $I19
    set rx1185_rep, rx1185_bstack[$I19]
    nqp_rxcommit rx1185_bstack, rxquantr1188_done2540
    inc rx1185_rep
  rxquantr1188_done2540:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1190_02544
    nqp_push_label $P11, alt1190_12546
    nqp_rxmark rx1185_bstack, alt1190_end2543, -1, 0
    rx1185_cur."!alt"(rx1185_pos, "alt_nfa__30_1381944292.1366", $P11)
    goto rx1185_fail2531
  alt1190_02544:
    repr_bind_attr_int rx1185_cur, rx1185_curclass, "$!pos", rx1185_pos
    $P11 = rx1185_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1185_curclass, "$!pos"
    lt $I11, 0, rx1185_fail2531
    nqp_rxmark rx1185_bstack, rxsubrule1191_pass2545, -1, 0
  rxsubrule1191_pass2545:
    rx1185_cstack = rx1185_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1185_pos, $P11, rx1185_curclass, "$!pos"
    goto alt1190_end2543
  alt1190_12546:
    nqp_rxmark rx1185_bstack, rxcap1192_fail2548, rx1185_pos, 0
    ge rx1185_pos, rx1185_eos, rx1185_fail2531
    substr $S11, rx1185_tgt, rx1185_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1185_fail2531
    inc rx1185_pos
    nqp_rxpeek $I19, rx1185_bstack, rxcap1192_fail2548
    inc $I19
    set $I11, rx1185_bstack[$I19]
    repr_bind_attr_int rx1185_cur, rx1185_curclass, "$!pos", rx1185_pos
    $P11 = rx1185_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1185_pos)
    rx1185_cstack = rx1185_cur."!cursor_capture"($P11, "name")
    goto rxcap1192_done2547
  rxcap1192_fail2548:
    goto rx1185_fail2531
  rxcap1192_done2547:
    goto alt1190_end2543
  alt1190_end2543:
    nqp_rxcommit rx1185_bstack, alt1190_end2543
    rx1185_cur."!cursor_pass"(rx1185_pos, "param_var", 'backtrack'=>1)
    .return (rx1185_cur)
  rx1185_restart2530:
    repr_get_attr_obj rx1185_cstack, rx1185_cur, rx1185_curclass, "$!cstack"
  rx1185_fail2531:
    unless rx1185_bstack, rx1185_done2529
    pop $I19, rx1185_bstack
    if_null rx1185_cstack, rx1185_cstack_done2534
    unless rx1185_cstack, rx1185_cstack_done2534
    dec $I19
    set $P11, rx1185_cstack[$I19]
  rx1185_cstack_done2534:
    pop rx1185_rep, rx1185_bstack
    pop rx1185_pos, rx1185_bstack
    pop $I19, rx1185_bstack
    lt rx1185_pos, -1, rx1185_done2529
    lt rx1185_pos, 0, rx1185_fail2531
    eq $I19, 0, rx1185_fail2531
    nqp_islist $I20, rx1185_cstack
    unless $I20, rx1185_jump2532
    elements $I18, rx1185_bstack
    le $I18, 0, rx1185_cut2533
    dec $I18
    set $I18, rx1185_bstack[$I18]
  rx1185_cut2533:
    assign rx1185_cstack, $I18
  rx1185_jump2532:
    jump $I19
  rx1185_done2529:
    rx1185_cur."!cursor_fail"()
    .return (rx1185_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_136_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1181
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1193_start
    .local string rx1193_tgt
    .local int rx1193_pos
    .local int rx1193_off
    .local int rx1193_eos
    .local int rx1193_rep
    .local pmc rx1193_cur
    .local pmc rx1193_curclass
    .local pmc rx1193_bstack
    .local pmc rx1193_cstack
    rx1193_start = self."!cursor_start_all"()
    set rx1193_cur, rx1193_start[0]
    set rx1193_tgt, rx1193_start[1]
    set rx1193_pos, rx1193_start[2]
    set rx1193_curclass, rx1193_start[3]
    set rx1193_bstack, rx1193_start[4]
    set $I19, rx1193_start[5]
    store_lex unicode:"$\x{a2}", rx1193_cur
    length rx1193_eos, rx1193_tgt
    eq $I19, 1, rx1193_restart2551
    gt rx1193_pos, rx1193_eos, rx1193_fail2552
    repr_get_attr_int $I11, self, rx1193_curclass, "$!from"
    ne $I11, -1, rxscan1194_done2558
    goto rxscan1194_scan2557
  rxscan1194_loop2556:
    inc rx1193_pos
    gt rx1193_pos, rx1193_eos, rx1193_fail2552
    repr_bind_attr_int rx1193_cur, rx1193_curclass, "$!from", rx1193_pos
  rxscan1194_scan2557:
    nqp_rxmark rx1193_bstack, rxscan1194_loop2556, rx1193_pos, 0
  rxscan1194_done2558:
    add $I11, rx1193_pos, 1
    gt $I11, rx1193_eos, rx1193_fail2552
    substr $S10, rx1193_tgt, rx1193_pos, 1
    ne $S10, ucs4:":", rx1193_fail2552
    add rx1193_pos, 1
    repr_bind_attr_int rx1193_cur, rx1193_curclass, "$!pos", rx1193_pos
    $P11 = rx1193_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1193_curclass, "$!pos"
    lt $I11, 0, rx1193_fail2552
    nqp_rxmark rx1193_bstack, rxsubrule1195_pass2559, -1, 0
  rxsubrule1195_pass2559:
    rx1193_cstack = rx1193_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1193_pos, $P11, rx1193_curclass, "$!pos"
    rx1193_cur."!cursor_pass"(rx1193_pos, "named_param", 'backtrack'=>1)
    .return (rx1193_cur)
  rx1193_restart2551:
    repr_get_attr_obj rx1193_cstack, rx1193_cur, rx1193_curclass, "$!cstack"
  rx1193_fail2552:
    unless rx1193_bstack, rx1193_done2550
    pop $I19, rx1193_bstack
    if_null rx1193_cstack, rx1193_cstack_done2555
    unless rx1193_cstack, rx1193_cstack_done2555
    dec $I19
    set $P11, rx1193_cstack[$I19]
  rx1193_cstack_done2555:
    pop rx1193_rep, rx1193_bstack
    pop rx1193_pos, rx1193_bstack
    pop $I19, rx1193_bstack
    lt rx1193_pos, -1, rx1193_done2550
    lt rx1193_pos, 0, rx1193_fail2552
    eq $I19, 0, rx1193_fail2552
    nqp_islist $I20, rx1193_cstack
    unless $I20, rx1193_jump2553
    elements $I18, rx1193_bstack
    le $I18, 0, rx1193_cut2554
    dec $I18
    set $I18, rx1193_bstack[$I18]
  rx1193_cut2554:
    assign rx1193_cstack, $I18
  rx1193_jump2553:
    jump $I19
  rx1193_done2550:
    rx1193_cur."!cursor_fail"()
    .return (rx1193_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_137_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1185
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1196_start
    .local string rx1196_tgt
    .local int rx1196_pos
    .local int rx1196_off
    .local int rx1196_eos
    .local int rx1196_rep
    .local pmc rx1196_cur
    .local pmc rx1196_curclass
    .local pmc rx1196_bstack
    .local pmc rx1196_cstack
    rx1196_start = self."!cursor_start_all"()
    set rx1196_cur, rx1196_start[0]
    set rx1196_tgt, rx1196_start[1]
    set rx1196_pos, rx1196_start[2]
    set rx1196_curclass, rx1196_start[3]
    set rx1196_bstack, rx1196_start[4]
    set $I19, rx1196_start[5]
    store_lex unicode:"$\x{a2}", rx1196_cur
    length rx1196_eos, rx1196_tgt
    eq $I19, 1, rx1196_restart2562
    gt rx1196_pos, rx1196_eos, rx1196_fail2563
    repr_get_attr_int $I11, self, rx1196_curclass, "$!from"
    ne $I11, -1, rxscan1197_done2569
    goto rxscan1197_scan2568
  rxscan1197_loop2567:
    inc rx1196_pos
    gt rx1196_pos, rx1196_eos, rx1196_fail2563
    repr_bind_attr_int rx1196_cur, rx1196_curclass, "$!from", rx1196_pos
  rxscan1197_scan2568:
    nqp_rxmark rx1196_bstack, rxscan1197_loop2567, rx1196_pos, 0
  rxscan1197_done2569:
    repr_bind_attr_int rx1196_cur, rx1196_curclass, "$!pos", rx1196_pos
    $P11 = rx1196_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1196_curclass, "$!pos"
    lt $I11, 0, rx1196_fail2563
    repr_get_attr_int rx1196_pos, $P11, rx1196_curclass, "$!pos"
    add $I11, rx1196_pos, 1
    gt $I11, rx1196_eos, rx1196_fail2563
    substr $S10, rx1196_tgt, rx1196_pos, 1
    ne $S10, ucs4:"=", rx1196_fail2563
    add rx1196_pos, 1
    repr_bind_attr_int rx1196_cur, rx1196_curclass, "$!pos", rx1196_pos
    $P11 = rx1196_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1196_curclass, "$!pos"
    lt $I11, 0, rx1196_fail2563
    repr_get_attr_int rx1196_pos, $P11, rx1196_curclass, "$!pos"
    repr_bind_attr_int rx1196_cur, rx1196_curclass, "$!pos", rx1196_pos
    $P11 = rx1196_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1196_curclass, "$!pos"
    lt $I11, 0, rx1196_fail2563
    nqp_rxmark rx1196_bstack, rxsubrule1200_pass2572, -1, 0
  rxsubrule1200_pass2572:
    rx1196_cstack = rx1196_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1196_pos, $P11, rx1196_curclass, "$!pos"
    repr_bind_attr_int rx1196_cur, rx1196_curclass, "$!pos", rx1196_pos
    $P11 = rx1196_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1196_curclass, "$!pos"
    lt $I11, 0, rx1196_fail2563
    repr_get_attr_int rx1196_pos, $P11, rx1196_curclass, "$!pos"
    rx1196_cur."!cursor_pass"(rx1196_pos, "default_value", 'backtrack'=>1)
    .return (rx1196_cur)
  rx1196_restart2562:
    repr_get_attr_obj rx1196_cstack, rx1196_cur, rx1196_curclass, "$!cstack"
  rx1196_fail2563:
    unless rx1196_bstack, rx1196_done2561
    pop $I19, rx1196_bstack
    if_null rx1196_cstack, rx1196_cstack_done2566
    unless rx1196_cstack, rx1196_cstack_done2566
    dec $I19
    set $P11, rx1196_cstack[$I19]
  rx1196_cstack_done2566:
    pop rx1196_rep, rx1196_bstack
    pop rx1196_pos, rx1196_bstack
    pop $I19, rx1196_bstack
    lt rx1196_pos, -1, rx1196_done2561
    lt rx1196_pos, 0, rx1196_fail2563
    eq $I19, 0, rx1196_fail2563
    nqp_islist $I20, rx1196_cstack
    unless $I20, rx1196_jump2564
    elements $I18, rx1196_bstack
    le $I18, 0, rx1196_cut2565
    dec $I18
    set $I18, rx1196_bstack[$I18]
  rx1196_cut2565:
    assign rx1196_cstack, $I18
  rx1196_jump2564:
    jump $I19
  rx1196_done2561:
    rx1196_cur."!cursor_fail"()
    .return (rx1196_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_138_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1187
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1202_start
    .local string rx1202_tgt
    .local int rx1202_pos
    .local int rx1202_off
    .local int rx1202_eos
    .local int rx1202_rep
    .local pmc rx1202_cur
    .local pmc rx1202_curclass
    .local pmc rx1202_bstack
    .local pmc rx1202_cstack
    rx1202_start = self."!cursor_start_all"()
    set rx1202_cur, rx1202_start[0]
    set rx1202_tgt, rx1202_start[1]
    set rx1202_pos, rx1202_start[2]
    set rx1202_curclass, rx1202_start[3]
    set rx1202_bstack, rx1202_start[4]
    set $I19, rx1202_start[5]
    store_lex unicode:"$\x{a2}", rx1202_cur
    length rx1202_eos, rx1202_tgt
    eq $I19, 1, rx1202_restart2576
    gt rx1202_pos, rx1202_eos, rx1202_fail2577
    repr_get_attr_int $I11, self, rx1202_curclass, "$!from"
    ne $I11, -1, rxscan1203_done2583
    goto rxscan1203_scan2582
  rxscan1203_loop2581:
    inc rx1202_pos
    gt rx1202_pos, rx1202_eos, rx1202_fail2577
    repr_bind_attr_int rx1202_cur, rx1202_curclass, "$!from", rx1202_pos
  rxscan1203_scan2582:
    nqp_rxmark rx1202_bstack, rxscan1203_loop2581, rx1202_pos, 0
  rxscan1203_done2583:
    repr_bind_attr_int rx1202_cur, rx1202_curclass, "$!pos", rx1202_pos
    $P11 = rx1202_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1202_curclass, "$!pos"
    lt $I11, 0, rx1202_fail2577
    repr_get_attr_int rx1202_pos, $P11, rx1202_curclass, "$!pos"
    repr_bind_attr_int rx1202_cur, rx1202_curclass, "$!pos", rx1202_pos
    $P11 = rx1202_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1202_curclass, "$!pos"
    lt $I11, 0, rx1202_fail2577
    nqp_rxmark rx1202_bstack, rxsubrule1205_pass2585, -1, 0
  rxsubrule1205_pass2585:
    rx1202_cstack = rx1202_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1202_pos, $P11, rx1202_curclass, "$!pos"
    repr_bind_attr_int rx1202_cur, rx1202_curclass, "$!pos", rx1202_pos
    $P11 = rx1202_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1202_curclass, "$!pos"
    lt $I11, 0, rx1202_fail2577
    repr_get_attr_int rx1202_pos, $P11, rx1202_curclass, "$!pos"
    rx1202_cur."!cursor_pass"(rx1202_pos, "trait", 'backtrack'=>1)
    .return (rx1202_cur)
  rx1202_restart2576:
    repr_get_attr_obj rx1202_cstack, rx1202_cur, rx1202_curclass, "$!cstack"
  rx1202_fail2577:
    unless rx1202_bstack, rx1202_done2575
    pop $I19, rx1202_bstack
    if_null rx1202_cstack, rx1202_cstack_done2580
    unless rx1202_cstack, rx1202_cstack_done2580
    dec $I19
    set $P11, rx1202_cstack[$I19]
  rx1202_cstack_done2580:
    pop rx1202_rep, rx1202_bstack
    pop rx1202_pos, rx1202_bstack
    pop $I19, rx1202_bstack
    lt rx1202_pos, -1, rx1202_done2575
    lt rx1202_pos, 0, rx1202_fail2577
    eq $I19, 0, rx1202_fail2577
    nqp_islist $I20, rx1202_cstack
    unless $I20, rx1202_jump2578
    elements $I18, rx1202_bstack
    le $I18, 0, rx1202_cut2579
    dec $I18
    set $I18, rx1202_bstack[$I18]
  rx1202_cut2579:
    assign rx1202_cstack, $I18
  rx1202_jump2578:
    jump $I19
  rx1202_done2575:
    rx1202_cur."!cursor_fail"()
    .return (rx1202_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_139_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1189
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_140_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1190
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1207_start
    .local string rx1207_tgt
    .local int rx1207_pos
    .local int rx1207_off
    .local int rx1207_eos
    .local int rx1207_rep
    .local pmc rx1207_cur
    .local pmc rx1207_curclass
    .local pmc rx1207_bstack
    .local pmc rx1207_cstack
    rx1207_start = self."!cursor_start_all"()
    set rx1207_cur, rx1207_start[0]
    set rx1207_tgt, rx1207_start[1]
    set rx1207_pos, rx1207_start[2]
    set rx1207_curclass, rx1207_start[3]
    set rx1207_bstack, rx1207_start[4]
    set $I19, rx1207_start[5]
    store_lex unicode:"$\x{a2}", rx1207_cur
    length rx1207_eos, rx1207_tgt
    eq $I19, 1, rx1207_restart2589
    gt rx1207_pos, rx1207_eos, rx1207_fail2590
    repr_get_attr_int $I11, self, rx1207_curclass, "$!from"
    ne $I11, -1, rxscan1208_done2596
    goto rxscan1208_scan2595
  rxscan1208_loop2594:
    inc rx1207_pos
    gt rx1207_pos, rx1207_eos, rx1207_fail2590
    repr_bind_attr_int rx1207_cur, rx1207_curclass, "$!from", rx1207_pos
  rxscan1208_scan2595:
    nqp_rxmark rx1207_bstack, rxscan1208_loop2594, rx1207_pos, 0
  rxscan1208_done2596:
    nqp_rxmark rx1207_bstack, rxcap1209_fail2598, rx1207_pos, 0
    add $I11, rx1207_pos, 2
    gt $I11, rx1207_eos, rx1207_fail2590
    substr $S10, rx1207_tgt, rx1207_pos, 2
    ne $S10, ucs4:"is", rx1207_fail2590
    add rx1207_pos, 2
    nqp_rxpeek $I19, rx1207_bstack, rxcap1209_fail2598
    inc $I19
    set $I11, rx1207_bstack[$I19]
    repr_bind_attr_int rx1207_cur, rx1207_curclass, "$!pos", rx1207_pos
    $P11 = rx1207_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1207_pos)
    rx1207_cstack = rx1207_cur."!cursor_capture"($P11, "sym")
    goto rxcap1209_done2597
  rxcap1209_fail2598:
    goto rx1207_fail2590
  rxcap1209_done2597:
    repr_bind_attr_int rx1207_cur, rx1207_curclass, "$!pos", rx1207_pos
    $P11 = rx1207_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1207_curclass, "$!pos"
    lt $I11, 0, rx1207_fail2590
    repr_get_attr_int rx1207_pos, $P11, rx1207_curclass, "$!pos"
    repr_bind_attr_int rx1207_cur, rx1207_curclass, "$!pos", rx1207_pos
    $P11 = rx1207_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1207_curclass, "$!pos"
    lt $I11, 0, rx1207_fail2590
    nqp_rxmark rx1207_bstack, rxsubrule1211_pass2600, -1, 0
  rxsubrule1211_pass2600:
    rx1207_cstack = rx1207_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1207_pos, $P11, rx1207_curclass, "$!pos"
    nqp_rxmark rx1207_bstack, rxquantr1212_done2602, rx1207_pos, 0
  rxquantr1212_loop2601:
    repr_bind_attr_int rx1207_cur, rx1207_curclass, "$!pos", rx1207_pos
    $P11 = rx1207_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1207_curclass, "$!pos"
    lt $I11, 0, rx1207_fail2590
    goto rxsubrule1213_pass2603
  rxsubrule1213_back2604:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1207_curclass, "$!pos"
    lt $I11, 0, rx1207_fail2590
  rxsubrule1213_pass2603:
    rx1207_cstack = rx1207_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1213_back2604
    push rx1207_bstack, $I11
    push rx1207_bstack, 0
    push rx1207_bstack, rx1207_pos
    elements $I11, rx1207_cstack
    push rx1207_bstack, $I11
    repr_get_attr_int rx1207_pos, $P11, rx1207_curclass, "$!pos"
    nqp_rxpeek $I19, rx1207_bstack, rxquantr1212_done2602
    inc $I19
    inc $I19
    set rx1207_rep, rx1207_bstack[$I19]
    nqp_rxcommit rx1207_bstack, rxquantr1212_done2602
    inc rx1207_rep
  rxquantr1212_done2602:
    repr_bind_attr_int rx1207_cur, rx1207_curclass, "$!pos", rx1207_pos
    $P11 = rx1207_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1207_curclass, "$!pos"
    lt $I11, 0, rx1207_fail2590
    repr_get_attr_int rx1207_pos, $P11, rx1207_curclass, "$!pos"
    rx1207_cur."!cursor_pass"(rx1207_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1207_cur)
  rx1207_restart2589:
    repr_get_attr_obj rx1207_cstack, rx1207_cur, rx1207_curclass, "$!cstack"
  rx1207_fail2590:
    unless rx1207_bstack, rx1207_done2588
    pop $I19, rx1207_bstack
    if_null rx1207_cstack, rx1207_cstack_done2593
    unless rx1207_cstack, rx1207_cstack_done2593
    dec $I19
    set $P11, rx1207_cstack[$I19]
  rx1207_cstack_done2593:
    pop rx1207_rep, rx1207_bstack
    pop rx1207_pos, rx1207_bstack
    pop $I19, rx1207_bstack
    lt rx1207_pos, -1, rx1207_done2588
    lt rx1207_pos, 0, rx1207_fail2590
    eq $I19, 0, rx1207_fail2590
    nqp_islist $I20, rx1207_cstack
    unless $I20, rx1207_jump2591
    elements $I18, rx1207_bstack
    le $I18, 0, rx1207_cut2592
    dec $I18
    set $I18, rx1207_bstack[$I18]
  rx1207_cut2592:
    assign rx1207_cstack, $I18
  rx1207_jump2591:
    jump $I19
  rx1207_done2588:
    rx1207_cur."!cursor_fail"()
    .return (rx1207_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_141_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1192
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_416_1381944288.90674' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_167 
    .local pmc pkg_viv_tmp_26 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1215_start
    .local string rx1215_tgt
    .local int rx1215_pos
    .local int rx1215_off
    .local int rx1215_eos
    .local int rx1215_rep
    .local pmc rx1215_cur
    .local pmc rx1215_curclass
    .local pmc rx1215_bstack
    .local pmc rx1215_cstack
    rx1215_start = self."!cursor_start_all"()
    set rx1215_cur, rx1215_start[0]
    set rx1215_tgt, rx1215_start[1]
    set rx1215_pos, rx1215_start[2]
    set rx1215_curclass, rx1215_start[3]
    set rx1215_bstack, rx1215_start[4]
    set $I19, rx1215_start[5]
    store_lex unicode:"$\x{a2}", rx1215_cur
    length rx1215_eos, rx1215_tgt
    eq $I19, 1, rx1215_restart2608
    gt rx1215_pos, rx1215_eos, rx1215_fail2609
    repr_get_attr_int $I11, self, rx1215_curclass, "$!from"
    ne $I11, -1, rxscan1216_done2615
    goto rxscan1216_scan2614
  rxscan1216_loop2613:
    inc rx1215_pos
    gt rx1215_pos, rx1215_eos, rx1215_fail2609
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!from", rx1215_pos
  rxscan1216_scan2614:
    nqp_rxmark rx1215_bstack, rxscan1216_loop2613, rx1215_pos, 0
  rxscan1216_done2615:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1217_02617
    nqp_push_label $P11, alt1217_12657
    nqp_rxmark rx1215_bstack, alt1217_end2616, -1, 0
    rx1215_cur."!alt"(rx1215_pos, "alt_nfa__33_1381944292.37568", $P11)
    goto rx1215_fail2609
  alt1217_02617:
    nqp_rxmark rx1215_bstack, rxcap1218_fail2619, rx1215_pos, 0
    add $I11, rx1215_pos, 5
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 5
    ne $S10, ucs4:"proto", rx1215_fail2609
    add rx1215_pos, 5
    nqp_rxpeek $I19, rx1215_bstack, rxcap1218_fail2619
    inc $I19
    set $I11, rx1215_bstack[$I19]
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1215_pos)
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "proto")
    goto rxcap1218_done2618
  rxcap1218_fail2619:
    goto rx1215_fail2609
  rxcap1218_done2618:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1220_02622
    nqp_push_label $P11, alt1220_12623
    nqp_push_label $P11, alt1220_22624
    nqp_rxmark rx1215_bstack, alt1220_end2621, -1, 0
    rx1215_cur."!alt"(rx1215_pos, "alt_nfa__31_1381944292.3741", $P11)
    goto rx1215_fail2609
  alt1220_02622:
    add $I11, rx1215_pos, 5
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 5
    ne $S10, ucs4:"regex", rx1215_fail2609
    add rx1215_pos, 5
    goto alt1220_end2621
  alt1220_12623:
    add $I11, rx1215_pos, 5
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 5
    ne $S10, ucs4:"token", rx1215_fail2609
    add rx1215_pos, 5
    goto alt1220_end2621
  alt1220_22624:
    add $I11, rx1215_pos, 4
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 4
    ne $S10, ucs4:"rule", rx1215_fail2609
    add rx1215_pos, 4
    goto alt1220_end2621
  alt1220_end2621:
    nqp_rxcommit rx1215_bstack, alt1220_end2621
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
  alt1222_02627:
    nqp_rxmark rx1215_bstack, alt1222_12633, rx1215_pos, 0
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 3
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 3
    ne $S10, ucs4:"::(", rx1215_fail2609
    add rx1215_pos, 3
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    nqp_rxmark rx1215_bstack, rxsubrule1225_pass2630, -1, 0
  rxsubrule1225_pass2630:
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:")", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1222_end2626
  alt1222_12633:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    nqp_rxmark rx1215_bstack, rxsubrule1229_pass2635, -1, 0
  rxsubrule1229_pass2635:
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
  alt1222_end2626:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
  alt1232_02639:
    nqp_rxmark rx1215_bstack, alt1232_12642, rx1215_pos, 0
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 3
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 3
    ne $S10, ucs4:"{*}", rx1215_fail2609
    add rx1215_pos, 3
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1232_end2638
  alt1232_12642:
    nqp_rxmark rx1215_bstack, alt1232_22647, rx1215_pos, 0
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"{", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 5
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 5
    ne $S10, ucs4:"<...>", rx1215_fail2609
    add rx1215_pos, 5
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"}", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1232_end2638
  alt1232_22647:
    nqp_rxmark rx1215_bstack, alt1232_32652, rx1215_pos, 0
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"{", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 3
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 3
    ne $S10, ucs4:"<*>", rx1215_fail2609
    add rx1215_pos, 3
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"}", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1232_end2638
  alt1232_32652:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
  alt1232_end2638:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1217_end2616
  alt1217_12657:
    nqp_rxmark rx1215_bstack, rxcap1247_fail2659, rx1215_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1248_02661
    nqp_push_label $P11, alt1248_12662
    nqp_push_label $P11, alt1248_22663
    nqp_rxmark rx1215_bstack, alt1248_end2660, -1, 0
    rx1215_cur."!alt"(rx1215_pos, "alt_nfa__32_1381944292.37501", $P11)
    goto rx1215_fail2609
  alt1248_02661:
    add $I11, rx1215_pos, 5
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 5
    ne $S10, ucs4:"regex", rx1215_fail2609
    add rx1215_pos, 5
    goto alt1248_end2660
  alt1248_12662:
    add $I11, rx1215_pos, 5
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 5
    ne $S10, ucs4:"token", rx1215_fail2609
    add rx1215_pos, 5
    goto alt1248_end2660
  alt1248_22663:
    add $I11, rx1215_pos, 4
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 4
    ne $S10, ucs4:"rule", rx1215_fail2609
    add rx1215_pos, 4
    goto alt1248_end2660
  alt1248_end2660:
    nqp_rxcommit rx1215_bstack, alt1248_end2660
    nqp_rxpeek $I19, rx1215_bstack, rxcap1247_fail2659
    inc $I19
    set $I11, rx1215_bstack[$I19]
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1215_pos)
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "sym")
    goto rxcap1247_done2658
  rxcap1247_fail2659:
    goto rx1215_fail2609
  rxcap1247_done2658:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
  alt1250_02666:
    nqp_rxmark rx1215_bstack, alt1250_12672, rx1215_pos, 0
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 3
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 3
    ne $S10, ucs4:"::(", rx1215_fail2609
    add rx1215_pos, 3
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    nqp_rxmark rx1215_bstack, rxsubrule1253_pass2669, -1, 0
  rxsubrule1253_pass2669:
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:")", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1250_end2665
  alt1250_12672:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    nqp_rxmark rx1215_bstack, rxsubrule1257_pass2674, -1, 0
  rxsubrule1257_pass2674:
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
  alt1250_end2665:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    nqp_rxmark rx1215_bstack, rxquantr1262_done2680, rx1215_pos, 0
  rxquantr1262_loop2679:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"(", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    nqp_rxmark rx1215_bstack, rxsubrule1265_pass2683, -1, 0
  rxsubrule1265_pass2683:
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:")", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    nqp_rxpeek $I19, rx1215_bstack, rxquantr1262_done2680
    inc $I19
    inc $I19
    set rx1215_rep, rx1215_bstack[$I19]
    nqp_rxcommit rx1215_bstack, rxquantr1262_done2680
    inc rx1215_rep
  rxquantr1262_done2680:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    store_lex unicode:"$\x{a2}", rx1215_cur
    unless_null $P101, fallback2687
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_26, $P5002
    set fb_tmp_167, pkg_viv_tmp_26
    repr_defined $I5001, fb_tmp_167
    unless $I5001 goto if1269_else2688 
    set $P5004, fb_tmp_167["%RX"]
    set $P5006, $P5004
    goto if1269_end2689
  if1269_else2688:
    null $P5005
    set $P5006, $P5005
  if1269_end2689:
    unless_null $P5006, vivi_12702690
    new $P5007, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5007
    set $P5006, $P5007
  vivi_12702690:
    unless_null $P5006, vivi_12712691
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12712691:
    set $P101, $P5006
  fallback2687:
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    store_lex unicode:"$\x{a2}", rx1215_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_416_1381944288.90674' 
    capture_lex $P5010
    $P5011 = $P5010()
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"{", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    nqp_rxmark rx1215_bstack, rxsubrule1311_pass2760, -1, 0
  rxsubrule1311_pass2760:
    rx1215_cstack = rx1215_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    add $I11, rx1215_pos, 1
    gt $I11, rx1215_eos, rx1215_fail2609
    substr $S10, rx1215_tgt, rx1215_pos, 1
    ne $S10, ucs4:"}", rx1215_fail2609
    add rx1215_pos, 1
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_bind_attr_int rx1215_cur, rx1215_curclass, "$!pos", rx1215_pos
    $P11 = rx1215_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1215_curclass, "$!pos"
    lt $I11, 0, rx1215_fail2609
    repr_get_attr_int rx1215_pos, $P11, rx1215_curclass, "$!pos"
    goto alt1217_end2616
  alt1217_end2616:
    nqp_rxcommit rx1215_bstack, alt1217_end2616
    rx1215_cur."!cursor_pass"(rx1215_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1215_cur)
  rx1215_restart2608:
    repr_get_attr_obj rx1215_cstack, rx1215_cur, rx1215_curclass, "$!cstack"
  rx1215_fail2609:
    unless rx1215_bstack, rx1215_done2607
    pop $I19, rx1215_bstack
    if_null rx1215_cstack, rx1215_cstack_done2612
    unless rx1215_cstack, rx1215_cstack_done2612
    dec $I19
    set $P11, rx1215_cstack[$I19]
  rx1215_cstack_done2612:
    pop rx1215_rep, rx1215_bstack
    pop rx1215_pos, rx1215_bstack
    pop $I19, rx1215_bstack
    lt rx1215_pos, -1, rx1215_done2607
    lt rx1215_pos, 0, rx1215_fail2609
    eq $I19, 0, rx1215_fail2609
    nqp_islist $I20, rx1215_cstack
    unless $I20, rx1215_jump2610
    elements $I18, rx1215_bstack
    le $I18, 0, rx1215_cut2611
    dec $I18
    set $I18, rx1215_bstack[$I18]
  rx1215_cut2611:
    assign rx1215_cstack, $I18
  rx1215_jump2610:
    jump $I19
  rx1215_done2607:
    rx1215_cur."!cursor_fail"()
    .return (rx1215_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1381944288.90674") :anon :lex :outer("cuid_141_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1213
    .local pmc fb_tmp_168 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_169 
    .local pmc fb_tmp_170 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    .local pmc fb_tmp_173 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_177 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_178 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_31 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2693
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_27, $P5002
    set fb_tmp_168, pkg_viv_tmp_27
    repr_defined $I5001, fb_tmp_168
    unless $I5001 goto if1273_else2694 
    set $P5004, fb_tmp_168["%RX"]
    set $P5006, $P5004
    goto if1273_end2695
  if1273_else2694:
    null $P5005
    set $P5006, $P5005
  if1273_end2695:
    unless_null $P5006, vivi_12742696
    new $P5007, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5007
    set $P5006, $P5007
  vivi_12742696:
    unless_null $P5006, vivi_12752697
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12752697:
    set $P5001, $P5006
  fallback2693:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2700
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  fallback2700:
    set fb_tmp_169, $P5009
    repr_defined $I5003, fb_tmp_169
    unless $I5003 goto if1276_else2698 
    set $P5011, fb_tmp_169["sym"]
    set $P5013, $P5011
    goto if1276_end2699
  if1276_else2698:
    null $P5012
    set $P5013, $P5012
  if1276_end2699:
    unless_null $P5013, vivi_12772701
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_12772701:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2702
    nqp_get_sc_object $P5018, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_28, $P5017
    set fb_tmp_170, pkg_viv_tmp_28
    repr_defined $I5004, fb_tmp_170
    unless $I5004 goto if1278_else2703 
    set $P5019, fb_tmp_170["%RX"]
    set $P5021, $P5019
    goto if1278_end2704
  if1278_else2703:
    null $P5020
    set $P5021, $P5020
  if1278_end2704:
    unless_null $P5021, vivi_12792705
    new $P5022, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5022
    set $P5021, $P5022
  vivi_12792705:
    unless_null $P5021, vivi_12802706
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12802706:
    set $P5016, $P5021
  fallback2702:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2711
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  fallback2711:
    set fb_tmp_171, $P5024
    repr_defined $I5006, fb_tmp_171
    unless $I5006 goto if1282_else2709 
    set $P5026, fb_tmp_171["sym"]
    set $P5028, $P5026
    goto if1282_end2710
  if1282_else2709:
    null $P5027
    set $P5028, $P5027
  if1282_end2710:
    unless_null $P5028, vivi_12832712
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_12832712:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1281_end2708 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2715
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5030, $P5031
  fallback2715:
    set fb_tmp_172, $P5030
    repr_defined $I5008, fb_tmp_172
    unless $I5008 goto if1284_else2713 
    set $P5032, fb_tmp_172["sym"]
    set $P5034, $P5032
    goto if1284_end2714
  if1284_else2713:
    null $P5033
    set $P5034, $P5033
  if1284_end2714:
    unless_null $P5034, vivi_12852716
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  vivi_12852716:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1281_end2708:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2717
    nqp_get_sc_object $P5039, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_29, $P5038
    set fb_tmp_173, pkg_viv_tmp_29
    repr_defined $I5010, fb_tmp_173
    unless $I5010 goto if1286_else2718 
    set $P5040, fb_tmp_173["%RX"]
    set $P5042, $P5040
    goto if1286_end2719
  if1286_else2718:
    null $P5041
    set $P5042, $P5041
  if1286_end2719:
    unless_null $P5042, vivi_12872720
    new $P5043, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5043
    set $P5042, $P5043
  vivi_12872720:
    unless_null $P5042, vivi_12882721
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12882721:
    set $P5037, $P5042
  fallback2717:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2726
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  fallback2726:
    set fb_tmp_174, $P5045
    repr_defined $I5011, fb_tmp_174
    unless $I5011 goto if1290_else2724 
    set $P5047, fb_tmp_174["deflongname"]
    set $P5049, $P5047
    goto if1290_end2725
  if1290_else2724:
    null $P5048
    set $P5049, $P5048
  if1290_end2725:
    unless_null $P5049, vivi_12912727
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_12912727:
    unless $P5049 goto if1289_else2722 
.annotate 'line', 1216
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2730
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5051, $P5052
  fallback2730:
    set fb_tmp_175, $P5051
    repr_defined $I5012, fb_tmp_175
    unless $I5012 goto if1292_else2728 
    set $P5053, fb_tmp_175["deflongname"]
    set $P5055, $P5053
    goto if1292_end2729
  if1292_else2728:
    null $P5054
    set $P5055, $P5054
  if1292_end2729:
    unless_null $P5055, vivi_12932731
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5055, $P5056
  vivi_12932731:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1289_end2723
  if1289_else2722:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2734
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5058, $P5059
  fallback2734:
    set fb_tmp_176, $P5058
    repr_defined $I5013, fb_tmp_176
    unless $I5013 goto if1294_else2732 
    set $P5060, fb_tmp_176["latename"]
    set $P5062, $P5060
    goto if1294_end2733
  if1294_else2732:
    null $P5061
    set $P5062, $P5061
  if1294_end2733:
    unless_null $P5062, vivi_12952735
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5062, $P5063
  vivi_12952735:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1289_end2723:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2736
    nqp_get_sc_object $P5068, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_30, $P5067
    set fb_tmp_177, pkg_viv_tmp_30
    repr_defined $I5014, fb_tmp_177
    unless $I5014 goto if1296_else2737 
    set $P5069, fb_tmp_177["%RX"]
    set $P5071, $P5069
    goto if1296_end2738
  if1296_else2737:
    null $P5070
    set $P5071, $P5070
  if1296_end2738:
    unless_null $P5071, vivi_12972739
    new $P5072, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5072
    set $P5071, $P5072
  vivi_12972739:
    unless_null $P5071, vivi_12982740
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12982740:
    set $P5066, $P5071
  fallback2736:
.annotate 'line', 1217
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2741
    nqp_get_sc_object $P5076, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5075, $P5076
    set fb_tmp_178, $P5075
    repr_defined $I5015, fb_tmp_178
    unless $I5015 goto if1299_else2742 
    set $P5077, fb_tmp_178["$W"]
    set $P5079, $P5077
    goto if1299_end2743
  if1299_else2742:
    null $P5078
    set $P5079, $P5078
  if1299_end2743:
    unless_null $P5079, vivi_13002744
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5079, $P5080
  vivi_13002744:
    unless_null $P5079, vivi_13012745
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_13012745:
    set $P5074, $P5079
  fallback2741:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2746
    nqp_get_sc_object $P5084, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5083, $P5084
    set fb_tmp_179, $P5083
    repr_defined $I5016, fb_tmp_179
    unless $I5016 goto if1302_else2747 
    set $P5085, fb_tmp_179["$W"]
    set $P5087, $P5085
    goto if1302_end2748
  if1302_else2747:
    null $P5086
    set $P5087, $P5086
  if1302_end2748:
    unless_null $P5087, vivi_13032749
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5087, $P5088
  vivi_13032749:
    unless_null $P5087, vivi_13042750
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_13042750:
    set $P5082, $P5087
  fallback2746:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2753
    nqp_get_sc_object $P5093, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_31, $P5092
    set fb_tmp_181, pkg_viv_tmp_31
    repr_defined $I5018, fb_tmp_181
    unless $I5018 goto if1306_else2754 
    set $P5094, fb_tmp_181["%RX"]
    set $P5096, $P5094
    goto if1306_end2755
  if1306_else2754:
    null $P5095
    set $P5096, $P5095
  if1306_end2755:
    unless_null $P5096, vivi_13072756
    new $P5097, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5097
    set $P5096, $P5097
  vivi_13072756:
    unless_null $P5096, vivi_13082757
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_13082757:
    set $P5091, $P5096
  fallback2753:
    set fb_tmp_180, $P5091
    repr_defined $I5017, fb_tmp_180
    unless $I5017 goto if1305_else2751 
    set $P5099, fb_tmp_180["name"]
    set $P5101, $P5099
    goto if1305_end2752
  if1305_else2751:
    null $P5100
    set $P5101, $P5100
  if1305_end2752:
    unless_null $P5101, vivi_13092758
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5101, $P5102
  vivi_13092758:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_142_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1223
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1313_start
    .local string rx1313_tgt
    .local int rx1313_pos
    .local int rx1313_off
    .local int rx1313_eos
    .local int rx1313_rep
    .local pmc rx1313_cur
    .local pmc rx1313_curclass
    .local pmc rx1313_bstack
    .local pmc rx1313_cstack
    rx1313_start = self."!cursor_start_all"()
    set rx1313_cur, rx1313_start[0]
    set rx1313_tgt, rx1313_start[1]
    set rx1313_pos, rx1313_start[2]
    set rx1313_curclass, rx1313_start[3]
    set rx1313_bstack, rx1313_start[4]
    set $I19, rx1313_start[5]
    store_lex unicode:"$\x{a2}", rx1313_cur
    length rx1313_eos, rx1313_tgt
    eq $I19, 1, rx1313_restart2764
    gt rx1313_pos, rx1313_eos, rx1313_fail2765
    repr_get_attr_int $I11, self, rx1313_curclass, "$!from"
    ne $I11, -1, rxscan1314_done2771
    goto rxscan1314_scan2770
  rxscan1314_loop2769:
    inc rx1313_pos
    gt rx1313_pos, rx1313_eos, rx1313_fail2765
    repr_bind_attr_int rx1313_cur, rx1313_curclass, "$!from", rx1313_pos
  rxscan1314_scan2770:
    nqp_rxmark rx1313_bstack, rxscan1314_loop2769, rx1313_pos, 0
  rxscan1314_done2771:
    add $I11, rx1313_pos, 1
    gt $I11, rx1313_eos, rx1313_fail2765
    substr $S10, rx1313_tgt, rx1313_pos, 1
    ne $S10, ucs4:".", rx1313_fail2765
    add rx1313_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1315_02773
    nqp_push_label $P11, alt1315_12775
    nqp_rxmark rx1313_bstack, alt1315_end2772, -1, 0
    rx1313_cur."!alt"(rx1313_pos, "alt_nfa__34_1381944292.4037", $P11)
    goto rx1313_fail2765
  alt1315_02773:
    repr_bind_attr_int rx1313_cur, rx1313_curclass, "$!pos", rx1313_pos
    $P11 = rx1313_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1313_curclass, "$!pos"
    lt $I11, 0, rx1313_fail2765
    nqp_rxmark rx1313_bstack, rxsubrule1316_pass2774, -1, 0
  rxsubrule1316_pass2774:
    rx1313_cstack = rx1313_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1313_pos, $P11, rx1313_curclass, "$!pos"
    goto alt1315_end2772
  alt1315_12775:
    ge rx1313_pos, rx1313_eos, rx1313_fail2765
    substr $S11, rx1313_tgt, rx1313_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1313_fail2765
    repr_bind_attr_int rx1313_cur, rx1313_curclass, "$!pos", rx1313_pos
    $P11 = rx1313_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1313_curclass, "$!pos"
    lt $I11, 0, rx1313_fail2765
    nqp_rxmark rx1313_bstack, rxsubrule1317_pass2776, -1, 0
  rxsubrule1317_pass2776:
    rx1313_cstack = rx1313_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1313_pos, $P11, rx1313_curclass, "$!pos"
  alt1318_02778:
    nqp_rxmark rx1313_bstack, alt1318_12779, rx1313_pos, 0
    ge rx1313_pos, rx1313_eos, rx1313_fail2765
    substr $S11, rx1313_tgt, rx1313_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1313_fail2765
    goto alt1318_end2777
  alt1318_12779:
    repr_bind_attr_int rx1313_cur, rx1313_curclass, "$!pos", rx1313_pos
    $P11 = rx1313_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1313_curclass, "$!pos"
    lt $I11, 0, rx1313_fail2765
    repr_get_attr_int rx1313_pos, $P11, rx1313_curclass, "$!pos"
  alt1318_end2777:
    goto alt1315_end2772
  alt1315_end2772:
    nqp_rxcommit rx1313_bstack, alt1315_end2772
    nqp_rxmark rx1313_bstack, rxquantr1320_done2782, rx1313_pos, 0
  rxquantr1320_loop2781:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1321_02784
    nqp_push_label $P11, alt1321_12786
    nqp_rxmark rx1313_bstack, alt1321_end2783, -1, 0
    rx1313_cur."!alt"(rx1313_pos, "alt_nfa__35_1381944292.40404", $P11)
    goto rx1313_fail2765
  alt1321_02784:
    repr_bind_attr_int rx1313_cur, rx1313_curclass, "$!pos", rx1313_pos
    $P11 = rx1313_cur."args"()
    repr_get_attr_int $I11, $P11, rx1313_curclass, "$!pos"
    lt $I11, 0, rx1313_fail2765
    nqp_rxmark rx1313_bstack, rxsubrule1322_pass2785, -1, 0
  rxsubrule1322_pass2785:
    rx1313_cstack = rx1313_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1313_pos, $P11, rx1313_curclass, "$!pos"
    goto alt1321_end2783
  alt1321_12786:
    add $I11, rx1313_pos, 1
    gt $I11, rx1313_eos, rx1313_fail2765
    substr $S10, rx1313_tgt, rx1313_pos, 1
    ne $S10, ucs4:":", rx1313_fail2765
    add rx1313_pos, 1
    ge rx1313_pos, rx1313_eos, rx1313_fail2765
    is_cclass $I11, .CCLASS_WHITESPACE, rx1313_tgt, rx1313_pos
    unless $I11, rx1313_fail2765
    add rx1313_pos, 1
    repr_bind_attr_int rx1313_cur, rx1313_curclass, "$!pos", rx1313_pos
    $P11 = rx1313_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1313_curclass, "$!pos"
    lt $I11, 0, rx1313_fail2765
    nqp_rxmark rx1313_bstack, rxsubrule1323_pass2787, -1, 0
  rxsubrule1323_pass2787:
    rx1313_cstack = rx1313_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1313_pos, $P11, rx1313_curclass, "$!pos"
    goto alt1321_end2783
  alt1321_end2783:
    nqp_rxpeek $I19, rx1313_bstack, rxquantr1320_done2782
    inc $I19
    inc $I19
    set rx1313_rep, rx1313_bstack[$I19]
    nqp_rxcommit rx1313_bstack, rxquantr1320_done2782
    inc rx1313_rep
  rxquantr1320_done2782:
    rx1313_cur."!cursor_pass"(rx1313_pos, "dotty", 'backtrack'=>1)
    .return (rx1313_cur)
  rx1313_restart2764:
    repr_get_attr_obj rx1313_cstack, rx1313_cur, rx1313_curclass, "$!cstack"
  rx1313_fail2765:
    unless rx1313_bstack, rx1313_done2763
    pop $I19, rx1313_bstack
    if_null rx1313_cstack, rx1313_cstack_done2768
    unless rx1313_cstack, rx1313_cstack_done2768
    dec $I19
    set $P11, rx1313_cstack[$I19]
  rx1313_cstack_done2768:
    pop rx1313_rep, rx1313_bstack
    pop rx1313_pos, rx1313_bstack
    pop $I19, rx1313_bstack
    lt rx1313_pos, -1, rx1313_done2763
    lt rx1313_pos, 0, rx1313_fail2765
    eq $I19, 0, rx1313_fail2765
    nqp_islist $I20, rx1313_cstack
    unless $I20, rx1313_jump2766
    elements $I18, rx1313_bstack
    le $I18, 0, rx1313_cut2767
    dec $I18
    set $I18, rx1313_bstack[$I18]
  rx1313_cut2767:
    assign rx1313_cstack, $I18
  rx1313_jump2766:
    jump $I19
  rx1313_done2763:
    rx1313_cur."!cursor_fail"()
    .return (rx1313_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_143_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1236
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1324_start
    .local string rx1324_tgt
    .local int rx1324_pos
    .local int rx1324_off
    .local int rx1324_eos
    .local int rx1324_rep
    .local pmc rx1324_cur
    .local pmc rx1324_curclass
    .local pmc rx1324_bstack
    .local pmc rx1324_cstack
    rx1324_start = self."!cursor_start_all"()
    set rx1324_cur, rx1324_start[0]
    set rx1324_tgt, rx1324_start[1]
    set rx1324_pos, rx1324_start[2]
    set rx1324_curclass, rx1324_start[3]
    set rx1324_bstack, rx1324_start[4]
    set $I19, rx1324_start[5]
    store_lex unicode:"$\x{a2}", rx1324_cur
    length rx1324_eos, rx1324_tgt
    eq $I19, 1, rx1324_restart2790
    gt rx1324_pos, rx1324_eos, rx1324_fail2791
    repr_get_attr_int $I11, self, rx1324_curclass, "$!from"
    ne $I11, -1, rxscan1325_done2797
    goto rxscan1325_scan2796
  rxscan1325_loop2795:
    inc rx1324_pos
    gt rx1324_pos, rx1324_eos, rx1324_fail2791
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!from", rx1324_pos
  rxscan1325_scan2796:
    nqp_rxmark rx1324_bstack, rxscan1325_loop2795, rx1324_pos, 0
  rxscan1325_done2797:
    nqp_rxmark rx1324_bstack, rxcap1326_fail2799, rx1324_pos, 0
    add $I11, rx1324_pos, 4
    gt $I11, rx1324_eos, rx1324_fail2791
    substr $S10, rx1324_tgt, rx1324_pos, 4
    ne $S10, ucs4:"self", rx1324_fail2791
    add rx1324_pos, 4
    nqp_rxpeek $I19, rx1324_bstack, rxcap1326_fail2799
    inc $I19
    set $I11, rx1324_bstack[$I19]
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!pos", rx1324_pos
    $P11 = rx1324_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1324_pos)
    rx1324_cstack = rx1324_cur."!cursor_capture"($P11, "sym")
    goto rxcap1326_done2798
  rxcap1326_fail2799:
    goto rx1324_fail2791
  rxcap1326_done2798:
    le rx1324_pos, 0, rx1324_fail2791
    is_cclass $I11, .CCLASS_WORD, rx1324_tgt, rx1324_pos
    if $I11, rx1324_fail2791
    sub $I11, rx1324_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1324_tgt, $I11
    unless $I11, rx1324_fail2791
    rx1324_cur."!cursor_pass"(rx1324_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1324_cur)
  rx1324_restart2790:
    repr_get_attr_obj rx1324_cstack, rx1324_cur, rx1324_curclass, "$!cstack"
  rx1324_fail2791:
    unless rx1324_bstack, rx1324_done2789
    pop $I19, rx1324_bstack
    if_null rx1324_cstack, rx1324_cstack_done2794
    unless rx1324_cstack, rx1324_cstack_done2794
    dec $I19
    set $P11, rx1324_cstack[$I19]
  rx1324_cstack_done2794:
    pop rx1324_rep, rx1324_bstack
    pop rx1324_pos, rx1324_bstack
    pop $I19, rx1324_bstack
    lt rx1324_pos, -1, rx1324_done2789
    lt rx1324_pos, 0, rx1324_fail2791
    eq $I19, 0, rx1324_fail2791
    nqp_islist $I20, rx1324_cstack
    unless $I20, rx1324_jump2792
    elements $I18, rx1324_bstack
    le $I18, 0, rx1324_cut2793
    dec $I18
    set $I18, rx1324_bstack[$I18]
  rx1324_cut2793:
    assign rx1324_cstack, $I18
  rx1324_jump2792:
    jump $I19
  rx1324_done2789:
    rx1324_cur."!cursor_fail"()
    .return (rx1324_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_144_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1238
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1328_start
    .local string rx1328_tgt
    .local int rx1328_pos
    .local int rx1328_off
    .local int rx1328_eos
    .local int rx1328_rep
    .local pmc rx1328_cur
    .local pmc rx1328_curclass
    .local pmc rx1328_bstack
    .local pmc rx1328_cstack
    rx1328_start = self."!cursor_start_all"()
    set rx1328_cur, rx1328_start[0]
    set rx1328_tgt, rx1328_start[1]
    set rx1328_pos, rx1328_start[2]
    set rx1328_curclass, rx1328_start[3]
    set rx1328_bstack, rx1328_start[4]
    set $I19, rx1328_start[5]
    store_lex unicode:"$\x{a2}", rx1328_cur
    length rx1328_eos, rx1328_tgt
    eq $I19, 1, rx1328_restart2803
    gt rx1328_pos, rx1328_eos, rx1328_fail2804
    repr_get_attr_int $I11, self, rx1328_curclass, "$!from"
    ne $I11, -1, rxscan1329_done2810
    goto rxscan1329_scan2809
  rxscan1329_loop2808:
    inc rx1328_pos
    gt rx1328_pos, rx1328_eos, rx1328_fail2804
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!from", rx1328_pos
  rxscan1329_scan2809:
    nqp_rxmark rx1328_bstack, rxscan1329_loop2808, rx1328_pos, 0
  rxscan1329_done2810:
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!pos", rx1328_pos
    $P11 = rx1328_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1328_curclass, "$!pos"
    lt $I11, 0, rx1328_fail2804
    nqp_rxmark rx1328_bstack, rxsubrule1330_pass2811, -1, 0
  rxsubrule1330_pass2811:
    rx1328_cstack = rx1328_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1328_pos, $P11, rx1328_curclass, "$!pos"
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!pos", rx1328_pos
    $P11 = rx1328_cur."args"()
    repr_get_attr_int $I11, $P11, rx1328_curclass, "$!pos"
    lt $I11, 0, rx1328_fail2804
    nqp_rxmark rx1328_bstack, rxsubrule1331_pass2812, -1, 0
  rxsubrule1331_pass2812:
    rx1328_cstack = rx1328_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1328_pos, $P11, rx1328_curclass, "$!pos"
    rx1328_cur."!cursor_pass"(rx1328_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1328_cur)
  rx1328_restart2803:
    repr_get_attr_obj rx1328_cstack, rx1328_cur, rx1328_curclass, "$!cstack"
  rx1328_fail2804:
    unless rx1328_bstack, rx1328_done2802
    pop $I19, rx1328_bstack
    if_null rx1328_cstack, rx1328_cstack_done2807
    unless rx1328_cstack, rx1328_cstack_done2807
    dec $I19
    set $P11, rx1328_cstack[$I19]
  rx1328_cstack_done2807:
    pop rx1328_rep, rx1328_bstack
    pop rx1328_pos, rx1328_bstack
    pop $I19, rx1328_bstack
    lt rx1328_pos, -1, rx1328_done2802
    lt rx1328_pos, 0, rx1328_fail2804
    eq $I19, 0, rx1328_fail2804
    nqp_islist $I20, rx1328_cstack
    unless $I20, rx1328_jump2805
    elements $I18, rx1328_bstack
    le $I18, 0, rx1328_cut2806
    dec $I18
    set $I18, rx1328_bstack[$I18]
  rx1328_cut2806:
    assign rx1328_cstack, $I18
  rx1328_jump2805:
    jump $I19
  rx1328_done2802:
    rx1328_cur."!cursor_fail"()
    .return (rx1328_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_145_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1242
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1332_start
    .local string rx1332_tgt
    .local int rx1332_pos
    .local int rx1332_off
    .local int rx1332_eos
    .local int rx1332_rep
    .local pmc rx1332_cur
    .local pmc rx1332_curclass
    .local pmc rx1332_bstack
    .local pmc rx1332_cstack
    rx1332_start = self."!cursor_start_all"()
    set rx1332_cur, rx1332_start[0]
    set rx1332_tgt, rx1332_start[1]
    set rx1332_pos, rx1332_start[2]
    set rx1332_curclass, rx1332_start[3]
    set rx1332_bstack, rx1332_start[4]
    set $I19, rx1332_start[5]
    store_lex unicode:"$\x{a2}", rx1332_cur
    length rx1332_eos, rx1332_tgt
    eq $I19, 1, rx1332_restart2815
    gt rx1332_pos, rx1332_eos, rx1332_fail2816
    repr_get_attr_int $I11, self, rx1332_curclass, "$!from"
    ne $I11, -1, rxscan1333_done2822
    goto rxscan1333_scan2821
  rxscan1333_loop2820:
    inc rx1332_pos
    gt rx1332_pos, rx1332_eos, rx1332_fail2816
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!from", rx1332_pos
  rxscan1333_scan2821:
    nqp_rxmark rx1332_bstack, rxscan1333_loop2820, rx1332_pos, 0
  rxscan1333_done2822:
    add $I11, rx1332_pos, 5
    gt $I11, rx1332_eos, rx1332_fail2816
    substr $S10, rx1332_tgt, rx1332_pos, 5
    ne $S10, ucs4:"pir::", rx1332_fail2816
    add rx1332_pos, 5
    nqp_rxmark rx1332_bstack, rxcap1334_fail2824, rx1332_pos, 0
    nqp_rxmark rx1332_bstack, rxquantr1335_done2826, -1, 0
  rxquantr1335_loop2825:
    ge rx1332_pos, rx1332_eos, rx1332_fail2816
    is_cclass $I11, .CCLASS_WORD, rx1332_tgt, rx1332_pos
    unless $I11, rx1332_fail2816
    add rx1332_pos, 1
    nqp_rxpeek $I19, rx1332_bstack, rxquantr1335_done2826
    inc $I19
    inc $I19
    set rx1332_rep, rx1332_bstack[$I19]
    nqp_rxcommit rx1332_bstack, rxquantr1335_done2826
    inc rx1332_rep
    nqp_rxmark rx1332_bstack, rxquantr1335_done2826, rx1332_pos, rx1332_rep
    goto rxquantr1335_loop2825
  rxquantr1335_done2826:
    nqp_rxpeek $I19, rx1332_bstack, rxcap1334_fail2824
    inc $I19
    set $I11, rx1332_bstack[$I19]
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1332_pos)
    rx1332_cstack = rx1332_cur."!cursor_capture"($P11, "op")
    goto rxcap1334_done2823
  rxcap1334_fail2824:
    goto rx1332_fail2816
  rxcap1334_done2823:
    nqp_rxmark rx1332_bstack, rxquantr1336_done2828, rx1332_pos, 0
  rxquantr1336_loop2827:
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."args"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail2816
    goto rxsubrule1337_pass2829
  rxsubrule1337_back2830:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail2816
  rxsubrule1337_pass2829:
    rx1332_cstack = rx1332_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1337_back2830
    push rx1332_bstack, $I11
    push rx1332_bstack, 0
    push rx1332_bstack, rx1332_pos
    elements $I11, rx1332_cstack
    push rx1332_bstack, $I11
    repr_get_attr_int rx1332_pos, $P11, rx1332_curclass, "$!pos"
    nqp_rxpeek $I19, rx1332_bstack, rxquantr1336_done2828
    inc $I19
    inc $I19
    set rx1332_rep, rx1332_bstack[$I19]
    nqp_rxcommit rx1332_bstack, rxquantr1336_done2828
    inc rx1332_rep
  rxquantr1336_done2828:
    rx1332_cur."!cursor_pass"(rx1332_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1332_cur)
  rx1332_restart2815:
    repr_get_attr_obj rx1332_cstack, rx1332_cur, rx1332_curclass, "$!cstack"
  rx1332_fail2816:
    unless rx1332_bstack, rx1332_done2814
    pop $I19, rx1332_bstack
    if_null rx1332_cstack, rx1332_cstack_done2819
    unless rx1332_cstack, rx1332_cstack_done2819
    dec $I19
    set $P11, rx1332_cstack[$I19]
  rx1332_cstack_done2819:
    pop rx1332_rep, rx1332_bstack
    pop rx1332_pos, rx1332_bstack
    pop $I19, rx1332_bstack
    lt rx1332_pos, -1, rx1332_done2814
    lt rx1332_pos, 0, rx1332_fail2816
    eq $I19, 0, rx1332_fail2816
    nqp_islist $I20, rx1332_cstack
    unless $I20, rx1332_jump2817
    elements $I18, rx1332_bstack
    le $I18, 0, rx1332_cut2818
    dec $I18
    set $I18, rx1332_bstack[$I18]
  rx1332_cut2818:
    assign rx1332_cstack, $I18
  rx1332_jump2817:
    jump $I19
  rx1332_done2814:
    rx1332_cur."!cursor_fail"()
    .return (rx1332_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_146_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1246
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1338_start
    .local string rx1338_tgt
    .local int rx1338_pos
    .local int rx1338_off
    .local int rx1338_eos
    .local int rx1338_rep
    .local pmc rx1338_cur
    .local pmc rx1338_curclass
    .local pmc rx1338_bstack
    .local pmc rx1338_cstack
    rx1338_start = self."!cursor_start_all"()
    set rx1338_cur, rx1338_start[0]
    set rx1338_tgt, rx1338_start[1]
    set rx1338_pos, rx1338_start[2]
    set rx1338_curclass, rx1338_start[3]
    set rx1338_bstack, rx1338_start[4]
    set $I19, rx1338_start[5]
    store_lex unicode:"$\x{a2}", rx1338_cur
    length rx1338_eos, rx1338_tgt
    eq $I19, 1, rx1338_restart2833
    gt rx1338_pos, rx1338_eos, rx1338_fail2834
    repr_get_attr_int $I11, self, rx1338_curclass, "$!from"
    ne $I11, -1, rxscan1339_done2840
    goto rxscan1339_scan2839
  rxscan1339_loop2838:
    inc rx1338_pos
    gt rx1338_pos, rx1338_eos, rx1338_fail2834
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!from", rx1338_pos
  rxscan1339_scan2839:
    nqp_rxmark rx1338_bstack, rxscan1339_loop2838, rx1338_pos, 0
  rxscan1339_done2840:
    add $I11, rx1338_pos, 12
    gt $I11, rx1338_eos, rx1338_fail2834
    substr $S10, rx1338_tgt, rx1338_pos, 12
    ne $S10, ucs4:"pir::const::", rx1338_fail2834
    add rx1338_pos, 12
    nqp_rxmark rx1338_bstack, rxcap1340_fail2842, rx1338_pos, 0
    nqp_rxmark rx1338_bstack, rxquantr1341_done2844, -1, 0
  rxquantr1341_loop2843:
    ge rx1338_pos, rx1338_eos, rx1338_fail2834
    is_cclass $I11, .CCLASS_WORD, rx1338_tgt, rx1338_pos
    unless $I11, rx1338_fail2834
    add rx1338_pos, 1
    nqp_rxpeek $I19, rx1338_bstack, rxquantr1341_done2844
    inc $I19
    inc $I19
    set rx1338_rep, rx1338_bstack[$I19]
    nqp_rxcommit rx1338_bstack, rxquantr1341_done2844
    inc rx1338_rep
    nqp_rxmark rx1338_bstack, rxquantr1341_done2844, rx1338_pos, rx1338_rep
    goto rxquantr1341_loop2843
  rxquantr1341_done2844:
    nqp_rxpeek $I19, rx1338_bstack, rxcap1340_fail2842
    inc $I19
    set $I11, rx1338_bstack[$I19]
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1338_pos)
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "const")
    goto rxcap1340_done2841
  rxcap1340_fail2842:
    goto rx1338_fail2834
  rxcap1340_done2841:
    rx1338_cur."!cursor_pass"(rx1338_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1338_cur)
  rx1338_restart2833:
    repr_get_attr_obj rx1338_cstack, rx1338_cur, rx1338_curclass, "$!cstack"
  rx1338_fail2834:
    unless rx1338_bstack, rx1338_done2832
    pop $I19, rx1338_bstack
    if_null rx1338_cstack, rx1338_cstack_done2837
    unless rx1338_cstack, rx1338_cstack_done2837
    dec $I19
    set $P11, rx1338_cstack[$I19]
  rx1338_cstack_done2837:
    pop rx1338_rep, rx1338_bstack
    pop rx1338_pos, rx1338_bstack
    pop $I19, rx1338_bstack
    lt rx1338_pos, -1, rx1338_done2832
    lt rx1338_pos, 0, rx1338_fail2834
    eq $I19, 0, rx1338_fail2834
    nqp_islist $I20, rx1338_cstack
    unless $I20, rx1338_jump2835
    elements $I18, rx1338_bstack
    le $I18, 0, rx1338_cut2836
    dec $I18
    set $I18, rx1338_bstack[$I18]
  rx1338_cut2836:
    assign rx1338_cstack, $I18
  rx1338_jump2835:
    jump $I19
  rx1338_done2832:
    rx1338_cur."!cursor_fail"()
    .return (rx1338_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_147_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1250
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1342_start
    .local string rx1342_tgt
    .local int rx1342_pos
    .local int rx1342_off
    .local int rx1342_eos
    .local int rx1342_rep
    .local pmc rx1342_cur
    .local pmc rx1342_curclass
    .local pmc rx1342_bstack
    .local pmc rx1342_cstack
    rx1342_start = self."!cursor_start_all"()
    set rx1342_cur, rx1342_start[0]
    set rx1342_tgt, rx1342_start[1]
    set rx1342_pos, rx1342_start[2]
    set rx1342_curclass, rx1342_start[3]
    set rx1342_bstack, rx1342_start[4]
    set $I19, rx1342_start[5]
    store_lex unicode:"$\x{a2}", rx1342_cur
    length rx1342_eos, rx1342_tgt
    eq $I19, 1, rx1342_restart2847
    gt rx1342_pos, rx1342_eos, rx1342_fail2848
    repr_get_attr_int $I11, self, rx1342_curclass, "$!from"
    ne $I11, -1, rxscan1343_done2854
    goto rxscan1343_scan2853
  rxscan1343_loop2852:
    inc rx1342_pos
    gt rx1342_pos, rx1342_eos, rx1342_fail2848
    repr_bind_attr_int rx1342_cur, rx1342_curclass, "$!from", rx1342_pos
  rxscan1343_scan2853:
    nqp_rxmark rx1342_bstack, rxscan1343_loop2852, rx1342_pos, 0
  rxscan1343_done2854:
    add $I11, rx1342_pos, 5
    gt $I11, rx1342_eos, rx1342_fail2848
    substr $S10, rx1342_tgt, rx1342_pos, 5
    ne $S10, ucs4:"nqp::", rx1342_fail2848
    add rx1342_pos, 5
    nqp_rxmark rx1342_bstack, rxcap1344_fail2856, rx1342_pos, 0
    nqp_rxmark rx1342_bstack, rxquantr1345_done2858, -1, 0
  rxquantr1345_loop2857:
    ge rx1342_pos, rx1342_eos, rx1342_fail2848
    is_cclass $I11, .CCLASS_WORD, rx1342_tgt, rx1342_pos
    unless $I11, rx1342_fail2848
    add rx1342_pos, 1
    nqp_rxpeek $I19, rx1342_bstack, rxquantr1345_done2858
    inc $I19
    inc $I19
    set rx1342_rep, rx1342_bstack[$I19]
    nqp_rxcommit rx1342_bstack, rxquantr1345_done2858
    inc rx1342_rep
    nqp_rxmark rx1342_bstack, rxquantr1345_done2858, rx1342_pos, rx1342_rep
    goto rxquantr1345_loop2857
  rxquantr1345_done2858:
    nqp_rxpeek $I19, rx1342_bstack, rxcap1344_fail2856
    inc $I19
    set $I11, rx1342_bstack[$I19]
    repr_bind_attr_int rx1342_cur, rx1342_curclass, "$!pos", rx1342_pos
    $P11 = rx1342_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1342_pos)
    rx1342_cstack = rx1342_cur."!cursor_capture"($P11, "op")
    goto rxcap1344_done2855
  rxcap1344_fail2856:
    goto rx1342_fail2848
  rxcap1344_done2855:
    nqp_rxmark rx1342_bstack, rxquantr1346_done2860, rx1342_pos, 0
  rxquantr1346_loop2859:
    repr_bind_attr_int rx1342_cur, rx1342_curclass, "$!pos", rx1342_pos
    $P11 = rx1342_cur."args"()
    repr_get_attr_int $I11, $P11, rx1342_curclass, "$!pos"
    lt $I11, 0, rx1342_fail2848
    goto rxsubrule1347_pass2861
  rxsubrule1347_back2862:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1342_curclass, "$!pos"
    lt $I11, 0, rx1342_fail2848
  rxsubrule1347_pass2861:
    rx1342_cstack = rx1342_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1347_back2862
    push rx1342_bstack, $I11
    push rx1342_bstack, 0
    push rx1342_bstack, rx1342_pos
    elements $I11, rx1342_cstack
    push rx1342_bstack, $I11
    repr_get_attr_int rx1342_pos, $P11, rx1342_curclass, "$!pos"
    nqp_rxpeek $I19, rx1342_bstack, rxquantr1346_done2860
    inc $I19
    inc $I19
    set rx1342_rep, rx1342_bstack[$I19]
    nqp_rxcommit rx1342_bstack, rxquantr1346_done2860
    inc rx1342_rep
  rxquantr1346_done2860:
    rx1342_cur."!cursor_pass"(rx1342_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1342_cur)
  rx1342_restart2847:
    repr_get_attr_obj rx1342_cstack, rx1342_cur, rx1342_curclass, "$!cstack"
  rx1342_fail2848:
    unless rx1342_bstack, rx1342_done2846
    pop $I19, rx1342_bstack
    if_null rx1342_cstack, rx1342_cstack_done2851
    unless rx1342_cstack, rx1342_cstack_done2851
    dec $I19
    set $P11, rx1342_cstack[$I19]
  rx1342_cstack_done2851:
    pop rx1342_rep, rx1342_bstack
    pop rx1342_pos, rx1342_bstack
    pop $I19, rx1342_bstack
    lt rx1342_pos, -1, rx1342_done2846
    lt rx1342_pos, 0, rx1342_fail2848
    eq $I19, 0, rx1342_fail2848
    nqp_islist $I20, rx1342_cstack
    unless $I20, rx1342_jump2849
    elements $I18, rx1342_bstack
    le $I18, 0, rx1342_cut2850
    dec $I18
    set $I18, rx1342_bstack[$I18]
  rx1342_cut2850:
    assign rx1342_cstack, $I18
  rx1342_jump2849:
    jump $I19
  rx1342_done2846:
    rx1342_cur."!cursor_fail"()
    .return (rx1342_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_148_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1254
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1348_start
    .local string rx1348_tgt
    .local int rx1348_pos
    .local int rx1348_off
    .local int rx1348_eos
    .local int rx1348_rep
    .local pmc rx1348_cur
    .local pmc rx1348_curclass
    .local pmc rx1348_bstack
    .local pmc rx1348_cstack
    rx1348_start = self."!cursor_start_all"()
    set rx1348_cur, rx1348_start[0]
    set rx1348_tgt, rx1348_start[1]
    set rx1348_pos, rx1348_start[2]
    set rx1348_curclass, rx1348_start[3]
    set rx1348_bstack, rx1348_start[4]
    set $I19, rx1348_start[5]
    store_lex unicode:"$\x{a2}", rx1348_cur
    length rx1348_eos, rx1348_tgt
    eq $I19, 1, rx1348_restart2865
    gt rx1348_pos, rx1348_eos, rx1348_fail2866
    repr_get_attr_int $I11, self, rx1348_curclass, "$!from"
    ne $I11, -1, rxscan1349_done2872
    goto rxscan1349_scan2871
  rxscan1349_loop2870:
    inc rx1348_pos
    gt rx1348_pos, rx1348_eos, rx1348_fail2866
    repr_bind_attr_int rx1348_cur, rx1348_curclass, "$!from", rx1348_pos
  rxscan1349_scan2871:
    nqp_rxmark rx1348_bstack, rxscan1349_loop2870, rx1348_pos, 0
  rxscan1349_done2872:
    add $I11, rx1348_pos, 12
    gt $I11, rx1348_eos, rx1348_fail2866
    substr $S10, rx1348_tgt, rx1348_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1348_fail2866
    add rx1348_pos, 12
    nqp_rxmark rx1348_bstack, rxcap1350_fail2874, rx1348_pos, 0
    nqp_rxmark rx1348_bstack, rxquantr1351_done2876, -1, 0
  rxquantr1351_loop2875:
    ge rx1348_pos, rx1348_eos, rx1348_fail2866
    is_cclass $I11, .CCLASS_WORD, rx1348_tgt, rx1348_pos
    unless $I11, rx1348_fail2866
    add rx1348_pos, 1
    nqp_rxpeek $I19, rx1348_bstack, rxquantr1351_done2876
    inc $I19
    inc $I19
    set rx1348_rep, rx1348_bstack[$I19]
    nqp_rxcommit rx1348_bstack, rxquantr1351_done2876
    inc rx1348_rep
    nqp_rxmark rx1348_bstack, rxquantr1351_done2876, rx1348_pos, rx1348_rep
    goto rxquantr1351_loop2875
  rxquantr1351_done2876:
    nqp_rxpeek $I19, rx1348_bstack, rxcap1350_fail2874
    inc $I19
    set $I11, rx1348_bstack[$I19]
    repr_bind_attr_int rx1348_cur, rx1348_curclass, "$!pos", rx1348_pos
    $P11 = rx1348_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1348_pos)
    rx1348_cstack = rx1348_cur."!cursor_capture"($P11, "const")
    goto rxcap1350_done2873
  rxcap1350_fail2874:
    goto rx1348_fail2866
  rxcap1350_done2873:
    rx1348_cur."!cursor_pass"(rx1348_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1348_cur)
  rx1348_restart2865:
    repr_get_attr_obj rx1348_cstack, rx1348_cur, rx1348_curclass, "$!cstack"
  rx1348_fail2866:
    unless rx1348_bstack, rx1348_done2864
    pop $I19, rx1348_bstack
    if_null rx1348_cstack, rx1348_cstack_done2869
    unless rx1348_cstack, rx1348_cstack_done2869
    dec $I19
    set $P11, rx1348_cstack[$I19]
  rx1348_cstack_done2869:
    pop rx1348_rep, rx1348_bstack
    pop rx1348_pos, rx1348_bstack
    pop $I19, rx1348_bstack
    lt rx1348_pos, -1, rx1348_done2864
    lt rx1348_pos, 0, rx1348_fail2866
    eq $I19, 0, rx1348_fail2866
    nqp_islist $I20, rx1348_cstack
    unless $I20, rx1348_jump2867
    elements $I18, rx1348_bstack
    le $I18, 0, rx1348_cut2868
    dec $I18
    set $I18, rx1348_bstack[$I18]
  rx1348_cut2868:
    assign rx1348_cstack, $I18
  rx1348_jump2867:
    jump $I19
  rx1348_done2864:
    rx1348_cur."!cursor_fail"()
    .return (rx1348_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_149_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1258
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_417_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1352_start
    .local string rx1352_tgt
    .local int rx1352_pos
    .local int rx1352_off
    .local int rx1352_eos
    .local int rx1352_rep
    .local pmc rx1352_cur
    .local pmc rx1352_curclass
    .local pmc rx1352_bstack
    .local pmc rx1352_cstack
    rx1352_start = self."!cursor_start_all"()
    set rx1352_cur, rx1352_start[0]
    set rx1352_tgt, rx1352_start[1]
    set rx1352_pos, rx1352_start[2]
    set rx1352_curclass, rx1352_start[3]
    set rx1352_bstack, rx1352_start[4]
    set $I19, rx1352_start[5]
    store_lex unicode:"$\x{a2}", rx1352_cur
    length rx1352_eos, rx1352_tgt
    eq $I19, 1, rx1352_restart2879
    gt rx1352_pos, rx1352_eos, rx1352_fail2880
    repr_get_attr_int $I11, self, rx1352_curclass, "$!from"
    ne $I11, -1, rxscan1353_done2886
    goto rxscan1353_scan2885
  rxscan1353_loop2884:
    inc rx1352_pos
    gt rx1352_pos, rx1352_eos, rx1352_fail2880
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!from", rx1352_pos
  rxscan1353_scan2885:
    nqp_rxmark rx1352_bstack, rxscan1353_loop2884, rx1352_pos, 0
  rxscan1353_done2886:
    add $I11, rx1352_pos, 3
    gt $I11, rx1352_eos, rx1352_fail2880
    substr $S10, rx1352_tgt, rx1352_pos, 3
    ne $S10, ucs4:"{*}", rx1352_fail2880
    add rx1352_pos, 3
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!pos", rx1352_pos
    $P11 = rx1352_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1352_curclass, "$!pos"
    lt $I11, 0, rx1352_fail2880
  alt1354_02888:
    nqp_rxmark rx1352_bstack, alt1354_12894, rx1352_pos, 0
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!pos", rx1352_pos
    store_lex unicode:"$\x{a2}", rx1352_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_417_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1352_fail2880
    goto alt1354_end2887
  alt1354_12894:
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!pos", rx1352_pos
    $P11 = rx1352_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1352_curclass, "$!pos"
    lt $I11, 0, rx1352_fail2880
    repr_get_attr_int rx1352_pos, $P11, rx1352_curclass, "$!pos"
  alt1354_end2887:
    rx1352_cur."!cursor_pass"(rx1352_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1352_cur)
  rx1352_restart2879:
    repr_get_attr_obj rx1352_cstack, rx1352_cur, rx1352_curclass, "$!cstack"
  rx1352_fail2880:
    unless rx1352_bstack, rx1352_done2878
    pop $I19, rx1352_bstack
    if_null rx1352_cstack, rx1352_cstack_done2883
    unless rx1352_cstack, rx1352_cstack_done2883
    dec $I19
    set $P11, rx1352_cstack[$I19]
  rx1352_cstack_done2883:
    pop rx1352_rep, rx1352_bstack
    pop rx1352_pos, rx1352_bstack
    pop $I19, rx1352_bstack
    lt rx1352_pos, -1, rx1352_done2878
    lt rx1352_pos, 0, rx1352_fail2880
    eq $I19, 0, rx1352_fail2880
    nqp_islist $I20, rx1352_cstack
    unless $I20, rx1352_jump2881
    elements $I18, rx1352_bstack
    le $I18, 0, rx1352_cut2882
    dec $I18
    set $I18, rx1352_bstack[$I18]
  rx1352_cut2882:
    assign rx1352_cstack, $I18
  rx1352_jump2881:
    jump $I19
  rx1352_done2878:
    rx1352_cur."!cursor_fail"()
    .return (rx1352_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1381944288.90674") :anon :lex :outer("cuid_149_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1260
    .local pmc fb_tmp_182 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2889
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_182, $P5002
    repr_defined $I5002, fb_tmp_182
    unless $I5002 goto if1355_else2890 
    set $P5004, fb_tmp_182["$MULTINESS"]
    set $P5006, $P5004
    goto if1355_end2891
  if1355_else2890:
    null $P5005
    set $P5006, $P5005
  if1355_end2891:
    unless_null $P5006, vivi_13562892
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_13562892:
    unless_null $P5006, vivi_13572893
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13572893:
    set $P5001, $P5006
  fallback2889:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_150_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1263
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1359_start
    .local string rx1359_tgt
    .local int rx1359_pos
    .local int rx1359_off
    .local int rx1359_eos
    .local int rx1359_rep
    .local pmc rx1359_cur
    .local pmc rx1359_curclass
    .local pmc rx1359_bstack
    .local pmc rx1359_cstack
    rx1359_start = self."!cursor_start_all"()
    set rx1359_cur, rx1359_start[0]
    set rx1359_tgt, rx1359_start[1]
    set rx1359_pos, rx1359_start[2]
    set rx1359_curclass, rx1359_start[3]
    set rx1359_bstack, rx1359_start[4]
    set $I19, rx1359_start[5]
    store_lex unicode:"$\x{a2}", rx1359_cur
    length rx1359_eos, rx1359_tgt
    eq $I19, 1, rx1359_restart2898
    gt rx1359_pos, rx1359_eos, rx1359_fail2899
    repr_get_attr_int $I11, self, rx1359_curclass, "$!from"
    ne $I11, -1, rxscan1360_done2905
    goto rxscan1360_scan2904
  rxscan1360_loop2903:
    inc rx1359_pos
    gt rx1359_pos, rx1359_eos, rx1359_fail2899
    repr_bind_attr_int rx1359_cur, rx1359_curclass, "$!from", rx1359_pos
  rxscan1360_scan2904:
    nqp_rxmark rx1359_bstack, rxscan1360_loop2903, rx1359_pos, 0
  rxscan1360_done2905:
    repr_bind_attr_int rx1359_cur, rx1359_curclass, "$!pos", rx1359_pos
    $P11 = rx1359_cur."name"()
    repr_get_attr_int $I11, $P11, rx1359_curclass, "$!pos"
    lt $I11, 0, rx1359_fail2899
    nqp_rxmark rx1359_bstack, rxsubrule1361_pass2906, -1, 0
  rxsubrule1361_pass2906:
    rx1359_cstack = rx1359_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1359_pos, $P11, rx1359_curclass, "$!pos"
    nqp_rxmark rx1359_bstack, rxquantr1362_done2908, rx1359_pos, 0
  rxquantr1362_loop2907:
    repr_bind_attr_int rx1359_cur, rx1359_curclass, "$!pos", rx1359_pos
    $P11 = rx1359_cur."args"()
    repr_get_attr_int $I11, $P11, rx1359_curclass, "$!pos"
    lt $I11, 0, rx1359_fail2899
    goto rxsubrule1363_pass2909
  rxsubrule1363_back2910:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1359_curclass, "$!pos"
    lt $I11, 0, rx1359_fail2899
  rxsubrule1363_pass2909:
    rx1359_cstack = rx1359_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1363_back2910
    push rx1359_bstack, $I11
    push rx1359_bstack, 0
    push rx1359_bstack, rx1359_pos
    elements $I11, rx1359_cstack
    push rx1359_bstack, $I11
    repr_get_attr_int rx1359_pos, $P11, rx1359_curclass, "$!pos"
    nqp_rxpeek $I19, rx1359_bstack, rxquantr1362_done2908
    inc $I19
    inc $I19
    set rx1359_rep, rx1359_bstack[$I19]
    nqp_rxcommit rx1359_bstack, rxquantr1362_done2908
    inc rx1359_rep
  rxquantr1362_done2908:
    rx1359_cur."!cursor_pass"(rx1359_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1359_cur)
  rx1359_restart2898:
    repr_get_attr_obj rx1359_cstack, rx1359_cur, rx1359_curclass, "$!cstack"
  rx1359_fail2899:
    unless rx1359_bstack, rx1359_done2897
    pop $I19, rx1359_bstack
    if_null rx1359_cstack, rx1359_cstack_done2902
    unless rx1359_cstack, rx1359_cstack_done2902
    dec $I19
    set $P11, rx1359_cstack[$I19]
  rx1359_cstack_done2902:
    pop rx1359_rep, rx1359_bstack
    pop rx1359_pos, rx1359_bstack
    pop $I19, rx1359_bstack
    lt rx1359_pos, -1, rx1359_done2897
    lt rx1359_pos, 0, rx1359_fail2899
    eq $I19, 0, rx1359_fail2899
    nqp_islist $I20, rx1359_cstack
    unless $I20, rx1359_jump2900
    elements $I18, rx1359_bstack
    le $I18, 0, rx1359_cut2901
    dec $I18
    set $I18, rx1359_bstack[$I18]
  rx1359_cut2901:
    assign rx1359_cstack, $I18
  rx1359_jump2900:
    jump $I19
  rx1359_done2897:
    rx1359_cur."!cursor_fail"()
    .return (rx1359_cur) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_151_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1267
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1364_start
    .local string rx1364_tgt
    .local int rx1364_pos
    .local int rx1364_off
    .local int rx1364_eos
    .local int rx1364_rep
    .local pmc rx1364_cur
    .local pmc rx1364_curclass
    .local pmc rx1364_bstack
    .local pmc rx1364_cstack
    rx1364_start = self."!cursor_start_all"()
    set rx1364_cur, rx1364_start[0]
    set rx1364_tgt, rx1364_start[1]
    set rx1364_pos, rx1364_start[2]
    set rx1364_curclass, rx1364_start[3]
    set rx1364_bstack, rx1364_start[4]
    set $I19, rx1364_start[5]
    store_lex unicode:"$\x{a2}", rx1364_cur
    length rx1364_eos, rx1364_tgt
    eq $I19, 1, rx1364_restart2913
    gt rx1364_pos, rx1364_eos, rx1364_fail2914
    repr_get_attr_int $I11, self, rx1364_curclass, "$!from"
    ne $I11, -1, rxscan1365_done2920
    goto rxscan1365_scan2919
  rxscan1365_loop2918:
    inc rx1364_pos
    gt rx1364_pos, rx1364_eos, rx1364_fail2914
    repr_bind_attr_int rx1364_cur, rx1364_curclass, "$!from", rx1364_pos
  rxscan1365_scan2919:
    nqp_rxmark rx1364_bstack, rxscan1365_loop2918, rx1364_pos, 0
  rxscan1365_done2920:
    add $I11, rx1364_pos, 1
    gt $I11, rx1364_eos, rx1364_fail2914
    substr $S10, rx1364_tgt, rx1364_pos, 1
    ne $S10, ucs4:"(", rx1364_fail2914
    add rx1364_pos, 1
    repr_bind_attr_int rx1364_cur, rx1364_curclass, "$!pos", rx1364_pos
    $P11 = rx1364_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1364_curclass, "$!pos"
    lt $I11, 0, rx1364_fail2914
    nqp_rxmark rx1364_bstack, rxsubrule1366_pass2921, -1, 0
  rxsubrule1366_pass2921:
    rx1364_cstack = rx1364_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1364_pos, $P11, rx1364_curclass, "$!pos"
    add $I11, rx1364_pos, 1
    gt $I11, rx1364_eos, rx1364_fail2914
    substr $S10, rx1364_tgt, rx1364_pos, 1
    ne $S10, ucs4:")", rx1364_fail2914
    add rx1364_pos, 1
    rx1364_cur."!cursor_pass"(rx1364_pos, "args", 'backtrack'=>1)
    .return (rx1364_cur)
  rx1364_restart2913:
    repr_get_attr_obj rx1364_cstack, rx1364_cur, rx1364_curclass, "$!cstack"
  rx1364_fail2914:
    unless rx1364_bstack, rx1364_done2912
    pop $I19, rx1364_bstack
    if_null rx1364_cstack, rx1364_cstack_done2917
    unless rx1364_cstack, rx1364_cstack_done2917
    dec $I19
    set $P11, rx1364_cstack[$I19]
  rx1364_cstack_done2917:
    pop rx1364_rep, rx1364_bstack
    pop rx1364_pos, rx1364_bstack
    pop $I19, rx1364_bstack
    lt rx1364_pos, -1, rx1364_done2912
    lt rx1364_pos, 0, rx1364_fail2914
    eq $I19, 0, rx1364_fail2914
    nqp_islist $I20, rx1364_cstack
    unless $I20, rx1364_jump2915
    elements $I18, rx1364_bstack
    le $I18, 0, rx1364_cut2916
    dec $I18
    set $I18, rx1364_bstack[$I18]
  rx1364_cut2916:
    assign rx1364_cstack, $I18
  rx1364_jump2915:
    jump $I19
  rx1364_done2912:
    rx1364_cur."!cursor_fail"()
    .return (rx1364_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_152_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1271
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1367_start
    .local string rx1367_tgt
    .local int rx1367_pos
    .local int rx1367_off
    .local int rx1367_eos
    .local int rx1367_rep
    .local pmc rx1367_cur
    .local pmc rx1367_curclass
    .local pmc rx1367_bstack
    .local pmc rx1367_cstack
    rx1367_start = self."!cursor_start_all"()
    set rx1367_cur, rx1367_start[0]
    set rx1367_tgt, rx1367_start[1]
    set rx1367_pos, rx1367_start[2]
    set rx1367_curclass, rx1367_start[3]
    set rx1367_bstack, rx1367_start[4]
    set $I19, rx1367_start[5]
    store_lex unicode:"$\x{a2}", rx1367_cur
    length rx1367_eos, rx1367_tgt
    eq $I19, 1, rx1367_restart2924
    gt rx1367_pos, rx1367_eos, rx1367_fail2925
    repr_get_attr_int $I11, self, rx1367_curclass, "$!from"
    ne $I11, -1, rxscan1368_done2931
    goto rxscan1368_scan2930
  rxscan1368_loop2929:
    inc rx1367_pos
    gt rx1367_pos, rx1367_eos, rx1367_fail2925
    repr_bind_attr_int rx1367_cur, rx1367_curclass, "$!from", rx1367_pos
  rxscan1368_scan2930:
    nqp_rxmark rx1367_bstack, rxscan1368_loop2929, rx1367_pos, 0
  rxscan1368_done2931:
    repr_bind_attr_int rx1367_cur, rx1367_curclass, "$!pos", rx1367_pos
    $P11 = rx1367_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1367_curclass, "$!pos"
    lt $I11, 0, rx1367_fail2925
    repr_get_attr_int rx1367_pos, $P11, rx1367_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1370_02934
    nqp_push_label $P11, alt1370_12936
    nqp_rxmark rx1367_bstack, alt1370_end2933, -1, 0
    rx1367_cur."!alt"(rx1367_pos, "alt_nfa__36_1381944292.49663", $P11)
    goto rx1367_fail2925
  alt1370_02934:
    repr_bind_attr_int rx1367_cur, rx1367_curclass, "$!pos", rx1367_pos
    $P11 = rx1367_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1367_curclass, "$!pos"
    lt $I11, 0, rx1367_fail2925
    nqp_rxmark rx1367_bstack, rxsubrule1371_pass2935, -1, 0
  rxsubrule1371_pass2935:
    rx1367_cstack = rx1367_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1367_pos, $P11, rx1367_curclass, "$!pos"
    goto alt1370_end2933
  alt1370_12936:
    goto alt1370_end2933
  alt1370_end2933:
    nqp_rxcommit rx1367_bstack, alt1370_end2933
    rx1367_cur."!cursor_pass"(rx1367_pos, "arglist", 'backtrack'=>1)
    .return (rx1367_cur)
  rx1367_restart2924:
    repr_get_attr_obj rx1367_cstack, rx1367_cur, rx1367_curclass, "$!cstack"
  rx1367_fail2925:
    unless rx1367_bstack, rx1367_done2923
    pop $I19, rx1367_bstack
    if_null rx1367_cstack, rx1367_cstack_done2928
    unless rx1367_cstack, rx1367_cstack_done2928
    dec $I19
    set $P11, rx1367_cstack[$I19]
  rx1367_cstack_done2928:
    pop rx1367_rep, rx1367_bstack
    pop rx1367_pos, rx1367_bstack
    pop $I19, rx1367_bstack
    lt rx1367_pos, -1, rx1367_done2923
    lt rx1367_pos, 0, rx1367_fail2925
    eq $I19, 0, rx1367_fail2925
    nqp_islist $I20, rx1367_cstack
    unless $I20, rx1367_jump2926
    elements $I18, rx1367_bstack
    le $I18, 0, rx1367_cut2927
    dec $I18
    set $I18, rx1367_bstack[$I18]
  rx1367_cut2927:
    assign rx1367_cstack, $I18
  rx1367_jump2926:
    jump $I19
  rx1367_done2923:
    rx1367_cur."!cursor_fail"()
    .return (rx1367_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_153_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1280
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1373_start
    .local string rx1373_tgt
    .local int rx1373_pos
    .local int rx1373_off
    .local int rx1373_eos
    .local int rx1373_rep
    .local pmc rx1373_cur
    .local pmc rx1373_curclass
    .local pmc rx1373_bstack
    .local pmc rx1373_cstack
    rx1373_start = self."!cursor_start_all"()
    set rx1373_cur, rx1373_start[0]
    set rx1373_tgt, rx1373_start[1]
    set rx1373_pos, rx1373_start[2]
    set rx1373_curclass, rx1373_start[3]
    set rx1373_bstack, rx1373_start[4]
    set $I19, rx1373_start[5]
    store_lex unicode:"$\x{a2}", rx1373_cur
    length rx1373_eos, rx1373_tgt
    eq $I19, 1, rx1373_restart2940
    gt rx1373_pos, rx1373_eos, rx1373_fail2941
    repr_get_attr_int $I11, self, rx1373_curclass, "$!from"
    ne $I11, -1, rxscan1374_done2947
    goto rxscan1374_scan2946
  rxscan1374_loop2945:
    inc rx1373_pos
    gt rx1373_pos, rx1373_eos, rx1373_fail2941
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!from", rx1373_pos
  rxscan1374_scan2946:
    nqp_rxmark rx1373_bstack, rxscan1374_loop2945, rx1373_pos, 0
  rxscan1374_done2947:
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!pos", rx1373_pos
    $P11 = rx1373_cur."value"()
    repr_get_attr_int $I11, $P11, rx1373_curclass, "$!pos"
    lt $I11, 0, rx1373_fail2941
    nqp_rxmark rx1373_bstack, rxsubrule1375_pass2948, -1, 0
  rxsubrule1375_pass2948:
    rx1373_cstack = rx1373_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1373_pos, $P11, rx1373_curclass, "$!pos"
    rx1373_cur."!cursor_pass"(rx1373_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1373_cur)
  rx1373_restart2940:
    repr_get_attr_obj rx1373_cstack, rx1373_cur, rx1373_curclass, "$!cstack"
  rx1373_fail2941:
    unless rx1373_bstack, rx1373_done2939
    pop $I19, rx1373_bstack
    if_null rx1373_cstack, rx1373_cstack_done2944
    unless rx1373_cstack, rx1373_cstack_done2944
    dec $I19
    set $P11, rx1373_cstack[$I19]
  rx1373_cstack_done2944:
    pop rx1373_rep, rx1373_bstack
    pop rx1373_pos, rx1373_bstack
    pop $I19, rx1373_bstack
    lt rx1373_pos, -1, rx1373_done2939
    lt rx1373_pos, 0, rx1373_fail2941
    eq $I19, 0, rx1373_fail2941
    nqp_islist $I20, rx1373_cstack
    unless $I20, rx1373_jump2942
    elements $I18, rx1373_bstack
    le $I18, 0, rx1373_cut2943
    dec $I18
    set $I18, rx1373_bstack[$I18]
  rx1373_cut2943:
    assign rx1373_cstack, $I18
  rx1373_jump2942:
    jump $I19
  rx1373_done2939:
    rx1373_cur."!cursor_fail"()
    .return (rx1373_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_154_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1282
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1376_start
    .local string rx1376_tgt
    .local int rx1376_pos
    .local int rx1376_off
    .local int rx1376_eos
    .local int rx1376_rep
    .local pmc rx1376_cur
    .local pmc rx1376_curclass
    .local pmc rx1376_bstack
    .local pmc rx1376_cstack
    rx1376_start = self."!cursor_start_all"()
    set rx1376_cur, rx1376_start[0]
    set rx1376_tgt, rx1376_start[1]
    set rx1376_pos, rx1376_start[2]
    set rx1376_curclass, rx1376_start[3]
    set rx1376_bstack, rx1376_start[4]
    set $I19, rx1376_start[5]
    store_lex unicode:"$\x{a2}", rx1376_cur
    length rx1376_eos, rx1376_tgt
    eq $I19, 1, rx1376_restart2951
    gt rx1376_pos, rx1376_eos, rx1376_fail2952
    repr_get_attr_int $I11, self, rx1376_curclass, "$!from"
    ne $I11, -1, rxscan1377_done2958
    goto rxscan1377_scan2957
  rxscan1377_loop2956:
    inc rx1376_pos
    gt rx1376_pos, rx1376_eos, rx1376_fail2952
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!from", rx1376_pos
  rxscan1377_scan2957:
    nqp_rxmark rx1376_bstack, rxscan1377_loop2956, rx1376_pos, 0
  rxscan1377_done2958:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1378_02960
    nqp_push_label $P11, alt1378_12962
    nqp_rxmark rx1376_bstack, alt1378_end2959, -1, 0
    rx1376_cur."!alt"(rx1376_pos, "alt_nfa__37_1381944292.50832", $P11)
    goto rx1376_fail2952
  alt1378_02960:
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1376_curclass, "$!pos"
    lt $I11, 0, rx1376_fail2952
    nqp_rxmark rx1376_bstack, rxsubrule1379_pass2961, -1, 0
  rxsubrule1379_pass2961:
    rx1376_cstack = rx1376_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1376_pos, $P11, rx1376_curclass, "$!pos"
    goto alt1378_end2959
  alt1378_12962:
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."number"()
    repr_get_attr_int $I11, $P11, rx1376_curclass, "$!pos"
    lt $I11, 0, rx1376_fail2952
    nqp_rxmark rx1376_bstack, rxsubrule1380_pass2963, -1, 0
  rxsubrule1380_pass2963:
    rx1376_cstack = rx1376_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1376_pos, $P11, rx1376_curclass, "$!pos"
    goto alt1378_end2959
  alt1378_end2959:
    rx1376_cur."!cursor_pass"(rx1376_pos, "value", 'backtrack'=>1)
    .return (rx1376_cur)
  rx1376_restart2951:
    repr_get_attr_obj rx1376_cstack, rx1376_cur, rx1376_curclass, "$!cstack"
  rx1376_fail2952:
    unless rx1376_bstack, rx1376_done2950
    pop $I19, rx1376_bstack
    if_null rx1376_cstack, rx1376_cstack_done2955
    unless rx1376_cstack, rx1376_cstack_done2955
    dec $I19
    set $P11, rx1376_cstack[$I19]
  rx1376_cstack_done2955:
    pop rx1376_rep, rx1376_bstack
    pop rx1376_pos, rx1376_bstack
    pop $I19, rx1376_bstack
    lt rx1376_pos, -1, rx1376_done2950
    lt rx1376_pos, 0, rx1376_fail2952
    eq $I19, 0, rx1376_fail2952
    nqp_islist $I20, rx1376_cstack
    unless $I20, rx1376_jump2953
    elements $I18, rx1376_bstack
    le $I18, 0, rx1376_cut2954
    dec $I18
    set $I18, rx1376_bstack[$I18]
  rx1376_cut2954:
    assign rx1376_cstack, $I18
  rx1376_jump2953:
    jump $I19
  rx1376_done2950:
    rx1376_cur."!cursor_fail"()
    .return (rx1376_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_155_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1287
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1381_start
    .local string rx1381_tgt
    .local int rx1381_pos
    .local int rx1381_off
    .local int rx1381_eos
    .local int rx1381_rep
    .local pmc rx1381_cur
    .local pmc rx1381_curclass
    .local pmc rx1381_bstack
    .local pmc rx1381_cstack
    rx1381_start = self."!cursor_start_all"()
    set rx1381_cur, rx1381_start[0]
    set rx1381_tgt, rx1381_start[1]
    set rx1381_pos, rx1381_start[2]
    set rx1381_curclass, rx1381_start[3]
    set rx1381_bstack, rx1381_start[4]
    set $I19, rx1381_start[5]
    store_lex unicode:"$\x{a2}", rx1381_cur
    length rx1381_eos, rx1381_tgt
    eq $I19, 1, rx1381_restart2966
    gt rx1381_pos, rx1381_eos, rx1381_fail2967
    repr_get_attr_int $I11, self, rx1381_curclass, "$!from"
    ne $I11, -1, rxscan1382_done2973
    goto rxscan1382_scan2972
  rxscan1382_loop2971:
    inc rx1381_pos
    gt rx1381_pos, rx1381_eos, rx1381_fail2967
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!from", rx1381_pos
  rxscan1382_scan2972:
    nqp_rxmark rx1381_bstack, rxscan1382_loop2971, rx1381_pos, 0
  rxscan1382_done2973:
    nqp_rxmark rx1381_bstack, rxcap1383_fail2975, rx1381_pos, 0
    nqp_rxmark rx1381_bstack, rxquantr1384_done2977, rx1381_pos, 0
  rxquantr1384_loop2976:
    ge rx1381_pos, rx1381_eos, rx1381_fail2967
    substr $S11, rx1381_tgt, rx1381_pos, 1
    index $I11, ucs4:"+-", $S11
    lt $I11, 0, rx1381_fail2967
    inc rx1381_pos
    nqp_rxpeek $I19, rx1381_bstack, rxquantr1384_done2977
    inc $I19
    inc $I19
    set rx1381_rep, rx1381_bstack[$I19]
    nqp_rxcommit rx1381_bstack, rxquantr1384_done2977
    inc rx1381_rep
  rxquantr1384_done2977:
    nqp_rxpeek $I19, rx1381_bstack, rxcap1383_fail2975
    inc $I19
    set $I11, rx1381_bstack[$I19]
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1381_pos)
    rx1381_cstack = rx1381_cur."!cursor_capture"($P11, "sign")
    goto rxcap1383_done2974
  rxcap1383_fail2975:
    goto rx1381_fail2967
  rxcap1383_done2974:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1385_02979
    nqp_push_label $P11, alt1385_12981
    nqp_rxmark rx1381_bstack, alt1385_end2978, -1, 0
    rx1381_cur."!alt"(rx1381_pos, "alt_nfa__38_1381944292.52078", $P11)
    goto rx1381_fail2967
  alt1385_02979:
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail2967
    nqp_rxmark rx1381_bstack, rxsubrule1386_pass2980, -1, 0
  rxsubrule1386_pass2980:
    rx1381_cstack = rx1381_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    goto alt1385_end2978
  alt1385_12981:
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail2967
    nqp_rxmark rx1381_bstack, rxsubrule1387_pass2982, -1, 0
  rxsubrule1387_pass2982:
    rx1381_cstack = rx1381_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    goto alt1385_end2978
  alt1385_end2978:
    nqp_rxcommit rx1381_bstack, alt1385_end2978
    rx1381_cur."!cursor_pass"(rx1381_pos, "number", 'backtrack'=>1)
    .return (rx1381_cur)
  rx1381_restart2966:
    repr_get_attr_obj rx1381_cstack, rx1381_cur, rx1381_curclass, "$!cstack"
  rx1381_fail2967:
    unless rx1381_bstack, rx1381_done2965
    pop $I19, rx1381_bstack
    if_null rx1381_cstack, rx1381_cstack_done2970
    unless rx1381_cstack, rx1381_cstack_done2970
    dec $I19
    set $P11, rx1381_cstack[$I19]
  rx1381_cstack_done2970:
    pop rx1381_rep, rx1381_bstack
    pop rx1381_pos, rx1381_bstack
    pop $I19, rx1381_bstack
    lt rx1381_pos, -1, rx1381_done2965
    lt rx1381_pos, 0, rx1381_fail2967
    eq $I19, 0, rx1381_fail2967
    nqp_islist $I20, rx1381_cstack
    unless $I20, rx1381_jump2968
    elements $I18, rx1381_bstack
    le $I18, 0, rx1381_cut2969
    dec $I18
    set $I18, rx1381_bstack[$I18]
  rx1381_cut2969:
    assign rx1381_cstack, $I18
  rx1381_jump2968:
    jump $I19
  rx1381_done2965:
    rx1381_cur."!cursor_fail"()
    .return (rx1381_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_156_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1292
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_157_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1293
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1388_start
    .local string rx1388_tgt
    .local int rx1388_pos
    .local int rx1388_off
    .local int rx1388_eos
    .local int rx1388_rep
    .local pmc rx1388_cur
    .local pmc rx1388_curclass
    .local pmc rx1388_bstack
    .local pmc rx1388_cstack
    rx1388_start = self."!cursor_start_all"()
    set rx1388_cur, rx1388_start[0]
    set rx1388_tgt, rx1388_start[1]
    set rx1388_pos, rx1388_start[2]
    set rx1388_curclass, rx1388_start[3]
    set rx1388_bstack, rx1388_start[4]
    set $I19, rx1388_start[5]
    store_lex unicode:"$\x{a2}", rx1388_cur
    length rx1388_eos, rx1388_tgt
    eq $I19, 1, rx1388_restart2985
    gt rx1388_pos, rx1388_eos, rx1388_fail2986
    repr_get_attr_int $I11, self, rx1388_curclass, "$!from"
    ne $I11, -1, rxscan1389_done2992
    goto rxscan1389_scan2991
  rxscan1389_loop2990:
    inc rx1388_pos
    gt rx1388_pos, rx1388_eos, rx1388_fail2986
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!from", rx1388_pos
  rxscan1389_scan2991:
    nqp_rxmark rx1388_bstack, rxscan1389_loop2990, rx1388_pos, 0
  rxscan1389_done2992:
    ge rx1388_pos, rx1388_eos, rx1388_fail2986
    substr $S11, rx1388_tgt, rx1388_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1388_fail2986
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!pos", rx1388_pos
    $P11 = rx1388_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1388_curclass, "$!pos"
    lt $I11, 0, rx1388_fail2986
    nqp_rxmark rx1388_bstack, rxsubrule1390_pass2993, -1, 0
  rxsubrule1390_pass2993:
    rx1388_cstack = rx1388_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1388_pos, $P11, rx1388_curclass, "$!pos"
    rx1388_cur."!cursor_pass"(rx1388_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1388_cur)
  rx1388_restart2985:
    repr_get_attr_obj rx1388_cstack, rx1388_cur, rx1388_curclass, "$!cstack"
  rx1388_fail2986:
    unless rx1388_bstack, rx1388_done2984
    pop $I19, rx1388_bstack
    if_null rx1388_cstack, rx1388_cstack_done2989
    unless rx1388_cstack, rx1388_cstack_done2989
    dec $I19
    set $P11, rx1388_cstack[$I19]
  rx1388_cstack_done2989:
    pop rx1388_rep, rx1388_bstack
    pop rx1388_pos, rx1388_bstack
    pop $I19, rx1388_bstack
    lt rx1388_pos, -1, rx1388_done2984
    lt rx1388_pos, 0, rx1388_fail2986
    eq $I19, 0, rx1388_fail2986
    nqp_islist $I20, rx1388_cstack
    unless $I20, rx1388_jump2987
    elements $I18, rx1388_bstack
    le $I18, 0, rx1388_cut2988
    dec $I18
    set $I18, rx1388_bstack[$I18]
  rx1388_cut2988:
    assign rx1388_cstack, $I18
  rx1388_jump2987:
    jump $I19
  rx1388_done2984:
    rx1388_cur."!cursor_fail"()
    .return (rx1388_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_158_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1294
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1391_start
    .local string rx1391_tgt
    .local int rx1391_pos
    .local int rx1391_off
    .local int rx1391_eos
    .local int rx1391_rep
    .local pmc rx1391_cur
    .local pmc rx1391_curclass
    .local pmc rx1391_bstack
    .local pmc rx1391_cstack
    rx1391_start = self."!cursor_start_all"()
    set rx1391_cur, rx1391_start[0]
    set rx1391_tgt, rx1391_start[1]
    set rx1391_pos, rx1391_start[2]
    set rx1391_curclass, rx1391_start[3]
    set rx1391_bstack, rx1391_start[4]
    set $I19, rx1391_start[5]
    store_lex unicode:"$\x{a2}", rx1391_cur
    length rx1391_eos, rx1391_tgt
    eq $I19, 1, rx1391_restart2996
    gt rx1391_pos, rx1391_eos, rx1391_fail2997
    repr_get_attr_int $I11, self, rx1391_curclass, "$!from"
    ne $I11, -1, rxscan1392_done3003
    goto rxscan1392_scan3002
  rxscan1392_loop3001:
    inc rx1391_pos
    gt rx1391_pos, rx1391_eos, rx1391_fail2997
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!from", rx1391_pos
  rxscan1392_scan3002:
    nqp_rxmark rx1391_bstack, rxscan1392_loop3001, rx1391_pos, 0
  rxscan1392_done3003:
    ge rx1391_pos, rx1391_eos, rx1391_fail2997
    substr $S11, rx1391_tgt, rx1391_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1391_fail2997
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!pos", rx1391_pos
    $P11 = rx1391_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1391_curclass, "$!pos"
    lt $I11, 0, rx1391_fail2997
    nqp_rxmark rx1391_bstack, rxsubrule1393_pass3004, -1, 0
  rxsubrule1393_pass3004:
    rx1391_cstack = rx1391_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1391_pos, $P11, rx1391_curclass, "$!pos"
    rx1391_cur."!cursor_pass"(rx1391_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1391_cur)
  rx1391_restart2996:
    repr_get_attr_obj rx1391_cstack, rx1391_cur, rx1391_curclass, "$!cstack"
  rx1391_fail2997:
    unless rx1391_bstack, rx1391_done2995
    pop $I19, rx1391_bstack
    if_null rx1391_cstack, rx1391_cstack_done3000
    unless rx1391_cstack, rx1391_cstack_done3000
    dec $I19
    set $P11, rx1391_cstack[$I19]
  rx1391_cstack_done3000:
    pop rx1391_rep, rx1391_bstack
    pop rx1391_pos, rx1391_bstack
    pop $I19, rx1391_bstack
    lt rx1391_pos, -1, rx1391_done2995
    lt rx1391_pos, 0, rx1391_fail2997
    eq $I19, 0, rx1391_fail2997
    nqp_islist $I20, rx1391_cstack
    unless $I20, rx1391_jump2998
    elements $I18, rx1391_bstack
    le $I18, 0, rx1391_cut2999
    dec $I18
    set $I18, rx1391_bstack[$I18]
  rx1391_cut2999:
    assign rx1391_cstack, $I18
  rx1391_jump2998:
    jump $I19
  rx1391_done2995:
    rx1391_cur."!cursor_fail"()
    .return (rx1391_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_159_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1295
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1394_start
    .local string rx1394_tgt
    .local int rx1394_pos
    .local int rx1394_off
    .local int rx1394_eos
    .local int rx1394_rep
    .local pmc rx1394_cur
    .local pmc rx1394_curclass
    .local pmc rx1394_bstack
    .local pmc rx1394_cstack
    rx1394_start = self."!cursor_start_all"()
    set rx1394_cur, rx1394_start[0]
    set rx1394_tgt, rx1394_start[1]
    set rx1394_pos, rx1394_start[2]
    set rx1394_curclass, rx1394_start[3]
    set rx1394_bstack, rx1394_start[4]
    set $I19, rx1394_start[5]
    store_lex unicode:"$\x{a2}", rx1394_cur
    length rx1394_eos, rx1394_tgt
    eq $I19, 1, rx1394_restart3007
    gt rx1394_pos, rx1394_eos, rx1394_fail3008
    repr_get_attr_int $I11, self, rx1394_curclass, "$!from"
    ne $I11, -1, rxscan1395_done3014
    goto rxscan1395_scan3013
  rxscan1395_loop3012:
    inc rx1394_pos
    gt rx1394_pos, rx1394_eos, rx1394_fail3008
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!from", rx1394_pos
  rxscan1395_scan3013:
    nqp_rxmark rx1394_bstack, rxscan1395_loop3012, rx1394_pos, 0
  rxscan1395_done3014:
    nqp_rxmark rx1394_bstack, rxcap1396_fail3016, rx1394_pos, 0
    add $I11, rx1394_pos, 1
    gt $I11, rx1394_eos, rx1394_fail3008
    substr $S10, rx1394_tgt, rx1394_pos, 1
    ne $S10, ucs4:"q", rx1394_fail3008
    add rx1394_pos, 1
    nqp_rxpeek $I19, rx1394_bstack, rxcap1396_fail3016
    inc $I19
    set $I11, rx1394_bstack[$I19]
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1394_pos)
    rx1394_cstack = rx1394_cur."!cursor_capture"($P11, "sym")
    goto rxcap1396_done3015
  rxcap1396_fail3016:
    goto rx1394_fail3008
  rxcap1396_done3015:
    le rx1394_pos, 0, rx1394_fail3008
    is_cclass $I11, .CCLASS_WORD, rx1394_tgt, rx1394_pos
    if $I11, rx1394_fail3008
    sub $I11, rx1394_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1394_tgt, $I11
    unless $I11, rx1394_fail3008
    ge rx1394_pos, rx1394_eos, rx1394_fail3008
    substr $S11, rx1394_tgt, rx1394_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1394_fail3008
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1394_curclass, "$!pos"
    lt $I11, 0, rx1394_fail3008
    repr_get_attr_int rx1394_pos, $P11, rx1394_curclass, "$!pos"
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1394_curclass, "$!pos"
    lt $I11, 0, rx1394_fail3008
    nqp_rxmark rx1394_bstack, rxsubrule1399_pass3019, -1, 0
  rxsubrule1399_pass3019:
    rx1394_cstack = rx1394_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1394_pos, $P11, rx1394_curclass, "$!pos"
    rx1394_cur."!cursor_pass"(rx1394_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1394_cur)
  rx1394_restart3007:
    repr_get_attr_obj rx1394_cstack, rx1394_cur, rx1394_curclass, "$!cstack"
  rx1394_fail3008:
    unless rx1394_bstack, rx1394_done3006
    pop $I19, rx1394_bstack
    if_null rx1394_cstack, rx1394_cstack_done3011
    unless rx1394_cstack, rx1394_cstack_done3011
    dec $I19
    set $P11, rx1394_cstack[$I19]
  rx1394_cstack_done3011:
    pop rx1394_rep, rx1394_bstack
    pop rx1394_pos, rx1394_bstack
    pop $I19, rx1394_bstack
    lt rx1394_pos, -1, rx1394_done3006
    lt rx1394_pos, 0, rx1394_fail3008
    eq $I19, 0, rx1394_fail3008
    nqp_islist $I20, rx1394_cstack
    unless $I20, rx1394_jump3009
    elements $I18, rx1394_bstack
    le $I18, 0, rx1394_cut3010
    dec $I18
    set $I18, rx1394_bstack[$I18]
  rx1394_cut3010:
    assign rx1394_cstack, $I18
  rx1394_jump3009:
    jump $I19
  rx1394_done3006:
    rx1394_cur."!cursor_fail"()
    .return (rx1394_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_160_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1400_start
    .local string rx1400_tgt
    .local int rx1400_pos
    .local int rx1400_off
    .local int rx1400_eos
    .local int rx1400_rep
    .local pmc rx1400_cur
    .local pmc rx1400_curclass
    .local pmc rx1400_bstack
    .local pmc rx1400_cstack
    rx1400_start = self."!cursor_start_all"()
    set rx1400_cur, rx1400_start[0]
    set rx1400_tgt, rx1400_start[1]
    set rx1400_pos, rx1400_start[2]
    set rx1400_curclass, rx1400_start[3]
    set rx1400_bstack, rx1400_start[4]
    set $I19, rx1400_start[5]
    store_lex unicode:"$\x{a2}", rx1400_cur
    length rx1400_eos, rx1400_tgt
    eq $I19, 1, rx1400_restart3022
    gt rx1400_pos, rx1400_eos, rx1400_fail3023
    repr_get_attr_int $I11, self, rx1400_curclass, "$!from"
    ne $I11, -1, rxscan1401_done3029
    goto rxscan1401_scan3028
  rxscan1401_loop3027:
    inc rx1400_pos
    gt rx1400_pos, rx1400_eos, rx1400_fail3023
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!from", rx1400_pos
  rxscan1401_scan3028:
    nqp_rxmark rx1400_bstack, rxscan1401_loop3027, rx1400_pos, 0
  rxscan1401_done3029:
    nqp_rxmark rx1400_bstack, rxcap1402_fail3031, rx1400_pos, 0
    add $I11, rx1400_pos, 2
    gt $I11, rx1400_eos, rx1400_fail3023
    substr $S10, rx1400_tgt, rx1400_pos, 2
    ne $S10, ucs4:"qq", rx1400_fail3023
    add rx1400_pos, 2
    nqp_rxpeek $I19, rx1400_bstack, rxcap1402_fail3031
    inc $I19
    set $I11, rx1400_bstack[$I19]
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!pos", rx1400_pos
    $P11 = rx1400_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1400_pos)
    rx1400_cstack = rx1400_cur."!cursor_capture"($P11, "sym")
    goto rxcap1402_done3030
  rxcap1402_fail3031:
    goto rx1400_fail3023
  rxcap1402_done3030:
    le rx1400_pos, 0, rx1400_fail3023
    is_cclass $I11, .CCLASS_WORD, rx1400_tgt, rx1400_pos
    if $I11, rx1400_fail3023
    sub $I11, rx1400_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1400_tgt, $I11
    unless $I11, rx1400_fail3023
    ge rx1400_pos, rx1400_eos, rx1400_fail3023
    substr $S11, rx1400_tgt, rx1400_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1400_fail3023
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!pos", rx1400_pos
    $P11 = rx1400_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1400_curclass, "$!pos"
    lt $I11, 0, rx1400_fail3023
    repr_get_attr_int rx1400_pos, $P11, rx1400_curclass, "$!pos"
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!pos", rx1400_pos
    $P11 = rx1400_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1400_curclass, "$!pos"
    lt $I11, 0, rx1400_fail3023
    nqp_rxmark rx1400_bstack, rxsubrule1405_pass3034, -1, 0
  rxsubrule1405_pass3034:
    rx1400_cstack = rx1400_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1400_pos, $P11, rx1400_curclass, "$!pos"
    rx1400_cur."!cursor_pass"(rx1400_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1400_cur)
  rx1400_restart3022:
    repr_get_attr_obj rx1400_cstack, rx1400_cur, rx1400_curclass, "$!cstack"
  rx1400_fail3023:
    unless rx1400_bstack, rx1400_done3021
    pop $I19, rx1400_bstack
    if_null rx1400_cstack, rx1400_cstack_done3026
    unless rx1400_cstack, rx1400_cstack_done3026
    dec $I19
    set $P11, rx1400_cstack[$I19]
  rx1400_cstack_done3026:
    pop rx1400_rep, rx1400_bstack
    pop rx1400_pos, rx1400_bstack
    pop $I19, rx1400_bstack
    lt rx1400_pos, -1, rx1400_done3021
    lt rx1400_pos, 0, rx1400_fail3023
    eq $I19, 0, rx1400_fail3023
    nqp_islist $I20, rx1400_cstack
    unless $I20, rx1400_jump3024
    elements $I18, rx1400_bstack
    le $I18, 0, rx1400_cut3025
    dec $I18
    set $I18, rx1400_bstack[$I18]
  rx1400_cut3025:
    assign rx1400_cstack, $I18
  rx1400_jump3024:
    jump $I19
  rx1400_done3021:
    rx1400_cur."!cursor_fail"()
    .return (rx1400_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_161_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1297
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1406_start
    .local string rx1406_tgt
    .local int rx1406_pos
    .local int rx1406_off
    .local int rx1406_eos
    .local int rx1406_rep
    .local pmc rx1406_cur
    .local pmc rx1406_curclass
    .local pmc rx1406_bstack
    .local pmc rx1406_cstack
    rx1406_start = self."!cursor_start_all"()
    set rx1406_cur, rx1406_start[0]
    set rx1406_tgt, rx1406_start[1]
    set rx1406_pos, rx1406_start[2]
    set rx1406_curclass, rx1406_start[3]
    set rx1406_bstack, rx1406_start[4]
    set $I19, rx1406_start[5]
    store_lex unicode:"$\x{a2}", rx1406_cur
    length rx1406_eos, rx1406_tgt
    eq $I19, 1, rx1406_restart3037
    gt rx1406_pos, rx1406_eos, rx1406_fail3038
    repr_get_attr_int $I11, self, rx1406_curclass, "$!from"
    ne $I11, -1, rxscan1407_done3044
    goto rxscan1407_scan3043
  rxscan1407_loop3042:
    inc rx1406_pos
    gt rx1406_pos, rx1406_eos, rx1406_fail3038
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!from", rx1406_pos
  rxscan1407_scan3043:
    nqp_rxmark rx1406_bstack, rxscan1407_loop3042, rx1406_pos, 0
  rxscan1407_done3044:
    nqp_rxmark rx1406_bstack, rxcap1408_fail3046, rx1406_pos, 0
    add $I11, rx1406_pos, 1
    gt $I11, rx1406_eos, rx1406_fail3038
    substr $S10, rx1406_tgt, rx1406_pos, 1
    ne $S10, ucs4:"Q", rx1406_fail3038
    add rx1406_pos, 1
    nqp_rxpeek $I19, rx1406_bstack, rxcap1408_fail3046
    inc $I19
    set $I11, rx1406_bstack[$I19]
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1406_pos)
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "sym")
    goto rxcap1408_done3045
  rxcap1408_fail3046:
    goto rx1406_fail3038
  rxcap1408_done3045:
    le rx1406_pos, 0, rx1406_fail3038
    is_cclass $I11, .CCLASS_WORD, rx1406_tgt, rx1406_pos
    if $I11, rx1406_fail3038
    sub $I11, rx1406_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1406_tgt, $I11
    unless $I11, rx1406_fail3038
    ge rx1406_pos, rx1406_eos, rx1406_fail3038
    substr $S11, rx1406_tgt, rx1406_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1406_fail3038
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3038
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3038
    nqp_rxmark rx1406_bstack, rxsubrule1411_pass3049, -1, 0
  rxsubrule1411_pass3049:
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    rx1406_cur."!cursor_pass"(rx1406_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1406_cur)
  rx1406_restart3037:
    repr_get_attr_obj rx1406_cstack, rx1406_cur, rx1406_curclass, "$!cstack"
  rx1406_fail3038:
    unless rx1406_bstack, rx1406_done3036
    pop $I19, rx1406_bstack
    if_null rx1406_cstack, rx1406_cstack_done3041
    unless rx1406_cstack, rx1406_cstack_done3041
    dec $I19
    set $P11, rx1406_cstack[$I19]
  rx1406_cstack_done3041:
    pop rx1406_rep, rx1406_bstack
    pop rx1406_pos, rx1406_bstack
    pop $I19, rx1406_bstack
    lt rx1406_pos, -1, rx1406_done3036
    lt rx1406_pos, 0, rx1406_fail3038
    eq $I19, 0, rx1406_fail3038
    nqp_islist $I20, rx1406_cstack
    unless $I20, rx1406_jump3039
    elements $I18, rx1406_bstack
    le $I18, 0, rx1406_cut3040
    dec $I18
    set $I18, rx1406_bstack[$I18]
  rx1406_cut3040:
    assign rx1406_cstack, $I18
  rx1406_jump3039:
    jump $I19
  rx1406_done3036:
    rx1406_cur."!cursor_fail"()
    .return (rx1406_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_162_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1298
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1412_start
    .local string rx1412_tgt
    .local int rx1412_pos
    .local int rx1412_off
    .local int rx1412_eos
    .local int rx1412_rep
    .local pmc rx1412_cur
    .local pmc rx1412_curclass
    .local pmc rx1412_bstack
    .local pmc rx1412_cstack
    rx1412_start = self."!cursor_start_all"()
    set rx1412_cur, rx1412_start[0]
    set rx1412_tgt, rx1412_start[1]
    set rx1412_pos, rx1412_start[2]
    set rx1412_curclass, rx1412_start[3]
    set rx1412_bstack, rx1412_start[4]
    set $I19, rx1412_start[5]
    store_lex unicode:"$\x{a2}", rx1412_cur
    length rx1412_eos, rx1412_tgt
    eq $I19, 1, rx1412_restart3052
    gt rx1412_pos, rx1412_eos, rx1412_fail3053
    repr_get_attr_int $I11, self, rx1412_curclass, "$!from"
    ne $I11, -1, rxscan1413_done3059
    goto rxscan1413_scan3058
  rxscan1413_loop3057:
    inc rx1412_pos
    gt rx1412_pos, rx1412_eos, rx1412_fail3053
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!from", rx1412_pos
  rxscan1413_scan3058:
    nqp_rxmark rx1412_bstack, rxscan1413_loop3057, rx1412_pos, 0
  rxscan1413_done3059:
    nqp_rxmark rx1412_bstack, rxcap1414_fail3061, rx1412_pos, 0
    add $I11, rx1412_pos, 5
    gt $I11, rx1412_eos, rx1412_fail3053
    substr $S10, rx1412_tgt, rx1412_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1412_fail3053
    add rx1412_pos, 5
    nqp_rxpeek $I19, rx1412_bstack, rxcap1414_fail3061
    inc $I19
    set $I11, rx1412_bstack[$I19]
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!pos", rx1412_pos
    $P11 = rx1412_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1412_pos)
    rx1412_cstack = rx1412_cur."!cursor_capture"($P11, "sym")
    goto rxcap1414_done3060
  rxcap1414_fail3061:
    goto rx1412_fail3053
  rxcap1414_done3060:
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!pos", rx1412_pos
    $P11 = rx1412_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1412_curclass, "$!pos"
    lt $I11, 0, rx1412_fail3053
    repr_get_attr_int rx1412_pos, $P11, rx1412_curclass, "$!pos"
    repr_bind_attr_int rx1412_cur, rx1412_curclass, "$!pos", rx1412_pos
    $P11 = rx1412_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1412_curclass, "$!pos"
    lt $I11, 0, rx1412_fail3053
    nqp_rxmark rx1412_bstack, rxsubrule1416_pass3063, -1, 0
  rxsubrule1416_pass3063:
    rx1412_cstack = rx1412_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1412_pos, $P11, rx1412_curclass, "$!pos"
    rx1412_cur."!cursor_pass"(rx1412_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1412_cur)
  rx1412_restart3052:
    repr_get_attr_obj rx1412_cstack, rx1412_cur, rx1412_curclass, "$!cstack"
  rx1412_fail3053:
    unless rx1412_bstack, rx1412_done3051
    pop $I19, rx1412_bstack
    if_null rx1412_cstack, rx1412_cstack_done3056
    unless rx1412_cstack, rx1412_cstack_done3056
    dec $I19
    set $P11, rx1412_cstack[$I19]
  rx1412_cstack_done3056:
    pop rx1412_rep, rx1412_bstack
    pop rx1412_pos, rx1412_bstack
    pop $I19, rx1412_bstack
    lt rx1412_pos, -1, rx1412_done3051
    lt rx1412_pos, 0, rx1412_fail3053
    eq $I19, 0, rx1412_fail3053
    nqp_islist $I20, rx1412_cstack
    unless $I20, rx1412_jump3054
    elements $I18, rx1412_bstack
    le $I18, 0, rx1412_cut3055
    dec $I18
    set $I18, rx1412_bstack[$I18]
  rx1412_cut3055:
    assign rx1412_cstack, $I18
  rx1412_jump3054:
    jump $I19
  rx1412_done3051:
    rx1412_cur."!cursor_fail"()
    .return (rx1412_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_163_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1299
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_183 
    .local pmc pkg_viv_tmp_32 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1417_start
    .local string rx1417_tgt
    .local int rx1417_pos
    .local int rx1417_off
    .local int rx1417_eos
    .local int rx1417_rep
    .local pmc rx1417_cur
    .local pmc rx1417_curclass
    .local pmc rx1417_bstack
    .local pmc rx1417_cstack
    rx1417_start = self."!cursor_start_all"()
    set rx1417_cur, rx1417_start[0]
    set rx1417_tgt, rx1417_start[1]
    set rx1417_pos, rx1417_start[2]
    set rx1417_curclass, rx1417_start[3]
    set rx1417_bstack, rx1417_start[4]
    set $I19, rx1417_start[5]
    store_lex unicode:"$\x{a2}", rx1417_cur
    length rx1417_eos, rx1417_tgt
    eq $I19, 1, rx1417_restart3066
    gt rx1417_pos, rx1417_eos, rx1417_fail3067
    repr_get_attr_int $I11, self, rx1417_curclass, "$!from"
    ne $I11, -1, rxscan1418_done3073
    goto rxscan1418_scan3072
  rxscan1418_loop3071:
    inc rx1417_pos
    gt rx1417_pos, rx1417_eos, rx1417_fail3067
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!from", rx1417_pos
  rxscan1418_scan3072:
    nqp_rxmark rx1417_bstack, rxscan1418_loop3071, rx1417_pos, 0
  rxscan1418_done3073:
    add $I11, rx1417_pos, 1
    gt $I11, rx1417_eos, rx1417_fail3067
    substr $S10, rx1417_tgt, rx1417_pos, 1
    ne $S10, ucs4:"/", rx1417_fail3067
    add rx1417_pos, 1
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!pos", rx1417_pos
    $P11 = rx1417_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1417_curclass, "$!pos"
    lt $I11, 0, rx1417_fail3067
    repr_get_attr_int rx1417_pos, $P11, rx1417_curclass, "$!pos"
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!pos", rx1417_pos
    store_lex unicode:"$\x{a2}", rx1417_cur
    unless_null $P101, fallback3075
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_32, $P5002
    set fb_tmp_183, pkg_viv_tmp_32
    repr_defined $I5001, fb_tmp_183
    unless $I5001 goto if1420_else3076 
    set $P5004, fb_tmp_183["%RX"]
    set $P5006, $P5004
    goto if1420_end3077
  if1420_else3076:
    null $P5005
    set $P5006, $P5005
  if1420_end3077:
    unless_null $P5006, vivi_14213078
    new $P5007, 'Hash'
    set pkg_viv_tmp_32["%RX"], $P5007
    set $P5006, $P5007
  vivi_14213078:
    unless_null $P5006, vivi_14223079
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_14223079:
    set $P101, $P5006
  fallback3075:
    repr_bind_attr_int rx1417_cur, rx1417_curclass, "$!pos", rx1417_pos
    $P11 = rx1417_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1417_curclass, "$!pos"
    lt $I11, 0, rx1417_fail3067
    nqp_rxmark rx1417_bstack, rxsubrule1423_pass3080, -1, 0
  rxsubrule1423_pass3080:
    rx1417_cstack = rx1417_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1417_pos, $P11, rx1417_curclass, "$!pos"
    add $I11, rx1417_pos, 1
    gt $I11, rx1417_eos, rx1417_fail3067
    substr $S10, rx1417_tgt, rx1417_pos, 1
    ne $S10, ucs4:"/", rx1417_fail3067
    add rx1417_pos, 1
    rx1417_cur."!cursor_pass"(rx1417_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1417_cur)
  rx1417_restart3066:
    repr_get_attr_obj rx1417_cstack, rx1417_cur, rx1417_curclass, "$!cstack"
  rx1417_fail3067:
    unless rx1417_bstack, rx1417_done3065
    pop $I19, rx1417_bstack
    if_null rx1417_cstack, rx1417_cstack_done3070
    unless rx1417_cstack, rx1417_cstack_done3070
    dec $I19
    set $P11, rx1417_cstack[$I19]
  rx1417_cstack_done3070:
    pop rx1417_rep, rx1417_bstack
    pop rx1417_pos, rx1417_bstack
    pop $I19, rx1417_bstack
    lt rx1417_pos, -1, rx1417_done3065
    lt rx1417_pos, 0, rx1417_fail3067
    eq $I19, 0, rx1417_fail3067
    nqp_islist $I20, rx1417_cstack
    unless $I20, rx1417_jump3068
    elements $I18, rx1417_bstack
    le $I18, 0, rx1417_cut3069
    dec $I18
    set $I18, rx1417_bstack[$I18]
  rx1417_cut3069:
    assign rx1417_cstack, $I18
  rx1417_jump3068:
    jump $I19
  rx1417_done3065:
    rx1417_cur."!cursor_fail"()
    .return (rx1417_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_164_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1307
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1424_start
    .local string rx1424_tgt
    .local int rx1424_pos
    .local int rx1424_off
    .local int rx1424_eos
    .local int rx1424_rep
    .local pmc rx1424_cur
    .local pmc rx1424_curclass
    .local pmc rx1424_bstack
    .local pmc rx1424_cstack
    rx1424_start = self."!cursor_start_all"()
    set rx1424_cur, rx1424_start[0]
    set rx1424_tgt, rx1424_start[1]
    set rx1424_pos, rx1424_start[2]
    set rx1424_curclass, rx1424_start[3]
    set rx1424_bstack, rx1424_start[4]
    set $I19, rx1424_start[5]
    store_lex unicode:"$\x{a2}", rx1424_cur
    length rx1424_eos, rx1424_tgt
    eq $I19, 1, rx1424_restart3083
    gt rx1424_pos, rx1424_eos, rx1424_fail3084
    repr_get_attr_int $I11, self, rx1424_curclass, "$!from"
    ne $I11, -1, rxscan1425_done3090
    goto rxscan1425_scan3089
  rxscan1425_loop3088:
    inc rx1424_pos
    gt rx1424_pos, rx1424_eos, rx1424_fail3084
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!from", rx1424_pos
  rxscan1425_scan3089:
    nqp_rxmark rx1424_bstack, rxscan1425_loop3088, rx1424_pos, 0
  rxscan1425_done3090:
    ge rx1424_pos, rx1424_eos, rx1424_fail3084
    substr $S11, rx1424_tgt, rx1424_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1424_fail3084
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3084
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3084
    nqp_rxmark rx1424_bstack, rxsubrule1426_pass3091, -1, 0
  rxsubrule1426_pass3091:
    rx1424_cstack = rx1424_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1424_pos, $P11, rx1424_curclass, "$!pos"
    rx1424_cur."!cursor_pass"(rx1424_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1424_cur)
  rx1424_restart3083:
    repr_get_attr_obj rx1424_cstack, rx1424_cur, rx1424_curclass, "$!cstack"
  rx1424_fail3084:
    unless rx1424_bstack, rx1424_done3082
    pop $I19, rx1424_bstack
    if_null rx1424_cstack, rx1424_cstack_done3087
    unless rx1424_cstack, rx1424_cstack_done3087
    dec $I19
    set $P11, rx1424_cstack[$I19]
  rx1424_cstack_done3087:
    pop rx1424_rep, rx1424_bstack
    pop rx1424_pos, rx1424_bstack
    pop $I19, rx1424_bstack
    lt rx1424_pos, -1, rx1424_done3082
    lt rx1424_pos, 0, rx1424_fail3084
    eq $I19, 0, rx1424_fail3084
    nqp_islist $I20, rx1424_cstack
    unless $I20, rx1424_jump3085
    elements $I18, rx1424_bstack
    le $I18, 0, rx1424_cut3086
    dec $I18
    set $I18, rx1424_bstack[$I18]
  rx1424_cut3086:
    assign rx1424_cstack, $I18
  rx1424_jump3085:
    jump $I19
  rx1424_done3082:
    rx1424_cur."!cursor_fail"()
    .return (rx1424_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_165_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1308
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1427_start
    .local string rx1427_tgt
    .local int rx1427_pos
    .local int rx1427_off
    .local int rx1427_eos
    .local int rx1427_rep
    .local pmc rx1427_cur
    .local pmc rx1427_curclass
    .local pmc rx1427_bstack
    .local pmc rx1427_cstack
    rx1427_start = self."!cursor_start_all"()
    set rx1427_cur, rx1427_start[0]
    set rx1427_tgt, rx1427_start[1]
    set rx1427_pos, rx1427_start[2]
    set rx1427_curclass, rx1427_start[3]
    set rx1427_bstack, rx1427_start[4]
    set $I19, rx1427_start[5]
    store_lex unicode:"$\x{a2}", rx1427_cur
    length rx1427_eos, rx1427_tgt
    eq $I19, 1, rx1427_restart3094
    gt rx1427_pos, rx1427_eos, rx1427_fail3095
    repr_get_attr_int $I11, self, rx1427_curclass, "$!from"
    ne $I11, -1, rxscan1428_done3101
    goto rxscan1428_scan3100
  rxscan1428_loop3099:
    inc rx1427_pos
    gt rx1427_pos, rx1427_eos, rx1427_fail3095
    repr_bind_attr_int rx1427_cur, rx1427_curclass, "$!from", rx1427_pos
  rxscan1428_scan3100:
    nqp_rxmark rx1427_bstack, rxscan1428_loop3099, rx1427_pos, 0
  rxscan1428_done3101:
    ge rx1427_pos, rx1427_eos, rx1427_fail3095
    substr $S11, rx1427_tgt, rx1427_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1427_fail3095
    repr_bind_attr_int rx1427_cur, rx1427_curclass, "$!pos", rx1427_pos
    $P11 = rx1427_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1427_curclass, "$!pos"
    lt $I11, 0, rx1427_fail3095
    repr_bind_attr_int rx1427_cur, rx1427_curclass, "$!pos", rx1427_pos
    $P11 = rx1427_cur."block"()
    repr_get_attr_int $I11, $P11, rx1427_curclass, "$!pos"
    lt $I11, 0, rx1427_fail3095
    nqp_rxmark rx1427_bstack, rxsubrule1429_pass3102, -1, 0
  rxsubrule1429_pass3102:
    rx1427_cstack = rx1427_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1427_pos, $P11, rx1427_curclass, "$!pos"
    rx1427_cur."!cursor_pass"(rx1427_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1427_cur)
  rx1427_restart3094:
    repr_get_attr_obj rx1427_cstack, rx1427_cur, rx1427_curclass, "$!cstack"
  rx1427_fail3095:
    unless rx1427_bstack, rx1427_done3093
    pop $I19, rx1427_bstack
    if_null rx1427_cstack, rx1427_cstack_done3098
    unless rx1427_cstack, rx1427_cstack_done3098
    dec $I19
    set $P11, rx1427_cstack[$I19]
  rx1427_cstack_done3098:
    pop rx1427_rep, rx1427_bstack
    pop rx1427_pos, rx1427_bstack
    pop $I19, rx1427_bstack
    lt rx1427_pos, -1, rx1427_done3093
    lt rx1427_pos, 0, rx1427_fail3095
    eq $I19, 0, rx1427_fail3095
    nqp_islist $I20, rx1427_cstack
    unless $I20, rx1427_jump3096
    elements $I18, rx1427_bstack
    le $I18, 0, rx1427_cut3097
    dec $I18
    set $I18, rx1427_bstack[$I18]
  rx1427_cut3097:
    assign rx1427_cstack, $I18
  rx1427_jump3096:
    jump $I19
  rx1427_done3093:
    rx1427_cur."!cursor_fail"()
    .return (rx1427_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_166_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1309
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1430_start
    .local string rx1430_tgt
    .local int rx1430_pos
    .local int rx1430_off
    .local int rx1430_eos
    .local int rx1430_rep
    .local pmc rx1430_cur
    .local pmc rx1430_curclass
    .local pmc rx1430_bstack
    .local pmc rx1430_cstack
    rx1430_start = self."!cursor_start_all"()
    set rx1430_cur, rx1430_start[0]
    set rx1430_tgt, rx1430_start[1]
    set rx1430_pos, rx1430_start[2]
    set rx1430_curclass, rx1430_start[3]
    set rx1430_bstack, rx1430_start[4]
    set $I19, rx1430_start[5]
    store_lex unicode:"$\x{a2}", rx1430_cur
    length rx1430_eos, rx1430_tgt
    eq $I19, 1, rx1430_restart3105
    gt rx1430_pos, rx1430_eos, rx1430_fail3106
    repr_get_attr_int $I11, self, rx1430_curclass, "$!from"
    ne $I11, -1, rxscan1431_done3112
    goto rxscan1431_scan3111
  rxscan1431_loop3110:
    inc rx1430_pos
    gt rx1430_pos, rx1430_eos, rx1430_fail3106
    repr_bind_attr_int rx1430_cur, rx1430_curclass, "$!from", rx1430_pos
  rxscan1431_scan3111:
    nqp_rxmark rx1430_bstack, rxscan1431_loop3110, rx1430_pos, 0
  rxscan1431_done3112:
    ge rx1430_pos, rx1430_eos, rx1430_fail3106
    substr $S11, rx1430_tgt, rx1430_pos, 1
    index $I11, ucs4:"\\", $S11
    lt $I11, 0, rx1430_fail3106
    inc rx1430_pos
    add $I11, rx1430_pos, 1
    gt $I11, rx1430_eos, rx1430_fail3106
    substr $S10, rx1430_tgt, rx1430_pos, 1
    ne $S10, ucs4:"e", rx1430_fail3106
    add rx1430_pos, 1
    repr_bind_attr_int rx1430_cur, rx1430_curclass, "$!pos", rx1430_pos
    $P11 = rx1430_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1430_curclass, "$!pos"
    lt $I11, 0, rx1430_fail3106
    rx1430_cur."!cursor_pass"(rx1430_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1430_cur)
  rx1430_restart3105:
    repr_get_attr_obj rx1430_cstack, rx1430_cur, rx1430_curclass, "$!cstack"
  rx1430_fail3106:
    unless rx1430_bstack, rx1430_done3104
    pop $I19, rx1430_bstack
    if_null rx1430_cstack, rx1430_cstack_done3109
    unless rx1430_cstack, rx1430_cstack_done3109
    dec $I19
    set $P11, rx1430_cstack[$I19]
  rx1430_cstack_done3109:
    pop rx1430_rep, rx1430_bstack
    pop rx1430_pos, rx1430_bstack
    pop $I19, rx1430_bstack
    lt rx1430_pos, -1, rx1430_done3104
    lt rx1430_pos, 0, rx1430_fail3106
    eq $I19, 0, rx1430_fail3106
    nqp_islist $I20, rx1430_cstack
    unless $I20, rx1430_jump3107
    elements $I18, rx1430_bstack
    le $I18, 0, rx1430_cut3108
    dec $I18
    set $I18, rx1430_bstack[$I18]
  rx1430_cut3108:
    assign rx1430_cstack, $I18
  rx1430_jump3107:
    jump $I19
  rx1430_done3104:
    rx1430_cur."!cursor_fail"()
    .return (rx1430_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_167_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1311
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1432_start
    .local string rx1432_tgt
    .local int rx1432_pos
    .local int rx1432_off
    .local int rx1432_eos
    .local int rx1432_rep
    .local pmc rx1432_cur
    .local pmc rx1432_curclass
    .local pmc rx1432_bstack
    .local pmc rx1432_cstack
    rx1432_start = self."!cursor_start_all"()
    set rx1432_cur, rx1432_start[0]
    set rx1432_tgt, rx1432_start[1]
    set rx1432_pos, rx1432_start[2]
    set rx1432_curclass, rx1432_start[3]
    set rx1432_bstack, rx1432_start[4]
    set $I19, rx1432_start[5]
    store_lex unicode:"$\x{a2}", rx1432_cur
    length rx1432_eos, rx1432_tgt
    eq $I19, 1, rx1432_restart3115
    gt rx1432_pos, rx1432_eos, rx1432_fail3116
    repr_get_attr_int $I11, self, rx1432_curclass, "$!from"
    ne $I11, -1, rxscan1433_done3122
    goto rxscan1433_scan3121
  rxscan1433_loop3120:
    inc rx1432_pos
    gt rx1432_pos, rx1432_eos, rx1432_fail3116
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!from", rx1432_pos
  rxscan1433_scan3121:
    nqp_rxmark rx1432_bstack, rxscan1433_loop3120, rx1432_pos, 0
  rxscan1433_done3122:
    add $I11, rx1432_pos, 1
    gt $I11, rx1432_eos, rx1432_fail3116
    substr $S10, rx1432_tgt, rx1432_pos, 1
    ne $S10, ucs4:"(", rx1432_fail3116
    add rx1432_pos, 1
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!pos", rx1432_pos
    $P11 = rx1432_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1432_curclass, "$!pos"
    lt $I11, 0, rx1432_fail3116
    repr_get_attr_int rx1432_pos, $P11, rx1432_curclass, "$!pos"
    nqp_rxmark rx1432_bstack, rxquantr1435_done3125, rx1432_pos, 0
  rxquantr1435_loop3124:
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!pos", rx1432_pos
    $P11 = rx1432_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1432_curclass, "$!pos"
    lt $I11, 0, rx1432_fail3116
    goto rxsubrule1436_pass3126
  rxsubrule1436_back3127:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1432_curclass, "$!pos"
    lt $I11, 0, rx1432_fail3116
  rxsubrule1436_pass3126:
    rx1432_cstack = rx1432_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1436_back3127
    push rx1432_bstack, $I11
    push rx1432_bstack, 0
    push rx1432_bstack, rx1432_pos
    elements $I11, rx1432_cstack
    push rx1432_bstack, $I11
    repr_get_attr_int rx1432_pos, $P11, rx1432_curclass, "$!pos"
    nqp_rxpeek $I19, rx1432_bstack, rxquantr1435_done3125
    inc $I19
    inc $I19
    set rx1432_rep, rx1432_bstack[$I19]
    nqp_rxcommit rx1432_bstack, rxquantr1435_done3125
    inc rx1432_rep
  rxquantr1435_done3125:
    add $I11, rx1432_pos, 1
    gt $I11, rx1432_eos, rx1432_fail3116
    substr $S10, rx1432_tgt, rx1432_pos, 1
    ne $S10, ucs4:")", rx1432_fail3116
    add rx1432_pos, 1
    rx1432_cur."!cursor_pass"(rx1432_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1432_cur)
  rx1432_restart3115:
    repr_get_attr_obj rx1432_cstack, rx1432_cur, rx1432_curclass, "$!cstack"
  rx1432_fail3116:
    unless rx1432_bstack, rx1432_done3114
    pop $I19, rx1432_bstack
    if_null rx1432_cstack, rx1432_cstack_done3119
    unless rx1432_cstack, rx1432_cstack_done3119
    dec $I19
    set $P11, rx1432_cstack[$I19]
  rx1432_cstack_done3119:
    pop rx1432_rep, rx1432_bstack
    pop rx1432_pos, rx1432_bstack
    pop $I19, rx1432_bstack
    lt rx1432_pos, -1, rx1432_done3114
    lt rx1432_pos, 0, rx1432_fail3116
    eq $I19, 0, rx1432_fail3116
    nqp_islist $I20, rx1432_cstack
    unless $I20, rx1432_jump3117
    elements $I18, rx1432_bstack
    le $I18, 0, rx1432_cut3118
    dec $I18
    set $I18, rx1432_bstack[$I18]
  rx1432_cut3118:
    assign rx1432_cstack, $I18
  rx1432_jump3117:
    jump $I19
  rx1432_done3114:
    rx1432_cur."!cursor_fail"()
    .return (rx1432_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_168_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1312
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1437_start
    .local string rx1437_tgt
    .local int rx1437_pos
    .local int rx1437_off
    .local int rx1437_eos
    .local int rx1437_rep
    .local pmc rx1437_cur
    .local pmc rx1437_curclass
    .local pmc rx1437_bstack
    .local pmc rx1437_cstack
    rx1437_start = self."!cursor_start_all"()
    set rx1437_cur, rx1437_start[0]
    set rx1437_tgt, rx1437_start[1]
    set rx1437_pos, rx1437_start[2]
    set rx1437_curclass, rx1437_start[3]
    set rx1437_bstack, rx1437_start[4]
    set $I19, rx1437_start[5]
    store_lex unicode:"$\x{a2}", rx1437_cur
    length rx1437_eos, rx1437_tgt
    eq $I19, 1, rx1437_restart3130
    gt rx1437_pos, rx1437_eos, rx1437_fail3131
    repr_get_attr_int $I11, self, rx1437_curclass, "$!from"
    ne $I11, -1, rxscan1438_done3137
    goto rxscan1438_scan3136
  rxscan1438_loop3135:
    inc rx1437_pos
    gt rx1437_pos, rx1437_eos, rx1437_fail3131
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!from", rx1437_pos
  rxscan1438_scan3136:
    nqp_rxmark rx1437_bstack, rxscan1438_loop3135, rx1437_pos, 0
  rxscan1438_done3137:
    add $I11, rx1437_pos, 1
    gt $I11, rx1437_eos, rx1437_fail3131
    substr $S10, rx1437_tgt, rx1437_pos, 1
    ne $S10, ucs4:"[", rx1437_fail3131
    add rx1437_pos, 1
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!pos", rx1437_pos
    $P11 = rx1437_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1437_curclass, "$!pos"
    lt $I11, 0, rx1437_fail3131
    repr_get_attr_int rx1437_pos, $P11, rx1437_curclass, "$!pos"
    nqp_rxmark rx1437_bstack, rxquantr1440_done3140, rx1437_pos, 0
  rxquantr1440_loop3139:
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!pos", rx1437_pos
    $P11 = rx1437_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1437_curclass, "$!pos"
    lt $I11, 0, rx1437_fail3131
    goto rxsubrule1441_pass3141
  rxsubrule1441_back3142:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1437_curclass, "$!pos"
    lt $I11, 0, rx1437_fail3131
  rxsubrule1441_pass3141:
    rx1437_cstack = rx1437_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1441_back3142
    push rx1437_bstack, $I11
    push rx1437_bstack, 0
    push rx1437_bstack, rx1437_pos
    elements $I11, rx1437_cstack
    push rx1437_bstack, $I11
    repr_get_attr_int rx1437_pos, $P11, rx1437_curclass, "$!pos"
    nqp_rxpeek $I19, rx1437_bstack, rxquantr1440_done3140
    inc $I19
    inc $I19
    set rx1437_rep, rx1437_bstack[$I19]
    nqp_rxcommit rx1437_bstack, rxquantr1440_done3140
    inc rx1437_rep
  rxquantr1440_done3140:
    add $I11, rx1437_pos, 1
    gt $I11, rx1437_eos, rx1437_fail3131
    substr $S10, rx1437_tgt, rx1437_pos, 1
    ne $S10, ucs4:"]", rx1437_fail3131
    add rx1437_pos, 1
    rx1437_cur."!cursor_pass"(rx1437_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1437_cur)
  rx1437_restart3130:
    repr_get_attr_obj rx1437_cstack, rx1437_cur, rx1437_curclass, "$!cstack"
  rx1437_fail3131:
    unless rx1437_bstack, rx1437_done3129
    pop $I19, rx1437_bstack
    if_null rx1437_cstack, rx1437_cstack_done3134
    unless rx1437_cstack, rx1437_cstack_done3134
    dec $I19
    set $P11, rx1437_cstack[$I19]
  rx1437_cstack_done3134:
    pop rx1437_rep, rx1437_bstack
    pop rx1437_pos, rx1437_bstack
    pop $I19, rx1437_bstack
    lt rx1437_pos, -1, rx1437_done3129
    lt rx1437_pos, 0, rx1437_fail3131
    eq $I19, 0, rx1437_fail3131
    nqp_islist $I20, rx1437_cstack
    unless $I20, rx1437_jump3132
    elements $I18, rx1437_bstack
    le $I18, 0, rx1437_cut3133
    dec $I18
    set $I18, rx1437_bstack[$I18]
  rx1437_cut3133:
    assign rx1437_cstack, $I18
  rx1437_jump3132:
    jump $I19
  rx1437_done3129:
    rx1437_cur."!cursor_fail"()
    .return (rx1437_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_169_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1313
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1442_start
    .local string rx1442_tgt
    .local int rx1442_pos
    .local int rx1442_off
    .local int rx1442_eos
    .local int rx1442_rep
    .local pmc rx1442_cur
    .local pmc rx1442_curclass
    .local pmc rx1442_bstack
    .local pmc rx1442_cstack
    rx1442_start = self."!cursor_start_all"()
    set rx1442_cur, rx1442_start[0]
    set rx1442_tgt, rx1442_start[1]
    set rx1442_pos, rx1442_start[2]
    set rx1442_curclass, rx1442_start[3]
    set rx1442_bstack, rx1442_start[4]
    set $I19, rx1442_start[5]
    store_lex unicode:"$\x{a2}", rx1442_cur
    length rx1442_eos, rx1442_tgt
    eq $I19, 1, rx1442_restart3145
    gt rx1442_pos, rx1442_eos, rx1442_fail3146
    repr_get_attr_int $I11, self, rx1442_curclass, "$!from"
    ne $I11, -1, rxscan1443_done3152
    goto rxscan1443_scan3151
  rxscan1443_loop3150:
    inc rx1442_pos
    gt rx1442_pos, rx1442_eos, rx1442_fail3146
    repr_bind_attr_int rx1442_cur, rx1442_curclass, "$!from", rx1442_pos
  rxscan1443_scan3151:
    nqp_rxmark rx1442_bstack, rxscan1443_loop3150, rx1442_pos, 0
  rxscan1443_done3152:
    ge rx1442_pos, rx1442_eos, rx1442_fail3146
    substr $S11, rx1442_tgt, rx1442_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1442_fail3146
    repr_bind_attr_int rx1442_cur, rx1442_curclass, "$!pos", rx1442_pos
    $P11 = rx1442_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1442_curclass, "$!pos"
    lt $I11, 0, rx1442_fail3146
    nqp_rxmark rx1442_bstack, rxsubrule1444_pass3153, -1, 0
  rxsubrule1444_pass3153:
    rx1442_cstack = rx1442_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1442_pos, $P11, rx1442_curclass, "$!pos"
    rx1442_cur."!cursor_pass"(rx1442_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1442_cur)
  rx1442_restart3145:
    repr_get_attr_obj rx1442_cstack, rx1442_cur, rx1442_curclass, "$!cstack"
  rx1442_fail3146:
    unless rx1442_bstack, rx1442_done3144
    pop $I19, rx1442_bstack
    if_null rx1442_cstack, rx1442_cstack_done3149
    unless rx1442_cstack, rx1442_cstack_done3149
    dec $I19
    set $P11, rx1442_cstack[$I19]
  rx1442_cstack_done3149:
    pop rx1442_rep, rx1442_bstack
    pop rx1442_pos, rx1442_bstack
    pop $I19, rx1442_bstack
    lt rx1442_pos, -1, rx1442_done3144
    lt rx1442_pos, 0, rx1442_fail3146
    eq $I19, 0, rx1442_fail3146
    nqp_islist $I20, rx1442_cstack
    unless $I20, rx1442_jump3147
    elements $I18, rx1442_bstack
    le $I18, 0, rx1442_cut3148
    dec $I18
    set $I18, rx1442_bstack[$I18]
  rx1442_cut3148:
    assign rx1442_cstack, $I18
  rx1442_jump3147:
    jump $I19
  rx1442_done3144:
    rx1442_cur."!cursor_fail"()
    .return (rx1442_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_170_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1314
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1445_start
    .local string rx1445_tgt
    .local int rx1445_pos
    .local int rx1445_off
    .local int rx1445_eos
    .local int rx1445_rep
    .local pmc rx1445_cur
    .local pmc rx1445_curclass
    .local pmc rx1445_bstack
    .local pmc rx1445_cstack
    rx1445_start = self."!cursor_start_all"()
    set rx1445_cur, rx1445_start[0]
    set rx1445_tgt, rx1445_start[1]
    set rx1445_pos, rx1445_start[2]
    set rx1445_curclass, rx1445_start[3]
    set rx1445_bstack, rx1445_start[4]
    set $I19, rx1445_start[5]
    store_lex unicode:"$\x{a2}", rx1445_cur
    length rx1445_eos, rx1445_tgt
    eq $I19, 1, rx1445_restart3156
    gt rx1445_pos, rx1445_eos, rx1445_fail3157
    repr_get_attr_int $I11, self, rx1445_curclass, "$!from"
    ne $I11, -1, rxscan1446_done3163
    goto rxscan1446_scan3162
  rxscan1446_loop3161:
    inc rx1445_pos
    gt rx1445_pos, rx1445_eos, rx1445_fail3157
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!from", rx1445_pos
  rxscan1446_scan3162:
    nqp_rxmark rx1445_bstack, rxscan1446_loop3161, rx1445_pos, 0
  rxscan1446_done3163:
    ge rx1445_pos, rx1445_eos, rx1445_fail3157
    substr $S11, rx1445_tgt, rx1445_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1445_fail3157
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1445_curclass, "$!pos"
    lt $I11, 0, rx1445_fail3157
    nqp_rxmark rx1445_bstack, rxsubrule1447_pass3164, -1, 0
  rxsubrule1447_pass3164:
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1445_pos, $P11, rx1445_curclass, "$!pos"
    rx1445_cur."!cursor_pass"(rx1445_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1445_cur)
  rx1445_restart3156:
    repr_get_attr_obj rx1445_cstack, rx1445_cur, rx1445_curclass, "$!cstack"
  rx1445_fail3157:
    unless rx1445_bstack, rx1445_done3155
    pop $I19, rx1445_bstack
    if_null rx1445_cstack, rx1445_cstack_done3160
    unless rx1445_cstack, rx1445_cstack_done3160
    dec $I19
    set $P11, rx1445_cstack[$I19]
  rx1445_cstack_done3160:
    pop rx1445_rep, rx1445_bstack
    pop rx1445_pos, rx1445_bstack
    pop $I19, rx1445_bstack
    lt rx1445_pos, -1, rx1445_done3155
    lt rx1445_pos, 0, rx1445_fail3157
    eq $I19, 0, rx1445_fail3157
    nqp_islist $I20, rx1445_cstack
    unless $I20, rx1445_jump3158
    elements $I18, rx1445_bstack
    le $I18, 0, rx1445_cut3159
    dec $I18
    set $I18, rx1445_bstack[$I18]
  rx1445_cut3159:
    assign rx1445_cstack, $I18
  rx1445_jump3158:
    jump $I19
  rx1445_done3155:
    rx1445_cur."!cursor_fail"()
    .return (rx1445_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_171_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1315
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1448_start
    .local string rx1448_tgt
    .local int rx1448_pos
    .local int rx1448_off
    .local int rx1448_eos
    .local int rx1448_rep
    .local pmc rx1448_cur
    .local pmc rx1448_curclass
    .local pmc rx1448_bstack
    .local pmc rx1448_cstack
    rx1448_start = self."!cursor_start_all"()
    set rx1448_cur, rx1448_start[0]
    set rx1448_tgt, rx1448_start[1]
    set rx1448_pos, rx1448_start[2]
    set rx1448_curclass, rx1448_start[3]
    set rx1448_bstack, rx1448_start[4]
    set $I19, rx1448_start[5]
    store_lex unicode:"$\x{a2}", rx1448_cur
    length rx1448_eos, rx1448_tgt
    eq $I19, 1, rx1448_restart3167
    gt rx1448_pos, rx1448_eos, rx1448_fail3168
    repr_get_attr_int $I11, self, rx1448_curclass, "$!from"
    ne $I11, -1, rxscan1449_done3174
    goto rxscan1449_scan3173
  rxscan1449_loop3172:
    inc rx1448_pos
    gt rx1448_pos, rx1448_eos, rx1448_fail3168
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!from", rx1448_pos
  rxscan1449_scan3173:
    nqp_rxmark rx1448_bstack, rxscan1449_loop3172, rx1448_pos, 0
  rxscan1449_done3174:
    ge rx1448_pos, rx1448_eos, rx1448_fail3168
    substr $S11, rx1448_tgt, rx1448_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1448_fail3168
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!pos", rx1448_pos
    $P11 = rx1448_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1448_curclass, "$!pos"
    lt $I11, 0, rx1448_fail3168
    nqp_rxmark rx1448_bstack, rxsubrule1450_pass3175, -1, 0
  rxsubrule1450_pass3175:
    rx1448_cstack = rx1448_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1448_pos, $P11, rx1448_curclass, "$!pos"
    rx1448_cur."!cursor_pass"(rx1448_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1448_cur)
  rx1448_restart3167:
    repr_get_attr_obj rx1448_cstack, rx1448_cur, rx1448_curclass, "$!cstack"
  rx1448_fail3168:
    unless rx1448_bstack, rx1448_done3166
    pop $I19, rx1448_bstack
    if_null rx1448_cstack, rx1448_cstack_done3171
    unless rx1448_cstack, rx1448_cstack_done3171
    dec $I19
    set $P11, rx1448_cstack[$I19]
  rx1448_cstack_done3171:
    pop rx1448_rep, rx1448_bstack
    pop rx1448_pos, rx1448_bstack
    pop $I19, rx1448_bstack
    lt rx1448_pos, -1, rx1448_done3166
    lt rx1448_pos, 0, rx1448_fail3168
    eq $I19, 0, rx1448_fail3168
    nqp_islist $I20, rx1448_cstack
    unless $I20, rx1448_jump3169
    elements $I18, rx1448_bstack
    le $I18, 0, rx1448_cut3170
    dec $I18
    set $I18, rx1448_bstack[$I18]
  rx1448_cut3170:
    assign rx1448_cstack, $I18
  rx1448_jump3169:
    jump $I19
  rx1448_done3166:
    rx1448_cur."!cursor_fail"()
    .return (rx1448_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_172_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1317
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1451_start
    .local string rx1451_tgt
    .local int rx1451_pos
    .local int rx1451_off
    .local int rx1451_eos
    .local int rx1451_rep
    .local pmc rx1451_cur
    .local pmc rx1451_curclass
    .local pmc rx1451_bstack
    .local pmc rx1451_cstack
    rx1451_start = self."!cursor_start_all"()
    set rx1451_cur, rx1451_start[0]
    set rx1451_tgt, rx1451_start[1]
    set rx1451_pos, rx1451_start[2]
    set rx1451_curclass, rx1451_start[3]
    set rx1451_bstack, rx1451_start[4]
    set $I19, rx1451_start[5]
    store_lex unicode:"$\x{a2}", rx1451_cur
    length rx1451_eos, rx1451_tgt
    eq $I19, 1, rx1451_restart3178
    gt rx1451_pos, rx1451_eos, rx1451_fail3179
    repr_get_attr_int $I11, self, rx1451_curclass, "$!from"
    ne $I11, -1, rxscan1452_done3185
    goto rxscan1452_scan3184
  rxscan1452_loop3183:
    inc rx1451_pos
    gt rx1451_pos, rx1451_eos, rx1451_fail3179
    repr_bind_attr_int rx1451_cur, rx1451_curclass, "$!from", rx1451_pos
  rxscan1452_scan3184:
    nqp_rxmark rx1451_bstack, rxscan1452_loop3183, rx1451_pos, 0
  rxscan1452_done3185:
    repr_bind_attr_int rx1451_cur, rx1451_curclass, "$!pos", rx1451_pos
    $P11 = rx1451_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1451_curclass, "$!pos"
    lt $I11, 0, rx1451_fail3179
    repr_get_attr_int rx1451_pos, $P11, rx1451_curclass, "$!pos"
    repr_bind_attr_int rx1451_cur, rx1451_curclass, "$!pos", rx1451_pos
    $P11 = rx1451_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1451_curclass, "$!pos"
    lt $I11, 0, rx1451_fail3179
    nqp_rxmark rx1451_bstack, rxsubrule1454_pass3187, -1, 0
  rxsubrule1454_pass3187:
    rx1451_cstack = rx1451_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1451_pos, $P11, rx1451_curclass, "$!pos"
    repr_bind_attr_int rx1451_cur, rx1451_curclass, "$!pos", rx1451_pos
    $P11 = rx1451_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1451_curclass, "$!pos"
    lt $I11, 0, rx1451_fail3179
    repr_get_attr_int rx1451_pos, $P11, rx1451_curclass, "$!pos"
    rx1451_cur."!cursor_pass"(rx1451_pos, "semilist", 'backtrack'=>1)
    .return (rx1451_cur)
  rx1451_restart3178:
    repr_get_attr_obj rx1451_cstack, rx1451_cur, rx1451_curclass, "$!cstack"
  rx1451_fail3179:
    unless rx1451_bstack, rx1451_done3177
    pop $I19, rx1451_bstack
    if_null rx1451_cstack, rx1451_cstack_done3182
    unless rx1451_cstack, rx1451_cstack_done3182
    dec $I19
    set $P11, rx1451_cstack[$I19]
  rx1451_cstack_done3182:
    pop rx1451_rep, rx1451_bstack
    pop rx1451_pos, rx1451_bstack
    pop $I19, rx1451_bstack
    lt rx1451_pos, -1, rx1451_done3177
    lt rx1451_pos, 0, rx1451_fail3179
    eq $I19, 0, rx1451_fail3179
    nqp_islist $I20, rx1451_cstack
    unless $I20, rx1451_jump3180
    elements $I18, rx1451_bstack
    le $I18, 0, rx1451_cut3181
    dec $I18
    set $I18, rx1451_bstack[$I18]
  rx1451_cut3181:
    assign rx1451_cstack, $I18
  rx1451_jump3180:
    jump $I19
  rx1451_done3177:
    rx1451_cur."!cursor_fail"()
    .return (rx1451_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_173_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1340
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1456_start
    .local string rx1456_tgt
    .local int rx1456_pos
    .local int rx1456_off
    .local int rx1456_eos
    .local int rx1456_rep
    .local pmc rx1456_cur
    .local pmc rx1456_curclass
    .local pmc rx1456_bstack
    .local pmc rx1456_cstack
    rx1456_start = self."!cursor_start_all"()
    set rx1456_cur, rx1456_start[0]
    set rx1456_tgt, rx1456_start[1]
    set rx1456_pos, rx1456_start[2]
    set rx1456_curclass, rx1456_start[3]
    set rx1456_bstack, rx1456_start[4]
    set $I19, rx1456_start[5]
    store_lex unicode:"$\x{a2}", rx1456_cur
    length rx1456_eos, rx1456_tgt
    eq $I19, 1, rx1456_restart3191
    gt rx1456_pos, rx1456_eos, rx1456_fail3192
    repr_get_attr_int $I11, self, rx1456_curclass, "$!from"
    ne $I11, -1, rxscan1457_done3198
    goto rxscan1457_scan3197
  rxscan1457_loop3196:
    inc rx1456_pos
    gt rx1456_pos, rx1456_eos, rx1456_fail3192
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!from", rx1456_pos
  rxscan1457_scan3197:
    nqp_rxmark rx1456_bstack, rxscan1457_loop3196, rx1456_pos, 0
  rxscan1457_done3198:
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!pos", rx1456_pos
    $P11 = rx1456_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1456_curclass, "$!pos"
    ge $I11, 0, rx1456_fail3192
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!pos", rx1456_pos
    $P11 = rx1456_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1456_curclass, "$!pos"
    lt $I11, 0, rx1456_fail3192
    nqp_rxmark rx1456_bstack, rxsubrule1458_pass3199, -1, 0
  rxsubrule1458_pass3199:
    rx1456_cstack = rx1456_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1456_pos, $P11, rx1456_curclass, "$!pos"
    rx1456_cur."!cursor_pass"(rx1456_pos, "infixish", 'backtrack'=>1)
    .return (rx1456_cur)
  rx1456_restart3191:
    repr_get_attr_obj rx1456_cstack, rx1456_cur, rx1456_curclass, "$!cstack"
  rx1456_fail3192:
    unless rx1456_bstack, rx1456_done3190
    pop $I19, rx1456_bstack
    if_null rx1456_cstack, rx1456_cstack_done3195
    unless rx1456_cstack, rx1456_cstack_done3195
    dec $I19
    set $P11, rx1456_cstack[$I19]
  rx1456_cstack_done3195:
    pop rx1456_rep, rx1456_bstack
    pop rx1456_pos, rx1456_bstack
    pop $I19, rx1456_bstack
    lt rx1456_pos, -1, rx1456_done3190
    lt rx1456_pos, 0, rx1456_fail3192
    eq $I19, 0, rx1456_fail3192
    nqp_islist $I20, rx1456_cstack
    unless $I20, rx1456_jump3193
    elements $I18, rx1456_bstack
    le $I18, 0, rx1456_cut3194
    dec $I18
    set $I18, rx1456_bstack[$I18]
  rx1456_cut3194:
    assign rx1456_cstack, $I18
  rx1456_jump3193:
    jump $I19
  rx1456_done3190:
    rx1456_cur."!cursor_fail"()
    .return (rx1456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_174_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1341
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1459_start
    .local string rx1459_tgt
    .local int rx1459_pos
    .local int rx1459_off
    .local int rx1459_eos
    .local int rx1459_rep
    .local pmc rx1459_cur
    .local pmc rx1459_curclass
    .local pmc rx1459_bstack
    .local pmc rx1459_cstack
    rx1459_start = self."!cursor_start_all"()
    set rx1459_cur, rx1459_start[0]
    set rx1459_tgt, rx1459_start[1]
    set rx1459_pos, rx1459_start[2]
    set rx1459_curclass, rx1459_start[3]
    set rx1459_bstack, rx1459_start[4]
    set $I19, rx1459_start[5]
    store_lex unicode:"$\x{a2}", rx1459_cur
    length rx1459_eos, rx1459_tgt
    eq $I19, 1, rx1459_restart3202
    gt rx1459_pos, rx1459_eos, rx1459_fail3203
    repr_get_attr_int $I11, self, rx1459_curclass, "$!from"
    ne $I11, -1, rxscan1460_done3209
    goto rxscan1460_scan3208
  rxscan1460_loop3207:
    inc rx1459_pos
    gt rx1459_pos, rx1459_eos, rx1459_fail3203
    repr_bind_attr_int rx1459_cur, rx1459_curclass, "$!from", rx1459_pos
  rxscan1460_scan3208:
    nqp_rxmark rx1459_bstack, rxscan1460_loop3207, rx1459_pos, 0
  rxscan1460_done3209:
    repr_bind_attr_int rx1459_cur, rx1459_curclass, "$!pos", rx1459_pos
    $P11 = rx1459_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1459_curclass, "$!pos"
    lt $I11, 0, rx1459_fail3203
    rx1459_cur."!cursor_pass"(rx1459_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1459_cur)
  rx1459_restart3202:
    repr_get_attr_obj rx1459_cstack, rx1459_cur, rx1459_curclass, "$!cstack"
  rx1459_fail3203:
    unless rx1459_bstack, rx1459_done3201
    pop $I19, rx1459_bstack
    if_null rx1459_cstack, rx1459_cstack_done3206
    unless rx1459_cstack, rx1459_cstack_done3206
    dec $I19
    set $P11, rx1459_cstack[$I19]
  rx1459_cstack_done3206:
    pop rx1459_rep, rx1459_bstack
    pop rx1459_pos, rx1459_bstack
    pop $I19, rx1459_bstack
    lt rx1459_pos, -1, rx1459_done3201
    lt rx1459_pos, 0, rx1459_fail3203
    eq $I19, 0, rx1459_fail3203
    nqp_islist $I20, rx1459_cstack
    unless $I20, rx1459_jump3204
    elements $I18, rx1459_bstack
    le $I18, 0, rx1459_cut3205
    dec $I18
    set $I18, rx1459_bstack[$I18]
  rx1459_cut3205:
    assign rx1459_cstack, $I18
  rx1459_jump3204:
    jump $I19
  rx1459_done3201:
    rx1459_cur."!cursor_fail"()
    .return (rx1459_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_175_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1343
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1461_start
    .local string rx1461_tgt
    .local int rx1461_pos
    .local int rx1461_off
    .local int rx1461_eos
    .local int rx1461_rep
    .local pmc rx1461_cur
    .local pmc rx1461_curclass
    .local pmc rx1461_bstack
    .local pmc rx1461_cstack
    rx1461_start = self."!cursor_start_all"()
    set rx1461_cur, rx1461_start[0]
    set rx1461_tgt, rx1461_start[1]
    set rx1461_pos, rx1461_start[2]
    set rx1461_curclass, rx1461_start[3]
    set rx1461_bstack, rx1461_start[4]
    set $I19, rx1461_start[5]
    store_lex unicode:"$\x{a2}", rx1461_cur
    length rx1461_eos, rx1461_tgt
    eq $I19, 1, rx1461_restart3212
    gt rx1461_pos, rx1461_eos, rx1461_fail3213
    repr_get_attr_int $I11, self, rx1461_curclass, "$!from"
    ne $I11, -1, rxscan1462_done3219
    goto rxscan1462_scan3218
  rxscan1462_loop3217:
    inc rx1461_pos
    gt rx1461_pos, rx1461_eos, rx1461_fail3213
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!from", rx1461_pos
  rxscan1462_scan3218:
    nqp_rxmark rx1461_bstack, rxscan1462_loop3217, rx1461_pos, 0
  rxscan1462_done3219:
    add $I11, rx1461_pos, 1
    gt $I11, rx1461_eos, rx1461_fail3213
    substr $S10, rx1461_tgt, rx1461_pos, 1
    ne $S10, ucs4:"[", rx1461_fail3213
    add rx1461_pos, 1
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3213
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3213
    nqp_rxmark rx1461_bstack, rxsubrule1464_pass3221, -1, 0
  rxsubrule1464_pass3221:
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    add $I11, rx1461_pos, 1
    gt $I11, rx1461_eos, rx1461_fail3213
    substr $S10, rx1461_tgt, rx1461_pos, 1
    ne $S10, ucs4:"]", rx1461_fail3213
    add rx1461_pos, 1
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3213
    nqp_rxmark rx1461_bstack, rxsubrule1465_pass3222, -1, 0
  rxsubrule1465_pass3222:
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    rx1461_cur."!cursor_pass"(rx1461_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1461_cur)
  rx1461_restart3212:
    repr_get_attr_obj rx1461_cstack, rx1461_cur, rx1461_curclass, "$!cstack"
  rx1461_fail3213:
    unless rx1461_bstack, rx1461_done3211
    pop $I19, rx1461_bstack
    if_null rx1461_cstack, rx1461_cstack_done3216
    unless rx1461_cstack, rx1461_cstack_done3216
    dec $I19
    set $P11, rx1461_cstack[$I19]
  rx1461_cstack_done3216:
    pop rx1461_rep, rx1461_bstack
    pop rx1461_pos, rx1461_bstack
    pop $I19, rx1461_bstack
    lt rx1461_pos, -1, rx1461_done3211
    lt rx1461_pos, 0, rx1461_fail3213
    eq $I19, 0, rx1461_fail3213
    nqp_islist $I20, rx1461_cstack
    unless $I20, rx1461_jump3214
    elements $I18, rx1461_bstack
    le $I18, 0, rx1461_cut3215
    dec $I18
    set $I18, rx1461_bstack[$I18]
  rx1461_cut3215:
    assign rx1461_cstack, $I18
  rx1461_jump3214:
    jump $I19
  rx1461_done3211:
    rx1461_cur."!cursor_fail"()
    .return (rx1461_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_176_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1348
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1466_start
    .local string rx1466_tgt
    .local int rx1466_pos
    .local int rx1466_off
    .local int rx1466_eos
    .local int rx1466_rep
    .local pmc rx1466_cur
    .local pmc rx1466_curclass
    .local pmc rx1466_bstack
    .local pmc rx1466_cstack
    rx1466_start = self."!cursor_start_all"()
    set rx1466_cur, rx1466_start[0]
    set rx1466_tgt, rx1466_start[1]
    set rx1466_pos, rx1466_start[2]
    set rx1466_curclass, rx1466_start[3]
    set rx1466_bstack, rx1466_start[4]
    set $I19, rx1466_start[5]
    store_lex unicode:"$\x{a2}", rx1466_cur
    length rx1466_eos, rx1466_tgt
    eq $I19, 1, rx1466_restart3225
    gt rx1466_pos, rx1466_eos, rx1466_fail3226
    repr_get_attr_int $I11, self, rx1466_curclass, "$!from"
    ne $I11, -1, rxscan1467_done3232
    goto rxscan1467_scan3231
  rxscan1467_loop3230:
    inc rx1466_pos
    gt rx1466_pos, rx1466_eos, rx1466_fail3226
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!from", rx1466_pos
  rxscan1467_scan3231:
    nqp_rxmark rx1466_bstack, rxscan1467_loop3230, rx1466_pos, 0
  rxscan1467_done3232:
    add $I11, rx1466_pos, 1
    gt $I11, rx1466_eos, rx1466_fail3226
    substr $S10, rx1466_tgt, rx1466_pos, 1
    ne $S10, ucs4:"{", rx1466_fail3226
    add rx1466_pos, 1
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!pos", rx1466_pos
    $P11 = rx1466_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1466_curclass, "$!pos"
    lt $I11, 0, rx1466_fail3226
    repr_get_attr_int rx1466_pos, $P11, rx1466_curclass, "$!pos"
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!pos", rx1466_pos
    $P11 = rx1466_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1466_curclass, "$!pos"
    lt $I11, 0, rx1466_fail3226
    nqp_rxmark rx1466_bstack, rxsubrule1469_pass3234, -1, 0
  rxsubrule1469_pass3234:
    rx1466_cstack = rx1466_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1466_pos, $P11, rx1466_curclass, "$!pos"
    add $I11, rx1466_pos, 1
    gt $I11, rx1466_eos, rx1466_fail3226
    substr $S10, rx1466_tgt, rx1466_pos, 1
    ne $S10, ucs4:"}", rx1466_fail3226
    add rx1466_pos, 1
    repr_bind_attr_int rx1466_cur, rx1466_curclass, "$!pos", rx1466_pos
    $P11 = rx1466_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1466_curclass, "$!pos"
    lt $I11, 0, rx1466_fail3226
    nqp_rxmark rx1466_bstack, rxsubrule1470_pass3235, -1, 0
  rxsubrule1470_pass3235:
    rx1466_cstack = rx1466_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1466_pos, $P11, rx1466_curclass, "$!pos"
    rx1466_cur."!cursor_pass"(rx1466_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1466_cur)
  rx1466_restart3225:
    repr_get_attr_obj rx1466_cstack, rx1466_cur, rx1466_curclass, "$!cstack"
  rx1466_fail3226:
    unless rx1466_bstack, rx1466_done3224
    pop $I19, rx1466_bstack
    if_null rx1466_cstack, rx1466_cstack_done3229
    unless rx1466_cstack, rx1466_cstack_done3229
    dec $I19
    set $P11, rx1466_cstack[$I19]
  rx1466_cstack_done3229:
    pop rx1466_rep, rx1466_bstack
    pop rx1466_pos, rx1466_bstack
    pop $I19, rx1466_bstack
    lt rx1466_pos, -1, rx1466_done3224
    lt rx1466_pos, 0, rx1466_fail3226
    eq $I19, 0, rx1466_fail3226
    nqp_islist $I20, rx1466_cstack
    unless $I20, rx1466_jump3227
    elements $I18, rx1466_bstack
    le $I18, 0, rx1466_cut3228
    dec $I18
    set $I18, rx1466_bstack[$I18]
  rx1466_cut3228:
    assign rx1466_cstack, $I18
  rx1466_jump3227:
    jump $I19
  rx1466_done3224:
    rx1466_cur."!cursor_fail"()
    .return (rx1466_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_177_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1353
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1471_start
    .local string rx1471_tgt
    .local int rx1471_pos
    .local int rx1471_off
    .local int rx1471_eos
    .local int rx1471_rep
    .local pmc rx1471_cur
    .local pmc rx1471_curclass
    .local pmc rx1471_bstack
    .local pmc rx1471_cstack
    rx1471_start = self."!cursor_start_all"()
    set rx1471_cur, rx1471_start[0]
    set rx1471_tgt, rx1471_start[1]
    set rx1471_pos, rx1471_start[2]
    set rx1471_curclass, rx1471_start[3]
    set rx1471_bstack, rx1471_start[4]
    set $I19, rx1471_start[5]
    store_lex unicode:"$\x{a2}", rx1471_cur
    length rx1471_eos, rx1471_tgt
    eq $I19, 1, rx1471_restart3238
    gt rx1471_pos, rx1471_eos, rx1471_fail3239
    repr_get_attr_int $I11, self, rx1471_curclass, "$!from"
    ne $I11, -1, rxscan1472_done3245
    goto rxscan1472_scan3244
  rxscan1472_loop3243:
    inc rx1471_pos
    gt rx1471_pos, rx1471_eos, rx1471_fail3239
    repr_bind_attr_int rx1471_cur, rx1471_curclass, "$!from", rx1471_pos
  rxscan1472_scan3244:
    nqp_rxmark rx1471_bstack, rxscan1472_loop3243, rx1471_pos, 0
  rxscan1472_done3245:
    ge rx1471_pos, rx1471_eos, rx1471_fail3239
    substr $S11, rx1471_tgt, rx1471_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1471_fail3239
    repr_bind_attr_int rx1471_cur, rx1471_curclass, "$!pos", rx1471_pos
    $P11 = rx1471_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1471_curclass, "$!pos"
    lt $I11, 0, rx1471_fail3239
    nqp_rxmark rx1471_bstack, rxsubrule1473_pass3246, -1, 0
  rxsubrule1473_pass3246:
    rx1471_cstack = rx1471_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1471_pos, $P11, rx1471_curclass, "$!pos"
    repr_bind_attr_int rx1471_cur, rx1471_curclass, "$!pos", rx1471_pos
    $P11 = rx1471_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1471_curclass, "$!pos"
    lt $I11, 0, rx1471_fail3239
    nqp_rxmark rx1471_bstack, rxsubrule1474_pass3247, -1, 0
  rxsubrule1474_pass3247:
    rx1471_cstack = rx1471_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1471_pos, $P11, rx1471_curclass, "$!pos"
    rx1471_cur."!cursor_pass"(rx1471_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1471_cur)
  rx1471_restart3238:
    repr_get_attr_obj rx1471_cstack, rx1471_cur, rx1471_curclass, "$!cstack"
  rx1471_fail3239:
    unless rx1471_bstack, rx1471_done3237
    pop $I19, rx1471_bstack
    if_null rx1471_cstack, rx1471_cstack_done3242
    unless rx1471_cstack, rx1471_cstack_done3242
    dec $I19
    set $P11, rx1471_cstack[$I19]
  rx1471_cstack_done3242:
    pop rx1471_rep, rx1471_bstack
    pop rx1471_pos, rx1471_bstack
    pop $I19, rx1471_bstack
    lt rx1471_pos, -1, rx1471_done3237
    lt rx1471_pos, 0, rx1471_fail3239
    eq $I19, 0, rx1471_fail3239
    nqp_islist $I20, rx1471_cstack
    unless $I20, rx1471_jump3240
    elements $I18, rx1471_bstack
    le $I18, 0, rx1471_cut3241
    dec $I18
    set $I18, rx1471_bstack[$I18]
  rx1471_cut3241:
    assign rx1471_cstack, $I18
  rx1471_jump3240:
    jump $I19
  rx1471_done3237:
    rx1471_cur."!cursor_fail"()
    .return (rx1471_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_178_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1358
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1475_start
    .local string rx1475_tgt
    .local int rx1475_pos
    .local int rx1475_off
    .local int rx1475_eos
    .local int rx1475_rep
    .local pmc rx1475_cur
    .local pmc rx1475_curclass
    .local pmc rx1475_bstack
    .local pmc rx1475_cstack
    rx1475_start = self."!cursor_start_all"()
    set rx1475_cur, rx1475_start[0]
    set rx1475_tgt, rx1475_start[1]
    set rx1475_pos, rx1475_start[2]
    set rx1475_curclass, rx1475_start[3]
    set rx1475_bstack, rx1475_start[4]
    set $I19, rx1475_start[5]
    store_lex unicode:"$\x{a2}", rx1475_cur
    length rx1475_eos, rx1475_tgt
    eq $I19, 1, rx1475_restart3250
    gt rx1475_pos, rx1475_eos, rx1475_fail3251
    repr_get_attr_int $I11, self, rx1475_curclass, "$!from"
    ne $I11, -1, rxscan1476_done3257
    goto rxscan1476_scan3256
  rxscan1476_loop3255:
    inc rx1475_pos
    gt rx1475_pos, rx1475_eos, rx1475_fail3251
    repr_bind_attr_int rx1475_cur, rx1475_curclass, "$!from", rx1475_pos
  rxscan1476_scan3256:
    nqp_rxmark rx1475_bstack, rxscan1476_loop3255, rx1475_pos, 0
  rxscan1476_done3257:
    add $I11, rx1475_pos, 1
    gt $I11, rx1475_eos, rx1475_fail3251
    substr $S10, rx1475_tgt, rx1475_pos, 1
    ne $S10, ucs4:"(", rx1475_fail3251
    add rx1475_pos, 1
    repr_bind_attr_int rx1475_cur, rx1475_curclass, "$!pos", rx1475_pos
    $P11 = rx1475_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1475_curclass, "$!pos"
    lt $I11, 0, rx1475_fail3251
    repr_get_attr_int rx1475_pos, $P11, rx1475_curclass, "$!pos"
    repr_bind_attr_int rx1475_cur, rx1475_curclass, "$!pos", rx1475_pos
    $P11 = rx1475_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1475_curclass, "$!pos"
    lt $I11, 0, rx1475_fail3251
    nqp_rxmark rx1475_bstack, rxsubrule1478_pass3259, -1, 0
  rxsubrule1478_pass3259:
    rx1475_cstack = rx1475_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1475_pos, $P11, rx1475_curclass, "$!pos"
    add $I11, rx1475_pos, 1
    gt $I11, rx1475_eos, rx1475_fail3251
    substr $S10, rx1475_tgt, rx1475_pos, 1
    ne $S10, ucs4:")", rx1475_fail3251
    add rx1475_pos, 1
    repr_bind_attr_int rx1475_cur, rx1475_curclass, "$!pos", rx1475_pos
    $P11 = rx1475_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1475_curclass, "$!pos"
    lt $I11, 0, rx1475_fail3251
    nqp_rxmark rx1475_bstack, rxsubrule1479_pass3260, -1, 0
  rxsubrule1479_pass3260:
    rx1475_cstack = rx1475_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1475_pos, $P11, rx1475_curclass, "$!pos"
    rx1475_cur."!cursor_pass"(rx1475_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1475_cur)
  rx1475_restart3250:
    repr_get_attr_obj rx1475_cstack, rx1475_cur, rx1475_curclass, "$!cstack"
  rx1475_fail3251:
    unless rx1475_bstack, rx1475_done3249
    pop $I19, rx1475_bstack
    if_null rx1475_cstack, rx1475_cstack_done3254
    unless rx1475_cstack, rx1475_cstack_done3254
    dec $I19
    set $P11, rx1475_cstack[$I19]
  rx1475_cstack_done3254:
    pop rx1475_rep, rx1475_bstack
    pop rx1475_pos, rx1475_bstack
    pop $I19, rx1475_bstack
    lt rx1475_pos, -1, rx1475_done3249
    lt rx1475_pos, 0, rx1475_fail3251
    eq $I19, 0, rx1475_fail3251
    nqp_islist $I20, rx1475_cstack
    unless $I20, rx1475_jump3252
    elements $I18, rx1475_bstack
    le $I18, 0, rx1475_cut3253
    dec $I18
    set $I18, rx1475_bstack[$I18]
  rx1475_cut3253:
    assign rx1475_cstack, $I18
  rx1475_jump3252:
    jump $I19
  rx1475_done3249:
    rx1475_cur."!cursor_fail"()
    .return (rx1475_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_179_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1480_start
    .local string rx1480_tgt
    .local int rx1480_pos
    .local int rx1480_off
    .local int rx1480_eos
    .local int rx1480_rep
    .local pmc rx1480_cur
    .local pmc rx1480_curclass
    .local pmc rx1480_bstack
    .local pmc rx1480_cstack
    rx1480_start = self."!cursor_start_all"()
    set rx1480_cur, rx1480_start[0]
    set rx1480_tgt, rx1480_start[1]
    set rx1480_pos, rx1480_start[2]
    set rx1480_curclass, rx1480_start[3]
    set rx1480_bstack, rx1480_start[4]
    set $I19, rx1480_start[5]
    store_lex unicode:"$\x{a2}", rx1480_cur
    length rx1480_eos, rx1480_tgt
    eq $I19, 1, rx1480_restart3263
    gt rx1480_pos, rx1480_eos, rx1480_fail3264
    repr_get_attr_int $I11, self, rx1480_curclass, "$!from"
    ne $I11, -1, rxscan1481_done3270
    goto rxscan1481_scan3269
  rxscan1481_loop3268:
    inc rx1480_pos
    gt rx1480_pos, rx1480_eos, rx1480_fail3264
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!from", rx1480_pos
  rxscan1481_scan3269:
    nqp_rxmark rx1480_bstack, rxscan1481_loop3268, rx1480_pos, 0
  rxscan1481_done3270:
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1480_curclass, "$!pos"
    lt $I11, 0, rx1480_fail3264
    nqp_rxmark rx1480_bstack, rxsubrule1482_pass3271, -1, 0
  rxsubrule1482_pass3271:
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1480_pos, $P11, rx1480_curclass, "$!pos"
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1480_curclass, "$!pos"
    lt $I11, 0, rx1480_fail3264
    nqp_rxmark rx1480_bstack, rxsubrule1483_pass3272, -1, 0
  rxsubrule1483_pass3272:
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1480_pos, $P11, rx1480_curclass, "$!pos"
    rx1480_cur."!cursor_pass"(rx1480_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1480_cur)
  rx1480_restart3263:
    repr_get_attr_obj rx1480_cstack, rx1480_cur, rx1480_curclass, "$!cstack"
  rx1480_fail3264:
    unless rx1480_bstack, rx1480_done3262
    pop $I19, rx1480_bstack
    if_null rx1480_cstack, rx1480_cstack_done3267
    unless rx1480_cstack, rx1480_cstack_done3267
    dec $I19
    set $P11, rx1480_cstack[$I19]
  rx1480_cstack_done3267:
    pop rx1480_rep, rx1480_bstack
    pop rx1480_pos, rx1480_bstack
    pop $I19, rx1480_bstack
    lt rx1480_pos, -1, rx1480_done3262
    lt rx1480_pos, 0, rx1480_fail3264
    eq $I19, 0, rx1480_fail3264
    nqp_islist $I20, rx1480_cstack
    unless $I20, rx1480_jump3265
    elements $I18, rx1480_bstack
    le $I18, 0, rx1480_cut3266
    dec $I18
    set $I18, rx1480_bstack[$I18]
  rx1480_cut3266:
    assign rx1480_cstack, $I18
  rx1480_jump3265:
    jump $I19
  rx1480_done3262:
    rx1480_cur."!cursor_fail"()
    .return (rx1480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_180_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1484_start
    .local string rx1484_tgt
    .local int rx1484_pos
    .local int rx1484_off
    .local int rx1484_eos
    .local int rx1484_rep
    .local pmc rx1484_cur
    .local pmc rx1484_curclass
    .local pmc rx1484_bstack
    .local pmc rx1484_cstack
    rx1484_start = self."!cursor_start_all"()
    set rx1484_cur, rx1484_start[0]
    set rx1484_tgt, rx1484_start[1]
    set rx1484_pos, rx1484_start[2]
    set rx1484_curclass, rx1484_start[3]
    set rx1484_bstack, rx1484_start[4]
    set $I19, rx1484_start[5]
    store_lex unicode:"$\x{a2}", rx1484_cur
    length rx1484_eos, rx1484_tgt
    eq $I19, 1, rx1484_restart3275
    gt rx1484_pos, rx1484_eos, rx1484_fail3276
    repr_get_attr_int $I11, self, rx1484_curclass, "$!from"
    ne $I11, -1, rxscan1485_done3282
    goto rxscan1485_scan3281
  rxscan1485_loop3280:
    inc rx1484_pos
    gt rx1484_pos, rx1484_eos, rx1484_fail3276
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!from", rx1484_pos
  rxscan1485_scan3281:
    nqp_rxmark rx1484_bstack, rxscan1485_loop3280, rx1484_pos, 0
  rxscan1485_done3282:
    nqp_rxmark rx1484_bstack, rxcap1486_fail3284, rx1484_pos, 0
    add $I11, rx1484_pos, 2
    gt $I11, rx1484_eos, rx1484_fail3276
    substr $S10, rx1484_tgt, rx1484_pos, 2
    ne $S10, ucs4:"++", rx1484_fail3276
    add rx1484_pos, 2
    nqp_rxpeek $I19, rx1484_bstack, rxcap1486_fail3284
    inc $I19
    set $I11, rx1484_bstack[$I19]
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1484_pos)
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "sym")
    goto rxcap1486_done3283
  rxcap1486_fail3284:
    goto rx1484_fail3276
  rxcap1486_done3283:
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1484_curclass, "$!pos"
    lt $I11, 0, rx1484_fail3276
    nqp_rxmark rx1484_bstack, rxsubrule1487_pass3285, -1, 0
  rxsubrule1487_pass3285:
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1484_pos, $P11, rx1484_curclass, "$!pos"
    rx1484_cur."!cursor_pass"(rx1484_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1484_cur)
  rx1484_restart3275:
    repr_get_attr_obj rx1484_cstack, rx1484_cur, rx1484_curclass, "$!cstack"
  rx1484_fail3276:
    unless rx1484_bstack, rx1484_done3274
    pop $I19, rx1484_bstack
    if_null rx1484_cstack, rx1484_cstack_done3279
    unless rx1484_cstack, rx1484_cstack_done3279
    dec $I19
    set $P11, rx1484_cstack[$I19]
  rx1484_cstack_done3279:
    pop rx1484_rep, rx1484_bstack
    pop rx1484_pos, rx1484_bstack
    pop $I19, rx1484_bstack
    lt rx1484_pos, -1, rx1484_done3274
    lt rx1484_pos, 0, rx1484_fail3276
    eq $I19, 0, rx1484_fail3276
    nqp_islist $I20, rx1484_cstack
    unless $I20, rx1484_jump3277
    elements $I18, rx1484_bstack
    le $I18, 0, rx1484_cut3278
    dec $I18
    set $I18, rx1484_bstack[$I18]
  rx1484_cut3278:
    assign rx1484_cstack, $I18
  rx1484_jump3277:
    jump $I19
  rx1484_done3274:
    rx1484_cur."!cursor_fail"()
    .return (rx1484_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_181_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1366
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1488_start
    .local string rx1488_tgt
    .local int rx1488_pos
    .local int rx1488_off
    .local int rx1488_eos
    .local int rx1488_rep
    .local pmc rx1488_cur
    .local pmc rx1488_curclass
    .local pmc rx1488_bstack
    .local pmc rx1488_cstack
    rx1488_start = self."!cursor_start_all"()
    set rx1488_cur, rx1488_start[0]
    set rx1488_tgt, rx1488_start[1]
    set rx1488_pos, rx1488_start[2]
    set rx1488_curclass, rx1488_start[3]
    set rx1488_bstack, rx1488_start[4]
    set $I19, rx1488_start[5]
    store_lex unicode:"$\x{a2}", rx1488_cur
    length rx1488_eos, rx1488_tgt
    eq $I19, 1, rx1488_restart3288
    gt rx1488_pos, rx1488_eos, rx1488_fail3289
    repr_get_attr_int $I11, self, rx1488_curclass, "$!from"
    ne $I11, -1, rxscan1489_done3295
    goto rxscan1489_scan3294
  rxscan1489_loop3293:
    inc rx1488_pos
    gt rx1488_pos, rx1488_eos, rx1488_fail3289
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!from", rx1488_pos
  rxscan1489_scan3294:
    nqp_rxmark rx1488_bstack, rxscan1489_loop3293, rx1488_pos, 0
  rxscan1489_done3295:
    nqp_rxmark rx1488_bstack, rxcap1490_fail3297, rx1488_pos, 0
    add $I11, rx1488_pos, 2
    gt $I11, rx1488_eos, rx1488_fail3289
    substr $S10, rx1488_tgt, rx1488_pos, 2
    ne $S10, ucs4:"--", rx1488_fail3289
    add rx1488_pos, 2
    nqp_rxpeek $I19, rx1488_bstack, rxcap1490_fail3297
    inc $I19
    set $I11, rx1488_bstack[$I19]
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1488_pos)
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "sym")
    goto rxcap1490_done3296
  rxcap1490_fail3297:
    goto rx1488_fail3289
  rxcap1490_done3296:
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1488_curclass, "$!pos"
    lt $I11, 0, rx1488_fail3289
    nqp_rxmark rx1488_bstack, rxsubrule1491_pass3298, -1, 0
  rxsubrule1491_pass3298:
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1488_pos, $P11, rx1488_curclass, "$!pos"
    rx1488_cur."!cursor_pass"(rx1488_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1488_cur)
  rx1488_restart3288:
    repr_get_attr_obj rx1488_cstack, rx1488_cur, rx1488_curclass, "$!cstack"
  rx1488_fail3289:
    unless rx1488_bstack, rx1488_done3287
    pop $I19, rx1488_bstack
    if_null rx1488_cstack, rx1488_cstack_done3292
    unless rx1488_cstack, rx1488_cstack_done3292
    dec $I19
    set $P11, rx1488_cstack[$I19]
  rx1488_cstack_done3292:
    pop rx1488_rep, rx1488_bstack
    pop rx1488_pos, rx1488_bstack
    pop $I19, rx1488_bstack
    lt rx1488_pos, -1, rx1488_done3287
    lt rx1488_pos, 0, rx1488_fail3289
    eq $I19, 0, rx1488_fail3289
    nqp_islist $I20, rx1488_cstack
    unless $I20, rx1488_jump3290
    elements $I18, rx1488_bstack
    le $I18, 0, rx1488_cut3291
    dec $I18
    set $I18, rx1488_bstack[$I18]
  rx1488_cut3291:
    assign rx1488_cstack, $I18
  rx1488_jump3290:
    jump $I19
  rx1488_done3287:
    rx1488_cur."!cursor_fail"()
    .return (rx1488_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_182_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1492_start
    .local string rx1492_tgt
    .local int rx1492_pos
    .local int rx1492_off
    .local int rx1492_eos
    .local int rx1492_rep
    .local pmc rx1492_cur
    .local pmc rx1492_curclass
    .local pmc rx1492_bstack
    .local pmc rx1492_cstack
    rx1492_start = self."!cursor_start_all"()
    set rx1492_cur, rx1492_start[0]
    set rx1492_tgt, rx1492_start[1]
    set rx1492_pos, rx1492_start[2]
    set rx1492_curclass, rx1492_start[3]
    set rx1492_bstack, rx1492_start[4]
    set $I19, rx1492_start[5]
    store_lex unicode:"$\x{a2}", rx1492_cur
    length rx1492_eos, rx1492_tgt
    eq $I19, 1, rx1492_restart3301
    gt rx1492_pos, rx1492_eos, rx1492_fail3302
    repr_get_attr_int $I11, self, rx1492_curclass, "$!from"
    ne $I11, -1, rxscan1493_done3308
    goto rxscan1493_scan3307
  rxscan1493_loop3306:
    inc rx1492_pos
    gt rx1492_pos, rx1492_eos, rx1492_fail3302
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!from", rx1492_pos
  rxscan1493_scan3307:
    nqp_rxmark rx1492_bstack, rxscan1493_loop3306, rx1492_pos, 0
  rxscan1493_done3308:
    nqp_rxmark rx1492_bstack, rxcap1494_fail3310, rx1492_pos, 0
    add $I11, rx1492_pos, 2
    gt $I11, rx1492_eos, rx1492_fail3302
    substr $S10, rx1492_tgt, rx1492_pos, 2
    ne $S10, ucs4:"++", rx1492_fail3302
    add rx1492_pos, 2
    nqp_rxpeek $I19, rx1492_bstack, rxcap1494_fail3310
    inc $I19
    set $I11, rx1492_bstack[$I19]
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1492_pos)
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "sym")
    goto rxcap1494_done3309
  rxcap1494_fail3310:
    goto rx1492_fail3302
  rxcap1494_done3309:
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1492_curclass, "$!pos"
    lt $I11, 0, rx1492_fail3302
    nqp_rxmark rx1492_bstack, rxsubrule1495_pass3311, -1, 0
  rxsubrule1495_pass3311:
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1492_pos, $P11, rx1492_curclass, "$!pos"
    rx1492_cur."!cursor_pass"(rx1492_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1492_cur)
  rx1492_restart3301:
    repr_get_attr_obj rx1492_cstack, rx1492_cur, rx1492_curclass, "$!cstack"
  rx1492_fail3302:
    unless rx1492_bstack, rx1492_done3300
    pop $I19, rx1492_bstack
    if_null rx1492_cstack, rx1492_cstack_done3305
    unless rx1492_cstack, rx1492_cstack_done3305
    dec $I19
    set $P11, rx1492_cstack[$I19]
  rx1492_cstack_done3305:
    pop rx1492_rep, rx1492_bstack
    pop rx1492_pos, rx1492_bstack
    pop $I19, rx1492_bstack
    lt rx1492_pos, -1, rx1492_done3300
    lt rx1492_pos, 0, rx1492_fail3302
    eq $I19, 0, rx1492_fail3302
    nqp_islist $I20, rx1492_cstack
    unless $I20, rx1492_jump3303
    elements $I18, rx1492_bstack
    le $I18, 0, rx1492_cut3304
    dec $I18
    set $I18, rx1492_bstack[$I18]
  rx1492_cut3304:
    assign rx1492_cstack, $I18
  rx1492_jump3303:
    jump $I19
  rx1492_done3300:
    rx1492_cur."!cursor_fail"()
    .return (rx1492_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_183_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1496_start
    .local string rx1496_tgt
    .local int rx1496_pos
    .local int rx1496_off
    .local int rx1496_eos
    .local int rx1496_rep
    .local pmc rx1496_cur
    .local pmc rx1496_curclass
    .local pmc rx1496_bstack
    .local pmc rx1496_cstack
    rx1496_start = self."!cursor_start_all"()
    set rx1496_cur, rx1496_start[0]
    set rx1496_tgt, rx1496_start[1]
    set rx1496_pos, rx1496_start[2]
    set rx1496_curclass, rx1496_start[3]
    set rx1496_bstack, rx1496_start[4]
    set $I19, rx1496_start[5]
    store_lex unicode:"$\x{a2}", rx1496_cur
    length rx1496_eos, rx1496_tgt
    eq $I19, 1, rx1496_restart3314
    gt rx1496_pos, rx1496_eos, rx1496_fail3315
    repr_get_attr_int $I11, self, rx1496_curclass, "$!from"
    ne $I11, -1, rxscan1497_done3321
    goto rxscan1497_scan3320
  rxscan1497_loop3319:
    inc rx1496_pos
    gt rx1496_pos, rx1496_eos, rx1496_fail3315
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!from", rx1496_pos
  rxscan1497_scan3320:
    nqp_rxmark rx1496_bstack, rxscan1497_loop3319, rx1496_pos, 0
  rxscan1497_done3321:
    nqp_rxmark rx1496_bstack, rxcap1498_fail3323, rx1496_pos, 0
    add $I11, rx1496_pos, 2
    gt $I11, rx1496_eos, rx1496_fail3315
    substr $S10, rx1496_tgt, rx1496_pos, 2
    ne $S10, ucs4:"--", rx1496_fail3315
    add rx1496_pos, 2
    nqp_rxpeek $I19, rx1496_bstack, rxcap1498_fail3323
    inc $I19
    set $I11, rx1496_bstack[$I19]
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1496_pos)
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "sym")
    goto rxcap1498_done3322
  rxcap1498_fail3323:
    goto rx1496_fail3315
  rxcap1498_done3322:
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    lt $I11, 0, rx1496_fail3315
    nqp_rxmark rx1496_bstack, rxsubrule1499_pass3324, -1, 0
  rxsubrule1499_pass3324:
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1496_pos, $P11, rx1496_curclass, "$!pos"
    rx1496_cur."!cursor_pass"(rx1496_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1496_cur)
  rx1496_restart3314:
    repr_get_attr_obj rx1496_cstack, rx1496_cur, rx1496_curclass, "$!cstack"
  rx1496_fail3315:
    unless rx1496_bstack, rx1496_done3313
    pop $I19, rx1496_bstack
    if_null rx1496_cstack, rx1496_cstack_done3318
    unless rx1496_cstack, rx1496_cstack_done3318
    dec $I19
    set $P11, rx1496_cstack[$I19]
  rx1496_cstack_done3318:
    pop rx1496_rep, rx1496_bstack
    pop rx1496_pos, rx1496_bstack
    pop $I19, rx1496_bstack
    lt rx1496_pos, -1, rx1496_done3313
    lt rx1496_pos, 0, rx1496_fail3315
    eq $I19, 0, rx1496_fail3315
    nqp_islist $I20, rx1496_cstack
    unless $I20, rx1496_jump3316
    elements $I18, rx1496_bstack
    le $I18, 0, rx1496_cut3317
    dec $I18
    set $I18, rx1496_bstack[$I18]
  rx1496_cut3317:
    assign rx1496_cstack, $I18
  rx1496_jump3316:
    jump $I19
  rx1496_done3313:
    rx1496_cur."!cursor_fail"()
    .return (rx1496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_184_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1500_start
    .local string rx1500_tgt
    .local int rx1500_pos
    .local int rx1500_off
    .local int rx1500_eos
    .local int rx1500_rep
    .local pmc rx1500_cur
    .local pmc rx1500_curclass
    .local pmc rx1500_bstack
    .local pmc rx1500_cstack
    rx1500_start = self."!cursor_start_all"()
    set rx1500_cur, rx1500_start[0]
    set rx1500_tgt, rx1500_start[1]
    set rx1500_pos, rx1500_start[2]
    set rx1500_curclass, rx1500_start[3]
    set rx1500_bstack, rx1500_start[4]
    set $I19, rx1500_start[5]
    store_lex unicode:"$\x{a2}", rx1500_cur
    length rx1500_eos, rx1500_tgt
    eq $I19, 1, rx1500_restart3327
    gt rx1500_pos, rx1500_eos, rx1500_fail3328
    repr_get_attr_int $I11, self, rx1500_curclass, "$!from"
    ne $I11, -1, rxscan1501_done3334
    goto rxscan1501_scan3333
  rxscan1501_loop3332:
    inc rx1500_pos
    gt rx1500_pos, rx1500_eos, rx1500_fail3328
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!from", rx1500_pos
  rxscan1501_scan3333:
    nqp_rxmark rx1500_bstack, rxscan1501_loop3332, rx1500_pos, 0
  rxscan1501_done3334:
    nqp_rxmark rx1500_bstack, rxcap1502_fail3336, rx1500_pos, 0
    add $I11, rx1500_pos, 2
    gt $I11, rx1500_eos, rx1500_fail3328
    substr $S10, rx1500_tgt, rx1500_pos, 2
    ne $S10, ucs4:"**", rx1500_fail3328
    add rx1500_pos, 2
    nqp_rxpeek $I19, rx1500_bstack, rxcap1502_fail3336
    inc $I19
    set $I11, rx1500_bstack[$I19]
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1500_pos)
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "sym")
    goto rxcap1502_done3335
  rxcap1502_fail3336:
    goto rx1500_fail3328
  rxcap1502_done3335:
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1500_curclass, "$!pos"
    lt $I11, 0, rx1500_fail3328
    nqp_rxmark rx1500_bstack, rxsubrule1503_pass3337, -1, 0
  rxsubrule1503_pass3337:
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1500_pos, $P11, rx1500_curclass, "$!pos"
    rx1500_cur."!cursor_pass"(rx1500_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1500_cur)
  rx1500_restart3327:
    repr_get_attr_obj rx1500_cstack, rx1500_cur, rx1500_curclass, "$!cstack"
  rx1500_fail3328:
    unless rx1500_bstack, rx1500_done3326
    pop $I19, rx1500_bstack
    if_null rx1500_cstack, rx1500_cstack_done3331
    unless rx1500_cstack, rx1500_cstack_done3331
    dec $I19
    set $P11, rx1500_cstack[$I19]
  rx1500_cstack_done3331:
    pop rx1500_rep, rx1500_bstack
    pop rx1500_pos, rx1500_bstack
    pop $I19, rx1500_bstack
    lt rx1500_pos, -1, rx1500_done3326
    lt rx1500_pos, 0, rx1500_fail3328
    eq $I19, 0, rx1500_fail3328
    nqp_islist $I20, rx1500_cstack
    unless $I20, rx1500_jump3329
    elements $I18, rx1500_bstack
    le $I18, 0, rx1500_cut3330
    dec $I18
    set $I18, rx1500_bstack[$I18]
  rx1500_cut3330:
    assign rx1500_cstack, $I18
  rx1500_jump3329:
    jump $I19
  rx1500_done3326:
    rx1500_cur."!cursor_fail"()
    .return (rx1500_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_185_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1504_start
    .local string rx1504_tgt
    .local int rx1504_pos
    .local int rx1504_off
    .local int rx1504_eos
    .local int rx1504_rep
    .local pmc rx1504_cur
    .local pmc rx1504_curclass
    .local pmc rx1504_bstack
    .local pmc rx1504_cstack
    rx1504_start = self."!cursor_start_all"()
    set rx1504_cur, rx1504_start[0]
    set rx1504_tgt, rx1504_start[1]
    set rx1504_pos, rx1504_start[2]
    set rx1504_curclass, rx1504_start[3]
    set rx1504_bstack, rx1504_start[4]
    set $I19, rx1504_start[5]
    store_lex unicode:"$\x{a2}", rx1504_cur
    length rx1504_eos, rx1504_tgt
    eq $I19, 1, rx1504_restart3340
    gt rx1504_pos, rx1504_eos, rx1504_fail3341
    repr_get_attr_int $I11, self, rx1504_curclass, "$!from"
    ne $I11, -1, rxscan1505_done3347
    goto rxscan1505_scan3346
  rxscan1505_loop3345:
    inc rx1504_pos
    gt rx1504_pos, rx1504_eos, rx1504_fail3341
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!from", rx1504_pos
  rxscan1505_scan3346:
    nqp_rxmark rx1504_bstack, rxscan1505_loop3345, rx1504_pos, 0
  rxscan1505_done3347:
    nqp_rxmark rx1504_bstack, rxcap1506_fail3349, rx1504_pos, 0
    add $I11, rx1504_pos, 1
    gt $I11, rx1504_eos, rx1504_fail3341
    substr $S10, rx1504_tgt, rx1504_pos, 1
    ne $S10, ucs4:"+", rx1504_fail3341
    add rx1504_pos, 1
    nqp_rxpeek $I19, rx1504_bstack, rxcap1506_fail3349
    inc $I19
    set $I11, rx1504_bstack[$I19]
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1504_pos)
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "sym")
    goto rxcap1506_done3348
  rxcap1506_fail3349:
    goto rx1504_fail3341
  rxcap1506_done3348:
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1504_curclass, "$!pos"
    lt $I11, 0, rx1504_fail3341
    nqp_rxmark rx1504_bstack, rxsubrule1507_pass3350, -1, 0
  rxsubrule1507_pass3350:
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1504_pos, $P11, rx1504_curclass, "$!pos"
    rx1504_cur."!cursor_pass"(rx1504_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1504_cur)
  rx1504_restart3340:
    repr_get_attr_obj rx1504_cstack, rx1504_cur, rx1504_curclass, "$!cstack"
  rx1504_fail3341:
    unless rx1504_bstack, rx1504_done3339
    pop $I19, rx1504_bstack
    if_null rx1504_cstack, rx1504_cstack_done3344
    unless rx1504_cstack, rx1504_cstack_done3344
    dec $I19
    set $P11, rx1504_cstack[$I19]
  rx1504_cstack_done3344:
    pop rx1504_rep, rx1504_bstack
    pop rx1504_pos, rx1504_bstack
    pop $I19, rx1504_bstack
    lt rx1504_pos, -1, rx1504_done3339
    lt rx1504_pos, 0, rx1504_fail3341
    eq $I19, 0, rx1504_fail3341
    nqp_islist $I20, rx1504_cstack
    unless $I20, rx1504_jump3342
    elements $I18, rx1504_bstack
    le $I18, 0, rx1504_cut3343
    dec $I18
    set $I18, rx1504_bstack[$I18]
  rx1504_cut3343:
    assign rx1504_cstack, $I18
  rx1504_jump3342:
    jump $I19
  rx1504_done3339:
    rx1504_cur."!cursor_fail"()
    .return (rx1504_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_186_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1508_start
    .local string rx1508_tgt
    .local int rx1508_pos
    .local int rx1508_off
    .local int rx1508_eos
    .local int rx1508_rep
    .local pmc rx1508_cur
    .local pmc rx1508_curclass
    .local pmc rx1508_bstack
    .local pmc rx1508_cstack
    rx1508_start = self."!cursor_start_all"()
    set rx1508_cur, rx1508_start[0]
    set rx1508_tgt, rx1508_start[1]
    set rx1508_pos, rx1508_start[2]
    set rx1508_curclass, rx1508_start[3]
    set rx1508_bstack, rx1508_start[4]
    set $I19, rx1508_start[5]
    store_lex unicode:"$\x{a2}", rx1508_cur
    length rx1508_eos, rx1508_tgt
    eq $I19, 1, rx1508_restart3353
    gt rx1508_pos, rx1508_eos, rx1508_fail3354
    repr_get_attr_int $I11, self, rx1508_curclass, "$!from"
    ne $I11, -1, rxscan1509_done3360
    goto rxscan1509_scan3359
  rxscan1509_loop3358:
    inc rx1508_pos
    gt rx1508_pos, rx1508_eos, rx1508_fail3354
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!from", rx1508_pos
  rxscan1509_scan3359:
    nqp_rxmark rx1508_bstack, rxscan1509_loop3358, rx1508_pos, 0
  rxscan1509_done3360:
    nqp_rxmark rx1508_bstack, rxcap1510_fail3362, rx1508_pos, 0
    add $I11, rx1508_pos, 1
    gt $I11, rx1508_eos, rx1508_fail3354
    substr $S10, rx1508_tgt, rx1508_pos, 1
    ne $S10, ucs4:"~", rx1508_fail3354
    add rx1508_pos, 1
    nqp_rxpeek $I19, rx1508_bstack, rxcap1510_fail3362
    inc $I19
    set $I11, rx1508_bstack[$I19]
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1508_pos)
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "sym")
    goto rxcap1510_done3361
  rxcap1510_fail3362:
    goto rx1508_fail3354
  rxcap1510_done3361:
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1508_curclass, "$!pos"
    lt $I11, 0, rx1508_fail3354
    nqp_rxmark rx1508_bstack, rxsubrule1511_pass3363, -1, 0
  rxsubrule1511_pass3363:
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1508_pos, $P11, rx1508_curclass, "$!pos"
    rx1508_cur."!cursor_pass"(rx1508_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1508_cur)
  rx1508_restart3353:
    repr_get_attr_obj rx1508_cstack, rx1508_cur, rx1508_curclass, "$!cstack"
  rx1508_fail3354:
    unless rx1508_bstack, rx1508_done3352
    pop $I19, rx1508_bstack
    if_null rx1508_cstack, rx1508_cstack_done3357
    unless rx1508_cstack, rx1508_cstack_done3357
    dec $I19
    set $P11, rx1508_cstack[$I19]
  rx1508_cstack_done3357:
    pop rx1508_rep, rx1508_bstack
    pop rx1508_pos, rx1508_bstack
    pop $I19, rx1508_bstack
    lt rx1508_pos, -1, rx1508_done3352
    lt rx1508_pos, 0, rx1508_fail3354
    eq $I19, 0, rx1508_fail3354
    nqp_islist $I20, rx1508_cstack
    unless $I20, rx1508_jump3355
    elements $I18, rx1508_bstack
    le $I18, 0, rx1508_cut3356
    dec $I18
    set $I18, rx1508_bstack[$I18]
  rx1508_cut3356:
    assign rx1508_cstack, $I18
  rx1508_jump3355:
    jump $I19
  rx1508_done3352:
    rx1508_cur."!cursor_fail"()
    .return (rx1508_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_187_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1512_start
    .local string rx1512_tgt
    .local int rx1512_pos
    .local int rx1512_off
    .local int rx1512_eos
    .local int rx1512_rep
    .local pmc rx1512_cur
    .local pmc rx1512_curclass
    .local pmc rx1512_bstack
    .local pmc rx1512_cstack
    rx1512_start = self."!cursor_start_all"()
    set rx1512_cur, rx1512_start[0]
    set rx1512_tgt, rx1512_start[1]
    set rx1512_pos, rx1512_start[2]
    set rx1512_curclass, rx1512_start[3]
    set rx1512_bstack, rx1512_start[4]
    set $I19, rx1512_start[5]
    store_lex unicode:"$\x{a2}", rx1512_cur
    length rx1512_eos, rx1512_tgt
    eq $I19, 1, rx1512_restart3366
    gt rx1512_pos, rx1512_eos, rx1512_fail3367
    repr_get_attr_int $I11, self, rx1512_curclass, "$!from"
    ne $I11, -1, rxscan1513_done3373
    goto rxscan1513_scan3372
  rxscan1513_loop3371:
    inc rx1512_pos
    gt rx1512_pos, rx1512_eos, rx1512_fail3367
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!from", rx1512_pos
  rxscan1513_scan3372:
    nqp_rxmark rx1512_bstack, rxscan1513_loop3371, rx1512_pos, 0
  rxscan1513_done3373:
    nqp_rxmark rx1512_bstack, rxcap1514_fail3375, rx1512_pos, 0
    add $I11, rx1512_pos, 1
    gt $I11, rx1512_eos, rx1512_fail3367
    substr $S10, rx1512_tgt, rx1512_pos, 1
    ne $S10, ucs4:"-", rx1512_fail3367
    add rx1512_pos, 1
    nqp_rxpeek $I19, rx1512_bstack, rxcap1514_fail3375
    inc $I19
    set $I11, rx1512_bstack[$I19]
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1512_pos)
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "sym")
    goto rxcap1514_done3374
  rxcap1514_fail3375:
    goto rx1512_fail3367
  rxcap1514_done3374:
    ge rx1512_pos, rx1512_eos, rx1512_fail3367
    substr $S11, rx1512_tgt, rx1512_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1512_fail3367
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."number"()
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    ge $I11, 0, rx1512_fail3367
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    lt $I11, 0, rx1512_fail3367
    nqp_rxmark rx1512_bstack, rxsubrule1515_pass3376, -1, 0
  rxsubrule1515_pass3376:
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1512_pos, $P11, rx1512_curclass, "$!pos"
    rx1512_cur."!cursor_pass"(rx1512_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1512_cur)
  rx1512_restart3366:
    repr_get_attr_obj rx1512_cstack, rx1512_cur, rx1512_curclass, "$!cstack"
  rx1512_fail3367:
    unless rx1512_bstack, rx1512_done3365
    pop $I19, rx1512_bstack
    if_null rx1512_cstack, rx1512_cstack_done3370
    unless rx1512_cstack, rx1512_cstack_done3370
    dec $I19
    set $P11, rx1512_cstack[$I19]
  rx1512_cstack_done3370:
    pop rx1512_rep, rx1512_bstack
    pop rx1512_pos, rx1512_bstack
    pop $I19, rx1512_bstack
    lt rx1512_pos, -1, rx1512_done3365
    lt rx1512_pos, 0, rx1512_fail3367
    eq $I19, 0, rx1512_fail3367
    nqp_islist $I20, rx1512_cstack
    unless $I20, rx1512_jump3368
    elements $I18, rx1512_bstack
    le $I18, 0, rx1512_cut3369
    dec $I18
    set $I18, rx1512_bstack[$I18]
  rx1512_cut3369:
    assign rx1512_cstack, $I18
  rx1512_jump3368:
    jump $I19
  rx1512_done3365:
    rx1512_cur."!cursor_fail"()
    .return (rx1512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_188_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1516_start
    .local string rx1516_tgt
    .local int rx1516_pos
    .local int rx1516_off
    .local int rx1516_eos
    .local int rx1516_rep
    .local pmc rx1516_cur
    .local pmc rx1516_curclass
    .local pmc rx1516_bstack
    .local pmc rx1516_cstack
    rx1516_start = self."!cursor_start_all"()
    set rx1516_cur, rx1516_start[0]
    set rx1516_tgt, rx1516_start[1]
    set rx1516_pos, rx1516_start[2]
    set rx1516_curclass, rx1516_start[3]
    set rx1516_bstack, rx1516_start[4]
    set $I19, rx1516_start[5]
    store_lex unicode:"$\x{a2}", rx1516_cur
    length rx1516_eos, rx1516_tgt
    eq $I19, 1, rx1516_restart3379
    gt rx1516_pos, rx1516_eos, rx1516_fail3380
    repr_get_attr_int $I11, self, rx1516_curclass, "$!from"
    ne $I11, -1, rxscan1517_done3386
    goto rxscan1517_scan3385
  rxscan1517_loop3384:
    inc rx1516_pos
    gt rx1516_pos, rx1516_eos, rx1516_fail3380
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!from", rx1516_pos
  rxscan1517_scan3385:
    nqp_rxmark rx1516_bstack, rxscan1517_loop3384, rx1516_pos, 0
  rxscan1517_done3386:
    nqp_rxmark rx1516_bstack, rxcap1518_fail3388, rx1516_pos, 0
    add $I11, rx1516_pos, 1
    gt $I11, rx1516_eos, rx1516_fail3380
    substr $S10, rx1516_tgt, rx1516_pos, 1
    ne $S10, ucs4:"?", rx1516_fail3380
    add rx1516_pos, 1
    nqp_rxpeek $I19, rx1516_bstack, rxcap1518_fail3388
    inc $I19
    set $I11, rx1516_bstack[$I19]
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1516_pos)
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "sym")
    goto rxcap1518_done3387
  rxcap1518_fail3388:
    goto rx1516_fail3380
  rxcap1518_done3387:
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1516_curclass, "$!pos"
    lt $I11, 0, rx1516_fail3380
    nqp_rxmark rx1516_bstack, rxsubrule1519_pass3389, -1, 0
  rxsubrule1519_pass3389:
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1516_pos, $P11, rx1516_curclass, "$!pos"
    rx1516_cur."!cursor_pass"(rx1516_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1516_cur)
  rx1516_restart3379:
    repr_get_attr_obj rx1516_cstack, rx1516_cur, rx1516_curclass, "$!cstack"
  rx1516_fail3380:
    unless rx1516_bstack, rx1516_done3378
    pop $I19, rx1516_bstack
    if_null rx1516_cstack, rx1516_cstack_done3383
    unless rx1516_cstack, rx1516_cstack_done3383
    dec $I19
    set $P11, rx1516_cstack[$I19]
  rx1516_cstack_done3383:
    pop rx1516_rep, rx1516_bstack
    pop rx1516_pos, rx1516_bstack
    pop $I19, rx1516_bstack
    lt rx1516_pos, -1, rx1516_done3378
    lt rx1516_pos, 0, rx1516_fail3380
    eq $I19, 0, rx1516_fail3380
    nqp_islist $I20, rx1516_cstack
    unless $I20, rx1516_jump3381
    elements $I18, rx1516_bstack
    le $I18, 0, rx1516_cut3382
    dec $I18
    set $I18, rx1516_bstack[$I18]
  rx1516_cut3382:
    assign rx1516_cstack, $I18
  rx1516_jump3381:
    jump $I19
  rx1516_done3378:
    rx1516_cur."!cursor_fail"()
    .return (rx1516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_189_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1520_start
    .local string rx1520_tgt
    .local int rx1520_pos
    .local int rx1520_off
    .local int rx1520_eos
    .local int rx1520_rep
    .local pmc rx1520_cur
    .local pmc rx1520_curclass
    .local pmc rx1520_bstack
    .local pmc rx1520_cstack
    rx1520_start = self."!cursor_start_all"()
    set rx1520_cur, rx1520_start[0]
    set rx1520_tgt, rx1520_start[1]
    set rx1520_pos, rx1520_start[2]
    set rx1520_curclass, rx1520_start[3]
    set rx1520_bstack, rx1520_start[4]
    set $I19, rx1520_start[5]
    store_lex unicode:"$\x{a2}", rx1520_cur
    length rx1520_eos, rx1520_tgt
    eq $I19, 1, rx1520_restart3392
    gt rx1520_pos, rx1520_eos, rx1520_fail3393
    repr_get_attr_int $I11, self, rx1520_curclass, "$!from"
    ne $I11, -1, rxscan1521_done3399
    goto rxscan1521_scan3398
  rxscan1521_loop3397:
    inc rx1520_pos
    gt rx1520_pos, rx1520_eos, rx1520_fail3393
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!from", rx1520_pos
  rxscan1521_scan3398:
    nqp_rxmark rx1520_bstack, rxscan1521_loop3397, rx1520_pos, 0
  rxscan1521_done3399:
    nqp_rxmark rx1520_bstack, rxcap1522_fail3401, rx1520_pos, 0
    add $I11, rx1520_pos, 1
    gt $I11, rx1520_eos, rx1520_fail3393
    substr $S10, rx1520_tgt, rx1520_pos, 1
    ne $S10, ucs4:"!", rx1520_fail3393
    add rx1520_pos, 1
    nqp_rxpeek $I19, rx1520_bstack, rxcap1522_fail3401
    inc $I19
    set $I11, rx1520_bstack[$I19]
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1520_pos)
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "sym")
    goto rxcap1522_done3400
  rxcap1522_fail3401:
    goto rx1520_fail3393
  rxcap1522_done3400:
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1520_curclass, "$!pos"
    lt $I11, 0, rx1520_fail3393
    nqp_rxmark rx1520_bstack, rxsubrule1523_pass3402, -1, 0
  rxsubrule1523_pass3402:
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1520_pos, $P11, rx1520_curclass, "$!pos"
    rx1520_cur."!cursor_pass"(rx1520_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1520_cur)
  rx1520_restart3392:
    repr_get_attr_obj rx1520_cstack, rx1520_cur, rx1520_curclass, "$!cstack"
  rx1520_fail3393:
    unless rx1520_bstack, rx1520_done3391
    pop $I19, rx1520_bstack
    if_null rx1520_cstack, rx1520_cstack_done3396
    unless rx1520_cstack, rx1520_cstack_done3396
    dec $I19
    set $P11, rx1520_cstack[$I19]
  rx1520_cstack_done3396:
    pop rx1520_rep, rx1520_bstack
    pop rx1520_pos, rx1520_bstack
    pop $I19, rx1520_bstack
    lt rx1520_pos, -1, rx1520_done3391
    lt rx1520_pos, 0, rx1520_fail3393
    eq $I19, 0, rx1520_fail3393
    nqp_islist $I20, rx1520_cstack
    unless $I20, rx1520_jump3394
    elements $I18, rx1520_bstack
    le $I18, 0, rx1520_cut3395
    dec $I18
    set $I18, rx1520_bstack[$I18]
  rx1520_cut3395:
    assign rx1520_cstack, $I18
  rx1520_jump3394:
    jump $I19
  rx1520_done3391:
    rx1520_cur."!cursor_fail"()
    .return (rx1520_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_190_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1524_start
    .local string rx1524_tgt
    .local int rx1524_pos
    .local int rx1524_off
    .local int rx1524_eos
    .local int rx1524_rep
    .local pmc rx1524_cur
    .local pmc rx1524_curclass
    .local pmc rx1524_bstack
    .local pmc rx1524_cstack
    rx1524_start = self."!cursor_start_all"()
    set rx1524_cur, rx1524_start[0]
    set rx1524_tgt, rx1524_start[1]
    set rx1524_pos, rx1524_start[2]
    set rx1524_curclass, rx1524_start[3]
    set rx1524_bstack, rx1524_start[4]
    set $I19, rx1524_start[5]
    store_lex unicode:"$\x{a2}", rx1524_cur
    length rx1524_eos, rx1524_tgt
    eq $I19, 1, rx1524_restart3405
    gt rx1524_pos, rx1524_eos, rx1524_fail3406
    repr_get_attr_int $I11, self, rx1524_curclass, "$!from"
    ne $I11, -1, rxscan1525_done3412
    goto rxscan1525_scan3411
  rxscan1525_loop3410:
    inc rx1524_pos
    gt rx1524_pos, rx1524_eos, rx1524_fail3406
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!from", rx1524_pos
  rxscan1525_scan3411:
    nqp_rxmark rx1524_bstack, rxscan1525_loop3410, rx1524_pos, 0
  rxscan1525_done3412:
    nqp_rxmark rx1524_bstack, rxcap1526_fail3414, rx1524_pos, 0
    add $I11, rx1524_pos, 1
    gt $I11, rx1524_eos, rx1524_fail3406
    substr $S10, rx1524_tgt, rx1524_pos, 1
    ne $S10, ucs4:"|", rx1524_fail3406
    add rx1524_pos, 1
    nqp_rxpeek $I19, rx1524_bstack, rxcap1526_fail3414
    inc $I19
    set $I11, rx1524_bstack[$I19]
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1524_pos)
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "sym")
    goto rxcap1526_done3413
  rxcap1526_fail3414:
    goto rx1524_fail3406
  rxcap1526_done3413:
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1524_curclass, "$!pos"
    lt $I11, 0, rx1524_fail3406
    nqp_rxmark rx1524_bstack, rxsubrule1527_pass3415, -1, 0
  rxsubrule1527_pass3415:
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1524_pos, $P11, rx1524_curclass, "$!pos"
    rx1524_cur."!cursor_pass"(rx1524_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1524_cur)
  rx1524_restart3405:
    repr_get_attr_obj rx1524_cstack, rx1524_cur, rx1524_curclass, "$!cstack"
  rx1524_fail3406:
    unless rx1524_bstack, rx1524_done3404
    pop $I19, rx1524_bstack
    if_null rx1524_cstack, rx1524_cstack_done3409
    unless rx1524_cstack, rx1524_cstack_done3409
    dec $I19
    set $P11, rx1524_cstack[$I19]
  rx1524_cstack_done3409:
    pop rx1524_rep, rx1524_bstack
    pop rx1524_pos, rx1524_bstack
    pop $I19, rx1524_bstack
    lt rx1524_pos, -1, rx1524_done3404
    lt rx1524_pos, 0, rx1524_fail3406
    eq $I19, 0, rx1524_fail3406
    nqp_islist $I20, rx1524_cstack
    unless $I20, rx1524_jump3407
    elements $I18, rx1524_bstack
    le $I18, 0, rx1524_cut3408
    dec $I18
    set $I18, rx1524_bstack[$I18]
  rx1524_cut3408:
    assign rx1524_cstack, $I18
  rx1524_jump3407:
    jump $I19
  rx1524_done3404:
    rx1524_cur."!cursor_fail"()
    .return (rx1524_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_191_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1528_start
    .local string rx1528_tgt
    .local int rx1528_pos
    .local int rx1528_off
    .local int rx1528_eos
    .local int rx1528_rep
    .local pmc rx1528_cur
    .local pmc rx1528_curclass
    .local pmc rx1528_bstack
    .local pmc rx1528_cstack
    rx1528_start = self."!cursor_start_all"()
    set rx1528_cur, rx1528_start[0]
    set rx1528_tgt, rx1528_start[1]
    set rx1528_pos, rx1528_start[2]
    set rx1528_curclass, rx1528_start[3]
    set rx1528_bstack, rx1528_start[4]
    set $I19, rx1528_start[5]
    store_lex unicode:"$\x{a2}", rx1528_cur
    length rx1528_eos, rx1528_tgt
    eq $I19, 1, rx1528_restart3418
    gt rx1528_pos, rx1528_eos, rx1528_fail3419
    repr_get_attr_int $I11, self, rx1528_curclass, "$!from"
    ne $I11, -1, rxscan1529_done3425
    goto rxscan1529_scan3424
  rxscan1529_loop3423:
    inc rx1528_pos
    gt rx1528_pos, rx1528_eos, rx1528_fail3419
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!from", rx1528_pos
  rxscan1529_scan3424:
    nqp_rxmark rx1528_bstack, rxscan1529_loop3423, rx1528_pos, 0
  rxscan1529_done3425:
    nqp_rxmark rx1528_bstack, rxcap1530_fail3427, rx1528_pos, 0
    add $I11, rx1528_pos, 1
    gt $I11, rx1528_eos, rx1528_fail3419
    substr $S10, rx1528_tgt, rx1528_pos, 1
    ne $S10, ucs4:"*", rx1528_fail3419
    add rx1528_pos, 1
    nqp_rxpeek $I19, rx1528_bstack, rxcap1530_fail3427
    inc $I19
    set $I11, rx1528_bstack[$I19]
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1528_pos)
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "sym")
    goto rxcap1530_done3426
  rxcap1530_fail3427:
    goto rx1528_fail3419
  rxcap1530_done3426:
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1528_curclass, "$!pos"
    lt $I11, 0, rx1528_fail3419
    nqp_rxmark rx1528_bstack, rxsubrule1531_pass3428, -1, 0
  rxsubrule1531_pass3428:
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1528_pos, $P11, rx1528_curclass, "$!pos"
    rx1528_cur."!cursor_pass"(rx1528_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1528_cur)
  rx1528_restart3418:
    repr_get_attr_obj rx1528_cstack, rx1528_cur, rx1528_curclass, "$!cstack"
  rx1528_fail3419:
    unless rx1528_bstack, rx1528_done3417
    pop $I19, rx1528_bstack
    if_null rx1528_cstack, rx1528_cstack_done3422
    unless rx1528_cstack, rx1528_cstack_done3422
    dec $I19
    set $P11, rx1528_cstack[$I19]
  rx1528_cstack_done3422:
    pop rx1528_rep, rx1528_bstack
    pop rx1528_pos, rx1528_bstack
    pop $I19, rx1528_bstack
    lt rx1528_pos, -1, rx1528_done3417
    lt rx1528_pos, 0, rx1528_fail3419
    eq $I19, 0, rx1528_fail3419
    nqp_islist $I20, rx1528_cstack
    unless $I20, rx1528_jump3420
    elements $I18, rx1528_bstack
    le $I18, 0, rx1528_cut3421
    dec $I18
    set $I18, rx1528_bstack[$I18]
  rx1528_cut3421:
    assign rx1528_cstack, $I18
  rx1528_jump3420:
    jump $I19
  rx1528_done3417:
    rx1528_cur."!cursor_fail"()
    .return (rx1528_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_192_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1381
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1532_start
    .local string rx1532_tgt
    .local int rx1532_pos
    .local int rx1532_off
    .local int rx1532_eos
    .local int rx1532_rep
    .local pmc rx1532_cur
    .local pmc rx1532_curclass
    .local pmc rx1532_bstack
    .local pmc rx1532_cstack
    rx1532_start = self."!cursor_start_all"()
    set rx1532_cur, rx1532_start[0]
    set rx1532_tgt, rx1532_start[1]
    set rx1532_pos, rx1532_start[2]
    set rx1532_curclass, rx1532_start[3]
    set rx1532_bstack, rx1532_start[4]
    set $I19, rx1532_start[5]
    store_lex unicode:"$\x{a2}", rx1532_cur
    length rx1532_eos, rx1532_tgt
    eq $I19, 1, rx1532_restart3431
    gt rx1532_pos, rx1532_eos, rx1532_fail3432
    repr_get_attr_int $I11, self, rx1532_curclass, "$!from"
    ne $I11, -1, rxscan1533_done3438
    goto rxscan1533_scan3437
  rxscan1533_loop3436:
    inc rx1532_pos
    gt rx1532_pos, rx1532_eos, rx1532_fail3432
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!from", rx1532_pos
  rxscan1533_scan3437:
    nqp_rxmark rx1532_bstack, rxscan1533_loop3436, rx1532_pos, 0
  rxscan1533_done3438:
    nqp_rxmark rx1532_bstack, rxcap1534_fail3440, rx1532_pos, 0
    add $I11, rx1532_pos, 1
    gt $I11, rx1532_eos, rx1532_fail3432
    substr $S10, rx1532_tgt, rx1532_pos, 1
    ne $S10, ucs4:"/", rx1532_fail3432
    add rx1532_pos, 1
    nqp_rxpeek $I19, rx1532_bstack, rxcap1534_fail3440
    inc $I19
    set $I11, rx1532_bstack[$I19]
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1532_pos)
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "sym")
    goto rxcap1534_done3439
  rxcap1534_fail3440:
    goto rx1532_fail3432
  rxcap1534_done3439:
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1532_curclass, "$!pos"
    lt $I11, 0, rx1532_fail3432
    nqp_rxmark rx1532_bstack, rxsubrule1535_pass3441, -1, 0
  rxsubrule1535_pass3441:
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1532_pos, $P11, rx1532_curclass, "$!pos"
    rx1532_cur."!cursor_pass"(rx1532_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1532_cur)
  rx1532_restart3431:
    repr_get_attr_obj rx1532_cstack, rx1532_cur, rx1532_curclass, "$!cstack"
  rx1532_fail3432:
    unless rx1532_bstack, rx1532_done3430
    pop $I19, rx1532_bstack
    if_null rx1532_cstack, rx1532_cstack_done3435
    unless rx1532_cstack, rx1532_cstack_done3435
    dec $I19
    set $P11, rx1532_cstack[$I19]
  rx1532_cstack_done3435:
    pop rx1532_rep, rx1532_bstack
    pop rx1532_pos, rx1532_bstack
    pop $I19, rx1532_bstack
    lt rx1532_pos, -1, rx1532_done3430
    lt rx1532_pos, 0, rx1532_fail3432
    eq $I19, 0, rx1532_fail3432
    nqp_islist $I20, rx1532_cstack
    unless $I20, rx1532_jump3433
    elements $I18, rx1532_bstack
    le $I18, 0, rx1532_cut3434
    dec $I18
    set $I18, rx1532_bstack[$I18]
  rx1532_cut3434:
    assign rx1532_cstack, $I18
  rx1532_jump3433:
    jump $I19
  rx1532_done3430:
    rx1532_cur."!cursor_fail"()
    .return (rx1532_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_193_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1536_start
    .local string rx1536_tgt
    .local int rx1536_pos
    .local int rx1536_off
    .local int rx1536_eos
    .local int rx1536_rep
    .local pmc rx1536_cur
    .local pmc rx1536_curclass
    .local pmc rx1536_bstack
    .local pmc rx1536_cstack
    rx1536_start = self."!cursor_start_all"()
    set rx1536_cur, rx1536_start[0]
    set rx1536_tgt, rx1536_start[1]
    set rx1536_pos, rx1536_start[2]
    set rx1536_curclass, rx1536_start[3]
    set rx1536_bstack, rx1536_start[4]
    set $I19, rx1536_start[5]
    store_lex unicode:"$\x{a2}", rx1536_cur
    length rx1536_eos, rx1536_tgt
    eq $I19, 1, rx1536_restart3444
    gt rx1536_pos, rx1536_eos, rx1536_fail3445
    repr_get_attr_int $I11, self, rx1536_curclass, "$!from"
    ne $I11, -1, rxscan1537_done3451
    goto rxscan1537_scan3450
  rxscan1537_loop3449:
    inc rx1536_pos
    gt rx1536_pos, rx1536_eos, rx1536_fail3445
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!from", rx1536_pos
  rxscan1537_scan3450:
    nqp_rxmark rx1536_bstack, rxscan1537_loop3449, rx1536_pos, 0
  rxscan1537_done3451:
    nqp_rxmark rx1536_bstack, rxcap1538_fail3453, rx1536_pos, 0
    add $I11, rx1536_pos, 1
    gt $I11, rx1536_eos, rx1536_fail3445
    substr $S10, rx1536_tgt, rx1536_pos, 1
    ne $S10, ucs4:"%", rx1536_fail3445
    add rx1536_pos, 1
    nqp_rxpeek $I19, rx1536_bstack, rxcap1538_fail3453
    inc $I19
    set $I11, rx1536_bstack[$I19]
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1536_pos)
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "sym")
    goto rxcap1538_done3452
  rxcap1538_fail3453:
    goto rx1536_fail3445
  rxcap1538_done3452:
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1536_curclass, "$!pos"
    lt $I11, 0, rx1536_fail3445
    nqp_rxmark rx1536_bstack, rxsubrule1539_pass3454, -1, 0
  rxsubrule1539_pass3454:
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1536_pos, $P11, rx1536_curclass, "$!pos"
    rx1536_cur."!cursor_pass"(rx1536_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1536_cur)
  rx1536_restart3444:
    repr_get_attr_obj rx1536_cstack, rx1536_cur, rx1536_curclass, "$!cstack"
  rx1536_fail3445:
    unless rx1536_bstack, rx1536_done3443
    pop $I19, rx1536_bstack
    if_null rx1536_cstack, rx1536_cstack_done3448
    unless rx1536_cstack, rx1536_cstack_done3448
    dec $I19
    set $P11, rx1536_cstack[$I19]
  rx1536_cstack_done3448:
    pop rx1536_rep, rx1536_bstack
    pop rx1536_pos, rx1536_bstack
    pop $I19, rx1536_bstack
    lt rx1536_pos, -1, rx1536_done3443
    lt rx1536_pos, 0, rx1536_fail3445
    eq $I19, 0, rx1536_fail3445
    nqp_islist $I20, rx1536_cstack
    unless $I20, rx1536_jump3446
    elements $I18, rx1536_bstack
    le $I18, 0, rx1536_cut3447
    dec $I18
    set $I18, rx1536_bstack[$I18]
  rx1536_cut3447:
    assign rx1536_cstack, $I18
  rx1536_jump3446:
    jump $I19
  rx1536_done3443:
    rx1536_cur."!cursor_fail"()
    .return (rx1536_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_194_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1540_start
    .local string rx1540_tgt
    .local int rx1540_pos
    .local int rx1540_off
    .local int rx1540_eos
    .local int rx1540_rep
    .local pmc rx1540_cur
    .local pmc rx1540_curclass
    .local pmc rx1540_bstack
    .local pmc rx1540_cstack
    rx1540_start = self."!cursor_start_all"()
    set rx1540_cur, rx1540_start[0]
    set rx1540_tgt, rx1540_start[1]
    set rx1540_pos, rx1540_start[2]
    set rx1540_curclass, rx1540_start[3]
    set rx1540_bstack, rx1540_start[4]
    set $I19, rx1540_start[5]
    store_lex unicode:"$\x{a2}", rx1540_cur
    length rx1540_eos, rx1540_tgt
    eq $I19, 1, rx1540_restart3457
    gt rx1540_pos, rx1540_eos, rx1540_fail3458
    repr_get_attr_int $I11, self, rx1540_curclass, "$!from"
    ne $I11, -1, rxscan1541_done3464
    goto rxscan1541_scan3463
  rxscan1541_loop3462:
    inc rx1540_pos
    gt rx1540_pos, rx1540_eos, rx1540_fail3458
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!from", rx1540_pos
  rxscan1541_scan3463:
    nqp_rxmark rx1540_bstack, rxscan1541_loop3462, rx1540_pos, 0
  rxscan1541_done3464:
    nqp_rxmark rx1540_bstack, rxcap1542_fail3466, rx1540_pos, 0
    add $I11, rx1540_pos, 2
    gt $I11, rx1540_eos, rx1540_fail3458
    substr $S10, rx1540_tgt, rx1540_pos, 2
    ne $S10, ucs4:"+&", rx1540_fail3458
    add rx1540_pos, 2
    nqp_rxpeek $I19, rx1540_bstack, rxcap1542_fail3466
    inc $I19
    set $I11, rx1540_bstack[$I19]
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1540_pos)
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "sym")
    goto rxcap1542_done3465
  rxcap1542_fail3466:
    goto rx1540_fail3458
  rxcap1542_done3465:
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1540_curclass, "$!pos"
    lt $I11, 0, rx1540_fail3458
    nqp_rxmark rx1540_bstack, rxsubrule1543_pass3467, -1, 0
  rxsubrule1543_pass3467:
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1540_pos, $P11, rx1540_curclass, "$!pos"
    rx1540_cur."!cursor_pass"(rx1540_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1540_cur)
  rx1540_restart3457:
    repr_get_attr_obj rx1540_cstack, rx1540_cur, rx1540_curclass, "$!cstack"
  rx1540_fail3458:
    unless rx1540_bstack, rx1540_done3456
    pop $I19, rx1540_bstack
    if_null rx1540_cstack, rx1540_cstack_done3461
    unless rx1540_cstack, rx1540_cstack_done3461
    dec $I19
    set $P11, rx1540_cstack[$I19]
  rx1540_cstack_done3461:
    pop rx1540_rep, rx1540_bstack
    pop rx1540_pos, rx1540_bstack
    pop $I19, rx1540_bstack
    lt rx1540_pos, -1, rx1540_done3456
    lt rx1540_pos, 0, rx1540_fail3458
    eq $I19, 0, rx1540_fail3458
    nqp_islist $I20, rx1540_cstack
    unless $I20, rx1540_jump3459
    elements $I18, rx1540_bstack
    le $I18, 0, rx1540_cut3460
    dec $I18
    set $I18, rx1540_bstack[$I18]
  rx1540_cut3460:
    assign rx1540_cstack, $I18
  rx1540_jump3459:
    jump $I19
  rx1540_done3456:
    rx1540_cur."!cursor_fail"()
    .return (rx1540_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_195_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1544_start
    .local string rx1544_tgt
    .local int rx1544_pos
    .local int rx1544_off
    .local int rx1544_eos
    .local int rx1544_rep
    .local pmc rx1544_cur
    .local pmc rx1544_curclass
    .local pmc rx1544_bstack
    .local pmc rx1544_cstack
    rx1544_start = self."!cursor_start_all"()
    set rx1544_cur, rx1544_start[0]
    set rx1544_tgt, rx1544_start[1]
    set rx1544_pos, rx1544_start[2]
    set rx1544_curclass, rx1544_start[3]
    set rx1544_bstack, rx1544_start[4]
    set $I19, rx1544_start[5]
    store_lex unicode:"$\x{a2}", rx1544_cur
    length rx1544_eos, rx1544_tgt
    eq $I19, 1, rx1544_restart3470
    gt rx1544_pos, rx1544_eos, rx1544_fail3471
    repr_get_attr_int $I11, self, rx1544_curclass, "$!from"
    ne $I11, -1, rxscan1545_done3477
    goto rxscan1545_scan3476
  rxscan1545_loop3475:
    inc rx1544_pos
    gt rx1544_pos, rx1544_eos, rx1544_fail3471
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!from", rx1544_pos
  rxscan1545_scan3476:
    nqp_rxmark rx1544_bstack, rxscan1545_loop3475, rx1544_pos, 0
  rxscan1545_done3477:
    nqp_rxmark rx1544_bstack, rxcap1546_fail3479, rx1544_pos, 0
    add $I11, rx1544_pos, 1
    gt $I11, rx1544_eos, rx1544_fail3471
    substr $S10, rx1544_tgt, rx1544_pos, 1
    ne $S10, ucs4:"+", rx1544_fail3471
    add rx1544_pos, 1
    nqp_rxpeek $I19, rx1544_bstack, rxcap1546_fail3479
    inc $I19
    set $I11, rx1544_bstack[$I19]
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1544_pos)
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "sym")
    goto rxcap1546_done3478
  rxcap1546_fail3479:
    goto rx1544_fail3471
  rxcap1546_done3478:
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1544_curclass, "$!pos"
    lt $I11, 0, rx1544_fail3471
    nqp_rxmark rx1544_bstack, rxsubrule1547_pass3480, -1, 0
  rxsubrule1547_pass3480:
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1544_pos, $P11, rx1544_curclass, "$!pos"
    rx1544_cur."!cursor_pass"(rx1544_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1544_cur)
  rx1544_restart3470:
    repr_get_attr_obj rx1544_cstack, rx1544_cur, rx1544_curclass, "$!cstack"
  rx1544_fail3471:
    unless rx1544_bstack, rx1544_done3469
    pop $I19, rx1544_bstack
    if_null rx1544_cstack, rx1544_cstack_done3474
    unless rx1544_cstack, rx1544_cstack_done3474
    dec $I19
    set $P11, rx1544_cstack[$I19]
  rx1544_cstack_done3474:
    pop rx1544_rep, rx1544_bstack
    pop rx1544_pos, rx1544_bstack
    pop $I19, rx1544_bstack
    lt rx1544_pos, -1, rx1544_done3469
    lt rx1544_pos, 0, rx1544_fail3471
    eq $I19, 0, rx1544_fail3471
    nqp_islist $I20, rx1544_cstack
    unless $I20, rx1544_jump3472
    elements $I18, rx1544_bstack
    le $I18, 0, rx1544_cut3473
    dec $I18
    set $I18, rx1544_bstack[$I18]
  rx1544_cut3473:
    assign rx1544_cstack, $I18
  rx1544_jump3472:
    jump $I19
  rx1544_done3469:
    rx1544_cur."!cursor_fail"()
    .return (rx1544_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_196_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1548_start
    .local string rx1548_tgt
    .local int rx1548_pos
    .local int rx1548_off
    .local int rx1548_eos
    .local int rx1548_rep
    .local pmc rx1548_cur
    .local pmc rx1548_curclass
    .local pmc rx1548_bstack
    .local pmc rx1548_cstack
    rx1548_start = self."!cursor_start_all"()
    set rx1548_cur, rx1548_start[0]
    set rx1548_tgt, rx1548_start[1]
    set rx1548_pos, rx1548_start[2]
    set rx1548_curclass, rx1548_start[3]
    set rx1548_bstack, rx1548_start[4]
    set $I19, rx1548_start[5]
    store_lex unicode:"$\x{a2}", rx1548_cur
    length rx1548_eos, rx1548_tgt
    eq $I19, 1, rx1548_restart3483
    gt rx1548_pos, rx1548_eos, rx1548_fail3484
    repr_get_attr_int $I11, self, rx1548_curclass, "$!from"
    ne $I11, -1, rxscan1549_done3490
    goto rxscan1549_scan3489
  rxscan1549_loop3488:
    inc rx1548_pos
    gt rx1548_pos, rx1548_eos, rx1548_fail3484
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!from", rx1548_pos
  rxscan1549_scan3489:
    nqp_rxmark rx1548_bstack, rxscan1549_loop3488, rx1548_pos, 0
  rxscan1549_done3490:
    nqp_rxmark rx1548_bstack, rxcap1550_fail3492, rx1548_pos, 0
    add $I11, rx1548_pos, 1
    gt $I11, rx1548_eos, rx1548_fail3484
    substr $S10, rx1548_tgt, rx1548_pos, 1
    ne $S10, ucs4:"-", rx1548_fail3484
    add rx1548_pos, 1
    nqp_rxpeek $I19, rx1548_bstack, rxcap1550_fail3492
    inc $I19
    set $I11, rx1548_bstack[$I19]
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1548_pos)
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "sym")
    goto rxcap1550_done3491
  rxcap1550_fail3492:
    goto rx1548_fail3484
  rxcap1550_done3491:
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1548_curclass, "$!pos"
    lt $I11, 0, rx1548_fail3484
    nqp_rxmark rx1548_bstack, rxsubrule1551_pass3493, -1, 0
  rxsubrule1551_pass3493:
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1548_pos, $P11, rx1548_curclass, "$!pos"
    rx1548_cur."!cursor_pass"(rx1548_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1548_cur)
  rx1548_restart3483:
    repr_get_attr_obj rx1548_cstack, rx1548_cur, rx1548_curclass, "$!cstack"
  rx1548_fail3484:
    unless rx1548_bstack, rx1548_done3482
    pop $I19, rx1548_bstack
    if_null rx1548_cstack, rx1548_cstack_done3487
    unless rx1548_cstack, rx1548_cstack_done3487
    dec $I19
    set $P11, rx1548_cstack[$I19]
  rx1548_cstack_done3487:
    pop rx1548_rep, rx1548_bstack
    pop rx1548_pos, rx1548_bstack
    pop $I19, rx1548_bstack
    lt rx1548_pos, -1, rx1548_done3482
    lt rx1548_pos, 0, rx1548_fail3484
    eq $I19, 0, rx1548_fail3484
    nqp_islist $I20, rx1548_cstack
    unless $I20, rx1548_jump3485
    elements $I18, rx1548_bstack
    le $I18, 0, rx1548_cut3486
    dec $I18
    set $I18, rx1548_bstack[$I18]
  rx1548_cut3486:
    assign rx1548_cstack, $I18
  rx1548_jump3485:
    jump $I19
  rx1548_done3482:
    rx1548_cur."!cursor_fail"()
    .return (rx1548_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_197_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1387
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1552_start
    .local string rx1552_tgt
    .local int rx1552_pos
    .local int rx1552_off
    .local int rx1552_eos
    .local int rx1552_rep
    .local pmc rx1552_cur
    .local pmc rx1552_curclass
    .local pmc rx1552_bstack
    .local pmc rx1552_cstack
    rx1552_start = self."!cursor_start_all"()
    set rx1552_cur, rx1552_start[0]
    set rx1552_tgt, rx1552_start[1]
    set rx1552_pos, rx1552_start[2]
    set rx1552_curclass, rx1552_start[3]
    set rx1552_bstack, rx1552_start[4]
    set $I19, rx1552_start[5]
    store_lex unicode:"$\x{a2}", rx1552_cur
    length rx1552_eos, rx1552_tgt
    eq $I19, 1, rx1552_restart3496
    gt rx1552_pos, rx1552_eos, rx1552_fail3497
    repr_get_attr_int $I11, self, rx1552_curclass, "$!from"
    ne $I11, -1, rxscan1553_done3503
    goto rxscan1553_scan3502
  rxscan1553_loop3501:
    inc rx1552_pos
    gt rx1552_pos, rx1552_eos, rx1552_fail3497
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!from", rx1552_pos
  rxscan1553_scan3502:
    nqp_rxmark rx1552_bstack, rxscan1553_loop3501, rx1552_pos, 0
  rxscan1553_done3503:
    nqp_rxmark rx1552_bstack, rxcap1554_fail3505, rx1552_pos, 0
    add $I11, rx1552_pos, 2
    gt $I11, rx1552_eos, rx1552_fail3497
    substr $S10, rx1552_tgt, rx1552_pos, 2
    ne $S10, ucs4:"+|", rx1552_fail3497
    add rx1552_pos, 2
    nqp_rxpeek $I19, rx1552_bstack, rxcap1554_fail3505
    inc $I19
    set $I11, rx1552_bstack[$I19]
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1552_pos)
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "sym")
    goto rxcap1554_done3504
  rxcap1554_fail3505:
    goto rx1552_fail3497
  rxcap1554_done3504:
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1552_curclass, "$!pos"
    lt $I11, 0, rx1552_fail3497
    nqp_rxmark rx1552_bstack, rxsubrule1555_pass3506, -1, 0
  rxsubrule1555_pass3506:
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1552_pos, $P11, rx1552_curclass, "$!pos"
    rx1552_cur."!cursor_pass"(rx1552_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1552_cur)
  rx1552_restart3496:
    repr_get_attr_obj rx1552_cstack, rx1552_cur, rx1552_curclass, "$!cstack"
  rx1552_fail3497:
    unless rx1552_bstack, rx1552_done3495
    pop $I19, rx1552_bstack
    if_null rx1552_cstack, rx1552_cstack_done3500
    unless rx1552_cstack, rx1552_cstack_done3500
    dec $I19
    set $P11, rx1552_cstack[$I19]
  rx1552_cstack_done3500:
    pop rx1552_rep, rx1552_bstack
    pop rx1552_pos, rx1552_bstack
    pop $I19, rx1552_bstack
    lt rx1552_pos, -1, rx1552_done3495
    lt rx1552_pos, 0, rx1552_fail3497
    eq $I19, 0, rx1552_fail3497
    nqp_islist $I20, rx1552_cstack
    unless $I20, rx1552_jump3498
    elements $I18, rx1552_bstack
    le $I18, 0, rx1552_cut3499
    dec $I18
    set $I18, rx1552_bstack[$I18]
  rx1552_cut3499:
    assign rx1552_cstack, $I18
  rx1552_jump3498:
    jump $I19
  rx1552_done3495:
    rx1552_cur."!cursor_fail"()
    .return (rx1552_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_198_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1388
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1556_start
    .local string rx1556_tgt
    .local int rx1556_pos
    .local int rx1556_off
    .local int rx1556_eos
    .local int rx1556_rep
    .local pmc rx1556_cur
    .local pmc rx1556_curclass
    .local pmc rx1556_bstack
    .local pmc rx1556_cstack
    rx1556_start = self."!cursor_start_all"()
    set rx1556_cur, rx1556_start[0]
    set rx1556_tgt, rx1556_start[1]
    set rx1556_pos, rx1556_start[2]
    set rx1556_curclass, rx1556_start[3]
    set rx1556_bstack, rx1556_start[4]
    set $I19, rx1556_start[5]
    store_lex unicode:"$\x{a2}", rx1556_cur
    length rx1556_eos, rx1556_tgt
    eq $I19, 1, rx1556_restart3509
    gt rx1556_pos, rx1556_eos, rx1556_fail3510
    repr_get_attr_int $I11, self, rx1556_curclass, "$!from"
    ne $I11, -1, rxscan1557_done3516
    goto rxscan1557_scan3515
  rxscan1557_loop3514:
    inc rx1556_pos
    gt rx1556_pos, rx1556_eos, rx1556_fail3510
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!from", rx1556_pos
  rxscan1557_scan3515:
    nqp_rxmark rx1556_bstack, rxscan1557_loop3514, rx1556_pos, 0
  rxscan1557_done3516:
    nqp_rxmark rx1556_bstack, rxcap1558_fail3518, rx1556_pos, 0
    add $I11, rx1556_pos, 2
    gt $I11, rx1556_eos, rx1556_fail3510
    substr $S10, rx1556_tgt, rx1556_pos, 2
    ne $S10, ucs4:"+^", rx1556_fail3510
    add rx1556_pos, 2
    nqp_rxpeek $I19, rx1556_bstack, rxcap1558_fail3518
    inc $I19
    set $I11, rx1556_bstack[$I19]
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1556_pos)
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "sym")
    goto rxcap1558_done3517
  rxcap1558_fail3518:
    goto rx1556_fail3510
  rxcap1558_done3517:
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1556_curclass, "$!pos"
    lt $I11, 0, rx1556_fail3510
    nqp_rxmark rx1556_bstack, rxsubrule1559_pass3519, -1, 0
  rxsubrule1559_pass3519:
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1556_pos, $P11, rx1556_curclass, "$!pos"
    rx1556_cur."!cursor_pass"(rx1556_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1556_cur)
  rx1556_restart3509:
    repr_get_attr_obj rx1556_cstack, rx1556_cur, rx1556_curclass, "$!cstack"
  rx1556_fail3510:
    unless rx1556_bstack, rx1556_done3508
    pop $I19, rx1556_bstack
    if_null rx1556_cstack, rx1556_cstack_done3513
    unless rx1556_cstack, rx1556_cstack_done3513
    dec $I19
    set $P11, rx1556_cstack[$I19]
  rx1556_cstack_done3513:
    pop rx1556_rep, rx1556_bstack
    pop rx1556_pos, rx1556_bstack
    pop $I19, rx1556_bstack
    lt rx1556_pos, -1, rx1556_done3508
    lt rx1556_pos, 0, rx1556_fail3510
    eq $I19, 0, rx1556_fail3510
    nqp_islist $I20, rx1556_cstack
    unless $I20, rx1556_jump3511
    elements $I18, rx1556_bstack
    le $I18, 0, rx1556_cut3512
    dec $I18
    set $I18, rx1556_bstack[$I18]
  rx1556_cut3512:
    assign rx1556_cstack, $I18
  rx1556_jump3511:
    jump $I19
  rx1556_done3508:
    rx1556_cur."!cursor_fail"()
    .return (rx1556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_199_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1390
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1560_start
    .local string rx1560_tgt
    .local int rx1560_pos
    .local int rx1560_off
    .local int rx1560_eos
    .local int rx1560_rep
    .local pmc rx1560_cur
    .local pmc rx1560_curclass
    .local pmc rx1560_bstack
    .local pmc rx1560_cstack
    rx1560_start = self."!cursor_start_all"()
    set rx1560_cur, rx1560_start[0]
    set rx1560_tgt, rx1560_start[1]
    set rx1560_pos, rx1560_start[2]
    set rx1560_curclass, rx1560_start[3]
    set rx1560_bstack, rx1560_start[4]
    set $I19, rx1560_start[5]
    store_lex unicode:"$\x{a2}", rx1560_cur
    length rx1560_eos, rx1560_tgt
    eq $I19, 1, rx1560_restart3522
    gt rx1560_pos, rx1560_eos, rx1560_fail3523
    repr_get_attr_int $I11, self, rx1560_curclass, "$!from"
    ne $I11, -1, rxscan1561_done3529
    goto rxscan1561_scan3528
  rxscan1561_loop3527:
    inc rx1560_pos
    gt rx1560_pos, rx1560_eos, rx1560_fail3523
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!from", rx1560_pos
  rxscan1561_scan3528:
    nqp_rxmark rx1560_bstack, rxscan1561_loop3527, rx1560_pos, 0
  rxscan1561_done3529:
    nqp_rxmark rx1560_bstack, rxcap1562_fail3531, rx1560_pos, 0
    add $I11, rx1560_pos, 1
    gt $I11, rx1560_eos, rx1560_fail3523
    substr $S10, rx1560_tgt, rx1560_pos, 1
    ne $S10, ucs4:"~", rx1560_fail3523
    add rx1560_pos, 1
    nqp_rxpeek $I19, rx1560_bstack, rxcap1562_fail3531
    inc $I19
    set $I11, rx1560_bstack[$I19]
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1560_pos)
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "sym")
    goto rxcap1562_done3530
  rxcap1562_fail3531:
    goto rx1560_fail3523
  rxcap1562_done3530:
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1560_curclass, "$!pos"
    lt $I11, 0, rx1560_fail3523
    nqp_rxmark rx1560_bstack, rxsubrule1563_pass3532, -1, 0
  rxsubrule1563_pass3532:
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1560_pos, $P11, rx1560_curclass, "$!pos"
    rx1560_cur."!cursor_pass"(rx1560_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1560_cur)
  rx1560_restart3522:
    repr_get_attr_obj rx1560_cstack, rx1560_cur, rx1560_curclass, "$!cstack"
  rx1560_fail3523:
    unless rx1560_bstack, rx1560_done3521
    pop $I19, rx1560_bstack
    if_null rx1560_cstack, rx1560_cstack_done3526
    unless rx1560_cstack, rx1560_cstack_done3526
    dec $I19
    set $P11, rx1560_cstack[$I19]
  rx1560_cstack_done3526:
    pop rx1560_rep, rx1560_bstack
    pop rx1560_pos, rx1560_bstack
    pop $I19, rx1560_bstack
    lt rx1560_pos, -1, rx1560_done3521
    lt rx1560_pos, 0, rx1560_fail3523
    eq $I19, 0, rx1560_fail3523
    nqp_islist $I20, rx1560_cstack
    unless $I20, rx1560_jump3524
    elements $I18, rx1560_bstack
    le $I18, 0, rx1560_cut3525
    dec $I18
    set $I18, rx1560_bstack[$I18]
  rx1560_cut3525:
    assign rx1560_cstack, $I18
  rx1560_jump3524:
    jump $I19
  rx1560_done3521:
    rx1560_cur."!cursor_fail"()
    .return (rx1560_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_200_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1564_start
    .local string rx1564_tgt
    .local int rx1564_pos
    .local int rx1564_off
    .local int rx1564_eos
    .local int rx1564_rep
    .local pmc rx1564_cur
    .local pmc rx1564_curclass
    .local pmc rx1564_bstack
    .local pmc rx1564_cstack
    rx1564_start = self."!cursor_start_all"()
    set rx1564_cur, rx1564_start[0]
    set rx1564_tgt, rx1564_start[1]
    set rx1564_pos, rx1564_start[2]
    set rx1564_curclass, rx1564_start[3]
    set rx1564_bstack, rx1564_start[4]
    set $I19, rx1564_start[5]
    store_lex unicode:"$\x{a2}", rx1564_cur
    length rx1564_eos, rx1564_tgt
    eq $I19, 1, rx1564_restart3535
    gt rx1564_pos, rx1564_eos, rx1564_fail3536
    repr_get_attr_int $I11, self, rx1564_curclass, "$!from"
    ne $I11, -1, rxscan1565_done3542
    goto rxscan1565_scan3541
  rxscan1565_loop3540:
    inc rx1564_pos
    gt rx1564_pos, rx1564_eos, rx1564_fail3536
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!from", rx1564_pos
  rxscan1565_scan3541:
    nqp_rxmark rx1564_bstack, rxscan1565_loop3540, rx1564_pos, 0
  rxscan1565_done3542:
    nqp_rxmark rx1564_bstack, rxcap1566_fail3544, rx1564_pos, 0
    add $I11, rx1564_pos, 2
    gt $I11, rx1564_eos, rx1564_fail3536
    substr $S10, rx1564_tgt, rx1564_pos, 2
    ne $S10, ucs4:"==", rx1564_fail3536
    add rx1564_pos, 2
    nqp_rxpeek $I19, rx1564_bstack, rxcap1566_fail3544
    inc $I19
    set $I11, rx1564_bstack[$I19]
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1564_pos)
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "sym")
    goto rxcap1566_done3543
  rxcap1566_fail3544:
    goto rx1564_fail3536
  rxcap1566_done3543:
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1564_curclass, "$!pos"
    lt $I11, 0, rx1564_fail3536
    nqp_rxmark rx1564_bstack, rxsubrule1567_pass3545, -1, 0
  rxsubrule1567_pass3545:
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1564_pos, $P11, rx1564_curclass, "$!pos"
    rx1564_cur."!cursor_pass"(rx1564_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1564_cur)
  rx1564_restart3535:
    repr_get_attr_obj rx1564_cstack, rx1564_cur, rx1564_curclass, "$!cstack"
  rx1564_fail3536:
    unless rx1564_bstack, rx1564_done3534
    pop $I19, rx1564_bstack
    if_null rx1564_cstack, rx1564_cstack_done3539
    unless rx1564_cstack, rx1564_cstack_done3539
    dec $I19
    set $P11, rx1564_cstack[$I19]
  rx1564_cstack_done3539:
    pop rx1564_rep, rx1564_bstack
    pop rx1564_pos, rx1564_bstack
    pop $I19, rx1564_bstack
    lt rx1564_pos, -1, rx1564_done3534
    lt rx1564_pos, 0, rx1564_fail3536
    eq $I19, 0, rx1564_fail3536
    nqp_islist $I20, rx1564_cstack
    unless $I20, rx1564_jump3537
    elements $I18, rx1564_bstack
    le $I18, 0, rx1564_cut3538
    dec $I18
    set $I18, rx1564_bstack[$I18]
  rx1564_cut3538:
    assign rx1564_cstack, $I18
  rx1564_jump3537:
    jump $I19
  rx1564_done3534:
    rx1564_cur."!cursor_fail"()
    .return (rx1564_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_201_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1393
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1568_start
    .local string rx1568_tgt
    .local int rx1568_pos
    .local int rx1568_off
    .local int rx1568_eos
    .local int rx1568_rep
    .local pmc rx1568_cur
    .local pmc rx1568_curclass
    .local pmc rx1568_bstack
    .local pmc rx1568_cstack
    rx1568_start = self."!cursor_start_all"()
    set rx1568_cur, rx1568_start[0]
    set rx1568_tgt, rx1568_start[1]
    set rx1568_pos, rx1568_start[2]
    set rx1568_curclass, rx1568_start[3]
    set rx1568_bstack, rx1568_start[4]
    set $I19, rx1568_start[5]
    store_lex unicode:"$\x{a2}", rx1568_cur
    length rx1568_eos, rx1568_tgt
    eq $I19, 1, rx1568_restart3548
    gt rx1568_pos, rx1568_eos, rx1568_fail3549
    repr_get_attr_int $I11, self, rx1568_curclass, "$!from"
    ne $I11, -1, rxscan1569_done3555
    goto rxscan1569_scan3554
  rxscan1569_loop3553:
    inc rx1568_pos
    gt rx1568_pos, rx1568_eos, rx1568_fail3549
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!from", rx1568_pos
  rxscan1569_scan3554:
    nqp_rxmark rx1568_bstack, rxscan1569_loop3553, rx1568_pos, 0
  rxscan1569_done3555:
    nqp_rxmark rx1568_bstack, rxcap1570_fail3557, rx1568_pos, 0
    add $I11, rx1568_pos, 2
    gt $I11, rx1568_eos, rx1568_fail3549
    substr $S10, rx1568_tgt, rx1568_pos, 2
    ne $S10, ucs4:"!=", rx1568_fail3549
    add rx1568_pos, 2
    nqp_rxpeek $I19, rx1568_bstack, rxcap1570_fail3557
    inc $I19
    set $I11, rx1568_bstack[$I19]
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1568_pos)
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "sym")
    goto rxcap1570_done3556
  rxcap1570_fail3557:
    goto rx1568_fail3549
  rxcap1570_done3556:
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1568_curclass, "$!pos"
    lt $I11, 0, rx1568_fail3549
    nqp_rxmark rx1568_bstack, rxsubrule1571_pass3558, -1, 0
  rxsubrule1571_pass3558:
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1568_pos, $P11, rx1568_curclass, "$!pos"
    rx1568_cur."!cursor_pass"(rx1568_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1568_cur)
  rx1568_restart3548:
    repr_get_attr_obj rx1568_cstack, rx1568_cur, rx1568_curclass, "$!cstack"
  rx1568_fail3549:
    unless rx1568_bstack, rx1568_done3547
    pop $I19, rx1568_bstack
    if_null rx1568_cstack, rx1568_cstack_done3552
    unless rx1568_cstack, rx1568_cstack_done3552
    dec $I19
    set $P11, rx1568_cstack[$I19]
  rx1568_cstack_done3552:
    pop rx1568_rep, rx1568_bstack
    pop rx1568_pos, rx1568_bstack
    pop $I19, rx1568_bstack
    lt rx1568_pos, -1, rx1568_done3547
    lt rx1568_pos, 0, rx1568_fail3549
    eq $I19, 0, rx1568_fail3549
    nqp_islist $I20, rx1568_cstack
    unless $I20, rx1568_jump3550
    elements $I18, rx1568_bstack
    le $I18, 0, rx1568_cut3551
    dec $I18
    set $I18, rx1568_bstack[$I18]
  rx1568_cut3551:
    assign rx1568_cstack, $I18
  rx1568_jump3550:
    jump $I19
  rx1568_done3547:
    rx1568_cur."!cursor_fail"()
    .return (rx1568_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_202_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1394
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1572_start
    .local string rx1572_tgt
    .local int rx1572_pos
    .local int rx1572_off
    .local int rx1572_eos
    .local int rx1572_rep
    .local pmc rx1572_cur
    .local pmc rx1572_curclass
    .local pmc rx1572_bstack
    .local pmc rx1572_cstack
    rx1572_start = self."!cursor_start_all"()
    set rx1572_cur, rx1572_start[0]
    set rx1572_tgt, rx1572_start[1]
    set rx1572_pos, rx1572_start[2]
    set rx1572_curclass, rx1572_start[3]
    set rx1572_bstack, rx1572_start[4]
    set $I19, rx1572_start[5]
    store_lex unicode:"$\x{a2}", rx1572_cur
    length rx1572_eos, rx1572_tgt
    eq $I19, 1, rx1572_restart3561
    gt rx1572_pos, rx1572_eos, rx1572_fail3562
    repr_get_attr_int $I11, self, rx1572_curclass, "$!from"
    ne $I11, -1, rxscan1573_done3568
    goto rxscan1573_scan3567
  rxscan1573_loop3566:
    inc rx1572_pos
    gt rx1572_pos, rx1572_eos, rx1572_fail3562
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!from", rx1572_pos
  rxscan1573_scan3567:
    nqp_rxmark rx1572_bstack, rxscan1573_loop3566, rx1572_pos, 0
  rxscan1573_done3568:
    nqp_rxmark rx1572_bstack, rxcap1574_fail3570, rx1572_pos, 0
    add $I11, rx1572_pos, 2
    gt $I11, rx1572_eos, rx1572_fail3562
    substr $S10, rx1572_tgt, rx1572_pos, 2
    ne $S10, ucs4:"<=", rx1572_fail3562
    add rx1572_pos, 2
    nqp_rxpeek $I19, rx1572_bstack, rxcap1574_fail3570
    inc $I19
    set $I11, rx1572_bstack[$I19]
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1572_pos)
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "sym")
    goto rxcap1574_done3569
  rxcap1574_fail3570:
    goto rx1572_fail3562
  rxcap1574_done3569:
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1572_curclass, "$!pos"
    lt $I11, 0, rx1572_fail3562
    nqp_rxmark rx1572_bstack, rxsubrule1575_pass3571, -1, 0
  rxsubrule1575_pass3571:
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1572_pos, $P11, rx1572_curclass, "$!pos"
    rx1572_cur."!cursor_pass"(rx1572_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1572_cur)
  rx1572_restart3561:
    repr_get_attr_obj rx1572_cstack, rx1572_cur, rx1572_curclass, "$!cstack"
  rx1572_fail3562:
    unless rx1572_bstack, rx1572_done3560
    pop $I19, rx1572_bstack
    if_null rx1572_cstack, rx1572_cstack_done3565
    unless rx1572_cstack, rx1572_cstack_done3565
    dec $I19
    set $P11, rx1572_cstack[$I19]
  rx1572_cstack_done3565:
    pop rx1572_rep, rx1572_bstack
    pop rx1572_pos, rx1572_bstack
    pop $I19, rx1572_bstack
    lt rx1572_pos, -1, rx1572_done3560
    lt rx1572_pos, 0, rx1572_fail3562
    eq $I19, 0, rx1572_fail3562
    nqp_islist $I20, rx1572_cstack
    unless $I20, rx1572_jump3563
    elements $I18, rx1572_bstack
    le $I18, 0, rx1572_cut3564
    dec $I18
    set $I18, rx1572_bstack[$I18]
  rx1572_cut3564:
    assign rx1572_cstack, $I18
  rx1572_jump3563:
    jump $I19
  rx1572_done3560:
    rx1572_cur."!cursor_fail"()
    .return (rx1572_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_203_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1576_start
    .local string rx1576_tgt
    .local int rx1576_pos
    .local int rx1576_off
    .local int rx1576_eos
    .local int rx1576_rep
    .local pmc rx1576_cur
    .local pmc rx1576_curclass
    .local pmc rx1576_bstack
    .local pmc rx1576_cstack
    rx1576_start = self."!cursor_start_all"()
    set rx1576_cur, rx1576_start[0]
    set rx1576_tgt, rx1576_start[1]
    set rx1576_pos, rx1576_start[2]
    set rx1576_curclass, rx1576_start[3]
    set rx1576_bstack, rx1576_start[4]
    set $I19, rx1576_start[5]
    store_lex unicode:"$\x{a2}", rx1576_cur
    length rx1576_eos, rx1576_tgt
    eq $I19, 1, rx1576_restart3574
    gt rx1576_pos, rx1576_eos, rx1576_fail3575
    repr_get_attr_int $I11, self, rx1576_curclass, "$!from"
    ne $I11, -1, rxscan1577_done3581
    goto rxscan1577_scan3580
  rxscan1577_loop3579:
    inc rx1576_pos
    gt rx1576_pos, rx1576_eos, rx1576_fail3575
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!from", rx1576_pos
  rxscan1577_scan3580:
    nqp_rxmark rx1576_bstack, rxscan1577_loop3579, rx1576_pos, 0
  rxscan1577_done3581:
    nqp_rxmark rx1576_bstack, rxcap1578_fail3583, rx1576_pos, 0
    add $I11, rx1576_pos, 2
    gt $I11, rx1576_eos, rx1576_fail3575
    substr $S10, rx1576_tgt, rx1576_pos, 2
    ne $S10, ucs4:">=", rx1576_fail3575
    add rx1576_pos, 2
    nqp_rxpeek $I19, rx1576_bstack, rxcap1578_fail3583
    inc $I19
    set $I11, rx1576_bstack[$I19]
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1576_pos)
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "sym")
    goto rxcap1578_done3582
  rxcap1578_fail3583:
    goto rx1576_fail3575
  rxcap1578_done3582:
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3575
    nqp_rxmark rx1576_bstack, rxsubrule1579_pass3584, -1, 0
  rxsubrule1579_pass3584:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
    rx1576_cur."!cursor_pass"(rx1576_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1576_cur)
  rx1576_restart3574:
    repr_get_attr_obj rx1576_cstack, rx1576_cur, rx1576_curclass, "$!cstack"
  rx1576_fail3575:
    unless rx1576_bstack, rx1576_done3573
    pop $I19, rx1576_bstack
    if_null rx1576_cstack, rx1576_cstack_done3578
    unless rx1576_cstack, rx1576_cstack_done3578
    dec $I19
    set $P11, rx1576_cstack[$I19]
  rx1576_cstack_done3578:
    pop rx1576_rep, rx1576_bstack
    pop rx1576_pos, rx1576_bstack
    pop $I19, rx1576_bstack
    lt rx1576_pos, -1, rx1576_done3573
    lt rx1576_pos, 0, rx1576_fail3575
    eq $I19, 0, rx1576_fail3575
    nqp_islist $I20, rx1576_cstack
    unless $I20, rx1576_jump3576
    elements $I18, rx1576_bstack
    le $I18, 0, rx1576_cut3577
    dec $I18
    set $I18, rx1576_bstack[$I18]
  rx1576_cut3577:
    assign rx1576_cstack, $I18
  rx1576_jump3576:
    jump $I19
  rx1576_done3573:
    rx1576_cur."!cursor_fail"()
    .return (rx1576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_204_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1396
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1580_start
    .local string rx1580_tgt
    .local int rx1580_pos
    .local int rx1580_off
    .local int rx1580_eos
    .local int rx1580_rep
    .local pmc rx1580_cur
    .local pmc rx1580_curclass
    .local pmc rx1580_bstack
    .local pmc rx1580_cstack
    rx1580_start = self."!cursor_start_all"()
    set rx1580_cur, rx1580_start[0]
    set rx1580_tgt, rx1580_start[1]
    set rx1580_pos, rx1580_start[2]
    set rx1580_curclass, rx1580_start[3]
    set rx1580_bstack, rx1580_start[4]
    set $I19, rx1580_start[5]
    store_lex unicode:"$\x{a2}", rx1580_cur
    length rx1580_eos, rx1580_tgt
    eq $I19, 1, rx1580_restart3587
    gt rx1580_pos, rx1580_eos, rx1580_fail3588
    repr_get_attr_int $I11, self, rx1580_curclass, "$!from"
    ne $I11, -1, rxscan1581_done3594
    goto rxscan1581_scan3593
  rxscan1581_loop3592:
    inc rx1580_pos
    gt rx1580_pos, rx1580_eos, rx1580_fail3588
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!from", rx1580_pos
  rxscan1581_scan3593:
    nqp_rxmark rx1580_bstack, rxscan1581_loop3592, rx1580_pos, 0
  rxscan1581_done3594:
    nqp_rxmark rx1580_bstack, rxcap1582_fail3596, rx1580_pos, 0
    add $I11, rx1580_pos, 1
    gt $I11, rx1580_eos, rx1580_fail3588
    substr $S10, rx1580_tgt, rx1580_pos, 1
    ne $S10, ucs4:"<", rx1580_fail3588
    add rx1580_pos, 1
    nqp_rxpeek $I19, rx1580_bstack, rxcap1582_fail3596
    inc $I19
    set $I11, rx1580_bstack[$I19]
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!pos", rx1580_pos
    $P11 = rx1580_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1580_pos)
    rx1580_cstack = rx1580_cur."!cursor_capture"($P11, "sym")
    goto rxcap1582_done3595
  rxcap1582_fail3596:
    goto rx1580_fail3588
  rxcap1582_done3595:
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!pos", rx1580_pos
    $P11 = rx1580_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1580_curclass, "$!pos"
    lt $I11, 0, rx1580_fail3588
    nqp_rxmark rx1580_bstack, rxsubrule1583_pass3597, -1, 0
  rxsubrule1583_pass3597:
    rx1580_cstack = rx1580_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1580_pos, $P11, rx1580_curclass, "$!pos"
    rx1580_cur."!cursor_pass"(rx1580_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1580_cur)
  rx1580_restart3587:
    repr_get_attr_obj rx1580_cstack, rx1580_cur, rx1580_curclass, "$!cstack"
  rx1580_fail3588:
    unless rx1580_bstack, rx1580_done3586
    pop $I19, rx1580_bstack
    if_null rx1580_cstack, rx1580_cstack_done3591
    unless rx1580_cstack, rx1580_cstack_done3591
    dec $I19
    set $P11, rx1580_cstack[$I19]
  rx1580_cstack_done3591:
    pop rx1580_rep, rx1580_bstack
    pop rx1580_pos, rx1580_bstack
    pop $I19, rx1580_bstack
    lt rx1580_pos, -1, rx1580_done3586
    lt rx1580_pos, 0, rx1580_fail3588
    eq $I19, 0, rx1580_fail3588
    nqp_islist $I20, rx1580_cstack
    unless $I20, rx1580_jump3589
    elements $I18, rx1580_bstack
    le $I18, 0, rx1580_cut3590
    dec $I18
    set $I18, rx1580_bstack[$I18]
  rx1580_cut3590:
    assign rx1580_cstack, $I18
  rx1580_jump3589:
    jump $I19
  rx1580_done3586:
    rx1580_cur."!cursor_fail"()
    .return (rx1580_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_205_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1584_start
    .local string rx1584_tgt
    .local int rx1584_pos
    .local int rx1584_off
    .local int rx1584_eos
    .local int rx1584_rep
    .local pmc rx1584_cur
    .local pmc rx1584_curclass
    .local pmc rx1584_bstack
    .local pmc rx1584_cstack
    rx1584_start = self."!cursor_start_all"()
    set rx1584_cur, rx1584_start[0]
    set rx1584_tgt, rx1584_start[1]
    set rx1584_pos, rx1584_start[2]
    set rx1584_curclass, rx1584_start[3]
    set rx1584_bstack, rx1584_start[4]
    set $I19, rx1584_start[5]
    store_lex unicode:"$\x{a2}", rx1584_cur
    length rx1584_eos, rx1584_tgt
    eq $I19, 1, rx1584_restart3600
    gt rx1584_pos, rx1584_eos, rx1584_fail3601
    repr_get_attr_int $I11, self, rx1584_curclass, "$!from"
    ne $I11, -1, rxscan1585_done3607
    goto rxscan1585_scan3606
  rxscan1585_loop3605:
    inc rx1584_pos
    gt rx1584_pos, rx1584_eos, rx1584_fail3601
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!from", rx1584_pos
  rxscan1585_scan3606:
    nqp_rxmark rx1584_bstack, rxscan1585_loop3605, rx1584_pos, 0
  rxscan1585_done3607:
    nqp_rxmark rx1584_bstack, rxcap1586_fail3609, rx1584_pos, 0
    add $I11, rx1584_pos, 1
    gt $I11, rx1584_eos, rx1584_fail3601
    substr $S10, rx1584_tgt, rx1584_pos, 1
    ne $S10, ucs4:">", rx1584_fail3601
    add rx1584_pos, 1
    nqp_rxpeek $I19, rx1584_bstack, rxcap1586_fail3609
    inc $I19
    set $I11, rx1584_bstack[$I19]
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!pos", rx1584_pos
    $P11 = rx1584_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1584_pos)
    rx1584_cstack = rx1584_cur."!cursor_capture"($P11, "sym")
    goto rxcap1586_done3608
  rxcap1586_fail3609:
    goto rx1584_fail3601
  rxcap1586_done3608:
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!pos", rx1584_pos
    $P11 = rx1584_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1584_curclass, "$!pos"
    lt $I11, 0, rx1584_fail3601
    nqp_rxmark rx1584_bstack, rxsubrule1587_pass3610, -1, 0
  rxsubrule1587_pass3610:
    rx1584_cstack = rx1584_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1584_pos, $P11, rx1584_curclass, "$!pos"
    rx1584_cur."!cursor_pass"(rx1584_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1584_cur)
  rx1584_restart3600:
    repr_get_attr_obj rx1584_cstack, rx1584_cur, rx1584_curclass, "$!cstack"
  rx1584_fail3601:
    unless rx1584_bstack, rx1584_done3599
    pop $I19, rx1584_bstack
    if_null rx1584_cstack, rx1584_cstack_done3604
    unless rx1584_cstack, rx1584_cstack_done3604
    dec $I19
    set $P11, rx1584_cstack[$I19]
  rx1584_cstack_done3604:
    pop rx1584_rep, rx1584_bstack
    pop rx1584_pos, rx1584_bstack
    pop $I19, rx1584_bstack
    lt rx1584_pos, -1, rx1584_done3599
    lt rx1584_pos, 0, rx1584_fail3601
    eq $I19, 0, rx1584_fail3601
    nqp_islist $I20, rx1584_cstack
    unless $I20, rx1584_jump3602
    elements $I18, rx1584_bstack
    le $I18, 0, rx1584_cut3603
    dec $I18
    set $I18, rx1584_bstack[$I18]
  rx1584_cut3603:
    assign rx1584_cstack, $I18
  rx1584_jump3602:
    jump $I19
  rx1584_done3599:
    rx1584_cur."!cursor_fail"()
    .return (rx1584_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_206_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1398
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1588_start
    .local string rx1588_tgt
    .local int rx1588_pos
    .local int rx1588_off
    .local int rx1588_eos
    .local int rx1588_rep
    .local pmc rx1588_cur
    .local pmc rx1588_curclass
    .local pmc rx1588_bstack
    .local pmc rx1588_cstack
    rx1588_start = self."!cursor_start_all"()
    set rx1588_cur, rx1588_start[0]
    set rx1588_tgt, rx1588_start[1]
    set rx1588_pos, rx1588_start[2]
    set rx1588_curclass, rx1588_start[3]
    set rx1588_bstack, rx1588_start[4]
    set $I19, rx1588_start[5]
    store_lex unicode:"$\x{a2}", rx1588_cur
    length rx1588_eos, rx1588_tgt
    eq $I19, 1, rx1588_restart3613
    gt rx1588_pos, rx1588_eos, rx1588_fail3614
    repr_get_attr_int $I11, self, rx1588_curclass, "$!from"
    ne $I11, -1, rxscan1589_done3620
    goto rxscan1589_scan3619
  rxscan1589_loop3618:
    inc rx1588_pos
    gt rx1588_pos, rx1588_eos, rx1588_fail3614
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!from", rx1588_pos
  rxscan1589_scan3619:
    nqp_rxmark rx1588_bstack, rxscan1589_loop3618, rx1588_pos, 0
  rxscan1589_done3620:
    nqp_rxmark rx1588_bstack, rxcap1590_fail3622, rx1588_pos, 0
    add $I11, rx1588_pos, 2
    gt $I11, rx1588_eos, rx1588_fail3614
    substr $S10, rx1588_tgt, rx1588_pos, 2
    ne $S10, ucs4:"eq", rx1588_fail3614
    add rx1588_pos, 2
    nqp_rxpeek $I19, rx1588_bstack, rxcap1590_fail3622
    inc $I19
    set $I11, rx1588_bstack[$I19]
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1588_pos)
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "sym")
    goto rxcap1590_done3621
  rxcap1590_fail3622:
    goto rx1588_fail3614
  rxcap1590_done3621:
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1588_curclass, "$!pos"
    lt $I11, 0, rx1588_fail3614
    nqp_rxmark rx1588_bstack, rxsubrule1591_pass3623, -1, 0
  rxsubrule1591_pass3623:
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1588_pos, $P11, rx1588_curclass, "$!pos"
    rx1588_cur."!cursor_pass"(rx1588_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1588_cur)
  rx1588_restart3613:
    repr_get_attr_obj rx1588_cstack, rx1588_cur, rx1588_curclass, "$!cstack"
  rx1588_fail3614:
    unless rx1588_bstack, rx1588_done3612
    pop $I19, rx1588_bstack
    if_null rx1588_cstack, rx1588_cstack_done3617
    unless rx1588_cstack, rx1588_cstack_done3617
    dec $I19
    set $P11, rx1588_cstack[$I19]
  rx1588_cstack_done3617:
    pop rx1588_rep, rx1588_bstack
    pop rx1588_pos, rx1588_bstack
    pop $I19, rx1588_bstack
    lt rx1588_pos, -1, rx1588_done3612
    lt rx1588_pos, 0, rx1588_fail3614
    eq $I19, 0, rx1588_fail3614
    nqp_islist $I20, rx1588_cstack
    unless $I20, rx1588_jump3615
    elements $I18, rx1588_bstack
    le $I18, 0, rx1588_cut3616
    dec $I18
    set $I18, rx1588_bstack[$I18]
  rx1588_cut3616:
    assign rx1588_cstack, $I18
  rx1588_jump3615:
    jump $I19
  rx1588_done3612:
    rx1588_cur."!cursor_fail"()
    .return (rx1588_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_207_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1399
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1592_start
    .local string rx1592_tgt
    .local int rx1592_pos
    .local int rx1592_off
    .local int rx1592_eos
    .local int rx1592_rep
    .local pmc rx1592_cur
    .local pmc rx1592_curclass
    .local pmc rx1592_bstack
    .local pmc rx1592_cstack
    rx1592_start = self."!cursor_start_all"()
    set rx1592_cur, rx1592_start[0]
    set rx1592_tgt, rx1592_start[1]
    set rx1592_pos, rx1592_start[2]
    set rx1592_curclass, rx1592_start[3]
    set rx1592_bstack, rx1592_start[4]
    set $I19, rx1592_start[5]
    store_lex unicode:"$\x{a2}", rx1592_cur
    length rx1592_eos, rx1592_tgt
    eq $I19, 1, rx1592_restart3626
    gt rx1592_pos, rx1592_eos, rx1592_fail3627
    repr_get_attr_int $I11, self, rx1592_curclass, "$!from"
    ne $I11, -1, rxscan1593_done3633
    goto rxscan1593_scan3632
  rxscan1593_loop3631:
    inc rx1592_pos
    gt rx1592_pos, rx1592_eos, rx1592_fail3627
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!from", rx1592_pos
  rxscan1593_scan3632:
    nqp_rxmark rx1592_bstack, rxscan1593_loop3631, rx1592_pos, 0
  rxscan1593_done3633:
    nqp_rxmark rx1592_bstack, rxcap1594_fail3635, rx1592_pos, 0
    add $I11, rx1592_pos, 2
    gt $I11, rx1592_eos, rx1592_fail3627
    substr $S10, rx1592_tgt, rx1592_pos, 2
    ne $S10, ucs4:"ne", rx1592_fail3627
    add rx1592_pos, 2
    nqp_rxpeek $I19, rx1592_bstack, rxcap1594_fail3635
    inc $I19
    set $I11, rx1592_bstack[$I19]
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1592_pos)
    rx1592_cstack = rx1592_cur."!cursor_capture"($P11, "sym")
    goto rxcap1594_done3634
  rxcap1594_fail3635:
    goto rx1592_fail3627
  rxcap1594_done3634:
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1592_curclass, "$!pos"
    lt $I11, 0, rx1592_fail3627
    nqp_rxmark rx1592_bstack, rxsubrule1595_pass3636, -1, 0
  rxsubrule1595_pass3636:
    rx1592_cstack = rx1592_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1592_pos, $P11, rx1592_curclass, "$!pos"
    rx1592_cur."!cursor_pass"(rx1592_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1592_cur)
  rx1592_restart3626:
    repr_get_attr_obj rx1592_cstack, rx1592_cur, rx1592_curclass, "$!cstack"
  rx1592_fail3627:
    unless rx1592_bstack, rx1592_done3625
    pop $I19, rx1592_bstack
    if_null rx1592_cstack, rx1592_cstack_done3630
    unless rx1592_cstack, rx1592_cstack_done3630
    dec $I19
    set $P11, rx1592_cstack[$I19]
  rx1592_cstack_done3630:
    pop rx1592_rep, rx1592_bstack
    pop rx1592_pos, rx1592_bstack
    pop $I19, rx1592_bstack
    lt rx1592_pos, -1, rx1592_done3625
    lt rx1592_pos, 0, rx1592_fail3627
    eq $I19, 0, rx1592_fail3627
    nqp_islist $I20, rx1592_cstack
    unless $I20, rx1592_jump3628
    elements $I18, rx1592_bstack
    le $I18, 0, rx1592_cut3629
    dec $I18
    set $I18, rx1592_bstack[$I18]
  rx1592_cut3629:
    assign rx1592_cstack, $I18
  rx1592_jump3628:
    jump $I19
  rx1592_done3625:
    rx1592_cur."!cursor_fail"()
    .return (rx1592_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_208_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1400
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1596_start
    .local string rx1596_tgt
    .local int rx1596_pos
    .local int rx1596_off
    .local int rx1596_eos
    .local int rx1596_rep
    .local pmc rx1596_cur
    .local pmc rx1596_curclass
    .local pmc rx1596_bstack
    .local pmc rx1596_cstack
    rx1596_start = self."!cursor_start_all"()
    set rx1596_cur, rx1596_start[0]
    set rx1596_tgt, rx1596_start[1]
    set rx1596_pos, rx1596_start[2]
    set rx1596_curclass, rx1596_start[3]
    set rx1596_bstack, rx1596_start[4]
    set $I19, rx1596_start[5]
    store_lex unicode:"$\x{a2}", rx1596_cur
    length rx1596_eos, rx1596_tgt
    eq $I19, 1, rx1596_restart3639
    gt rx1596_pos, rx1596_eos, rx1596_fail3640
    repr_get_attr_int $I11, self, rx1596_curclass, "$!from"
    ne $I11, -1, rxscan1597_done3646
    goto rxscan1597_scan3645
  rxscan1597_loop3644:
    inc rx1596_pos
    gt rx1596_pos, rx1596_eos, rx1596_fail3640
    repr_bind_attr_int rx1596_cur, rx1596_curclass, "$!from", rx1596_pos
  rxscan1597_scan3645:
    nqp_rxmark rx1596_bstack, rxscan1597_loop3644, rx1596_pos, 0
  rxscan1597_done3646:
    nqp_rxmark rx1596_bstack, rxcap1598_fail3648, rx1596_pos, 0
    add $I11, rx1596_pos, 2
    gt $I11, rx1596_eos, rx1596_fail3640
    substr $S10, rx1596_tgt, rx1596_pos, 2
    ne $S10, ucs4:"le", rx1596_fail3640
    add rx1596_pos, 2
    nqp_rxpeek $I19, rx1596_bstack, rxcap1598_fail3648
    inc $I19
    set $I11, rx1596_bstack[$I19]
    repr_bind_attr_int rx1596_cur, rx1596_curclass, "$!pos", rx1596_pos
    $P11 = rx1596_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1596_pos)
    rx1596_cstack = rx1596_cur."!cursor_capture"($P11, "sym")
    goto rxcap1598_done3647
  rxcap1598_fail3648:
    goto rx1596_fail3640
  rxcap1598_done3647:
    repr_bind_attr_int rx1596_cur, rx1596_curclass, "$!pos", rx1596_pos
    $P11 = rx1596_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1596_curclass, "$!pos"
    lt $I11, 0, rx1596_fail3640
    nqp_rxmark rx1596_bstack, rxsubrule1599_pass3649, -1, 0
  rxsubrule1599_pass3649:
    rx1596_cstack = rx1596_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1596_pos, $P11, rx1596_curclass, "$!pos"
    rx1596_cur."!cursor_pass"(rx1596_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1596_cur)
  rx1596_restart3639:
    repr_get_attr_obj rx1596_cstack, rx1596_cur, rx1596_curclass, "$!cstack"
  rx1596_fail3640:
    unless rx1596_bstack, rx1596_done3638
    pop $I19, rx1596_bstack
    if_null rx1596_cstack, rx1596_cstack_done3643
    unless rx1596_cstack, rx1596_cstack_done3643
    dec $I19
    set $P11, rx1596_cstack[$I19]
  rx1596_cstack_done3643:
    pop rx1596_rep, rx1596_bstack
    pop rx1596_pos, rx1596_bstack
    pop $I19, rx1596_bstack
    lt rx1596_pos, -1, rx1596_done3638
    lt rx1596_pos, 0, rx1596_fail3640
    eq $I19, 0, rx1596_fail3640
    nqp_islist $I20, rx1596_cstack
    unless $I20, rx1596_jump3641
    elements $I18, rx1596_bstack
    le $I18, 0, rx1596_cut3642
    dec $I18
    set $I18, rx1596_bstack[$I18]
  rx1596_cut3642:
    assign rx1596_cstack, $I18
  rx1596_jump3641:
    jump $I19
  rx1596_done3638:
    rx1596_cur."!cursor_fail"()
    .return (rx1596_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_209_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1401
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1600_start
    .local string rx1600_tgt
    .local int rx1600_pos
    .local int rx1600_off
    .local int rx1600_eos
    .local int rx1600_rep
    .local pmc rx1600_cur
    .local pmc rx1600_curclass
    .local pmc rx1600_bstack
    .local pmc rx1600_cstack
    rx1600_start = self."!cursor_start_all"()
    set rx1600_cur, rx1600_start[0]
    set rx1600_tgt, rx1600_start[1]
    set rx1600_pos, rx1600_start[2]
    set rx1600_curclass, rx1600_start[3]
    set rx1600_bstack, rx1600_start[4]
    set $I19, rx1600_start[5]
    store_lex unicode:"$\x{a2}", rx1600_cur
    length rx1600_eos, rx1600_tgt
    eq $I19, 1, rx1600_restart3652
    gt rx1600_pos, rx1600_eos, rx1600_fail3653
    repr_get_attr_int $I11, self, rx1600_curclass, "$!from"
    ne $I11, -1, rxscan1601_done3659
    goto rxscan1601_scan3658
  rxscan1601_loop3657:
    inc rx1600_pos
    gt rx1600_pos, rx1600_eos, rx1600_fail3653
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!from", rx1600_pos
  rxscan1601_scan3658:
    nqp_rxmark rx1600_bstack, rxscan1601_loop3657, rx1600_pos, 0
  rxscan1601_done3659:
    nqp_rxmark rx1600_bstack, rxcap1602_fail3661, rx1600_pos, 0
    add $I11, rx1600_pos, 2
    gt $I11, rx1600_eos, rx1600_fail3653
    substr $S10, rx1600_tgt, rx1600_pos, 2
    ne $S10, ucs4:"ge", rx1600_fail3653
    add rx1600_pos, 2
    nqp_rxpeek $I19, rx1600_bstack, rxcap1602_fail3661
    inc $I19
    set $I11, rx1600_bstack[$I19]
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!pos", rx1600_pos
    $P11 = rx1600_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1600_pos)
    rx1600_cstack = rx1600_cur."!cursor_capture"($P11, "sym")
    goto rxcap1602_done3660
  rxcap1602_fail3661:
    goto rx1600_fail3653
  rxcap1602_done3660:
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!pos", rx1600_pos
    $P11 = rx1600_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1600_curclass, "$!pos"
    lt $I11, 0, rx1600_fail3653
    nqp_rxmark rx1600_bstack, rxsubrule1603_pass3662, -1, 0
  rxsubrule1603_pass3662:
    rx1600_cstack = rx1600_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1600_pos, $P11, rx1600_curclass, "$!pos"
    rx1600_cur."!cursor_pass"(rx1600_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1600_cur)
  rx1600_restart3652:
    repr_get_attr_obj rx1600_cstack, rx1600_cur, rx1600_curclass, "$!cstack"
  rx1600_fail3653:
    unless rx1600_bstack, rx1600_done3651
    pop $I19, rx1600_bstack
    if_null rx1600_cstack, rx1600_cstack_done3656
    unless rx1600_cstack, rx1600_cstack_done3656
    dec $I19
    set $P11, rx1600_cstack[$I19]
  rx1600_cstack_done3656:
    pop rx1600_rep, rx1600_bstack
    pop rx1600_pos, rx1600_bstack
    pop $I19, rx1600_bstack
    lt rx1600_pos, -1, rx1600_done3651
    lt rx1600_pos, 0, rx1600_fail3653
    eq $I19, 0, rx1600_fail3653
    nqp_islist $I20, rx1600_cstack
    unless $I20, rx1600_jump3654
    elements $I18, rx1600_bstack
    le $I18, 0, rx1600_cut3655
    dec $I18
    set $I18, rx1600_bstack[$I18]
  rx1600_cut3655:
    assign rx1600_cstack, $I18
  rx1600_jump3654:
    jump $I19
  rx1600_done3651:
    rx1600_cur."!cursor_fail"()
    .return (rx1600_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_210_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1604_start
    .local string rx1604_tgt
    .local int rx1604_pos
    .local int rx1604_off
    .local int rx1604_eos
    .local int rx1604_rep
    .local pmc rx1604_cur
    .local pmc rx1604_curclass
    .local pmc rx1604_bstack
    .local pmc rx1604_cstack
    rx1604_start = self."!cursor_start_all"()
    set rx1604_cur, rx1604_start[0]
    set rx1604_tgt, rx1604_start[1]
    set rx1604_pos, rx1604_start[2]
    set rx1604_curclass, rx1604_start[3]
    set rx1604_bstack, rx1604_start[4]
    set $I19, rx1604_start[5]
    store_lex unicode:"$\x{a2}", rx1604_cur
    length rx1604_eos, rx1604_tgt
    eq $I19, 1, rx1604_restart3665
    gt rx1604_pos, rx1604_eos, rx1604_fail3666
    repr_get_attr_int $I11, self, rx1604_curclass, "$!from"
    ne $I11, -1, rxscan1605_done3672
    goto rxscan1605_scan3671
  rxscan1605_loop3670:
    inc rx1604_pos
    gt rx1604_pos, rx1604_eos, rx1604_fail3666
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!from", rx1604_pos
  rxscan1605_scan3671:
    nqp_rxmark rx1604_bstack, rxscan1605_loop3670, rx1604_pos, 0
  rxscan1605_done3672:
    nqp_rxmark rx1604_bstack, rxcap1606_fail3674, rx1604_pos, 0
    add $I11, rx1604_pos, 2
    gt $I11, rx1604_eos, rx1604_fail3666
    substr $S10, rx1604_tgt, rx1604_pos, 2
    ne $S10, ucs4:"lt", rx1604_fail3666
    add rx1604_pos, 2
    nqp_rxpeek $I19, rx1604_bstack, rxcap1606_fail3674
    inc $I19
    set $I11, rx1604_bstack[$I19]
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!pos", rx1604_pos
    $P11 = rx1604_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1604_pos)
    rx1604_cstack = rx1604_cur."!cursor_capture"($P11, "sym")
    goto rxcap1606_done3673
  rxcap1606_fail3674:
    goto rx1604_fail3666
  rxcap1606_done3673:
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!pos", rx1604_pos
    $P11 = rx1604_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1604_curclass, "$!pos"
    lt $I11, 0, rx1604_fail3666
    nqp_rxmark rx1604_bstack, rxsubrule1607_pass3675, -1, 0
  rxsubrule1607_pass3675:
    rx1604_cstack = rx1604_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1604_pos, $P11, rx1604_curclass, "$!pos"
    rx1604_cur."!cursor_pass"(rx1604_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1604_cur)
  rx1604_restart3665:
    repr_get_attr_obj rx1604_cstack, rx1604_cur, rx1604_curclass, "$!cstack"
  rx1604_fail3666:
    unless rx1604_bstack, rx1604_done3664
    pop $I19, rx1604_bstack
    if_null rx1604_cstack, rx1604_cstack_done3669
    unless rx1604_cstack, rx1604_cstack_done3669
    dec $I19
    set $P11, rx1604_cstack[$I19]
  rx1604_cstack_done3669:
    pop rx1604_rep, rx1604_bstack
    pop rx1604_pos, rx1604_bstack
    pop $I19, rx1604_bstack
    lt rx1604_pos, -1, rx1604_done3664
    lt rx1604_pos, 0, rx1604_fail3666
    eq $I19, 0, rx1604_fail3666
    nqp_islist $I20, rx1604_cstack
    unless $I20, rx1604_jump3667
    elements $I18, rx1604_bstack
    le $I18, 0, rx1604_cut3668
    dec $I18
    set $I18, rx1604_bstack[$I18]
  rx1604_cut3668:
    assign rx1604_cstack, $I18
  rx1604_jump3667:
    jump $I19
  rx1604_done3664:
    rx1604_cur."!cursor_fail"()
    .return (rx1604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_211_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1403
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1608_start
    .local string rx1608_tgt
    .local int rx1608_pos
    .local int rx1608_off
    .local int rx1608_eos
    .local int rx1608_rep
    .local pmc rx1608_cur
    .local pmc rx1608_curclass
    .local pmc rx1608_bstack
    .local pmc rx1608_cstack
    rx1608_start = self."!cursor_start_all"()
    set rx1608_cur, rx1608_start[0]
    set rx1608_tgt, rx1608_start[1]
    set rx1608_pos, rx1608_start[2]
    set rx1608_curclass, rx1608_start[3]
    set rx1608_bstack, rx1608_start[4]
    set $I19, rx1608_start[5]
    store_lex unicode:"$\x{a2}", rx1608_cur
    length rx1608_eos, rx1608_tgt
    eq $I19, 1, rx1608_restart3678
    gt rx1608_pos, rx1608_eos, rx1608_fail3679
    repr_get_attr_int $I11, self, rx1608_curclass, "$!from"
    ne $I11, -1, rxscan1609_done3685
    goto rxscan1609_scan3684
  rxscan1609_loop3683:
    inc rx1608_pos
    gt rx1608_pos, rx1608_eos, rx1608_fail3679
    repr_bind_attr_int rx1608_cur, rx1608_curclass, "$!from", rx1608_pos
  rxscan1609_scan3684:
    nqp_rxmark rx1608_bstack, rxscan1609_loop3683, rx1608_pos, 0
  rxscan1609_done3685:
    nqp_rxmark rx1608_bstack, rxcap1610_fail3687, rx1608_pos, 0
    add $I11, rx1608_pos, 2
    gt $I11, rx1608_eos, rx1608_fail3679
    substr $S10, rx1608_tgt, rx1608_pos, 2
    ne $S10, ucs4:"gt", rx1608_fail3679
    add rx1608_pos, 2
    nqp_rxpeek $I19, rx1608_bstack, rxcap1610_fail3687
    inc $I19
    set $I11, rx1608_bstack[$I19]
    repr_bind_attr_int rx1608_cur, rx1608_curclass, "$!pos", rx1608_pos
    $P11 = rx1608_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1608_pos)
    rx1608_cstack = rx1608_cur."!cursor_capture"($P11, "sym")
    goto rxcap1610_done3686
  rxcap1610_fail3687:
    goto rx1608_fail3679
  rxcap1610_done3686:
    repr_bind_attr_int rx1608_cur, rx1608_curclass, "$!pos", rx1608_pos
    $P11 = rx1608_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1608_curclass, "$!pos"
    lt $I11, 0, rx1608_fail3679
    nqp_rxmark rx1608_bstack, rxsubrule1611_pass3688, -1, 0
  rxsubrule1611_pass3688:
    rx1608_cstack = rx1608_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1608_pos, $P11, rx1608_curclass, "$!pos"
    rx1608_cur."!cursor_pass"(rx1608_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1608_cur)
  rx1608_restart3678:
    repr_get_attr_obj rx1608_cstack, rx1608_cur, rx1608_curclass, "$!cstack"
  rx1608_fail3679:
    unless rx1608_bstack, rx1608_done3677
    pop $I19, rx1608_bstack
    if_null rx1608_cstack, rx1608_cstack_done3682
    unless rx1608_cstack, rx1608_cstack_done3682
    dec $I19
    set $P11, rx1608_cstack[$I19]
  rx1608_cstack_done3682:
    pop rx1608_rep, rx1608_bstack
    pop rx1608_pos, rx1608_bstack
    pop $I19, rx1608_bstack
    lt rx1608_pos, -1, rx1608_done3677
    lt rx1608_pos, 0, rx1608_fail3679
    eq $I19, 0, rx1608_fail3679
    nqp_islist $I20, rx1608_cstack
    unless $I20, rx1608_jump3680
    elements $I18, rx1608_bstack
    le $I18, 0, rx1608_cut3681
    dec $I18
    set $I18, rx1608_bstack[$I18]
  rx1608_cut3681:
    assign rx1608_cstack, $I18
  rx1608_jump3680:
    jump $I19
  rx1608_done3677:
    rx1608_cur."!cursor_fail"()
    .return (rx1608_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_212_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1404
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1612_start
    .local string rx1612_tgt
    .local int rx1612_pos
    .local int rx1612_off
    .local int rx1612_eos
    .local int rx1612_rep
    .local pmc rx1612_cur
    .local pmc rx1612_curclass
    .local pmc rx1612_bstack
    .local pmc rx1612_cstack
    rx1612_start = self."!cursor_start_all"()
    set rx1612_cur, rx1612_start[0]
    set rx1612_tgt, rx1612_start[1]
    set rx1612_pos, rx1612_start[2]
    set rx1612_curclass, rx1612_start[3]
    set rx1612_bstack, rx1612_start[4]
    set $I19, rx1612_start[5]
    store_lex unicode:"$\x{a2}", rx1612_cur
    length rx1612_eos, rx1612_tgt
    eq $I19, 1, rx1612_restart3691
    gt rx1612_pos, rx1612_eos, rx1612_fail3692
    repr_get_attr_int $I11, self, rx1612_curclass, "$!from"
    ne $I11, -1, rxscan1613_done3698
    goto rxscan1613_scan3697
  rxscan1613_loop3696:
    inc rx1612_pos
    gt rx1612_pos, rx1612_eos, rx1612_fail3692
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!from", rx1612_pos
  rxscan1613_scan3697:
    nqp_rxmark rx1612_bstack, rxscan1613_loop3696, rx1612_pos, 0
  rxscan1613_done3698:
    nqp_rxmark rx1612_bstack, rxcap1614_fail3700, rx1612_pos, 0
    add $I11, rx1612_pos, 3
    gt $I11, rx1612_eos, rx1612_fail3692
    substr $S10, rx1612_tgt, rx1612_pos, 3
    ne $S10, ucs4:"=:=", rx1612_fail3692
    add rx1612_pos, 3
    nqp_rxpeek $I19, rx1612_bstack, rxcap1614_fail3700
    inc $I19
    set $I11, rx1612_bstack[$I19]
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1612_pos)
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "sym")
    goto rxcap1614_done3699
  rxcap1614_fail3700:
    goto rx1612_fail3692
  rxcap1614_done3699:
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1612_curclass, "$!pos"
    lt $I11, 0, rx1612_fail3692
    nqp_rxmark rx1612_bstack, rxsubrule1615_pass3701, -1, 0
  rxsubrule1615_pass3701:
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1612_pos, $P11, rx1612_curclass, "$!pos"
    rx1612_cur."!cursor_pass"(rx1612_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1612_cur)
  rx1612_restart3691:
    repr_get_attr_obj rx1612_cstack, rx1612_cur, rx1612_curclass, "$!cstack"
  rx1612_fail3692:
    unless rx1612_bstack, rx1612_done3690
    pop $I19, rx1612_bstack
    if_null rx1612_cstack, rx1612_cstack_done3695
    unless rx1612_cstack, rx1612_cstack_done3695
    dec $I19
    set $P11, rx1612_cstack[$I19]
  rx1612_cstack_done3695:
    pop rx1612_rep, rx1612_bstack
    pop rx1612_pos, rx1612_bstack
    pop $I19, rx1612_bstack
    lt rx1612_pos, -1, rx1612_done3690
    lt rx1612_pos, 0, rx1612_fail3692
    eq $I19, 0, rx1612_fail3692
    nqp_islist $I20, rx1612_cstack
    unless $I20, rx1612_jump3693
    elements $I18, rx1612_bstack
    le $I18, 0, rx1612_cut3694
    dec $I18
    set $I18, rx1612_bstack[$I18]
  rx1612_cut3694:
    assign rx1612_cstack, $I18
  rx1612_jump3693:
    jump $I19
  rx1612_done3690:
    rx1612_cur."!cursor_fail"()
    .return (rx1612_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_213_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1405
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1616_start
    .local string rx1616_tgt
    .local int rx1616_pos
    .local int rx1616_off
    .local int rx1616_eos
    .local int rx1616_rep
    .local pmc rx1616_cur
    .local pmc rx1616_curclass
    .local pmc rx1616_bstack
    .local pmc rx1616_cstack
    rx1616_start = self."!cursor_start_all"()
    set rx1616_cur, rx1616_start[0]
    set rx1616_tgt, rx1616_start[1]
    set rx1616_pos, rx1616_start[2]
    set rx1616_curclass, rx1616_start[3]
    set rx1616_bstack, rx1616_start[4]
    set $I19, rx1616_start[5]
    store_lex unicode:"$\x{a2}", rx1616_cur
    length rx1616_eos, rx1616_tgt
    eq $I19, 1, rx1616_restart3704
    gt rx1616_pos, rx1616_eos, rx1616_fail3705
    repr_get_attr_int $I11, self, rx1616_curclass, "$!from"
    ne $I11, -1, rxscan1617_done3711
    goto rxscan1617_scan3710
  rxscan1617_loop3709:
    inc rx1616_pos
    gt rx1616_pos, rx1616_eos, rx1616_fail3705
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!from", rx1616_pos
  rxscan1617_scan3710:
    nqp_rxmark rx1616_bstack, rxscan1617_loop3709, rx1616_pos, 0
  rxscan1617_done3711:
    nqp_rxmark rx1616_bstack, rxcap1618_fail3713, rx1616_pos, 0
    add $I11, rx1616_pos, 2
    gt $I11, rx1616_eos, rx1616_fail3705
    substr $S10, rx1616_tgt, rx1616_pos, 2
    ne $S10, ucs4:"~~", rx1616_fail3705
    add rx1616_pos, 2
    nqp_rxpeek $I19, rx1616_bstack, rxcap1618_fail3713
    inc $I19
    set $I11, rx1616_bstack[$I19]
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1616_pos)
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "sym")
    goto rxcap1618_done3712
  rxcap1618_fail3713:
    goto rx1616_fail3705
  rxcap1618_done3712:
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1616_curclass, "$!pos"
    lt $I11, 0, rx1616_fail3705
    nqp_rxmark rx1616_bstack, rxsubrule1619_pass3714, -1, 0
  rxsubrule1619_pass3714:
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1616_pos, $P11, rx1616_curclass, "$!pos"
    rx1616_cur."!cursor_pass"(rx1616_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1616_cur)
  rx1616_restart3704:
    repr_get_attr_obj rx1616_cstack, rx1616_cur, rx1616_curclass, "$!cstack"
  rx1616_fail3705:
    unless rx1616_bstack, rx1616_done3703
    pop $I19, rx1616_bstack
    if_null rx1616_cstack, rx1616_cstack_done3708
    unless rx1616_cstack, rx1616_cstack_done3708
    dec $I19
    set $P11, rx1616_cstack[$I19]
  rx1616_cstack_done3708:
    pop rx1616_rep, rx1616_bstack
    pop rx1616_pos, rx1616_bstack
    pop $I19, rx1616_bstack
    lt rx1616_pos, -1, rx1616_done3703
    lt rx1616_pos, 0, rx1616_fail3705
    eq $I19, 0, rx1616_fail3705
    nqp_islist $I20, rx1616_cstack
    unless $I20, rx1616_jump3706
    elements $I18, rx1616_bstack
    le $I18, 0, rx1616_cut3707
    dec $I18
    set $I18, rx1616_bstack[$I18]
  rx1616_cut3707:
    assign rx1616_cstack, $I18
  rx1616_jump3706:
    jump $I19
  rx1616_done3703:
    rx1616_cur."!cursor_fail"()
    .return (rx1616_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_214_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1407
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1620_start
    .local string rx1620_tgt
    .local int rx1620_pos
    .local int rx1620_off
    .local int rx1620_eos
    .local int rx1620_rep
    .local pmc rx1620_cur
    .local pmc rx1620_curclass
    .local pmc rx1620_bstack
    .local pmc rx1620_cstack
    rx1620_start = self."!cursor_start_all"()
    set rx1620_cur, rx1620_start[0]
    set rx1620_tgt, rx1620_start[1]
    set rx1620_pos, rx1620_start[2]
    set rx1620_curclass, rx1620_start[3]
    set rx1620_bstack, rx1620_start[4]
    set $I19, rx1620_start[5]
    store_lex unicode:"$\x{a2}", rx1620_cur
    length rx1620_eos, rx1620_tgt
    eq $I19, 1, rx1620_restart3717
    gt rx1620_pos, rx1620_eos, rx1620_fail3718
    repr_get_attr_int $I11, self, rx1620_curclass, "$!from"
    ne $I11, -1, rxscan1621_done3724
    goto rxscan1621_scan3723
  rxscan1621_loop3722:
    inc rx1620_pos
    gt rx1620_pos, rx1620_eos, rx1620_fail3718
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!from", rx1620_pos
  rxscan1621_scan3723:
    nqp_rxmark rx1620_bstack, rxscan1621_loop3722, rx1620_pos, 0
  rxscan1621_done3724:
    nqp_rxmark rx1620_bstack, rxcap1622_fail3726, rx1620_pos, 0
    add $I11, rx1620_pos, 2
    gt $I11, rx1620_eos, rx1620_fail3718
    substr $S10, rx1620_tgt, rx1620_pos, 2
    ne $S10, ucs4:"&&", rx1620_fail3718
    add rx1620_pos, 2
    nqp_rxpeek $I19, rx1620_bstack, rxcap1622_fail3726
    inc $I19
    set $I11, rx1620_bstack[$I19]
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!pos", rx1620_pos
    $P11 = rx1620_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1620_pos)
    rx1620_cstack = rx1620_cur."!cursor_capture"($P11, "sym")
    goto rxcap1622_done3725
  rxcap1622_fail3726:
    goto rx1620_fail3718
  rxcap1622_done3725:
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!pos", rx1620_pos
    $P11 = rx1620_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1620_curclass, "$!pos"
    lt $I11, 0, rx1620_fail3718
    nqp_rxmark rx1620_bstack, rxsubrule1623_pass3727, -1, 0
  rxsubrule1623_pass3727:
    rx1620_cstack = rx1620_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1620_pos, $P11, rx1620_curclass, "$!pos"
    rx1620_cur."!cursor_pass"(rx1620_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1620_cur)
  rx1620_restart3717:
    repr_get_attr_obj rx1620_cstack, rx1620_cur, rx1620_curclass, "$!cstack"
  rx1620_fail3718:
    unless rx1620_bstack, rx1620_done3716
    pop $I19, rx1620_bstack
    if_null rx1620_cstack, rx1620_cstack_done3721
    unless rx1620_cstack, rx1620_cstack_done3721
    dec $I19
    set $P11, rx1620_cstack[$I19]
  rx1620_cstack_done3721:
    pop rx1620_rep, rx1620_bstack
    pop rx1620_pos, rx1620_bstack
    pop $I19, rx1620_bstack
    lt rx1620_pos, -1, rx1620_done3716
    lt rx1620_pos, 0, rx1620_fail3718
    eq $I19, 0, rx1620_fail3718
    nqp_islist $I20, rx1620_cstack
    unless $I20, rx1620_jump3719
    elements $I18, rx1620_bstack
    le $I18, 0, rx1620_cut3720
    dec $I18
    set $I18, rx1620_bstack[$I18]
  rx1620_cut3720:
    assign rx1620_cstack, $I18
  rx1620_jump3719:
    jump $I19
  rx1620_done3716:
    rx1620_cur."!cursor_fail"()
    .return (rx1620_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_215_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1409
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1624_start
    .local string rx1624_tgt
    .local int rx1624_pos
    .local int rx1624_off
    .local int rx1624_eos
    .local int rx1624_rep
    .local pmc rx1624_cur
    .local pmc rx1624_curclass
    .local pmc rx1624_bstack
    .local pmc rx1624_cstack
    rx1624_start = self."!cursor_start_all"()
    set rx1624_cur, rx1624_start[0]
    set rx1624_tgt, rx1624_start[1]
    set rx1624_pos, rx1624_start[2]
    set rx1624_curclass, rx1624_start[3]
    set rx1624_bstack, rx1624_start[4]
    set $I19, rx1624_start[5]
    store_lex unicode:"$\x{a2}", rx1624_cur
    length rx1624_eos, rx1624_tgt
    eq $I19, 1, rx1624_restart3730
    gt rx1624_pos, rx1624_eos, rx1624_fail3731
    repr_get_attr_int $I11, self, rx1624_curclass, "$!from"
    ne $I11, -1, rxscan1625_done3737
    goto rxscan1625_scan3736
  rxscan1625_loop3735:
    inc rx1624_pos
    gt rx1624_pos, rx1624_eos, rx1624_fail3731
    repr_bind_attr_int rx1624_cur, rx1624_curclass, "$!from", rx1624_pos
  rxscan1625_scan3736:
    nqp_rxmark rx1624_bstack, rxscan1625_loop3735, rx1624_pos, 0
  rxscan1625_done3737:
    nqp_rxmark rx1624_bstack, rxcap1626_fail3739, rx1624_pos, 0
    add $I11, rx1624_pos, 2
    gt $I11, rx1624_eos, rx1624_fail3731
    substr $S10, rx1624_tgt, rx1624_pos, 2
    ne $S10, ucs4:"||", rx1624_fail3731
    add rx1624_pos, 2
    nqp_rxpeek $I19, rx1624_bstack, rxcap1626_fail3739
    inc $I19
    set $I11, rx1624_bstack[$I19]
    repr_bind_attr_int rx1624_cur, rx1624_curclass, "$!pos", rx1624_pos
    $P11 = rx1624_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1624_pos)
    rx1624_cstack = rx1624_cur."!cursor_capture"($P11, "sym")
    goto rxcap1626_done3738
  rxcap1626_fail3739:
    goto rx1624_fail3731
  rxcap1626_done3738:
    repr_bind_attr_int rx1624_cur, rx1624_curclass, "$!pos", rx1624_pos
    $P11 = rx1624_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1624_curclass, "$!pos"
    lt $I11, 0, rx1624_fail3731
    nqp_rxmark rx1624_bstack, rxsubrule1627_pass3740, -1, 0
  rxsubrule1627_pass3740:
    rx1624_cstack = rx1624_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1624_pos, $P11, rx1624_curclass, "$!pos"
    rx1624_cur."!cursor_pass"(rx1624_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1624_cur)
  rx1624_restart3730:
    repr_get_attr_obj rx1624_cstack, rx1624_cur, rx1624_curclass, "$!cstack"
  rx1624_fail3731:
    unless rx1624_bstack, rx1624_done3729
    pop $I19, rx1624_bstack
    if_null rx1624_cstack, rx1624_cstack_done3734
    unless rx1624_cstack, rx1624_cstack_done3734
    dec $I19
    set $P11, rx1624_cstack[$I19]
  rx1624_cstack_done3734:
    pop rx1624_rep, rx1624_bstack
    pop rx1624_pos, rx1624_bstack
    pop $I19, rx1624_bstack
    lt rx1624_pos, -1, rx1624_done3729
    lt rx1624_pos, 0, rx1624_fail3731
    eq $I19, 0, rx1624_fail3731
    nqp_islist $I20, rx1624_cstack
    unless $I20, rx1624_jump3732
    elements $I18, rx1624_bstack
    le $I18, 0, rx1624_cut3733
    dec $I18
    set $I18, rx1624_bstack[$I18]
  rx1624_cut3733:
    assign rx1624_cstack, $I18
  rx1624_jump3732:
    jump $I19
  rx1624_done3729:
    rx1624_cur."!cursor_fail"()
    .return (rx1624_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_216_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1410
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1628_start
    .local string rx1628_tgt
    .local int rx1628_pos
    .local int rx1628_off
    .local int rx1628_eos
    .local int rx1628_rep
    .local pmc rx1628_cur
    .local pmc rx1628_curclass
    .local pmc rx1628_bstack
    .local pmc rx1628_cstack
    rx1628_start = self."!cursor_start_all"()
    set rx1628_cur, rx1628_start[0]
    set rx1628_tgt, rx1628_start[1]
    set rx1628_pos, rx1628_start[2]
    set rx1628_curclass, rx1628_start[3]
    set rx1628_bstack, rx1628_start[4]
    set $I19, rx1628_start[5]
    store_lex unicode:"$\x{a2}", rx1628_cur
    length rx1628_eos, rx1628_tgt
    eq $I19, 1, rx1628_restart3743
    gt rx1628_pos, rx1628_eos, rx1628_fail3744
    repr_get_attr_int $I11, self, rx1628_curclass, "$!from"
    ne $I11, -1, rxscan1629_done3750
    goto rxscan1629_scan3749
  rxscan1629_loop3748:
    inc rx1628_pos
    gt rx1628_pos, rx1628_eos, rx1628_fail3744
    repr_bind_attr_int rx1628_cur, rx1628_curclass, "$!from", rx1628_pos
  rxscan1629_scan3749:
    nqp_rxmark rx1628_bstack, rxscan1629_loop3748, rx1628_pos, 0
  rxscan1629_done3750:
    nqp_rxmark rx1628_bstack, rxcap1630_fail3752, rx1628_pos, 0
    add $I11, rx1628_pos, 2
    gt $I11, rx1628_eos, rx1628_fail3744
    substr $S10, rx1628_tgt, rx1628_pos, 2
    ne $S10, ucs4:"//", rx1628_fail3744
    add rx1628_pos, 2
    nqp_rxpeek $I19, rx1628_bstack, rxcap1630_fail3752
    inc $I19
    set $I11, rx1628_bstack[$I19]
    repr_bind_attr_int rx1628_cur, rx1628_curclass, "$!pos", rx1628_pos
    $P11 = rx1628_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1628_pos)
    rx1628_cstack = rx1628_cur."!cursor_capture"($P11, "sym")
    goto rxcap1630_done3751
  rxcap1630_fail3752:
    goto rx1628_fail3744
  rxcap1630_done3751:
    repr_bind_attr_int rx1628_cur, rx1628_curclass, "$!pos", rx1628_pos
    $P11 = rx1628_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1628_curclass, "$!pos"
    lt $I11, 0, rx1628_fail3744
    nqp_rxmark rx1628_bstack, rxsubrule1631_pass3753, -1, 0
  rxsubrule1631_pass3753:
    rx1628_cstack = rx1628_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1628_pos, $P11, rx1628_curclass, "$!pos"
    rx1628_cur."!cursor_pass"(rx1628_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1628_cur)
  rx1628_restart3743:
    repr_get_attr_obj rx1628_cstack, rx1628_cur, rx1628_curclass, "$!cstack"
  rx1628_fail3744:
    unless rx1628_bstack, rx1628_done3742
    pop $I19, rx1628_bstack
    if_null rx1628_cstack, rx1628_cstack_done3747
    unless rx1628_cstack, rx1628_cstack_done3747
    dec $I19
    set $P11, rx1628_cstack[$I19]
  rx1628_cstack_done3747:
    pop rx1628_rep, rx1628_bstack
    pop rx1628_pos, rx1628_bstack
    pop $I19, rx1628_bstack
    lt rx1628_pos, -1, rx1628_done3742
    lt rx1628_pos, 0, rx1628_fail3744
    eq $I19, 0, rx1628_fail3744
    nqp_islist $I20, rx1628_cstack
    unless $I20, rx1628_jump3745
    elements $I18, rx1628_bstack
    le $I18, 0, rx1628_cut3746
    dec $I18
    set $I18, rx1628_bstack[$I18]
  rx1628_cut3746:
    assign rx1628_cstack, $I18
  rx1628_jump3745:
    jump $I19
  rx1628_done3742:
    rx1628_cur."!cursor_fail"()
    .return (rx1628_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_217_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1632_start
    .local string rx1632_tgt
    .local int rx1632_pos
    .local int rx1632_off
    .local int rx1632_eos
    .local int rx1632_rep
    .local pmc rx1632_cur
    .local pmc rx1632_curclass
    .local pmc rx1632_bstack
    .local pmc rx1632_cstack
    rx1632_start = self."!cursor_start_all"()
    set rx1632_cur, rx1632_start[0]
    set rx1632_tgt, rx1632_start[1]
    set rx1632_pos, rx1632_start[2]
    set rx1632_curclass, rx1632_start[3]
    set rx1632_bstack, rx1632_start[4]
    set $I19, rx1632_start[5]
    store_lex unicode:"$\x{a2}", rx1632_cur
    length rx1632_eos, rx1632_tgt
    eq $I19, 1, rx1632_restart3756
    gt rx1632_pos, rx1632_eos, rx1632_fail3757
    repr_get_attr_int $I11, self, rx1632_curclass, "$!from"
    ne $I11, -1, rxscan1633_done3763
    goto rxscan1633_scan3762
  rxscan1633_loop3761:
    inc rx1632_pos
    gt rx1632_pos, rx1632_eos, rx1632_fail3757
    repr_bind_attr_int rx1632_cur, rx1632_curclass, "$!from", rx1632_pos
  rxscan1633_scan3762:
    nqp_rxmark rx1632_bstack, rxscan1633_loop3761, rx1632_pos, 0
  rxscan1633_done3763:
    add $I11, rx1632_pos, 2
    gt $I11, rx1632_eos, rx1632_fail3757
    substr $S10, rx1632_tgt, rx1632_pos, 2
    ne $S10, ucs4:"??", rx1632_fail3757
    add rx1632_pos, 2
    repr_bind_attr_int rx1632_cur, rx1632_curclass, "$!pos", rx1632_pos
    $P11 = rx1632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1632_curclass, "$!pos"
    lt $I11, 0, rx1632_fail3757
    repr_get_attr_int rx1632_pos, $P11, rx1632_curclass, "$!pos"
    repr_bind_attr_int rx1632_cur, rx1632_curclass, "$!pos", rx1632_pos
    $P11 = rx1632_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1632_curclass, "$!pos"
    lt $I11, 0, rx1632_fail3757
    nqp_rxmark rx1632_bstack, rxsubrule1635_pass3765, -1, 0
  rxsubrule1635_pass3765:
    rx1632_cstack = rx1632_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1632_pos, $P11, rx1632_curclass, "$!pos"
    add $I11, rx1632_pos, 2
    gt $I11, rx1632_eos, rx1632_fail3757
    substr $S10, rx1632_tgt, rx1632_pos, 2
    ne $S10, ucs4:"!!", rx1632_fail3757
    add rx1632_pos, 2
    repr_bind_attr_int rx1632_cur, rx1632_curclass, "$!pos", rx1632_pos
    $P11 = rx1632_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1632_curclass, "$!pos"
    lt $I11, 0, rx1632_fail3757
    nqp_rxmark rx1632_bstack, rxsubrule1636_pass3766, -1, 0
  rxsubrule1636_pass3766:
    rx1632_cstack = rx1632_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1632_pos, $P11, rx1632_curclass, "$!pos"
    rx1632_cur."!cursor_pass"(rx1632_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1632_cur)
  rx1632_restart3756:
    repr_get_attr_obj rx1632_cstack, rx1632_cur, rx1632_curclass, "$!cstack"
  rx1632_fail3757:
    unless rx1632_bstack, rx1632_done3755
    pop $I19, rx1632_bstack
    if_null rx1632_cstack, rx1632_cstack_done3760
    unless rx1632_cstack, rx1632_cstack_done3760
    dec $I19
    set $P11, rx1632_cstack[$I19]
  rx1632_cstack_done3760:
    pop rx1632_rep, rx1632_bstack
    pop rx1632_pos, rx1632_bstack
    pop $I19, rx1632_bstack
    lt rx1632_pos, -1, rx1632_done3755
    lt rx1632_pos, 0, rx1632_fail3757
    eq $I19, 0, rx1632_fail3757
    nqp_islist $I20, rx1632_cstack
    unless $I20, rx1632_jump3758
    elements $I18, rx1632_bstack
    le $I18, 0, rx1632_cut3759
    dec $I18
    set $I18, rx1632_bstack[$I18]
  rx1632_cut3759:
    assign rx1632_cstack, $I18
  rx1632_jump3758:
    jump $I19
  rx1632_done3755:
    rx1632_cur."!cursor_fail"()
    .return (rx1632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_218_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1420
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1637_start
    .local string rx1637_tgt
    .local int rx1637_pos
    .local int rx1637_off
    .local int rx1637_eos
    .local int rx1637_rep
    .local pmc rx1637_cur
    .local pmc rx1637_curclass
    .local pmc rx1637_bstack
    .local pmc rx1637_cstack
    rx1637_start = self."!cursor_start_all"()
    set rx1637_cur, rx1637_start[0]
    set rx1637_tgt, rx1637_start[1]
    set rx1637_pos, rx1637_start[2]
    set rx1637_curclass, rx1637_start[3]
    set rx1637_bstack, rx1637_start[4]
    set $I19, rx1637_start[5]
    store_lex unicode:"$\x{a2}", rx1637_cur
    length rx1637_eos, rx1637_tgt
    eq $I19, 1, rx1637_restart3769
    gt rx1637_pos, rx1637_eos, rx1637_fail3770
    repr_get_attr_int $I11, self, rx1637_curclass, "$!from"
    ne $I11, -1, rxscan1638_done3776
    goto rxscan1638_scan3775
  rxscan1638_loop3774:
    inc rx1637_pos
    gt rx1637_pos, rx1637_eos, rx1637_fail3770
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!from", rx1637_pos
  rxscan1638_scan3775:
    nqp_rxmark rx1637_bstack, rxscan1638_loop3774, rx1637_pos, 0
  rxscan1638_done3776:
    nqp_rxmark rx1637_bstack, rxcap1639_fail3778, rx1637_pos, 0
    add $I11, rx1637_pos, 1
    gt $I11, rx1637_eos, rx1637_fail3770
    substr $S10, rx1637_tgt, rx1637_pos, 1
    ne $S10, ucs4:"=", rx1637_fail3770
    add rx1637_pos, 1
    nqp_rxpeek $I19, rx1637_bstack, rxcap1639_fail3778
    inc $I19
    set $I11, rx1637_bstack[$I19]
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!pos", rx1637_pos
    $P11 = rx1637_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1637_pos)
    rx1637_cstack = rx1637_cur."!cursor_capture"($P11, "sym")
    goto rxcap1639_done3777
  rxcap1639_fail3778:
    goto rx1637_fail3770
  rxcap1639_done3777:
    repr_bind_attr_int rx1637_cur, rx1637_curclass, "$!pos", rx1637_pos
    $P11 = rx1637_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1637_curclass, "$!pos"
    lt $I11, 0, rx1637_fail3770
    repr_get_attr_int rx1637_pos, $P11, rx1637_curclass, "$!pos"
    rx1637_cur."!cursor_pass"(rx1637_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1637_cur)
  rx1637_restart3769:
    repr_get_attr_obj rx1637_cstack, rx1637_cur, rx1637_curclass, "$!cstack"
  rx1637_fail3770:
    unless rx1637_bstack, rx1637_done3768
    pop $I19, rx1637_bstack
    if_null rx1637_cstack, rx1637_cstack_done3773
    unless rx1637_cstack, rx1637_cstack_done3773
    dec $I19
    set $P11, rx1637_cstack[$I19]
  rx1637_cstack_done3773:
    pop rx1637_rep, rx1637_bstack
    pop rx1637_pos, rx1637_bstack
    pop $I19, rx1637_bstack
    lt rx1637_pos, -1, rx1637_done3768
    lt rx1637_pos, 0, rx1637_fail3770
    eq $I19, 0, rx1637_fail3770
    nqp_islist $I20, rx1637_cstack
    unless $I20, rx1637_jump3771
    elements $I18, rx1637_bstack
    le $I18, 0, rx1637_cut3772
    dec $I18
    set $I18, rx1637_bstack[$I18]
  rx1637_cut3772:
    assign rx1637_cstack, $I18
  rx1637_jump3771:
    jump $I19
  rx1637_done3768:
    rx1637_cur."!cursor_fail"()
    .return (rx1637_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_219_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1641_start
    .local string rx1641_tgt
    .local int rx1641_pos
    .local int rx1641_off
    .local int rx1641_eos
    .local int rx1641_rep
    .local pmc rx1641_cur
    .local pmc rx1641_curclass
    .local pmc rx1641_bstack
    .local pmc rx1641_cstack
    rx1641_start = self."!cursor_start_all"()
    set rx1641_cur, rx1641_start[0]
    set rx1641_tgt, rx1641_start[1]
    set rx1641_pos, rx1641_start[2]
    set rx1641_curclass, rx1641_start[3]
    set rx1641_bstack, rx1641_start[4]
    set $I19, rx1641_start[5]
    store_lex unicode:"$\x{a2}", rx1641_cur
    length rx1641_eos, rx1641_tgt
    eq $I19, 1, rx1641_restart3782
    gt rx1641_pos, rx1641_eos, rx1641_fail3783
    repr_get_attr_int $I11, self, rx1641_curclass, "$!from"
    ne $I11, -1, rxscan1642_done3789
    goto rxscan1642_scan3788
  rxscan1642_loop3787:
    inc rx1641_pos
    gt rx1641_pos, rx1641_eos, rx1641_fail3783
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!from", rx1641_pos
  rxscan1642_scan3788:
    nqp_rxmark rx1641_bstack, rxscan1642_loop3787, rx1641_pos, 0
  rxscan1642_done3789:
    nqp_rxmark rx1641_bstack, rxcap1643_fail3791, rx1641_pos, 0
    add $I11, rx1641_pos, 2
    gt $I11, rx1641_eos, rx1641_fail3783
    substr $S10, rx1641_tgt, rx1641_pos, 2
    ne $S10, ucs4:":=", rx1641_fail3783
    add rx1641_pos, 2
    nqp_rxpeek $I19, rx1641_bstack, rxcap1643_fail3791
    inc $I19
    set $I11, rx1641_bstack[$I19]
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!pos", rx1641_pos
    $P11 = rx1641_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1641_pos)
    rx1641_cstack = rx1641_cur."!cursor_capture"($P11, "sym")
    goto rxcap1643_done3790
  rxcap1643_fail3791:
    goto rx1641_fail3783
  rxcap1643_done3790:
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!pos", rx1641_pos
    $P11 = rx1641_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1641_curclass, "$!pos"
    lt $I11, 0, rx1641_fail3783
    nqp_rxmark rx1641_bstack, rxsubrule1644_pass3792, -1, 0
  rxsubrule1644_pass3792:
    rx1641_cstack = rx1641_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1641_pos, $P11, rx1641_curclass, "$!pos"
    rx1641_cur."!cursor_pass"(rx1641_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1641_cur)
  rx1641_restart3782:
    repr_get_attr_obj rx1641_cstack, rx1641_cur, rx1641_curclass, "$!cstack"
  rx1641_fail3783:
    unless rx1641_bstack, rx1641_done3781
    pop $I19, rx1641_bstack
    if_null rx1641_cstack, rx1641_cstack_done3786
    unless rx1641_cstack, rx1641_cstack_done3786
    dec $I19
    set $P11, rx1641_cstack[$I19]
  rx1641_cstack_done3786:
    pop rx1641_rep, rx1641_bstack
    pop rx1641_pos, rx1641_bstack
    pop $I19, rx1641_bstack
    lt rx1641_pos, -1, rx1641_done3781
    lt rx1641_pos, 0, rx1641_fail3783
    eq $I19, 0, rx1641_fail3783
    nqp_islist $I20, rx1641_cstack
    unless $I20, rx1641_jump3784
    elements $I18, rx1641_bstack
    le $I18, 0, rx1641_cut3785
    dec $I18
    set $I18, rx1641_bstack[$I18]
  rx1641_cut3785:
    assign rx1641_cstack, $I18
  rx1641_jump3784:
    jump $I19
  rx1641_done3781:
    rx1641_cur."!cursor_fail"()
    .return (rx1641_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_220_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1424
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1645_start
    .local string rx1645_tgt
    .local int rx1645_pos
    .local int rx1645_off
    .local int rx1645_eos
    .local int rx1645_rep
    .local pmc rx1645_cur
    .local pmc rx1645_curclass
    .local pmc rx1645_bstack
    .local pmc rx1645_cstack
    rx1645_start = self."!cursor_start_all"()
    set rx1645_cur, rx1645_start[0]
    set rx1645_tgt, rx1645_start[1]
    set rx1645_pos, rx1645_start[2]
    set rx1645_curclass, rx1645_start[3]
    set rx1645_bstack, rx1645_start[4]
    set $I19, rx1645_start[5]
    store_lex unicode:"$\x{a2}", rx1645_cur
    length rx1645_eos, rx1645_tgt
    eq $I19, 1, rx1645_restart3795
    gt rx1645_pos, rx1645_eos, rx1645_fail3796
    repr_get_attr_int $I11, self, rx1645_curclass, "$!from"
    ne $I11, -1, rxscan1646_done3802
    goto rxscan1646_scan3801
  rxscan1646_loop3800:
    inc rx1645_pos
    gt rx1645_pos, rx1645_eos, rx1645_fail3796
    repr_bind_attr_int rx1645_cur, rx1645_curclass, "$!from", rx1645_pos
  rxscan1646_scan3801:
    nqp_rxmark rx1645_bstack, rxscan1646_loop3800, rx1645_pos, 0
  rxscan1646_done3802:
    nqp_rxmark rx1645_bstack, rxcap1647_fail3804, rx1645_pos, 0
    add $I11, rx1645_pos, 3
    gt $I11, rx1645_eos, rx1645_fail3796
    substr $S10, rx1645_tgt, rx1645_pos, 3
    ne $S10, ucs4:"::=", rx1645_fail3796
    add rx1645_pos, 3
    nqp_rxpeek $I19, rx1645_bstack, rxcap1647_fail3804
    inc $I19
    set $I11, rx1645_bstack[$I19]
    repr_bind_attr_int rx1645_cur, rx1645_curclass, "$!pos", rx1645_pos
    $P11 = rx1645_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1645_pos)
    rx1645_cstack = rx1645_cur."!cursor_capture"($P11, "sym")
    goto rxcap1647_done3803
  rxcap1647_fail3804:
    goto rx1645_fail3796
  rxcap1647_done3803:
    repr_bind_attr_int rx1645_cur, rx1645_curclass, "$!pos", rx1645_pos
    $P11 = rx1645_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1645_curclass, "$!pos"
    lt $I11, 0, rx1645_fail3796
    nqp_rxmark rx1645_bstack, rxsubrule1648_pass3805, -1, 0
  rxsubrule1648_pass3805:
    rx1645_cstack = rx1645_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1645_pos, $P11, rx1645_curclass, "$!pos"
    rx1645_cur."!cursor_pass"(rx1645_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1645_cur)
  rx1645_restart3795:
    repr_get_attr_obj rx1645_cstack, rx1645_cur, rx1645_curclass, "$!cstack"
  rx1645_fail3796:
    unless rx1645_bstack, rx1645_done3794
    pop $I19, rx1645_bstack
    if_null rx1645_cstack, rx1645_cstack_done3799
    unless rx1645_cstack, rx1645_cstack_done3799
    dec $I19
    set $P11, rx1645_cstack[$I19]
  rx1645_cstack_done3799:
    pop rx1645_rep, rx1645_bstack
    pop rx1645_pos, rx1645_bstack
    pop $I19, rx1645_bstack
    lt rx1645_pos, -1, rx1645_done3794
    lt rx1645_pos, 0, rx1645_fail3796
    eq $I19, 0, rx1645_fail3796
    nqp_islist $I20, rx1645_cstack
    unless $I20, rx1645_jump3797
    elements $I18, rx1645_bstack
    le $I18, 0, rx1645_cut3798
    dec $I18
    set $I18, rx1645_bstack[$I18]
  rx1645_cut3798:
    assign rx1645_cstack, $I18
  rx1645_jump3797:
    jump $I19
  rx1645_done3794:
    rx1645_cur."!cursor_fail"()
    .return (rx1645_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_221_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1649_start
    .local string rx1649_tgt
    .local int rx1649_pos
    .local int rx1649_off
    .local int rx1649_eos
    .local int rx1649_rep
    .local pmc rx1649_cur
    .local pmc rx1649_curclass
    .local pmc rx1649_bstack
    .local pmc rx1649_cstack
    rx1649_start = self."!cursor_start_all"()
    set rx1649_cur, rx1649_start[0]
    set rx1649_tgt, rx1649_start[1]
    set rx1649_pos, rx1649_start[2]
    set rx1649_curclass, rx1649_start[3]
    set rx1649_bstack, rx1649_start[4]
    set $I19, rx1649_start[5]
    store_lex unicode:"$\x{a2}", rx1649_cur
    length rx1649_eos, rx1649_tgt
    eq $I19, 1, rx1649_restart3808
    gt rx1649_pos, rx1649_eos, rx1649_fail3809
    repr_get_attr_int $I11, self, rx1649_curclass, "$!from"
    ne $I11, -1, rxscan1650_done3815
    goto rxscan1650_scan3814
  rxscan1650_loop3813:
    inc rx1649_pos
    gt rx1649_pos, rx1649_eos, rx1649_fail3809
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!from", rx1649_pos
  rxscan1650_scan3814:
    nqp_rxmark rx1649_bstack, rxscan1650_loop3813, rx1649_pos, 0
  rxscan1650_done3815:
    nqp_rxmark rx1649_bstack, rxcap1651_fail3817, rx1649_pos, 0
    add $I11, rx1649_pos, 1
    gt $I11, rx1649_eos, rx1649_fail3809
    substr $S10, rx1649_tgt, rx1649_pos, 1
    ne $S10, ucs4:",", rx1649_fail3809
    add rx1649_pos, 1
    nqp_rxpeek $I19, rx1649_bstack, rxcap1651_fail3817
    inc $I19
    set $I11, rx1649_bstack[$I19]
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!pos", rx1649_pos
    $P11 = rx1649_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1649_pos)
    rx1649_cstack = rx1649_cur."!cursor_capture"($P11, "sym")
    goto rxcap1651_done3816
  rxcap1651_fail3817:
    goto rx1649_fail3809
  rxcap1651_done3816:
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!pos", rx1649_pos
    $P11 = rx1649_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1649_curclass, "$!pos"
    lt $I11, 0, rx1649_fail3809
    nqp_rxmark rx1649_bstack, rxsubrule1652_pass3818, -1, 0
  rxsubrule1652_pass3818:
    rx1649_cstack = rx1649_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1649_pos, $P11, rx1649_curclass, "$!pos"
    rx1649_cur."!cursor_pass"(rx1649_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1649_cur)
  rx1649_restart3808:
    repr_get_attr_obj rx1649_cstack, rx1649_cur, rx1649_curclass, "$!cstack"
  rx1649_fail3809:
    unless rx1649_bstack, rx1649_done3807
    pop $I19, rx1649_bstack
    if_null rx1649_cstack, rx1649_cstack_done3812
    unless rx1649_cstack, rx1649_cstack_done3812
    dec $I19
    set $P11, rx1649_cstack[$I19]
  rx1649_cstack_done3812:
    pop rx1649_rep, rx1649_bstack
    pop rx1649_pos, rx1649_bstack
    pop $I19, rx1649_bstack
    lt rx1649_pos, -1, rx1649_done3807
    lt rx1649_pos, 0, rx1649_fail3809
    eq $I19, 0, rx1649_fail3809
    nqp_islist $I20, rx1649_cstack
    unless $I20, rx1649_jump3810
    elements $I18, rx1649_bstack
    le $I18, 0, rx1649_cut3811
    dec $I18
    set $I18, rx1649_bstack[$I18]
  rx1649_cut3811:
    assign rx1649_cstack, $I18
  rx1649_jump3810:
    jump $I19
  rx1649_done3807:
    rx1649_cur."!cursor_fail"()
    .return (rx1649_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_222_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1428
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_418_1381944288.90674' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1653_start
    .local string rx1653_tgt
    .local int rx1653_pos
    .local int rx1653_off
    .local int rx1653_eos
    .local int rx1653_rep
    .local pmc rx1653_cur
    .local pmc rx1653_curclass
    .local pmc rx1653_bstack
    .local pmc rx1653_cstack
    rx1653_start = self."!cursor_start_all"()
    set rx1653_cur, rx1653_start[0]
    set rx1653_tgt, rx1653_start[1]
    set rx1653_pos, rx1653_start[2]
    set rx1653_curclass, rx1653_start[3]
    set rx1653_bstack, rx1653_start[4]
    set $I19, rx1653_start[5]
    store_lex unicode:"$\x{a2}", rx1653_cur
    length rx1653_eos, rx1653_tgt
    eq $I19, 1, rx1653_restart3821
    gt rx1653_pos, rx1653_eos, rx1653_fail3822
    repr_get_attr_int $I11, self, rx1653_curclass, "$!from"
    ne $I11, -1, rxscan1654_done3828
    goto rxscan1654_scan3827
  rxscan1654_loop3826:
    inc rx1653_pos
    gt rx1653_pos, rx1653_eos, rx1653_fail3822
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!from", rx1653_pos
  rxscan1654_scan3827:
    nqp_rxmark rx1653_bstack, rxscan1654_loop3826, rx1653_pos, 0
  rxscan1654_done3828:
    nqp_rxmark rx1653_bstack, rxcap1655_fail3830, rx1653_pos, 0
    add $I11, rx1653_pos, 6
    gt $I11, rx1653_eos, rx1653_fail3822
    substr $S10, rx1653_tgt, rx1653_pos, 6
    ne $S10, ucs4:"return", rx1653_fail3822
    add rx1653_pos, 6
    nqp_rxpeek $I19, rx1653_bstack, rxcap1655_fail3830
    inc $I19
    set $I11, rx1653_bstack[$I19]
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!pos", rx1653_pos
    $P11 = rx1653_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1653_pos)
    rx1653_cstack = rx1653_cur."!cursor_capture"($P11, "sym")
    goto rxcap1655_done3829
  rxcap1655_fail3830:
    goto rx1653_fail3822
  rxcap1655_done3829:
    ge rx1653_pos, rx1653_eos, rx1653_fail3822
    is_cclass $I11, .CCLASS_WHITESPACE, rx1653_tgt, rx1653_pos
    unless $I11, rx1653_fail3822
    add rx1653_pos, 1
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!pos", rx1653_pos
    $P11 = rx1653_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1653_curclass, "$!pos"
    lt $I11, 0, rx1653_fail3822
    nqp_rxmark rx1653_bstack, rxsubrule1656_pass3831, -1, 0
  rxsubrule1656_pass3831:
    rx1653_cstack = rx1653_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1653_pos, $P11, rx1653_curclass, "$!pos"
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!pos", rx1653_pos
    store_lex unicode:"$\x{a2}", rx1653_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_418_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1653_cur."!cursor_pass"(rx1653_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1653_cur)
  rx1653_restart3821:
    repr_get_attr_obj rx1653_cstack, rx1653_cur, rx1653_curclass, "$!cstack"
  rx1653_fail3822:
    unless rx1653_bstack, rx1653_done3820
    pop $I19, rx1653_bstack
    if_null rx1653_cstack, rx1653_cstack_done3825
    unless rx1653_cstack, rx1653_cstack_done3825
    dec $I19
    set $P11, rx1653_cstack[$I19]
  rx1653_cstack_done3825:
    pop rx1653_rep, rx1653_bstack
    pop rx1653_pos, rx1653_bstack
    pop $I19, rx1653_bstack
    lt rx1653_pos, -1, rx1653_done3820
    lt rx1653_pos, 0, rx1653_fail3822
    eq $I19, 0, rx1653_fail3822
    nqp_islist $I20, rx1653_cstack
    unless $I20, rx1653_jump3823
    elements $I18, rx1653_bstack
    le $I18, 0, rx1653_cut3824
    dec $I18
    set $I18, rx1653_bstack[$I18]
  rx1653_cut3824:
    assign rx1653_cstack, $I18
  rx1653_jump3823:
    jump $I19
  rx1653_done3820:
    rx1653_cur."!cursor_fail"()
    .return (rx1653_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1381944288.90674") :anon :lex :outer("cuid_222_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1428

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_223_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1429
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1657_start
    .local string rx1657_tgt
    .local int rx1657_pos
    .local int rx1657_off
    .local int rx1657_eos
    .local int rx1657_rep
    .local pmc rx1657_cur
    .local pmc rx1657_curclass
    .local pmc rx1657_bstack
    .local pmc rx1657_cstack
    rx1657_start = self."!cursor_start_all"()
    set rx1657_cur, rx1657_start[0]
    set rx1657_tgt, rx1657_start[1]
    set rx1657_pos, rx1657_start[2]
    set rx1657_curclass, rx1657_start[3]
    set rx1657_bstack, rx1657_start[4]
    set $I19, rx1657_start[5]
    store_lex unicode:"$\x{a2}", rx1657_cur
    length rx1657_eos, rx1657_tgt
    eq $I19, 1, rx1657_restart3834
    gt rx1657_pos, rx1657_eos, rx1657_fail3835
    repr_get_attr_int $I11, self, rx1657_curclass, "$!from"
    ne $I11, -1, rxscan1658_done3841
    goto rxscan1658_scan3840
  rxscan1658_loop3839:
    inc rx1657_pos
    gt rx1657_pos, rx1657_eos, rx1657_fail3835
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!from", rx1657_pos
  rxscan1658_scan3840:
    nqp_rxmark rx1657_bstack, rxscan1658_loop3839, rx1657_pos, 0
  rxscan1658_done3841:
    nqp_rxmark rx1657_bstack, rxcap1659_fail3843, rx1657_pos, 0
    add $I11, rx1657_pos, 4
    gt $I11, rx1657_eos, rx1657_fail3835
    substr $S10, rx1657_tgt, rx1657_pos, 4
    ne $S10, ucs4:"make", rx1657_fail3835
    add rx1657_pos, 4
    nqp_rxpeek $I19, rx1657_bstack, rxcap1659_fail3843
    inc $I19
    set $I11, rx1657_bstack[$I19]
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!pos", rx1657_pos
    $P11 = rx1657_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1657_pos)
    rx1657_cstack = rx1657_cur."!cursor_capture"($P11, "sym")
    goto rxcap1659_done3842
  rxcap1659_fail3843:
    goto rx1657_fail3835
  rxcap1659_done3842:
    ge rx1657_pos, rx1657_eos, rx1657_fail3835
    is_cclass $I11, .CCLASS_WHITESPACE, rx1657_tgt, rx1657_pos
    unless $I11, rx1657_fail3835
    add rx1657_pos, 1
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!pos", rx1657_pos
    $P11 = rx1657_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1657_curclass, "$!pos"
    lt $I11, 0, rx1657_fail3835
    nqp_rxmark rx1657_bstack, rxsubrule1660_pass3844, -1, 0
  rxsubrule1660_pass3844:
    rx1657_cstack = rx1657_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1657_pos, $P11, rx1657_curclass, "$!pos"
    rx1657_cur."!cursor_pass"(rx1657_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1657_cur)
  rx1657_restart3834:
    repr_get_attr_obj rx1657_cstack, rx1657_cur, rx1657_curclass, "$!cstack"
  rx1657_fail3835:
    unless rx1657_bstack, rx1657_done3833
    pop $I19, rx1657_bstack
    if_null rx1657_cstack, rx1657_cstack_done3838
    unless rx1657_cstack, rx1657_cstack_done3838
    dec $I19
    set $P11, rx1657_cstack[$I19]
  rx1657_cstack_done3838:
    pop rx1657_rep, rx1657_bstack
    pop rx1657_pos, rx1657_bstack
    pop $I19, rx1657_bstack
    lt rx1657_pos, -1, rx1657_done3833
    lt rx1657_pos, 0, rx1657_fail3835
    eq $I19, 0, rx1657_fail3835
    nqp_islist $I20, rx1657_cstack
    unless $I20, rx1657_jump3836
    elements $I18, rx1657_bstack
    le $I18, 0, rx1657_cut3837
    dec $I18
    set $I18, rx1657_bstack[$I18]
  rx1657_cut3837:
    assign rx1657_cstack, $I18
  rx1657_jump3836:
    jump $I19
  rx1657_done3833:
    rx1657_cur."!cursor_fail"()
    .return (rx1657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_224_1381944288.90674") :anon :lex :outer("cuid_399_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1431
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set fb_tmp_184, _lex_param_1
    repr_defined $I5001, fb_tmp_184
    unless $I5001 goto if1661_else3845 
    set $P5002, fb_tmp_184[0]
    set $P5004, $P5002
    goto if1661_end3846
  if1661_else3845:
    null $P5003
    set $P5004, $P5003
  if1661_end3846:
    unless_null $P5004, vivi_16623847
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_16623847:
    set $P101, $P5004
    set fb_tmp_185, _lex_param_1
    repr_defined $I5002, fb_tmp_185
    unless $I5002 goto if1663_else3848 
    set $P5006, fb_tmp_185[1]
    set $P5008, $P5006
    goto if1663_end3849
  if1663_else3848:
    null $P5007
    set $P5008, $P5007
  if1663_end3849:
    unless_null $P5008, vivi_16643850
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_16643850:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1437
    .const 'Sub' $P5013 = 'cuid_225_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_226_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_228_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_233_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_236_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_237_1381944288.90674' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1381944288.90674' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_225_1381944288.90674' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_226_1381944288.90674' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_228_1381944288.90674' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_229_1381944288.90674' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_231_1381944288.90674' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_232_1381944288.90674' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_233_1381944288.90674' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_234_1381944288.90674' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_235_1381944288.90674' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_236_1381944288.90674' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_237_1381944288.90674' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_238_1381944288.90674' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_225_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1438
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1665_start
    .local string rx1665_tgt
    .local int rx1665_pos
    .local int rx1665_off
    .local int rx1665_eos
    .local int rx1665_rep
    .local pmc rx1665_cur
    .local pmc rx1665_curclass
    .local pmc rx1665_bstack
    .local pmc rx1665_cstack
    rx1665_start = self."!cursor_start_all"()
    set rx1665_cur, rx1665_start[0]
    set rx1665_tgt, rx1665_start[1]
    set rx1665_pos, rx1665_start[2]
    set rx1665_curclass, rx1665_start[3]
    set rx1665_bstack, rx1665_start[4]
    set $I19, rx1665_start[5]
    store_lex unicode:"$\x{a2}", rx1665_cur
    length rx1665_eos, rx1665_tgt
    eq $I19, 1, rx1665_restart3853
    gt rx1665_pos, rx1665_eos, rx1665_fail3854
    repr_get_attr_int $I11, self, rx1665_curclass, "$!from"
    ne $I11, -1, rxscan1666_done3860
    goto rxscan1666_scan3859
  rxscan1666_loop3858:
    inc rx1665_pos
    gt rx1665_pos, rx1665_eos, rx1665_fail3854
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!from", rx1665_pos
  rxscan1666_scan3859:
    nqp_rxmark rx1665_bstack, rxscan1666_loop3858, rx1665_pos, 0
  rxscan1666_done3860:
    ge rx1665_pos, rx1665_eos, rx1665_fail3854
    substr $S11, rx1665_tgt, rx1665_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1665_fail3854
    inc rx1665_pos
    rx1665_cur."!cursor_pass"(rx1665_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1665_cur)
  rx1665_restart3853:
    repr_get_attr_obj rx1665_cstack, rx1665_cur, rx1665_curclass, "$!cstack"
  rx1665_fail3854:
    unless rx1665_bstack, rx1665_done3852
    pop $I19, rx1665_bstack
    if_null rx1665_cstack, rx1665_cstack_done3857
    unless rx1665_cstack, rx1665_cstack_done3857
    dec $I19
    set $P11, rx1665_cstack[$I19]
  rx1665_cstack_done3857:
    pop rx1665_rep, rx1665_bstack
    pop rx1665_pos, rx1665_bstack
    pop $I19, rx1665_bstack
    lt rx1665_pos, -1, rx1665_done3852
    lt rx1665_pos, 0, rx1665_fail3854
    eq $I19, 0, rx1665_fail3854
    nqp_islist $I20, rx1665_cstack
    unless $I20, rx1665_jump3855
    elements $I18, rx1665_bstack
    le $I18, 0, rx1665_cut3856
    dec $I18
    set $I18, rx1665_bstack[$I18]
  rx1665_cut3856:
    assign rx1665_cstack, $I18
  rx1665_jump3855:
    jump $I19
  rx1665_done3852:
    rx1665_cur."!cursor_fail"()
    .return (rx1665_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_226_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1442
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_227_1381944288.90674' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1667_start
    .local string rx1667_tgt
    .local int rx1667_pos
    .local int rx1667_off
    .local int rx1667_eos
    .local int rx1667_rep
    .local pmc rx1667_cur
    .local pmc rx1667_curclass
    .local pmc rx1667_bstack
    .local pmc rx1667_cstack
    rx1667_start = self."!cursor_start_all"()
    set rx1667_cur, rx1667_start[0]
    set rx1667_tgt, rx1667_start[1]
    set rx1667_pos, rx1667_start[2]
    set rx1667_curclass, rx1667_start[3]
    set rx1667_bstack, rx1667_start[4]
    set $I19, rx1667_start[5]
    store_lex unicode:"$\x{a2}", rx1667_cur
    length rx1667_eos, rx1667_tgt
    eq $I19, 1, rx1667_restart3863
    gt rx1667_pos, rx1667_eos, rx1667_fail3864
    repr_get_attr_int $I11, self, rx1667_curclass, "$!from"
    ne $I11, -1, rxscan1668_done3870
    goto rxscan1668_scan3869
  rxscan1668_loop3868:
    inc rx1667_pos
    gt rx1667_pos, rx1667_eos, rx1667_fail3864
    repr_bind_attr_int rx1667_cur, rx1667_curclass, "$!from", rx1667_pos
  rxscan1668_scan3869:
    nqp_rxmark rx1667_bstack, rxscan1668_loop3868, rx1667_pos, 0
  rxscan1668_done3870:
    add $I11, rx1667_pos, 1
    gt $I11, rx1667_eos, rx1667_fail3864
    substr $S10, rx1667_tgt, rx1667_pos, 1
    ne $S10, ucs4:":", rx1667_fail3864
    add rx1667_pos, 1
    .const 'Sub' $P5001 = 'cuid_227_1381944288.90674' 
    capture_lex $P5001
    repr_bind_attr_int rx1667_cur, rx1667_curclass, "$!pos", rx1667_pos
    $P11 = rx1667_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1667_curclass, "$!pos"
    lt $I11, 0, rx1667_fail3864
    repr_bind_attr_int rx1667_cur, rx1667_curclass, "$!pos", rx1667_pos
    $P11 = rx1667_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1667_curclass, "$!pos"
    lt $I11, 0, rx1667_fail3864
    nqp_rxmark rx1667_bstack, rxsubrule1671_pass3881, -1, 0
  rxsubrule1671_pass3881:
    rx1667_cstack = rx1667_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1667_pos, $P11, rx1667_curclass, "$!pos"
    repr_bind_attr_int rx1667_cur, rx1667_curclass, "$!pos", rx1667_pos
    $P11 = rx1667_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1667_curclass, "$!pos"
    lt $I11, 0, rx1667_fail3864
    repr_get_attr_int rx1667_pos, $P11, rx1667_curclass, "$!pos"
    add $I11, rx1667_pos, 1
    gt $I11, rx1667_eos, rx1667_fail3864
    substr $S10, rx1667_tgt, rx1667_pos, 1
    ne $S10, ucs4:";", rx1667_fail3864
    add rx1667_pos, 1
    rx1667_cur."!cursor_pass"(rx1667_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1667_cur)
  rx1667_restart3863:
    repr_get_attr_obj rx1667_cstack, rx1667_cur, rx1667_curclass, "$!cstack"
  rx1667_fail3864:
    unless rx1667_bstack, rx1667_done3862
    pop $I19, rx1667_bstack
    if_null rx1667_cstack, rx1667_cstack_done3867
    unless rx1667_cstack, rx1667_cstack_done3867
    dec $I19
    set $P11, rx1667_cstack[$I19]
  rx1667_cstack_done3867:
    pop rx1667_rep, rx1667_bstack
    pop rx1667_pos, rx1667_bstack
    pop $I19, rx1667_bstack
    lt rx1667_pos, -1, rx1667_done3862
    lt rx1667_pos, 0, rx1667_fail3864
    eq $I19, 0, rx1667_fail3864
    nqp_islist $I20, rx1667_cstack
    unless $I20, rx1667_jump3865
    elements $I18, rx1667_bstack
    le $I18, 0, rx1667_cut3866
    dec $I18
    set $I18, rx1667_bstack[$I18]
  rx1667_cut3866:
    assign rx1667_cstack, $I18
  rx1667_jump3865:
    jump $I19
  rx1667_done3862:
    rx1667_cur."!cursor_fail"()
    .return (rx1667_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_227_1381944288.90674") :anon :lex :outer("cuid_226_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1669_start
    .local string rx1669_tgt
    .local int rx1669_pos
    .local int rx1669_off
    .local int rx1669_eos
    .local int rx1669_rep
    .local pmc rx1669_cur
    .local pmc rx1669_curclass
    .local pmc rx1669_bstack
    .local pmc rx1669_cstack
    rx1669_start = self."!cursor_start_all"()
    set rx1669_cur, rx1669_start[0]
    set rx1669_tgt, rx1669_start[1]
    set rx1669_pos, rx1669_start[2]
    set rx1669_curclass, rx1669_start[3]
    set rx1669_bstack, rx1669_start[4]
    set $I19, rx1669_start[5]
    store_lex unicode:"$\x{a2}", rx1669_cur
    length rx1669_eos, rx1669_tgt
    eq $I19, 1, rx1669_restart3873
    gt rx1669_pos, rx1669_eos, rx1669_fail3874
    repr_get_attr_int $I11, self, rx1669_curclass, "$!from"
    ne $I11, -1, rxscan1670_done3880
    goto rxscan1670_scan3879
  rxscan1670_loop3878:
    inc rx1669_pos
    gt rx1669_pos, rx1669_eos, rx1669_fail3874
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!from", rx1669_pos
  rxscan1670_scan3879:
    nqp_rxmark rx1669_bstack, rxscan1670_loop3878, rx1669_pos, 0
  rxscan1670_done3880:
    add $I11, rx1669_pos, 2
    gt $I11, rx1669_eos, rx1669_fail3874
    substr $S10, rx1669_tgt, rx1669_pos, 2
    ne $S10, ucs4:"my", rx1669_fail3874
    add rx1669_pos, 2
    rx1669_cur."!cursor_pass"(rx1669_pos, 'backtrack'=>1)
    .return (rx1669_cur)
  rx1669_restart3873:
    repr_get_attr_obj rx1669_cstack, rx1669_cur, rx1669_curclass, "$!cstack"
  rx1669_fail3874:
    unless rx1669_bstack, rx1669_done3872
    pop $I19, rx1669_bstack
    if_null rx1669_cstack, rx1669_cstack_done3877
    unless rx1669_cstack, rx1669_cstack_done3877
    dec $I19
    set $P11, rx1669_cstack[$I19]
  rx1669_cstack_done3877:
    pop rx1669_rep, rx1669_bstack
    pop rx1669_pos, rx1669_bstack
    pop $I19, rx1669_bstack
    lt rx1669_pos, -1, rx1669_done3872
    lt rx1669_pos, 0, rx1669_fail3874
    eq $I19, 0, rx1669_fail3874
    nqp_islist $I20, rx1669_cstack
    unless $I20, rx1669_jump3875
    elements $I18, rx1669_bstack
    le $I18, 0, rx1669_cut3876
    dec $I18
    set $I18, rx1669_bstack[$I18]
  rx1669_cut3876:
    assign rx1669_cstack, $I18
  rx1669_jump3875:
    jump $I19
  rx1669_done3872:
    rx1669_cur."!cursor_fail"()
    .return (rx1669_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_228_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1446
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1673_start
    .local string rx1673_tgt
    .local int rx1673_pos
    .local int rx1673_off
    .local int rx1673_eos
    .local int rx1673_rep
    .local pmc rx1673_cur
    .local pmc rx1673_curclass
    .local pmc rx1673_bstack
    .local pmc rx1673_cstack
    rx1673_start = self."!cursor_start_all"()
    set rx1673_cur, rx1673_start[0]
    set rx1673_tgt, rx1673_start[1]
    set rx1673_pos, rx1673_start[2]
    set rx1673_curclass, rx1673_start[3]
    set rx1673_bstack, rx1673_start[4]
    set $I19, rx1673_start[5]
    store_lex unicode:"$\x{a2}", rx1673_cur
    length rx1673_eos, rx1673_tgt
    eq $I19, 1, rx1673_restart3885
    gt rx1673_pos, rx1673_eos, rx1673_fail3886
    repr_get_attr_int $I11, self, rx1673_curclass, "$!from"
    ne $I11, -1, rxscan1674_done3892
    goto rxscan1674_scan3891
  rxscan1674_loop3890:
    inc rx1673_pos
    gt rx1673_pos, rx1673_eos, rx1673_fail3886
    repr_bind_attr_int rx1673_cur, rx1673_curclass, "$!from", rx1673_pos
  rxscan1674_scan3891:
    nqp_rxmark rx1673_bstack, rxscan1674_loop3890, rx1673_pos, 0
  rxscan1674_done3892:
    ge rx1673_pos, rx1673_eos, rx1673_fail3886
    substr $S11, rx1673_tgt, rx1673_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1673_fail3886
    repr_bind_attr_int rx1673_cur, rx1673_curclass, "$!pos", rx1673_pos
    $P11 = rx1673_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1673_curclass, "$!pos"
    lt $I11, 0, rx1673_fail3886
    nqp_rxmark rx1673_bstack, rxsubrule1675_pass3893, -1, 0
  rxsubrule1675_pass3893:
    rx1673_cstack = rx1673_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1673_pos, $P11, rx1673_curclass, "$!pos"
    rx1673_cur."!cursor_pass"(rx1673_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1673_cur)
  rx1673_restart3885:
    repr_get_attr_obj rx1673_cstack, rx1673_cur, rx1673_curclass, "$!cstack"
  rx1673_fail3886:
    unless rx1673_bstack, rx1673_done3884
    pop $I19, rx1673_bstack
    if_null rx1673_cstack, rx1673_cstack_done3889
    unless rx1673_cstack, rx1673_cstack_done3889
    dec $I19
    set $P11, rx1673_cstack[$I19]
  rx1673_cstack_done3889:
    pop rx1673_rep, rx1673_bstack
    pop rx1673_pos, rx1673_bstack
    pop $I19, rx1673_bstack
    lt rx1673_pos, -1, rx1673_done3884
    lt rx1673_pos, 0, rx1673_fail3886
    eq $I19, 0, rx1673_fail3886
    nqp_islist $I20, rx1673_cstack
    unless $I20, rx1673_jump3887
    elements $I18, rx1673_bstack
    le $I18, 0, rx1673_cut3888
    dec $I18
    set $I18, rx1673_bstack[$I18]
  rx1673_cut3888:
    assign rx1673_cstack, $I18
  rx1673_jump3887:
    jump $I19
  rx1673_done3884:
    rx1673_cur."!cursor_fail"()
    .return (rx1673_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_229_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1450
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_230_1381944288.90674' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1676_start
    .local string rx1676_tgt
    .local int rx1676_pos
    .local int rx1676_off
    .local int rx1676_eos
    .local int rx1676_rep
    .local pmc rx1676_cur
    .local pmc rx1676_curclass
    .local pmc rx1676_bstack
    .local pmc rx1676_cstack
    rx1676_start = self."!cursor_start_all"()
    set rx1676_cur, rx1676_start[0]
    set rx1676_tgt, rx1676_start[1]
    set rx1676_pos, rx1676_start[2]
    set rx1676_curclass, rx1676_start[3]
    set rx1676_bstack, rx1676_start[4]
    set $I19, rx1676_start[5]
    store_lex unicode:"$\x{a2}", rx1676_cur
    length rx1676_eos, rx1676_tgt
    eq $I19, 1, rx1676_restart3896
    gt rx1676_pos, rx1676_eos, rx1676_fail3897
    repr_get_attr_int $I11, self, rx1676_curclass, "$!from"
    ne $I11, -1, rxscan1677_done3903
    goto rxscan1677_scan3902
  rxscan1677_loop3901:
    inc rx1676_pos
    gt rx1676_pos, rx1676_eos, rx1676_fail3897
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!from", rx1676_pos
  rxscan1677_scan3902:
    nqp_rxmark rx1676_bstack, rxscan1677_loop3901, rx1676_pos, 0
  rxscan1677_done3903:
    .const 'Sub' $P5001 = 'cuid_230_1381944288.90674' 
    capture_lex $P5001
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!pos", rx1676_pos
    $P11 = rx1676_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1676_curclass, "$!pos"
    lt $I11, 0, rx1676_fail3897
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!pos", rx1676_pos
    $P11 = rx1676_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1676_curclass, "$!pos"
    lt $I11, 0, rx1676_fail3897
    nqp_rxmark rx1676_bstack, rxsubrule1682_pass3918, -1, 0
  rxsubrule1682_pass3918:
    rx1676_cstack = rx1676_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1676_pos, $P11, rx1676_curclass, "$!pos"
    rx1676_cur."!cursor_pass"(rx1676_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1676_cur)
  rx1676_restart3896:
    repr_get_attr_obj rx1676_cstack, rx1676_cur, rx1676_curclass, "$!cstack"
  rx1676_fail3897:
    unless rx1676_bstack, rx1676_done3895
    pop $I19, rx1676_bstack
    if_null rx1676_cstack, rx1676_cstack_done3900
    unless rx1676_cstack, rx1676_cstack_done3900
    dec $I19
    set $P11, rx1676_cstack[$I19]
  rx1676_cstack_done3900:
    pop rx1676_rep, rx1676_bstack
    pop rx1676_pos, rx1676_bstack
    pop $I19, rx1676_bstack
    lt rx1676_pos, -1, rx1676_done3895
    lt rx1676_pos, 0, rx1676_fail3897
    eq $I19, 0, rx1676_fail3897
    nqp_islist $I20, rx1676_cstack
    unless $I20, rx1676_jump3898
    elements $I18, rx1676_bstack
    le $I18, 0, rx1676_cut3899
    dec $I18
    set $I18, rx1676_bstack[$I18]
  rx1676_cut3899:
    assign rx1676_cstack, $I18
  rx1676_jump3898:
    jump $I19
  rx1676_done3895:
    rx1676_cur."!cursor_fail"()
    .return (rx1676_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1381944288.90674") :anon :lex :outer("cuid_229_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1678_start
    .local string rx1678_tgt
    .local int rx1678_pos
    .local int rx1678_off
    .local int rx1678_eos
    .local int rx1678_rep
    .local pmc rx1678_cur
    .local pmc rx1678_curclass
    .local pmc rx1678_bstack
    .local pmc rx1678_cstack
    rx1678_start = self."!cursor_start_all"()
    set rx1678_cur, rx1678_start[0]
    set rx1678_tgt, rx1678_start[1]
    set rx1678_pos, rx1678_start[2]
    set rx1678_curclass, rx1678_start[3]
    set rx1678_bstack, rx1678_start[4]
    set $I19, rx1678_start[5]
    store_lex unicode:"$\x{a2}", rx1678_cur
    length rx1678_eos, rx1678_tgt
    eq $I19, 1, rx1678_restart3906
    gt rx1678_pos, rx1678_eos, rx1678_fail3907
    repr_get_attr_int $I11, self, rx1678_curclass, "$!from"
    ne $I11, -1, rxscan1679_done3913
    goto rxscan1679_scan3912
  rxscan1679_loop3911:
    inc rx1678_pos
    gt rx1678_pos, rx1678_eos, rx1678_fail3907
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!from", rx1678_pos
  rxscan1679_scan3912:
    nqp_rxmark rx1678_bstack, rxscan1679_loop3911, rx1678_pos, 0
  rxscan1679_done3913:
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1678_curclass, "$!pos"
    lt $I11, 0, rx1678_fail3907
    nqp_rxmark rx1678_bstack, rxsubrule1680_pass3914, -1, 0
  rxsubrule1680_pass3914:
    rx1678_cstack = rx1678_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1678_pos, $P11, rx1678_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1681_03916
    nqp_push_label $P11, alt1681_13917
    nqp_rxmark rx1678_bstack, alt1681_end3915, -1, 0
    rx1678_cur."!alt"(rx1678_pos, "alt_nfa__39_1381944293.37496", $P11)
    goto rx1678_fail3907
  alt1681_03916:
    ge rx1678_pos, rx1678_eos, rx1678_fail3907
    is_cclass $I11, .CCLASS_WORD, rx1678_tgt, rx1678_pos
    if $I11, rx1678_fail3907
    add rx1678_pos, 1
    ge rx1678_pos, rx1678_eos, rx1678_fail3907
    is_cclass $I11, .CCLASS_WORD, rx1678_tgt, rx1678_pos
    unless $I11, rx1678_fail3907
    add rx1678_pos, 1
    goto alt1681_end3915
  alt1681_13917:
    ge rx1678_pos, rx1678_eos, rx1678_fail3907
    is_cclass $I11, .CCLASS_WORD, rx1678_tgt, rx1678_pos
    unless $I11, rx1678_fail3907
    add rx1678_pos, 1
    goto alt1681_end3915
  alt1681_end3915:
    nqp_rxcommit rx1678_bstack, alt1681_end3915
    rx1678_cur."!cursor_pass"(rx1678_pos, 'backtrack'=>1)
    .return (rx1678_cur)
  rx1678_restart3906:
    repr_get_attr_obj rx1678_cstack, rx1678_cur, rx1678_curclass, "$!cstack"
  rx1678_fail3907:
    unless rx1678_bstack, rx1678_done3905
    pop $I19, rx1678_bstack
    if_null rx1678_cstack, rx1678_cstack_done3910
    unless rx1678_cstack, rx1678_cstack_done3910
    dec $I19
    set $P11, rx1678_cstack[$I19]
  rx1678_cstack_done3910:
    pop rx1678_rep, rx1678_bstack
    pop rx1678_pos, rx1678_bstack
    pop $I19, rx1678_bstack
    lt rx1678_pos, -1, rx1678_done3905
    lt rx1678_pos, 0, rx1678_fail3907
    eq $I19, 0, rx1678_fail3907
    nqp_islist $I20, rx1678_cstack
    unless $I20, rx1678_jump3908
    elements $I18, rx1678_bstack
    le $I18, 0, rx1678_cut3909
    dec $I18
    set $I18, rx1678_bstack[$I18]
  rx1678_cut3909:
    assign rx1678_cstack, $I18
  rx1678_jump3908:
    jump $I19
  rx1678_done3905:
    rx1678_cur."!cursor_fail"()
    .return (rx1678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_231_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1454
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1683_start
    .local string rx1683_tgt
    .local int rx1683_pos
    .local int rx1683_off
    .local int rx1683_eos
    .local int rx1683_rep
    .local pmc rx1683_cur
    .local pmc rx1683_curclass
    .local pmc rx1683_bstack
    .local pmc rx1683_cstack
    rx1683_start = self."!cursor_start_all"()
    set rx1683_cur, rx1683_start[0]
    set rx1683_tgt, rx1683_start[1]
    set rx1683_pos, rx1683_start[2]
    set rx1683_curclass, rx1683_start[3]
    set rx1683_bstack, rx1683_start[4]
    set $I19, rx1683_start[5]
    store_lex unicode:"$\x{a2}", rx1683_cur
    length rx1683_eos, rx1683_tgt
    eq $I19, 1, rx1683_restart3921
    gt rx1683_pos, rx1683_eos, rx1683_fail3922
    repr_get_attr_int $I11, self, rx1683_curclass, "$!from"
    ne $I11, -1, rxscan1684_done3928
    goto rxscan1684_scan3927
  rxscan1684_loop3926:
    inc rx1683_pos
    gt rx1683_pos, rx1683_eos, rx1683_fail3922
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!from", rx1683_pos
  rxscan1684_scan3927:
    nqp_rxmark rx1683_bstack, rxscan1684_loop3926, rx1683_pos, 0
  rxscan1684_done3928:
    ge rx1683_pos, rx1683_eos, rx1683_fail3922
    substr $S11, rx1683_tgt, rx1683_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1683_fail3922
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!pos", rx1683_pos
    $P11 = rx1683_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1683_curclass, "$!pos"
    lt $I11, 0, rx1683_fail3922
    nqp_rxmark rx1683_bstack, rxsubrule1685_pass3929, -1, 0
  rxsubrule1685_pass3929:
    rx1683_cstack = rx1683_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1683_pos, $P11, rx1683_curclass, "$!pos"
    rx1683_cur."!cursor_pass"(rx1683_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1683_cur)
  rx1683_restart3921:
    repr_get_attr_obj rx1683_cstack, rx1683_cur, rx1683_curclass, "$!cstack"
  rx1683_fail3922:
    unless rx1683_bstack, rx1683_done3920
    pop $I19, rx1683_bstack
    if_null rx1683_cstack, rx1683_cstack_done3925
    unless rx1683_cstack, rx1683_cstack_done3925
    dec $I19
    set $P11, rx1683_cstack[$I19]
  rx1683_cstack_done3925:
    pop rx1683_rep, rx1683_bstack
    pop rx1683_pos, rx1683_bstack
    pop $I19, rx1683_bstack
    lt rx1683_pos, -1, rx1683_done3920
    lt rx1683_pos, 0, rx1683_fail3922
    eq $I19, 0, rx1683_fail3922
    nqp_islist $I20, rx1683_cstack
    unless $I20, rx1683_jump3923
    elements $I18, rx1683_bstack
    le $I18, 0, rx1683_cut3924
    dec $I18
    set $I18, rx1683_bstack[$I18]
  rx1683_cut3924:
    assign rx1683_cstack, $I18
  rx1683_jump3923:
    jump $I19
  rx1683_done3920:
    rx1683_cur."!cursor_fail"()
    .return (rx1683_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_232_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1458
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1686_start
    .local string rx1686_tgt
    .local int rx1686_pos
    .local int rx1686_off
    .local int rx1686_eos
    .local int rx1686_rep
    .local pmc rx1686_cur
    .local pmc rx1686_curclass
    .local pmc rx1686_bstack
    .local pmc rx1686_cstack
    rx1686_start = self."!cursor_start_all"()
    set rx1686_cur, rx1686_start[0]
    set rx1686_tgt, rx1686_start[1]
    set rx1686_pos, rx1686_start[2]
    set rx1686_curclass, rx1686_start[3]
    set rx1686_bstack, rx1686_start[4]
    set $I19, rx1686_start[5]
    store_lex unicode:"$\x{a2}", rx1686_cur
    length rx1686_eos, rx1686_tgt
    eq $I19, 1, rx1686_restart3932
    gt rx1686_pos, rx1686_eos, rx1686_fail3933
    repr_get_attr_int $I11, self, rx1686_curclass, "$!from"
    ne $I11, -1, rxscan1687_done3939
    goto rxscan1687_scan3938
  rxscan1687_loop3937:
    inc rx1686_pos
    gt rx1686_pos, rx1686_eos, rx1686_fail3933
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!from", rx1686_pos
  rxscan1687_scan3938:
    nqp_rxmark rx1686_bstack, rxscan1687_loop3937, rx1686_pos, 0
  rxscan1687_done3939:
    add $I11, rx1686_pos, 1
    gt $I11, rx1686_eos, rx1686_fail3933
    substr $S10, rx1686_tgt, rx1686_pos, 1
    ne $S10, ucs4:"?", rx1686_fail3933
    add rx1686_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1688_03941
    nqp_push_label $P11, alt1688_13942
    nqp_rxmark rx1686_bstack, alt1688_end3940, -1, 0
    rx1686_cur."!alt"(rx1686_pos, "alt_nfa__40_1381944293.39969", $P11)
    goto rx1686_fail3933
  alt1688_03941:
    ge rx1686_pos, rx1686_eos, rx1686_fail3933
    substr $S11, rx1686_tgt, rx1686_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1686_fail3933
    goto alt1688_end3940
  alt1688_13942:
    ge rx1686_pos, rx1686_eos, rx1686_fail3933
    substr $S11, rx1686_tgt, rx1686_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1686_fail3933
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail3933
    nqp_rxmark rx1686_bstack, rxsubrule1689_pass3943, -1, 0
  rxsubrule1689_pass3943:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    goto alt1688_end3940
  alt1688_end3940:
    nqp_rxcommit rx1686_bstack, alt1688_end3940
    rx1686_cur."!cursor_pass"(rx1686_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1686_cur)
  rx1686_restart3932:
    repr_get_attr_obj rx1686_cstack, rx1686_cur, rx1686_curclass, "$!cstack"
  rx1686_fail3933:
    unless rx1686_bstack, rx1686_done3931
    pop $I19, rx1686_bstack
    if_null rx1686_cstack, rx1686_cstack_done3936
    unless rx1686_cstack, rx1686_cstack_done3936
    dec $I19
    set $P11, rx1686_cstack[$I19]
  rx1686_cstack_done3936:
    pop rx1686_rep, rx1686_bstack
    pop rx1686_pos, rx1686_bstack
    pop $I19, rx1686_bstack
    lt rx1686_pos, -1, rx1686_done3931
    lt rx1686_pos, 0, rx1686_fail3933
    eq $I19, 0, rx1686_fail3933
    nqp_islist $I20, rx1686_cstack
    unless $I20, rx1686_jump3934
    elements $I18, rx1686_bstack
    le $I18, 0, rx1686_cut3935
    dec $I18
    set $I18, rx1686_bstack[$I18]
  rx1686_cut3935:
    assign rx1686_cstack, $I18
  rx1686_jump3934:
    jump $I19
  rx1686_done3931:
    rx1686_cur."!cursor_fail"()
    .return (rx1686_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_233_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1459
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1690_start
    .local string rx1690_tgt
    .local int rx1690_pos
    .local int rx1690_off
    .local int rx1690_eos
    .local int rx1690_rep
    .local pmc rx1690_cur
    .local pmc rx1690_curclass
    .local pmc rx1690_bstack
    .local pmc rx1690_cstack
    rx1690_start = self."!cursor_start_all"()
    set rx1690_cur, rx1690_start[0]
    set rx1690_tgt, rx1690_start[1]
    set rx1690_pos, rx1690_start[2]
    set rx1690_curclass, rx1690_start[3]
    set rx1690_bstack, rx1690_start[4]
    set $I19, rx1690_start[5]
    store_lex unicode:"$\x{a2}", rx1690_cur
    length rx1690_eos, rx1690_tgt
    eq $I19, 1, rx1690_restart3946
    gt rx1690_pos, rx1690_eos, rx1690_fail3947
    repr_get_attr_int $I11, self, rx1690_curclass, "$!from"
    ne $I11, -1, rxscan1691_done3953
    goto rxscan1691_scan3952
  rxscan1691_loop3951:
    inc rx1690_pos
    gt rx1690_pos, rx1690_eos, rx1690_fail3947
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!from", rx1690_pos
  rxscan1691_scan3952:
    nqp_rxmark rx1690_bstack, rxscan1691_loop3951, rx1690_pos, 0
  rxscan1691_done3953:
    add $I11, rx1690_pos, 1
    gt $I11, rx1690_eos, rx1690_fail3947
    substr $S10, rx1690_tgt, rx1690_pos, 1
    ne $S10, ucs4:"!", rx1690_fail3947
    add rx1690_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1692_03955
    nqp_push_label $P11, alt1692_13956
    nqp_rxmark rx1690_bstack, alt1692_end3954, -1, 0
    rx1690_cur."!alt"(rx1690_pos, "alt_nfa__41_1381944293.41186", $P11)
    goto rx1690_fail3947
  alt1692_03955:
    ge rx1690_pos, rx1690_eos, rx1690_fail3947
    substr $S11, rx1690_tgt, rx1690_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1690_fail3947
    goto alt1692_end3954
  alt1692_13956:
    ge rx1690_pos, rx1690_eos, rx1690_fail3947
    substr $S11, rx1690_tgt, rx1690_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1690_fail3947
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!pos", rx1690_pos
    $P11 = rx1690_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1690_curclass, "$!pos"
    lt $I11, 0, rx1690_fail3947
    nqp_rxmark rx1690_bstack, rxsubrule1693_pass3957, -1, 0
  rxsubrule1693_pass3957:
    rx1690_cstack = rx1690_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1690_pos, $P11, rx1690_curclass, "$!pos"
    goto alt1692_end3954
  alt1692_end3954:
    nqp_rxcommit rx1690_bstack, alt1692_end3954
    rx1690_cur."!cursor_pass"(rx1690_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1690_cur)
  rx1690_restart3946:
    repr_get_attr_obj rx1690_cstack, rx1690_cur, rx1690_curclass, "$!cstack"
  rx1690_fail3947:
    unless rx1690_bstack, rx1690_done3945
    pop $I19, rx1690_bstack
    if_null rx1690_cstack, rx1690_cstack_done3950
    unless rx1690_cstack, rx1690_cstack_done3950
    dec $I19
    set $P11, rx1690_cstack[$I19]
  rx1690_cstack_done3950:
    pop rx1690_rep, rx1690_bstack
    pop rx1690_pos, rx1690_bstack
    pop $I19, rx1690_bstack
    lt rx1690_pos, -1, rx1690_done3945
    lt rx1690_pos, 0, rx1690_fail3947
    eq $I19, 0, rx1690_fail3947
    nqp_islist $I20, rx1690_cstack
    unless $I20, rx1690_jump3948
    elements $I18, rx1690_bstack
    le $I18, 0, rx1690_cut3949
    dec $I18
    set $I18, rx1690_bstack[$I18]
  rx1690_cut3949:
    assign rx1690_cstack, $I18
  rx1690_jump3948:
    jump $I19
  rx1690_done3945:
    rx1690_cur."!cursor_fail"()
    .return (rx1690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_234_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1461
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1694_start
    .local string rx1694_tgt
    .local int rx1694_pos
    .local int rx1694_off
    .local int rx1694_eos
    .local int rx1694_rep
    .local pmc rx1694_cur
    .local pmc rx1694_curclass
    .local pmc rx1694_bstack
    .local pmc rx1694_cstack
    rx1694_start = self."!cursor_start_all"()
    set rx1694_cur, rx1694_start[0]
    set rx1694_tgt, rx1694_start[1]
    set rx1694_pos, rx1694_start[2]
    set rx1694_curclass, rx1694_start[3]
    set rx1694_bstack, rx1694_start[4]
    set $I19, rx1694_start[5]
    store_lex unicode:"$\x{a2}", rx1694_cur
    length rx1694_eos, rx1694_tgt
    eq $I19, 1, rx1694_restart3960
    gt rx1694_pos, rx1694_eos, rx1694_fail3961
    repr_get_attr_int $I11, self, rx1694_curclass, "$!from"
    ne $I11, -1, rxscan1695_done3967
    goto rxscan1695_scan3966
  rxscan1695_loop3965:
    inc rx1694_pos
    gt rx1694_pos, rx1694_eos, rx1694_fail3961
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!from", rx1694_pos
  rxscan1695_scan3966:
    nqp_rxmark rx1694_bstack, rxscan1695_loop3965, rx1694_pos, 0
  rxscan1695_done3967:
    nqp_rxmark rx1694_bstack, rxcap1696_fail3969, rx1694_pos, 0
    ge rx1694_pos, rx1694_eos, rx1694_fail3961
    substr $S11, rx1694_tgt, rx1694_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1694_fail3961
    inc rx1694_pos
    ge rx1694_pos, rx1694_eos, rx1694_fail3961
    substr $S11, rx1694_tgt, rx1694_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1694_fail3961
    nqp_rxpeek $I19, rx1694_bstack, rxcap1696_fail3969
    inc $I19
    set $I11, rx1694_bstack[$I19]
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!pos", rx1694_pos
    $P11 = rx1694_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1694_pos)
    rx1694_cstack = rx1694_cur."!cursor_capture"($P11, "zw")
    goto rxcap1696_done3968
  rxcap1696_fail3969:
    goto rx1694_fail3961
  rxcap1696_done3968:
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!pos", rx1694_pos
    $P11 = rx1694_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1694_curclass, "$!pos"
    lt $I11, 0, rx1694_fail3961
    nqp_rxmark rx1694_bstack, rxsubrule1697_pass3970, -1, 0
  rxsubrule1697_pass3970:
    rx1694_cstack = rx1694_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1694_pos, $P11, rx1694_curclass, "$!pos"
    rx1694_cur."!cursor_pass"(rx1694_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1694_cur)
  rx1694_restart3960:
    repr_get_attr_obj rx1694_cstack, rx1694_cur, rx1694_curclass, "$!cstack"
  rx1694_fail3961:
    unless rx1694_bstack, rx1694_done3959
    pop $I19, rx1694_bstack
    if_null rx1694_cstack, rx1694_cstack_done3964
    unless rx1694_cstack, rx1694_cstack_done3964
    dec $I19
    set $P11, rx1694_cstack[$I19]
  rx1694_cstack_done3964:
    pop rx1694_rep, rx1694_bstack
    pop rx1694_pos, rx1694_bstack
    pop $I19, rx1694_bstack
    lt rx1694_pos, -1, rx1694_done3959
    lt rx1694_pos, 0, rx1694_fail3961
    eq $I19, 0, rx1694_fail3961
    nqp_islist $I20, rx1694_cstack
    unless $I20, rx1694_jump3962
    elements $I18, rx1694_bstack
    le $I18, 0, rx1694_cut3963
    dec $I18
    set $I18, rx1694_bstack[$I18]
  rx1694_cut3963:
    assign rx1694_cstack, $I18
  rx1694_jump3962:
    jump $I19
  rx1694_done3959:
    rx1694_cur."!cursor_fail"()
    .return (rx1694_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_235_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1465
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1698_start
    .local string rx1698_tgt
    .local int rx1698_pos
    .local int rx1698_off
    .local int rx1698_eos
    .local int rx1698_rep
    .local pmc rx1698_cur
    .local pmc rx1698_curclass
    .local pmc rx1698_bstack
    .local pmc rx1698_cstack
    rx1698_start = self."!cursor_start_all"()
    set rx1698_cur, rx1698_start[0]
    set rx1698_tgt, rx1698_start[1]
    set rx1698_pos, rx1698_start[2]
    set rx1698_curclass, rx1698_start[3]
    set rx1698_bstack, rx1698_start[4]
    set $I19, rx1698_start[5]
    store_lex unicode:"$\x{a2}", rx1698_cur
    length rx1698_eos, rx1698_tgt
    eq $I19, 1, rx1698_restart3973
    gt rx1698_pos, rx1698_eos, rx1698_fail3974
    repr_get_attr_int $I11, self, rx1698_curclass, "$!from"
    ne $I11, -1, rxscan1699_done3980
    goto rxscan1699_scan3979
  rxscan1699_loop3978:
    inc rx1698_pos
    gt rx1698_pos, rx1698_eos, rx1698_fail3974
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!from", rx1698_pos
  rxscan1699_scan3979:
    nqp_rxmark rx1698_bstack, rxscan1699_loop3978, rx1698_pos, 0
  rxscan1699_done3980:
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3974
    nqp_rxmark rx1698_bstack, rxsubrule1700_pass3981, -1, 0
  rxsubrule1700_pass3981:
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    nqp_rxmark rx1698_bstack, rxquantr1701_done3983, rx1698_pos, 0
  rxquantr1701_loop3982:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1702_03985
    nqp_push_label $P11, alt1702_13986
    nqp_push_label $P11, alt1702_23988
    nqp_push_label $P11, alt1702_33990
    nqp_push_label $P11, alt1702_43992
    nqp_rxmark rx1698_bstack, alt1702_end3984, -1, 0
    rx1698_cur."!alt"(rx1698_pos, "alt_nfa__42_1381944293.44806", $P11)
    goto rx1698_fail3974
  alt1702_03985:
    ge rx1698_pos, rx1698_eos, rx1698_fail3974
    substr $S11, rx1698_tgt, rx1698_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1698_fail3974
    goto alt1702_end3984
  alt1702_13986:
    add $I11, rx1698_pos, 1
    gt $I11, rx1698_eos, rx1698_fail3974
    substr $S10, rx1698_tgt, rx1698_pos, 1
    ne $S10, ucs4:"=", rx1698_fail3974
    add rx1698_pos, 1
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3974
    nqp_rxmark rx1698_bstack, rxsubrule1703_pass3987, -1, 0
  rxsubrule1703_pass3987:
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    goto alt1702_end3984
  alt1702_23988:
    add $I11, rx1698_pos, 1
    gt $I11, rx1698_eos, rx1698_fail3974
    substr $S10, rx1698_tgt, rx1698_pos, 1
    ne $S10, ucs4:":", rx1698_fail3974
    add rx1698_pos, 1
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3974
    nqp_rxmark rx1698_bstack, rxsubrule1704_pass3989, -1, 0
  rxsubrule1704_pass3989:
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    goto alt1702_end3984
  alt1702_33990:
    add $I11, rx1698_pos, 1
    gt $I11, rx1698_eos, rx1698_fail3974
    substr $S10, rx1698_tgt, rx1698_pos, 1
    ne $S10, ucs4:"(", rx1698_fail3974
    add rx1698_pos, 1
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3974
    nqp_rxmark rx1698_bstack, rxsubrule1705_pass3991, -1, 0
  rxsubrule1705_pass3991:
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    add $I11, rx1698_pos, 1
    gt $I11, rx1698_eos, rx1698_fail3974
    substr $S10, rx1698_tgt, rx1698_pos, 1
    ne $S10, ucs4:")", rx1698_fail3974
    add rx1698_pos, 1
    goto alt1702_end3984
  alt1702_43992:
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3974
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3974
    nqp_rxmark rx1698_bstack, rxsubrule1707_pass3994, -1, 0
  rxsubrule1707_pass3994:
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    goto alt1702_end3984
  alt1702_end3984:
    nqp_rxpeek $I19, rx1698_bstack, rxquantr1701_done3983
    inc $I19
    inc $I19
    set rx1698_rep, rx1698_bstack[$I19]
    nqp_rxcommit rx1698_bstack, rxquantr1701_done3983
    inc rx1698_rep
  rxquantr1701_done3983:
    rx1698_cur."!cursor_pass"(rx1698_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1698_cur)
  rx1698_restart3973:
    repr_get_attr_obj rx1698_cstack, rx1698_cur, rx1698_curclass, "$!cstack"
  rx1698_fail3974:
    unless rx1698_bstack, rx1698_done3972
    pop $I19, rx1698_bstack
    if_null rx1698_cstack, rx1698_cstack_done3977
    unless rx1698_cstack, rx1698_cstack_done3977
    dec $I19
    set $P11, rx1698_cstack[$I19]
  rx1698_cstack_done3977:
    pop rx1698_rep, rx1698_bstack
    pop rx1698_pos, rx1698_bstack
    pop $I19, rx1698_bstack
    lt rx1698_pos, -1, rx1698_done3972
    lt rx1698_pos, 0, rx1698_fail3974
    eq $I19, 0, rx1698_fail3974
    nqp_islist $I20, rx1698_cstack
    unless $I20, rx1698_jump3975
    elements $I18, rx1698_bstack
    le $I18, 0, rx1698_cut3976
    dec $I18
    set $I18, rx1698_bstack[$I18]
  rx1698_cut3976:
    assign rx1698_cstack, $I18
  rx1698_jump3975:
    jump $I19
  rx1698_done3972:
    rx1698_cur."!cursor_fail"()
    .return (rx1698_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_236_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1476
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1708_start
    .local string rx1708_tgt
    .local int rx1708_pos
    .local int rx1708_off
    .local int rx1708_eos
    .local int rx1708_rep
    .local pmc rx1708_cur
    .local pmc rx1708_curclass
    .local pmc rx1708_bstack
    .local pmc rx1708_cstack
    rx1708_start = self."!cursor_start_all"()
    set rx1708_cur, rx1708_start[0]
    set rx1708_tgt, rx1708_start[1]
    set rx1708_pos, rx1708_start[2]
    set rx1708_curclass, rx1708_start[3]
    set rx1708_bstack, rx1708_start[4]
    set $I19, rx1708_start[5]
    store_lex unicode:"$\x{a2}", rx1708_cur
    length rx1708_eos, rx1708_tgt
    eq $I19, 1, rx1708_restart3997
    gt rx1708_pos, rx1708_eos, rx1708_fail3998
    repr_get_attr_int $I11, self, rx1708_curclass, "$!from"
    ne $I11, -1, rxscan1709_done4004
    goto rxscan1709_scan4003
  rxscan1709_loop4002:
    inc rx1708_pos
    gt rx1708_pos, rx1708_eos, rx1708_fail3998
    repr_bind_attr_int rx1708_cur, rx1708_curclass, "$!from", rx1708_pos
  rxscan1709_scan4003:
    nqp_rxmark rx1708_bstack, rxscan1709_loop4002, rx1708_pos, 0
  rxscan1709_done4004:
    ge rx1708_pos, rx1708_eos, rx1708_fail3998
    substr $S11, rx1708_tgt, rx1708_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1708_fail3998
    repr_bind_attr_int rx1708_cur, rx1708_curclass, "$!pos", rx1708_pos
    $P11 = rx1708_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1708_curclass, "$!pos"
    lt $I11, 0, rx1708_fail3998
    nqp_rxmark rx1708_bstack, rxsubrule1710_pass4005, -1, 0
  rxsubrule1710_pass4005:
    rx1708_cstack = rx1708_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1708_pos, $P11, rx1708_curclass, "$!pos"
    rx1708_cur."!cursor_pass"(rx1708_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1708_cur)
  rx1708_restart3997:
    repr_get_attr_obj rx1708_cstack, rx1708_cur, rx1708_curclass, "$!cstack"
  rx1708_fail3998:
    unless rx1708_bstack, rx1708_done3996
    pop $I19, rx1708_bstack
    if_null rx1708_cstack, rx1708_cstack_done4001
    unless rx1708_cstack, rx1708_cstack_done4001
    dec $I19
    set $P11, rx1708_cstack[$I19]
  rx1708_cstack_done4001:
    pop rx1708_rep, rx1708_bstack
    pop rx1708_pos, rx1708_bstack
    pop $I19, rx1708_bstack
    lt rx1708_pos, -1, rx1708_done3996
    lt rx1708_pos, 0, rx1708_fail3998
    eq $I19, 0, rx1708_fail3998
    nqp_islist $I20, rx1708_cstack
    unless $I20, rx1708_jump3999
    elements $I18, rx1708_bstack
    le $I18, 0, rx1708_cut4000
    dec $I18
    set $I18, rx1708_bstack[$I18]
  rx1708_cut4000:
    assign rx1708_cstack, $I18
  rx1708_jump3999:
    jump $I19
  rx1708_done3996:
    rx1708_cur."!cursor_fail"()
    .return (rx1708_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_237_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1480
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1711_start
    .local string rx1711_tgt
    .local int rx1711_pos
    .local int rx1711_off
    .local int rx1711_eos
    .local int rx1711_rep
    .local pmc rx1711_cur
    .local pmc rx1711_curclass
    .local pmc rx1711_bstack
    .local pmc rx1711_cstack
    rx1711_start = self."!cursor_start_all"()
    set rx1711_cur, rx1711_start[0]
    set rx1711_tgt, rx1711_start[1]
    set rx1711_pos, rx1711_start[2]
    set rx1711_curclass, rx1711_start[3]
    set rx1711_bstack, rx1711_start[4]
    set $I19, rx1711_start[5]
    store_lex unicode:"$\x{a2}", rx1711_cur
    length rx1711_eos, rx1711_tgt
    eq $I19, 1, rx1711_restart4008
    gt rx1711_pos, rx1711_eos, rx1711_fail4009
    repr_get_attr_int $I11, self, rx1711_curclass, "$!from"
    ne $I11, -1, rxscan1712_done4015
    goto rxscan1712_scan4014
  rxscan1712_loop4013:
    inc rx1711_pos
    gt rx1711_pos, rx1711_eos, rx1711_fail4009
    repr_bind_attr_int rx1711_cur, rx1711_curclass, "$!from", rx1711_pos
  rxscan1712_scan4014:
    nqp_rxmark rx1711_bstack, rxscan1712_loop4013, rx1711_pos, 0
  rxscan1712_done4015:
    repr_bind_attr_int rx1711_cur, rx1711_curclass, "$!pos", rx1711_pos
    $P11 = rx1711_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1711_curclass, "$!pos"
    lt $I11, 0, rx1711_fail4009
    nqp_rxmark rx1711_bstack, rxsubrule1713_pass4016, -1, 0
  rxsubrule1713_pass4016:
    rx1711_cstack = rx1711_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1711_pos, $P11, rx1711_curclass, "$!pos"
    rx1711_cur."!cursor_pass"(rx1711_pos, "codeblock", 'backtrack'=>1)
    .return (rx1711_cur)
  rx1711_restart4008:
    repr_get_attr_obj rx1711_cstack, rx1711_cur, rx1711_curclass, "$!cstack"
  rx1711_fail4009:
    unless rx1711_bstack, rx1711_done4007
    pop $I19, rx1711_bstack
    if_null rx1711_cstack, rx1711_cstack_done4012
    unless rx1711_cstack, rx1711_cstack_done4012
    dec $I19
    set $P11, rx1711_cstack[$I19]
  rx1711_cstack_done4012:
    pop rx1711_rep, rx1711_bstack
    pop rx1711_pos, rx1711_bstack
    pop $I19, rx1711_bstack
    lt rx1711_pos, -1, rx1711_done4007
    lt rx1711_pos, 0, rx1711_fail4009
    eq $I19, 0, rx1711_fail4009
    nqp_islist $I20, rx1711_cstack
    unless $I20, rx1711_jump4010
    elements $I18, rx1711_bstack
    le $I18, 0, rx1711_cut4011
    dec $I18
    set $I18, rx1711_bstack[$I18]
  rx1711_cut4011:
    assign rx1711_cstack, $I18
  rx1711_jump4010:
    jump $I19
  rx1711_done4007:
    rx1711_cur."!cursor_fail"()
    .return (rx1711_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_238_1381944288.90674") :anon :lex :outer("cuid_419_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1484
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1714_start
    .local string rx1714_tgt
    .local int rx1714_pos
    .local int rx1714_off
    .local int rx1714_eos
    .local int rx1714_rep
    .local pmc rx1714_cur
    .local pmc rx1714_curclass
    .local pmc rx1714_bstack
    .local pmc rx1714_cstack
    rx1714_start = self."!cursor_start_all"()
    set rx1714_cur, rx1714_start[0]
    set rx1714_tgt, rx1714_start[1]
    set rx1714_pos, rx1714_start[2]
    set rx1714_curclass, rx1714_start[3]
    set rx1714_bstack, rx1714_start[4]
    set $I19, rx1714_start[5]
    store_lex unicode:"$\x{a2}", rx1714_cur
    length rx1714_eos, rx1714_tgt
    eq $I19, 1, rx1714_restart4019
    gt rx1714_pos, rx1714_eos, rx1714_fail4020
    repr_get_attr_int $I11, self, rx1714_curclass, "$!from"
    ne $I11, -1, rxscan1715_done4026
    goto rxscan1715_scan4025
  rxscan1715_loop4024:
    inc rx1714_pos
    gt rx1714_pos, rx1714_eos, rx1714_fail4020
    repr_bind_attr_int rx1714_cur, rx1714_curclass, "$!from", rx1714_pos
  rxscan1715_scan4025:
    nqp_rxmark rx1714_bstack, rxscan1715_loop4024, rx1714_pos, 0
  rxscan1715_done4026:
    repr_bind_attr_int rx1714_cur, rx1714_curclass, "$!pos", rx1714_pos
    $P11 = rx1714_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1714_curclass, "$!pos"
    lt $I11, 0, rx1714_fail4020
    nqp_rxmark rx1714_bstack, rxsubrule1716_pass4027, -1, 0
  rxsubrule1716_pass4027:
    rx1714_cstack = rx1714_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1714_pos, $P11, rx1714_curclass, "$!pos"
    rx1714_cur."!cursor_pass"(rx1714_pos, "arg", 'backtrack'=>1)
    .return (rx1714_cur)
  rx1714_restart4019:
    repr_get_attr_obj rx1714_cstack, rx1714_cur, rx1714_curclass, "$!cstack"
  rx1714_fail4020:
    unless rx1714_bstack, rx1714_done4018
    pop $I19, rx1714_bstack
    if_null rx1714_cstack, rx1714_cstack_done4023
    unless rx1714_cstack, rx1714_cstack_done4023
    dec $I19
    set $P11, rx1714_cstack[$I19]
  rx1714_cstack_done4023:
    pop rx1714_rep, rx1714_bstack
    pop rx1714_pos, rx1714_bstack
    pop $I19, rx1714_bstack
    lt rx1714_pos, -1, rx1714_done4018
    lt rx1714_pos, 0, rx1714_fail4020
    eq $I19, 0, rx1714_fail4020
    nqp_islist $I20, rx1714_cstack
    unless $I20, rx1714_jump4021
    elements $I18, rx1714_bstack
    le $I18, 0, rx1714_cut4022
    dec $I18
    set $I18, rx1714_bstack[$I18]
  rx1714_cut4022:
    assign rx1714_cstack, $I18
  rx1714_jump4021:
    jump $I19
  rx1714_done4018:
    rx1714_cur."!cursor_fail"()
    .return (rx1714_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1493
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_186 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set fb_tmp_186, _lex_param_1
    repr_defined $I5001, fb_tmp_186
    unless $I5001 goto if1717_else4028 
    set $P5002, fb_tmp_186[0]
    set $P5004, $P5002
    goto if1717_end4029
  if1717_else4028:
    null $P5003
    set $P5004, $P5003
  if1717_end4029:
    unless_null $P5004, vivi_17184030
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_17184030:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1719_end4032 
.annotate 'line', 1495
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless1719_end4032:
.annotate 'line', 1498
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1501
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1504
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1508
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_187 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    set fb_tmp_187, _lex_param_1
    repr_defined $I5001, fb_tmp_187
    unless $I5001 goto if1720_else4033 
    set $P5002, fb_tmp_187[0]
    set $P5004, $P5002
    goto if1720_end4034
  if1720_else4033:
    null $P5003
    set $P5004, $P5003
  if1720_end4034:
    unless_null $P5004, vivi_17214035
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_17214035:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1722_end4037 
.annotate 'line', 1510
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless1722_end4037:
.annotate 'line', 1513
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1516
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1519
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1523
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_188 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set fb_tmp_188, _lex_param_1
    repr_defined $I5001, fb_tmp_188
    unless $I5001 goto if1723_else4038 
    set $P5003, fb_tmp_188[0]
    set $P5005, $P5003
    goto if1723_end4039
  if1723_else4038:
    null $P5004
    set $P5005, $P5004
  if1723_end4039:
    unless_null $P5005, vivi_17244040
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_17244040:
    set $P101, $P5005
.annotate 'line', 1525
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1725_end4042 
.annotate 'line', 1526
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless1725_end4042:
.annotate 'line', 1529
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 103
.annotate 'line', 1531
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1533
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 1536
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1539
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1541
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 1542
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1547
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_189 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set fb_tmp_189, _lex_param_1
    repr_defined $I5001, fb_tmp_189
    unless $I5001 goto if1726_else4043 
    set $P5003, fb_tmp_189[0]
    set $P5005, $P5003
    goto if1726_end4044
  if1726_else4043:
    null $P5004
    set $P5005, $P5004
  if1726_end4044:
    unless_null $P5005, vivi_17274045
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_17274045:
    set $P101, $P5005
.annotate 'line', 1549
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1728_end4047 
.annotate 'line', 1550
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless1728_end4047:
.annotate 'line', 1553
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 103
.annotate 'line', 1555
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1557
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 1560
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1563
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1565
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1566
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1571
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_190 
.annotate 'line', 1572
    set fb_tmp_190, _lex_param_1
    repr_defined $I5001, fb_tmp_190
    unless $I5001 goto if1729_else4048 
    set $P5001, fb_tmp_190[0]
    set $P5003, $P5001
    goto if1729_end4049
  if1729_else4048:
    null $P5002
    set $P5003, $P5002
  if1729_end4049:
    unless_null $P5003, vivi_17304050
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  vivi_17304050:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1575
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_191 
.annotate 'line', 1576
    set fb_tmp_191, _lex_param_1
    repr_defined $I5001, fb_tmp_191
    unless $I5001 goto if1731_else4051 
    set $P5001, fb_tmp_191[0]
    set $P5003, $P5001
    goto if1731_end4052
  if1731_else4051:
    null $P5002
    set $P5003, $P5002
  if1731_end4052:
    unless_null $P5003, vivi_17324053
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  vivi_17324053:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1579
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 1580
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4054
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5005, $P5006
    set fb_tmp_192, $P5005
    repr_defined $I5001, fb_tmp_192
    unless $I5001 goto if1733_else4055 
    set $P5007, fb_tmp_192["$REGALLOC"]
    set $P5009, $P5007
    goto if1733_end4056
  if1733_else4055:
    null $P5008
    set $P5009, $P5008
  if1733_end4056:
    unless_null $P5009, vivi_17344057
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_17344057:
    unless_null $P5009, vivi_17354058
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_17354058:
    set $P5004, $P5009
  fallback4054:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1581
    nqp_get_sc_object $P5013, "96F80A66F2271DAB0F3CD1D5EC903FD7ED58994D-1381944260.71446", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 1582
    set fb_tmp_193, _lex_param_1
    repr_defined $I5002, fb_tmp_193
    unless $I5002 goto if1736_else4059 
    set $P5015, fb_tmp_193[0]
    set $P5017, $P5015
    goto if1736_end4060
  if1736_else4059:
    null $P5016
    set $P5017, $P5016
  if1736_end4060:
    unless_null $P5017, vivi_17374061
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_17374061:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 1583
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if1738_else4062 
.annotate 'line', 1584
    $P102."push"($P103)
.annotate 'line', 1585
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if1738_end4063
  if1738_else4062:
.annotate 'line', 1587
.annotate 'line', 1588
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 1589
    $P102."push"($P103)
.annotate 'line', 1590
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1738_end4063:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1596
    .const 'Sub' $P5124 = 'cuid_428_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_431_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_434_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_435_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_438_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_441_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_442_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_444_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_445_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_451_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_239_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_240_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_241_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_242_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_243_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_244_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_245_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_246_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_247_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1381944288.90674' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1381944288.90674' 
    capture_lex $P5124 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "&xblock_immediate", $P103 
    .lex "&block_immediate", $P104 
    .lex "&default_for", $P105 
    .lex "&default_value_for_prim", $P106 
    .lex "&colonpair_str", $P107 
    .lex "&import_HOW_exports", $P108 
    .lex "&set_block_handler", $P109 
    .lex "&only_star_block", $P110 
    .lex "&attach_multi_signature", $P111 
    .lex "&wrap_return_handler", $P112 
    .lex "&lexical_package_lookup", $P113 
    .const 'Sub' $P5001 = 'cuid_428_1381944288.90674' 
    capture_lex $P5001
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_431_1381944288.90674' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_434_1381944288.90674' 
    capture_lex $P5003
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_435_1381944288.90674' 
    capture_lex $P5004
    set $P106, $P5004
    .const 'Sub' $P5005 = 'cuid_438_1381944288.90674' 
    capture_lex $P5005
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_440_1381944288.90674' 
    capture_lex $P5006
    set $P108, $P5006
    .const 'Sub' $P5007 = 'cuid_441_1381944288.90674' 
    capture_lex $P5007
    set $P109, $P5007
    .const 'Sub' $P5008 = 'cuid_442_1381944288.90674' 
    capture_lex $P5008
    set $P110, $P5008
    .const 'Sub' $P5009 = 'cuid_444_1381944288.90674' 
    capture_lex $P5009
    set $P111, $P5009
    .const 'Sub' $P5010 = 'cuid_445_1381944288.90674' 
    capture_lex $P5010
    set $P112, $P5010
    .const 'Sub' $P5011 = 'cuid_451_1381944288.90674' 
    capture_lex $P5011
    set $P113, $P5011
    .const 'Sub' $P5012 = 'cuid_239_1381944288.90674' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_240_1381944288.90674' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_241_1381944288.90674' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_242_1381944288.90674' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_243_1381944288.90674' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_244_1381944288.90674' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_245_1381944288.90674' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_246_1381944288.90674' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_247_1381944288.90674' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_248_1381944288.90674' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_249_1381944288.90674' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_250_1381944288.90674' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_251_1381944288.90674' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_252_1381944288.90674' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_253_1381944288.90674' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_254_1381944288.90674' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_255_1381944288.90674' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_256_1381944288.90674' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_257_1381944288.90674' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_258_1381944288.90674' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_259_1381944288.90674' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_260_1381944288.90674' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_261_1381944288.90674' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_262_1381944288.90674' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_263_1381944288.90674' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_264_1381944288.90674' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_265_1381944288.90674' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_266_1381944288.90674' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_267_1381944288.90674' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_268_1381944288.90674' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_269_1381944288.90674' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_270_1381944288.90674' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_271_1381944288.90674' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_272_1381944288.90674' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_273_1381944288.90674' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_274_1381944288.90674' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_275_1381944288.90674' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_276_1381944288.90674' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_277_1381944288.90674' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_278_1381944288.90674' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_279_1381944288.90674' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_280_1381944288.90674' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_281_1381944288.90674' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_282_1381944288.90674' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_283_1381944288.90674' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_284_1381944288.90674' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_285_1381944288.90674' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_286_1381944288.90674' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_287_1381944288.90674' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_288_1381944288.90674' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_289_1381944288.90674' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_290_1381944288.90674' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_291_1381944288.90674' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_292_1381944288.90674' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_293_1381944288.90674' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_294_1381944288.90674' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_295_1381944288.90674' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_296_1381944288.90674' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_297_1381944288.90674' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_298_1381944288.90674' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_299_1381944288.90674' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_300_1381944288.90674' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_301_1381944288.90674' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_302_1381944288.90674' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_303_1381944288.90674' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_304_1381944288.90674' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_305_1381944288.90674' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_306_1381944288.90674' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_307_1381944288.90674' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_308_1381944288.90674' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_309_1381944288.90674' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_310_1381944288.90674' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_311_1381944288.90674' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_312_1381944288.90674' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_313_1381944288.90674' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_314_1381944288.90674' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_315_1381944288.90674' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_316_1381944288.90674' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_317_1381944288.90674' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_318_1381944288.90674' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_319_1381944288.90674' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_320_1381944288.90674' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_321_1381944288.90674' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_322_1381944288.90674' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_323_1381944288.90674' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_324_1381944288.90674' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_325_1381944288.90674' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_326_1381944288.90674' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_327_1381944288.90674' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_328_1381944288.90674' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_329_1381944288.90674' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_330_1381944288.90674' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_331_1381944288.90674' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_332_1381944288.90674' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_333_1381944288.90674' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_334_1381944288.90674' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_335_1381944288.90674' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_336_1381944288.90674' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_337_1381944288.90674' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_338_1381944288.90674' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_339_1381944288.90674' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_340_1381944288.90674' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_341_1381944288.90674' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_342_1381944288.90674' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_343_1381944288.90674' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_344_1381944288.90674' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_345_1381944288.90674' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_346_1381944288.90674' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_347_1381944288.90674' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_348_1381944288.90674' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_349_1381944288.90674' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_350_1381944288.90674' 
    capture_lex $P5123
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_428_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1597
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_194 
.annotate 'line', 1598
    set fb_tmp_194, _lex_param_0
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if1739_else4064 
    set $P5001, fb_tmp_194[1]
    set $P5003, $P5001
    goto if1739_end4065
  if1739_else4064:
    null $P5002
    set $P5003, $P5002
  if1739_end4065:
    unless_null $P5003, vivi_17404066
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  vivi_17404066:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_431_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1602
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_430_1381944288.90674' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1603
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1604
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1741_end4068 
    .const 'Sub' $P5002 = 'cuid_430_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1741_end4068:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_430_1381944288.90674") :anon :lex :outer("cuid_431_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1604
    .const 'Sub' $P5013 = 'cuid_429_1381944288.90674' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1605
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1606
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4069:
    unless $P5008, for_done4071
    shift $P5012, $P5008
  for_redo4070:
    .const 'Sub' $P5011 = 'cuid_429_1381944288.90674' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4069
  for_done4071:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1381944288.90674") :anon :lex :outer("cuid_430_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1606
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_434_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1612
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_433_1381944288.90674' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1742_else4072 
.annotate 'line', 1613
.annotate 'line', 1614
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1742_end4073
  if1742_else4072:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1743_else4074 
.annotate 'line', 1616
.annotate 'line', 1617
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1743_end4075
  if1743_else4074:
    .const 'Sub' $P5005 = 'cuid_433_1381944288.90674' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1743_end4075:
    set $P5008, $P5007
  if1742_end4073:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_433_1381944288.90674") :anon :lex :outer("cuid_434_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1619
    .const 'Sub' $P5020 = 'cuid_432_1381944288.90674' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_195 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17504084
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1621
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17484082
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1622
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4076
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_195, $P5004
    repr_defined $I5001, fb_tmp_195
    unless $I5001 goto if1744_else4077 
    set $P5006, fb_tmp_195["$W"]
    set $P5008, $P5006
    goto if1744_end4078
  if1744_else4077:
    null $P5007
    set $P5008, $P5007
  if1744_end4078:
    unless_null $P5008, vivi_17454079
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_17454079:
    unless_null $P5008, vivi_17464080
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17464080:
    set $P5003, $P5008
  fallback4076:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17474081
  catch_handler_17484082:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_432_1381944288.90674' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17474081
  skip_handler_17474081:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17494083
  catch_handler_17504084:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17494083
  skip_handler_17494083:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1381944288.90674") :anon :lex :outer("cuid_433_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1623
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_435_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1629
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1751_else4085 
.annotate 'line', 1630
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1751_end4086
  if1751_else4085:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1752_else4087 
.annotate 'line', 1631
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 49
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1752_end4088
  if1752_else4087:
.annotate 'line', 1632
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1752_end4088:
    set $P5008, $P5007
  if1751_end4086:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_438_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1644
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_437_1381944288.90674' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1753_else4089 
    .const 'Sub' $P5002 = 'cuid_437_1381944288.90674' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1753_end4090
  if1753_else4089:
.annotate 'line', 1649
.annotate 'line', 1650
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1753_end4090:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_437_1381944288.90674") :anon :lex :outer("cuid_438_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1645
    .const 'Sub' $P5010 = 'cuid_436_1381944288.90674' 
    capture_lex $P5010 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1647
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4091:
    unless $P5004, for_done4093
    shift $P5008, $P5004
  for_redo4092:
    .const 'Sub' $P5007 = 'cuid_436_1381944288.90674' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4091
  for_done4093:
.annotate 'line', 1648
    $P5009 = "&join"(" ", $P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1381944288.90674") :anon :lex :outer("cuid_437_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1647
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_440_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1836
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_439_1381944288.90674' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_196 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1754_end4095 
.annotate 'line', 1838
    set fb_tmp_196, _lex_param_0
    repr_defined $I5002, fb_tmp_196
    unless $I5002 goto if1755_else4096 
    set $P5005, fb_tmp_196["EXPORTHOW"]
    set $P5007, $P5005
    goto if1755_end4097
  if1755_else4096:
    null $P5006
    set $P5007, $P5006
  if1755_end4097:
    unless_null $P5007, vivi_17564098
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_17564098:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4104:
    unless $P5003, for_done4106
    shift $P5010, $P5003
  for_redo4105:
    .const 'Sub' $P5009 = 'cuid_439_1381944288.90674' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4104
  for_done4106:
    set $P5011, $P5001
  if1754_end4095:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_439_1381944288.90674") :anon :lex :outer("cuid_440_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1839
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_197 
    .local pmc pkg_viv_tmp_42 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4099
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_42, $P5002
    set fb_tmp_197, pkg_viv_tmp_42
    repr_defined $I5001, fb_tmp_197
    unless $I5001 goto if1757_else4100 
    set $P5004, fb_tmp_197["%HOW"]
    set $P5006, $P5004
    goto if1757_end4101
  if1757_else4100:
    null $P5005
    set $P5006, $P5005
  if1757_end4101:
    unless_null $P5006, vivi_17584102
    new $P5007, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17584102:
    unless_null $P5006, vivi_17594103
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17594103:
    set $P5001, $P5006
  fallback4099:
.annotate 'line', 1840
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_441_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1938
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_198 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_199 
    .local pmc pkg_viv_tmp_44 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4109
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_43, $P5002
    set fb_tmp_198, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_198
    unless $I5002 goto if1761_else4110 
    set $P5004, fb_tmp_198["%HANDLERS"]
    set $P5006, $P5004
    goto if1761_end4111
  if1761_else4110:
    null $P5005
    set $P5006, $P5005
  if1761_end4111:
    unless_null $P5006, vivi_17624112
    new $P5007, 'Hash'
    set pkg_viv_tmp_43["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17624112:
    unless_null $P5006, vivi_17634113
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17634113:
    set $P5001, $P5006
  fallback4109:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1760_end4108 
.annotate 'line', 1939
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1760_end4108:
.annotate 'line', 1942
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1764_end4115 
.annotate 'line', 1943
.annotate 'line', 1944
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1945
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1946
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 1949
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 1950
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1951
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1952
    $P5019 = _lex_param_1."arity"(1)
  unless1764_end4115:
.annotate 'line', 1954
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4116
    nqp_get_sc_object $P5022, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_44, $P5021
    set fb_tmp_199, pkg_viv_tmp_44
    repr_defined $I5003, fb_tmp_199
    unless $I5003 goto if1765_else4117 
    set $P5023, fb_tmp_199["%HANDLERS"]
    set $P5025, $P5023
    goto if1765_end4118
  if1765_else4117:
    null $P5024
    set $P5025, $P5024
  if1765_end4118:
    unless_null $P5025, vivi_17664119
    new $P5026, 'Hash'
    set pkg_viv_tmp_44["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17664119:
    unless_null $P5025, vivi_17674120
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17674120:
    set $P5020, $P5025
  fallback4116:
    set $S5005, _lex_param_2
.annotate 'line', 1955
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 1956
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1958
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 1960
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
.annotate 'line', 1961
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1963
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 1964
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 1965
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 1967
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5043 = $P5042."new"("null" :named("op"))
.annotate 'line', 1968
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5045 = $P5044."new"("null" :named("op"))
    $P5046 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"), $P5045 :named("moar"))
.annotate 'line', 1970
    $P5047 = "&default_for"("$")
    $P5048 = $P5028."new"($P5032, $P5046, $P5047)
    set $P5020[$S5005], $P5048
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_442_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2619
    .lex "$past", $P101 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2620
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4121
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_200, $P5003
    repr_defined $I5001, fb_tmp_200
    unless $I5001 goto if1768_else4122 
    set $P5005, fb_tmp_200["$W"]
    set $P5007, $P5005
    goto if1768_end4123
  if1768_else4122:
    null $P5006
    set $P5007, $P5006
  if1768_end4123:
    unless_null $P5007, vivi_17694124
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_17694124:
    unless_null $P5007, vivi_17704125
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17704125:
    set $P5002, $P5007
  fallback4121:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2621
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2623
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2625
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2627
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
.annotate 'line', 2629
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2630
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4126
    nqp_get_sc_object $P5022, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5021, $P5022
    set fb_tmp_201, $P5021
    repr_defined $I5002, fb_tmp_201
    unless $I5002 goto if1771_else4127 
    set $P5023, fb_tmp_201["$W"]
    set $P5025, $P5023
    goto if1771_end4128
  if1771_else4127:
    null $P5024
    set $P5025, $P5024
  if1771_end4128:
    unless_null $P5025, vivi_17724129
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_17724129:
    unless_null $P5025, vivi_17734130
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17734130:
    set $P5020, $P5025
  fallback4126:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2632
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2634
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2636
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2637
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5042 = $P5041."new"("savecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2640
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_444_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2645
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_443_1381944288.90674' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_205 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_202, _lex_param_1
    repr_defined $I5001, fb_tmp_202
    unless $I5001 goto if1774_else4131 
    set $P5008, fb_tmp_202[0]
    set $P5010, $P5008
    goto if1774_end4132
  if1774_else4131:
    null $P5009
    set $P5010, $P5009
  if1774_end4132:
    unless_null $P5010, vivi_17754133
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_17754133:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4152:
    unless $P5007, for_done4154
    shift $P5014, $P5007
  for_redo4153:
    .const 'Sub' $P5013 = 'cuid_443_1381944288.90674' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4152
  for_done4154:
.annotate 'line', 2657
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4155
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5016, $P5017
    set fb_tmp_205, $P5016
    repr_defined $I5002, fb_tmp_205
    unless $I5002 goto if1786_else4156 
    set $P5018, fb_tmp_205["$W"]
    set $P5020, $P5018
    goto if1786_end4157
  if1786_else4156:
    null $P5019
    set $P5020, $P5019
  if1786_end4157:
    unless_null $P5020, vivi_17874158
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_17874158:
    unless_null $P5020, vivi_17884159
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_17884159:
    set $P5015, $P5020
  fallback4155:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_443_1381944288.90674") :anon :lex :outer("cuid_444_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2648
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1778_end4139 
.annotate 'line', 2649
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1778_end4139:
    set $I5005, $I5003
    unless $I5003 goto if1777_end4137 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1777_end4137:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1776_end4135 
.annotate 'line', 2650
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1779_else4140 
    null $P5007
    set $P5009, $P5007
    goto if1779_end4141
  if1779_else4140:
.annotate 'line', 2652
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1779_end4141:
    $P5004."push"($P5009)
.annotate 'line', 2653
    find_lex $P5010, "$definednesses"
    set fb_tmp_203, _lex_param_0
    repr_defined $I5010, fb_tmp_203
    unless $I5010 goto if1781_else4144 
    set $P5011, fb_tmp_203["definedness"]
    set $P5013, $P5011
    goto if1781_end4145
  if1781_else4144:
    null $P5012
    set $P5013, $P5012
  if1781_end4145:
    unless_null $P5013, vivi_17824146
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_17824146:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1780_else4142 
    set $I5014, 1
    goto if1780_end4143
  if1780_else4142:
    set fb_tmp_204, _lex_param_0
    repr_defined $I5012, fb_tmp_204
    unless $I5012 goto if1784_else4149 
    set $P5015, fb_tmp_204["definedness"]
    set $P5017, $P5015
    goto if1784_end4150
  if1784_else4149:
    null $P5016
    set $P5017, $P5016
  if1784_end4150:
    unless_null $P5017, vivi_17854151
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_17854151:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1783_else4147 
    set $I5013, 2
    goto if1783_end4148
  if1783_else4147:
    set $I5013, 0
  if1783_end4148:
    set $I5014, $I5013
  if1780_end4143:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1776_end4135:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_445_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2660
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2661
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_451_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3180
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_448_1381944288.90674' 
    capture_lex $P5037 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_206 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4160
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1789_end4163 
.annotate 'line', 3182
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1789_end4163:
.annotate 'line', 3186
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3187
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 84
.annotate 'line', 3189
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1790_else4164 
.annotate 'line', 3194
.annotate 'line', 3195
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3197
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3199
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3201
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3203
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3205
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4166
    nqp_get_sc_object $P5020, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5019, $P5020
    set fb_tmp_206, $P5019
    repr_defined $I5003, fb_tmp_206
    unless $I5003 goto if1791_else4167 
    set $P5021, fb_tmp_206["$GLOBALish"]
    set $P5023, $P5021
    goto if1791_end4168
  if1791_else4167:
    null $P5022
    set $P5023, $P5022
  if1791_end4168:
    unless_null $P5023, vivi_17924169
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_17924169:
    unless_null $P5023, vivi_17934170
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_17934170:
    set $P5018, $P5023
  fallback4166:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3207
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3209
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1790_end4165
  if1790_else4164:
    .const 'Sub' $P5034 = 'cuid_448_1381944288.90674' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1790_end4165:
    $P5036 = "RETURN"($P102)
    goto lexotic_4161
  lexotic_4160:
    .get_results ($P5036)
  lexotic_4161:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1381944288.90674") :anon :lex :outer("cuid_451_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3215
    .const 'Sub' $P5053 = 'cuid_447_1381944288.90674' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_449_1381944288.90674' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_450_1381944288.90674' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 3217
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4173
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_207, $P5004
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if1795_else4174 
    set $P5006, fb_tmp_207["$W"]
    set $P5008, $P5006
    goto if1795_end4175
  if1795_else4174:
    null $P5007
    set $P5008, $P5007
  if1795_end4175:
    unless_null $P5008, vivi_17964176
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_17964176:
    unless_null $P5008, vivi_17974177
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17974177:
    set $P5003, $P5008
  fallback4173:
    find_lex $P5011, "@name"
    set fb_tmp_208, $P5011
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if1798_else4178 
    set $P5012, fb_tmp_208[0]
    set $P5014, $P5012
    goto if1798_end4179
  if1798_else4178:
    null $P5013
    set $P5014, $P5013
  if1798_end4179:
    unless_null $P5014, vivi_17994180
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_17994180:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1794_else4171 
    .const 'Sub' $P5017 = 'cuid_447_1381944288.90674' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1794_end4172
  if1794_else4171:
.annotate 'line', 3226
.annotate 'line', 3227
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4188
    nqp_get_sc_object $P5022, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5021, $P5022
    set fb_tmp_210, $P5021
    repr_defined $I5003, fb_tmp_210
    unless $I5003 goto if1805_else4189 
    set $P5023, fb_tmp_210["$GLOBALish"]
    set $P5025, $P5023
    goto if1805_end4190
  if1805_else4189:
    null $P5024
    set $P5025, $P5024
  if1805_end4190:
    unless_null $P5025, vivi_18064191
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_18064191:
    unless_null $P5025, vivi_18074192
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_18074192:
    set $P5020, $P5025
  fallback4188:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1794_end4172:
    find_lex $P5029, "@name"
    set fb_tmp_211, $P5029
    repr_defined $I5005, fb_tmp_211
    unless $I5005 goto if1809_else4195 
    set $P5030, fb_tmp_211[0]
    set $P5032, $P5030
    goto if1809_end4196
  if1809_else4195:
    null $P5031
    set $P5032, $P5031
  if1809_end4196:
    unless_null $P5032, vivi_18104197
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5032, $P5033
  vivi_18104197:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1808_end4194 
.annotate 'line', 3229
.annotate 'line', 3230
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1808_end4194:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4198:
    unless $P5038, for_done4200
    shift $P5041, $P5038
  for_redo4199:
    .const 'Sub' $P5040 = 'cuid_449_1381944288.90674' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4198
  for_done4200:
.annotate 'line', 3256
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1812_end4204 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1812_end4204:
    unless $I5008 goto if1811_else4201 
    .const 'Sub' $P5047 = 'cuid_450_1381944288.90674' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1811_end4202
  if1811_else4201:
.annotate 'line', 3271
.annotate 'line', 3272
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1811_end4202:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1381944288.90674") :anon :lex :outer("cuid_448_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3218
    .const 'Sub' $P5019 = 'cuid_446_1381944288.90674' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_209 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_18044187
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3219
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3220
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4181
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5006, $P5007
    set fb_tmp_209, $P5006
    repr_defined $I5001, fb_tmp_209
    unless $I5001 goto if1800_else4182 
    set $P5008, fb_tmp_209["$W"]
    set $P5010, $P5008
    goto if1800_end4183
  if1800_else4182:
    null $P5009
    set $P5010, $P5009
  if1800_end4183:
    unless_null $P5010, vivi_18014184
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_18014184:
    unless_null $P5010, vivi_18024185
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_18024185:
    set $P5005, $P5010
  fallback4181:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_18034186
  catch_handler_18044187:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_446_1381944288.90674' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_18034186
  skip_handler_18034186:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1381944288.90674") :anon :lex :outer("cuid_447_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3221
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3222
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1381944288.90674") :anon :lex :outer("cuid_448_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3232
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3233
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3234
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 3235
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3237
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3240
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3242
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3244
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3245
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3247
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3249
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3250
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3252
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
.annotate 'line', 3254
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    find_lex $P5031, "$path"
    $P5032 = $P5030."new"($P5031, $P101, "locallifetime" :named("op"))
    store_lex "$path", $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_450_1381944288.90674") :anon :lex :outer("cuid_448_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3258
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3259
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3260
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3262
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_212, $P5008
    repr_defined $I5001, fb_tmp_212
    unless $I5001 goto if1813_else4205 
    set $P5009, fb_tmp_212[0]
    set $P5011, $P5009
    goto if1813_end4206
  if1813_else4205:
    null $P5010
    set $P5011, $P5010
  if1813_end4206:
    unless_null $P5011, vivi_18144207
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_18144207:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3264
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3266
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_213, $P5018
    repr_defined $I5002, fb_tmp_213
    unless $I5002 goto if1815_else4208 
    set $P5019, fb_tmp_213[1]
    set $P5021, $P5019
    goto if1815_end4209
  if1815_else4208:
    null $P5020
    set $P5021, $P5020
  if1815_end4209:
    unless_null $P5021, vivi_18164210
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_18164210:
.annotate 'line', 3268
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_239_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1635
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_214 
    unless_null _lex_param_1, fallback4213
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4213:
    set fb_tmp_214, _lex_param_1
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if1817_else4211 
    set $P5002, fb_tmp_214["comp_unit"]
    set $P5004, $P5002
    goto if1817_end4212
  if1817_else4211:
    null $P5003
    set $P5004, $P5003
  if1817_end4212:
    unless_null $P5004, vivi_18184214
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_18184214:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_240_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1637
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
.annotate 'line', 1638
    unless_null _lex_param_1, fallback4219
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4219:
    set fb_tmp_215, _lex_param_1
    repr_defined $I5001, fb_tmp_215
    unless $I5001 goto if1820_else4217 
    set $P5002, fb_tmp_215["colonpair"]
    set $P5004, $P5002
    goto if1820_end4218
  if1820_else4217:
    null $P5003
    set $P5004, $P5003
  if1820_end4218:
    unless_null $P5004, vivi_18214220
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_18214220:
    unless $P5004 goto if1819_else4215 
    unless_null _lex_param_1, fallback4223
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback4223:
    set fb_tmp_216, _lex_param_1
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if1822_else4221 
    set $P5007, fb_tmp_216["identifier"]
    set $P5009, $P5007
    goto if1822_end4222
  if1822_else4221:
    null $P5008
    set $P5009, $P5008
  if1822_end4222:
    unless_null $P5009, vivi_18234224
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_18234224:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1639
    unless_null _lex_param_1, fallback4227
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5011
  fallback4227:
    set fb_tmp_217, _lex_param_1
    repr_defined $I5003, fb_tmp_217
    unless $I5003 goto if1824_else4225 
    set $P5012, fb_tmp_217["colonpair"]
    set $P5014, $P5012
    goto if1824_end4226
  if1824_else4225:
    null $P5013
    set $P5014, $P5013
  if1824_end4226:
    unless_null $P5014, vivi_18254228
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_18254228:
    $P5016 = $P5014."ast"()
    $P5017 = $P5016."named"()
    set $S5007, $P5017
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1640
    unless_null _lex_param_1, fallback4231
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5018
  fallback4231:
    set fb_tmp_218, _lex_param_1
    repr_defined $I5004, fb_tmp_218
    unless $I5004 goto if1826_else4229 
    set $P5019, fb_tmp_218["colonpair"]
    set $P5021, $P5019
    goto if1826_end4230
  if1826_else4229:
    null $P5020
    set $P5021, $P5020
  if1826_end4230:
    unless_null $P5021, vivi_18274232
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_18274232:
    $P5023 = $P5021."ast"()
    $P5024 = "&colonpair_str"($P5023)
    set $S5008, $P5024
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1819_end4216
  if1819_else4215:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1819_end4216:
    $P5025 = _lex_param_1."!make"($S5010)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_241_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1654
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 1655
    unless_null _lex_param_1, fallback4235
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5004
  fallback4235:
    set fb_tmp_219, _lex_param_1
    repr_defined $I5001, fb_tmp_219
    unless $I5001 goto if1828_else4233 
    set $P5005, fb_tmp_219["statementlist"]
    set $P5007, $P5005
    goto if1828_end4234
  if1828_else4233:
    null $P5006
    set $P5007, $P5006
  if1828_end4234:
    unless_null $P5007, vivi_18294236
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_18294236:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1656
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4237
    nqp_get_sc_object $P5012, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5011, $P5012
    set fb_tmp_220, $P5011
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if1830_else4238 
    set $P5013, fb_tmp_220["$W"]
    set $P5015, $P5013
    goto if1830_end4239
  if1830_else4238:
    null $P5014
    set $P5015, $P5014
  if1830_end4239:
    unless_null $P5015, vivi_18314240
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_18314240:
    unless_null $P5015, vivi_18324241
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18324241:
    set $P5010, $P5015
  fallback4237:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4244
    nqp_get_sc_object $P5021, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5020, $P5021
    set fb_tmp_221, $P5020
    repr_defined $I5003, fb_tmp_221
    unless $I5003 goto if1834_else4245 
    set $P5022, fb_tmp_221["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1834_end4246
  if1834_else4245:
    null $P5023
    set $P5024, $P5023
  if1834_end4246:
    unless_null $P5024, vivi_18354247
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_18354247:
    unless_null $P5024, vivi_18364248
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18364248:
    set $P5019, $P5024
  fallback4244:
    if $P5019 goto unless1833_end4243 
.annotate 'line', 1661
.annotate 'line', 1662
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1833_end4243:
.annotate 'line', 1669
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4251
    nqp_get_sc_object $P5034, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5033, $P5034
    set fb_tmp_222, $P5033
    repr_defined $I5004, fb_tmp_222
    unless $I5004 goto if1838_else4252 
    set $P5035, fb_tmp_222["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1838_end4253
  if1838_else4252:
    null $P5036
    set $P5037, $P5036
  if1838_end4253:
    unless_null $P5037, vivi_18394254
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_18394254:
    unless_null $P5037, vivi_18404255
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18404255:
    set $P5032, $P5037
  fallback4251:
    unless $P5032 goto if1837_end4250 
.annotate 'line', 1670
.annotate 'line', 1671
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1673
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1674
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1675
    find_dynamic_lex $P5044, "$*MAIN_SUB"
    unless_null $P5044, fallback4256
    nqp_get_sc_object $P5046, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5045, $P5046
    set fb_tmp_223, $P5045
    repr_defined $I5005, fb_tmp_223
    unless $I5005 goto if1841_else4257 
    set $P5047, fb_tmp_223["$MAIN_SUB"]
    set $P5049, $P5047
    goto if1841_end4258
  if1841_else4257:
    null $P5048
    set $P5049, $P5048
  if1841_end4258:
    unless_null $P5049, vivi_18424259
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_18424259:
    unless_null $P5049, vivi_18434260
    die "Contextual $*MAIN_SUB not found"
    box $P5051, "Contextual $*MAIN_SUB not found"
    set $P5049, $P5051
  vivi_18434260:
    set $P5044, $P5049
  fallback4256:
    $P5052 = $P5044."name"()
    set $S5002, $P5052
    concat $S5001, "&", $S5002
.annotate 'line', 1676
    nqp_get_sc_object $P5053, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5054 = $P5053."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5055 = $P5043."new"($P5054, "call" :named("op"), $S5001 :named("name"))
    $P5056 = $P5040."new"($P5042, $P5055, "if" :named("op"))
    $P5057 = $P101."push"($P5056)
  if1837_end4250:
.annotate 'line', 1682
    $P102."push"($P101)
.annotate 'line', 1685
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4261
    nqp_get_sc_object $P5060, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5059, $P5060
    set fb_tmp_224, $P5059
    repr_defined $I5006, fb_tmp_224
    unless $I5006 goto if1844_else4262 
    set $P5061, fb_tmp_224["$W"]
    set $P5063, $P5061
    goto if1844_end4263
  if1844_else4262:
    null $P5062
    set $P5063, $P5062
  if1844_end4263:
    unless_null $P5063, vivi_18454264
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5063, $P5064
  vivi_18454264:
    unless_null $P5063, vivi_18464265
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_18464265:
    set $P5058, $P5063
  fallback4261:
    $P5066 = $P5058."libs"()
    $P102."push"($P5066)
.annotate 'line', 1688
    nqp_get_sc_object $P5067, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 120
.annotate 'line', 1692
    find_dynamic_lex $P5068, "$*W"
    unless_null $P5068, fallback4266
    nqp_get_sc_object $P5070, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5069, $P5070
    set fb_tmp_225, $P5069
    repr_defined $I5007, fb_tmp_225
    unless $I5007 goto if1847_else4267 
    set $P5071, fb_tmp_225["$W"]
    set $P5073, $P5071
    goto if1847_end4268
  if1847_else4267:
    null $P5072
    set $P5073, $P5072
  if1847_end4268:
    unless_null $P5073, vivi_18484269
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5073, $P5074
  vivi_18484269:
    unless_null $P5073, vivi_18494270
    die "Contextual $*W not found"
    box $P5075, "Contextual $*W not found"
    set $P5073, $P5075
  vivi_18494270:
    set $P5068, $P5073
  fallback4266:
    $P5076 = $P5068."sc"()
.annotate 'line', 1693
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback4271
    nqp_get_sc_object $P5079, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5078, $P5079
    set fb_tmp_226, $P5078
    repr_defined $I5008, fb_tmp_226
    unless $I5008 goto if1850_else4272 
    set $P5080, fb_tmp_226["$W"]
    set $P5082, $P5080
    goto if1850_end4273
  if1850_else4272:
    null $P5081
    set $P5082, $P5081
  if1850_end4273:
    unless_null $P5082, vivi_18514274
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_18514274:
    unless_null $P5082, vivi_18524275
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_18524275:
    set $P5077, $P5082
  fallback4271:
    $P5085 = $P5077."code_ref_blocks"()
.annotate 'line', 1694
    find_dynamic_lex $P5086, "$*W"
    unless_null $P5086, fallback4276
    nqp_get_sc_object $P5088, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5087, $P5088
    set fb_tmp_227, $P5087
    repr_defined $I5009, fb_tmp_227
    unless $I5009 goto if1853_else4277 
    set $P5089, fb_tmp_227["$W"]
    set $P5091, $P5089
    goto if1853_end4278
  if1853_else4277:
    null $P5090
    set $P5091, $P5090
  if1853_end4278:
    unless_null $P5091, vivi_18544279
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5091, $P5092
  vivi_18544279:
    unless_null $P5091, vivi_18554280
    die "Contextual $*W not found"
    box $P5093, "Contextual $*W not found"
    set $P5091, $P5093
  vivi_18554280:
    set $P5086, $P5091
  fallback4276:
    $P5094 = $P5086."is_precompilation_mode"()
.annotate 'line', 1695
    find_dynamic_lex $P5095, "$*W"
    unless_null $P5095, fallback4281
    nqp_get_sc_object $P5097, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5096, $P5097
    set fb_tmp_228, $P5096
    repr_defined $I5010, fb_tmp_228
    unless $I5010 goto if1856_else4282 
    set $P5098, fb_tmp_228["$W"]
    set $P5100, $P5098
    goto if1856_end4283
  if1856_else4282:
    null $P5099
    set $P5100, $P5099
  if1856_end4283:
    unless_null $P5100, vivi_18574284
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5100, $P5101
  vivi_18574284:
    unless_null $P5100, vivi_18584285
    die "Contextual $*W not found"
    box $P5102, "Contextual $*W not found"
    set $P5100, $P5102
  vivi_18584285:
    set $P5095, $P5100
  fallback4281:
    $P5103 = $P5095."load_dependency_tasks"()
.annotate 'line', 1696
    find_dynamic_lex $P5104, "$*W"
    unless_null $P5104, fallback4286
    nqp_get_sc_object $P5106, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5105, $P5106
    set fb_tmp_229, $P5105
    repr_defined $I5011, fb_tmp_229
    unless $I5011 goto if1859_else4287 
    set $P5107, fb_tmp_229["$W"]
    set $P5109, $P5107
    goto if1859_end4288
  if1859_else4287:
    null $P5108
    set $P5109, $P5108
  if1859_end4288:
    unless_null $P5109, vivi_18604289
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5109, $P5110
  vivi_18604289:
    unless_null $P5109, vivi_18614290
    die "Contextual $*W not found"
    box $P5111, "Contextual $*W not found"
    set $P5109, $P5111
  vivi_18614290:
    set $P5104, $P5109
  fallback4286:
    $P5112 = $P5104."fixup_tasks"()
.annotate 'line', 1701
    nqp_get_sc_object $P5113, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1703
    nqp_get_sc_object $P5114, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    $P5115 = $P5114."new"($P102 :named("value"))
    $P5116 = $P5113."new"($P5115, "call" :named("op"))
.annotate 'line', 1708
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 1709
    nqp_get_sc_object $P5118, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1711
    nqp_get_sc_object $P5119, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 60
    $P5120 = $P5119."new"($P102 :named("value"))
.annotate 'line', 1712
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5122 = $P5121."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5123 = $P5118."new"($P5120, $P5122, "call" :named("op"))
    $P5124 = $P5117."new"($P5123)
    $P5125 = $P5067."new"($P102, "nqp" :named("hll"), $P5076 :named("sc"), $P5085 :named("code_ref_blocks"), $P5094 :named("compilation_mode"), $P5103 :named("pre_deserialize"), $P5112 :named("post_deserialize"), $P5116 :named("load"), $P5124 :named("main"))
    set $P103, $P5125
.annotate 'line', 1721
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback4291
    nqp_get_sc_object $P5128, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5127, $P5128
    set fb_tmp_230, $P5127
    repr_defined $I5012, fb_tmp_230
    unless $I5012 goto if1862_else4292 
    set $P5129, fb_tmp_230["$W"]
    set $P5131, $P5129
    goto if1862_end4293
  if1862_else4292:
    null $P5130
    set $P5131, $P5130
  if1862_end4293:
    unless_null $P5131, vivi_18634294
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5131, $P5132
  vivi_18634294:
    unless_null $P5131, vivi_18644295
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_18644295:
    set $P5126, $P5131
  fallback4291:
    $P5126."cleanup"()
.annotate 'line', 1723
    $P5134 = _lex_param_1."!make"($P103)
    .return ($P5134) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_242_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1726
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_452_1381944288.90674' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1727
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4300
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5004
  fallback4300:
    set fb_tmp_231, _lex_param_1
    repr_defined $I5001, fb_tmp_231
    unless $I5001 goto if1866_else4298 
    set $P5005, fb_tmp_231["statement"]
    set $P5007, $P5005
    goto if1866_end4299
  if1866_else4298:
    null $P5006
    set $P5007, $P5006
  if1866_end4299:
    unless_null $P5007, vivi_18674301
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_18674301:
    unless $P5007 goto if1865_else4296 
.annotate 'line', 1728
    unless_null _lex_param_1, fallback4304
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback4304:
    set fb_tmp_232, _lex_param_1
    repr_defined $I5002, fb_tmp_232
    unless $I5002 goto if1868_else4302 
    set $P5013, fb_tmp_232["statement"]
    set $P5015, $P5013
    goto if1868_end4303
  if1868_else4302:
    null $P5014
    set $P5015, $P5014
  if1868_end4303:
    unless_null $P5015, vivi_18694305
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_18694305:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4324:
    unless $P5011, for_done4326
    shift $P5018, $P5011
  for_redo4325:
    .const 'Sub' $P5017 = 'cuid_452_1381944288.90674' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4324
  for_done4326:
    goto if1865_end4297
  if1865_else4296:
.annotate 'line', 1737
.annotate 'line', 1738
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1865_end4297:
.annotate 'line', 1740
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1381944288.90674") :anon :lex :outer("cuid_242_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1729
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1730
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_233, $P101
    repr_defined $I5002, fb_tmp_233
    unless $I5002 goto if1871_else4308 
    set $P5003, fb_tmp_233["sink"]
    set $P5005, $P5003
    goto if1871_end4309
  if1871_else4308:
    null $P5004
    set $P5005, $P5004
  if1871_end4309:
    unless_null $P5005, vivi_18724310
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_18724310:
    defined $I5001, $P5005
    unless $I5001 goto if1870_end4307 
    set fb_tmp_234, $P101
    repr_defined $I5003, fb_tmp_234
    unless $I5003 goto if1873_else4311 
    set $P5007, fb_tmp_234["sink"]
    set $P5009, $P5007
    goto if1873_end4312
  if1873_else4311:
    null $P5008
    set $P5009, $P5008
  if1873_end4312:
    unless_null $P5009, vivi_18744313
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_18744313:
    set $P101, $P5009
  if1870_end4307:
    set fb_tmp_235, $P101
    repr_defined $I5004, fb_tmp_235
    unless $I5004 goto if1876_else4316 
    set $P5011, fb_tmp_235["bareblock"]
    set $P5013, $P5011
    goto if1876_end4317
  if1876_else4316:
    null $P5012
    set $P5013, $P5012
  if1876_end4317:
    unless_null $P5013, vivi_18774318
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_18774318:
    unless $P5013 goto if1875_end4315 
.annotate 'line', 1732
    set fb_tmp_236, $P101
    repr_defined $I5005, fb_tmp_236
    unless $I5005 goto if1878_else4319 
    set $P5015, fb_tmp_236[0]
    set $P5017, $P5015
    goto if1878_end4320
  if1878_else4319:
    null $P5016
    set $P5017, $P5016
  if1878_end4320:
    unless_null $P5017, vivi_18794321
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_18794321:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1875_end4315:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1880_end4323 
.annotate 'line', 1733
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1880_end4323:
.annotate 'line', 1734
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_243_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1743
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_453_1381944288.90674' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_249 
    if haz_param_5, default4382
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_2, $P5023
  default4382:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4331
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4331:
    set fb_tmp_237, _lex_param_1
    repr_defined $I5001, fb_tmp_237
    unless $I5001 goto if1882_else4329 
    set $P5003, fb_tmp_237["EXPR"]
    set $P5005, $P5003
    goto if1882_end4330
  if1882_else4329:
    null $P5004
    set $P5005, $P5004
  if1882_end4330:
    unless_null $P5005, vivi_18834332
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_18834332:
    unless $P5005 goto if1881_else4327 
    .const 'Sub' $P5007 = 'cuid_453_1381944288.90674' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1881_end4328
  if1881_else4327:
    unless_null _lex_param_1, fallback4376
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5009
  fallback4376:
    set fb_tmp_248, _lex_param_1
    repr_defined $I5002, fb_tmp_248
    unless $I5002 goto if1908_else4374 
    set $P5010, fb_tmp_248["statement_control"]
    set $P5012, $P5010
    goto if1908_end4375
  if1908_else4374:
    null $P5011
    set $P5012, $P5011
  if1908_end4375:
    unless_null $P5012, vivi_19094377
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_19094377:
    unless $P5012 goto if1907_else4372 
.annotate 'line', 1766
    unless_null _lex_param_1, fallback4380
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5014
  fallback4380:
    set fb_tmp_249, _lex_param_1
    repr_defined $I5003, fb_tmp_249
    unless $I5003 goto if1910_else4378 
    set $P5015, fb_tmp_249["statement_control"]
    set $P5017, $P5015
    goto if1910_end4379
  if1910_else4378:
    null $P5016
    set $P5017, $P5016
  if1910_end4379:
    unless_null $P5017, vivi_19114381
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_19114381:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1907_end4373
  if1907_else4372:
.annotate 'line', 1767
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1907_end4373:
  if1881_end4328:
.annotate 'line', 1768
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1381944288.90674") :anon :lex :outer("cuid_243_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1745
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4335
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  fallback4335:
    set fb_tmp_238, $P5003
    repr_defined $I5001, fb_tmp_238
    unless $I5001 goto if1884_else4333 
    set $P5005, fb_tmp_238["statement_mod_cond"]
    set $P5007, $P5005
    goto if1884_end4334
  if1884_else4333:
    null $P5006
    set $P5007, $P5006
  if1884_end4334:
    unless_null $P5007, vivi_18854336
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_18854336:
    set $P101, $P5007
    find_lex $P5009, "$/"
    unless_null $P5009, fallback4339
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  fallback4339:
    set fb_tmp_239, $P5009
    repr_defined $I5002, fb_tmp_239
    unless $I5002 goto if1886_else4337 
    set $P5011, fb_tmp_239["statement_mod_loop"]
    set $P5013, $P5011
    goto if1886_end4338
  if1886_else4337:
    null $P5012
    set $P5013, $P5012
  if1886_end4338:
    unless_null $P5013, vivi_18874340
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_18874340:
    set $P102, $P5013
.annotate 'line', 1748
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4343
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  fallback4343:
    set fb_tmp_240, $P5015
    repr_defined $I5003, fb_tmp_240
    unless $I5003 goto if1888_else4341 
    set $P5017, fb_tmp_240["EXPR"]
    set $P5019, $P5017
    goto if1888_end4342
  if1888_else4341:
    null $P5018
    set $P5019, $P5018
  if1888_end4342:
    unless_null $P5019, vivi_18894344
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_18894344:
    $P5021 = $P5019."ast"()
    store_lex "$past", $P5021
    unless $P101 goto if1890_end4346 
.annotate 'line', 1749
.annotate 'line', 1750
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    set fb_tmp_241, $P101
    repr_defined $I5004, fb_tmp_241
    unless $I5004 goto if1891_else4347 
    set $P5023, fb_tmp_241["cond"]
    set $P5025, $P5023
    goto if1891_end4348
  if1891_else4347:
    null $P5024
    set $P5025, $P5024
  if1891_end4348:
    unless_null $P5025, vivi_18924349
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_18924349:
    $P5027 = $P5025."ast"()
    find_lex $P5028, "$past"
    set fb_tmp_242, $P101
    repr_defined $I5005, fb_tmp_242
    unless $I5005 goto if1893_else4350 
    set $P5029, fb_tmp_242["sym"]
    set $P5031, $P5029
    goto if1893_end4351
  if1893_else4350:
    null $P5030
    set $P5031, $P5030
  if1893_end4351:
    unless_null $P5031, vivi_18944352
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_18944352:
    set $S5001, $P5031
    find_lex $P5033, "$/"
    $P5034 = $P5022."new"($P5027, $P5028, $S5001 :named("op"), $P5033 :named("node"))
    store_lex "$past", $P5034
  if1890_end4346:
    set $P5073, $P102
    unless $P102 goto if1895_end4354 
.annotate 'line', 1752
    set fb_tmp_243, $P102
    repr_defined $I5007, fb_tmp_243
    unless $I5007 goto if1897_else4357 
    set $P5035, fb_tmp_243["sym"]
    set $P5037, $P5035
    goto if1897_end4358
  if1897_else4357:
    null $P5036
    set $P5037, $P5036
  if1897_end4358:
    unless_null $P5037, vivi_18984359
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_18984359:
    set $S5002, $P5037
    iseq $I5006, $S5002, "for"
    unless $I5006 goto if1896_else4355 
.annotate 'line', 1753
.annotate 'line', 1754
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 108
.annotate 'line', 1755
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5041 = $P5040."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5042, "$past"
    $P5043 = $P5039."new"($P5041, $P5042, "immediate" :named("blocktype"))
    store_lex "$past", $P5043
.annotate 'line', 1757
    find_lex $P5044, "$past"
    $P5044."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1758
    find_lex $P5045, "$past"
    $P5045."arity"(1)
.annotate 'line', 1759
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    set fb_tmp_244, $P102
    repr_defined $I5008, fb_tmp_244
    unless $I5008 goto if1899_else4360 
    set $P5047, fb_tmp_244["cond"]
    set $P5049, $P5047
    goto if1899_end4361
  if1899_else4360:
    null $P5048
    set $P5049, $P5048
  if1899_end4361:
    unless_null $P5049, vivi_19004362
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_19004362:
    $P5051 = $P5049."ast"()
    find_lex $P5052, "$past"
    set fb_tmp_245, $P102
    repr_defined $I5009, fb_tmp_245
    unless $I5009 goto if1901_else4363 
    set $P5053, fb_tmp_245["sym"]
    set $P5055, $P5053
    goto if1901_end4364
  if1901_else4363:
    null $P5054
    set $P5055, $P5054
  if1901_end4364:
    unless_null $P5055, vivi_19024365
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5055, $P5056
  vivi_19024365:
    set $S5003, $P5055
    find_lex $P5057, "$/"
    $P5058 = $P5046."new"($P5051, $P5052, $S5003 :named("op"), $P5057 :named("node"))
    store_lex "$past", $P5058
    set $P5072, $P5058
    goto if1896_end4356
  if1896_else4355:
.annotate 'line', 1761
.annotate 'line', 1762
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    set fb_tmp_246, $P102
    repr_defined $I5010, fb_tmp_246
    unless $I5010 goto if1903_else4366 
    set $P5060, fb_tmp_246["cond"]
    set $P5062, $P5060
    goto if1903_end4367
  if1903_else4366:
    null $P5061
    set $P5062, $P5061
  if1903_end4367:
    unless_null $P5062, vivi_19044368
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5062, $P5063
  vivi_19044368:
    $P5064 = $P5062."ast"()
    find_lex $P5065, "$past"
    set fb_tmp_247, $P102
    repr_defined $I5011, fb_tmp_247
    unless $I5011 goto if1905_else4369 
    set $P5066, fb_tmp_247["sym"]
    set $P5068, $P5066
    goto if1905_end4370
  if1905_else4369:
    null $P5067
    set $P5068, $P5067
  if1905_end4370:
    unless_null $P5068, vivi_19064371
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5068, $P5069
  vivi_19064371:
    set $S5004, $P5068
    find_lex $P5070, "$/"
    $P5071 = $P5059."new"($P5064, $P5065, $S5004 :named("op"), $P5070 :named("node"))
    store_lex "$past", $P5071
    set $P5072, $P5071
  if1896_end4356:
    set $P5073, $P5072
  if1895_end4354:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_244_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1771
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
.annotate 'line', 1772
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    unless_null _lex_param_1, fallback4385
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4385:
    set fb_tmp_250, _lex_param_1
    repr_defined $I5001, fb_tmp_250
    unless $I5001 goto if1912_else4383 
    set $P5003, fb_tmp_250["EXPR"]
    set $P5005, $P5003
    goto if1912_end4384
  if1912_else4383:
    null $P5004
    set $P5005, $P5004
  if1912_end4384:
    unless_null $P5005, vivi_19134386
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_19134386:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4389
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback4389:
    set fb_tmp_251, _lex_param_1
    repr_defined $I5002, fb_tmp_251
    unless $I5002 goto if1914_else4387 
    set $P5009, fb_tmp_251["pblock"]
    set $P5011, $P5009
    goto if1914_end4388
  if1914_else4387:
    null $P5010
    set $P5011, $P5010
  if1914_end4388:
    unless_null $P5011, vivi_19154390
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_19154390:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_245_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1775
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_252 
.annotate 'line', 1776
    unless_null _lex_param_1, fallback4393
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4393:
    set fb_tmp_252, _lex_param_1
    repr_defined $I5001, fb_tmp_252
    unless $I5001 goto if1916_else4391 
    set $P5002, fb_tmp_252["blockoid"]
    set $P5004, $P5002
    goto if1916_end4392
  if1916_else4391:
    null $P5003
    set $P5004, $P5003
  if1916_end4392:
    unless_null $P5004, vivi_19174394
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_19174394:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_246_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1779
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_253 
.annotate 'line', 1780
    unless_null _lex_param_1, fallback4397
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4397:
    set fb_tmp_253, _lex_param_1
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if1918_else4395 
    set $P5002, fb_tmp_253["blockoid"]
    set $P5004, $P5002
    goto if1918_end4396
  if1918_else4395:
    null $P5003
    set $P5004, $P5003
  if1918_end4396:
    unless_null $P5004, vivi_19194398
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_19194398:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_247_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1783
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_455_1381944288.90674' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1784
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4399
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_254, $P5003
    repr_defined $I5001, fb_tmp_254
    unless $I5001 goto if1920_else4400 
    set $P5005, fb_tmp_254["$W"]
    set $P5007, $P5005
    goto if1920_end4401
  if1920_else4400:
    null $P5006
    set $P5007, $P5006
  if1920_end4401:
    unless_null $P5007, vivi_19214402
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_19214402:
    unless_null $P5007, vivi_19224403
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19224403:
    set $P5002, $P5007
  fallback4399:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4408
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5011
  fallback4408:
    set fb_tmp_255, _lex_param_1
    repr_defined $I5002, fb_tmp_255
    unless $I5002 goto if1924_else4406 
    set $P5012, fb_tmp_255["statementlist"]
    set $P5014, $P5012
    goto if1924_end4407
  if1924_else4406:
    null $P5013
    set $P5014, $P5013
  if1924_end4407:
    unless_null $P5014, vivi_19254409
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_19254409:
    unless $P5014 goto if1923_else4404 
    .const 'Sub' $P5016 = 'cuid_455_1381944288.90674' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1923_end4405
  if1923_else4404:
.annotate 'line', 1799
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4443
    nqp_get_sc_object $P5020, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5019, $P5020
    set fb_tmp_261, $P5019
    repr_defined $I5003, fb_tmp_261
    unless $I5003 goto if1943_else4444 
    set $P5021, fb_tmp_261["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1943_end4445
  if1943_else4444:
    null $P5022
    set $P5023, $P5022
  if1943_end4445:
    unless_null $P5023, vivi_19444446
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_19444446:
    unless_null $P5023, vivi_19454447
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19454447:
    set $P5018, $P5023
  fallback4443:
    unless $P5018 goto if1942_end4442 
.annotate 'line', 1800
.annotate 'line', 1801
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1942_end4442:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1804
    unless_null _lex_param_1, fallback4450
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5029
  fallback4450:
    set fb_tmp_262, _lex_param_1
    repr_defined $I5004, fb_tmp_262
    unless $I5004 goto if1946_else4448 
    set $P5030, fb_tmp_262["you_are_here"]
    set $P5032, $P5030
    goto if1946_end4449
  if1946_else4448:
    null $P5031
    set $P5032, $P5031
  if1946_end4449:
    unless_null $P5032, vivi_19474451
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5032, $P5033
  vivi_19474451:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1923_end4405:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1381944288.90674") :anon :lex :outer("cuid_247_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1785
    .const 'Sub' $P5055 = 'cuid_454_1381944288.90674' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_258 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_259 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_260 
    .local pmc pkg_viv_tmp_35 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1786
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4412
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback4412:
    set fb_tmp_256, $P5002
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if1926_else4410 
    set $P5004, fb_tmp_256["statementlist"]
    set $P5006, $P5004
    goto if1926_end4411
  if1926_else4410:
    null $P5005
    set $P5006, $P5005
  if1926_end4411:
    unless_null $P5006, vivi_19274413
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_19274413:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4416
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_33, $P5010
    set fb_tmp_257, pkg_viv_tmp_33
    repr_defined $I5002, fb_tmp_257
    unless $I5002 goto if1929_else4417 
    set $P5012, fb_tmp_257["%HANDLERS"]
    set $P5014, $P5012
    goto if1929_end4418
  if1929_else4417:
    null $P5013
    set $P5014, $P5013
  if1929_end4418:
    unless_null $P5014, vivi_19304419
    new $P5015, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19304419:
    unless_null $P5014, vivi_19314420
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19314420:
    set $P5009, $P5014
  fallback4416:
    unless $P5009 goto if1928_end4415 
.annotate 'line', 1787
.annotate 'line', 1788
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4421
    nqp_get_sc_object $P5024, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_34, $P5023
    set fb_tmp_258, pkg_viv_tmp_34
    repr_defined $I5003, fb_tmp_258
    unless $I5003 goto if1932_else4422 
    set $P5025, fb_tmp_258["%HANDLERS"]
    set $P5027, $P5025
    goto if1932_end4423
  if1932_else4422:
    null $P5026
    set $P5027, $P5026
  if1932_end4423:
    unless_null $P5027, vivi_19334424
    new $P5028, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19334424:
    unless_null $P5027, vivi_19344425
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19344425:
    set $P5022, $P5027
  fallback4421:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4426:
    unless $P5021, for_done4428
    shift $P5031, $P5021
  for_redo4427:
    .const 'Sub' $P5030 = 'cuid_454_1381944288.90674' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4426
  for_done4428:
  if1928_end4415:
.annotate 'line', 1794
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1795
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4431
    nqp_get_sc_object $P5037, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_36, $P5036
    set fb_tmp_259, pkg_viv_tmp_36
    repr_defined $I5004, fb_tmp_259
    unless $I5004 goto if1936_else4432 
    set $P5038, fb_tmp_259["%HANDLERS"]
    set $P5040, $P5038
    goto if1936_end4433
  if1936_else4432:
    null $P5039
    set $P5040, $P5039
  if1936_end4433:
    unless_null $P5040, vivi_19374434
    new $P5041, 'Hash'
    set pkg_viv_tmp_36["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19374434:
    unless_null $P5040, vivi_19384435
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19384435:
    set $P5035, $P5040
  fallback4431:
    unless $P5035 goto if1935_end4430 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4436
    nqp_get_sc_object $P5046, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_35, $P5045
    set fb_tmp_260, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_260
    unless $I5005 goto if1939_else4437 
    set $P5047, fb_tmp_260["%HANDLERS"]
    set $P5049, $P5047
    goto if1939_end4438
  if1939_else4437:
    null $P5048
    set $P5049, $P5048
  if1939_end4438:
    unless_null $P5049, vivi_19404439
    new $P5050, 'Hash'
    set pkg_viv_tmp_35["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19404439:
    unless_null $P5049, vivi_19414440
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19414440:
    set $P5044, $P5049
  fallback4436:
    set $P5043["handlers"], $P5044
  if1935_end4430:
.annotate 'line', 1797
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1381944288.90674") :anon :lex :outer("cuid_455_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1789
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1790
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1791
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_248_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1808
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_263 
.annotate 'line', 1809
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4452
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_263, $P5002
    repr_defined $I5001, fb_tmp_263
    unless $I5001 goto if1948_else4453 
    set $P5004, fb_tmp_263["$W"]
    set $P5006, $P5004
    goto if1948_end4454
  if1948_else4453:
    null $P5005
    set $P5006, $P5005
  if1948_end4454:
    unless_null $P5006, vivi_19494455
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_19494455:
    unless_null $P5006, vivi_19504456
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19504456:
    set $P5001, $P5006
  fallback4452:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_249_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1812
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_457_1381944288.90674' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_284 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4463
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_37, $P5002
    set fb_tmp_266, pkg_viv_tmp_37
    repr_defined $I5004, fb_tmp_266
    unless $I5004 goto if1954_else4464 
    set $P5004, fb_tmp_266["%COMPILING"]
    set $P5006, $P5004
    goto if1954_end4465
  if1954_else4464:
    null $P5005
    set $P5006, $P5005
  if1954_end4465:
    unless_null $P5006, vivi_19554466
    new $P5007, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19554466:
    unless_null $P5006, vivi_19564467
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19564467:
    set $P5001, $P5006
  fallback4463:
    set fb_tmp_265, $P5001
    repr_defined $I5003, fb_tmp_265
    unless $I5003 goto if1953_else4461 
    set $P5009, fb_tmp_265["%?OPTIONS"]
    set $P5011, $P5009
    goto if1953_end4462
  if1953_else4461:
    null $P5010
    set $P5011, $P5010
  if1953_end4462:
    unless_null $P5011, vivi_19574468
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_19574468:
    set fb_tmp_264, $P5011
    repr_defined $I5002, fb_tmp_264
    unless $I5002 goto if1952_else4459 
    set $P5013, fb_tmp_264["outer_ctx"]
    set $P5015, $P5013
    goto if1952_end4460
  if1952_else4459:
    null $P5014
    set $P5015, $P5014
  if1952_end4460:
    unless_null $P5015, vivi_19584469
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_19584469:
    defined $I5001, $P5015
    if $I5001 goto unless1951_end4458 
    .const 'Sub' $P5017 = 'cuid_457_1381944288.90674' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1951_end4458:
.annotate 'line', 1833
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4546
    nqp_get_sc_object $P5022, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5021, $P5022
    set fb_tmp_284, $P5021
    repr_defined $I5005, fb_tmp_284
    unless $I5005 goto if2005_else4547 
    set $P5023, fb_tmp_284["$W"]
    set $P5025, $P5023
    goto if2005_end4548
  if2005_else4547:
    null $P5024
    set $P5025, $P5024
  if2005_end4548:
    unless_null $P5025, vivi_20064549
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_20064549:
    unless_null $P5025, vivi_20074550
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_20074550:
    set $P5020, $P5025
  fallback4546:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1381944288.90674") :anon :lex :outer("cuid_249_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1813
    .const 'Sub' $P5100 = 'cuid_456_1381944288.90674' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    .local pmc fb_tmp_273 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1816
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4470
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_267, $P5003
    repr_defined $I5001, fb_tmp_267
    unless $I5001 goto if1959_else4471 
    set $P5005, fb_tmp_267["$W"]
    set $P5007, $P5005
    goto if1959_end4472
  if1959_else4471:
    null $P5006
    set $P5007, $P5006
  if1959_end4472:
    unless_null $P5007, vivi_19604473
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_19604473:
    unless_null $P5007, vivi_19614474
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19614474:
    set $P5002, $P5007
  fallback4470:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4480
    nqp_get_sc_object $P5013, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_38, $P5012
    set fb_tmp_270, pkg_viv_tmp_38
    repr_defined $I5005, fb_tmp_270
    unless $I5005 goto if1964_else4481 
    set $P5014, fb_tmp_270["%COMPILING"]
    set $P5016, $P5014
    goto if1964_end4482
  if1964_else4481:
    null $P5015
    set $P5016, $P5015
  if1964_end4482:
    unless_null $P5016, vivi_19654483
    new $P5017, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19654483:
    unless_null $P5016, vivi_19664484
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19664484:
    set $P5011, $P5016
  fallback4480:
    set fb_tmp_269, $P5011
    repr_defined $I5004, fb_tmp_269
    unless $I5004 goto if1963_else4478 
    set $P5019, fb_tmp_269["%?OPTIONS"]
    set $P5021, $P5019
    goto if1963_end4479
  if1963_else4478:
    null $P5020
    set $P5021, $P5020
  if1963_end4479:
    unless_null $P5021, vivi_19674485
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_19674485:
    set fb_tmp_268, $P5021
    repr_defined $I5003, fb_tmp_268
    unless $I5003 goto if1962_else4476 
    set $P5023, fb_tmp_268["setting"]
    set $P5025, $P5023
    goto if1962_end4477
  if1962_else4476:
    null $P5024
    set $P5025, $P5024
  if1962_end4477:
    unless_null $P5025, vivi_19684486
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_19684486:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4475
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4475:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4493
    nqp_get_sc_object $P5031, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_39, $P5030
    set fb_tmp_273, pkg_viv_tmp_39
    repr_defined $I5009, fb_tmp_273
    unless $I5009 goto if1972_else4494 
    set $P5032, fb_tmp_273["%COMPILING"]
    set $P5034, $P5032
    goto if1972_end4495
  if1972_else4494:
    null $P5033
    set $P5034, $P5033
  if1972_end4495:
    unless_null $P5034, vivi_19734496
    new $P5035, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19734496:
    unless_null $P5034, vivi_19744497
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19744497:
    set $P5029, $P5034
  fallback4493:
    set fb_tmp_272, $P5029
    repr_defined $I5008, fb_tmp_272
    unless $I5008 goto if1971_else4491 
    set $P5037, fb_tmp_272["%?OPTIONS"]
    set $P5039, $P5037
    goto if1971_end4492
  if1971_else4491:
    null $P5038
    set $P5039, $P5038
  if1971_end4492:
    unless_null $P5039, vivi_19754498
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5039, $P5040
  vivi_19754498:
    set fb_tmp_271, $P5039
    repr_defined $I5007, fb_tmp_271
    unless $I5007 goto if1970_else4489 
    set $P5041, fb_tmp_271["setting"]
    set $P5043, $P5041
    goto if1970_end4490
  if1970_else4489:
    null $P5042
    set $P5043, $P5042
  if1970_end4490:
    unless_null $P5043, vivi_19764499
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5043, $P5044
  vivi_19764499:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1969_end4488 
.annotate 'line', 1821
.annotate 'line', 1822
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4506
    nqp_get_sc_object $P5047, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_40, $P5046
    set fb_tmp_276, pkg_viv_tmp_40
    repr_defined $I5012, fb_tmp_276
    unless $I5012 goto if1980_else4507 
    set $P5048, fb_tmp_276["%COMPILING"]
    set $P5050, $P5048
    goto if1980_end4508
  if1980_else4507:
    null $P5049
    set $P5050, $P5049
  if1980_end4508:
    unless_null $P5050, vivi_19814509
    new $P5051, 'Hash'
    set pkg_viv_tmp_40["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_19814509:
    unless_null $P5050, vivi_19824510
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_19824510:
    set $P5045, $P5050
  fallback4506:
    set fb_tmp_275, $P5045
    repr_defined $I5011, fb_tmp_275
    unless $I5011 goto if1979_else4504 
    set $P5053, fb_tmp_275["%?OPTIONS"]
    set $P5055, $P5053
    goto if1979_end4505
  if1979_else4504:
    null $P5054
    set $P5055, $P5054
  if1979_end4505:
    unless_null $P5055, vivi_19834511
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5055, $P5056
  vivi_19834511:
    set fb_tmp_274, $P5055
    repr_defined $I5010, fb_tmp_274
    unless $I5010 goto if1978_else4502 
    set $P5057, fb_tmp_274["no-regex-lib"]
    set $P5059, $P5057
    goto if1978_end4503
  if1978_else4502:
    null $P5058
    set $P5059, $P5058
  if1978_end4503:
    unless_null $P5059, vivi_19844512
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5059, $P5060
  vivi_19844512:
    set $P5097, $P5059
    if $P5059 goto unless1977_end4501 
.annotate 'line', 1823
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4519
    nqp_get_sc_object $P5063, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_41, $P5062
    set fb_tmp_279, pkg_viv_tmp_41
    repr_defined $I5015, fb_tmp_279
    unless $I5015 goto if1988_else4520 
    set $P5064, fb_tmp_279["%COMPILING"]
    set $P5066, $P5064
    goto if1988_end4521
  if1988_else4520:
    null $P5065
    set $P5066, $P5065
  if1988_end4521:
    unless_null $P5066, vivi_19894522
    new $P5067, 'Hash'
    set pkg_viv_tmp_41["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_19894522:
    unless_null $P5066, vivi_19904523
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_19904523:
    set $P5061, $P5066
  fallback4519:
    set fb_tmp_278, $P5061
    repr_defined $I5014, fb_tmp_278
    unless $I5014 goto if1987_else4517 
    set $P5069, fb_tmp_278["%?OPTIONS"]
    set $P5071, $P5069
    goto if1987_end4518
  if1987_else4517:
    null $P5070
    set $P5071, $P5070
  if1987_end4518:
    unless_null $P5071, vivi_19914524
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5071, $P5072
  vivi_19914524:
    set fb_tmp_277, $P5071
    repr_defined $I5013, fb_tmp_277
    unless $I5013 goto if1986_else4515 
    set $P5073, fb_tmp_277["custom-regex-lib"]
    set $P5075, $P5073
    goto if1986_end4516
  if1986_else4515:
    null $P5074
    set $P5075, $P5074
  if1986_end4516:
    unless_null $P5075, vivi_19924525
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5075, $P5076
  vivi_19924525:
    unless $P5075 goto if1985_else4513 
    .const 'Sub' $P5077 = 'cuid_456_1381944288.90674' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if1985_end4514
  if1985_else4513:
.annotate 'line', 1827
.annotate 'line', 1828
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4536
    nqp_get_sc_object $P5081, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5080, $P5081
    set fb_tmp_282, $P5080
    repr_defined $I5016, fb_tmp_282
    unless $I5016 goto if1999_else4537 
    set $P5082, fb_tmp_282["$W"]
    set $P5084, $P5082
    goto if1999_end4538
  if1999_else4537:
    null $P5083
    set $P5084, $P5083
  if1999_end4538:
    unless_null $P5084, vivi_20004539
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5084, $P5085
  vivi_20004539:
    unless_null $P5084, vivi_20014540
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_20014540:
    set $P5079, $P5084
  fallback4536:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4541
    nqp_get_sc_object $P5089, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5088, $P5089
    set fb_tmp_283, $P5088
    repr_defined $I5017, fb_tmp_283
    unless $I5017 goto if2002_else4542 
    set $P5090, fb_tmp_283["$GLOBALish"]
    set $P5092, $P5090
    goto if2002_end4543
  if2002_else4542:
    null $P5091
    set $P5092, $P5091
  if2002_end4543:
    unless_null $P5092, vivi_20034544
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5092, $P5093
  vivi_20034544:
    unless_null $P5092, vivi_20044545
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_20044545:
    set $P5087, $P5092
  fallback4541:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if1985_end4514:
    set $P5097, $P5096
  unless1977_end4501:
    set $P5098, $P5097
  unless1969_end4488:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1381944288.90674") :anon :lex :outer("cuid_457_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1824
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
.annotate 'line', 1825
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4526
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_280, $P5002
    repr_defined $I5001, fb_tmp_280
    unless $I5001 goto if1993_else4527 
    set $P5004, fb_tmp_280["$W"]
    set $P5006, $P5004
    goto if1993_end4528
  if1993_else4527:
    null $P5005
    set $P5006, $P5005
  if1993_end4528:
    unless_null $P5006, vivi_19944529
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_19944529:
    unless_null $P5006, vivi_19954530
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19954530:
    set $P5001, $P5006
  fallback4526:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4531
    nqp_get_sc_object $P5011, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5010, $P5011
    set fb_tmp_281, $P5010
    repr_defined $I5002, fb_tmp_281
    unless $I5002 goto if1996_else4532 
    set $P5012, fb_tmp_281["$GLOBALish"]
    set $P5014, $P5012
    goto if1996_end4533
  if1996_else4532:
    null $P5013
    set $P5014, $P5013
  if1996_end4533:
    unless_null $P5014, vivi_19974534
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_19974534:
    unless_null $P5014, vivi_19984535
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_19984535:
    set $P5009, $P5014
  fallback4531:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_250_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1845
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1846
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_251_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1851
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1852
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4551
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_285, $P5003
    repr_defined $I5001, fb_tmp_285
    unless $I5001 goto if2008_else4552 
    set $P5005, fb_tmp_285["$W"]
    set $P5007, $P5005
    goto if2008_end4553
  if2008_else4552:
    null $P5006
    set $P5007, $P5006
  if2008_end4553:
    unless_null $P5007, vivi_20094554
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_20094554:
    unless_null $P5007, vivi_20104555
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_20104555:
    set $P5002, $P5007
  fallback4551:
    unless_null _lex_param_1, fallback4558
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5010
  fallback4558:
    set fb_tmp_286, _lex_param_1
    repr_defined $I5002, fb_tmp_286
    unless $I5002 goto if2011_else4556 
    set $P5011, fb_tmp_286["name"]
    set $P5013, $P5011
    goto if2011_end4557
  if2011_else4556:
    null $P5012
    set $P5013, $P5012
  if2011_end4557:
    unless_null $P5013, vivi_20124559
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_20124559:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4560
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5016, $P5017
    set fb_tmp_287, $P5016
    repr_defined $I5003, fb_tmp_287
    unless $I5003 goto if2013_else4561 
    set $P5018, fb_tmp_287["$GLOBALish"]
    set $P5020, $P5018
    goto if2013_end4562
  if2013_else4561:
    null $P5019
    set $P5020, $P5019
  if2013_end4562:
    unless_null $P5020, vivi_20144563
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_20144563:
    unless_null $P5020, vivi_20154564
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_20154564:
    set $P5015, $P5020
  fallback4560:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2016_end4566 
.annotate 'line', 1853
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2018_end4570 
    set fb_tmp_288, $P101
    repr_defined $I5007, fb_tmp_288
    unless $I5007 goto if2019_else4571 
    set $P5025, fb_tmp_288["EXPORT"]
    set $P5027, $P5025
    goto if2019_end4572
  if2019_else4571:
    null $P5026
    set $P5027, $P5026
  if2019_end4572:
    unless_null $P5027, vivi_20204573
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5027, $P5028
  vivi_20204573:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2018_end4570:
    unless $I5008 goto if2017_end4568 
.annotate 'line', 1854
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4574
    nqp_get_sc_object $P5031, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5030, $P5031
    set fb_tmp_289, $P5030
    repr_defined $I5009, fb_tmp_289
    unless $I5009 goto if2021_else4575 
    set $P5032, fb_tmp_289["$W"]
    set $P5034, $P5032
    goto if2021_end4576
  if2021_else4575:
    null $P5033
    set $P5034, $P5033
  if2021_end4576:
    unless_null $P5034, vivi_20224577
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  vivi_20224577:
    unless_null $P5034, vivi_20234578
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20234578:
    set $P5029, $P5034
  fallback4574:
    set fb_tmp_291, $P101
    repr_defined $I5011, fb_tmp_291
    unless $I5011 goto if2025_else4581 
    set $P5039, fb_tmp_291["EXPORT"]
    set $P5041, $P5039
    goto if2025_end4582
  if2025_else4581:
    null $P5040
    set $P5041, $P5040
  if2025_end4582:
    unless_null $P5041, vivi_20264583
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5041, $P5042
  vivi_20264583:
    get_who $P5038, $P5041
    set fb_tmp_290, $P5038
    repr_defined $I5010, fb_tmp_290
    unless $I5010 goto if2024_else4579 
    set $P5043, fb_tmp_290["DEFAULT"]
    set $P5045, $P5043
    goto if2024_end4580
  if2024_else4579:
    null $P5044
    set $P5045, $P5044
  if2024_end4580:
    unless_null $P5045, vivi_20274584
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  vivi_20274584:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2017_end4568:
.annotate 'line', 1857
    $P5048 = "&import_HOW_exports"($P101)
  if2016_end4566:
.annotate 'line', 1859
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_252_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1862
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_458_1381944288.90674' 
    capture_lex $P5038 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4587
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback4587:
    set fb_tmp_292, _lex_param_1
    repr_defined $I5001, fb_tmp_292
    unless $I5001 goto if2028_else4585 
    set $P5004, fb_tmp_292["xblock"]
    set $P5006, $P5004
    goto if2028_end4586
  if2028_else4585:
    null $P5005
    set $P5006, $P5005
  if2028_end4586:
    unless_null $P5006, vivi_20294588
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_20294588:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1864
    unless_null _lex_param_1, fallback4593
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5009
  fallback4593:
    set fb_tmp_294, _lex_param_1
    repr_defined $I5003, fb_tmp_294
    unless $I5003 goto if2031_else4591 
    set $P5010, fb_tmp_294["xblock"]
    set $P5012, $P5010
    goto if2031_end4592
  if2031_else4591:
    null $P5011
    set $P5012, $P5011
  if2031_end4592:
    unless_null $P5012, vivi_20324594
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_20324594:
    set fb_tmp_293, $P5012
    repr_defined $I5002, fb_tmp_293
    unless $I5002 goto if2030_else4589 
    set $I5004, $P101
    set $P5014, fb_tmp_293[$I5004]
    set $P5016, $P5014
    goto if2030_end4590
  if2030_else4589:
    null $P5015
    set $P5016, $P5015
  if2030_end4590:
    unless_null $P5016, vivi_20334595
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_20334595:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4600
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5020
  fallback4600:
    set fb_tmp_295, _lex_param_1
    repr_defined $I5005, fb_tmp_295
    unless $I5005 goto if2035_else4598 
    set $P5021, fb_tmp_295["else"]
    set $P5023, $P5021
    goto if2035_end4599
  if2035_else4598:
    null $P5022
    set $P5023, $P5022
  if2035_end4599:
    unless_null $P5023, vivi_20364601
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_20364601:
    unless $P5023 goto if2034_end4597 
.annotate 'line', 1865
.annotate 'line', 1866
    unless_null _lex_param_1, fallback4604
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5025
  fallback4604:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5006, fb_tmp_296
    unless $I5006 goto if2037_else4602 
    set $P5026, fb_tmp_296["else"]
    set $P5028, $P5026
    goto if2037_end4603
  if2037_else4602:
    null $P5027
    set $P5028, $P5027
  if2037_end4603:
    unless_null $P5028, vivi_20384605
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_20384605:
    $P5030 = $P5028."ast"()
    $P5031 = "&block_immediate"($P5030)
    $P5032 = $P102."push"($P5031)
  if2034_end4597:
  while2039_test4606:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5007, $N5004, $N5005
    box $P5036, $I5007
    set $P5035, $P5036
    unless $I5007 goto while2039_done4610 
  while2039_redo4608:
    .const 'Sub' $P5033 = 'cuid_458_1381944288.90674' 
    capture_lex $P5033
    $P5034 = $P5033()
    set $P5035, $P5034
    goto while2039_test4606 
  while2039_done4610:
.annotate 'line', 1875
    $P5037 = _lex_param_1."!make"($P102)
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1381944288.90674") :anon :lex :outer("cuid_252_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1869
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1872
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4615
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  fallback4615:
    set fb_tmp_298, $P5003
    repr_defined $I5002, fb_tmp_298
    unless $I5002 goto if2041_else4613 
    set $P5005, fb_tmp_298["xblock"]
    set $P5007, $P5005
    goto if2041_end4614
  if2041_else4613:
    null $P5006
    set $P5007, $P5006
  if2041_end4614:
    unless_null $P5007, vivi_20424616
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_20424616:
    set fb_tmp_297, $P5007
    repr_defined $I5001, fb_tmp_297
    unless $I5001 goto if2040_else4611 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_297[$I5003]
    set $P5012, $P5009
    goto if2040_end4612
  if2040_else4611:
    null $P5011
    set $P5012, $P5011
  if2040_end4612:
    unless_null $P5012, vivi_20434617
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_20434617:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1873
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_253_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1878
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_299 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1879
    unless_null _lex_param_1, fallback4620
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4620:
    set fb_tmp_299, _lex_param_1
    repr_defined $I5001, fb_tmp_299
    unless $I5001 goto if2044_else4618 
    set $P5003, fb_tmp_299["xblock"]
    set $P5005, $P5003
    goto if2044_end4619
  if2044_else4618:
    null $P5004
    set $P5005, $P5004
  if2044_end4619:
    unless_null $P5005, vivi_20454621
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_20454621:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1880
    $P101."op"("unless")
.annotate 'line', 1881
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_254_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1884
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1885
    unless_null _lex_param_1, fallback4624
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4624:
    set fb_tmp_300, _lex_param_1
    repr_defined $I5001, fb_tmp_300
    unless $I5001 goto if2046_else4622 
    set $P5003, fb_tmp_300["xblock"]
    set $P5005, $P5003
    goto if2046_end4623
  if2046_else4622:
    null $P5004
    set $P5005, $P5004
  if2046_end4623:
    unless_null $P5005, vivi_20474625
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_20474625:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1886
    unless_null _lex_param_1, fallback4628
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5009
  fallback4628:
    set fb_tmp_301, _lex_param_1
    repr_defined $I5002, fb_tmp_301
    unless $I5002 goto if2048_else4626 
    set $P5010, fb_tmp_301["sym"]
    set $P5012, $P5010
    goto if2048_end4627
  if2048_else4626:
    null $P5011
    set $P5012, $P5011
  if2048_end4627:
    unless_null $P5012, vivi_20494629
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_20494629:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4632
    nqp_get_sc_object $P5016, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5015, $P5016
    set fb_tmp_302, $P5015
    repr_defined $I5003, fb_tmp_302
    unless $I5003 goto if2051_else4633 
    set $P5017, fb_tmp_302["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2051_end4634
  if2051_else4633:
    null $P5018
    set $P5019, $P5018
  if2051_end4634:
    unless_null $P5019, vivi_20524635
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_20524635:
    unless_null $P5019, vivi_20534636
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20534636:
    set $P5014, $P5019
  fallback4632:
    if $P5014 goto unless2050_end4631 
.annotate 'line', 1887
.annotate 'line', 1888
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2050_end4631:
.annotate 'line', 1890
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_255_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1893
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4639
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback4639:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5001, fb_tmp_303
    unless $I5001 goto if2054_else4637 
    set $P5004, fb_tmp_303["wu"]
    set $P5006, $P5004
    goto if2054_end4638
  if2054_else4637:
    null $P5005
    set $P5006, $P5005
  if2054_end4638:
    unless_null $P5006, vivi_20554640
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_20554640:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4645
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5009
  fallback4645:
    set fb_tmp_304, _lex_param_1
    repr_defined $I5002, fb_tmp_304
    unless $I5002 goto if2057_else4643 
    set $P5010, fb_tmp_304["xblock"]
    set $P5012, $P5010
    goto if2057_end4644
  if2057_else4643:
    null $P5011
    set $P5012, $P5011
  if2057_end4644:
    unless_null $P5012, vivi_20584646
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_20584646:
    unless $P5012 goto if2056_else4641 
.annotate 'line', 1896
.annotate 'line', 1897
    unless_null _lex_param_1, fallback4649
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5014
  fallback4649:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5003, fb_tmp_305
    unless $I5003 goto if2059_else4647 
    set $P5015, fb_tmp_305["xblock"]
    set $P5017, $P5015
    goto if2059_end4648
  if2059_else4647:
    null $P5016
    set $P5017, $P5016
  if2059_end4648:
    unless_null $P5017, vivi_20604650
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_20604650:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1898
    $P5021 = $P102."op"($P101)
    goto if2056_end4642
  if2056_else4641:
.annotate 'line', 1900
.annotate 'line', 1901
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    unless_null _lex_param_1, fallback4653
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5023
  fallback4653:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5004, fb_tmp_306
    unless $I5004 goto if2061_else4651 
    set $P5024, fb_tmp_306["EXPR"]
    set $P5026, $P5024
    goto if2061_end4652
  if2061_else4651:
    null $P5025
    set $P5026, $P5025
  if2061_end4652:
    unless_null $P5026, vivi_20624654
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_20624654:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4657
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5029
  fallback4657:
    set fb_tmp_307, _lex_param_1
    repr_defined $I5005, fb_tmp_307
    unless $I5005 goto if2063_else4655 
    set $P5030, fb_tmp_307["pblock"]
    set $P5032, $P5030
    goto if2063_end4656
  if2063_else4655:
    null $P5031
    set $P5032, $P5031
  if2063_end4656:
    unless_null $P5032, vivi_20644658
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5032, $P5033
  vivi_20644658:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2056_end4642:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback4661
    nqp_get_sc_object $P5039, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5038, $P5039
    set fb_tmp_308, $P5038
    repr_defined $I5006, fb_tmp_308
    unless $I5006 goto if2066_else4662 
    set $P5040, fb_tmp_308["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2066_end4663
  if2066_else4662:
    null $P5041
    set $P5042, $P5041
  if2066_end4663:
    unless_null $P5042, vivi_20674664
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5042, $P5043
  vivi_20674664:
    unless_null $P5042, vivi_20684665
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20684665:
    set $P5037, $P5042
  fallback4661:
    if $P5037 goto unless2065_end4660 
.annotate 'line', 1904
.annotate 'line', 1905
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2065_end4660:
.annotate 'line', 1907
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_256_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1910
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 1911
    unless_null _lex_param_1, fallback4668
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback4668:
    set fb_tmp_309, _lex_param_1
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2069_else4666 
    set $P5004, fb_tmp_309["xblock"]
    set $P5006, $P5004
    goto if2069_end4667
  if2069_else4666:
    null $P5005
    set $P5006, $P5005
  if2069_end4667:
    unless_null $P5006, vivi_20704669
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_20704669:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1912
    $P101."op"("for")
    set fb_tmp_310, $P101
    repr_defined $I5002, fb_tmp_310
    unless $I5002 goto if2071_else4670 
    set $P5009, fb_tmp_310[1]
    set $P5011, $P5009
    goto if2071_end4671
  if2071_else4670:
    null $P5010
    set $P5011, $P5010
  if2071_end4671:
    unless_null $P5011, vivi_20724672
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_20724672:
    set $P102, $P5011
.annotate 'line', 1914
    $P5013 = $P102."arity"()
    if $P5013 goto unless2073_end4674 
.annotate 'line', 1915
    set fb_tmp_311, $P102
    repr_defined $I5003, fb_tmp_311
    unless $I5003 goto if2074_else4675 
    set $P5014, fb_tmp_311[0]
    set $P5016, $P5014
    goto if2074_end4676
  if2074_else4675:
    null $P5015
    set $P5016, $P5015
  if2074_end4676:
    unless_null $P5016, vivi_20754677
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_20754677:
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 1916
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1917
    $P5020 = $P102."arity"(1)
  unless2073_end4674:
.annotate 'line', 1919
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback4680
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set fb_tmp_312, $P5022
    repr_defined $I5004, fb_tmp_312
    unless $I5004 goto if2077_else4681 
    set $P5024, fb_tmp_312["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2077_end4682
  if2077_else4681:
    null $P5025
    set $P5026, $P5025
  if2077_end4682:
    unless_null $P5026, vivi_20784683
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_20784683:
    unless_null $P5026, vivi_20794684
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_20794684:
    set $P5021, $P5026
  fallback4680:
    if $P5021 goto unless2076_end4679 
.annotate 'line', 1920
.annotate 'line', 1921
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2076_end4679:
.annotate 'line', 1923
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_257_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1926
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_313 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1927
    unless_null _lex_param_1, fallback4687
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4687:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5001, fb_tmp_313
    unless $I5001 goto if2080_else4685 
    set $P5003, fb_tmp_313["block"]
    set $P5005, $P5003
    goto if2080_end4686
  if2080_else4685:
    null $P5004
    set $P5005, $P5004
  if2080_end4686:
    unless_null $P5005, vivi_20814688
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_20814688:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1928
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1929
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_258_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1932
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_314 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 1933
    unless_null _lex_param_1, fallback4691
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4691:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2082_else4689 
    set $P5003, fb_tmp_314["block"]
    set $P5005, $P5003
    goto if2082_end4690
  if2082_else4689:
    null $P5004
    set $P5005, $P5004
  if2082_end4690:
    unless_null $P5005, vivi_20834692
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_20834692:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1934
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1935
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_259_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1973
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
.annotate 'line', 1974
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4693
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_315, $P5002
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if2084_else4694 
    set $P5004, fb_tmp_315["$W"]
    set $P5006, $P5004
    goto if2084_end4695
  if2084_else4694:
    null $P5005
    set $P5006, $P5005
  if2084_end4695:
    unless_null $P5006, vivi_20854696
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_20854696:
    unless_null $P5006, vivi_20864697
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20864697:
    set $P5001, $P5006
  fallback4693:
    unless_null _lex_param_1, fallback4700
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5009
  fallback4700:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5002, fb_tmp_316
    unless $I5002 goto if2087_else4698 
    set $P5010, fb_tmp_316["blorst"]
    set $P5012, $P5010
    goto if2087_end4699
  if2087_else4698:
    null $P5011
    set $P5012, $P5011
  if2087_end4699:
    unless_null $P5012, vivi_20884701
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_20884701:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_260_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1977
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
.annotate 'line', 1978
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4702
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_317, $P5002
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2089_else4703 
    set $P5004, fb_tmp_317["$W"]
    set $P5006, $P5004
    goto if2089_end4704
  if2089_else4703:
    null $P5005
    set $P5006, $P5005
  if2089_end4704:
    unless_null $P5006, vivi_20904705
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_20904705:
    unless_null $P5006, vivi_20914706
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20914706:
    set $P5001, $P5006
  fallback4702:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback4709
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5010
  fallback4709:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5002, fb_tmp_318
    unless $I5002 goto if2092_else4707 
    set $P5011, fb_tmp_318["blorst"]
    set $P5013, $P5011
    goto if2092_end4708
  if2092_else4707:
    null $P5012
    set $P5013, $P5012
  if2092_end4708:
    unless_null $P5013, vivi_20934710
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_20934710:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1979
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_261_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1982
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    .local pmc fb_tmp_320 
    .local pmc fb_tmp_321 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4711
    .lex "RETURN", $P102
.annotate 'line', 1983
    unless_null _lex_param_1, fallback4715
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4715:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2094_else4713 
    set $P5003, fb_tmp_319["blorst"]
    set $P5005, $P5003
    goto if2094_end4714
  if2094_else4713:
    null $P5004
    set $P5005, $P5004
  if2094_end4714:
    unless_null $P5005, vivi_20954716
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_20954716:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 108
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2096_end4718 
.annotate 'line', 1984
    set fb_tmp_320, $P101
    repr_defined $I5003, fb_tmp_320
    unless $I5003 goto if2099_else4723 
    set $P5009, fb_tmp_320["handlers"]
    set $P5011, $P5009
    goto if2099_end4724
  if2099_else4723:
    null $P5010
    set $P5011, $P5010
  if2099_end4724:
    unless_null $P5011, vivi_21004725
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_21004725:
    set $P5017, $P5011
    unless $P5011 goto if2098_end4722 
    set fb_tmp_321, $P101
    repr_defined $I5005, fb_tmp_321
    unless $I5005 goto if2101_else4726 
    set $P5013, fb_tmp_321["handlers"]
    set $P5015, $P5013
    goto if2101_end4727
  if2101_else4726:
    null $P5014
    set $P5015, $P5014
  if2101_end4727:
    unless_null $P5015, vivi_21024728
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_21024728:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2098_end4722:
    unless $P5017 goto if2097_else4719 
.annotate 'line', 1985
.annotate 'line', 1986
    _lex_param_1."!make"($P101)
    $P5019 = "RETURN"(1)
    set $P5021, $P5019
    goto if2097_end4720
  if2097_else4719:
.annotate 'line', 1989
.annotate 'line', 1990
    $P5020 = $P101."blocktype"("immediate")
    set $P5021, $P5020
  if2097_end4720:
  if2096_end4718:
.annotate 'line', 1993
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 1997
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 1998
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
.annotate 'line', 1999
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2001
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5027 = $P5026."new"("exception" :named("op"))
.annotate 'line', 2002
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5029 = $P5028."new"("handled" :named("value"))
.annotate 'line', 2003
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5031 = $P5030."new"(1 :named("value"))
    $P5032 = $P5025."new"($P5027, $P5029, $P5031, "bindkey_i" :named("op"))
.annotate 'line', 2005
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5034 = $P5033."new"("null" :named("op"))
.annotate 'line', 2006
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5036 = $P5035."new"("null" :named("op"))
    $P5037 = $P5024."new"($P5032 :named("parrot"), $P5034 :named("jvm"), $P5036 :named("moar"))
.annotate 'line', 2008
    $P5038 = "&default_for"("$")
    $P5039 = $P5023."new"($P5037, $P5038)
    $P5040 = $P5022."new"($P101, "CATCH", $P5039, "handle" :named("op"))
    $P5041 = _lex_param_1."!make"($P5040)
    goto lexotic_4712
  lexotic_4711:
    .get_results ($P5041)
  lexotic_4712:
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_262_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_322 
    .local pmc fb_tmp_323 
    .local pmc fb_tmp_324 
.annotate 'line', 2013
    unless_null _lex_param_1, fallback4733
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4733:
    set fb_tmp_322, _lex_param_1
    repr_defined $I5001, fb_tmp_322
    unless $I5001 goto if2104_else4731 
    set $P5002, fb_tmp_322["block"]
    set $P5004, $P5002
    goto if2104_end4732
  if2104_else4731:
    null $P5003
    set $P5004, $P5003
  if2104_end4732:
    unless_null $P5004, vivi_21054734
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21054734:
    unless $P5004 goto if2103_else4729 
.annotate 'line', 2014
    unless_null _lex_param_1, fallback4737
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback4737:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5002, fb_tmp_323
    unless $I5002 goto if2106_else4735 
    set $P5007, fb_tmp_323["block"]
    set $P5009, $P5007
    goto if2106_end4736
  if2106_else4735:
    null $P5008
    set $P5009, $P5008
  if2106_end4736:
    unless_null $P5009, vivi_21074738
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_21074738:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2103_end4730
  if2103_else4729:
.annotate 'line', 2015
    unless_null _lex_param_1, fallback4741
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5013
  fallback4741:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5003, fb_tmp_324
    unless $I5003 goto if2108_else4739 
    set $P5014, fb_tmp_324["statement"]
    set $P5016, $P5014
    goto if2108_end4740
  if2108_else4739:
    null $P5015
    set $P5016, $P5015
  if2108_end4740:
    unless_null $P5016, vivi_21094742
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_21094742:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2103_end4730:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_263_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    unless_null _lex_param_1, fallback4745
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4745:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2110_else4743 
    set $P5002, fb_tmp_325["cond"]
    set $P5004, $P5002
    goto if2110_end4744
  if2110_else4743:
    null $P5003
    set $P5004, $P5003
  if2110_end4744:
    unless_null $P5004, vivi_21114746
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21114746:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_264_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2021
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_326 
    unless_null _lex_param_1, fallback4749
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4749:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2112_else4747 
    set $P5002, fb_tmp_326["cond"]
    set $P5004, $P5002
    goto if2112_end4748
  if2112_else4747:
    null $P5003
    set $P5004, $P5003
  if2112_end4748:
    unless_null $P5004, vivi_21134750
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21134750:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_265_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
    unless_null _lex_param_1, fallback4753
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4753:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2114_else4751 
    set $P5002, fb_tmp_327["cond"]
    set $P5004, $P5002
    goto if2114_end4752
  if2114_else4751:
    null $P5003
    set $P5004, $P5003
  if2114_end4752:
    unless_null $P5004, vivi_21154754
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21154754:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_266_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_328 
    unless_null _lex_param_1, fallback4757
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4757:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5001, fb_tmp_328
    unless $I5001 goto if2116_else4755 
    set $P5002, fb_tmp_328["cond"]
    set $P5004, $P5002
    goto if2116_end4756
  if2116_else4755:
    null $P5003
    set $P5004, $P5003
  if2116_end4756:
    unless_null $P5004, vivi_21174758
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21174758:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_267_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2028
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_329 
    unless_null _lex_param_1, fallback4761
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4761:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5001, fb_tmp_329
    unless $I5001 goto if2118_else4759 
    set $P5002, fb_tmp_329["fatarrow"]
    set $P5004, $P5002
    goto if2118_end4760
  if2118_else4759:
    null $P5003
    set $P5004, $P5003
  if2118_end4760:
    unless_null $P5004, vivi_21194762
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21194762:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_268_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2029
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_330 
    unless_null _lex_param_1, fallback4765
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4765:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5001, fb_tmp_330
    unless $I5001 goto if2120_else4763 
    set $P5002, fb_tmp_330["colonpair"]
    set $P5004, $P5002
    goto if2120_end4764
  if2120_else4763:
    null $P5003
    set $P5004, $P5003
  if2120_end4764:
    unless_null $P5004, vivi_21214766
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21214766:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_269_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2030
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_331 
    unless_null _lex_param_1, fallback4769
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4769:
    set fb_tmp_331, _lex_param_1
    repr_defined $I5001, fb_tmp_331
    unless $I5001 goto if2122_else4767 
    set $P5002, fb_tmp_331["variable"]
    set $P5004, $P5002
    goto if2122_end4768
  if2122_else4767:
    null $P5003
    set $P5004, $P5003
  if2122_end4768:
    unless_null $P5004, vivi_21234770
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21234770:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_270_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2031
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_332 
    unless_null _lex_param_1, fallback4773
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4773:
    set fb_tmp_332, _lex_param_1
    repr_defined $I5001, fb_tmp_332
    unless $I5001 goto if2124_else4771 
    set $P5002, fb_tmp_332["package_declarator"]
    set $P5004, $P5002
    goto if2124_end4772
  if2124_else4771:
    null $P5003
    set $P5004, $P5003
  if2124_end4772:
    unless_null $P5004, vivi_21254774
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21254774:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_271_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2032
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_333 
    unless_null _lex_param_1, fallback4777
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4777:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5001, fb_tmp_333
    unless $I5001 goto if2126_else4775 
    set $P5002, fb_tmp_333["scope_declarator"]
    set $P5004, $P5002
    goto if2126_end4776
  if2126_else4775:
    null $P5003
    set $P5004, $P5003
  if2126_end4776:
    unless_null $P5004, vivi_21274778
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21274778:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_272_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2033
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_334 
    unless_null _lex_param_1, fallback4781
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4781:
    set fb_tmp_334, _lex_param_1
    repr_defined $I5001, fb_tmp_334
    unless $I5001 goto if2128_else4779 
    set $P5002, fb_tmp_334["routine_declarator"]
    set $P5004, $P5002
    goto if2128_end4780
  if2128_else4779:
    null $P5003
    set $P5004, $P5003
  if2128_end4780:
    unless_null $P5004, vivi_21294782
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21294782:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_273_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2034
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_335 
    unless_null _lex_param_1, fallback4785
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4785:
    set fb_tmp_335, _lex_param_1
    repr_defined $I5001, fb_tmp_335
    unless $I5001 goto if2130_else4783 
    set $P5002, fb_tmp_335["regex_declarator"]
    set $P5004, $P5002
    goto if2130_end4784
  if2130_else4783:
    null $P5003
    set $P5004, $P5003
  if2130_end4784:
    unless_null $P5004, vivi_21314786
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21314786:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_274_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_336 
    unless_null _lex_param_1, fallback4789
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4789:
    set fb_tmp_336, _lex_param_1
    repr_defined $I5001, fb_tmp_336
    unless $I5001 goto if2132_else4787 
    set $P5002, fb_tmp_336["statement_prefix"]
    set $P5004, $P5002
    goto if2132_end4788
  if2132_else4787:
    null $P5003
    set $P5004, $P5003
  if2132_end4788:
    unless_null $P5004, vivi_21334790
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21334790:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_275_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2036
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_337 
.annotate 'line', 2037
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    unless_null _lex_param_1, fallback4793
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4793:
    set fb_tmp_337, _lex_param_1
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if2134_else4791 
    set $P5003, fb_tmp_337["pblock"]
    set $P5005, $P5003
    goto if2134_end4792
  if2134_else4791:
    null $P5004
    set $P5005, $P5004
  if2134_end4792:
    unless_null $P5005, vivi_21354794
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_21354794:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_276_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2040
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2041
    unless_null _lex_param_1, fallback4797
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4797:
    set fb_tmp_338, _lex_param_1
    repr_defined $I5001, fb_tmp_338
    unless $I5001 goto if2136_else4795 
    set $P5003, fb_tmp_338["val"]
    set $P5005, $P5003
    goto if2136_end4796
  if2136_else4795:
    null $P5004
    set $P5005, $P5004
  if2136_end4796:
    unless_null $P5005, vivi_21374798
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_21374798:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2042
    unless_null _lex_param_1, fallback4801
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback4801:
    set fb_tmp_339, _lex_param_1
    repr_defined $I5002, fb_tmp_339
    unless $I5002 goto if2138_else4799 
    set $P5009, fb_tmp_339["key"]
    set $P5011, $P5009
    goto if2138_end4800
  if2138_else4799:
    null $P5010
    set $P5011, $P5010
  if2138_end4800:
    unless_null $P5011, vivi_21394802
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_21394802:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2043
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_277_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2046
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_459_1381944288.90674' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    unless_null _lex_param_1, fallback4807
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4807:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2141_else4805 
    set $P5002, fb_tmp_340["variable"]
    set $P5004, $P5002
    goto if2141_end4806
  if2141_else4805:
    null $P5003
    set $P5004, $P5003
  if2141_end4806:
    unless_null $P5004, vivi_21424808
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_21424808:
    unless $P5004 goto if2140_else4803 
.annotate 'line', 2047
.annotate 'line', 2048
    unless_null _lex_param_1, fallback4811
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback4811:
    set fb_tmp_341, _lex_param_1
    repr_defined $I5002, fb_tmp_341
    unless $I5002 goto if2143_else4809 
    set $P5007, fb_tmp_341["variable"]
    set $P5009, $P5007
    goto if2143_end4810
  if2143_else4809:
    null $P5008
    set $P5009, $P5008
  if2143_end4810:
    unless_null $P5009, vivi_21444812
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_21444812:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback4817
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback4817:
    set fb_tmp_343, _lex_param_1
    repr_defined $I5004, fb_tmp_343
    unless $I5004 goto if2146_else4815 
    set $P5013, fb_tmp_343["variable"]
    set $P5015, $P5013
    goto if2146_end4816
  if2146_else4815:
    null $P5014
    set $P5015, $P5014
  if2146_end4816:
    unless_null $P5015, vivi_21474818
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_21474818:
    set fb_tmp_342, $P5015
    repr_defined $I5003, fb_tmp_342
    unless $I5003 goto if2145_else4813 
    set $P5017, fb_tmp_342["desigilname"]
    set $P5019, $P5017
    goto if2145_end4814
  if2145_else4813:
    null $P5018
    set $P5019, $P5018
  if2145_end4814:
    unless_null $P5019, vivi_21484819
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_21484819:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2049
    unless_null _lex_param_1, fallback4822
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5021
  fallback4822:
    set fb_tmp_344, _lex_param_1
    repr_defined $I5005, fb_tmp_344
    unless $I5005 goto if2149_else4820 
    set $P5022, fb_tmp_344["variable"]
    set $P5024, $P5022
    goto if2149_end4821
  if2149_else4820:
    null $P5023
    set $P5024, $P5023
  if2149_end4821:
    unless_null $P5024, vivi_21504823
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_21504823:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2140_end4804
  if2140_else4803:
    .const 'Sub' $P5028 = 'cuid_459_1381944288.90674' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2140_end4804:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1381944288.90674") :anon :lex :outer("cuid_277_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2050
    .lex "$past", $P101 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4828
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback4828:
    set fb_tmp_345, $P5002
    repr_defined $I5001, fb_tmp_345
    unless $I5001 goto if2152_else4826 
    set $P5004, fb_tmp_345["circumfix"]
    set $P5006, $P5004
    goto if2152_end4827
  if2152_else4826:
    null $P5005
    set $P5006, $P5005
  if2152_end4827:
    unless_null $P5006, vivi_21534829
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_21534829:
    unless $P5006 goto if2151_else4824 
.annotate 'line', 2052
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4832
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  fallback4832:
    set fb_tmp_346, $P5008
    repr_defined $I5002, fb_tmp_346
    unless $I5002 goto if2154_else4830 
    set $P5010, fb_tmp_346["circumfix"]
    set $P5012, $P5010
    goto if2154_end4831
  if2154_else4830:
    null $P5011
    set $P5012, $P5011
  if2154_end4831:
    unless_null $P5012, vivi_21554833
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_21554833:
    $P5014 = $P5012."ast"()
    set $P5023, $P5014
    goto if2151_end4825
  if2151_else4824:
.annotate 'line', 2053
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    find_lex $P5016, "$/"
    unless_null $P5016, fallback4836
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  fallback4836:
    set fb_tmp_347, $P5016
    repr_defined $I5004, fb_tmp_347
    unless $I5004 goto if2156_else4834 
    set $P5018, fb_tmp_347["not"]
    set $P5020, $P5018
    goto if2156_end4835
  if2156_else4834:
    null $P5019
    set $P5020, $P5019
  if2156_end4835:
    unless_null $P5020, vivi_21574837
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_21574837:
    isfalse $I5003, $P5020
    $P5022 = $P5015."new"($I5003 :named("value"))
    set $P5023, $P5022
  if2151_end4825:
    set $P101, $P5023
.annotate 'line', 2054
    find_lex $P5024, "$/"
    unless_null $P5024, fallback4840
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  fallback4840:
    set fb_tmp_348, $P5024
    repr_defined $I5005, fb_tmp_348
    unless $I5005 goto if2158_else4838 
    set $P5026, fb_tmp_348["identifier"]
    set $P5028, $P5026
    goto if2158_end4839
  if2158_else4838:
    null $P5027
    set $P5028, $P5027
  if2158_end4839:
    unless_null $P5028, vivi_21594841
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_21594841:
    set $S5001, $P5028
    $P101."named"($S5001)
.annotate 'line', 2055
    find_dynamic_lex $P5030, "$/"
    $P5031 = $P5030."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_278_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2059
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_461_1381944288.90674' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4846
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback4846:
    set fb_tmp_349, _lex_param_1
    repr_defined $I5001, fb_tmp_349
    unless $I5001 goto if2161_else4844 
    set $P5003, fb_tmp_349["postcircumfix"]
    set $P5005, $P5003
    goto if2161_end4845
  if2161_else4844:
    null $P5004
    set $P5005, $P5004
  if2161_end4845:
    unless_null $P5005, vivi_21624847
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_21624847:
    unless $P5005 goto if2160_else4842 
.annotate 'line', 2061
.annotate 'line', 2062
    unless_null _lex_param_1, fallback4850
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5007
  fallback4850:
    set fb_tmp_350, _lex_param_1
    repr_defined $I5002, fb_tmp_350
    unless $I5002 goto if2163_else4848 
    set $P5008, fb_tmp_350["postcircumfix"]
    set $P5010, $P5008
    goto if2163_end4849
  if2163_else4848:
    null $P5009
    set $P5010, $P5009
  if2163_end4849:
    unless_null $P5010, vivi_21644851
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_21644851:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2063
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 84
.annotate 'line', 2064
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2160_end4843
  if2160_else4842:
    .const 'Sub' $P5017 = 'cuid_461_1381944288.90674' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2160_end4843:
.annotate 'line', 2145
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1381944288.90674") :anon :lex :outer("cuid_278_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2067
    .const 'Sub' $P5081 = 'cuid_460_1381944288.90674' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_464_1381944288.90674' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_465_1381944288.90674' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_466_1381944288.90674' 
    capture_lex $P5081 
    .lex "@name", $P101 
    .local pmc fb_tmp_351 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2068
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2166_else4854 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2166_end4855
  if2166_else4854:
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5007
  if2166_end4855:
    get_who $P5002, $P5008
    set fb_tmp_351, $P5002
    repr_defined $I5001, fb_tmp_351
    unless $I5001 goto if2165_else4852 
    set $P5009, fb_tmp_351["Compiler"]
    set $P5011, $P5009
    goto if2165_end4853
  if2165_else4852:
    null $P5010
    set $P5011, $P5010
  if2165_end4853:
    unless_null $P5011, vivi_21674856
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_21674856:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2168_else4857 
.annotate 'line', 2069
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4863
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  fallback4863:
    set fb_tmp_352, $P5015
    repr_defined $I5004, fb_tmp_352
    unless $I5004 goto if2170_else4861 
    set $P5017, fb_tmp_352["twigil"]
    set $P5019, $P5017
    goto if2170_end4862
  if2170_else4861:
    null $P5018
    set $P5019, $P5018
  if2170_end4862:
    unless_null $P5019, vivi_21714864
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_21714864:
    unless $P5019 goto if2169_end4860 
.annotate 'line', 2070
.annotate 'line', 2071
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2169_end4860:
.annotate 'line', 2073
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5080, $P5025
    goto if2168_end4858
  if2168_else4857:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback4869
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  fallback4869:
    set fb_tmp_353, $P5026
    repr_defined $I5006, fb_tmp_353
    unless $I5006 goto if2173_else4867 
    set $P5028, fb_tmp_353["twigil"]
    set $P5030, $P5028
    goto if2173_end4868
  if2173_else4867:
    null $P5029
    set $P5030, $P5029
  if2173_end4868:
    unless_null $P5030, vivi_21744870
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5030, $P5031
  vivi_21744870:
    set $S5002, $P5030
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2172_else4865 
    .const 'Sub' $P5032 = 'cuid_460_1381944288.90674' 
    capture_lex $P5032
    $P5033 = $P5032()
    set $P5079, $P5033
    goto if2172_end4866
  if2172_else4865:
    find_lex $P5034, "$/"
    unless_null $P5034, fallback4883
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  fallback4883:
    set fb_tmp_356, $P5034
    repr_defined $I5008, fb_tmp_356
    unless $I5008 goto if2180_else4881 
    set $P5036, fb_tmp_356["twigil"]
    set $P5038, $P5036
    goto if2180_end4882
  if2180_else4881:
    null $P5037
    set $P5038, $P5037
  if2180_end4882:
    unless_null $P5038, vivi_21814884
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5038, $P5039
  vivi_21814884:
    set $S5003, $P5038
    iseq $I5007, $S5003, "!"
    unless $I5007 goto if2179_else4879 
    .const 'Sub' $P5040 = 'cuid_464_1381944288.90674' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5078, $P5041
    goto if2179_end4880
  if2179_else4879:
    find_lex $P5042, "$/"
    unless_null $P5042, fallback4933
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5042, $P5043
  fallback4933:
    set fb_tmp_363, $P5042
    repr_defined $I5009, fb_tmp_363
    unless $I5009 goto if2206_else4931 
    set $P5044, fb_tmp_363["semilist"]
    set $P5046, $P5044
    goto if2206_end4932
  if2206_else4931:
    null $P5045
    set $P5046, $P5045
  if2206_end4932:
    unless_null $P5046, vivi_22074934
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5046, $P5047
  vivi_22074934:
    unless $P5046 goto if2205_else4929 
    .const 'Sub' $P5048 = 'cuid_465_1381944288.90674' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5077, $P5049
    goto if2205_end4930
  if2205_else4929:
.annotate 'line', 2130
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback4953
    nqp_get_sc_object $P5052, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5051, $P5052
    set fb_tmp_367, $P5051
    repr_defined $I5010, fb_tmp_367
    unless $I5010 goto if2217_else4954 
    set $P5053, fb_tmp_367["$W"]
    set $P5055, $P5053
    goto if2217_end4955
  if2217_else4954:
    null $P5054
    set $P5055, $P5054
  if2217_end4955:
    unless_null $P5055, vivi_22184956
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5055, $P5056
  vivi_22184956:
    unless_null $P5055, vivi_22194957
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_22194957:
    set $P5050, $P5055
  fallback4953:
    set fb_tmp_368, $P101
    repr_defined $I5011, fb_tmp_368
    unless $I5011 goto if2220_else4958 
    set $P5058, fb_tmp_368[0]
    set $P5060, $P5058
    goto if2220_end4959
  if2220_else4958:
    null $P5059
    set $P5060, $P5059
  if2220_end4959:
    unless_null $P5060, vivi_22214960
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5060, $P5061
  vivi_22214960:
    set $S5004, $P5060
    $P5062 = $P5050."is_package"($S5004)
    unless $P5062 goto if2216_else4951 
.annotate 'line', 2131
    find_lex $P5063, "$/"
    $P5064 = "&lexical_package_lookup"($P101, $P5063)
    store_lex "$past", $P5064
.annotate 'line', 2132
    find_lex $P5065, "$past"
    find_lex $P5066, "$/"
    unless_null $P5066, fallback4963
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5066, $P5067
  fallback4963:
    set fb_tmp_369, $P5066
    repr_defined $I5012, fb_tmp_369
    unless $I5012 goto if2222_else4961 
    set $P5068, fb_tmp_369["sigil"]
    set $P5070, $P5068
    goto if2222_end4962
  if2222_else4961:
    null $P5069
    set $P5070, $P5069
  if2222_end4962:
    unless_null $P5070, vivi_22234964
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5070, $P5071
  vivi_22234964:
    $P5072 = "&default_for"($P5070)
    $P5073 = $P5065."fallback"($P5072)
    set $P5076, $P5073
    goto if2216_end4952
  if2216_else4951:
    .const 'Sub' $P5074 = 'cuid_466_1381944288.90674' 
    capture_lex $P5074
    $P5075 = $P5074()
    set $P5076, $P5075
  if2216_end4952:
    set $P5077, $P5076
  if2205_end4930:
    set $P5078, $P5077
  if2179_end4880:
    set $P5079, $P5078
  if2172_end4866:
    set $P5080, $P5079
  if2168_end4858:
    .return ($P5080) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1381944288.90674") :anon :lex :outer("cuid_461_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2075
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2076
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2078
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback4873
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  fallback4873:
    set fb_tmp_354, $P5005
    repr_defined $I5001, fb_tmp_354
    unless $I5001 goto if2175_else4871 
    set $P5007, fb_tmp_354["sigil"]
    set $P5009, $P5007
    goto if2175_end4872
  if2175_else4871:
    null $P5008
    set $P5009, $P5008
  if2175_end4872:
    unless_null $P5009, vivi_21764874
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_21764874:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback4877
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  fallback4877:
    set fb_tmp_355, $P5011
    repr_defined $I5002, fb_tmp_355
    unless $I5002 goto if2177_else4875 
    set $P5013, fb_tmp_355["desigilname"]
    set $P5015, $P5013
    goto if2177_end4876
  if2177_else4875:
    null $P5014
    set $P5015, $P5014
  if2177_end4876:
    unless_null $P5015, vivi_21784878
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_21784878:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2079
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2081
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2083
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 84
.annotate 'line', 2084
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1381944288.90674") :anon :lex :outer("cuid_461_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2088
    .const 'Sub' $P5052 = 'cuid_463_1381944288.90674' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2089
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback4887
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5007, $P5008
    set fb_tmp_357, $P5007
    repr_defined $I5002, fb_tmp_357
    unless $I5002 goto if2183_else4888 
    set $P5009, fb_tmp_357["$PKGDECL"]
    set $P5011, $P5009
    goto if2183_end4889
  if2183_else4888:
    null $P5010
    set $P5011, $P5010
  if2183_end4889:
    unless_null $P5011, vivi_21844890
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_21844890:
    unless_null $P5011, vivi_21854891
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_21854891:
    set $P5006, $P5011
  fallback4887:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2182_else4885 
.annotate 'line', 2091
.annotate 'line', 2092
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2093
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback4892
    nqp_get_sc_object $P5018, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5017, $P5018
    set fb_tmp_358, $P5017
    repr_defined $I5003, fb_tmp_358
    unless $I5003 goto if2186_else4893 
    set $P5019, fb_tmp_358["$PACKAGE"]
    set $P5021, $P5019
    goto if2186_end4894
  if2186_else4893:
    null $P5020
    set $P5021, $P5020
  if2186_end4894:
    unless_null $P5021, vivi_21874895
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_21874895:
    unless_null $P5021, vivi_21884896
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_21884896:
    set $P5016, $P5021
  fallback4892:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2182_end4886
  if2182_else4885:
.annotate 'line', 2095
.annotate 'line', 2096
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback4897
    nqp_get_sc_object $P5028, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5027, $P5028
    set fb_tmp_359, $P5027
    repr_defined $I5004, fb_tmp_359
    unless $I5004 goto if2189_else4898 
    set $P5029, fb_tmp_359["$PACKAGE"]
    set $P5031, $P5029
    goto if2189_end4899
  if2189_else4898:
    null $P5030
    set $P5031, $P5030
  if2189_end4899:
    unless_null $P5031, vivi_21904900
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_21904900:
    unless_null $P5031, vivi_21914901
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_21914901:
    set $P5026, $P5031
  fallback4897:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2182_end4886:
.annotate 'line', 2098
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
.annotate 'line', 2100
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2101
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback4904
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5042, $P5043
    set fb_tmp_360, $P5042
    repr_defined $I5005, fb_tmp_360
    unless $I5005 goto if2193_else4905 
    set $P5044, fb_tmp_360["$IN_DECL"]
    set $P5046, $P5044
    goto if2193_end4906
  if2193_else4905:
    null $P5045
    set $P5046, $P5045
  if2193_end4906:
    unless_null $P5046, vivi_21944907
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5046, $P5047
  vivi_21944907:
    unless_null $P5046, vivi_21954908
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_21954908:
    set $P5041, $P5046
  fallback4904:
    set $P5051, $P5041
    if $P5041 goto unless2192_end4903 
    .const 'Sub' $P5049 = 'cuid_463_1381944288.90674' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2192_end4903:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1381944288.90674") :anon :lex :outer("cuid_464_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2106
    .const 'Sub' $P5036 = 'cuid_462_1381944288.90674' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2108
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback4909
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5007, $P5008
    set fb_tmp_361, $P5007
    repr_defined $I5001, fb_tmp_361
    unless $I5001 goto if2196_else4910 
    set $P5009, fb_tmp_361["$PACKAGE"]
    set $P5011, $P5009
    goto if2196_end4911
  if2196_else4910:
    null $P5010
    set $P5011, $P5010
  if2196_end4911:
    unless_null $P5011, vivi_21974912
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_21974912:
    unless_null $P5011, vivi_21984913
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_21984913:
    set $P5006, $P5011
  fallback4909:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback4914
    nqp_get_sc_object $P5016, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5015, $P5016
    set fb_tmp_362, $P5015
    repr_defined $I5002, fb_tmp_362
    unless $I5002 goto if2199_else4915 
    set $P5017, fb_tmp_362["$PACKAGE"]
    set $P5019, $P5017
    goto if2199_end4916
  if2199_else4915:
    null $P5018
    set $P5019, $P5018
  if2199_end4916:
    unless_null $P5019, vivi_22004917
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_22004917:
    unless_null $P5019, vivi_22014918
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_22014918:
    set $P5014, $P5019
  fallback4914:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers4921
    push_eh $P5024
  for_next4922:
    unless $P5004, for_done4924
    shift $P5025, $P5004
  for_redo4923:
    .const 'Sub' $P5023 = 'cuid_462_1381944288.90674' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next4922
  for_handlers4921:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next4922
    eq $P5024, .CONTROL_LOOP_REDO, for_redo4923
  for_done4924:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2203_else4925 
.annotate 'line', 2114
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2204_end4928 
.annotate 'line', 2115
.annotate 'line', 2116
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2204_end4928:
    set $P5035, $P5029
    goto if2203_end4926
  if2203_else4925:
.annotate 'line', 2119
.annotate 'line', 2120
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2203_end4926:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1381944288.90674") :anon :lex :outer("cuid_463_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2108
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2109
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2202_end4920 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2202_end4920:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1381944288.90674") :anon :lex :outer("cuid_461_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2124
    .lex "$name", $P101 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4939
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback4939:
    set fb_tmp_364, $P5002
    repr_defined $I5002, fb_tmp_364
    unless $I5002 goto if2209_else4937 
    set $P5004, fb_tmp_364["sigil"]
    set $P5006, $P5004
    goto if2209_end4938
  if2209_else4937:
    null $P5005
    set $P5006, $P5005
  if2209_end4938:
    unless_null $P5006, vivi_22104940
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_22104940:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2208_else4935 
    set $S5004, "list"
    goto if2208_end4936
  if2208_else4935:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4945
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  fallback4945:
    set fb_tmp_365, $P5008
    repr_defined $I5004, fb_tmp_365
    unless $I5004 goto if2212_else4943 
    set $P5010, fb_tmp_365["sigil"]
    set $P5012, $P5010
    goto if2212_end4944
  if2212_else4943:
    null $P5011
    set $P5012, $P5011
  if2212_end4944:
    unless_null $P5012, vivi_22134946
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_22134946:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2211_else4941 
    set $S5003, "hash"
    goto if2211_end4942
  if2211_else4941:
    set $S5003, "item"
  if2211_end4942:
    set $S5004, $S5003
  if2208_end4936:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2128
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    find_lex $P5016, "$/"
    unless_null $P5016, fallback4949
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  fallback4949:
    set fb_tmp_366, $P5016
    repr_defined $I5005, fb_tmp_366
    unless $I5005 goto if2214_else4947 
    set $P5018, fb_tmp_366["semilist"]
    set $P5020, $P5018
    goto if2214_end4948
  if2214_else4947:
    null $P5019
    set $P5020, $P5019
  if2214_end4948:
    unless_null $P5020, vivi_22154950
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_22154950:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1381944288.90674") :anon :lex :outer("cuid_461_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2134
    .lex "$name", $P101 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2135
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback4977
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5006, $P5007
    set fb_tmp_370, $P5006
    repr_defined $I5002, fb_tmp_370
    unless $I5002 goto if2230_else4978 
    set $P5008, fb_tmp_370["$IN_DECL"]
    set $P5010, $P5008
    goto if2230_end4979
  if2230_else4978:
    null $P5009
    set $P5010, $P5009
  if2230_end4979:
    unless_null $P5010, vivi_22314980
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_22314980:
    unless_null $P5010, vivi_22324981
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22324981:
    set $P5005, $P5010
  fallback4977:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2229_end4976 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2229_end4976:
    set $I5006, $I5004
    if $I5004 goto unless2228_end4974 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2228_end4974:
    set $I5008, $I5006
    if $I5006 goto unless2227_end4972 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2227_end4972:
    set $I5011, $I5008
    if $I5008 goto unless2226_end4970 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback4984
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  fallback4984:
    set fb_tmp_371, $P5013
    repr_defined $I5010, fb_tmp_371
    unless $I5010 goto if2233_else4982 
    set $P5015, fb_tmp_371["twigil"]
    set $P5017, $P5015
    goto if2233_end4983
  if2233_else4982:
    null $P5016
    set $P5017, $P5016
  if2233_end4983:
    unless_null $P5017, vivi_22344985
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_22344985:
    set $S5006, $P5017
    iseq $I5009, $S5006, "?"
    set $I5011, $I5009
  unless2226_end4970:
    box $P5029, $I5011
    set $P5028, $P5029
    if $I5011 goto unless2225_end4968 
.annotate 'line', 2137
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback4986
    nqp_get_sc_object $P5021, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5020, $P5021
    set fb_tmp_372, $P5020
    repr_defined $I5012, fb_tmp_372
    unless $I5012 goto if2235_else4987 
    set $P5022, fb_tmp_372["$W"]
    set $P5024, $P5022
    goto if2235_end4988
  if2235_else4987:
    null $P5023
    set $P5024, $P5023
  if2235_end4988:
    unless_null $P5024, vivi_22364989
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_22364989:
    unless_null $P5024, vivi_22374990
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_22374990:
    set $P5019, $P5024
  fallback4986:
    $P5027 = $P5019."is_lexical"($P101)
    set $P5028, $P5027
  unless2225_end4968:
    unless $P5028 goto if2224_else4965 
.annotate 'line', 2138
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5031 = $P5030."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5031
    set $P5035, $P5031
    goto if2224_end4966
  if2224_else4965:
.annotate 'line', 2140
.annotate 'line', 2141
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5034 = $P5033."panic"($S5007)
    set $P5035, $P5034
  if2224_end4966:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_279_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2148
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_373 
    unless_null _lex_param_1, fallback4993
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4993:
    set fb_tmp_373, _lex_param_1
    repr_defined $I5001, fb_tmp_373
    unless $I5001 goto if2238_else4991 
    set $P5002, fb_tmp_373["package_def"]
    set $P5004, $P5002
    goto if2238_end4992
  if2238_else4991:
    null $P5003
    set $P5004, $P5003
  if2238_end4992:
    unless_null $P5004, vivi_22394994
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_22394994:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_280_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2149
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_374 
    unless_null _lex_param_1, fallback4997
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback4997:
    set fb_tmp_374, _lex_param_1
    repr_defined $I5001, fb_tmp_374
    unless $I5001 goto if2240_else4995 
    set $P5002, fb_tmp_374["package_def"]
    set $P5004, $P5002
    goto if2240_end4996
  if2240_else4995:
    null $P5003
    set $P5004, $P5003
  if2240_end4996:
    unless_null $P5004, vivi_22414998
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_22414998:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_281_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2150
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_375 
    unless_null _lex_param_1, fallback5001
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5001:
    set fb_tmp_375, _lex_param_1
    repr_defined $I5001, fb_tmp_375
    unless $I5001 goto if2242_else4999 
    set $P5002, fb_tmp_375["package_def"]
    set $P5004, $P5002
    goto if2242_end5000
  if2242_else4999:
    null $P5003
    set $P5004, $P5003
  if2242_end5000:
    unless_null $P5004, vivi_22435002
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_22435002:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_282_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2151
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_376 
    unless_null _lex_param_1, fallback5005
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5005:
    set fb_tmp_376, _lex_param_1
    repr_defined $I5001, fb_tmp_376
    unless $I5001 goto if2244_else5003 
    set $P5002, fb_tmp_376["package_def"]
    set $P5004, $P5002
    goto if2244_end5004
  if2244_else5003:
    null $P5003
    set $P5004, $P5003
  if2244_end5004:
    unless_null $P5004, vivi_22455006
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_22455006:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_283_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_377 
    unless_null _lex_param_1, fallback5009
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5009:
    set fb_tmp_377, _lex_param_1
    repr_defined $I5001, fb_tmp_377
    unless $I5001 goto if2246_else5007 
    set $P5002, fb_tmp_377["package_def"]
    set $P5004, $P5002
    goto if2246_end5008
  if2246_else5007:
    null $P5003
    set $P5004, $P5003
  if2246_end5008:
    unless_null $P5004, vivi_22475010
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_22475010:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_284_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2153
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_378 
    unless_null _lex_param_1, fallback5013
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5013:
    set fb_tmp_378, _lex_param_1
    repr_defined $I5001, fb_tmp_378
    unless $I5001 goto if2248_else5011 
    set $P5002, fb_tmp_378["package_def"]
    set $P5004, $P5002
    goto if2248_end5012
  if2248_else5011:
    null $P5003
    set $P5004, $P5003
  if2248_end5012:
    unless_null $P5004, vivi_22495014
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_22495014:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_285_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2155
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2158
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5015
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_379, $P5004
    repr_defined $I5001, fb_tmp_379
    unless $I5001 goto if2250_else5016 
    set $P5006, fb_tmp_379["$W"]
    set $P5008, $P5006
    goto if2250_end5017
  if2250_else5016:
    null $P5007
    set $P5008, $P5007
  if2250_end5017:
    unless_null $P5008, vivi_22515018
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_22515018:
    unless_null $P5008, vivi_22525019
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22525019:
    set $P5003, $P5008
  fallback5015:
    unless_null _lex_param_1, fallback5024
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5011
  fallback5024:
    set fb_tmp_381, _lex_param_1
    repr_defined $I5003, fb_tmp_381
    unless $I5003 goto if2254_else5022 
    set $P5012, fb_tmp_381["metaclass"]
    set $P5014, $P5012
    goto if2254_end5023
  if2254_else5022:
    null $P5013
    set $P5014, $P5013
  if2254_end5023:
    unless_null $P5014, vivi_22555025
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_22555025:
    set fb_tmp_380, $P5014
    repr_defined $I5002, fb_tmp_380
    unless $I5002 goto if2253_else5020 
    set $P5016, fb_tmp_380["identifier"]
    set $P5018, $P5016
    goto if2253_end5021
  if2253_else5020:
    null $P5017
    set $P5018, $P5017
  if2253_end5021:
    unless_null $P5018, vivi_22565026
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_22565026:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2159
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5027
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set fb_tmp_382, $P5022
    repr_defined $I5004, fb_tmp_382
    unless $I5004 goto if2257_else5028 
    set $P5024, fb_tmp_382["$W"]
    set $P5026, $P5024
    goto if2257_end5029
  if2257_else5028:
    null $P5025
    set $P5026, $P5025
  if2257_end5029:
    unless_null $P5026, vivi_22585030
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_22585030:
    unless_null $P5026, vivi_22595031
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22595031:
    set $P5021, $P5026
  fallback5027:
    unless_null _lex_param_1, fallback5034
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5029
  fallback5034:
    set fb_tmp_383, _lex_param_1
    repr_defined $I5005, fb_tmp_383
    unless $I5005 goto if2260_else5032 
    set $P5030, fb_tmp_383["name"]
    set $P5032, $P5030
    goto if2260_end5033
  if2260_else5032:
    null $P5031
    set $P5032, $P5031
  if2260_end5033:
    unless_null $P5032, vivi_22615035
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5032, $P5033
  vivi_22615035:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5040
    nqp_get_sc_object $P5037, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5036, $P5037
    set fb_tmp_384, $P5036
    repr_defined $I5007, fb_tmp_384
    unless $I5007 goto if2264_else5041 
    set $P5038, fb_tmp_384["$SCOPE"]
    set $P5040, $P5038
    goto if2264_end5042
  if2264_else5041:
    null $P5039
    set $P5040, $P5039
  if2264_end5042:
    unless_null $P5040, vivi_22655043
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5041
  vivi_22655043:
    unless_null $P5040, vivi_22665044
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22665044:
    set $P5035, $P5040
  fallback5040:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2263_end5039 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5045
    nqp_get_sc_object $P5045, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5044, $P5045
    set fb_tmp_385, $P5044
    repr_defined $I5009, fb_tmp_385
    unless $I5009 goto if2267_else5046 
    set $P5046, fb_tmp_385["$SCOPE"]
    set $P5048, $P5046
    goto if2267_end5047
  if2267_else5046:
    null $P5047
    set $P5048, $P5047
  if2267_end5047:
    unless_null $P5048, vivi_22685048
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5048, $P5049
  vivi_22685048:
    unless_null $P5048, vivi_22695049
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22695049:
    set $P5043, $P5048
  fallback5045:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2263_end5039:
    unless $I5010 goto if2262_else5036 
.annotate 'line', 2162
.annotate 'line', 2163
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5050
    nqp_get_sc_object $P5053, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5052, $P5053
    set fb_tmp_386, $P5052
    repr_defined $I5011, fb_tmp_386
    unless $I5011 goto if2270_else5051 
    set $P5054, fb_tmp_386["$W"]
    set $P5056, $P5054
    goto if2270_end5052
  if2270_else5051:
    null $P5055
    set $P5056, $P5055
  if2270_end5052:
    unless_null $P5056, vivi_22715053
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5056, $P5057
  vivi_22715053:
    unless_null $P5056, vivi_22725054
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22725054:
    set $P5051, $P5056
  fallback5050:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5055
    nqp_get_sc_object $P5061, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5060, $P5061
    set fb_tmp_387, $P5060
    repr_defined $I5012, fb_tmp_387
    unless $I5012 goto if2273_else5056 
    set $P5062, fb_tmp_387["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2273_end5057
  if2273_else5056:
    null $P5063
    set $P5064, $P5063
  if2273_end5057:
    unless_null $P5064, vivi_22745058
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5064, $P5065
  vivi_22745058:
    unless_null $P5064, vivi_22755059
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_22755059:
    set $P5059, $P5064
  fallback5055:
    unless_null _lex_param_1, fallback5064
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5067
  fallback5064:
    set fb_tmp_389, _lex_param_1
    repr_defined $I5014, fb_tmp_389
    unless $I5014 goto if2277_else5062 
    set $P5068, fb_tmp_389["name"]
    set $P5070, $P5068
    goto if2277_end5063
  if2277_else5062:
    null $P5069
    set $P5070, $P5069
  if2277_end5063:
    unless_null $P5070, vivi_22785065
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5070, $P5071
  vivi_22785065:
    set fb_tmp_388, $P5070
    repr_defined $I5013, fb_tmp_388
    unless $I5013 goto if2276_else5060 
    set $P5072, fb_tmp_388["identifier"]
    set $P5074, $P5072
    goto if2276_end5061
  if2276_else5060:
    null $P5073
    set $P5074, $P5073
  if2276_end5061:
    unless_null $P5074, vivi_22795066
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5074, $P5075
  vivi_22795066:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5073
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5076
  fallback5073:
    set fb_tmp_391, _lex_param_1
    repr_defined $I5017, fb_tmp_391
    unless $I5017 goto if2282_else5071 
    set $P5077, fb_tmp_391["name"]
    set $P5079, $P5077
    goto if2282_end5072
  if2282_else5071:
    null $P5078
    set $P5079, $P5078
  if2282_end5072:
    unless_null $P5079, vivi_22835074
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5079, $P5080
  vivi_22835074:
    set fb_tmp_390, $P5079
    repr_defined $I5016, fb_tmp_390
    unless $I5016 goto if2281_else5069 
    set $P5081, fb_tmp_390["identifier"]
    set $P5083, $P5081
    goto if2281_end5070
  if2281_else5069:
    null $P5082
    set $P5083, $P5082
  if2281_end5070:
    unless_null $P5083, vivi_22845075
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5083, $P5084
  vivi_22845075:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2280_end5068 
.annotate 'line', 2164
.annotate 'line', 2165
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5076
    nqp_get_sc_object $P5087, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5086, $P5087
    set fb_tmp_392, $P5086
    repr_defined $I5018, fb_tmp_392
    unless $I5018 goto if2285_else5077 
    set $P5088, fb_tmp_392["$W"]
    set $P5090, $P5088
    goto if2285_end5078
  if2285_else5077:
    null $P5089
    set $P5090, $P5089
  if2285_end5078:
    unless_null $P5090, vivi_22865079
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5090, $P5091
  vivi_22865079:
    unless_null $P5090, vivi_22875080
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_22875080:
    set $P5085, $P5090
  fallback5076:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5081
    nqp_get_sc_object $P5095, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5094, $P5095
    set fb_tmp_393, $P5094
    repr_defined $I5019, fb_tmp_393
    unless $I5019 goto if2288_else5082 
    set $P5096, fb_tmp_393["$W"]
    set $P5098, $P5096
    goto if2288_end5083
  if2288_else5082:
    null $P5097
    set $P5098, $P5097
  if2288_end5083:
    unless_null $P5098, vivi_22895084
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5098, $P5099
  vivi_22895084:
    unless_null $P5098, vivi_22905085
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_22905085:
    set $P5093, $P5098
  fallback5081:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5092
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5102
  fallback5092:
    set fb_tmp_396, _lex_param_1
    repr_defined $I5022, fb_tmp_396
    unless $I5022 goto if2293_else5090 
    set $P5103, fb_tmp_396["name"]
    set $P5105, $P5103
    goto if2293_end5091
  if2293_else5090:
    null $P5104
    set $P5105, $P5104
  if2293_end5091:
    unless_null $P5105, vivi_22945093
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5105, $P5106
  vivi_22945093:
    set fb_tmp_395, $P5105
    repr_defined $I5021, fb_tmp_395
    unless $I5021 goto if2292_else5088 
    set $P5107, fb_tmp_395["identifier"]
    set $P5109, $P5107
    goto if2292_end5089
  if2292_else5088:
    null $P5108
    set $P5109, $P5108
  if2292_end5089:
    unless_null $P5109, vivi_22955094
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5109, $P5110
  vivi_22955094:
    set fb_tmp_394, $P5109
    repr_defined $I5020, fb_tmp_394
    unless $I5020 goto if2291_else5086 
    set $P5111, fb_tmp_394[0]
    set $P5113, $P5111
    goto if2291_end5087
  if2291_else5086:
    null $P5112
    set $P5113, $P5112
  if2291_end5087:
    unless_null $P5113, vivi_22965095
    nqp_get_sc_object $P5114, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5113, $P5114
  vivi_22965095:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2280_end5068:
    goto if2262_end5037
  if2262_else5036:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5098
    nqp_get_sc_object $P5120, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5119, $P5120
    set fb_tmp_397, $P5119
    repr_defined $I5024, fb_tmp_397
    unless $I5024 goto if2298_else5099 
    set $P5121, fb_tmp_397["$SCOPE"]
    set $P5123, $P5121
    goto if2298_end5100
  if2298_else5099:
    null $P5122
    set $P5123, $P5122
  if2298_end5100:
    unless_null $P5123, vivi_22995101
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5123, $P5124
  vivi_22995101:
    unless_null $P5123, vivi_23005102
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_23005102:
    set $P5118, $P5123
  fallback5098:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2297_else5096 
.annotate 'line', 2168
    unless_null _lex_param_1, fallback5109
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5126
  fallback5109:
    set fb_tmp_399, _lex_param_1
    repr_defined $I5027, fb_tmp_399
    unless $I5027 goto if2303_else5107 
    set $P5127, fb_tmp_399["name"]
    set $P5129, $P5127
    goto if2303_end5108
  if2303_else5107:
    null $P5128
    set $P5129, $P5128
  if2303_end5108:
    unless_null $P5129, vivi_23045110
    nqp_get_sc_object $P5130, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5129, $P5130
  vivi_23045110:
    set fb_tmp_398, $P5129
    repr_defined $I5026, fb_tmp_398
    unless $I5026 goto if2302_else5105 
    set $P5131, fb_tmp_398["identifier"]
    set $P5133, $P5131
    goto if2302_end5106
  if2302_else5105:
    null $P5132
    set $P5133, $P5132
  if2302_end5106:
    unless_null $P5133, vivi_23055111
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5133, $P5134
  vivi_23055111:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2301_end5104 
.annotate 'line', 2169
.annotate 'line', 2170
    unless_null _lex_param_1, fallback5114
    nqp_get_sc_object $P5135, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5135
  fallback5114:
    set fb_tmp_400, _lex_param_1
    repr_defined $I5028, fb_tmp_400
    unless $I5028 goto if2306_else5112 
    set $P5136, fb_tmp_400["name"]
    set $P5138, $P5136
    goto if2306_end5113
  if2306_else5112:
    null $P5137
    set $P5138, $P5137
  if2306_end5113:
    unless_null $P5138, vivi_23075115
    nqp_get_sc_object $P5139, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5138, $P5139
  vivi_23075115:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2301_end5104:
.annotate 'line', 2172
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5116
    nqp_get_sc_object $P5144, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5143, $P5144
    set fb_tmp_401, $P5143
    repr_defined $I5029, fb_tmp_401
    unless $I5029 goto if2308_else5117 
    set $P5145, fb_tmp_401["$W"]
    set $P5147, $P5145
    goto if2308_end5118
  if2308_else5117:
    null $P5146
    set $P5147, $P5146
  if2308_end5118:
    unless_null $P5147, vivi_23095119
    nqp_get_sc_object $P5148, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5147, $P5148
  vivi_23095119:
    unless_null $P5147, vivi_23105120
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23105120:
    set $P5142, $P5147
  fallback5116:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5121
    nqp_get_sc_object $P5152, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5151, $P5152
    set fb_tmp_402, $P5151
    repr_defined $I5030, fb_tmp_402
    unless $I5030 goto if2311_else5122 
    set $P5153, fb_tmp_402["$W"]
    set $P5155, $P5153
    goto if2311_end5123
  if2311_else5122:
    null $P5154
    set $P5155, $P5154
  if2311_end5123:
    unless_null $P5155, vivi_23125124
    nqp_get_sc_object $P5156, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5155, $P5156
  vivi_23125124:
    unless_null $P5155, vivi_23135125
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23135125:
    set $P5150, $P5155
  fallback5121:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5132
    nqp_get_sc_object $P5159, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5159
  fallback5132:
    set fb_tmp_405, _lex_param_1
    repr_defined $I5033, fb_tmp_405
    unless $I5033 goto if2316_else5130 
    set $P5160, fb_tmp_405["name"]
    set $P5162, $P5160
    goto if2316_end5131
  if2316_else5130:
    null $P5161
    set $P5162, $P5161
  if2316_end5131:
    unless_null $P5162, vivi_23175133
    nqp_get_sc_object $P5163, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5162, $P5163
  vivi_23175133:
    set fb_tmp_404, $P5162
    repr_defined $I5032, fb_tmp_404
    unless $I5032 goto if2315_else5128 
    set $P5164, fb_tmp_404["identifier"]
    set $P5166, $P5164
    goto if2315_end5129
  if2315_else5128:
    null $P5165
    set $P5166, $P5165
  if2315_end5129:
    unless_null $P5166, vivi_23185134
    nqp_get_sc_object $P5167, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5166, $P5167
  vivi_23185134:
    set fb_tmp_403, $P5166
    repr_defined $I5031, fb_tmp_403
    unless $I5031 goto if2314_else5126 
    set $P5168, fb_tmp_403[0]
    set $P5170, $P5168
    goto if2314_end5127
  if2314_else5126:
    null $P5169
    set $P5170, $P5169
  if2314_end5127:
    unless_null $P5170, vivi_23195135
    nqp_get_sc_object $P5171, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5170, $P5171
  vivi_23195135:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2297_end5097
  if2297_else5096:
.annotate 'line', 2174
.annotate 'line', 2175
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5136
    nqp_get_sc_object $P5176, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5175, $P5176
    set fb_tmp_406, $P5175
    repr_defined $I5034, fb_tmp_406
    unless $I5034 goto if2320_else5137 
    set $P5177, fb_tmp_406["$SCOPE"]
    set $P5179, $P5177
    goto if2320_end5138
  if2320_else5137:
    null $P5178
    set $P5179, $P5178
  if2320_end5138:
    unless_null $P5179, vivi_23215139
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5179, $P5180
  vivi_23215139:
    unless_null $P5179, vivi_23225140
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23225140:
    set $P5174, $P5179
  fallback5136:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2297_end5097:
  if2262_end5037:
.annotate 'line', 2178
    nqp_get_sc_object $P5184, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_286_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2181
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5165 = 'cuid_468_1381944288.90674' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_469_1381944288.90674' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_470_1381944288.90674' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_471_1381944288.90674' 
    capture_lex $P5165 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    unless_null _lex_param_1, fallback5145
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback5145:
    set fb_tmp_408, _lex_param_1
    repr_defined $I5002, fb_tmp_408
    unless $I5002 goto if2324_else5143 
    set $P5007, fb_tmp_408["name"]
    set $P5009, $P5007
    goto if2324_end5144
  if2324_else5143:
    null $P5008
    set $P5009, $P5008
  if2324_end5144:
    unless_null $P5009, vivi_23255146
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_23255146:
    set fb_tmp_407, $P5009
    repr_defined $I5001, fb_tmp_407
    unless $I5001 goto if2323_else5141 
    set $P5011, fb_tmp_407["identifier"]
    set $P5013, $P5011
    goto if2323_end5142
  if2323_else5141:
    null $P5012
    set $P5013, $P5012
  if2323_end5142:
    unless_null $P5013, vivi_23265147
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_23265147:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2184
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5150
    nqp_get_sc_object $P5019, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_45, $P5018
    set fb_tmp_410, pkg_viv_tmp_45
    repr_defined $I5004, fb_tmp_410
    unless $I5004 goto if2328_else5151 
    set $P5020, fb_tmp_410["%HOW"]
    set $P5022, $P5020
    goto if2328_end5152
  if2328_else5151:
    null $P5021
    set $P5022, $P5021
  if2328_end5152:
    unless_null $P5022, vivi_23295153
    new $P5023, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23295153:
    unless_null $P5022, vivi_23305154
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23305154:
    set $P5017, $P5022
  fallback5150:
    set fb_tmp_409, $P5017
    repr_defined $I5003, fb_tmp_409
    unless $I5003 goto if2327_else5148 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5155
    nqp_get_sc_object $P5028, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5027, $P5028
    set fb_tmp_411, $P5027
    repr_defined $I5005, fb_tmp_411
    unless $I5005 goto if2331_else5156 
    set $P5029, fb_tmp_411["$PKGDECL"]
    set $P5031, $P5029
    goto if2331_end5157
  if2331_else5156:
    null $P5030
    set $P5031, $P5030
  if2331_end5157:
    unless_null $P5031, vivi_23325158
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_23325158:
    unless_null $P5031, vivi_23335159
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23335159:
    set $P5026, $P5031
  fallback5155:
    set $S5002, $P5026
    set $P5025, fb_tmp_409[$S5002]
    set $P5035, $P5025
    goto if2327_end5149
  if2327_else5148:
    null $P5034
    set $P5035, $P5034
  if2327_end5149:
    unless_null $P5035, vivi_23345160
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5035, $P5036
  vivi_23345160:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5165
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5037
  fallback5165:
    set fb_tmp_412, _lex_param_1
    repr_defined $I5006, fb_tmp_412
    unless $I5006 goto if2336_else5163 
    set $P5038, fb_tmp_412["blockoid"]
    set $P5040, $P5038
    goto if2336_end5164
  if2336_else5163:
    null $P5039
    set $P5040, $P5039
  if2336_end5164:
    unless_null $P5040, vivi_23375166
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5041
  vivi_23375166:
    unless $P5040 goto if2335_else5161 
.annotate 'line', 2189
.annotate 'line', 2190
    unless_null _lex_param_1, fallback5169
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5042
  fallback5169:
    set fb_tmp_413, _lex_param_1
    repr_defined $I5007, fb_tmp_413
    unless $I5007 goto if2338_else5167 
    set $P5043, fb_tmp_413["blockoid"]
    set $P5045, $P5043
    goto if2338_end5168
  if2338_else5167:
    null $P5044
    set $P5045, $P5044
  if2338_end5168:
    unless_null $P5045, vivi_23395170
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  vivi_23395170:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2335_end5162
  if2335_else5161:
.annotate 'line', 2192
.annotate 'line', 2193
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5171
    nqp_get_sc_object $P5050, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5049, $P5050
    set fb_tmp_414, $P5049
    repr_defined $I5008, fb_tmp_414
    unless $I5008 goto if2340_else5172 
    set $P5051, fb_tmp_414["$W"]
    set $P5053, $P5051
    goto if2340_end5173
  if2340_else5172:
    null $P5052
    set $P5053, $P5052
  if2340_end5173:
    unless_null $P5053, vivi_23415174
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5053, $P5054
  vivi_23415174:
    unless_null $P5053, vivi_23425175
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23425175:
    set $P5048, $P5053
  fallback5171:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2194
    unless_null _lex_param_1, fallback5178
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5057
  fallback5178:
    set fb_tmp_415, _lex_param_1
    repr_defined $I5009, fb_tmp_415
    unless $I5009 goto if2343_else5176 
    set $P5058, fb_tmp_415["statementlist"]
    set $P5060, $P5058
    goto if2343_end5177
  if2343_else5176:
    null $P5059
    set $P5060, $P5059
  if2343_end5177:
    unless_null $P5060, vivi_23445179
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5060, $P5061
  vivi_23445179:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2335_end5162:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2346_end5183 
.annotate 'line', 2201
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2346_end5183:
    unless $P5065 goto if2345_else5180 
    .const 'Sub' $P5067 = 'cuid_468_1381944288.90674' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2345_end5181
  if2345_else5180:
.annotate 'line', 2216
.annotate 'line', 2217
    $P5069 = $P104."blocktype"("immediate")
  if2345_end5181:
    unless_null _lex_param_1, fallback5214
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5070
  fallback5214:
    set fb_tmp_421, _lex_param_1
    repr_defined $I5011, fb_tmp_421
    unless $I5011 goto if2361_else5212 
    set $P5071, fb_tmp_421["parent"]
    set $P5073, $P5071
    goto if2361_end5213
  if2361_else5212:
    null $P5072
    set $P5073, $P5072
  if2361_end5213:
    unless_null $P5073, vivi_23625215
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5073, $P5074
  vivi_23625215:
    unless $P5073 goto if2360_else5210 
    .const 'Sub' $P5075 = 'cuid_469_1381944288.90674' 
    capture_lex $P5075
    $P5076 = $P5075()
    goto if2360_end5211
  if2360_else5210:
    can $I5012, $P103, "set_default_parent"
    box $P5080, $I5012
    set $P5079, $P5080
    unless $I5012 goto if2381_end5247 
    .const 'Sub' $P5077 = 'cuid_470_1381944288.90674' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
  if2381_end5247:
  if2360_end5211:
    unless_null _lex_param_1, fallback5274
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5081
  fallback5274:
    set fb_tmp_432, _lex_param_1
    repr_defined $I5013, fb_tmp_432
    unless $I5013 goto if2396_else5272 
    set $P5082, fb_tmp_432["role"]
    set $P5084, $P5082
    goto if2396_end5273
  if2396_else5272:
    null $P5083
    set $P5084, $P5083
  if2396_end5273:
    unless_null $P5084, vivi_23975275
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5084, $P5085
  vivi_23975275:
    unless $P5084 goto if2395_end5271 
.annotate 'line', 2242
    unless_null _lex_param_1, fallback5278
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5089
  fallback5278:
    set fb_tmp_433, _lex_param_1
    repr_defined $I5014, fb_tmp_433
    unless $I5014 goto if2398_else5276 
    set $P5090, fb_tmp_433["role"]
    set $P5092, $P5090
    goto if2398_end5277
  if2398_else5276:
    null $P5091
    set $P5092, $P5091
  if2398_end5277:
    unless_null $P5092, vivi_23995279
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5092, $P5093
  vivi_23995279:
    set $P5086, $P5092
    iter $P5088, $P5092
  for_next5302:
    unless $P5088, for_done5304
    shift $P5095, $P5088
  for_redo5303:
    .const 'Sub' $P5094 = 'cuid_471_1381944288.90674' 
    capture_lex $P5094
    $P5086 = $P5094($P5095)
    goto for_next5302
  for_done5304:
  if2395_end5271:
.annotate 'line', 2260
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback5305
    nqp_get_sc_object $P5098, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5097, $P5098
    set fb_tmp_438, $P5097
    repr_defined $I5015, fb_tmp_438
    unless $I5015 goto if2414_else5306 
    set $P5099, fb_tmp_438["$W"]
    set $P5101, $P5099
    goto if2414_end5307
  if2414_else5306:
    null $P5100
    set $P5101, $P5100
  if2414_end5307:
    unless_null $P5101, vivi_24155308
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5101, $P5102
  vivi_24155308:
    unless_null $P5101, vivi_24165309
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_24165309:
    set $P5096, $P5101
  fallback5305:
    find_dynamic_lex $P5104, "$*PACKAGE"
    unless_null $P5104, fallback5310
    nqp_get_sc_object $P5106, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5105, $P5106
    set fb_tmp_439, $P5105
    repr_defined $I5016, fb_tmp_439
    unless $I5016 goto if2417_else5311 
    set $P5107, fb_tmp_439["$PACKAGE"]
    set $P5109, $P5107
    goto if2417_end5312
  if2417_else5311:
    null $P5108
    set $P5109, $P5108
  if2417_end5312:
    unless_null $P5109, vivi_24185313
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5109, $P5110
  vivi_24185313:
    unless_null $P5109, vivi_24195314
    die "Contextual $*PACKAGE not found"
    box $P5111, "Contextual $*PACKAGE not found"
    set $P5109, $P5111
  vivi_24195314:
    set $P5104, $P5109
  fallback5310:
    $P5096."pkg_compose"($P5104)
    find_dynamic_lex $P5112, "$*PKGDECL"
    unless_null $P5112, fallback5319
    nqp_get_sc_object $P5114, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5113, $P5114
    set fb_tmp_440, $P5113
    repr_defined $I5018, fb_tmp_440
    unless $I5018 goto if2422_else5320 
    set $P5115, fb_tmp_440["$PKGDECL"]
    set $P5117, $P5115
    goto if2422_end5321
  if2422_else5320:
    null $P5116
    set $P5117, $P5116
  if2422_end5321:
    unless_null $P5117, vivi_24235322
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5117, $P5118
  vivi_24235322:
    unless_null $P5117, vivi_24245323
    die "Contextual $*PKGDECL not found"
    box $P5119, "Contextual $*PKGDECL not found"
    set $P5117, $P5119
  vivi_24245323:
    set $P5112, $P5117
  fallback5319:
    set $S5003, $P5112
    iseq $I5017, $S5003, "grammar"
    set $I5021, $I5017
    unless $I5017 goto if2421_end5318 
    find_dynamic_lex $P5120, "$*PACKAGE"
    unless_null $P5120, fallback5324
    nqp_get_sc_object $P5122, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5121, $P5122
    set fb_tmp_441, $P5121
    repr_defined $I5020, fb_tmp_441
    unless $I5020 goto if2425_else5325 
    set $P5123, fb_tmp_441["$PACKAGE"]
    set $P5125, $P5123
    goto if2425_end5326
  if2425_else5325:
    null $P5124
    set $P5125, $P5124
  if2425_end5326:
    unless_null $P5125, vivi_24265327
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5125, $P5126
  vivi_24265327:
    unless_null $P5125, vivi_24275328
    die "Contextual $*PACKAGE not found"
    box $P5127, "Contextual $*PACKAGE not found"
    set $P5125, $P5127
  vivi_24275328:
    set $P5120, $P5125
  fallback5324:
    can $I5019, $P5120, "!precompute_nfas"
    set $I5021, $I5019
  if2421_end5318:
    unless $I5021 goto if2420_end5316 
.annotate 'line', 2263
.annotate 'line', 2264
    find_dynamic_lex $P5128, "$*PACKAGE"
    unless_null $P5128, fallback5329
    nqp_get_sc_object $P5130, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5129, $P5130
    set fb_tmp_442, $P5129
    repr_defined $I5022, fb_tmp_442
    unless $I5022 goto if2428_else5330 
    set $P5131, fb_tmp_442["$PACKAGE"]
    set $P5133, $P5131
    goto if2428_end5331
  if2428_else5330:
    null $P5132
    set $P5133, $P5132
  if2428_end5331:
    unless_null $P5133, vivi_24295332
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5133, $P5134
  vivi_24295332:
    unless_null $P5133, vivi_24305333
    die "Contextual $*PACKAGE not found"
    box $P5135, "Contextual $*PACKAGE not found"
    set $P5133, $P5135
  vivi_24305333:
    set $P5128, $P5133
  fallback5329:
    $P5136 = $P5128."!precompute_nfas"()
  if2420_end5316:
    unless_null _lex_param_1, fallback5338
    nqp_get_sc_object $P5137, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5137
  fallback5338:
    set fb_tmp_443, _lex_param_1
    repr_defined $I5023, fb_tmp_443
    unless $I5023 goto if2432_else5336 
    set $P5138, fb_tmp_443["export"]
    set $P5140, $P5138
    goto if2432_end5337
  if2432_else5336:
    null $P5139
    set $P5140, $P5139
  if2432_end5337:
    unless_null $P5140, vivi_24335339
    nqp_get_sc_object $P5141, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5140, $P5141
  vivi_24335339:
    unless $P5140 goto if2431_end5335 
.annotate 'line', 2268
    find_dynamic_lex $P5144, "$*EXPORT"
    unless_null $P5144, fallback5342
    nqp_get_sc_object $P5146, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5145, $P5146
    set fb_tmp_445, $P5145
    repr_defined $I5025, fb_tmp_445
    unless $I5025 goto if2435_else5343 
    set $P5147, fb_tmp_445["$EXPORT"]
    set $P5149, $P5147
    goto if2435_end5344
  if2435_else5343:
    null $P5148
    set $P5149, $P5148
  if2435_end5344:
    unless_null $P5149, vivi_24365345
    nqp_get_sc_object $P5150, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5149, $P5150
  vivi_24365345:
    unless_null $P5149, vivi_24375346
    die "Contextual $*EXPORT not found"
    box $P5151, "Contextual $*EXPORT not found"
    set $P5149, $P5151
  vivi_24375346:
    set $P5144, $P5149
  fallback5342:
    get_who $P5143, $P5144
    set fb_tmp_444, $P5143
    repr_defined $I5024, fb_tmp_444
    unless $I5024 goto if2434_else5340 
    set $P5152, fb_tmp_444["DEFAULT"]
    set $P5154, $P5152
    goto if2434_end5341
  if2434_else5340:
    null $P5153
    set $P5154, $P5153
  if2434_end5341:
    unless_null $P5154, vivi_24385347
    nqp_get_sc_object $P5155, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5154, $P5155
  vivi_24385347:
    get_who $P5142, $P5154
    set $S5004, $P102
    find_dynamic_lex $P5156, "$*PACKAGE"
    unless_null $P5156, fallback5348
    nqp_get_sc_object $P5158, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5157, $P5158
    set fb_tmp_446, $P5157
    repr_defined $I5026, fb_tmp_446
    unless $I5026 goto if2439_else5349 
    set $P5159, fb_tmp_446["$PACKAGE"]
    set $P5161, $P5159
    goto if2439_end5350
  if2439_else5349:
    null $P5160
    set $P5161, $P5160
  if2439_end5350:
    unless_null $P5161, vivi_24405351
    nqp_get_sc_object $P5162, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5161, $P5162
  vivi_24405351:
    unless_null $P5161, vivi_24415352
    die "Contextual $*PACKAGE not found"
    box $P5163, "Contextual $*PACKAGE not found"
    set $P5161, $P5163
  vivi_24415352:
    set $P5156, $P5161
  fallback5348:
    set $P5142[$S5004], $P5156
  if2431_end5335:
.annotate 'line', 2272
    $P5164 = _lex_param_1."!make"($P104)
    .return ($P5164) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1381944288.90674") :anon :lex :outer("cuid_286_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2201
    .const 'Sub' $P5051 = 'cuid_467_1381944288.90674' 
    capture_lex $P5051 
    .lex "$params", $P101 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2202
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration_static")
.annotate 'line', 2203
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 2204
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5188
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  fallback5188:
    set fb_tmp_416, $P5007
    repr_defined $I5001, fb_tmp_416
    unless $I5001 goto if2348_else5186 
    set $P5009, fb_tmp_416["role_params"]
    set $P5011, $P5009
    goto if2348_end5187
  if2348_else5186:
    null $P5010
    set $P5011, $P5010
  if2348_end5187:
    unless_null $P5011, vivi_23495189
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_23495189:
    unless $P5011 goto if2347_end5185 
.annotate 'line', 2206
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5194
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  fallback5194:
    set fb_tmp_418, $P5016
    repr_defined $I5003, fb_tmp_418
    unless $I5003 goto if2351_else5192 
    set $P5018, fb_tmp_418["role_params"]
    set $P5020, $P5018
    goto if2351_end5193
  if2351_else5192:
    null $P5019
    set $P5020, $P5019
  if2351_end5193:
    unless_null $P5020, vivi_23525195
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_23525195:
    set fb_tmp_417, $P5020
    repr_defined $I5002, fb_tmp_417
    unless $I5002 goto if2350_else5190 
    set $P5022, fb_tmp_417["variable"]
    set $P5024, $P5022
    goto if2350_end5191
  if2350_else5190:
    null $P5023
    set $P5024, $P5023
  if2350_end5191:
    unless_null $P5024, vivi_23535196
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_23535196:
    set $P5013, $P5024
    iter $P5015, $P5024
  for_next5197:
    unless $P5015, for_done5199
    shift $P5027, $P5015
  for_redo5198:
    .const 'Sub' $P5026 = 'cuid_467_1381944288.90674' 
    capture_lex $P5026
    $P5013 = $P5026($P5027)
    goto for_next5197
  for_done5199:
  if2347_end5185:
.annotate 'line', 2211
    find_lex $P5028, "$past"
    $P5028."unshift"($P101)
.annotate 'line', 2212
    find_lex $P5029, "$past"
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5031 = $P5030."new"("curlexpad" :named("op"))
    $P5029."push"($P5031)
.annotate 'line', 2213
    find_lex $P5032, "$past"
    $P5032."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2214
    find_dynamic_lex $P5033, "$*W"
    unless_null $P5033, fallback5200
    nqp_get_sc_object $P5035, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5034, $P5035
    set fb_tmp_419, $P5034
    repr_defined $I5004, fb_tmp_419
    unless $I5004 goto if2354_else5201 
    set $P5036, fb_tmp_419["$W"]
    set $P5038, $P5036
    goto if2354_end5202
  if2354_else5201:
    null $P5037
    set $P5038, $P5037
  if2354_end5202:
    unless_null $P5038, vivi_23555203
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5038, $P5039
  vivi_23555203:
    unless_null $P5038, vivi_23565204
    die "Contextual $*W not found"
    box $P5040, "Contextual $*W not found"
    set $P5038, $P5040
  vivi_23565204:
    set $P5033, $P5038
  fallback5200:
    find_dynamic_lex $P5041, "$*PACKAGE"
    unless_null $P5041, fallback5205
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5042, $P5043
    set fb_tmp_420, $P5042
    repr_defined $I5005, fb_tmp_420
    unless $I5005 goto if2357_else5206 
    set $P5044, fb_tmp_420["$PACKAGE"]
    set $P5046, $P5044
    goto if2357_end5207
  if2357_else5206:
    null $P5045
    set $P5046, $P5045
  if2357_end5207:
    unless_null $P5046, vivi_23585208
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5046, $P5047
  vivi_23585208:
    unless_null $P5046, vivi_23595209
    die "Contextual $*PACKAGE not found"
    box $P5048, "Contextual $*PACKAGE not found"
    set $P5046, $P5048
  vivi_23595209:
    set $P5041, $P5046
  fallback5205:
    find_lex $P5049, "$past"
    $P5050 = $P5033."pkg_set_body_block"($P5041, $P5049)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1381944288.90674") :anon :lex :outer("cuid_468_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2207
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2208
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1381944288.90674") :anon :lex :outer("cuid_286_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2221
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_23715229
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2224
.annotate 'line', 2225
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5216
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_422, $P5004
    repr_defined $I5001, fb_tmp_422
    unless $I5001 goto if2363_else5217 
    set $P5006, fb_tmp_422["$W"]
    set $P5008, $P5006
    goto if2363_end5218
  if2363_else5217:
    null $P5007
    set $P5008, $P5007
  if2363_end5218:
    unless_null $P5008, vivi_23645219
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_23645219:
    unless_null $P5008, vivi_23655220
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23655220:
    set $P5003, $P5008
  fallback5216:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5225
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  fallback5225:
    set fb_tmp_424, $P5012
    repr_defined $I5003, fb_tmp_424
    unless $I5003 goto if2367_else5223 
    set $P5014, fb_tmp_424["parent"]
    set $P5016, $P5014
    goto if2367_end5224
  if2367_else5223:
    null $P5015
    set $P5016, $P5015
  if2367_end5224:
    unless_null $P5016, vivi_23685226
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_23685226:
    set fb_tmp_423, $P5016
    repr_defined $I5002, fb_tmp_423
    unless $I5002 goto if2366_else5221 
    set $P5018, fb_tmp_423["identifier"]
    set $P5020, $P5018
    goto if2366_end5222
  if2366_else5221:
    null $P5019
    set $P5020, $P5019
  if2366_end5222:
    unless_null $P5020, vivi_23695227
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_23695227:
    repr_clone $P5011, $P5020
    $P5022 = $P5003."find_sym"($P5011)
    set $P101, $P5022
    box $P5023, 1
    set $P102, $P5023
    set $P5025, $P102
    pop_eh 
    goto skip_handler_23705228
  catch_handler_23715229:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_23705228
  skip_handler_23705228:
    unless $P102 goto if2372_else5230 
.annotate 'line', 2228
.annotate 'line', 2229
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback5232
    nqp_get_sc_object $P5028, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5027, $P5028
    set fb_tmp_425, $P5027
    repr_defined $I5004, fb_tmp_425
    unless $I5004 goto if2373_else5233 
    set $P5029, fb_tmp_425["$W"]
    set $P5031, $P5029
    goto if2373_end5234
  if2373_else5233:
    null $P5030
    set $P5031, $P5030
  if2373_end5234:
    unless_null $P5031, vivi_23745235
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_23745235:
    unless_null $P5031, vivi_23755236
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_23755236:
    set $P5026, $P5031
  fallback5232:
    find_dynamic_lex $P5034, "$*PACKAGE"
    unless_null $P5034, fallback5237
    nqp_get_sc_object $P5036, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5035, $P5036
    set fb_tmp_426, $P5035
    repr_defined $I5005, fb_tmp_426
    unless $I5005 goto if2376_else5238 
    set $P5037, fb_tmp_426["$PACKAGE"]
    set $P5039, $P5037
    goto if2376_end5239
  if2376_else5238:
    null $P5038
    set $P5039, $P5038
  if2376_end5239:
    unless_null $P5039, vivi_23775240
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5039, $P5040
  vivi_23775240:
    unless_null $P5039, vivi_23785241
    die "Contextual $*PACKAGE not found"
    box $P5041, "Contextual $*PACKAGE not found"
    set $P5039, $P5041
  vivi_23785241:
    set $P5034, $P5039
  fallback5237:
    $P5042 = $P5026."pkg_add_parent_or_role"($P5034, "add_parent", $P101)
    set $P5052, $P5042
    goto if2372_end5231
  if2372_else5230:
.annotate 'line', 2231
.annotate 'line', 2232
    find_lex $P5043, "$/"
    $P5044 = $P5043."CURSOR"()
    find_lex $P5045, "$/"
    unless_null $P5045, fallback5244
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  fallback5244:
    set fb_tmp_427, $P5045
    repr_defined $I5006, fb_tmp_427
    unless $I5006 goto if2379_else5242 
    set $P5047, fb_tmp_427["parent"]
    set $P5049, $P5047
    goto if2379_end5243
  if2379_else5242:
    null $P5048
    set $P5049, $P5048
  if2379_end5243:
    unless_null $P5049, vivi_23805245
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_23805245:
    set $S5003, $P5049
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5051 = $P5044."panic"($S5001)
    set $P5052, $P5051
  if2372_end5231:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1381944288.90674") :anon :lex :outer("cuid_286_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2235
    .lex "$default", $P101 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5250
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_428, $P5003
    repr_defined $I5002, fb_tmp_428
    unless $I5002 goto if2383_else5251 
    set $P5005, fb_tmp_428["$PKGDECL"]
    set $P5007, $P5005
    goto if2383_end5252
  if2383_else5251:
    null $P5006
    set $P5007, $P5006
  if2383_end5252:
    unless_null $P5007, vivi_23845253
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_23845253:
    unless_null $P5007, vivi_23855254
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_23855254:
    set $P5002, $P5007
  fallback5250:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2382_else5248 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2382_end5249
  if2382_else5248:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2382_end5249:
    set $P101, $P5014
.annotate 'line', 2237
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5255
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5016, $P5017
    set fb_tmp_429, $P5016
    repr_defined $I5003, fb_tmp_429
    unless $I5003 goto if2386_else5256 
    set $P5018, fb_tmp_429["$W"]
    set $P5020, $P5018
    goto if2386_end5257
  if2386_else5256:
    null $P5019
    set $P5020, $P5019
  if2386_end5257:
    unless_null $P5020, vivi_23875258
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_23875258:
    unless_null $P5020, vivi_23885259
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_23885259:
    set $P5015, $P5020
  fallback5255:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5260
    nqp_get_sc_object $P5025, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5024, $P5025
    set fb_tmp_430, $P5024
    repr_defined $I5004, fb_tmp_430
    unless $I5004 goto if2389_else5261 
    set $P5026, fb_tmp_430["$PACKAGE"]
    set $P5028, $P5026
    goto if2389_end5262
  if2389_else5261:
    null $P5027
    set $P5028, $P5027
  if2389_end5262:
    unless_null $P5028, vivi_23905263
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_23905263:
    unless_null $P5028, vivi_23915264
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_23915264:
    set $P5023, $P5028
  fallback5260:
.annotate 'line', 2238
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5265
    nqp_get_sc_object $P5033, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5032, $P5033
    set fb_tmp_431, $P5032
    repr_defined $I5005, fb_tmp_431
    unless $I5005 goto if2392_else5266 
    set $P5034, fb_tmp_431["$W"]
    set $P5036, $P5034
    goto if2392_end5267
  if2392_else5266:
    null $P5035
    set $P5036, $P5035
  if2392_end5267:
    unless_null $P5036, vivi_23935268
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5036, $P5037
  vivi_23935268:
    unless_null $P5036, vivi_23945269
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_23945269:
    set $P5031, $P5036
  fallback5265:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1381944288.90674") :anon :lex :outer("cuid_286_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2243
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24065289
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2246
.annotate 'line', 2247
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5280
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_434, $P5004
    repr_defined $I5001, fb_tmp_434
    unless $I5001 goto if2400_else5281 
    set $P5006, fb_tmp_434["$W"]
    set $P5008, $P5006
    goto if2400_end5282
  if2400_else5281:
    null $P5007
    set $P5008, $P5007
  if2400_end5282:
    unless_null $P5008, vivi_24015283
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_24015283:
    unless_null $P5008, vivi_24025284
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24025284:
    set $P5003, $P5008
  fallback5280:
    set fb_tmp_435, _lex_param_0
    repr_defined $I5002, fb_tmp_435
    unless $I5002 goto if2403_else5285 
    set $P5012, fb_tmp_435["identifier"]
    set $P5014, $P5012
    goto if2403_end5286
  if2403_else5285:
    null $P5013
    set $P5014, $P5013
  if2403_end5286:
    unless_null $P5014, vivi_24045287
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_24045287:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24055288
  catch_handler_24065289:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24055288
  skip_handler_24055288:
    unless $P102 goto if2407_else5290 
.annotate 'line', 2250
.annotate 'line', 2251
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5292
    nqp_get_sc_object $P5022, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5021, $P5022
    set fb_tmp_436, $P5021
    repr_defined $I5003, fb_tmp_436
    unless $I5003 goto if2408_else5293 
    set $P5023, fb_tmp_436["$W"]
    set $P5025, $P5023
    goto if2408_end5294
  if2408_else5293:
    null $P5024
    set $P5025, $P5024
  if2408_end5294:
    unless_null $P5025, vivi_24095295
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5025, $P5026
  vivi_24095295:
    unless_null $P5025, vivi_24105296
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24105296:
    set $P5020, $P5025
  fallback5292:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5297
    nqp_get_sc_object $P5030, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5029, $P5030
    set fb_tmp_437, $P5029
    repr_defined $I5004, fb_tmp_437
    unless $I5004 goto if2411_else5298 
    set $P5031, fb_tmp_437["$PACKAGE"]
    set $P5033, $P5031
    goto if2411_end5299
  if2411_else5298:
    null $P5032
    set $P5033, $P5032
  if2411_end5299:
    unless_null $P5033, vivi_24125300
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5034
  vivi_24125300:
    unless_null $P5033, vivi_24135301
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24135301:
    set $P5028, $P5033
  fallback5297:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2407_end5291
  if2407_else5290:
.annotate 'line', 2253
.annotate 'line', 2254
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2407_end5291:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_287_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2275
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_472_1381944288.90674' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_447 
    unless_null _lex_param_1, fallback5355
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5004
  fallback5355:
    set fb_tmp_447, _lex_param_1
    repr_defined $I5001, fb_tmp_447
    unless $I5001 goto if2442_else5353 
    set $P5005, fb_tmp_447["variable"]
    set $P5007, $P5005
    goto if2442_end5354
  if2442_else5353:
    null $P5006
    set $P5007, $P5006
  if2442_end5354:
    unless_null $P5007, vivi_24435356
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_24435356:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5362:
    unless $P5003, for_done5364
    shift $P5010, $P5003
  for_redo5363:
    .const 'Sub' $P5009 = 'cuid_472_1381944288.90674' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5362
  for_done5364:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1381944288.90674") :anon :lex :outer("cuid_287_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2276
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_448 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2277
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2278
    $P101."scope"("lexical")
.annotate 'line', 2279
    $P101."decl"("param")
.annotate 'line', 2280
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5357
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_448, $P5004
    repr_defined $I5001, fb_tmp_448
    unless $I5001 goto if2444_else5358 
    set $P5006, fb_tmp_448["$W"]
    set $P5008, $P5006
    goto if2444_end5359
  if2444_else5358:
    null $P5007
    set $P5008, $P5007
  if2444_end5359:
    unless_null $P5008, vivi_24455360
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_24455360:
    unless_null $P5008, vivi_24465361
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24465361:
    set $P5003, $P5008
  fallback5357:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_288_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2284
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_449 
    unless_null _lex_param_1, fallback5367
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5367:
    set fb_tmp_449, _lex_param_1
    repr_defined $I5001, fb_tmp_449
    unless $I5001 goto if2447_else5365 
    set $P5002, fb_tmp_449["scoped"]
    set $P5004, $P5002
    goto if2447_end5366
  if2447_else5365:
    null $P5003
    set $P5004, $P5003
  if2447_end5366:
    unless_null $P5004, vivi_24485368
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24485368:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_289_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_450 
    unless_null _lex_param_1, fallback5371
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5371:
    set fb_tmp_450, _lex_param_1
    repr_defined $I5001, fb_tmp_450
    unless $I5001 goto if2449_else5369 
    set $P5002, fb_tmp_450["scoped"]
    set $P5004, $P5002
    goto if2449_end5370
  if2449_else5369:
    null $P5003
    set $P5004, $P5003
  if2449_end5370:
    unless_null $P5004, vivi_24505372
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24505372:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_290_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2286
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_451 
    unless_null _lex_param_1, fallback5375
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5375:
    set fb_tmp_451, _lex_param_1
    repr_defined $I5001, fb_tmp_451
    unless $I5001 goto if2451_else5373 
    set $P5002, fb_tmp_451["scoped"]
    set $P5004, $P5002
    goto if2451_end5374
  if2451_else5373:
    null $P5003
    set $P5004, $P5003
  if2451_end5374:
    unless_null $P5004, vivi_24525376
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24525376:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_291_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
.annotate 'line', 2289
    unless_null _lex_param_1, fallback5381
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5381:
    set fb_tmp_452, _lex_param_1
    repr_defined $I5001, fb_tmp_452
    unless $I5001 goto if2454_else5379 
    set $P5002, fb_tmp_452["declarator"]
    set $P5004, $P5002
    goto if2454_end5380
  if2454_else5379:
    null $P5003
    set $P5004, $P5003
  if2454_end5380:
    unless_null $P5004, vivi_24555382
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24555382:
    unless $P5004 goto if2453_else5377 
    unless_null _lex_param_1, fallback5385
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback5385:
    set fb_tmp_453, _lex_param_1
    repr_defined $I5002, fb_tmp_453
    unless $I5002 goto if2456_else5383 
    set $P5007, fb_tmp_453["declarator"]
    set $P5009, $P5007
    goto if2456_end5384
  if2456_else5383:
    null $P5008
    set $P5009, $P5008
  if2456_end5384:
    unless_null $P5009, vivi_24575386
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_24575386:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2453_end5378
  if2453_else5377:
    unless_null _lex_param_1, fallback5391
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback5391:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5003, fb_tmp_454
    unless $I5003 goto if2459_else5389 
    set $P5013, fb_tmp_454["multi_declarator"]
    set $P5015, $P5013
    goto if2459_end5390
  if2459_else5389:
    null $P5014
    set $P5015, $P5014
  if2459_end5390:
    unless_null $P5015, vivi_24605392
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_24605392:
    unless $P5015 goto if2458_else5387 
.annotate 'line', 2290
    unless_null _lex_param_1, fallback5395
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5017
  fallback5395:
    set fb_tmp_455, _lex_param_1
    repr_defined $I5004, fb_tmp_455
    unless $I5004 goto if2461_else5393 
    set $P5018, fb_tmp_455["multi_declarator"]
    set $P5020, $P5018
    goto if2461_end5394
  if2461_else5393:
    null $P5019
    set $P5020, $P5019
  if2461_end5394:
    unless_null $P5020, vivi_24625396
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_24625396:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2458_end5388
  if2458_else5387:
.annotate 'line', 2291
    unless_null _lex_param_1, fallback5399
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5023
  fallback5399:
    set fb_tmp_456, _lex_param_1
    repr_defined $I5005, fb_tmp_456
    unless $I5005 goto if2463_else5397 
    set $P5024, fb_tmp_456["package_declarator"]
    set $P5026, $P5024
    goto if2463_end5398
  if2463_else5397:
    null $P5025
    set $P5026, $P5025
  if2463_end5398:
    unless_null $P5026, vivi_24645400
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_24645400:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2458_end5388:
    set $P5030, $P5029
  if2453_end5378:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_292_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2294
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
.annotate 'line', 2295
    unless_null _lex_param_1, fallback5405
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5405:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5001, fb_tmp_457
    unless $I5001 goto if2466_else5403 
    set $P5002, fb_tmp_457["routine_declarator"]
    set $P5004, $P5002
    goto if2466_end5404
  if2466_else5403:
    null $P5003
    set $P5004, $P5003
  if2466_end5404:
    unless_null $P5004, vivi_24675406
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24675406:
    unless $P5004 goto if2465_else5401 
.annotate 'line', 2296
    unless_null _lex_param_1, fallback5409
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback5409:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5002, fb_tmp_458
    unless $I5002 goto if2468_else5407 
    set $P5007, fb_tmp_458["routine_declarator"]
    set $P5009, $P5007
    goto if2468_end5408
  if2468_else5407:
    null $P5008
    set $P5009, $P5008
  if2468_end5408:
    unless_null $P5009, vivi_24695410
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_24695410:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2465_end5402
  if2465_else5401:
.annotate 'line', 2297
    unless_null _lex_param_1, fallback5413
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback5413:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5003, fb_tmp_459
    unless $I5003 goto if2470_else5411 
    set $P5013, fb_tmp_459["variable_declarator"]
    set $P5015, $P5013
    goto if2470_end5412
  if2470_else5411:
    null $P5014
    set $P5015, $P5014
  if2470_end5412:
    unless_null $P5015, vivi_24715414
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_24715414:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2465_end5402:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_293_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
    .local pmc fb_tmp_462 
    unless_null _lex_param_1, fallback5419
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5419:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5001, fb_tmp_460
    unless $I5001 goto if2473_else5417 
    set $P5002, fb_tmp_460["declarator"]
    set $P5004, $P5002
    goto if2473_end5418
  if2473_else5417:
    null $P5003
    set $P5004, $P5003
  if2473_end5418:
    unless_null $P5004, vivi_24745420
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24745420:
    unless $P5004 goto if2472_else5415 
    unless_null _lex_param_1, fallback5423
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback5423:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5002, fb_tmp_461
    unless $I5002 goto if2475_else5421 
    set $P5007, fb_tmp_461["declarator"]
    set $P5009, $P5007
    goto if2475_end5422
  if2475_else5421:
    null $P5008
    set $P5009, $P5008
  if2475_end5422:
    unless_null $P5009, vivi_24765424
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_24765424:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2472_end5416
  if2472_else5415:
    unless_null _lex_param_1, fallback5427
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback5427:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5003, fb_tmp_462
    unless $I5003 goto if2477_else5425 
    set $P5013, fb_tmp_462["routine_def"]
    set $P5015, $P5013
    goto if2477_end5426
  if2477_else5425:
    null $P5014
    set $P5015, $P5014
  if2477_end5426:
    unless_null $P5015, vivi_24785428
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_24785428:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2472_end5416:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_294_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    unless_null _lex_param_1, fallback5433
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5433:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5001, fb_tmp_463
    unless $I5001 goto if2480_else5431 
    set $P5002, fb_tmp_463["declarator"]
    set $P5004, $P5002
    goto if2480_end5432
  if2480_else5431:
    null $P5003
    set $P5004, $P5003
  if2480_end5432:
    unless_null $P5004, vivi_24815434
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24815434:
    unless $P5004 goto if2479_else5429 
    unless_null _lex_param_1, fallback5437
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback5437:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5002, fb_tmp_464
    unless $I5002 goto if2482_else5435 
    set $P5007, fb_tmp_464["declarator"]
    set $P5009, $P5007
    goto if2482_end5436
  if2482_else5435:
    null $P5008
    set $P5009, $P5008
  if2482_end5436:
    unless_null $P5009, vivi_24835438
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_24835438:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2479_end5430
  if2479_else5429:
    unless_null _lex_param_1, fallback5441
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback5441:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5003, fb_tmp_465
    unless $I5003 goto if2484_else5439 
    set $P5013, fb_tmp_465["routine_def"]
    set $P5015, $P5013
    goto if2484_end5440
  if2484_else5439:
    null $P5014
    set $P5015, $P5014
  if2484_end5440:
    unless_null $P5015, vivi_24855442
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_24855442:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2479_end5430:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_295_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_466 
    unless_null _lex_param_1, fallback5445
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5445:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5001, fb_tmp_466
    unless $I5001 goto if2486_else5443 
    set $P5002, fb_tmp_466["declarator"]
    set $P5004, $P5002
    goto if2486_end5444
  if2486_else5443:
    null $P5003
    set $P5004, $P5003
  if2486_end5444:
    unless_null $P5004, vivi_24875446
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_24875446:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_296_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2305
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_473_1381944288.90674' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_475_1381944288.90674' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_476_1381944288.90674' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P105, $P5005
.annotate 'line', 2306
    unless_null _lex_param_1, fallback5449
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback5449:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5001, fb_tmp_467
    unless $I5001 goto if2488_else5447 
    set $P5007, fb_tmp_467["variable"]
    set $P5009, $P5007
    goto if2488_end5448
  if2488_else5447:
    null $P5008
    set $P5009, $P5008
  if2488_end5448:
    unless_null $P5009, vivi_24895450
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_24895450:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5455
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback5455:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5003, fb_tmp_469
    unless $I5003 goto if2491_else5453 
    set $P5013, fb_tmp_469["variable"]
    set $P5015, $P5013
    goto if2491_end5454
  if2491_else5453:
    null $P5014
    set $P5015, $P5014
  if2491_end5454:
    unless_null $P5015, vivi_24925456
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_24925456:
    set fb_tmp_468, $P5015
    repr_defined $I5002, fb_tmp_468
    unless $I5002 goto if2490_else5451 
    set $P5017, fb_tmp_468["sigil"]
    set $P5019, $P5017
    goto if2490_end5452
  if2490_else5451:
    null $P5018
    set $P5019, $P5018
  if2490_end5452:
    unless_null $P5019, vivi_24935457
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_24935457:
    set $P102, $P5019
.annotate 'line', 2308
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2309
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5458
    nqp_get_sc_object $P5024, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5023, $P5024
    set fb_tmp_470, $P5023
    repr_defined $I5004, fb_tmp_470
    unless $I5004 goto if2494_else5459 
    set $P5025, fb_tmp_470["$W"]
    set $P5027, $P5025
    goto if2494_end5460
  if2494_else5459:
    null $P5026
    set $P5027, $P5026
  if2494_end5460:
    unless_null $P5027, vivi_24955461
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5027, $P5028
  vivi_24955461:
    unless_null $P5027, vivi_24965462
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_24965462:
    set $P5022, $P5027
  fallback5458:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2501_end5471 
.annotate 'line', 2311
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2501_end5471:
    unless $P5039 goto if2500_end5469 
.annotate 'line', 2312
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2500_end5469:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5474
    nqp_get_sc_object $P5044, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5043, $P5044
    set fb_tmp_472, $P5043
    repr_defined $I5007, fb_tmp_472
    unless $I5007 goto if2503_else5475 
    set $P5045, fb_tmp_472["$SCOPE"]
    set $P5047, $P5045
    goto if2503_end5476
  if2503_else5475:
    null $P5046
    set $P5047, $P5046
  if2503_end5476:
    unless_null $P5047, vivi_25045477
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5047, $P5048
  vivi_25045477:
    unless_null $P5047, vivi_25055478
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25055478:
    set $P5042, $P5047
  fallback5474:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2502_else5472 
    .const 'Sub' $P5050 = 'cuid_473_1381944288.90674' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2502_end5473
  if2502_else5472:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5556
    nqp_get_sc_object $P5054, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5053, $P5054
    set fb_tmp_487, $P5053
    repr_defined $I5009, fb_tmp_487
    unless $I5009 goto if2551_else5557 
    set $P5055, fb_tmp_487["$SCOPE"]
    set $P5057, $P5055
    goto if2551_end5558
  if2551_else5557:
    null $P5056
    set $P5057, $P5056
  if2551_end5558:
    unless_null $P5057, vivi_25525559
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5057, $P5058
  vivi_25525559:
    unless_null $P5057, vivi_25535560
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25535560:
    set $P5052, $P5057
  fallback5556:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2550_else5554 
.annotate 'line', 2342
    unless_null _lex_param_1, fallback5565
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5060
  fallback5565:
    set fb_tmp_488, _lex_param_1
    repr_defined $I5010, fb_tmp_488
    unless $I5010 goto if2555_else5563 
    set $P5061, fb_tmp_488["typename"]
    set $P5063, $P5061
    goto if2555_end5564
  if2555_else5563:
    null $P5062
    set $P5063, $P5062
  if2555_end5564:
    unless_null $P5063, vivi_25565566
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5063, $P5064
  vivi_25565566:
    unless $P5063 goto if2554_end5562 
.annotate 'line', 2346
.annotate 'line', 2347
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2554_end5562:
    unless_null _lex_param_1, fallback5569
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5067
  fallback5569:
    set fb_tmp_489, _lex_param_1
    repr_defined $I5011, fb_tmp_489
    unless $I5011 goto if2557_else5567 
    set $P5068, fb_tmp_489["variable"]
    set $P5070, $P5068
    goto if2557_end5568
  if2557_else5567:
    null $P5069
    set $P5070, $P5069
  if2557_end5568:
    unless_null $P5070, vivi_25585570
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5070, $P5071
  vivi_25585570:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2350
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2351
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2550_end5555
  if2550_else5554:
    .const 'Sub' $P5076 = 'cuid_475_1381944288.90674' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2550_end5555:
  if2502_end5473:
    unless_null _lex_param_1, fallback5597
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5079
  fallback5597:
    set fb_tmp_494, _lex_param_1
    repr_defined $I5012, fb_tmp_494
    unless $I5012 goto if2572_else5595 
    set $P5080, fb_tmp_494["trait"]
    set $P5082, $P5080
    goto if2572_end5596
  if2572_else5595:
    null $P5081
    set $P5082, $P5081
  if2572_end5596:
    unless_null $P5082, vivi_25735598
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_25735598:
    unless $P5082 goto if2571_end5594 
.annotate 'line', 2380
    unless_null _lex_param_1, fallback5601
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5087
  fallback5601:
    set fb_tmp_495, _lex_param_1
    repr_defined $I5013, fb_tmp_495
    unless $I5013 goto if2574_else5599 
    set $P5088, fb_tmp_495["trait"]
    set $P5090, $P5088
    goto if2574_end5600
  if2574_else5599:
    null $P5089
    set $P5090, $P5089
  if2574_end5600:
    unless_null $P5090, vivi_25755602
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5090, $P5091
  vivi_25755602:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5603:
    unless $P5086, for_done5605
    shift $P5093, $P5086
  for_redo5604:
    .const 'Sub' $P5092 = 'cuid_476_1381944288.90674' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5603
  for_done5605:
  if2571_end5594:
.annotate 'line', 2384
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1381944288.90674") :anon :lex :outer("cuid_296_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2314
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_473 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_486 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5481
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_46, $P5004
    set fb_tmp_473, pkg_viv_tmp_46
    repr_defined $I5002, fb_tmp_473
    unless $I5002 goto if2507_else5482 
    set $P5006, fb_tmp_473["%HOW"]
    set $P5008, $P5006
    goto if2507_end5483
  if2507_else5482:
    null $P5007
    set $P5008, $P5007
  if2507_end5483:
    unless_null $P5008, vivi_25085484
    new $P5009, 'Hash'
    set pkg_viv_tmp_46["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25085484:
    unless_null $P5008, vivi_25095485
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25095485:
    set $P5003, $P5008
  fallback5481:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5486
    nqp_get_sc_object $P5013, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5012, $P5013
    set fb_tmp_474, $P5012
    repr_defined $I5003, fb_tmp_474
    unless $I5003 goto if2510_else5487 
    set $P5014, fb_tmp_474["$PKGDECL"]
    set $P5016, $P5014
    goto if2510_end5488
  if2510_else5487:
    null $P5015
    set $P5016, $P5015
  if2510_end5488:
    unless_null $P5016, vivi_25115489
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_25115489:
    unless_null $P5016, vivi_25125490
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25125490:
    set $P5011, $P5016
  fallback5486:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2506_end5480 
.annotate 'line', 2316
.annotate 'line', 2317
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5491
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set fb_tmp_475, $P5022
    repr_defined $I5004, fb_tmp_475
    unless $I5004 goto if2513_else5492 
    set $P5024, fb_tmp_475["$PKGDECL"]
    set $P5026, $P5024
    goto if2513_end5493
  if2513_else5492:
    null $P5025
    set $P5026, $P5025
  if2513_end5493:
    unless_null $P5026, vivi_25145494
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_25145494:
    unless_null $P5026, vivi_25155495
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25155495:
    set $P5021, $P5026
  fallback5491:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2506_end5480:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5500
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  fallback5500:
    set fb_tmp_476, $P5031
    repr_defined $I5005, fb_tmp_476
    unless $I5005 goto if2517_else5498 
    set $P5033, fb_tmp_476["typename"]
    set $P5035, $P5033
    goto if2517_end5499
  if2517_else5498:
    null $P5034
    set $P5035, $P5034
  if2517_end5499:
    unless_null $P5035, vivi_25185501
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5035, $P5036
  vivi_25185501:
    unless $P5035 goto if2516_end5497 
.annotate 'line', 2324
.annotate 'line', 2325
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5502
    nqp_get_sc_object $P5039, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5038, $P5039
    set fb_tmp_477, $P5038
    repr_defined $I5006, fb_tmp_477
    unless $I5006 goto if2519_else5503 
    set $P5040, fb_tmp_477["$W"]
    set $P5042, $P5040
    goto if2519_end5504
  if2519_else5503:
    null $P5041
    set $P5042, $P5041
  if2519_end5504:
    unless_null $P5042, vivi_25205505
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5042, $P5043
  vivi_25205505:
    unless_null $P5042, vivi_25215506
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25215506:
    set $P5037, $P5042
  fallback5502:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5509
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5046, $P5047
  fallback5509:
    set fb_tmp_478, $P5046
    repr_defined $I5007, fb_tmp_478
    unless $I5007 goto if2522_else5507 
    set $P5048, fb_tmp_478["typename"]
    set $P5050, $P5048
    goto if2522_end5508
  if2522_else5507:
    null $P5049
    set $P5050, $P5049
  if2522_end5508:
    unless_null $P5050, vivi_25235510
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5050, $P5051
  vivi_25235510:
    set $S5005, $P5050
    box $P5052, $S5005
    push $P5045, $P5052
    $P5053 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5053
  if2516_end5497:
    find_lex $P5054, "$sigil"
    set $S5006, $P5054
    iseq $I5008, $S5006, "$"
    set $I5010, $I5008
    if $I5008 goto unless2525_end5514 
    find_lex $P5055, "$sigil"
    set $S5007, $P5055
    iseq $I5009, $S5007, "&"
    set $I5010, $I5009
  unless2525_end5514:
    unless $I5010 goto if2524_end5512 
.annotate 'line', 2327
    find_lex $P5056, "$/"
    unless_null $P5056, fallback5519
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5056, $P5057
  fallback5519:
    set fb_tmp_479, $P5056
    repr_defined $I5011, fb_tmp_479
    unless $I5011 goto if2527_else5517 
    set $P5058, fb_tmp_479["typename"]
    set $P5060, $P5058
    goto if2527_end5518
  if2527_else5517:
    null $P5059
    set $P5060, $P5059
  if2527_end5518:
    unless_null $P5060, vivi_25285520
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5060, $P5061
  vivi_25285520:
    unless $P5060 goto if2526_else5515 
.annotate 'line', 2328
    set fb_tmp_480, $P102
    repr_defined $I5012, fb_tmp_480
    unless $I5012 goto if2529_else5521 
    set $P5062, fb_tmp_480["type"]
    set $P5064, $P5062
    goto if2529_end5522
  if2529_else5521:
    null $P5063
    set $P5064, $P5063
  if2529_end5522:
    unless_null $P5064, vivi_25305523
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5064, $P5065
  vivi_25305523:
    set $P102["default"], $P5064
    set $P5079, $P5064
    goto if2526_end5516
  if2526_else5515:
.annotate 'line', 2331
    new $P5077, 'ExceptionHandler'
    set_label $P5077, catch_handler_25355530
    $P5077.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5077
.annotate 'line', 2332
    find_dynamic_lex $P5066, "$*W"
    unless_null $P5066, fallback5524
    nqp_get_sc_object $P5068, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5067, $P5068
    set fb_tmp_481, $P5067
    repr_defined $I5013, fb_tmp_481
    unless $I5013 goto if2531_else5525 
    set $P5069, fb_tmp_481["$W"]
    set $P5071, $P5069
    goto if2531_end5526
  if2531_else5525:
    null $P5070
    set $P5071, $P5070
  if2531_end5526:
    unless_null $P5071, vivi_25325527
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5071, $P5072
  vivi_25325527:
    unless_null $P5071, vivi_25335528
    die "Contextual $*W not found"
    box $P5073, "Contextual $*W not found"
    set $P5071, $P5073
  vivi_25335528:
    set $P5066, $P5071
  fallback5524:
    new $P5074, 'ResizablePMCArray'
    box $P5075, "NQPMu"
    push $P5074, $P5075
    $P5076 = $P5066."find_sym"($P5074)
    set $P102["default"], $P5076
    set $P5078, $P5076
    pop_eh 
    goto skip_handler_25345529
  catch_handler_25355530:
    .get_results ($P5077) 
    set $I10001, 1
    set $P5077["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5077
    pop_upto_eh $P5077
    pop_eh 
    set $P5078, $P10001
    goto skip_handler_25345529
  skip_handler_25345529:
    set $P5079, $P5078
  if2526_end5516:
  if2524_end5512:
.annotate 'line', 2337
    find_dynamic_lex $P5080, "$*W"
    unless_null $P5080, fallback5531
    nqp_get_sc_object $P5082, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5081, $P5082
    set fb_tmp_482, $P5081
    repr_defined $I5014, fb_tmp_482
    unless $I5014 goto if2536_else5532 
    set $P5083, fb_tmp_482["$W"]
    set $P5085, $P5083
    goto if2536_end5533
  if2536_else5532:
    null $P5084
    set $P5085, $P5084
  if2536_end5533:
    unless_null $P5085, vivi_25375534
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5085, $P5086
  vivi_25375534:
    unless_null $P5085, vivi_25385535
    die "Contextual $*W not found"
    box $P5087, "Contextual $*W not found"
    set $P5085, $P5087
  vivi_25385535:
    set $P5080, $P5085
  fallback5531:
    find_dynamic_lex $P5088, "$*PACKAGE"
    unless_null $P5088, fallback5536
    nqp_get_sc_object $P5090, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5089, $P5090
    set fb_tmp_483, $P5089
    repr_defined $I5015, fb_tmp_483
    unless $I5015 goto if2539_else5537 
    set $P5091, fb_tmp_483["$PACKAGE"]
    set $P5093, $P5091
    goto if2539_end5538
  if2539_else5537:
    null $P5092
    set $P5093, $P5092
  if2539_end5538:
    unless_null $P5093, vivi_25405539
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5093, $P5094
  vivi_25405539:
    unless_null $P5093, vivi_25415540
    die "Contextual $*PACKAGE not found"
    box $P5095, "Contextual $*PACKAGE not found"
    set $P5093, $P5095
  vivi_25415540:
    set $P5088, $P5093
  fallback5536:
    find_dynamic_lex $P5096, "%*HOW"
    unless_null $P5096, fallback5543
    nqp_get_sc_object $P5098, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_47, $P5097
    set fb_tmp_485, pkg_viv_tmp_47
    repr_defined $I5017, fb_tmp_485
    unless $I5017 goto if2543_else5544 
    set $P5099, fb_tmp_485["%HOW"]
    set $P5101, $P5099
    goto if2543_end5545
  if2543_else5544:
    null $P5100
    set $P5101, $P5100
  if2543_end5545:
    unless_null $P5101, vivi_25445546
    new $P5102, 'Hash'
    set pkg_viv_tmp_47["%HOW"], $P5102
    set $P5101, $P5102
  vivi_25445546:
    unless_null $P5101, vivi_25455547
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_25455547:
    set $P5096, $P5101
  fallback5543:
    set fb_tmp_484, $P5096
    repr_defined $I5016, fb_tmp_484
    unless $I5016 goto if2542_else5541 
    find_dynamic_lex $P5105, "$*PKGDECL"
    unless_null $P5105, fallback5548
    nqp_get_sc_object $P5107, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5106, $P5107
    set fb_tmp_486, $P5106
    repr_defined $I5018, fb_tmp_486
    unless $I5018 goto if2546_else5549 
    set $P5108, fb_tmp_486["$PKGDECL"]
    set $P5110, $P5108
    goto if2546_end5550
  if2546_else5549:
    null $P5109
    set $P5110, $P5109
  if2546_end5550:
    unless_null $P5110, vivi_25475551
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5110, $P5111
  vivi_25475551:
    unless_null $P5110, vivi_25485552
    die "Contextual $*PKGDECL not found"
    box $P5112, "Contextual $*PKGDECL not found"
    set $P5110, $P5112
  vivi_25485552:
    set $P5105, $P5110
  fallback5548:
    set $S5009, $P5105
    concat $S5008, $S5009, "-attr"
    set $P5104, fb_tmp_484[$S5008]
    set $P5114, $P5104
    goto if2542_end5542
  if2542_else5541:
    null $P5113
    set $P5114, $P5113
  if2542_end5542:
    unless_null $P5114, vivi_25495553
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5114, $P5115
  vivi_25495553:
    $P5116 = $P5080."pkg_add_attribute"($P5088, $P5114, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5116
.annotate 'line', 2340
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
    $P5118 = $P5117."new"()
    store_lex "$past", $P5118
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1381944288.90674") :anon :lex :outer("cuid_296_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2353
    .const 'Sub' $P5052 = 'cuid_474_1381944288.90674' 
    capture_lex $P5052 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5575
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  fallback5575:
    set fb_tmp_490, $P5003
    repr_defined $I5001, fb_tmp_490
    unless $I5001 goto if2560_else5573 
    set $P5005, fb_tmp_490["typename"]
    set $P5007, $P5005
    goto if2560_end5574
  if2560_else5573:
    null $P5006
    set $P5007, $P5006
  if2560_end5574:
    unless_null $P5007, vivi_25615576
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_25615576:
    unless $P5007 goto if2559_else5571 
.annotate 'line', 2356
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2562_end5578 
.annotate 'line', 2357
.annotate 'line', 2358
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2562_end5578:
.annotate 'line', 2360
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5579
    nqp_get_sc_object $P5015, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5014, $P5015
    set fb_tmp_491, $P5014
    repr_defined $I5003, fb_tmp_491
    unless $I5003 goto if2563_else5580 
    set $P5016, fb_tmp_491["$W"]
    set $P5018, $P5016
    goto if2563_end5581
  if2563_else5580:
    null $P5017
    set $P5018, $P5017
  if2563_end5581:
    unless_null $P5018, vivi_25645582
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_25645582:
    unless_null $P5018, vivi_25655583
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25655583:
    set $P5013, $P5018
  fallback5579:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5586
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  fallback5586:
    set fb_tmp_492, $P5022
    repr_defined $I5004, fb_tmp_492
    unless $I5004 goto if2566_else5584 
    set $P5024, fb_tmp_492["typename"]
    set $P5026, $P5024
    goto if2566_end5585
  if2566_else5584:
    null $P5025
    set $P5026, $P5025
  if2566_end5585:
    unless_null $P5026, vivi_25675587
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_25675587:
    set $S5002, $P5026
    box $P5028, $S5002
    push $P5021, $P5028
    $P5029 = $P5013."find_sym"($P5021)
    set $P101, $P5029
    repr_get_primitive_type_spec $I5005, $P101
    unless $I5005 goto if2568_else5588 
    .const 'Sub' $P5030 = 'cuid_474_1381944288.90674' 
    capture_lex $P5030
    $P5031 = $P5030($I5005)
    set $P5035, $P5031
    goto if2568_end5589
  if2568_else5588:
.annotate 'line', 2364
.annotate 'line', 2365
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    $P5034 = $P5033."panic"("Only native types are currently supported/checked")
    set $P5035, $P5034
  if2568_end5589:
    goto if2559_end5572
  if2559_else5571:
.annotate 'line', 2368
.annotate 'line', 2369
    find_lex $P5036, "$sigil"
    $P5037 = "&default_for"($P5036)
    set $P102, $P5037
  if2559_end5572:
.annotate 'line', 2371
    find_lex $P5038, "$BLOCK"
    set fb_tmp_493, $P5038
    repr_defined $I5006, fb_tmp_493
    unless $I5006 goto if2569_else5590 
    set $P5039, fb_tmp_493[0]
    set $P5041, $P5039
    goto if2569_end5591
  if2569_else5590:
    null $P5040
    set $P5041, $P5040
  if2569_end5591:
    unless_null $P5041, vivi_25705592
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5041, $P5042
  vivi_25705592:
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    find_lex $P5044, "$/"
.annotate 'line', 2373
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_lex $P5046, "$name"
    $P5047 = $P5045."new"($P5046 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5048 = $P5043."new"($P5047, $P102, "bind" :named("op"), $P5044 :named("node"))
    $P5041."push"($P5048)
.annotate 'line', 2376
    find_lex $P5049, "$BLOCK"
    find_lex $P5050, "$name"
    $P5051 = $P5049."symbol"($P5050, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1381944288.90674") :anon :lex :outer("cuid_475_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2361
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2362
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1381944288.90674") :anon :lex :outer("cuid_296_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2381
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_297_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2387
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_496 
    unless_null _lex_param_1, fallback5608
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5608:
    set fb_tmp_496, _lex_param_1
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if2576_else5606 
    set $P5002, fb_tmp_496["routine_def"]
    set $P5004, $P5002
    goto if2576_end5607
  if2576_else5606:
    null $P5003
    set $P5004, $P5003
  if2576_end5607:
    unless_null $P5004, vivi_25775609
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_25775609:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_298_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2388
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_497 
    unless_null _lex_param_1, fallback5612
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback5612:
    set fb_tmp_497, _lex_param_1
    repr_defined $I5001, fb_tmp_497
    unless $I5001 goto if2578_else5610 
    set $P5002, fb_tmp_497["method_def"]
    set $P5004, $P5002
    goto if2578_end5611
  if2578_else5610:
    null $P5003
    set $P5004, $P5003
  if2578_end5611:
    unless_null $P5004, vivi_25795613
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_25795613:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_299_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2390
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_480_1381944288.90674' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_483_1381944288.90674' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5618
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5004
  fallback5618:
    set fb_tmp_498, _lex_param_1
    repr_defined $I5001, fb_tmp_498
    unless $I5001 goto if2581_else5616 
    set $P5005, fb_tmp_498["onlystar"]
    set $P5007, $P5005
    goto if2581_end5617
  if2581_else5616:
    null $P5006
    set $P5007, $P5006
  if2581_end5617:
    unless_null $P5007, vivi_25825619
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_25825619:
    unless $P5007 goto if2580_else5614 
.annotate 'line', 2394
.annotate 'line', 2395
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2580_end5615
  if2580_else5614:
.annotate 'line', 2397
.annotate 'line', 2398
    unless_null _lex_param_1, fallback5622
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5010
  fallback5622:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5002, fb_tmp_499
    unless $I5002 goto if2583_else5620 
    set $P5011, fb_tmp_499["blockoid"]
    set $P5013, $P5011
    goto if2583_end5621
  if2583_else5620:
    null $P5012
    set $P5013, $P5012
  if2583_end5621:
    unless_null $P5013, vivi_25845623
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_25845623:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5626
    nqp_get_sc_object $P5018, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5017, $P5018
    set fb_tmp_500, $P5017
    repr_defined $I5003, fb_tmp_500
    unless $I5003 goto if2586_else5627 
    set $P5019, fb_tmp_500["$RETURN_USED"]
    set $P5021, $P5019
    goto if2586_end5628
  if2586_else5627:
    null $P5020
    set $P5021, $P5020
  if2586_end5628:
    unless_null $P5021, vivi_25875629
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_25875629:
    unless_null $P5021, vivi_25885630
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_25885630:
    set $P5016, $P5021
  fallback5626:
    set $P5029, $P5016
    unless $P5016 goto if2585_end5625 
.annotate 'line', 2399
.annotate 'line', 2400
    set fb_tmp_501, $P101
    repr_defined $I5004, fb_tmp_501
    unless $I5004 goto if2589_else5631 
    set $P5024, fb_tmp_501[1]
    set $P5026, $P5024
    goto if2589_end5632
  if2589_else5631:
    null $P5025
    set $P5026, $P5025
  if2589_end5632:
    unless_null $P5026, vivi_25905633
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_25905633:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2585_end5625:
  if2580_end5615:
.annotate 'line', 2403
    $P101."blocktype"("declaration")
    set $P102, $P101
    unless_null _lex_param_1, fallback5638
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5030
  fallback5638:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5005, fb_tmp_502
    unless $I5005 goto if2592_else5636 
    set $P5031, fb_tmp_502["deflongname"]
    set $P5033, $P5031
    goto if2592_end5637
  if2592_else5636:
    null $P5032
    set $P5033, $P5032
  if2592_end5637:
    unless_null $P5033, vivi_25935639
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5034
  vivi_25935639:
    unless $P5033 goto if2591_else5634 
    .const 'Sub' $P5035 = 'cuid_480_1381944288.90674' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2591_end5635
  if2591_else5634:
.annotate 'line', 2523
.annotate 'line', 2524
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5811
    nqp_get_sc_object $P5039, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5038, $P5039
    set fb_tmp_535, $P5038
    repr_defined $I5006, fb_tmp_535
    unless $I5006 goto if2693_else5812 
    set $P5040, fb_tmp_535["$W"]
    set $P5042, $P5040
    goto if2693_end5813
  if2693_else5812:
    null $P5041
    set $P5042, $P5041
  if2693_end5813:
    unless_null $P5042, vivi_26945814
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5042, $P5043
  vivi_26945814:
    unless_null $P5042, vivi_26955815
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_26955815:
    set $P5037, $P5042
  fallback5811:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2692_end5810 
.annotate 'line', 2525
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback5816
    nqp_get_sc_object $P5048, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5047, $P5048
    set fb_tmp_536, $P5047
    repr_defined $I5007, fb_tmp_536
    unless $I5007 goto if2696_else5817 
    set $P5049, fb_tmp_536["$W"]
    set $P5051, $P5049
    goto if2696_end5818
  if2696_else5817:
    null $P5050
    set $P5051, $P5050
  if2696_end5818:
    unless_null $P5051, vivi_26975819
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5051, $P5052
  vivi_26975819:
    unless_null $P5051, vivi_26985820
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_26985820:
    set $P5046, $P5051
  fallback5816:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2692_end5810:
  if2591_end5635:
.annotate 'line', 2529
    nqp_get_sc_object $P5056, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2532
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5825
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5058
  fallback5825:
    set fb_tmp_537, _lex_param_1
    repr_defined $I5008, fb_tmp_537
    unless $I5008 goto if2700_else5823 
    set $P5059, fb_tmp_537["trait"]
    set $P5061, $P5059
    goto if2700_end5824
  if2700_else5823:
    null $P5060
    set $P5061, $P5060
  if2700_end5824:
    unless_null $P5061, vivi_27015826
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5061, $P5062
  vivi_27015826:
    set $P5073, $P5061
    unless $P5061 goto if2699_end5822 
.annotate 'line', 2535
    unless_null _lex_param_1, fallback5829
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5066
  fallback5829:
    set fb_tmp_538, _lex_param_1
    repr_defined $I5009, fb_tmp_538
    unless $I5009 goto if2702_else5827 
    set $P5067, fb_tmp_538["trait"]
    set $P5069, $P5067
    goto if2702_end5828
  if2702_else5827:
    null $P5068
    set $P5069, $P5068
  if2702_end5828:
    unless_null $P5069, vivi_27035830
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5069, $P5070
  vivi_27035830:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next5831:
    unless $P5065, for_done5833
    shift $P5072, $P5065
  for_redo5832:
    .const 'Sub' $P5071 = 'cuid_483_1381944288.90674' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next5831
  for_done5833:
    set $P5073, $P5063
  if2699_end5822:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1381944288.90674") :anon :lex :outer("cuid_299_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2406
    .const 'Sub' $P5088 = 'cuid_479_1381944288.90674' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_481_1381944288.90674' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_482_1381944288.90674' 
    capture_lex $P5088 
    .lex "$name", $P101 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5642
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback5642:
    set fb_tmp_503, $P5002
    repr_defined $I5001, fb_tmp_503
    unless $I5001 goto if2594_else5640 
    set $P5004, fb_tmp_503["sigil"]
    set $P5006, $P5004
    goto if2594_end5641
  if2594_else5640:
    null $P5005
    set $P5006, $P5005
  if2594_end5641:
    unless_null $P5006, vivi_25955643
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_25955643:
    set $S5002, $P5006
.annotate 'line', 2407
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5646
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  fallback5646:
    set fb_tmp_504, $P5008
    repr_defined $I5002, fb_tmp_504
    unless $I5002 goto if2596_else5644 
    set $P5010, fb_tmp_504["deflongname"]
    set $P5012, $P5010
    goto if2596_end5645
  if2596_else5644:
    null $P5011
    set $P5012, $P5011
  if2596_end5645:
    unless_null $P5012, vivi_25975647
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_25975647:
    $P5014 = $P5012."ast"()
    set $S5003, $P5014
    concat $S5001, $S5002, $S5003
    box $P5015, $S5001
    set $P101, $P5015
.annotate 'line', 2408
    find_lex $P5016, "$past"
    $P5016."name"($P101)
    find_dynamic_lex $P5017, "$*SCOPE"
    unless_null $P5017, fallback5654
    nqp_get_sc_object $P5019, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5018, $P5019
    set fb_tmp_505, $P5018
    repr_defined $I5004, fb_tmp_505
    unless $I5004 goto if2601_else5655 
    set $P5020, fb_tmp_505["$SCOPE"]
    set $P5022, $P5020
    goto if2601_end5656
  if2601_else5655:
    null $P5021
    set $P5022, $P5021
  if2601_end5656:
    unless_null $P5022, vivi_26025657
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_26025657:
    unless_null $P5022, vivi_26035658
    die "Contextual $*SCOPE not found"
    box $P5024, "Contextual $*SCOPE not found"
    set $P5022, $P5024
  vivi_26035658:
    set $P5017, $P5022
  fallback5654:
    set $S5004, $P5017
    iseq $I5003, $S5004, ""
    set $I5007, $I5003
    if $I5003 goto unless2600_end5653 
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback5659
    nqp_get_sc_object $P5027, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5026, $P5027
    set fb_tmp_506, $P5026
    repr_defined $I5006, fb_tmp_506
    unless $I5006 goto if2604_else5660 
    set $P5028, fb_tmp_506["$SCOPE"]
    set $P5030, $P5028
    goto if2604_end5661
  if2604_else5660:
    null $P5029
    set $P5030, $P5029
  if2604_end5661:
    unless_null $P5030, vivi_26055662
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5030, $P5031
  vivi_26055662:
    unless_null $P5030, vivi_26065663
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26065663:
    set $P5025, $P5030
  fallback5659:
    set $S5005, $P5025
    iseq $I5005, $S5005, "my"
    set $I5007, $I5005
  unless2600_end5653:
    set $I5010, $I5007
    if $I5007 goto unless2599_end5651 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback5664
    nqp_get_sc_object $P5035, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5034, $P5035
    set fb_tmp_507, $P5034
    repr_defined $I5009, fb_tmp_507
    unless $I5009 goto if2607_else5665 
    set $P5036, fb_tmp_507["$SCOPE"]
    set $P5038, $P5036
    goto if2607_end5666
  if2607_else5665:
    null $P5037
    set $P5038, $P5037
  if2607_end5666:
    unless_null $P5038, vivi_26085667
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5038, $P5039
  vivi_26085667:
    unless_null $P5038, vivi_26095668
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26095668:
    set $P5033, $P5038
  fallback5664:
    set $S5006, $P5033
    iseq $I5008, $S5006, "our"
    set $I5010, $I5008
  unless2599_end5651:
    unless $I5010 goto if2598_else5648 
.annotate 'line', 2409
    find_dynamic_lex $P5041, "$*MULTINESS"
    unless_null $P5041, fallback5671
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5042, $P5043
    set fb_tmp_508, $P5042
    repr_defined $I5012, fb_tmp_508
    unless $I5012 goto if2611_else5672 
    set $P5044, fb_tmp_508["$MULTINESS"]
    set $P5046, $P5044
    goto if2611_end5673
  if2611_else5672:
    null $P5045
    set $P5046, $P5045
  if2611_end5673:
    unless_null $P5046, vivi_26125674
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5046, $P5047
  vivi_26125674:
    unless_null $P5046, vivi_26135675
    die "Contextual $*MULTINESS not found"
    box $P5048, "Contextual $*MULTINESS not found"
    set $P5046, $P5048
  vivi_26135675:
    set $P5041, $P5046
  fallback5671:
    set $S5007, $P5041
    iseq $I5011, $S5007, "multi"
    unless $I5011 goto if2610_else5669 
    .const 'Sub' $P5049 = 'cuid_479_1381944288.90674' 
    capture_lex $P5049
    $P5050 = $P5049()
    goto if2610_end5670
  if2610_else5669:
    find_dynamic_lex $P5051, "$*MULTINESS"
    unless_null $P5051, fallback5731
    nqp_get_sc_object $P5053, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5052, $P5053
    set fb_tmp_519, $P5052
    repr_defined $I5014, fb_tmp_519
    unless $I5014 goto if2645_else5732 
    set $P5054, fb_tmp_519["$MULTINESS"]
    set $P5056, $P5054
    goto if2645_end5733
  if2645_else5732:
    null $P5055
    set $P5056, $P5055
  if2645_end5733:
    unless_null $P5056, vivi_26465734
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5056, $P5057
  vivi_26465734:
    unless_null $P5056, vivi_26475735
    die "Contextual $*MULTINESS not found"
    box $P5058, "Contextual $*MULTINESS not found"
    set $P5056, $P5058
  vivi_26475735:
    set $P5051, $P5056
  fallback5731:
    set $S5008, $P5051
    iseq $I5013, $S5008, "proto"
    unless $I5013 goto if2644_else5729 
    .const 'Sub' $P5059 = 'cuid_481_1381944288.90674' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if2644_end5730
  if2644_else5729:
    .const 'Sub' $P5061 = 'cuid_482_1381944288.90674' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if2644_end5730:
  if2610_end5670:
.annotate 'line', 2512
    nqp_get_sc_object $P5064, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5065 = $P5064."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5065
    goto if2598_end5649
  if2598_else5648:
.annotate 'line', 2514
.annotate 'line', 2515
    find_lex $P5066, "$/"
    $P5067 = $P5066."CURSOR"()
    find_dynamic_lex $P5068, "$*SCOPE"
    unless_null $P5068, fallback5795
    nqp_get_sc_object $P5070, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5069, $P5070
    set fb_tmp_533, $P5069
    repr_defined $I5015, fb_tmp_533
    unless $I5015 goto if2684_else5796 
    set $P5071, fb_tmp_533["$SCOPE"]
    set $P5073, $P5071
    goto if2684_end5797
  if2684_else5796:
    null $P5072
    set $P5073, $P5072
  if2684_end5797:
    unless_null $P5073, vivi_26855798
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5073, $P5074
  vivi_26855798:
    unless_null $P5073, vivi_26865799
    die "Contextual $*SCOPE not found"
    box $P5075, "Contextual $*SCOPE not found"
    set $P5073, $P5075
  vivi_26865799:
    set $P5068, $P5073
  fallback5795:
    set $S5012, $P5068
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5076 = $P5067."panic"($S5011)
  if2598_end5649:
    set $S5013, $P101
    iseq $I5016, $S5013, "MAIN"
    set $I5019, $I5016
    unless $I5016 goto if2688_end5803 
    find_dynamic_lex $P5077, "$*MULTINESS"
    unless_null $P5077, fallback5804
    nqp_get_sc_object $P5079, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5078, $P5079
    set fb_tmp_534, $P5078
    repr_defined $I5018, fb_tmp_534
    unless $I5018 goto if2689_else5805 
    set $P5080, fb_tmp_534["$MULTINESS"]
    set $P5082, $P5080
    goto if2689_end5806
  if2689_else5805:
    null $P5081
    set $P5082, $P5081
  if2689_end5806:
    unless_null $P5082, vivi_26905807
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_26905807:
    unless_null $P5082, vivi_26915808
    die "Contextual $*MULTINESS not found"
    box $P5084, "Contextual $*MULTINESS not found"
    set $P5082, $P5084
  vivi_26915808:
    set $P5077, $P5082
  fallback5804:
    set $S5014, $P5077
    isne $I5017, $S5014, "multi"
    set $I5019, $I5017
  if2688_end5803:
    box $P5087, $I5019
    set $P5086, $P5087
    unless $I5019 goto if2687_end5801 
.annotate 'line', 2519
    find_lex $P5085, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5085
    set $P5086, $P5085
  if2687_end5801:
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1381944288.90674") :anon :lex :outer("cuid_480_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2410
    .const 'Sub' $P5063 = 'cuid_478_1381944288.90674' 
    capture_lex $P5063 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback5678
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5006, $P5007
    set fb_tmp_509, $P5006
    repr_defined $I5002, fb_tmp_509
    unless $I5002 goto if2615_else5679 
    set $P5008, fb_tmp_509["$SCOPE"]
    set $P5010, $P5008
    goto if2615_end5680
  if2615_else5679:
    null $P5009
    set $P5010, $P5009
  if2615_end5680:
    unless_null $P5010, vivi_26165681
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_26165681:
    unless_null $P5010, vivi_26175682
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26175682:
    set $P5005, $P5010
  fallback5678:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2614_end5677 
.annotate 'line', 2412
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2614_end5677:
.annotate 'line', 2414
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback5683
    nqp_get_sc_object $P5016, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5015, $P5016
    set fb_tmp_510, $P5015
    repr_defined $I5003, fb_tmp_510
    unless $I5003 goto if2618_else5684 
    set $P5017, fb_tmp_510["$W"]
    set $P5019, $P5017
    goto if2618_end5685
  if2618_else5684:
    null $P5018
    set $P5019, $P5018
  if2618_end5685:
    unless_null $P5019, vivi_26195686
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_26195686:
    unless_null $P5019, vivi_26205687
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26205687:
    set $P5014, $P5019
  fallback5683:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_511, $P102
    repr_defined $I5004, fb_tmp_511
    unless $I5004 goto if2622_else5690 
    set $P5025, fb_tmp_511["proto"]
    set $P5027, $P5025
    goto if2622_end5691
  if2622_else5690:
    null $P5026
    set $P5027, $P5026
  if2622_end5691:
    unless_null $P5027, vivi_26235692
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5027, $P5028
  vivi_26235692:
    unless $P5027 goto if2621_else5688 
.annotate 'line', 2415
    set fb_tmp_512, $P102
    repr_defined $I5005, fb_tmp_512
    unless $I5005 goto if2624_else5693 
    set $P5029, fb_tmp_512["value"]
    set $P5031, $P5029
    goto if2624_end5694
  if2624_else5693:
    null $P5030
    set $P5031, $P5030
  if2624_end5694:
    unless_null $P5031, vivi_26255695
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_26255695:
    set $P101, $P5031
    goto if2621_end5689
  if2621_else5688:
    .const 'Sub' $P5033 = 'cuid_478_1381944288.90674' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2621_end5689:
.annotate 'line', 2444
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback5716
    nqp_get_sc_object $P5037, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5036, $P5037
    set fb_tmp_516, $P5036
    repr_defined $I5006, fb_tmp_516
    unless $I5006 goto if2636_else5717 
    set $P5038, fb_tmp_516["$W"]
    set $P5040, $P5038
    goto if2636_end5718
  if2636_else5717:
    null $P5039
    set $P5040, $P5039
  if2636_end5718:
    unless_null $P5040, vivi_26375719
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5041
  vivi_26375719:
    unless_null $P5040, vivi_26385720
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26385720:
    set $P5035, $P5040
  fallback5716:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2445
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2448
    $P101."add_dispatchee"($P103)
.annotate 'line', 2454
    find_lex $P5047, "$past"
    $P5047."blocktype"("declaration_static")
.annotate 'line', 2455
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5721
    nqp_get_sc_object $P5050, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5049, $P5050
    set fb_tmp_517, $P5049
    repr_defined $I5007, fb_tmp_517
    unless $I5007 goto if2639_else5722 
    set $P5051, fb_tmp_517["$W"]
    set $P5053, $P5051
    goto if2639_end5723
  if2639_else5722:
    null $P5052
    set $P5053, $P5052
  if2639_end5723:
    unless_null $P5053, vivi_26405724
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5053, $P5054
  vivi_26405724:
    unless_null $P5053, vivi_26415725
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_26415725:
    set $P5048, $P5053
  fallback5721:
    $P5056 = $P5048."cur_lexpad"()
    set $P104, $P5056
.annotate 'line', 2456
    set fb_tmp_518, $P104
    repr_defined $I5008, fb_tmp_518
    unless $I5008 goto if2642_else5726 
    set $P5057, fb_tmp_518[0]
    set $P5059, $P5057
    goto if2642_end5727
  if2642_else5726:
    null $P5058
    set $P5059, $P5058
  if2642_end5727:
    unless_null $P5059, vivi_26435728
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5059, $P5060
  vivi_26435728:
    find_lex $P5061, "$past"
    $P5062 = $P5059."push"($P5061)
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1381944288.90674") :anon :lex :outer("cuid_479_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2420
    .const 'Sub' $P5020 = 'cuid_477_1381944288.90674' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_513 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2423
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback5696
    nqp_get_sc_object $P5007, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5006, $P5007
    set fb_tmp_513, $P5006
    repr_defined $I5001, fb_tmp_513
    unless $I5001 goto if2626_else5697 
    set $P5008, fb_tmp_513["$W"]
    set $P5010, $P5008
    goto if2626_end5698
  if2626_else5697:
    null $P5009
    set $P5010, $P5009
  if2626_end5698:
    unless_null $P5010, vivi_26275699
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_26275699:
    unless_null $P5010, vivi_26285700
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26285700:
    set $P5005, $P5010
  fallback5696:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next5711:
    unless $P5004, for_done5713
    shift $P5015, $P5004
  for_redo5712:
    .const 'Sub' $P5014 = 'cuid_477_1381944288.90674' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next5711
  for_done5713:
    if $P101 goto unless2635_end5715 
.annotate 'line', 2435
.annotate 'line', 2436
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2635_end5715:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1381944288.90674") :anon :lex :outer("cuid_478_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2423
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2424
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_514, $P101
    repr_defined $I5001, fb_tmp_514
    unless $I5001 goto if2630_else5703 
    set $P5004, fb_tmp_514["proto"]
    set $P5006, $P5004
    goto if2630_end5704
  if2630_else5703:
    null $P5005
    set $P5006, $P5005
  if2630_end5704:
    unless_null $P5006, vivi_26315705
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_26315705:
    unless $P5006 goto if2629_else5701 
.annotate 'line', 2425
    set fb_tmp_515, $P101
    repr_defined $I5002, fb_tmp_515
    unless $I5002 goto if2632_else5706 
    set $P5008, fb_tmp_515["value"]
    set $P5010, $P5008
    goto if2632_end5707
  if2632_else5706:
    null $P5009
    set $P5010, $P5009
  if2632_end5707:
    unless_null $P5010, vivi_26335708
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_26335708:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2629_end5702
  if2629_else5701:
    set $P5016, $P101
    unless $P101 goto if2634_end5710 
.annotate 'line', 2429
.annotate 'line', 2430
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2634_end5710:
    set $P5017, $P5016
  if2629_end5702:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1381944288.90674") :anon :lex :outer("cuid_480_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2458
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback5738
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_520, $P5004
    repr_defined $I5002, fb_tmp_520
    unless $I5002 goto if2649_else5739 
    set $P5006, fb_tmp_520["$SCOPE"]
    set $P5008, $P5006
    goto if2649_end5740
  if2649_else5739:
    null $P5007
    set $P5008, $P5007
  if2649_end5740:
    unless_null $P5008, vivi_26505741
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_26505741:
    unless_null $P5008, vivi_26515742
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26515742:
    set $P5003, $P5008
  fallback5738:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2648_end5737 
.annotate 'line', 2462
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2648_end5737:
.annotate 'line', 2463
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback5743
    nqp_get_sc_object $P5014, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5013, $P5014
    set fb_tmp_521, $P5013
    repr_defined $I5003, fb_tmp_521
    unless $I5003 goto if2652_else5744 
    set $P5015, fb_tmp_521["$W"]
    set $P5017, $P5015
    goto if2652_end5745
  if2652_else5744:
    null $P5016
    set $P5017, $P5016
  if2652_end5745:
    unless_null $P5017, vivi_26535746
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_26535746:
    unless_null $P5017, vivi_26545747
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26545747:
    set $P5012, $P5017
  fallback5743:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2464
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5748
    nqp_get_sc_object $P5025, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5024, $P5025
    set fb_tmp_522, $P5024
    repr_defined $I5004, fb_tmp_522
    unless $I5004 goto if2655_else5749 
    set $P5026, fb_tmp_522["$W"]
    set $P5028, $P5026
    goto if2655_end5750
  if2655_else5749:
    null $P5027
    set $P5028, $P5027
  if2655_end5750:
    unless_null $P5028, vivi_26565751
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_26565751:
    unless_null $P5028, vivi_26575752
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26575752:
    set $P5023, $P5028
  fallback5748:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2465
    set fb_tmp_523, $P102
    repr_defined $I5005, fb_tmp_523
    unless $I5005 goto if2658_else5753 
    set $P5032, fb_tmp_523[0]
    set $P5034, $P5032
    goto if2658_end5754
  if2658_else5753:
    null $P5033
    set $P5034, $P5033
  if2658_end5754:
    unless_null $P5034, vivi_26595755
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  vivi_26595755:
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2467
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2470
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2474
    find_lex $P5043, "$block"
    set fb_tmp_524, $P5043
    repr_defined $I5006, fb_tmp_524
    unless $I5006 goto if2660_else5756 
    set $P5044, fb_tmp_524[0]
    set $P5046, $P5044
    goto if2660_end5757
  if2660_else5756:
    null $P5045
    set $P5046, $P5045
  if2660_end5757:
    unless_null $P5046, vivi_26615758
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5046, $P5047
  vivi_26615758:
    nqp_get_sc_object $P5048, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2476
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2477
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2479
    find_lex $P5054, "$block"
    set fb_tmp_525, $P5054
    repr_defined $I5007, fb_tmp_525
    unless $I5007 goto if2662_else5759 
    set $P5055, fb_tmp_525[0]
    set $P5057, $P5055
    goto if2662_end5760
  if2662_else5759:
    null $P5056
    set $P5057, $P5056
  if2662_end5760:
    unless_null $P5057, vivi_26635761
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5057, $P5058
  vivi_26635761:
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2481
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2482
    nqp_get_sc_object $P5062, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5063, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1381944288.90674") :anon :lex :outer("cuid_480_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2485
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2486
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5762
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_526, $P5003
    repr_defined $I5001, fb_tmp_526
    unless $I5001 goto if2664_else5763 
    set $P5005, fb_tmp_526["$W"]
    set $P5007, $P5005
    goto if2664_end5764
  if2664_else5763:
    null $P5006
    set $P5007, $P5006
  if2664_end5764:
    unless_null $P5007, vivi_26655765
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_26655765:
    unless_null $P5007, vivi_26665766
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26665766:
    set $P5002, $P5007
  fallback5762:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2487
    set fb_tmp_527, $P101
    repr_defined $I5002, fb_tmp_527
    unless $I5002 goto if2667_else5767 
    set $P5011, fb_tmp_527[0]
    set $P5013, $P5011
    goto if2667_end5768
  if2667_else5767:
    null $P5012
    set $P5013, $P5012
  if2667_end5768:
    unless_null $P5013, vivi_26685769
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_26685769:
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2489
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2492
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback5772
    nqp_get_sc_object $P5024, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5023, $P5024
    set fb_tmp_528, $P5023
    repr_defined $I5004, fb_tmp_528
    unless $I5004 goto if2670_else5773 
    set $P5025, fb_tmp_528["$SCOPE"]
    set $P5027, $P5025
    goto if2670_end5774
  if2670_else5773:
    null $P5026
    set $P5027, $P5026
  if2670_end5774:
    unless_null $P5027, vivi_26715775
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5027, $P5028
  vivi_26715775:
    unless_null $P5027, vivi_26725776
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_26725776:
    set $P5022, $P5027
  fallback5772:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5074, $I5003
    set $P5073, $P5074
    unless $I5003 goto if2669_end5771 
.annotate 'line', 2493
.annotate 'line', 2496
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5777
    nqp_get_sc_object $P5032, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5031, $P5032
    set fb_tmp_529, $P5031
    repr_defined $I5005, fb_tmp_529
    unless $I5005 goto if2673_else5778 
    set $P5033, fb_tmp_529["$W"]
    set $P5035, $P5033
    goto if2673_end5779
  if2673_else5778:
    null $P5034
    set $P5035, $P5034
  if2673_end5779:
    unless_null $P5035, vivi_26745780
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5035, $P5036
  vivi_26745780:
    unless_null $P5035, vivi_26755781
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_26755781:
    set $P5030, $P5035
  fallback5777:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5782
    nqp_get_sc_object $P5040, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5039, $P5040
    set fb_tmp_530, $P5039
    repr_defined $I5006, fb_tmp_530
    unless $I5006 goto if2676_else5783 
    set $P5041, fb_tmp_530["$PACKAGE"]
    set $P5043, $P5041
    goto if2676_end5784
  if2676_else5783:
    null $P5042
    set $P5043, $P5042
  if2676_end5784:
    unless_null $P5043, vivi_26775785
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5043, $P5044
  vivi_26775785:
    unless_null $P5043, vivi_26785786
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_26785786:
    set $P5038, $P5043
  fallback5782:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2497
    set fb_tmp_531, $P101
    repr_defined $I5007, fb_tmp_531
    unless $I5007 goto if2679_else5787 
    set $P5048, fb_tmp_531[0]
    set $P5050, $P5048
    goto if2679_end5788
  if2679_else5787:
    null $P5049
    set $P5050, $P5049
  if2679_end5788:
    unless_null $P5050, vivi_26805789
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5050, $P5051
  vivi_26805789:
    nqp_get_sc_object $P5052, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2499
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2500
    nqp_get_sc_object $P5057, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5050."push"($P5060)
.annotate 'line', 2505
    find_lex $P5061, "$past"
    $P5061."blocktype"("declaration_static")
.annotate 'line', 2509
    find_dynamic_lex $P5062, "$*W"
    unless_null $P5062, fallback5790
    nqp_get_sc_object $P5064, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5063, $P5064
    set fb_tmp_532, $P5063
    repr_defined $I5008, fb_tmp_532
    unless $I5008 goto if2681_else5791 
    set $P5065, fb_tmp_532["$W"]
    set $P5067, $P5065
    goto if2681_end5792
  if2681_else5791:
    null $P5066
    set $P5067, $P5066
  if2681_end5792:
    unless_null $P5067, vivi_26825793
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5067, $P5068
  vivi_26825793:
    unless_null $P5067, vivi_26835794
    die "Contextual $*W not found"
    box $P5069, "Contextual $*W not found"
    set $P5067, $P5069
  vivi_26835794:
    set $P5062, $P5067
  fallback5790:
    find_lex $P5070, "$past"
    find_lex $P5071, "$name"
    $P5072 = $P5062."create_code"($P5070, $P5071, 0)
    set $P5073, $P5072
  if2669_end5771:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1381944288.90674") :anon :lex :outer("cuid_299_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2536
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_300_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2540
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5113 = 'cuid_484_1381944288.90674' 
    capture_lex $P5113 
    .const 'Sub' $P5113 = 'cuid_485_1381944288.90674' 
    capture_lex $P5113 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5838
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5004
  fallback5838:
    set fb_tmp_539, _lex_param_1
    repr_defined $I5001, fb_tmp_539
    unless $I5001 goto if2705_else5836 
    set $P5005, fb_tmp_539["onlystar"]
    set $P5007, $P5005
    goto if2705_end5837
  if2705_else5836:
    null $P5006
    set $P5007, $P5006
  if2705_end5837:
    unless_null $P5007, vivi_27065839
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_27065839:
    unless $P5007 goto if2704_else5834 
.annotate 'line', 2544
.annotate 'line', 2545
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2704_end5835
  if2704_else5834:
.annotate 'line', 2547
.annotate 'line', 2548
    unless_null _lex_param_1, fallback5842
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5010
  fallback5842:
    set fb_tmp_540, _lex_param_1
    repr_defined $I5002, fb_tmp_540
    unless $I5002 goto if2707_else5840 
    set $P5011, fb_tmp_540["blockoid"]
    set $P5013, $P5011
    goto if2707_end5841
  if2707_else5840:
    null $P5012
    set $P5013, $P5012
  if2707_end5841:
    unless_null $P5013, vivi_27085843
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_27085843:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5846
    nqp_get_sc_object $P5018, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5017, $P5018
    set fb_tmp_541, $P5017
    repr_defined $I5003, fb_tmp_541
    unless $I5003 goto if2710_else5847 
    set $P5019, fb_tmp_541["$RETURN_USED"]
    set $P5021, $P5019
    goto if2710_end5848
  if2710_else5847:
    null $P5020
    set $P5021, $P5020
  if2710_end5848:
    unless_null $P5021, vivi_27115849
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_27115849:
    unless_null $P5021, vivi_27125850
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27125850:
    set $P5016, $P5021
  fallback5846:
    set $P5029, $P5016
    unless $P5016 goto if2709_end5845 
.annotate 'line', 2549
.annotate 'line', 2550
    set fb_tmp_542, $P101
    repr_defined $I5004, fb_tmp_542
    unless $I5004 goto if2713_else5851 
    set $P5024, fb_tmp_542[1]
    set $P5026, $P5024
    goto if2713_end5852
  if2713_else5851:
    null $P5025
    set $P5026, $P5025
  if2713_end5852:
    unless_null $P5026, vivi_27145853
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_27145853:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2709_end5845:
  if2704_end5835:
.annotate 'line', 2553
    $P101."blocktype"("declaration_static")
    set fb_tmp_543, $P101
    repr_defined $I5005, fb_tmp_543
    unless $I5005 goto if2716_else5856 
    set $P5030, fb_tmp_543["signature_has_invocant"]
    set $P5032, $P5030
    goto if2716_end5857
  if2716_else5856:
    null $P5031
    set $P5032, $P5031
  if2716_end5857:
    unless_null $P5032, vivi_27175858
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5032, $P5033
  vivi_27175858:
    if $P5032 goto unless2715_end5855 
.annotate 'line', 2556
.annotate 'line', 2557
    set fb_tmp_544, $P101
    repr_defined $I5006, fb_tmp_544
    unless $I5006 goto if2718_else5859 
    set $P5034, fb_tmp_544[0]
    set $P5036, $P5034
    goto if2718_end5860
  if2718_else5859:
    null $P5035
    set $P5036, $P5035
  if2718_end5860:
    unless_null $P5036, vivi_27195861
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5036, $P5037
  vivi_27195861:
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback5862
    nqp_get_sc_object $P5041, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5040, $P5041
    set fb_tmp_545, $P5040
    repr_defined $I5007, fb_tmp_545
    unless $I5007 goto if2720_else5863 
    set $P5042, fb_tmp_545["$PACKAGE"]
    set $P5044, $P5042
    goto if2720_end5864
  if2720_else5863:
    null $P5043
    set $P5044, $P5043
  if2720_end5864:
    unless_null $P5044, vivi_27215865
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5044, $P5045
  vivi_27215865:
    unless_null $P5044, vivi_27225866
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27225866:
    set $P5039, $P5044
  fallback5862:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2715_end5855:
.annotate 'line', 2562
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback5871
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5050
  fallback5871:
    set fb_tmp_546, _lex_param_1
    repr_defined $I5008, fb_tmp_546
    unless $I5008 goto if2724_else5869 
    set $P5051, fb_tmp_546["deflongname"]
    set $P5053, $P5051
    goto if2724_end5870
  if2724_else5869:
    null $P5052
    set $P5053, $P5052
  if2724_end5870:
    unless_null $P5053, vivi_27255872
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5053, $P5054
  vivi_27255872:
    unless $P5053 goto if2723_else5867 
.annotate 'line', 2566
    unless_null _lex_param_1, fallback5875
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5055
  fallback5875:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5009, fb_tmp_547
    unless $I5009 goto if2726_else5873 
    set $P5056, fb_tmp_547["private"]
    set $P5058, $P5056
    goto if2726_end5874
  if2726_else5873:
    null $P5057
    set $P5058, $P5057
  if2726_end5874:
    unless_null $P5058, vivi_27275876
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5058, $P5059
  vivi_27275876:
    set $S5002, $P5058
.annotate 'line', 2567
    unless_null _lex_param_1, fallback5879
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5060
  fallback5879:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5010, fb_tmp_548
    unless $I5010 goto if2728_else5877 
    set $P5061, fb_tmp_548["deflongname"]
    set $P5063, $P5061
    goto if2728_end5878
  if2728_else5877:
    null $P5062
    set $P5063, $P5062
  if2728_end5878:
    unless_null $P5063, vivi_27295880
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5063, $P5064
  vivi_27295880:
    $P5065 = $P5063."ast"()
    set $S5003, $P5065
    concat $S5001, $S5002, $S5003
    box $P5066, $S5001
    set $P102, $P5066
    goto if2723_end5868
  if2723_else5867:
    unless_null _lex_param_1, fallback5885
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5067
  fallback5885:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5011, fb_tmp_549
    unless $I5011 goto if2731_else5883 
    set $P5068, fb_tmp_549["latename"]
    set $P5070, $P5068
    goto if2731_end5884
  if2731_else5883:
    null $P5069
    set $P5070, $P5069
  if2731_end5884:
    unless_null $P5070, vivi_27325886
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5070, $P5071
  vivi_27325886:
    set $P5088, $P5070
    unless $P5070 goto if2730_end5882 
.annotate 'line', 2569
    find_dynamic_lex $P5072, "$*PKGDECL"
    unless_null $P5072, fallback5889
    nqp_get_sc_object $P5074, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5073, $P5074
    set fb_tmp_550, $P5073
    repr_defined $I5013, fb_tmp_550
    unless $I5013 goto if2734_else5890 
    set $P5075, fb_tmp_550["$PKGDECL"]
    set $P5077, $P5075
    goto if2734_end5891
  if2734_else5890:
    null $P5076
    set $P5077, $P5076
  if2734_end5891:
    unless_null $P5077, vivi_27355892
    nqp_get_sc_object $P5078, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5077, $P5078
  vivi_27355892:
    unless_null $P5077, vivi_27365893
    die "Contextual $*PKGDECL not found"
    box $P5079, "Contextual $*PKGDECL not found"
    set $P5077, $P5079
  vivi_27365893:
    set $P5072, $P5077
  fallback5889:
    set $S5004, $P5072
    isne $I5012, $S5004, "role"
    unless $I5012 goto if2733_end5888 
.annotate 'line', 2570
.annotate 'line', 2571
    $P5080 = _lex_param_1."CURSOR"()
    $P5081 = $P5080."panic"("Late-bound method name only valid in role")
  if2733_end5888:
    unless_null _lex_param_1, fallback5896
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5082
  fallback5896:
    set fb_tmp_551, _lex_param_1
    repr_defined $I5014, fb_tmp_551
    unless $I5014 goto if2737_else5894 
    set $P5083, fb_tmp_551["latename"]
    set $P5085, $P5083
    goto if2737_end5895
  if2737_else5894:
    null $P5084
    set $P5085, $P5084
  if2737_end5895:
    unless_null $P5085, vivi_27385897
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5085, $P5086
  vivi_27385897:
    set $S5006, $P5085
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5087, $S5005
    set $P102, $P5087
    set $P5088, $P102
  if2730_end5882:
  if2723_end5868:
    set $S5007, $P102
    isne $I5015, $S5007, ""
    unless $I5015 goto if2739_end5899 
    .const 'Sub' $P5089 = 'cuid_484_1381944288.90674' 
    capture_lex $P5089
    $P5090 = $P5089()
  if2739_end5899:
.annotate 'line', 2609
    nqp_get_sc_object $P5091, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5092 = $P5091."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5092
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_563, $P101
    repr_defined $I5016, fb_tmp_563
    unless $I5016 goto if2775_else5959 
    set $P5093, fb_tmp_563["code_obj"]
    set $P5095, $P5093
    goto if2775_end5960
  if2775_else5959:
    null $P5094
    set $P5095, $P5094
  if2775_end5960:
    unless_null $P5095, vivi_27765961
    nqp_get_sc_object $P5096, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5095, $P5096
  vivi_27765961:
    set $P103["code_obj"], $P5095
.annotate 'line', 2613
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5966
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5097
  fallback5966:
    set fb_tmp_564, _lex_param_1
    repr_defined $I5017, fb_tmp_564
    unless $I5017 goto if2778_else5964 
    set $P5098, fb_tmp_564["trait"]
    set $P5100, $P5098
    goto if2778_end5965
  if2778_else5964:
    null $P5099
    set $P5100, $P5099
  if2778_end5965:
    unless_null $P5100, vivi_27795967
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5100, $P5101
  vivi_27795967:
    set $P5112, $P5100
    unless $P5100 goto if2777_end5963 
.annotate 'line', 2614
    unless_null _lex_param_1, fallback5970
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5105
  fallback5970:
    set fb_tmp_565, _lex_param_1
    repr_defined $I5018, fb_tmp_565
    unless $I5018 goto if2780_else5968 
    set $P5106, fb_tmp_565["trait"]
    set $P5108, $P5106
    goto if2780_end5969
  if2780_else5968:
    null $P5107
    set $P5108, $P5107
  if2780_end5969:
    unless_null $P5108, vivi_27815971
    nqp_get_sc_object $P5109, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5108, $P5109
  vivi_27815971:
    set $P5102, $P5108
    iter $P5104, $P5108
  for_next5972:
    unless $P5104, for_done5974
    shift $P5111, $P5104
  for_redo5973:
    .const 'Sub' $P5110 = 'cuid_485_1381944288.90674' 
    capture_lex $P5110
    $P5102 = $P5110($P5111)
    goto for_next5972
  for_done5974:
    set $P5112, $P5102
  if2777_end5963:
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1381944288.90674") :anon :lex :outer("cuid_300_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2575
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 2577
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback5902
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5007, $P5008
    set fb_tmp_552, $P5007
    repr_defined $I5002, fb_tmp_552
    unless $I5002 goto if2741_else5903 
    set $P5009, fb_tmp_552["$MULTINESS"]
    set $P5011, $P5009
    goto if2741_end5904
  if2741_else5903:
    null $P5010
    set $P5011, $P5010
  if2741_end5904:
    unless_null $P5011, vivi_27425905
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_27425905:
    unless_null $P5011, vivi_27435906
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27435906:
    set $P5006, $P5011
  fallback5902:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2740_else5900 
    set $S5002, "add_multi_method"
    goto if2740_end5901
  if2740_else5900:
    set $S5002, "add_method"
  if2740_end5901:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback5907
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5016, $P5017
    set fb_tmp_553, $P5016
    repr_defined $I5004, fb_tmp_553
    unless $I5004 goto if2744_else5908 
    set $P5018, fb_tmp_553["$MULTINESS"]
    set $P5020, $P5018
    goto if2744_end5909
  if2744_else5908:
    null $P5019
    set $P5020, $P5019
  if2744_end5909:
    unless_null $P5020, vivi_27455910
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_27455910:
    unless_null $P5020, vivi_27465911
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27465911:
    set $P5015, $P5020
  fallback5907:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2582
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback5912
    nqp_get_sc_object $P5026, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5025, $P5026
    set fb_tmp_554, $P5025
    repr_defined $I5005, fb_tmp_554
    unless $I5005 goto if2747_else5913 
    set $P5027, fb_tmp_554["$W"]
    set $P5029, $P5027
    goto if2747_end5914
  if2747_else5913:
    null $P5028
    set $P5029, $P5028
  if2747_end5914:
    unless_null $P5029, vivi_27485915
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5029, $P5030
  vivi_27485915:
    unless_null $P5029, vivi_27495916
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27495916:
    set $P5024, $P5029
  fallback5912:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback5919
    nqp_get_sc_object $P5037, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5036, $P5037
    set fb_tmp_555, $P5036
    repr_defined $I5007, fb_tmp_555
    unless $I5007 goto if2751_else5920 
    set $P5038, fb_tmp_555["$MULTINESS"]
    set $P5040, $P5038
    goto if2751_end5921
  if2751_else5920:
    null $P5039
    set $P5040, $P5039
  if2751_end5921:
    unless_null $P5040, vivi_27525922
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5041
  vivi_27525922:
    unless_null $P5040, vivi_27535923
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27535923:
    set $P5035, $P5040
  fallback5919:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2750_end5918 
.annotate 'line', 2583
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2750_end5918:
.annotate 'line', 2584
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback5924
    nqp_get_sc_object $P5047, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5046, $P5047
    set fb_tmp_556, $P5046
    repr_defined $I5008, fb_tmp_556
    unless $I5008 goto if2754_else5925 
    set $P5048, fb_tmp_556["$W"]
    set $P5050, $P5048
    goto if2754_end5926
  if2754_else5925:
    null $P5049
    set $P5050, $P5049
  if2754_end5926:
    unless_null $P5050, vivi_27555927
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5050, $P5051
  vivi_27555927:
    unless_null $P5050, vivi_27565928
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27565928:
    set $P5045, $P5050
  fallback5924:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback5929
    nqp_get_sc_object $P5055, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5054, $P5055
    set fb_tmp_557, $P5054
    repr_defined $I5009, fb_tmp_557
    unless $I5009 goto if2757_else5930 
    set $P5056, fb_tmp_557["$PACKAGE"]
    set $P5058, $P5056
    goto if2757_end5931
  if2757_else5930:
    null $P5057
    set $P5058, $P5057
  if2757_end5931:
    unless_null $P5058, vivi_27585932
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5058, $P5059
  vivi_27585932:
    unless_null $P5058, vivi_27595933
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27595933:
    set $P5053, $P5058
  fallback5929:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback5936
    nqp_get_sc_object $P5065, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5064, $P5065
    set fb_tmp_558, $P5064
    repr_defined $I5011, fb_tmp_558
    unless $I5011 goto if2761_else5937 
    set $P5066, fb_tmp_558["$SCOPE"]
    set $P5068, $P5066
    goto if2761_end5938
  if2761_else5937:
    null $P5067
    set $P5068, $P5067
  if2761_end5938:
    unless_null $P5068, vivi_27625939
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5068, $P5069
  vivi_27625939:
    unless_null $P5068, vivi_27635940
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27635940:
    set $P5063, $P5068
  fallback5936:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2760_end5935 
.annotate 'line', 2588
.annotate 'line', 2589
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback5941
    nqp_get_sc_object $P5073, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5072, $P5073
    set fb_tmp_559, $P5072
    repr_defined $I5012, fb_tmp_559
    unless $I5012 goto if2764_else5942 
    set $P5074, fb_tmp_559["$W"]
    set $P5076, $P5074
    goto if2764_end5943
  if2764_else5942:
    null $P5075
    set $P5076, $P5075
  if2764_end5943:
    unless_null $P5076, vivi_27655944
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5076, $P5077
  vivi_27655944:
    unless_null $P5076, vivi_27665945
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_27665945:
    set $P5071, $P5076
  fallback5941:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback5946
    nqp_get_sc_object $P5081, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5080, $P5081
    set fb_tmp_560, $P5080
    repr_defined $I5013, fb_tmp_560
    unless $I5013 goto if2767_else5947 
    set $P5082, fb_tmp_560["$PACKAGE"]
    set $P5084, $P5082
    goto if2767_end5948
  if2767_else5947:
    null $P5083
    set $P5084, $P5083
  if2767_end5948:
    unless_null $P5084, vivi_27685949
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5084, $P5085
  vivi_27685949:
    unless_null $P5084, vivi_27695950
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_27695950:
    set $P5079, $P5084
  fallback5946:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2760_end5935:
    set $P5115, $P102
    unless $P102 goto if2770_end5952 
.annotate 'line', 2594
.annotate 'line', 2595
    find_lex $P5090, "$past"
    set fb_tmp_561, $P5090
    repr_defined $I5014, fb_tmp_561
    unless $I5014 goto if2771_else5953 
    set $P5091, fb_tmp_561[0]
    set $P5093, $P5091
    goto if2771_end5954
  if2771_else5953:
    null $P5092
    set $P5093, $P5092
  if2771_end5954:
    unless_null $P5093, vivi_27725955
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5093, $P5094
  vivi_27725955:
    nqp_get_sc_object $P5095, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2597
    nqp_get_sc_object $P5096, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2598
    nqp_get_sc_object $P5098, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2600
    find_lex $P5101, "$past"
    set fb_tmp_562, $P5101
    repr_defined $I5015, fb_tmp_562
    unless $I5015 goto if2773_else5956 
    set $P5102, fb_tmp_562[0]
    set $P5104, $P5102
    goto if2773_end5957
  if2773_else5956:
    null $P5103
    set $P5104, $P5103
  if2773_end5957:
    unless_null $P5104, vivi_27745958
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5104, $P5105
  vivi_27745958:
    nqp_get_sc_object $P5106, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2602
    nqp_get_sc_object $P5107, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2603
    nqp_get_sc_object $P5109, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    nqp_get_sc_object $P5110, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2770_end5952:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1381944288.90674") :anon :lex :outer("cuid_300_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2615
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_301_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2667
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_486_1381944288.90674' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_487_1381944288.90674' 
    capture_lex $P5039 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2668
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5975
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_566, $P5004
    repr_defined $I5001, fb_tmp_566
    unless $I5001 goto if2782_else5976 
    set $P5006, fb_tmp_566["$W"]
    set $P5008, $P5006
    goto if2782_end5977
  if2782_else5976:
    null $P5007
    set $P5008, $P5007
  if2782_end5977:
    unless_null $P5008, vivi_27835978
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_27835978:
    unless_null $P5008, vivi_27845979
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_27845979:
    set $P5003, $P5008
  fallback5975:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_567, $P101
    repr_defined $I5002, fb_tmp_567
    unless $I5002 goto if2785_else5980 
    set $P5012, fb_tmp_567[0]
    set $P5014, $P5012
    goto if2785_end5981
  if2785_else5980:
    null $P5013
    set $P5014, $P5013
  if2785_end5981:
    unless_null $P5014, vivi_27865982
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_27865982:
    set $P102, $P5014
    unless_null _lex_param_1, fallback5987
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5016
  fallback5987:
    set fb_tmp_568, _lex_param_1
    repr_defined $I5003, fb_tmp_568
    unless $I5003 goto if2788_else5985 
    set $P5017, fb_tmp_568["invocant"]
    set $P5019, $P5017
    goto if2788_end5986
  if2788_else5985:
    null $P5018
    set $P5019, $P5018
  if2788_end5986:
    unless_null $P5019, vivi_27895988
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_27895988:
    unless $P5019 goto if2787_end5984 
    .const 'Sub' $P5021 = 'cuid_486_1381944288.90674' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2787_end5984:
    unless_null _lex_param_1, fallback5997
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5023
  fallback5997:
    set fb_tmp_570, _lex_param_1
    repr_defined $I5004, fb_tmp_570
    unless $I5004 goto if2793_else5995 
    set $P5024, fb_tmp_570["parameter"]
    set $P5026, $P5024
    goto if2793_end5996
  if2793_else5995:
    null $P5025
    set $P5026, $P5025
  if2793_end5996:
    unless_null $P5026, vivi_27945998
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_27945998:
    set $P5038, $P5026
    unless $P5026 goto if2792_end5994 
.annotate 'line', 2680
    unless_null _lex_param_1, fallback6001
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5031
  fallback6001:
    set fb_tmp_571, _lex_param_1
    repr_defined $I5005, fb_tmp_571
    unless $I5005 goto if2795_else5999 
    set $P5032, fb_tmp_571["parameter"]
    set $P5034, $P5032
    goto if2795_end6000
  if2795_else5999:
    null $P5033
    set $P5034, $P5033
  if2795_end6000:
    unless_null $P5034, vivi_27966002
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  vivi_27966002:
    set $P5028, $P5034
    iter $P5030, $P5034
  for_next6003:
    unless $P5030, for_done6005
    shift $P5037, $P5030
  for_redo6004:
    .const 'Sub' $P5036 = 'cuid_487_1381944288.90674' 
    capture_lex $P5036
    $P5028 = $P5036($P5037)
    goto for_next6003
  for_done6005:
    set $P5038, $P5028
  if2792_end5994:
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1381944288.90674") :anon :lex :outer("cuid_301_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2670
    .lex "$inv", $P101 
    .local pmc fb_tmp_569 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2671
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5991
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback5991:
    set fb_tmp_569, $P5002
    repr_defined $I5001, fb_tmp_569
    unless $I5001 goto if2790_else5989 
    set $P5004, fb_tmp_569["invocant"]
    set $P5006, $P5004
    goto if2790_end5990
  if2790_else5989:
    null $P5005
    set $P5006, $P5005
  if2790_end5990:
    unless_null $P5006, vivi_27915992
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_27915992:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2672
    find_lex $P5009, "$BLOCKINIT"
    $P5009."push"($P101)
.annotate 'line', 2673
    find_lex $P5010, "$BLOCKINIT"
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2675
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5013 = $P5012."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2676
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5015 = $P101."name"()
    $P5016 = $P5014."new"("lexical" :named("scope"), $P5015 :named("name"))
    $P5017 = $P5011."new"($P5013, $P5016, "bind" :named("op"))
    $P5010."push"($P5017)
    find_lex $P5018, "$BLOCK"
    box $P5019, 1
    set $P5018["signature_has_invocant"], $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1381944288.90674") :anon :lex :outer("cuid_301_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2681
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_302_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2685
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_489_1381944288.90674' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6008
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback6008:
    set fb_tmp_572, _lex_param_1
    repr_defined $I5001, fb_tmp_572
    unless $I5001 goto if2797_else6006 
    set $P5004, fb_tmp_572["quant"]
    set $P5006, $P5004
    goto if2797_end6007
  if2797_else6006:
    null $P5005
    set $P5006, $P5005
  if2797_end6007:
    unless_null $P5006, vivi_27986009
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_27986009:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6014
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6014:
    set fb_tmp_573, _lex_param_1
    repr_defined $I5002, fb_tmp_573
    unless $I5002 goto if2800_else6012 
    set $P5009, fb_tmp_573["named_param"]
    set $P5011, $P5009
    goto if2800_end6013
  if2800_else6012:
    null $P5010
    set $P5011, $P5010
  if2800_end6013:
    unless_null $P5011, vivi_28016015
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_28016015:
    unless $P5011 goto if2799_else6010 
.annotate 'line', 2688
.annotate 'line', 2689
    unless_null _lex_param_1, fallback6018
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5013
  fallback6018:
    set fb_tmp_574, _lex_param_1
    repr_defined $I5003, fb_tmp_574
    unless $I5003 goto if2802_else6016 
    set $P5014, fb_tmp_574["named_param"]
    set $P5016, $P5014
    goto if2802_end6017
  if2802_else6016:
    null $P5015
    set $P5016, $P5015
  if2802_end6017:
    unless_null $P5016, vivi_28036019
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_28036019:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2804_end6021 
.annotate 'line', 2690
.annotate 'line', 2691
    unless_null _lex_param_1, fallback6028
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5019
  fallback6028:
    set fb_tmp_577, _lex_param_1
    repr_defined $I5007, fb_tmp_577
    unless $I5007 goto if2807_else6026 
    set $P5020, fb_tmp_577["named_param"]
    set $P5022, $P5020
    goto if2807_end6027
  if2807_else6026:
    null $P5021
    set $P5022, $P5021
  if2807_end6027:
    unless_null $P5022, vivi_28086029
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_28086029:
    set fb_tmp_576, $P5022
    repr_defined $I5006, fb_tmp_576
    unless $I5006 goto if2806_else6024 
    set $P5024, fb_tmp_576["param_var"]
    set $P5026, $P5024
    goto if2806_end6025
  if2806_else6024:
    null $P5025
    set $P5026, $P5025
  if2806_end6025:
    unless_null $P5026, vivi_28096030
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_28096030:
    set fb_tmp_575, $P5026
    repr_defined $I5005, fb_tmp_575
    unless $I5005 goto if2805_else6022 
    set $P5028, fb_tmp_575["sigil"]
    set $P5030, $P5028
    goto if2805_end6023
  if2805_else6022:
    null $P5029
    set $P5030, $P5029
  if2805_end6023:
    unless_null $P5030, vivi_28106031
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5030, $P5031
  vivi_28106031:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2804_end6021:
    goto if2799_end6011
  if2799_else6010:
.annotate 'line', 2694
.annotate 'line', 2695
    unless_null _lex_param_1, fallback6034
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5036
  fallback6034:
    set fb_tmp_578, _lex_param_1
    repr_defined $I5008, fb_tmp_578
    unless $I5008 goto if2811_else6032 
    set $P5037, fb_tmp_578["param_var"]
    set $P5039, $P5037
    goto if2811_end6033
  if2811_else6032:
    null $P5038
    set $P5039, $P5038
  if2811_end6033:
    unless_null $P5039, vivi_28126035
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5039, $P5040
  vivi_28126035:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2813_else6036 
.annotate 'line', 2696
.annotate 'line', 2697
    $P102."slurpy"(1)
.annotate 'line', 2698
    unless_null _lex_param_1, fallback6042
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5042
  fallback6042:
    set fb_tmp_580, _lex_param_1
    repr_defined $I5012, fb_tmp_580
    unless $I5012 goto if2815_else6040 
    set $P5043, fb_tmp_580["param_var"]
    set $P5045, $P5043
    goto if2815_end6041
  if2815_else6040:
    null $P5044
    set $P5045, $P5044
  if2815_end6041:
    unless_null $P5045, vivi_28166043
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  vivi_28166043:
    set fb_tmp_579, $P5045
    repr_defined $I5011, fb_tmp_579
    unless $I5011 goto if2814_else6038 
    set $P5047, fb_tmp_579["sigil"]
    set $P5049, $P5047
    goto if2814_end6039
  if2814_else6038:
    null $P5048
    set $P5049, $P5048
  if2814_end6039:
    unless_null $P5049, vivi_28176044
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_28176044:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2813_end6037
  if2813_else6036:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2818_end6046 
.annotate 'line', 2700
.annotate 'line', 2701
    unless_null _lex_param_1, fallback6051
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5052
  fallback6051:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5015, fb_tmp_582
    unless $I5015 goto if2820_else6049 
    set $P5053, fb_tmp_582["param_var"]
    set $P5055, $P5053
    goto if2820_end6050
  if2820_else6049:
    null $P5054
    set $P5055, $P5054
  if2820_end6050:
    unless_null $P5055, vivi_28216052
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5055, $P5056
  vivi_28216052:
    set fb_tmp_581, $P5055
    repr_defined $I5014, fb_tmp_581
    unless $I5014 goto if2819_else6047 
    set $P5057, fb_tmp_581["sigil"]
    set $P5059, $P5057
    goto if2819_end6048
  if2819_else6047:
    null $P5058
    set $P5059, $P5058
  if2819_end6048:
    unless_null $P5059, vivi_28226053
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5059, $P5060
  vivi_28226053:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2818_end6046:
    set $P5065, $P5063
  if2813_end6037:
  if2799_end6011:
    unless_null _lex_param_1, fallback6058
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5066
  fallback6058:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5016, fb_tmp_583
    unless $I5016 goto if2824_else6056 
    set $P5067, fb_tmp_583["default_value"]
    set $P5069, $P5067
    goto if2824_end6057
  if2824_else6056:
    null $P5068
    set $P5069, $P5068
  if2824_end6057:
    unless_null $P5069, vivi_28256059
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5069, $P5070
  vivi_28256059:
    unless $P5069 goto if2823_end6055 
.annotate 'line', 2704
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2826_end6061 
.annotate 'line', 2705
.annotate 'line', 2706
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2826_end6061:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2827_end6063 
.annotate 'line', 2708
.annotate 'line', 2709
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2827_end6063:
.annotate 'line', 2711
    unless_null _lex_param_1, fallback6070
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5075
  fallback6070:
    set fb_tmp_586, _lex_param_1
    repr_defined $I5021, fb_tmp_586
    unless $I5021 goto if2830_else6068 
    set $P5076, fb_tmp_586["default_value"]
    set $P5078, $P5076
    goto if2830_end6069
  if2830_else6068:
    null $P5077
    set $P5078, $P5077
  if2830_end6069:
    unless_null $P5078, vivi_28316071
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5078, $P5079
  vivi_28316071:
    set fb_tmp_585, $P5078
    repr_defined $I5020, fb_tmp_585
    unless $I5020 goto if2829_else6066 
    set $P5080, fb_tmp_585[0]
    set $P5082, $P5080
    goto if2829_end6067
  if2829_else6066:
    null $P5081
    set $P5082, $P5081
  if2829_end6067:
    unless_null $P5082, vivi_28326072
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5082, $P5083
  vivi_28326072:
    set fb_tmp_584, $P5082
    repr_defined $I5019, fb_tmp_584
    unless $I5019 goto if2828_else6064 
    set $P5084, fb_tmp_584["EXPR"]
    set $P5086, $P5084
    goto if2828_end6065
  if2828_else6064:
    null $P5085
    set $P5086, $P5085
  if2828_end6065:
    unless_null $P5086, vivi_28336073
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5086, $P5087
  vivi_28336073:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2823_end6055:
.annotate 'line', 2713
    $P5090 = $P102."default"()
    if $P5090 goto unless2834_end6075 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6076
    nqp_get_sc_object $P5093, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5092, $P5093
    set fb_tmp_587, $P5092
    repr_defined $I5022, fb_tmp_587
    unless $I5022 goto if2835_else6077 
    set $P5094, fb_tmp_587["$W"]
    set $P5096, $P5094
    goto if2835_end6078
  if2835_else6077:
    null $P5095
    set $P5096, $P5095
  if2835_end6078:
    unless_null $P5096, vivi_28366079
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5096, $P5097
  vivi_28366079:
    unless_null $P5096, vivi_28376080
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28376080:
    set $P5091, $P5096
  fallback6076:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6081
    nqp_get_sc_object $P5102, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5101, $P5102
    set fb_tmp_588, $P5101
    repr_defined $I5023, fb_tmp_588
    unless $I5023 goto if2838_else6082 
    set $P5103, fb_tmp_588["$W"]
    set $P5105, $P5103
    goto if2838_end6083
  if2838_else6082:
    null $P5104
    set $P5105, $P5104
  if2838_end6083:
    unless_null $P5105, vivi_28396084
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5105, $P5106
  vivi_28396084:
    unless_null $P5105, vivi_28406085
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28406085:
    set $P5100, $P5105
  fallback6081:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2834_end6075:
    unless_null _lex_param_1, fallback6090
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5111
  fallback6090:
    set fb_tmp_589, _lex_param_1
    repr_defined $I5024, fb_tmp_589
    unless $I5024 goto if2842_else6088 
    set $P5112, fb_tmp_589["typename"]
    set $P5114, $P5112
    goto if2842_end6089
  if2842_else6088:
    null $P5113
    set $P5114, $P5113
  if2842_end6089:
    unless_null $P5114, vivi_28436091
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5114, $P5115
  vivi_28436091:
    unless $P5114 goto if2841_end6087 
    .const 'Sub' $P5116 = 'cuid_489_1381944288.90674' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2841_end6087:
    unless_null _lex_param_1, fallback6118
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5118
  fallback6118:
    set fb_tmp_594, _lex_param_1
    repr_defined $I5025, fb_tmp_594
    unless $I5025 goto if2857_else6116 
    set $P5119, fb_tmp_594["definedness"]
    set $P5121, $P5119
    goto if2857_end6117
  if2857_else6116:
    null $P5120
    set $P5121, $P5120
  if2857_end6117:
    unless_null $P5121, vivi_28586119
    nqp_get_sc_object $P5122, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5121, $P5122
  vivi_28586119:
    unless $P5121 goto if2856_end6115 
.annotate 'line', 2728
    unless_null _lex_param_1, fallback6124
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5123
  fallback6124:
    set fb_tmp_596, _lex_param_1
    repr_defined $I5027, fb_tmp_596
    unless $I5027 goto if2860_else6122 
    set $P5124, fb_tmp_596["definedness"]
    set $P5126, $P5124
    goto if2860_end6123
  if2860_else6122:
    null $P5125
    set $P5126, $P5125
  if2860_end6123:
    unless_null $P5126, vivi_28616125
    nqp_get_sc_object $P5127, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5126, $P5127
  vivi_28616125:
    set fb_tmp_595, $P5126
    repr_defined $I5026, fb_tmp_595
    unless $I5026 goto if2859_else6120 
    set $P5128, fb_tmp_595[0]
    set $P5130, $P5128
    goto if2859_end6121
  if2859_else6120:
    null $P5129
    set $P5130, $P5129
  if2859_end6121:
    unless_null $P5130, vivi_28626126
    nqp_get_sc_object $P5131, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5130, $P5131
  vivi_28626126:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2856_end6115:
.annotate 'line', 2732
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1381944288.90674") :anon :lex :outer("cuid_302_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2716
    .const 'Sub' $P5019 = 'cuid_488_1381944288.90674' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2717
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6096
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback6096:
    set fb_tmp_591, $P5002
    repr_defined $I5002, fb_tmp_591
    unless $I5002 goto if2845_else6094 
    set $P5004, fb_tmp_591["typename"]
    set $P5006, $P5004
    goto if2845_end6095
  if2845_else6094:
    null $P5005
    set $P5006, $P5005
  if2845_end6095:
    unless_null $P5006, vivi_28466097
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_28466097:
    set fb_tmp_590, $P5006
    repr_defined $I5001, fb_tmp_590
    unless $I5001 goto if2844_else6092 
    set $P5008, fb_tmp_590[0]
    set $P5010, $P5008
    goto if2844_end6093
  if2844_else6092:
    null $P5009
    set $P5010, $P5009
  if2844_end6093:
    unless_null $P5010, vivi_28476098
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_28476098:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2718
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2848_end6100 
    .const 'Sub' $P5015 = 'cuid_488_1381944288.90674' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2848_end6100:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1381944288.90674") :anon :lex :outer("cuid_489_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2719
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
.annotate 'line', 2720
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6101
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_592, $P5002
    repr_defined $I5001, fb_tmp_592
    unless $I5001 goto if2849_else6102 
    set $P5004, fb_tmp_592["$W"]
    set $P5006, $P5004
    goto if2849_end6103
  if2849_else6102:
    null $P5005
    set $P5006, $P5005
  if2849_end6103:
    unless_null $P5006, vivi_28506104
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_28506104:
    unless_null $P5006, vivi_28516105
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28516105:
    set $P5001, $P5006
  fallback6101:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2721
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2853_end6109 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6112
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  fallback6112:
    set fb_tmp_593, $P5015
    repr_defined $I5003, fb_tmp_593
    unless $I5003 goto if2854_else6110 
    set $P5017, fb_tmp_593["default_value"]
    set $P5019, $P5017
    goto if2854_end6111
  if2854_else6110:
    null $P5018
    set $P5019, $P5018
  if2854_end6111:
    unless_null $P5019, vivi_28556113
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5019, $P5020
  vivi_28556113:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2853_end6109:
    set $P5026, $P5021
    unless $P5021 goto if2852_end6107 
.annotate 'line', 2722
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2852_end6107:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_303_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2735
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_597 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2737
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2739
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6127
    nqp_get_sc_object $P5008, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5007, $P5008
    set fb_tmp_597, $P5007
    repr_defined $I5001, fb_tmp_597
    unless $I5001 goto if2863_else6128 
    set $P5009, fb_tmp_597["$W"]
    set $P5011, $P5009
    goto if2863_end6129
  if2863_else6128:
    null $P5010
    set $P5011, $P5010
  if2863_end6129:
    unless_null $P5011, vivi_28646130
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_28646130:
    unless_null $P5011, vivi_28656131
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28656131:
    set $P5006, $P5011
  fallback6127:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2740
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_304_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2743
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_600 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2744
    unless_null _lex_param_1, fallback6134
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6134:
    set fb_tmp_598, _lex_param_1
    repr_defined $I5001, fb_tmp_598
    unless $I5001 goto if2866_else6132 
    set $P5003, fb_tmp_598["param_var"]
    set $P5005, $P5003
    goto if2866_end6133
  if2866_else6132:
    null $P5004
    set $P5005, $P5004
  if2866_end6133:
    unless_null $P5005, vivi_28676135
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_28676135:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2745
    unless_null _lex_param_1, fallback6140
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6140:
    set fb_tmp_600, _lex_param_1
    repr_defined $I5003, fb_tmp_600
    unless $I5003 goto if2869_else6138 
    set $P5009, fb_tmp_600["param_var"]
    set $P5011, $P5009
    goto if2869_end6139
  if2869_else6138:
    null $P5010
    set $P5011, $P5010
  if2869_end6139:
    unless_null $P5011, vivi_28706141
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_28706141:
    set fb_tmp_599, $P5011
    repr_defined $I5002, fb_tmp_599
    unless $I5002 goto if2868_else6136 
    set $P5013, fb_tmp_599["name"]
    set $P5015, $P5013
    goto if2868_end6137
  if2868_else6136:
    null $P5014
    set $P5015, $P5014
  if2868_end6137:
    unless_null $P5015, vivi_28716142
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_28716142:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2746
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_305_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2749
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_490_1381944288.90674' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2753
    nqp_get_sc_object $P5003, "20A8B78604B6E989C5DC1D669DAFFA35168CF57C-1381944251.32103", 127
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_28766149
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_490_1381944288.90674' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_28756148
  catch_handler_28766149:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_28756148
  skip_handler_28756148:
    set $P5012, $P102
    if $P102 goto unless2877_end6151 
.annotate 'line', 2760
.annotate 'line', 2761
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2877_end6151:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1381944288.90674") :anon :lex :outer("cuid_305_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2755
    .lex "$sym", $P101 
    .local pmc fb_tmp_601 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2756
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6143
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_601, $P5003
    repr_defined $I5001, fb_tmp_601
    unless $I5001 goto if2872_else6144 
    set $P5005, fb_tmp_601["$W"]
    set $P5007, $P5005
    goto if2872_end6145
  if2872_else6144:
    null $P5006
    set $P5007, $P5006
  if2872_end6145:
    unless_null $P5007, vivi_28736146
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_28736146:
    unless_null $P5007, vivi_28746147
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_28746147:
    set $P5002, $P5007
  fallback6143:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2757
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_306_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2765
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_602 
.annotate 'line', 2766
    unless_null _lex_param_1, fallback6154
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6154:
    set fb_tmp_602, _lex_param_1
    repr_defined $I5001, fb_tmp_602
    unless $I5001 goto if2878_else6152 
    set $P5002, fb_tmp_602["trait_mod"]
    set $P5004, $P5002
    goto if2878_end6153
  if2878_else6152:
    null $P5003
    set $P5004, $P5003
  if2878_end6153:
    unless_null $P5004, vivi_28796155
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_28796155:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_307_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2769
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_492_1381944288.90674' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_494_1381944288.90674' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_495_1381944288.90674' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_496_1381944288.90674' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_497_1381944288.90674' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_603 
    .local pmc fb_tmp_612 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_629 
    unless_null _lex_param_1, fallback6160
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6160:
    set fb_tmp_603, _lex_param_1
    repr_defined $I5002, fb_tmp_603
    unless $I5002 goto if2881_else6158 
    set $P5002, fb_tmp_603["longname"]
    set $P5004, $P5002
    goto if2881_end6159
  if2881_else6158:
    null $P5003
    set $P5004, $P5003
  if2881_end6159:
    unless_null $P5004, vivi_28826161
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_28826161:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2880_else6156 
    .const 'Sub' $P5006 = 'cuid_492_1381944288.90674' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2880_end6157
  if2880_else6156:
    unless_null _lex_param_1, fallback6202
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6202:
    set fb_tmp_612, _lex_param_1
    repr_defined $I5004, fb_tmp_612
    unless $I5004 goto if2905_else6200 
    set $P5009, fb_tmp_612["longname"]
    set $P5011, $P5009
    goto if2905_end6201
  if2905_else6200:
    null $P5010
    set $P5011, $P5010
  if2905_end6201:
    unless_null $P5011, vivi_29066203
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_29066203:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2904_else6198 
    .const 'Sub' $P5013 = 'cuid_494_1381944288.90674' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2904_end6199
  if2904_else6198:
    unless_null _lex_param_1, fallback6230
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5015
  fallback6230:
    set fb_tmp_618, _lex_param_1
    repr_defined $I5006, fb_tmp_618
    unless $I5006 goto if2921_else6228 
    set $P5016, fb_tmp_618["longname"]
    set $P5018, $P5016
    goto if2921_end6229
  if2921_else6228:
    null $P5017
    set $P5018, $P5017
  if2921_end6229:
    unless_null $P5018, vivi_29226231
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_29226231:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2920_else6226 
.annotate 'line', 2795
.annotate 'line', 2796
    .const 'Sub' $P5021 = 'cuid_495_1381944288.90674' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2920_end6227
  if2920_else6226:
    unless_null _lex_param_1, fallback6241
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5023
  fallback6241:
    set fb_tmp_620, _lex_param_1
    repr_defined $I5008, fb_tmp_620
    unless $I5008 goto if2927_else6239 
    set $P5024, fb_tmp_620["longname"]
    set $P5026, $P5024
    goto if2927_end6240
  if2927_else6239:
    null $P5025
    set $P5026, $P5025
  if2927_end6240:
    unless_null $P5026, vivi_29286242
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_29286242:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2926_else6237 
.annotate 'line', 2798
.annotate 'line', 2799
    .const 'Sub' $P5029 = 'cuid_496_1381944288.90674' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2926_end6238
  if2926_else6237:
    unless_null _lex_param_1, fallback6252
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5031
  fallback6252:
    set fb_tmp_622, _lex_param_1
    repr_defined $I5010, fb_tmp_622
    unless $I5010 goto if2933_else6250 
    set $P5032, fb_tmp_622["longname"]
    set $P5034, $P5032
    goto if2933_end6251
  if2933_else6250:
    null $P5033
    set $P5034, $P5033
  if2933_end6251:
    unless_null $P5034, vivi_29346253
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  vivi_29346253:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2932_else6248 
.annotate 'line', 2801
.annotate 'line', 2802
    .const 'Sub' $P5037 = 'cuid_497_1381944288.90674' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2932_end6249
  if2932_else6248:
.annotate 'line', 2809
.annotate 'line', 2810
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6279
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5040
  fallback6279:
    set fb_tmp_629, _lex_param_1
    repr_defined $I5011, fb_tmp_629
    unless $I5011 goto if2949_else6277 
    set $P5041, fb_tmp_629["longname"]
    set $P5043, $P5041
    goto if2949_end6278
  if2949_else6277:
    null $P5042
    set $P5043, $P5042
  if2949_end6278:
    unless_null $P5043, vivi_29506280
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5043, $P5044
  vivi_29506280:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2932_end6249:
    set $P5047, $P5046
  if2926_end6238:
    set $P5048, $P5047
  if2920_end6227:
    set $P5049, $P5048
  if2904_end6199:
    set $P5050, $P5049
  if2880_end6157:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1381944288.90674") :anon :lex :outer("cuid_307_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2770
    .const 'Sub' $P5043 = 'cuid_491_1381944288.90674' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P104, $P5004
.annotate 'line', 2772
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6166
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  fallback6166:
    set fb_tmp_605, $P5005
    repr_defined $I5002, fb_tmp_605
    unless $I5002 goto if2884_else6164 
    set $P5007, fb_tmp_605["circumfix"]
    set $P5009, $P5007
    goto if2884_end6165
  if2884_else6164:
    null $P5008
    set $P5009, $P5008
  if2884_end6165:
    unless_null $P5009, vivi_28856167
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_28856167:
    set fb_tmp_604, $P5009
    repr_defined $I5001, fb_tmp_604
    unless $I5001 goto if2883_else6162 
    set $P5011, fb_tmp_604[0]
    set $P5013, $P5011
    goto if2883_end6163
  if2883_else6162:
    null $P5012
    set $P5013, $P5012
  if2883_end6163:
    unless_null $P5013, vivi_28866168
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_28866168:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2774
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2887_end6170 
.annotate 'line', 2773
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2887_end6170:
.annotate 'line', 2775
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6171
    nqp_get_sc_object $P5024, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5023, $P5024
    set fb_tmp_606, $P5023
    repr_defined $I5003, fb_tmp_606
    unless $I5003 goto if2888_else6172 
    set $P5025, fb_tmp_606["$PACKAGE"]
    set $P5027, $P5025
    goto if2888_end6173
  if2888_else6172:
    null $P5026
    set $P5027, $P5026
  if2888_end6173:
    unless_null $P5027, vivi_28896174
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5027, $P5028
  vivi_28896174:
    unless_null $P5027, vivi_28906175
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_28906175:
    set $P5022, $P5027
  fallback6171:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6176
    nqp_get_sc_object $P5032, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5031, $P5032
    set fb_tmp_607, $P5031
    repr_defined $I5005, fb_tmp_607
    unless $I5005 goto if2891_else6177 
    set $P5033, fb_tmp_607["$SCOPE"]
    set $P5035, $P5033
    goto if2891_end6178
  if2891_else6177:
    null $P5034
    set $P5035, $P5034
  if2891_end6178:
    unless_null $P5035, vivi_28926179
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5035, $P5036
  vivi_28926179:
    unless_null $P5035, vivi_28936180
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_28936180:
    set $P5030, $P5035
  fallback6176:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2778
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_491_1381944288.90674' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1381944288.90674") :anon :lex :outer("cuid_492_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2778
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_608 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
.annotate 'line', 2779
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6181
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_608, $P5002
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2894_else6182 
    set $P5004, fb_tmp_608["$W"]
    set $P5006, $P5004
    goto if2894_end6183
  if2894_else6182:
    null $P5005
    set $P5006, $P5005
  if2894_end6183:
    unless_null $P5006, vivi_28956184
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_28956184:
    unless_null $P5006, vivi_28966185
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28966185:
    set $P5001, $P5006
  fallback6181:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2780
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_609, $P5012
    repr_defined $I5003, fb_tmp_609
    unless $I5003 goto if2897_else6187 
    set $P5013, fb_tmp_609["code_obj"]
    set $P5015, $P5013
    goto if2897_end6188
  if2897_else6187:
    null $P5014
    set $P5015, $P5014
  if2897_end6188:
    unless_null $P5015, vivi_28986189
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_28986189:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6186
.annotate 'line', 2781
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6190
    nqp_get_sc_object $P5019, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5018, $P5019
    set fb_tmp_610, $P5018
    repr_defined $I5004, fb_tmp_610
    unless $I5004 goto if2899_else6191 
    set $P5020, fb_tmp_610["$W"]
    set $P5022, $P5020
    goto if2899_end6192
  if2899_else6191:
    null $P5021
    set $P5022, $P5021
  if2899_end6192:
    unless_null $P5022, vivi_29006193
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_29006193:
    unless_null $P5022, vivi_29016194
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29016194:
    set $P5017, $P5022
  fallback6190:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_611, $P5025
    repr_defined $I5005, fb_tmp_611
    unless $I5005 goto if2902_else6195 
    set $P5026, fb_tmp_611["block_past"]
    set $P5028, $P5026
    goto if2902_end6196
  if2902_else6195:
    null $P5027
    set $P5028, $P5027
  if2902_end6196:
    unless_null $P5028, vivi_29036197
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_29036197:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6186:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1381944288.90674") :anon :lex :outer("cuid_307_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2784
    .const 'Sub' $P5033 = 'cuid_493_1381944288.90674' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 2786
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6208
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  fallback6208:
    set fb_tmp_614, $P5004
    repr_defined $I5002, fb_tmp_614
    unless $I5002 goto if2908_else6206 
    set $P5006, fb_tmp_614["circumfix"]
    set $P5008, $P5006
    goto if2908_end6207
  if2908_else6206:
    null $P5007
    set $P5008, $P5007
  if2908_end6207:
    unless_null $P5008, vivi_29096209
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_29096209:
    set fb_tmp_613, $P5008
    repr_defined $I5001, fb_tmp_613
    unless $I5001 goto if2907_else6204 
    set $P5010, fb_tmp_613[0]
    set $P5012, $P5010
    goto if2907_end6205
  if2907_else6204:
    null $P5011
    set $P5012, $P5011
  if2907_end6205:
    unless_null $P5012, vivi_29106210
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_29106210:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2788
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2911_end6212 
.annotate 'line', 2787
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2911_end6212:
.annotate 'line', 2789
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6213
    nqp_get_sc_object $P5023, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5022, $P5023
    set fb_tmp_615, $P5022
    repr_defined $I5003, fb_tmp_615
    unless $I5003 goto if2912_else6214 
    set $P5024, fb_tmp_615["$PACKAGE"]
    set $P5026, $P5024
    goto if2912_end6215
  if2912_else6214:
    null $P5025
    set $P5026, $P5025
  if2912_end6215:
    unless_null $P5026, vivi_29136216
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_29136216:
    unless_null $P5026, vivi_29146217
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29146217:
    set $P5021, $P5026
  fallback6213:
    set $P103, $P5021
.annotate 'line', 2791
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_493_1381944288.90674' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1381944288.90674") :anon :lex :outer("cuid_494_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2791
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
.annotate 'line', 2792
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6218
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_616, $P5002
    repr_defined $I5001, fb_tmp_616
    unless $I5001 goto if2915_else6219 
    set $P5004, fb_tmp_616["$W"]
    set $P5006, $P5004
    goto if2915_end6220
  if2915_else6219:
    null $P5005
    set $P5006, $P5005
  if2915_end6220:
    unless_null $P5006, vivi_29166221
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_29166221:
    unless_null $P5006, vivi_29176222
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29176222:
    set $P5001, $P5006
  fallback6218:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_617, _lex_param_0
    repr_defined $I5002, fb_tmp_617
    unless $I5002 goto if2918_else6223 
    set $P5011, fb_tmp_617["variable"]
    set $P5013, $P5011
    goto if2918_end6224
  if2918_else6223:
    null $P5012
    set $P5013, $P5012
  if2918_end6224:
    unless_null $P5013, vivi_29196225
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_29196225:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1381944288.90674") :anon :lex :outer("cuid_307_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2796
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_619 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6232
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_619, $P5002
    repr_defined $I5001, fb_tmp_619
    unless $I5001 goto if2923_else6233 
    set $P5004, fb_tmp_619["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2923_end6234
  if2923_else6233:
    null $P5005
    set $P5006, $P5005
  if2923_end6234:
    unless_null $P5006, vivi_29246235
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_29246235:
    unless_null $P5006, vivi_29256236
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29256236:
    set $P5001, $P5006
  fallback6232:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1381944288.90674") :anon :lex :outer("cuid_307_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2799
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_621 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6243
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set fb_tmp_621, $P5002
    repr_defined $I5001, fb_tmp_621
    unless $I5001 goto if2929_else6244 
    set $P5004, fb_tmp_621["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2929_end6245
  if2929_else6244:
    null $P5005
    set $P5006, $P5005
  if2929_end6245:
    unless_null $P5006, vivi_29306246
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_29306246:
    unless_null $P5006, vivi_29316247
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29316247:
    set $P5001, $P5006
  fallback6243:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1381944288.90674") :anon :lex :outer("cuid_307_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2802
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2803
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2804
    set fb_tmp_623, $P101
    repr_defined $I5001, fb_tmp_623
    unless $I5001 goto if2935_else6254 
    set $P5004, fb_tmp_623["block_past"]
    set $P5006, $P5004
    goto if2935_end6255
  if2935_else6254:
    null $P5005
    set $P5006, $P5005
  if2935_end6255:
    unless_null $P5006, vivi_29366256
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_29366256:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6259
    nqp_get_sc_object $P5013, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5012, $P5013
    set fb_tmp_625, $P5012
    repr_defined $I5003, fb_tmp_625
    unless $I5003 goto if2938_else6260 
    set $P5014, fb_tmp_625["$EXPORT"]
    set $P5016, $P5014
    goto if2938_end6261
  if2938_else6260:
    null $P5015
    set $P5016, $P5015
  if2938_end6261:
    unless_null $P5016, vivi_29396262
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_29396262:
    unless_null $P5016, vivi_29406263
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29406263:
    set $P5011, $P5016
  fallback6259:
    get_who $P5010, $P5011
    set fb_tmp_624, $P5010
    repr_defined $I5002, fb_tmp_624
    unless $I5002 goto if2937_else6257 
    set $P5019, fb_tmp_624["DEFAULT"]
    set $P5021, $P5019
    goto if2937_end6258
  if2937_else6257:
    null $P5020
    set $P5021, $P5020
  if2937_end6258:
    unless_null $P5021, vivi_29416264
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_29416264:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_626, $P101
    repr_defined $I5005, fb_tmp_626
    unless $I5005 goto if2942_else6266 
    set $P5024, fb_tmp_626["code_obj"]
    set $P5026, $P5024
    goto if2942_end6267
  if2942_else6266:
    null $P5025
    set $P5026, $P5025
  if2942_end6267:
    unless_null $P5026, vivi_29436268
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_29436268:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6265
.annotate 'line', 2806
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6269
    nqp_get_sc_object $P5030, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5029, $P5030
    set fb_tmp_627, $P5029
    repr_defined $I5006, fb_tmp_627
    unless $I5006 goto if2944_else6270 
    set $P5031, fb_tmp_627["$W"]
    set $P5033, $P5031
    goto if2944_end6271
  if2944_else6270:
    null $P5032
    set $P5033, $P5032
  if2944_end6271:
    unless_null $P5033, vivi_29456272
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5033, $P5034
  vivi_29456272:
    unless_null $P5033, vivi_29466273
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29466273:
    set $P5028, $P5033
  fallback6269:
    set fb_tmp_628, $P101
    repr_defined $I5007, fb_tmp_628
    unless $I5007 goto if2947_else6274 
    set $P5036, fb_tmp_628["block_past"]
    set $P5038, $P5036
    goto if2947_end6275
  if2947_else6274:
    null $P5037
    set $P5038, $P5037
  if2947_end6275:
    unless_null $P5038, vivi_29486276
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5038, $P5039
  vivi_29486276:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6265:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_308_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2814
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_6 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_499_1381944288.90674' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    if haz_param_6, default6397
    nqp_get_sc_object $P5073, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_2, $P5073
  default6397:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6285
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback6285:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5001, fb_tmp_630
    unless $I5001 goto if2952_else6283 
    set $P5004, fb_tmp_630["deflongname"]
    set $P5006, $P5004
    goto if2952_end6284
  if2952_else6283:
    null $P5005
    set $P5006, $P5005
  if2952_end6284:
    unless_null $P5006, vivi_29536286
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_29536286:
    unless $P5006 goto if2951_else6281 
.annotate 'line', 2816
.annotate 'line', 2817
    unless_null _lex_param_1, fallback6289
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6289:
    set fb_tmp_631, _lex_param_1
    repr_defined $I5002, fb_tmp_631
    unless $I5002 goto if2954_else6287 
    set $P5009, fb_tmp_631["deflongname"]
    set $P5011, $P5009
    goto if2954_end6288
  if2954_else6287:
    null $P5010
    set $P5011, $P5010
  if2954_end6288:
    unless_null $P5011, vivi_29556290
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_29556290:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2951_end6282
  if2951_else6281:
.annotate 'line', 2819
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6293
    nqp_get_sc_object $P5017, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5016, $P5017
    set fb_tmp_632, $P5016
    repr_defined $I5004, fb_tmp_632
    unless $I5004 goto if2957_else6294 
    set $P5018, fb_tmp_632["$PKGDECL"]
    set $P5020, $P5018
    goto if2957_end6295
  if2957_else6294:
    null $P5019
    set $P5020, $P5019
  if2957_end6295:
    unless_null $P5020, vivi_29586296
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_29586296:
    unless_null $P5020, vivi_29596297
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29596297:
    set $P5015, $P5020
  fallback6293:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2956_end6292 
.annotate 'line', 2820
.annotate 'line', 2821
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2956_end6292:
    unless_null _lex_param_1, fallback6300
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5025
  fallback6300:
    set fb_tmp_633, _lex_param_1
    repr_defined $I5005, fb_tmp_633
    unless $I5005 goto if2960_else6298 
    set $P5026, fb_tmp_633["latename"]
    set $P5028, $P5026
    goto if2960_end6299
  if2960_else6298:
    null $P5027
    set $P5028, $P5027
  if2960_end6299:
    unless_null $P5028, vivi_29616301
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_29616301:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2951_end6282:
    unless_null _lex_param_1, fallback6306
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5031
  fallback6306:
    set fb_tmp_634, _lex_param_1
    repr_defined $I5006, fb_tmp_634
    unless $I5006 goto if2963_else6304 
    set $P5032, fb_tmp_634["proto"]
    set $P5034, $P5032
    goto if2963_end6305
  if2963_else6304:
    null $P5033
    set $P5034, $P5033
  if2963_end6305:
    unless_null $P5034, vivi_29646307
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5034, $P5035
  vivi_29646307:
    unless $P5034 goto if2962_else6302 
.annotate 'line', 2826
.annotate 'line', 2827
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 108
.annotate 'line', 2829
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2830
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2831
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration_static" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2838
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6308
    nqp_get_sc_object $P5046, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5045, $P5046
    set fb_tmp_635, $P5045
    repr_defined $I5007, fb_tmp_635
    unless $I5007 goto if2965_else6309 
    set $P5047, fb_tmp_635["$W"]
    set $P5049, $P5047
    goto if2965_end6310
  if2965_else6309:
    null $P5048
    set $P5049, $P5048
  if2965_end6310:
    unless_null $P5049, vivi_29666311
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_29666311:
    unless_null $P5049, vivi_29676312
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_29676312:
    set $P5044, $P5049
  fallback6308:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6313
    nqp_get_sc_object $P5054, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5053, $P5054
    set fb_tmp_636, $P5053
    repr_defined $I5008, fb_tmp_636
    unless $I5008 goto if2968_else6314 
    set $P5055, fb_tmp_636["$PACKAGE"]
    set $P5057, $P5055
    goto if2968_end6315
  if2968_else6314:
    null $P5056
    set $P5057, $P5056
  if2968_end6315:
    unless_null $P5057, vivi_29696316
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5057, $P5058
  vivi_29696316:
    unless_null $P5057, vivi_29706317
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_29706317:
    set $P5052, $P5057
  fallback6313:
.annotate 'line', 2839
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6318
    nqp_get_sc_object $P5062, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5061, $P5062
    set fb_tmp_637, $P5061
    repr_defined $I5009, fb_tmp_637
    unless $I5009 goto if2971_else6319 
    set $P5063, fb_tmp_637["$W"]
    set $P5065, $P5063
    goto if2971_end6320
  if2971_else6319:
    null $P5064
    set $P5065, $P5064
  if2971_end6320:
    unless_null $P5065, vivi_29726321
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5065, $P5066
  vivi_29726321:
    unless_null $P5065, vivi_29736322
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_29736322:
    set $P5060, $P5065
  fallback6318:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2962_end6303
  if2962_else6302:
    .const 'Sub' $P5070 = 'cuid_499_1381944288.90674' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2962_end6303:
.annotate 'line', 2880
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1381944288.90674") :anon :lex :outer("cuid_308_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2841
    .const 'Sub' $P5128 = 'cuid_498_1381944288.90674' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 2842
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6323
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5005, $P5006
    set fb_tmp_638, $P5005
    repr_defined $I5001, fb_tmp_638
    unless $I5001 goto if2974_else6324 
    set $P5007, fb_tmp_638["$W"]
    set $P5009, $P5007
    goto if2974_end6325
  if2974_else6324:
    null $P5008
    set $P5009, $P5008
  if2974_end6325:
    unless_null $P5009, vivi_29756326
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_29756326:
    unless_null $P5009, vivi_29766327
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_29766327:
    set $P5004, $P5009
  fallback6323:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2843
    set fb_tmp_639, $P101
    repr_defined $I5002, fb_tmp_639
    unless $I5002 goto if2977_else6328 
    set $P5013, fb_tmp_639[0]
    set $P5015, $P5013
    goto if2977_end6329
  if2977_else6328:
    null $P5014
    set $P5015, $P5014
  if2977_end6329:
    unless_null $P5015, vivi_29786330
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_29786330:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2844
    set fb_tmp_640, $P101
    repr_defined $I5003, fb_tmp_640
    unless $I5003 goto if2979_else6331 
    set $P5019, fb_tmp_640[0]
    set $P5021, $P5019
    goto if2979_end6332
  if2979_else6331:
    null $P5020
    set $P5021, $P5020
  if2979_end6332:
    unless_null $P5021, vivi_29806333
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_29806333:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2846
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2847
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2848
    set fb_tmp_641, $P101
    repr_defined $I5004, fb_tmp_641
    unless $I5004 goto if2981_else6334 
    set $P5029, fb_tmp_641[0]
    set $P5031, $P5029
    goto if2981_end6335
  if2981_else6334:
    null $P5030
    set $P5031, $P5030
  if2981_end6335:
    unless_null $P5031, vivi_29826336
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_29826336:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 2849
    set fb_tmp_642, $P101
    repr_defined $I5005, fb_tmp_642
    unless $I5005 goto if2983_else6337 
    set $P5035, fb_tmp_642[0]
    set $P5037, $P5035
    goto if2983_end6338
  if2983_else6337:
    null $P5036
    set $P5037, $P5036
  if2983_end6338:
    unless_null $P5037, vivi_29846339
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_29846339:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 2850
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2851
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6342
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_48, $P5042
    set fb_tmp_644, pkg_viv_tmp_48
    repr_defined $I5007, fb_tmp_644
    unless $I5007 goto if2986_else6343 
    set $P5044, fb_tmp_644["%RX"]
    set $P5046, $P5044
    goto if2986_end6344
  if2986_else6343:
    null $P5045
    set $P5046, $P5045
  if2986_end6344:
    unless_null $P5046, vivi_29876345
    new $P5047, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5047
    set $P5046, $P5047
  vivi_29876345:
    unless_null $P5046, vivi_29886346
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_29886346:
    set $P5041, $P5046
  fallback6342:
    set fb_tmp_643, $P5041
    repr_defined $I5006, fb_tmp_643
    unless $I5006 goto if2985_else6340 
    set $P5049, fb_tmp_643["code"]
    set $P5051, $P5049
    goto if2985_end6341
  if2985_else6340:
    null $P5050
    set $P5051, $P5050
  if2985_end6341:
    unless_null $P5051, vivi_29896347
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5051, $P5052
  vivi_29896347:
    set $P102, $P5051
.annotate 'line', 2853
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6350
    nqp_get_sc_object $P5055, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_49, $P5054
    set fb_tmp_646, pkg_viv_tmp_49
    repr_defined $I5009, fb_tmp_646
    unless $I5009 goto if2991_else6351 
    set $P5056, fb_tmp_646["%LANG"]
    set $P5058, $P5056
    goto if2991_end6352
  if2991_else6351:
    null $P5057
    set $P5058, $P5057
  if2991_end6352:
    unless_null $P5058, vivi_29926353
    new $P5059, 'Hash'
    set pkg_viv_tmp_49["%LANG"], $P5059
    set $P5058, $P5059
  vivi_29926353:
    unless_null $P5058, vivi_29936354
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_29936354:
    set $P5053, $P5058
  fallback6350:
    set fb_tmp_645, $P5053
    repr_defined $I5008, fb_tmp_645
    unless $I5008 goto if2990_else6348 
    set $P5061, fb_tmp_645["Regex-actions"]
    set $P5063, $P5061
    goto if2990_end6349
  if2990_else6348:
    null $P5062
    set $P5063, $P5062
  if2990_end6349:
    unless_null $P5063, vivi_29946355
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5063, $P5064
  vivi_29946355:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6358
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5065, $P5066
  fallback6358:
    set fb_tmp_647, $P5065
    repr_defined $I5010, fb_tmp_647
    unless $I5010 goto if2995_else6356 
    set $P5067, fb_tmp_647["p6regex"]
    set $P5069, $P5067
    goto if2995_end6357
  if2995_else6356:
    null $P5068
    set $P5069, $P5068
  if2995_end6357:
    unless_null $P5069, vivi_29966359
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5069, $P5070
  vivi_29966359:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 2854
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6364
    nqp_get_sc_object $P5076, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5075, $P5076
    set fb_tmp_648, $P5075
    repr_defined $I5011, fb_tmp_648
    unless $I5011 goto if2999_else6365 
    set $P5077, fb_tmp_648["$PKGDECL"]
    set $P5079, $P5077
    goto if2999_end6366
  if2999_else6365:
    null $P5078
    set $P5079, $P5078
  if2999_end6366:
    unless_null $P5079, vivi_30006367
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5079, $P5080
  vivi_30006367:
    unless_null $P5079, vivi_30016368
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30016368:
    set $P5074, $P5079
  fallback6364:
    set $P5091, $P5074
    unless $P5074 goto if2998_end6363 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6369
    nqp_get_sc_object $P5085, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5084, $P5085
    set fb_tmp_649, $P5084
    repr_defined $I5013, fb_tmp_649
    unless $I5013 goto if3002_else6370 
    set $P5086, fb_tmp_649["$PACKAGE"]
    set $P5088, $P5086
    goto if3002_end6371
  if3002_else6370:
    null $P5087
    set $P5088, $P5087
  if3002_end6371:
    unless_null $P5088, vivi_30036372
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5088, $P5089
  vivi_30036372:
    unless_null $P5088, vivi_30046373
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30046373:
    set $P5083, $P5088
  fallback6369:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if2998_end6363:
    unless $P5091 goto if2997_end6361 
.annotate 'line', 2856
.annotate 'line', 2859
    $P101."blocktype"("declaration_static")
.annotate 'line', 2860
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6374
    nqp_get_sc_object $P5095, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5094, $P5095
    set fb_tmp_650, $P5094
    repr_defined $I5014, fb_tmp_650
    unless $I5014 goto if3005_else6375 
    set $P5096, fb_tmp_650["$W"]
    set $P5098, $P5096
    goto if3005_end6376
  if3005_else6375:
    null $P5097
    set $P5098, $P5097
  if3005_end6376:
    unless_null $P5098, vivi_30066377
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5098, $P5099
  vivi_30066377:
    unless_null $P5098, vivi_30076378
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30076378:
    set $P5093, $P5098
  fallback6374:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6379
    nqp_get_sc_object $P5103, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5102, $P5103
    set fb_tmp_651, $P5102
    repr_defined $I5015, fb_tmp_651
    unless $I5015 goto if3008_else6380 
    set $P5104, fb_tmp_651["$PACKAGE"]
    set $P5106, $P5104
    goto if3008_end6381
  if3008_else6380:
    null $P5105
    set $P5106, $P5105
  if3008_end6381:
    unless_null $P5106, vivi_30096382
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5106, $P5107
  vivi_30096382:
    unless_null $P5106, vivi_30106383
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30106383:
    set $P5101, $P5106
  fallback6379:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if2997_end6361:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6386
    nqp_get_sc_object $P5113, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5112, $P5113
    set fb_tmp_652, $P5112
    repr_defined $I5017, fb_tmp_652
    unless $I5017 goto if3012_else6387 
    set $P5114, fb_tmp_652["$PKGDECL"]
    set $P5116, $P5114
    goto if3012_end6388
  if3012_else6387:
    null $P5115
    set $P5116, $P5115
  if3012_end6388:
    unless_null $P5116, vivi_30136389
    nqp_get_sc_object $P5117, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5116, $P5117
  vivi_30136389:
    unless_null $P5116, vivi_30146390
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30146390:
    set $P5111, $P5116
  fallback6386:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3011_end6385 
    .const 'Sub' $P5119 = 'cuid_498_1381944288.90674' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3011_end6385:
.annotate 'line', 2874
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2876
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1381944288.90674") :anon :lex :outer("cuid_499_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2865
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_653 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2866
    nqp_get_sc_object $P5002, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381944245.06863", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2867
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6393
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  fallback6393:
    set fb_tmp_653, $P5004
    repr_defined $I5001, fb_tmp_653
    unless $I5001 goto if3015_else6391 
    set $P5006, fb_tmp_653["p6regex"]
    set $P5008, $P5006
    goto if3015_end6392
  if3015_else6391:
    null $P5007
    set $P5008, $P5007
  if3015_end6392:
    unless_null $P5008, vivi_30166394
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_30166394:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 2868
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3017_end6396 
.annotate 'line', 2869
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3017_end6396:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_309_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2884
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6402
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6402:
    set fb_tmp_654, _lex_param_1
    repr_defined $I5001, fb_tmp_654
    unless $I5001 goto if3019_else6400 
    set $P5003, fb_tmp_654["args"]
    set $P5005, $P5003
    goto if3019_end6401
  if3019_else6400:
    null $P5004
    set $P5005, $P5004
  if3019_end6401:
    unless_null $P5005, vivi_30206403
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_30206403:
    unless $P5005 goto if3018_else6398 
.annotate 'line', 2885
    unless_null _lex_param_1, fallback6408
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5007
  fallback6408:
    set fb_tmp_656, _lex_param_1
    repr_defined $I5003, fb_tmp_656
    unless $I5003 goto if3022_else6406 
    set $P5008, fb_tmp_656["args"]
    set $P5010, $P5008
    goto if3022_end6407
  if3022_else6406:
    null $P5009
    set $P5010, $P5009
  if3022_end6407:
    unless_null $P5010, vivi_30236409
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_30236409:
    set fb_tmp_655, $P5010
    repr_defined $I5002, fb_tmp_655
    unless $I5002 goto if3021_else6404 
    set $P5012, fb_tmp_655[0]
    set $P5014, $P5012
    goto if3021_end6405
  if3021_else6404:
    null $P5013
    set $P5014, $P5013
  if3021_end6405:
    unless_null $P5014, vivi_30246410
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_30246410:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3018_end6399
  if3018_else6398:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3018_end6399:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6415
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5020
  fallback6415:
    set fb_tmp_657, _lex_param_1
    repr_defined $I5004, fb_tmp_657
    unless $I5004 goto if3026_else6413 
    set $P5021, fb_tmp_657["quote"]
    set $P5023, $P5021
    goto if3026_end6414
  if3026_else6413:
    null $P5022
    set $P5023, $P5022
  if3026_end6414:
    unless_null $P5023, vivi_30276416
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_30276416:
    unless $P5023 goto if3025_else6411 
.annotate 'line', 2886
.annotate 'line', 2887
    unless_null _lex_param_1, fallback6419
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5025
  fallback6419:
    set fb_tmp_658, _lex_param_1
    repr_defined $I5005, fb_tmp_658
    unless $I5005 goto if3028_else6417 
    set $P5026, fb_tmp_658["quote"]
    set $P5028, $P5026
    goto if3028_end6418
  if3028_else6417:
    null $P5027
    set $P5028, $P5027
  if3028_end6418:
    unless_null $P5028, vivi_30296420
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_30296420:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 2888
    $P5031 = $P101."op"("callmethod")
    goto if3025_end6412
  if3025_else6411:
    unless_null _lex_param_1, fallback6425
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5032
  fallback6425:
    set fb_tmp_659, _lex_param_1
    repr_defined $I5007, fb_tmp_659
    unless $I5007 goto if3031_else6423 
    set $P5033, fb_tmp_659["longname"]
    set $P5035, $P5033
    goto if3031_end6424
  if3031_else6423:
    null $P5034
    set $P5035, $P5034
  if3031_end6424:
    unless_null $P5035, vivi_30326426
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5035, $P5036
  vivi_30326426:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3030_else6421 
.annotate 'line', 2890
.annotate 'line', 2891
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3030_end6422
  if3030_else6421:
    unless_null _lex_param_1, fallback6431
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5038
  fallback6431:
    set fb_tmp_660, _lex_param_1
    repr_defined $I5009, fb_tmp_660
    unless $I5009 goto if3034_else6429 
    set $P5039, fb_tmp_660["longname"]
    set $P5041, $P5039
    goto if3034_end6430
  if3034_else6429:
    null $P5040
    set $P5041, $P5040
  if3034_end6430:
    unless_null $P5041, vivi_30356432
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5041, $P5042
  vivi_30356432:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3033_else6427 
.annotate 'line', 2893
.annotate 'line', 2894
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3033_end6428
  if3033_else6427:
    unless_null _lex_param_1, fallback6437
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5044
  fallback6437:
    set fb_tmp_661, _lex_param_1
    repr_defined $I5011, fb_tmp_661
    unless $I5011 goto if3037_else6435 
    set $P5045, fb_tmp_661["longname"]
    set $P5047, $P5045
    goto if3037_end6436
  if3037_else6435:
    null $P5046
    set $P5047, $P5046
  if3037_end6436:
    unless_null $P5047, vivi_30386438
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5047, $P5048
  vivi_30386438:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3036_else6433 
.annotate 'line', 2896
.annotate 'line', 2897
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3036_end6434
  if3036_else6433:
    unless_null _lex_param_1, fallback6443
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5050
  fallback6443:
    set fb_tmp_662, _lex_param_1
    repr_defined $I5013, fb_tmp_662
    unless $I5013 goto if3040_else6441 
    set $P5051, fb_tmp_662["longname"]
    set $P5053, $P5051
    goto if3040_end6442
  if3040_else6441:
    null $P5052
    set $P5053, $P5052
  if3040_end6442:
    unless_null $P5053, vivi_30416444
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5053, $P5054
  vivi_30416444:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3039_else6439 
.annotate 'line', 2899
.annotate 'line', 2900
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3039_end6440
  if3039_else6439:
.annotate 'line', 2902
.annotate 'line', 2903
    unless_null _lex_param_1, fallback6447
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5056
  fallback6447:
    set fb_tmp_663, _lex_param_1
    repr_defined $I5014, fb_tmp_663
    unless $I5014 goto if3042_else6445 
    set $P5057, fb_tmp_663["longname"]
    set $P5059, $P5057
    goto if3042_end6446
  if3042_else6445:
    null $P5058
    set $P5059, $P5058
  if3042_end6446:
    unless_null $P5059, vivi_30436448
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5059, $P5060
  vivi_30436448:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 2904
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3039_end6440:
    set $P5063, $P5062
  if3036_end6434:
    set $P5064, $P5063
  if3033_end6428:
    set $P5065, $P5064
  if3030_end6422:
  if3025_end6412:
.annotate 'line', 2906
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_310_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2911
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 2912
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2913
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_311_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2916
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2917
    unless_null _lex_param_1, fallback6451
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6451:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5001, fb_tmp_664
    unless $I5001 goto if3044_else6449 
    set $P5003, fb_tmp_664["args"]
    set $P5005, $P5003
    goto if3044_end6450
  if3044_else6449:
    null $P5004
    set $P5005, $P5004
  if3044_end6450:
    unless_null $P5005, vivi_30456452
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_30456452:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2918
    unless_null _lex_param_1, fallback6455
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6455:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5002, fb_tmp_665
    unless $I5002 goto if3046_else6453 
    set $P5009, fb_tmp_665["deflongname"]
    set $P5011, $P5009
    goto if3046_end6454
  if3046_else6453:
    null $P5010
    set $P5011, $P5010
  if3046_end6454:
    unless_null $P5011, vivi_30476456
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_30476456:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2919
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_312_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2922
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_500_1381944288.90674' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_502_1381944288.90674' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2925
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6459
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5004, $P5005
    set fb_tmp_666, $P5004
    repr_defined $I5001, fb_tmp_666
    unless $I5001 goto if3049_else6460 
    set $P5006, fb_tmp_666["$W"]
    set $P5008, $P5006
    goto if3049_end6461
  if3049_else6460:
    null $P5007
    set $P5008, $P5007
  if3049_end6461:
    unless_null $P5008, vivi_30506462
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_30506462:
    unless_null $P5008, vivi_30516463
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30516463:
    set $P5003, $P5008
  fallback6459:
    unless_null _lex_param_1, fallback6466
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5011
  fallback6466:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5002, fb_tmp_667
    unless $I5002 goto if3052_else6464 
    set $P5012, fb_tmp_667["name"]
    set $P5014, $P5012
    goto if3052_end6465
  if3052_else6464:
    null $P5013
    set $P5014, $P5013
  if3052_end6465:
    unless_null $P5014, vivi_30536467
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_30536467:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3048_else6457 
    unless_null _lex_param_1, fallback6472
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5017
  fallback6472:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5003, fb_tmp_668
    unless $I5003 goto if3055_else6470 
    set $P5018, fb_tmp_668["args"]
    set $P5020, $P5018
    goto if3055_end6471
  if3055_else6470:
    null $P5019
    set $P5020, $P5019
  if3055_end6471:
    unless_null $P5020, vivi_30566473
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5020, $P5021
  vivi_30566473:
    if $P5020 goto unless3054_end6469 
.annotate 'line', 2926
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30646486
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_500_1381944288.90674' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30636485
  catch_handler_30646486:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30636485
  skip_handler_30636485:
  unless3054_end6469:
    set $P5033, $P101
    if $P101 goto unless3065_end6488 
.annotate 'line', 2934
.annotate 'line', 2935
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    unless_null _lex_param_1, fallback6491
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5027
  fallback6491:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5004, fb_tmp_671
    unless $I5004 goto if3066_else6489 
    set $P5028, fb_tmp_671["name"]
    set $P5030, $P5028
    goto if3066_end6490
  if3066_else6489:
    null $P5029
    set $P5030, $P5029
  if3066_end6490:
    unless_null $P5030, vivi_30676492
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5030, $P5031
  vivi_30676492:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3065_end6488:
    goto if3048_end6458
  if3048_else6457:
    .const 'Sub' $P5034 = 'cuid_502_1381944288.90674' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3048_end6458:
    set $P102, $P101
    unless_null _lex_param_1, fallback6521
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5036
  fallback6521:
    set fb_tmp_676, _lex_param_1
    repr_defined $I5005, fb_tmp_676
    unless $I5005 goto if3083_else6519 
    set $P5037, fb_tmp_676["args"]
    set $P5039, $P5037
    goto if3083_end6520
  if3083_else6519:
    null $P5038
    set $P5039, $P5038
  if3083_end6520:
    unless_null $P5039, vivi_30846522
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5039, $P5040
  vivi_30846522:
    unless $P5039 goto if3082_end6518 
.annotate 'line', 2955
.annotate 'line', 2956
    unless_null _lex_param_1, fallback6527
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5041
  fallback6527:
    set fb_tmp_678, _lex_param_1
    repr_defined $I5007, fb_tmp_678
    unless $I5007 goto if3086_else6525 
    set $P5042, fb_tmp_678["args"]
    set $P5044, $P5042
    goto if3086_end6526
  if3086_else6525:
    null $P5043
    set $P5044, $P5043
  if3086_end6526:
    unless_null $P5044, vivi_30876528
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5044, $P5045
  vivi_30876528:
    set fb_tmp_677, $P5044
    repr_defined $I5006, fb_tmp_677
    unless $I5006 goto if3085_else6523 
    set $P5046, fb_tmp_677[0]
    set $P5048, $P5046
    goto if3085_end6524
  if3085_else6523:
    null $P5047
    set $P5048, $P5047
  if3085_end6524:
    unless_null $P5048, vivi_30886529
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5048, $P5049
  vivi_30886529:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 2957
    $P5051 = $P102."unshift"($P101)
  if3082_end6518:
.annotate 'line', 2959
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1381944288.90674") :anon :lex :outer("cuid_312_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2927
    .lex "$sym", $P101 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2928
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6474
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_669, $P5003
    repr_defined $I5001, fb_tmp_669
    unless $I5001 goto if3057_else6475 
    set $P5005, fb_tmp_669["$W"]
    set $P5007, $P5005
    goto if3057_end6476
  if3057_else6475:
    null $P5006
    set $P5007, $P5006
  if3057_end6476:
    unless_null $P5007, vivi_30586477
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_30586477:
    unless_null $P5007, vivi_30596478
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30596478:
    set $P5002, $P5007
  fallback6474:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6481
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  fallback6481:
    set fb_tmp_670, $P5011
    repr_defined $I5002, fb_tmp_670
    unless $I5002 goto if3060_else6479 
    set $P5013, fb_tmp_670["name"]
    set $P5015, $P5013
    goto if3060_end6480
  if3060_else6479:
    null $P5014
    set $P5015, $P5014
  if3060_end6480:
    unless_null $P5015, vivi_30616482
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_30616482:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3062_end6484 
.annotate 'line', 2929
.annotate 'line', 2930
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3062_end6484:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1381944288.90674") :anon :lex :outer("cuid_312_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2938
    .const 'Sub' $P5027 = 'cuid_501_1381944288.90674' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6497
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  fallback6497:
    set fb_tmp_673, $P5003
    repr_defined $I5002, fb_tmp_673
    unless $I5002 goto if3069_else6495 
    set $P5005, fb_tmp_673["name"]
    set $P5007, $P5005
    goto if3069_end6496
  if3069_else6495:
    null $P5006
    set $P5007, $P5006
  if3069_end6496:
    unless_null $P5007, vivi_30706498
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_30706498:
    set fb_tmp_672, $P5007
    repr_defined $I5001, fb_tmp_672
    unless $I5001 goto if3068_else6493 
    set $P5009, fb_tmp_672["identifier"]
    set $P5011, $P5009
    goto if3068_end6494
  if3068_else6493:
    null $P5010
    set $P5011, $P5010
  if3068_end6494:
    unless_null $P5011, vivi_30716499
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_30716499:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6504
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  fallback6504:
    set fb_tmp_674, $P5013
    repr_defined $I5003, fb_tmp_674
    unless $I5003 goto if3073_else6502 
    set $P5015, fb_tmp_674["args"]
    set $P5017, $P5015
    goto if3073_end6503
  if3073_else6502:
    null $P5016
    set $P5017, $P5016
  if3073_end6503:
    unless_null $P5017, vivi_30746505
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_30746505:
    if $P5017 goto unless3072_end6501 
.annotate 'line', 2940
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_30806514
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_501_1381944288.90674' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_30796513
  catch_handler_30806514:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_30796513
  skip_handler_30796513:
  unless3072_end6501:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3081_end6516 
.annotate 'line', 2948
.annotate 'line', 2949
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3081_end6516:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1381944288.90674") :anon :lex :outer("cuid_502_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2941
    .lex "$sym", $P101 
    .local pmc fb_tmp_675 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 2942
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6506
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_675, $P5003
    repr_defined $I5001, fb_tmp_675
    unless $I5001 goto if3075_else6507 
    set $P5005, fb_tmp_675["$W"]
    set $P5007, $P5005
    goto if3075_end6508
  if3075_else6507:
    null $P5006
    set $P5007, $P5006
  if3075_end6508:
    unless_null $P5007, vivi_30766509
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_30766509:
    unless_null $P5007, vivi_30776510
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30776510:
    set $P5002, $P5007
  fallback6506:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3078_end6512 
.annotate 'line', 2943
.annotate 'line', 2944
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3078_end6512:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_313_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2962
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6534
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback6534:
    set fb_tmp_679, _lex_param_1
    repr_defined $I5001, fb_tmp_679
    unless $I5001 goto if3090_else6532 
    set $P5004, fb_tmp_679["args"]
    set $P5006, $P5004
    goto if3090_end6533
  if3090_else6532:
    null $P5005
    set $P5006, $P5005
  if3090_end6533:
    unless_null $P5006, vivi_30916535
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_30916535:
    unless $P5006 goto if3089_else6530 
.annotate 'line', 2963
    unless_null _lex_param_1, fallback6540
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6540:
    set fb_tmp_681, _lex_param_1
    repr_defined $I5003, fb_tmp_681
    unless $I5003 goto if3093_else6538 
    set $P5009, fb_tmp_681["args"]
    set $P5011, $P5009
    goto if3093_end6539
  if3093_else6538:
    null $P5010
    set $P5011, $P5010
  if3093_end6539:
    unless_null $P5011, vivi_30946541
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_30946541:
    set fb_tmp_680, $P5011
    repr_defined $I5002, fb_tmp_680
    unless $I5002 goto if3092_else6536 
    set $P5013, fb_tmp_680[0]
    set $P5015, $P5013
    goto if3092_end6537
  if3092_else6536:
    null $P5014
    set $P5015, $P5014
  if3092_end6537:
    unless_null $P5015, vivi_30956542
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_30956542:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3089_end6531
  if3089_else6530:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3089_end6531:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6545
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5021
  fallback6545:
    set fb_tmp_682, _lex_param_1
    repr_defined $I5004, fb_tmp_682
    unless $I5004 goto if3096_else6543 
    set $P5022, fb_tmp_682["op"]
    set $P5024, $P5022
    goto if3096_end6544
  if3096_else6543:
    null $P5023
    set $P5024, $P5023
  if3096_end6544:
    unless_null $P5024, vivi_30976546
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_30976546:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
.annotate 'line', 2965
    set $S5002, $P102
    split $P5027, "__", $S5002
    $P5028 = "&join"(" ", $P5027)
    set $P102, $P5028
.annotate 'line', 2966
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_314_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2969
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_683 
.annotate 'line', 2970
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    unless_null _lex_param_1, fallback6549
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6549:
    set fb_tmp_683, _lex_param_1
    repr_defined $I5001, fb_tmp_683
    unless $I5001 goto if3098_else6547 
    set $P5003, fb_tmp_683["const"]
    set $P5005, $P5003
    goto if3098_end6548
  if3098_else6547:
    null $P5004
    set $P5005, $P5004
  if3098_end6548:
    unless_null $P5005, vivi_30996550
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_30996550:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_315_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2973
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6553
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5004
  fallback6553:
    set fb_tmp_684, _lex_param_1
    repr_defined $I5001, fb_tmp_684
    unless $I5001 goto if3100_else6551 
    set $P5005, fb_tmp_684["op"]
    set $P5007, $P5005
    goto if3100_end6552
  if3100_else6551:
    null $P5006
    set $P5007, $P5006
  if3100_end6552:
    unless_null $P5007, vivi_31016554
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_31016554:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6559
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5010
  fallback6559:
    set fb_tmp_685, _lex_param_1
    repr_defined $I5002, fb_tmp_685
    unless $I5002 goto if3103_else6557 
    set $P5011, fb_tmp_685["args"]
    set $P5013, $P5011
    goto if3103_end6558
  if3103_else6557:
    null $P5012
    set $P5013, $P5012
  if3103_end6558:
    unless_null $P5013, vivi_31046560
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_31046560:
    unless $P5013 goto if3102_else6555 
.annotate 'line', 2975
    unless_null _lex_param_1, fallback6565
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5015
  fallback6565:
    set fb_tmp_687, _lex_param_1
    repr_defined $I5004, fb_tmp_687
    unless $I5004 goto if3106_else6563 
    set $P5016, fb_tmp_687["args"]
    set $P5018, $P5016
    goto if3106_end6564
  if3106_else6563:
    null $P5017
    set $P5018, $P5017
  if3106_end6564:
    unless_null $P5018, vivi_31076566
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_31076566:
    set fb_tmp_686, $P5018
    repr_defined $I5003, fb_tmp_686
    unless $I5003 goto if3105_else6561 
    set $P5020, fb_tmp_686[0]
    set $P5022, $P5020
    goto if3105_end6562
  if3105_else6561:
    null $P5021
    set $P5022, $P5021
  if3105_end6562:
    unless_null $P5022, vivi_31086567
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5022, $P5023
  vivi_31086567:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3102_end6556
  if3102_else6555:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3102_end6556:
    set $P102, $P5027
.annotate 'line', 2976
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 2977
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_316_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2980
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_688 
.annotate 'line', 2981
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    unless_null _lex_param_1, fallback6570
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6570:
    set fb_tmp_688, _lex_param_1
    repr_defined $I5001, fb_tmp_688
    unless $I5001 goto if3109_else6568 
    set $P5003, fb_tmp_688["const"]
    set $P5005, $P5003
    goto if3109_end6569
  if3109_else6568:
    null $P5004
    set $P5005, $P5004
  if3109_end6569:
    unless_null $P5005, vivi_31106571
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_31106571:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_317_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2984
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "$stmts", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_689 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 2985
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
    $P5004 = $P5003."unique"("dispatch_cap")
    set $P101, $P5004
.annotate 'line', 2986
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 2987
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2989
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5008 = $P5007."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2990
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5010 = $P5009."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5011 = $P5006."new"($P5008, $P5010, "bind" :named("op"))
.annotate 'line', 2992
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2994
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2996
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 2998
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
.annotate 'line', 3000
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5017 = $P5016."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3001
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 64
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback6572
    nqp_get_sc_object $P5021, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5020, $P5021
    set fb_tmp_689, $P5020
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if3111_else6573 
    set $P5022, fb_tmp_689["$W"]
    set $P5024, $P5022
    goto if3111_end6574
  if3111_else6573:
    null $P5023
    set $P5024, $P5023
  if3111_end6574:
    unless_null $P5024, vivi_31126575
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5024, $P5025
  vivi_31126575:
    unless_null $P5024, vivi_31136576
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_31136576:
    set $P5019, $P5024
  fallback6572:
    new $P5027, 'ResizablePMCArray'
    box $P5028, "NQPRoutine"
    push $P5027, $P5028
    $P5029 = $P5019."find_sym"($P5027)
    $P5030 = $P5018."new"($P5029 :named("value"))
    $P5031 = $P5015."new"($P5017, $P5030, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 3003
    nqp_get_sc_object $P5032, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5033 = $P5032."new"($P101 :named("name"), "local" :named("scope"))
    $P5034 = $P5014."new"($P5031, $P5033, "multicachefind" :named("op"))
.annotate 'line', 3005
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3007
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5037 = $P5036."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3008
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5039 = $P5038."new"($P101 :named("name"), "local" :named("scope"))
    $P5040 = $P5035."new"($P5037, $P5039, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5041 = $P5013."new"($P5034, $P5040, "ifnull" :named("op"))
.annotate 'line', 3011
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5043 = $P5042."new"($P101 :named("name"), "local" :named("scope"))
    $P5044 = $P5012."new"($P5041, $P5043, "invokewithcapture" :named("op"))
    $P5045 = $P5005."new"($P5011, $P5044)
    set $P102, $P5045
.annotate 'line', 3013
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5047 = $P5046."new"($P102, $P101, "locallifetime" :named("op"))
    $P5048 = _lex_param_1."!make"($P5047)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_318_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3016
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_690 
    unless_null _lex_param_1, fallback6579
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6579:
    set fb_tmp_690, _lex_param_1
    repr_defined $I5001, fb_tmp_690
    unless $I5001 goto if3114_else6577 
    set $P5002, fb_tmp_690["arglist"]
    set $P5004, $P5002
    goto if3114_end6578
  if3114_else6577:
    null $P5003
    set $P5004, $P5003
  if3114_end6578:
    unless_null $P5004, vivi_31156580
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31156580:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_319_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3018
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_504_1381944288.90674' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_698 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_700 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 3019
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6585
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback6585:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5001, fb_tmp_691
    unless $I5001 goto if3117_else6583 
    set $P5007, fb_tmp_691["EXPR"]
    set $P5009, $P5007
    goto if3117_end6584
  if3117_else6583:
    null $P5008
    set $P5009, $P5008
  if3117_end6584:
    unless_null $P5009, vivi_31186586
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_31186586:
    unless $P5009 goto if3116_end6582 
    .const 'Sub' $P5011 = 'cuid_504_1381944288.90674' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3116_end6582:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3028
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3124_test6600:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3124_done6604 
  while3124_redo6602:
.annotate 'line', 3029
    set fb_tmp_693, $P101
    repr_defined $I5004, fb_tmp_693
    unless $I5004 goto if3127_else6609 
    set $I5005, $P102
    set $P5016, fb_tmp_693[$I5005]
    set $P5018, $P5016
    goto if3127_end6610
  if3127_else6609:
    null $P5017
    set $P5018, $P5017
  if3127_end6610:
    unless_null $P5018, vivi_31286611
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5018, $P5019
  vivi_31286611:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3126_end6608 
.annotate 'line', 3030
    set fb_tmp_694, $P101
    repr_defined $I5007, fb_tmp_694
    unless $I5007 goto if3129_else6612 
    set $I5008, $P102
    set $P5021, fb_tmp_694[$I5008]
    set $P5023, $P5021
    goto if3129_end6613
  if3129_else6612:
    null $P5022
    set $P5023, $P5022
  if3129_end6613:
    unless_null $P5023, vivi_31306614
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_31306614:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3126_end6608:
    unless $I5009 goto if3125_end6606 
    set $I5010, $P102
    set fb_tmp_696, $P101
    repr_defined $I5012, fb_tmp_696
    unless $I5012 goto if3132_else6617 
    set $I5013, $P102
    set $P5026, fb_tmp_696[$I5013]
    set $P5028, $P5026
    goto if3132_end6618
  if3132_else6617:
    null $P5027
    set $P5028, $P5027
  if3132_end6618:
    unless_null $P5028, vivi_31336619
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5028, $P5029
  vivi_31336619:
    set fb_tmp_695, $P5028
    repr_defined $I5011, fb_tmp_695
    unless $I5011 goto if3131_else6615 
    set $P5030, fb_tmp_695[0]
    set $P5032, $P5030
    goto if3131_end6616
  if3131_else6615:
    null $P5031
    set $P5032, $P5031
  if3131_end6616:
    unless_null $P5032, vivi_31346620
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5032, $P5033
  vivi_31346620:
    set $P101[$I5010], $P5032
.annotate 'line', 3032
    set fb_tmp_697, $P101
    repr_defined $I5014, fb_tmp_697
    unless $I5014 goto if3135_else6621 
    set $I5015, $P102
    set $P5034, fb_tmp_697[$I5015]
    set $P5036, $P5034
    goto if3135_end6622
  if3135_else6621:
    null $P5035
    set $P5036, $P5035
  if3135_end6622:
    unless_null $P5036, vivi_31366623
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5036, $P5037
  vivi_31366623:
    $P5036."flat"(1)
    set fb_tmp_698, $P101
    repr_defined $I5017, fb_tmp_698
    unless $I5017 goto if3139_else6628 
    set $I5018, $P102
    set $P5038, fb_tmp_698[$I5018]
    set $P5040, $P5038
    goto if3139_end6629
  if3139_else6628:
    null $P5039
    set $P5040, $P5039
  if3139_end6629:
    unless_null $P5040, vivi_31406630
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5041
  vivi_31406630:
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3138_end6627 
.annotate 'line', 3034
    set fb_tmp_699, $P101
    repr_defined $I5020, fb_tmp_699
    unless $I5020 goto if3141_else6631 
    set $I5021, $P102
    set $P5043, fb_tmp_699[$I5021]
    set $P5045, $P5043
    goto if3141_end6632
  if3141_else6631:
    null $P5044
    set $P5045, $P5044
  if3141_end6632:
    unless_null $P5045, vivi_31426633
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  vivi_31426633:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3138_end6627:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3137_end6625 
.annotate 'line', 3033
    set fb_tmp_700, $P101
    repr_defined $I5023, fb_tmp_700
    unless $I5023 goto if3143_else6634 
    set $I5024, $P102
    set $P5048, fb_tmp_700[$I5024]
    set $P5050, $P5048
    goto if3143_end6635
  if3143_else6634:
    null $P5049
    set $P5050, $P5049
  if3143_end6635:
    unless_null $P5050, vivi_31446636
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5050, $P5051
  vivi_31446636:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3137_end6625:
  if3125_end6606:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3124_test6600 
  while3124_done6604:
.annotate 'line', 3038
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1381944288.90674") :anon :lex :outer("cuid_319_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3020
    .const 'Sub' $P5021 = 'cuid_503_1381944288.90674' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_692 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3021
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6589
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5002, $P5003
  fallback6589:
    set fb_tmp_692, $P5002
    repr_defined $I5001, fb_tmp_692
    unless $I5001 goto if3119_else6587 
    set $P5004, fb_tmp_692["EXPR"]
    set $P5006, $P5004
    goto if3119_end6588
  if3119_else6587:
    null $P5005
    set $P5006, $P5005
  if3119_end6588:
    unless_null $P5006, vivi_31206590
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_31206590:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3123_end6596 
.annotate 'line', 3022
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3123_end6596:
    set $I5006, $I5004
    unless $I5004 goto if3122_end6594 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3122_end6594:
    unless $I5006 goto if3121_else6591 
.annotate 'line', 3023
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6597:
    unless $P5014, for_done6599
    shift $P5017, $P5014
  for_redo6598:
    .const 'Sub' $P5016 = 'cuid_503_1381944288.90674' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6597
  for_done6599:
    set $P5020, $P5012
    goto if3121_end6592
  if3121_else6591:
.annotate 'line', 3025
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3121_end6592:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1381944288.90674") :anon :lex :outer("cuid_504_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3023
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_320_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3041
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    unless_null _lex_param_1, fallback6639
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6639:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if3145_else6637 
    set $P5002, fb_tmp_701["multi_declarator"]
    set $P5004, $P5002
    goto if3145_end6638
  if3145_else6637:
    null $P5003
    set $P5004, $P5003
  if3145_end6638:
    unless_null $P5004, vivi_31466640
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31466640:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_321_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3043
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_702 
    unless_null _lex_param_1, fallback6643
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6643:
    set fb_tmp_702, _lex_param_1
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if3147_else6641 
    set $P5002, fb_tmp_702["value"]
    set $P5004, $P5002
    goto if3147_end6642
  if3147_else6641:
    null $P5003
    set $P5004, $P5003
  if3147_end6642:
    unless_null $P5004, vivi_31486644
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31486644:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_322_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3045
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
.annotate 'line', 3046
    unless_null _lex_param_1, fallback6649
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6649:
    set fb_tmp_703, _lex_param_1
    repr_defined $I5001, fb_tmp_703
    unless $I5001 goto if3150_else6647 
    set $P5002, fb_tmp_703["EXPR"]
    set $P5004, $P5002
    goto if3150_end6648
  if3150_else6647:
    null $P5003
    set $P5004, $P5003
  if3150_end6648:
    unless_null $P5004, vivi_31516650
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31516650:
    unless $P5004 goto if3149_else6645 
.annotate 'line', 3047
    unless_null _lex_param_1, fallback6655
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback6655:
    set fb_tmp_705, _lex_param_1
    repr_defined $I5003, fb_tmp_705
    unless $I5003 goto if3153_else6653 
    set $P5007, fb_tmp_705["EXPR"]
    set $P5009, $P5007
    goto if3153_end6654
  if3153_else6653:
    null $P5008
    set $P5009, $P5008
  if3153_end6654:
    unless_null $P5009, vivi_31546656
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_31546656:
    set fb_tmp_704, $P5009
    repr_defined $I5002, fb_tmp_704
    unless $I5002 goto if3152_else6651 
    set $P5011, fb_tmp_704[0]
    set $P5013, $P5011
    goto if3152_end6652
  if3152_else6651:
    null $P5012
    set $P5013, $P5012
  if3152_end6652:
    unless_null $P5013, vivi_31556657
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_31556657:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3149_end6646
  if3149_else6645:
.annotate 'line', 3048
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3149_end6646:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_323_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3051
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6662
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6662:
    set fb_tmp_706, _lex_param_1
    repr_defined $I5001, fb_tmp_706
    unless $I5001 goto if3157_else6660 
    set $P5003, fb_tmp_706["EXPR"]
    set $P5005, $P5003
    goto if3157_end6661
  if3157_else6660:
    null $P5004
    set $P5005, $P5004
  if3157_end6661:
    unless_null $P5005, vivi_31586663
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_31586663:
    unless $P5005 goto if3156_else6658 
.annotate 'line', 3053
.annotate 'line', 3054
    unless_null _lex_param_1, fallback6668
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5007
  fallback6668:
    set fb_tmp_708, _lex_param_1
    repr_defined $I5003, fb_tmp_708
    unless $I5003 goto if3160_else6666 
    set $P5008, fb_tmp_708["EXPR"]
    set $P5010, $P5008
    goto if3160_end6667
  if3160_else6666:
    null $P5009
    set $P5010, $P5009
  if3160_end6667:
    unless_null $P5010, vivi_31616669
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_31616669:
    set fb_tmp_707, $P5010
    repr_defined $I5002, fb_tmp_707
    unless $I5002 goto if3159_else6664 
    set $P5012, fb_tmp_707[0]
    set $P5014, $P5012
    goto if3159_end6665
  if3159_else6664:
    null $P5013
    set $P5014, $P5013
  if3159_end6665:
    unless_null $P5014, vivi_31626670
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5014, $P5015
  vivi_31626670:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3164_end6674 
.annotate 'line', 3055
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3164_end6674:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3163_end6672 
.annotate 'line', 3056
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3163_end6672:
    goto if3156_end6659
  if3156_else6658:
.annotate 'line', 3059
.annotate 'line', 3060
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3156_end6659:
.annotate 'line', 3062
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3063
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_324_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3066
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_709 
    unless_null _lex_param_1, fallback6677
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6677:
    set fb_tmp_709, _lex_param_1
    repr_defined $I5001, fb_tmp_709
    unless $I5001 goto if3165_else6675 
    set $P5002, fb_tmp_709["quote_EXPR"]
    set $P5004, $P5002
    goto if3165_end6676
  if3165_else6675:
    null $P5003
    set $P5004, $P5003
  if3165_end6676:
    unless_null $P5004, vivi_31666678
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31666678:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_325_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3067
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_710 
    unless_null _lex_param_1, fallback6681
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6681:
    set fb_tmp_710, _lex_param_1
    repr_defined $I5001, fb_tmp_710
    unless $I5001 goto if3167_else6679 
    set $P5002, fb_tmp_710["quote_EXPR"]
    set $P5004, $P5002
    goto if3167_end6680
  if3167_else6679:
    null $P5003
    set $P5004, $P5003
  if3167_end6680:
    unless_null $P5004, vivi_31686682
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31686682:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_326_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3069
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_505_1381944288.90674' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    unless_null _lex_param_1, fallback6693
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6693:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5005, fb_tmp_714
    unless $I5005 goto if3173_else6691 
    set $P5002, fb_tmp_714["pblock"]
    set $P5004, $P5002
    goto if3173_end6692
  if3173_else6691:
    null $P5003
    set $P5004, $P5003
  if3173_end6692:
    unless_null $P5004, vivi_31746694
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31746694:
    set fb_tmp_713, $P5004
    repr_defined $I5004, fb_tmp_713
    unless $I5004 goto if3172_else6689 
    set $P5006, fb_tmp_713["blockoid"]
    set $P5008, $P5006
    goto if3172_end6690
  if3172_else6689:
    null $P5007
    set $P5008, $P5007
  if3172_end6690:
    unless_null $P5008, vivi_31756695
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_31756695:
    set fb_tmp_712, $P5008
    repr_defined $I5003, fb_tmp_712
    unless $I5003 goto if3171_else6687 
    set $P5010, fb_tmp_712["statementlist"]
    set $P5012, $P5010
    goto if3171_end6688
  if3171_else6687:
    null $P5011
    set $P5012, $P5011
  if3171_end6688:
    unless_null $P5012, vivi_31766696
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_31766696:
    set fb_tmp_711, $P5012
    repr_defined $I5002, fb_tmp_711
    unless $I5002 goto if3170_else6685 
    set $P5014, fb_tmp_711["statement"]
    set $P5016, $P5014
    goto if3170_end6686
  if3170_else6685:
    null $P5015
    set $P5016, $P5015
  if3170_end6686:
    unless_null $P5016, vivi_31776697
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_31776697:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3169_else6683 
    .const 'Sub' $P5018 = 'cuid_505_1381944288.90674' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3169_end6684
  if3169_else6683:
    unless_null _lex_param_1, fallback6710
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5020
  fallback6710:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5008, fb_tmp_718
    unless $I5008 goto if3183_else6708 
    set $P5021, fb_tmp_718["pblock"]
    set $P5023, $P5021
    goto if3183_end6709
  if3183_else6708:
    null $P5022
    set $P5023, $P5022
  if3183_end6709:
    unless_null $P5023, vivi_31846711
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_31846711:
    set fb_tmp_717, $P5023
    repr_defined $I5007, fb_tmp_717
    unless $I5007 goto if3182_else6706 
    set $P5025, fb_tmp_717["blockoid"]
    set $P5027, $P5025
    goto if3182_end6707
  if3182_else6706:
    null $P5026
    set $P5027, $P5026
  if3182_end6707:
    unless_null $P5027, vivi_31856712
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5027, $P5028
  vivi_31856712:
    set fb_tmp_716, $P5027
    repr_defined $I5006, fb_tmp_716
    unless $I5006 goto if3181_else6704 
    set $P5029, fb_tmp_716["you_are_here"]
    set $P5031, $P5029
    goto if3181_end6705
  if3181_else6704:
    null $P5030
    set $P5031, $P5030
  if3181_end6705:
    unless_null $P5031, vivi_31866713
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_31866713:
    unless $P5031 goto if3180_else6702 
.annotate 'line', 3075
.annotate 'line', 3076
    unless_null _lex_param_1, fallback6716
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5033
  fallback6716:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5009, fb_tmp_719
    unless $I5009 goto if3187_else6714 
    set $P5034, fb_tmp_719["pblock"]
    set $P5036, $P5034
    goto if3187_end6715
  if3187_else6714:
    null $P5035
    set $P5036, $P5035
  if3187_end6715:
    unless_null $P5036, vivi_31886717
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5036, $P5037
  vivi_31886717:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3180_end6703
  if3180_else6702:
.annotate 'line', 3078
.annotate 'line', 3079
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3180_end6703:
    set $P5043, $P5042
  if3169_end6684:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1381944288.90674") :anon :lex :outer("cuid_326_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3070
    .lex "$past", $P101 
    .local pmc fb_tmp_715 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3071
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6700
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  fallback6700:
    set fb_tmp_715, $P5003
    repr_defined $I5001, fb_tmp_715
    unless $I5001 goto if3178_else6698 
    set $P5005, fb_tmp_715["pblock"]
    set $P5007, $P5005
    goto if3178_end6699
  if3178_else6698:
    null $P5006
    set $P5007, $P5006
  if3178_end6699:
    unless_null $P5007, vivi_31796701
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_31796701:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3073
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_327_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_720 
    unless_null _lex_param_1, fallback6720
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6720:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5001, fb_tmp_720
    unless $I5001 goto if3189_else6718 
    set $P5002, fb_tmp_720["statement"]
    set $P5004, $P5002
    goto if3189_end6719
  if3189_else6718:
    null $P5003
    set $P5004, $P5003
  if3189_end6719:
    unless_null $P5004, vivi_31906721
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31906721:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_328_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3085
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
.annotate 'line', 3086
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 84
    unless_null _lex_param_1, fallback6724
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6724:
    set fb_tmp_721, _lex_param_1
    repr_defined $I5001, fb_tmp_721
    unless $I5001 goto if3191_else6722 
    set $P5003, fb_tmp_721["EXPR"]
    set $P5005, $P5003
    goto if3191_end6723
  if3191_else6722:
    null $P5004
    set $P5005, $P5004
  if3191_end6723:
    unless_null $P5005, vivi_31926725
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_31926725:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_329_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3089
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_722 
.annotate 'line', 3090
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 84
    unless_null _lex_param_1, fallback6728
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6728:
    set fb_tmp_722, _lex_param_1
    repr_defined $I5001, fb_tmp_722
    unless $I5001 goto if3193_else6726 
    set $P5003, fb_tmp_722["EXPR"]
    set $P5005, $P5003
    goto if3193_end6727
  if3193_else6726:
    null $P5004
    set $P5005, $P5004
  if3193_end6727:
    unless_null $P5005, vivi_31946729
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_31946729:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_330_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3093
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_723 
.annotate 'line', 3094
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 84
    unless_null _lex_param_1, fallback6732
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6732:
    set fb_tmp_723, _lex_param_1
    repr_defined $I5001, fb_tmp_723
    unless $I5001 goto if3195_else6730 
    set $P5003, fb_tmp_723["quote_EXPR"]
    set $P5005, $P5003
    goto if3195_end6731
  if3195_else6730:
    null $P5004
    set $P5005, $P5004
  if3195_end6731:
    unless_null $P5005, vivi_31966733
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_31966733:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_331_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3097
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_724 
.annotate 'line', 3098
    unless_null _lex_param_1, fallback6736
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6736:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5001, fb_tmp_724
    unless $I5001 goto if3197_else6734 
    set $P5002, fb_tmp_724["arglist"]
    set $P5004, $P5002
    goto if3197_end6735
  if3197_else6734:
    null $P5003
    set $P5004, $P5003
  if3197_end6735:
    unless_null $P5004, vivi_31986737
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_31986737:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_332_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3101
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
.annotate 'line', 3102
    unless_null _lex_param_1, fallback6742
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6742:
    set fb_tmp_725, _lex_param_1
    repr_defined $I5001, fb_tmp_725
    unless $I5001 goto if3200_else6740 
    set $P5002, fb_tmp_725["quote"]
    set $P5004, $P5002
    goto if3200_end6741
  if3200_else6740:
    null $P5003
    set $P5004, $P5003
  if3200_end6741:
    unless_null $P5004, vivi_32016743
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32016743:
    unless $P5004 goto if3199_else6738 
    unless_null _lex_param_1, fallback6746
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5006
  fallback6746:
    set fb_tmp_726, _lex_param_1
    repr_defined $I5002, fb_tmp_726
    unless $I5002 goto if3202_else6744 
    set $P5007, fb_tmp_726["quote"]
    set $P5009, $P5007
    goto if3202_end6745
  if3202_else6744:
    null $P5008
    set $P5009, $P5008
  if3202_end6745:
    unless_null $P5009, vivi_32036747
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_32036747:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3199_end6739
  if3199_else6738:
    unless_null _lex_param_1, fallback6750
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5012
  fallback6750:
    set fb_tmp_727, _lex_param_1
    repr_defined $I5003, fb_tmp_727
    unless $I5003 goto if3204_else6748 
    set $P5013, fb_tmp_727["number"]
    set $P5015, $P5013
    goto if3204_end6749
  if3204_else6748:
    null $P5014
    set $P5015, $P5014
  if3204_end6749:
    unless_null $P5015, vivi_32056751
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_32056751:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3199_end6739:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_333_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3105
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    .local pmc fb_tmp_730 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6756
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6756:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5001, fb_tmp_728
    unless $I5001 goto if3207_else6754 
    set $P5003, fb_tmp_728["dec_number"]
    set $P5005, $P5003
    goto if3207_end6755
  if3207_else6754:
    null $P5004
    set $P5005, $P5004
  if3207_end6755:
    unless_null $P5005, vivi_32086757
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_32086757:
    unless $P5005 goto if3206_else6752 
.annotate 'line', 3106
    unless_null _lex_param_1, fallback6760
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5007
  fallback6760:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5002, fb_tmp_729
    unless $I5002 goto if3209_else6758 
    set $P5008, fb_tmp_729["dec_number"]
    set $P5010, $P5008
    goto if3209_end6759
  if3209_else6758:
    null $P5009
    set $P5010, $P5009
  if3209_end6759:
    unless_null $P5010, vivi_32106761
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5010, $P5011
  vivi_32106761:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3206_end6753
  if3206_else6752:
    unless_null _lex_param_1, fallback6764
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5013
  fallback6764:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5003, fb_tmp_730
    unless $I5003 goto if3211_else6762 
    set $P5014, fb_tmp_730["integer"]
    set $P5016, $P5014
    goto if3211_end6763
  if3211_else6762:
    null $P5015
    set $P5016, $P5015
  if3211_end6763:
    unless_null $P5016, vivi_32126765
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5016, $P5017
  vivi_32126765:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3206_end6753:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6770
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5020
  fallback6770:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5005, fb_tmp_731
    unless $I5005 goto if3214_else6768 
    set $P5021, fb_tmp_731["sign"]
    set $P5023, $P5021
    goto if3214_end6769
  if3214_else6768:
    null $P5022
    set $P5023, $P5022
  if3214_end6769:
    unless_null $P5023, vivi_32156771
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5023, $P5024
  vivi_32156771:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3213_end6767 
.annotate 'line', 3107
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3213_end6767:
.annotate 'line', 3108
    unless_null _lex_param_1, fallback6776
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5026
  fallback6776:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5006, fb_tmp_732
    unless $I5006 goto if3217_else6774 
    set $P5027, fb_tmp_732["dec_number"]
    set $P5029, $P5027
    goto if3217_end6775
  if3217_else6774:
    null $P5028
    set $P5029, $P5028
  if3217_end6775:
    unless_null $P5029, vivi_32186777
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5029, $P5030
  vivi_32186777:
    unless $P5029 goto if3216_else6772 
.annotate 'line', 3109
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 49
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3216_end6773
  if3216_else6772:
.annotate 'line', 3110
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3216_end6773:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_334_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3113
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
    unless_null _lex_param_1, fallback6780
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6780:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3219_else6778 
    set $P5002, fb_tmp_733["quote_EXPR"]
    set $P5004, $P5002
    goto if3219_end6779
  if3219_else6778:
    null $P5003
    set $P5004, $P5003
  if3219_end6779:
    unless_null $P5004, vivi_32206781
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32206781:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_335_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3114
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
    unless_null _lex_param_1, fallback6784
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6784:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3221_else6782 
    set $P5002, fb_tmp_734["quote_EXPR"]
    set $P5004, $P5002
    goto if3221_end6783
  if3221_else6782:
    null $P5003
    set $P5004, $P5003
  if3221_end6783:
    unless_null $P5004, vivi_32226785
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32226785:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_336_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3115
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_735 
    unless_null _lex_param_1, fallback6788
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6788:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5001, fb_tmp_735
    unless $I5001 goto if3223_else6786 
    set $P5002, fb_tmp_735["quote_EXPR"]
    set $P5004, $P5002
    goto if3223_end6787
  if3223_else6786:
    null $P5003
    set $P5004, $P5003
  if3223_end6787:
    unless_null $P5004, vivi_32246789
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32246789:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_337_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3116
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_736 
    unless_null _lex_param_1, fallback6792
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6792:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5001, fb_tmp_736
    unless $I5001 goto if3225_else6790 
    set $P5002, fb_tmp_736["quote_EXPR"]
    set $P5004, $P5002
    goto if3225_end6791
  if3225_else6790:
    null $P5003
    set $P5004, $P5003
  if3225_end6791:
    unless_null $P5004, vivi_32266793
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32266793:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_338_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3117
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_737 
    unless_null _lex_param_1, fallback6796
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6796:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5001, fb_tmp_737
    unless $I5001 goto if3227_else6794 
    set $P5002, fb_tmp_737["quote_EXPR"]
    set $P5004, $P5002
    goto if3227_end6795
  if3227_else6794:
    null $P5003
    set $P5004, $P5003
  if3227_end6795:
    unless_null $P5004, vivi_32286797
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32286797:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_339_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3118
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_738 
.annotate 'line', 3119
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 93
    unless_null _lex_param_1, fallback6800
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6800:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5001, fb_tmp_738
    unless $I5001 goto if3229_else6798 
    set $P5003, fb_tmp_738["quote_EXPR"]
    set $P5005, $P5003
    goto if3229_end6799
  if3229_else6798:
    null $P5004
    set $P5005, $P5004
  if3229_end6799:
    unless_null $P5005, vivi_32306801
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_32306801:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_340_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3122
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc fb_tmp_745 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_746 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
.annotate 'line', 3123
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6802
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5005, $P5006
    set fb_tmp_739, $P5005
    repr_defined $I5001, fb_tmp_739
    unless $I5001 goto if3231_else6803 
    set $P5007, fb_tmp_739["$W"]
    set $P5009, $P5007
    goto if3231_end6804
  if3231_else6803:
    null $P5008
    set $P5009, $P5008
  if3231_end6804:
    unless_null $P5009, vivi_32326805
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_32326805:
    unless_null $P5009, vivi_32336806
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32336806:
    set $P5004, $P5009
  fallback6802:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3124
    set fb_tmp_740, $P101
    repr_defined $I5002, fb_tmp_740
    unless $I5002 goto if3234_else6807 
    set $P5013, fb_tmp_740[0]
    set $P5015, $P5013
    goto if3234_end6808
  if3234_else6807:
    null $P5014
    set $P5015, $P5014
  if3234_end6808:
    unless_null $P5015, vivi_32356809
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5015, $P5016
  vivi_32356809:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3125
    set fb_tmp_741, $P101
    repr_defined $I5003, fb_tmp_741
    unless $I5003 goto if3236_else6810 
    set $P5019, fb_tmp_741[0]
    set $P5021, $P5019
    goto if3236_end6811
  if3236_else6810:
    null $P5020
    set $P5021, $P5020
  if3236_end6811:
    unless_null $P5021, vivi_32376812
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_32376812:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3127
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3128
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3129
    set fb_tmp_742, $P101
    repr_defined $I5004, fb_tmp_742
    unless $I5004 goto if3238_else6813 
    set $P5029, fb_tmp_742[0]
    set $P5031, $P5029
    goto if3238_end6814
  if3238_else6813:
    null $P5030
    set $P5031, $P5030
  if3238_end6814:
    unless_null $P5031, vivi_32396815
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5031, $P5032
  vivi_32396815:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3130
    set fb_tmp_743, $P101
    repr_defined $I5005, fb_tmp_743
    unless $I5005 goto if3240_else6816 
    set $P5035, fb_tmp_743[0]
    set $P5037, $P5035
    goto if3240_end6817
  if3240_else6816:
    null $P5036
    set $P5037, $P5036
  if3240_end6817:
    unless_null $P5037, vivi_32416818
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_32416818:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3131
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3132
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3134
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback6821
    nqp_get_sc_object $P5043, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_50, $P5042
    set fb_tmp_745, pkg_viv_tmp_50
    repr_defined $I5007, fb_tmp_745
    unless $I5007 goto if3243_else6822 
    set $P5044, fb_tmp_745["%LANG"]
    set $P5046, $P5044
    goto if3243_end6823
  if3243_else6822:
    null $P5045
    set $P5046, $P5045
  if3243_end6823:
    unless_null $P5046, vivi_32446824
    new $P5047, 'Hash'
    set pkg_viv_tmp_50["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32446824:
    unless_null $P5046, vivi_32456825
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32456825:
    set $P5041, $P5046
  fallback6821:
    set fb_tmp_744, $P5041
    repr_defined $I5006, fb_tmp_744
    unless $I5006 goto if3242_else6819 
    set $P5049, fb_tmp_744["Regex-actions"]
    set $P5051, $P5049
    goto if3242_end6820
  if3242_else6819:
    null $P5050
    set $P5051, $P5050
  if3242_end6820:
    unless_null $P5051, vivi_32466826
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5051, $P5052
  vivi_32466826:
    unless_null _lex_param_1, fallback6829
    nqp_get_sc_object $P5053, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5053
  fallback6829:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5008, fb_tmp_746
    unless $I5008 goto if3247_else6827 
    set $P5054, fb_tmp_746["p6regex"]
    set $P5056, $P5054
    goto if3247_end6828
  if3247_else6827:
    null $P5055
    set $P5056, $P5055
  if3247_end6828:
    unless_null $P5056, vivi_32486830
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5056, $P5057
  vivi_32486830:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3135
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3137
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3142
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_341_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    unless_null _lex_param_1, fallback6833
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6833:
    set fb_tmp_747, _lex_param_1
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3249_else6831 
    set $P5002, fb_tmp_747["variable"]
    set $P5004, $P5002
    goto if3249_end6832
  if3249_else6831:
    null $P5003
    set $P5004, $P5003
  if3249_end6832:
    unless_null $P5004, vivi_32506834
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32506834:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_342_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3146
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_748 
.annotate 'line', 3147
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3148
    unless_null _lex_param_1, fallback6837
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6837:
    set fb_tmp_748, _lex_param_1
    repr_defined $I5001, fb_tmp_748
    unless $I5001 goto if3251_else6835 
    set $P5003, fb_tmp_748["block"]
    set $P5005, $P5003
    goto if3251_end6836
  if3251_else6835:
    null $P5004
    set $P5005, $P5004
  if3251_end6836:
    unless_null $P5005, vivi_32526838
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_32526838:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_343_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3151
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_344_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3155
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_749 
    unless_null _lex_param_1, fallback6841
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6841:
    set fb_tmp_749, _lex_param_1
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if3253_else6839 
    set $P5002, fb_tmp_749["dotty"]
    set $P5004, $P5002
    goto if3253_end6840
  if3253_else6839:
    null $P5003
    set $P5004, $P5003
  if3253_end6840:
    unless_null $P5004, vivi_32546842
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32546842:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_345_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3157
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3158
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("call" :named("op"), "RETURN" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_346_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3161
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3162
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3163
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_347_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3170
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_348_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3171
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_349_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_350_1381944288.90674") :anon :lex :outer("cuid_427_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3175
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3280
    .const 'Sub' $P5014 = 'cuid_351_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_352_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_353_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_354_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_355_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_356_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_357_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_358_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_359_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_360_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1381944288.90674' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1381944288.90674' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_351_1381944288.90674' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_352_1381944288.90674' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_353_1381944288.90674' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_354_1381944288.90674' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_355_1381944288.90674' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_356_1381944288.90674' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_357_1381944288.90674' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_358_1381944288.90674' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_359_1381944288.90674' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_360_1381944288.90674' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_361_1381944288.90674' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_362_1381944288.90674' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_363_1381944288.90674' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_351_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3282
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_750 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3283
    unless_null _lex_param_1, fallback6845
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6845:
    set fb_tmp_750, _lex_param_1
    repr_defined $I5001, fb_tmp_750
    unless $I5001 goto if3255_else6843 
    set $P5003, fb_tmp_750["statement"]
    set $P5005, $P5003
    goto if3255_end6844
  if3255_else6843:
    null $P5004
    set $P5005, $P5004
  if3255_end6844:
    unless_null $P5005, vivi_32566846
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_32566846:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3284
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_352_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_751 
.annotate 'line', 3289
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    unless_null _lex_param_1, fallback6849
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6849:
    set fb_tmp_751, _lex_param_1
    repr_defined $I5001, fb_tmp_751
    unless $I5001 goto if3257_else6847 
    set $P5003, fb_tmp_751["codeblock"]
    set $P5005, $P5003
    goto if3257_end6848
  if3257_else6847:
    null $P5004
    set $P5005, $P5004
  if3257_end6848:
    unless_null $P5005, vivi_32586850
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_32586850:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_353_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3293
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
.annotate 'line', 3294
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
.annotate 'line', 3295
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3296
    unless_null _lex_param_1, fallback6853
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5005
  fallback6853:
    set fb_tmp_752, _lex_param_1
    repr_defined $I5001, fb_tmp_752
    unless $I5001 goto if3259_else6851 
    set $P5006, fb_tmp_752["var"]
    set $P5008, $P5006
    goto if3259_end6852
  if3259_else6851:
    null $P5007
    set $P5008, $P5007
  if3259_end6852:
    unless_null $P5008, vivi_32606854
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_32606854:
    $P5010 = $P5008."ast"()
.annotate 'line', 3297
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback6857
    nqp_get_sc_object $P5014, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5013, $P5014
    set fb_tmp_753, $P5013
    repr_defined $I5002, fb_tmp_753
    unless $I5002 goto if3262_else6858 
    set $P5015, fb_tmp_753["$SEQ"]
    set $P5017, $P5015
    goto if3262_end6859
  if3262_else6858:
    null $P5016
    set $P5017, $P5016
  if3262_end6859:
    unless_null $P5017, vivi_32636860
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_32636860:
    unless_null $P5017, vivi_32646861
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_32646861:
    set $P5012, $P5017
  fallback6857:
    unless $P5012 goto if3261_else6855 
    set $I5003, 1
    goto if3261_end6856
  if3261_else6855:
    set $I5003, 0
  if3261_end6856:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_354_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_754 
.annotate 'line', 3302
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
.annotate 'line', 3303
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3304
    unless_null _lex_param_1, fallback6864
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5005
  fallback6864:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5001, fb_tmp_754
    unless $I5001 goto if3265_else6862 
    set $P5006, fb_tmp_754["codeblock"]
    set $P5008, $P5006
    goto if3265_end6863
  if3265_else6862:
    null $P5007
    set $P5008, $P5007
  if3265_end6863:
    unless_null $P5008, vivi_32666865
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_32666865:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_355_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_755 
    .local pmc fb_tmp_756 
.annotate 'line', 3309
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    unless_null _lex_param_1, fallback6868
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5002
  fallback6868:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5001, fb_tmp_755
    unless $I5001 goto if3267_else6866 
    set $P5003, fb_tmp_755["codeblock"]
    set $P5005, $P5003
    goto if3267_end6867
  if3267_else6866:
    null $P5004
    set $P5005, $P5004
  if3267_end6867:
    unless_null $P5005, vivi_32686869
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_32686869:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback6872
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5008
  fallback6872:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5003, fb_tmp_756
    unless $I5003 goto if3269_else6870 
    set $P5009, fb_tmp_756["zw"]
    set $P5011, $P5009
    goto if3269_end6871
  if3269_else6870:
    null $P5010
    set $P5011, $P5010
  if3269_end6871:
    unless_null $P5011, vivi_32706873
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_32706873:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_356_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
.annotate 'line', 3315
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
.annotate 'line', 3316
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3317
    unless_null _lex_param_1, fallback6876
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5005
  fallback6876:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3271_else6874 
    set $P5006, fb_tmp_757["var"]
    set $P5008, $P5006
    goto if3271_end6875
  if3271_else6874:
    null $P5007
    set $P5008, $P5007
  if3271_end6875:
    unless_null $P5008, vivi_32726877
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_32726877:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_357_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3321
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
.annotate 'line', 3322
    unless_null _lex_param_1, fallback6880
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback6880:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3273_else6878 
    set $P5004, fb_tmp_758["block"]
    set $P5006, $P5004
    goto if3273_end6879
  if3273_else6878:
    null $P5005
    set $P5006, $P5005
  if3273_end6879:
    unless_null $P5006, vivi_32746881
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_32746881:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3323
    $P101."blocktype"("immediate")
.annotate 'line', 3325
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 98
.annotate 'line', 3326
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3328
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3329
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
.annotate 'line', 3330
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3337
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_358_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3340
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_507_1381944288.90674' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_508_1381944288.90674' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6884
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5003
  fallback6884:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3275_else6882 
    set $P5004, fb_tmp_759["longname"]
    set $P5006, $P5004
    goto if3275_end6883
  if3275_else6882:
    null $P5005
    set $P5006, $P5005
  if3275_end6883:
    unless_null $P5006, vivi_32766885
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_32766885:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback6890
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5009
  fallback6890:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5002, fb_tmp_760
    unless $I5002 goto if3278_else6888 
    set $P5010, fb_tmp_760["assertion"]
    set $P5012, $P5010
    goto if3278_end6889
  if3278_else6888:
    null $P5011
    set $P5012, $P5011
  if3278_end6889:
    unless_null $P5012, vivi_32796891
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5012, $P5013
  vivi_32796891:
    unless $P5012 goto if3277_else6886 
.annotate 'line', 3343
.annotate 'line', 3344
    unless_null _lex_param_1, fallback6896
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5014
  fallback6896:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5004, fb_tmp_762
    unless $I5004 goto if3281_else6894 
    set $P5015, fb_tmp_762["assertion"]
    set $P5017, $P5015
    goto if3281_end6895
  if3281_else6894:
    null $P5016
    set $P5017, $P5016
  if3281_end6895:
    unless_null $P5017, vivi_32826897
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5017, $P5018
  vivi_32826897:
    set fb_tmp_761, $P5017
    repr_defined $I5003, fb_tmp_761
    unless $I5003 goto if3280_else6892 
    set $P5019, fb_tmp_761[0]
    set $P5021, $P5019
    goto if3280_end6893
  if3280_else6892:
    null $P5020
    set $P5021, $P5020
  if3280_end6893:
    unless_null $P5021, vivi_32836898
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5021, $P5022
  vivi_32836898:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3345
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3277_end6887
  if3277_else6886:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3284_else6899 
    .const 'Sub' $P5026 = 'cuid_507_1381944288.90674' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3284_end6900
  if3284_else6899:
.annotate 'line', 3356
.annotate 'line', 3357
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
.annotate 'line', 3359
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 12
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 55
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback6915
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5034
  fallback6915:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5006, fb_tmp_765
    unless $I5006 goto if3292_else6913 
    set $P5035, fb_tmp_765["arglist"]
    set $P5037, $P5035
    goto if3292_end6914
  if3292_else6913:
    null $P5036
    set $P5037, $P5036
  if3292_end6914:
    unless_null $P5037, vivi_32936916
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5037, $P5038
  vivi_32936916:
    unless $P5037 goto if3291_else6911 
.annotate 'line', 3360
.annotate 'line', 3361
    unless_null _lex_param_1, fallback6921
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5042
  fallback6921:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5008, fb_tmp_767
    unless $I5008 goto if3295_else6919 
    set $P5043, fb_tmp_767["arglist"]
    set $P5045, $P5043
    goto if3295_end6920
  if3295_else6919:
    null $P5044
    set $P5045, $P5044
  if3295_end6920:
    unless_null $P5045, vivi_32966922
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5045, $P5046
  vivi_32966922:
    set fb_tmp_766, $P5045
    repr_defined $I5007, fb_tmp_766
    unless $I5007 goto if3294_else6917 
    set $P5047, fb_tmp_766[0]
    set $P5049, $P5047
    goto if3294_end6918
  if3294_else6917:
    null $P5048
    set $P5049, $P5048
  if3294_end6918:
    unless_null $P5049, vivi_32976923
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5049, $P5050
  vivi_32976923:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next6927:
    unless $P5041, for_done6929
    shift $P5054, $P5041
  for_redo6928:
    .const 'Sub' $P5053 = 'cuid_508_1381944288.90674' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next6927
  for_done6929:
    set $P5098, $P5039
    goto if3291_end6912
  if3291_else6911:
    unless_null _lex_param_1, fallback6934
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5055
  fallback6934:
    set fb_tmp_769, _lex_param_1
    repr_defined $I5009, fb_tmp_769
    unless $I5009 goto if3301_else6932 
    set $P5056, fb_tmp_769["nibbler"]
    set $P5058, $P5056
    goto if3301_end6933
  if3301_else6932:
    null $P5057
    set $P5058, $P5057
  if3301_end6933:
    unless_null $P5058, vivi_33026935
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5058, $P5059
  vivi_33026935:
    set $P5097, $P5058
    unless $P5058 goto if3300_end6931 
.annotate 'line', 3363
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3303_else6936 
.annotate 'line', 3365
    set fb_tmp_770, $P102
    repr_defined $I5011, fb_tmp_770
    unless $I5011 goto if3304_else6938 
    set $P5060, fb_tmp_770[0]
    set $P5062, $P5060
    goto if3304_end6939
  if3304_else6938:
    null $P5061
    set $P5062, $P5061
  if3304_end6939:
    unless_null $P5062, vivi_33056940
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5062, $P5063
  vivi_33056940:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback6945
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5066
  fallback6945:
    set fb_tmp_772, _lex_param_1
    repr_defined $I5013, fb_tmp_772
    unless $I5013 goto if3307_else6943 
    set $P5067, fb_tmp_772["nibbler"]
    set $P5069, $P5067
    goto if3307_end6944
  if3307_else6943:
    null $P5068
    set $P5069, $P5068
  if3307_end6944:
    unless_null $P5069, vivi_33086946
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5069, $P5070
  vivi_33086946:
    set fb_tmp_771, $P5069
    repr_defined $I5012, fb_tmp_771
    unless $I5012 goto if3306_else6941 
    set $P5071, fb_tmp_771[0]
    set $P5073, $P5071
    goto if3306_end6942
  if3306_else6941:
    null $P5072
    set $P5073, $P5072
  if3306_end6942:
    unless_null $P5073, vivi_33096947
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5073, $P5074
  vivi_33096947:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3303_end6937
  if3303_else6936:
.annotate 'line', 3366
    set fb_tmp_773, $P102
    repr_defined $I5014, fb_tmp_773
    unless $I5014 goto if3310_else6948 
    set $P5079, fb_tmp_773[0]
    set $P5081, $P5079
    goto if3310_end6949
  if3310_else6948:
    null $P5080
    set $P5081, $P5080
  if3310_end6949:
    unless_null $P5081, vivi_33116950
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5081, $P5082
  vivi_33116950:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback6955
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5084
  fallback6955:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5016, fb_tmp_775
    unless $I5016 goto if3313_else6953 
    set $P5085, fb_tmp_775["nibbler"]
    set $P5087, $P5085
    goto if3313_end6954
  if3313_else6953:
    null $P5086
    set $P5087, $P5086
  if3313_end6954:
    unless_null $P5087, vivi_33146956
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5087, $P5088
  vivi_33146956:
    set fb_tmp_774, $P5087
    repr_defined $I5015, fb_tmp_774
    unless $I5015 goto if3312_else6951 
    set $P5089, fb_tmp_774[0]
    set $P5091, $P5089
    goto if3312_end6952
  if3312_else6951:
    null $P5090
    set $P5091, $P5090
  if3312_end6952:
    unless_null $P5091, vivi_33156957
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5091, $P5092
  vivi_33156957:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3303_end6937:
    set $P5097, $P5096
  if3300_end6931:
    set $P5098, $P5097
  if3291_end6912:
    set $P5099, $P5098
  if3284_end6900:
  if3277_end6887:
.annotate 'line', 3369
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1381944288.90674") :anon :lex :outer("cuid_358_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3347
    .lex "$fullrxname", $S101 
    .lex "$loc", $I101 
    .lex "$rxname", $S102 
    .local pmc fb_tmp_763 
    .local pmc fb_tmp_764 
    .local pmc pkg_viv_tmp_51 
    set $S101, ""
    set $I101, 0
    set $S102, ""
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback6903
    nqp_get_sc_object $P5003, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_51, $P5002
    set fb_tmp_764, pkg_viv_tmp_51
    repr_defined $I5002, fb_tmp_764
    unless $I5002 goto if3286_else6904 
    set $P5004, fb_tmp_764["%RX"]
    set $P5006, $P5004
    goto if3286_end6905
  if3286_else6904:
    null $P5005
    set $P5006, $P5005
  if3286_end6905:
    unless_null $P5006, vivi_32876906
    new $P5007, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5007
    set $P5006, $P5007
  vivi_32876906:
    unless_null $P5006, vivi_32886907
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_32886907:
    set $P5001, $P5006
  fallback6903:
    set fb_tmp_763, $P5001
    repr_defined $I5001, fb_tmp_763
    unless $I5001 goto if3285_else6901 
    set $P5009, fb_tmp_763["name"]
    set $P5011, $P5009
    goto if3285_end6902
  if3285_else6901:
    null $P5010
    set $P5011, $P5010
  if3285_end6902:
    unless_null $P5011, vivi_32896908
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5011, $P5012
  vivi_32896908:
    set $S5001, $P5011
    set $S101, $S5001
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if3290_end6910 
    index $I5005, $S101, utf8:":sym\x{ab}", 0
    set $I101, $I5005
  if3290_end6910:
    add $I5006, $I101, 5
    length $I5009, $S101
    sub $I5008, $I5009, $I101
    sub $I5007, $I5008, 6
    substr $S5002, $S101, $I5006, $I5007
    set $S102, $S5002
.annotate 'line', 3353
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    find_lex $P5014, "$/"
.annotate 'line', 3354
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 34
    find_lex $P5016, "$/"
    $P5017 = $P5015."new"($S102, "literal" :named("rxtype"), $P5016 :named("node"))
    $P5018 = $P5013."new"($P5017, "sym" :named("name"), "subcapture" :named("rxtype"), $P5014 :named("node"))
    store_lex "$qast", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1381944288.90674") :anon :lex :outer("cuid_358_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3361
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_768 
    find_lex $P5001, "$qast"
    set fb_tmp_768, $P5001
    repr_defined $I5001, fb_tmp_768
    unless $I5001 goto if3298_else6924 
    set $P5002, fb_tmp_768[0]
    set $P5004, $P5002
    goto if3298_end6925
  if3298_else6924:
    null $P5003
    set $P5004, $P5003
  if3298_end6925:
    unless_null $P5004, vivi_32996926
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_32996926:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_359_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3372
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_776 
.annotate 'line', 3373
    unless_null _lex_param_1, fallback6960
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_1, $P5001
  fallback6960:
    set fb_tmp_776, _lex_param_1
    repr_defined $I5001, fb_tmp_776
    unless $I5001 goto if3316_else6958 
    set $P5002, fb_tmp_776["quote_EXPR"]
    set $P5004, $P5002
    goto if3316_end6959
  if3316_else6958:
    null $P5003
    set $P5004, $P5003
  if3316_end6959:
    unless_null $P5004, vivi_33176961
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5004, $P5005
  vivi_33176961:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_360_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3376
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc pkg_viv_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3377
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6962
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5003, $P5004
    set fb_tmp_777, $P5003
    repr_defined $I5001, fb_tmp_777
    unless $I5001 goto if3318_else6963 
    set $P5005, fb_tmp_777["$W"]
    set $P5007, $P5005
    goto if3318_end6964
  if3318_else6963:
    null $P5006
    set $P5007, $P5006
  if3318_end6964:
    unless_null $P5007, vivi_33196965
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_33196965:
    unless_null $P5007, vivi_33206966
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33206966:
    set $P5002, $P5007
  fallback6962:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback6969
    nqp_get_sc_object $P5013, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_52, $P5012
    set fb_tmp_778, pkg_viv_tmp_52
    repr_defined $I5003, fb_tmp_778
    unless $I5003 goto if3322_else6970 
    set $P5014, fb_tmp_778["%RX"]
    set $P5016, $P5014
    goto if3322_end6971
  if3322_else6970:
    null $P5015
    set $P5016, $P5015
  if3322_end6971:
    unless_null $P5016, vivi_33236972
    new $P5017, 'Hash'
    set pkg_viv_tmp_52["%RX"], $P5017
    set $P5016, $P5017
  vivi_33236972:
    unless_null $P5016, vivi_33246973
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33246973:
    set $P5011, $P5016
  fallback6969:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3321_end6968 
.annotate 'line', 3378
.annotate 'line', 3379
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback6976
    nqp_get_sc_object $P5021, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_53, $P5020
    set fb_tmp_780, pkg_viv_tmp_53
    repr_defined $I5005, fb_tmp_780
    unless $I5005 goto if3326_else6977 
    set $P5022, fb_tmp_780["%RX"]
    set $P5024, $P5022
    goto if3326_end6978
  if3326_else6977:
    null $P5023
    set $P5024, $P5023
  if3326_end6978:
    unless_null $P5024, vivi_33276979
    new $P5025, 'Hash'
    set pkg_viv_tmp_53["%RX"], $P5025
    set $P5024, $P5025
  vivi_33276979:
    unless_null $P5024, vivi_33286980
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33286980:
    set $P5019, $P5024
  fallback6976:
    set fb_tmp_779, $P5019
    repr_defined $I5004, fb_tmp_779
    unless $I5004 goto if3325_else6974 
    set $P5027, fb_tmp_779["code"]
    set $P5029, $P5027
    goto if3325_end6975
  if3325_else6974:
    null $P5028
    set $P5029, $P5028
  if3325_end6975:
    unless_null $P5029, vivi_33296981
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5029, $P5030
  vivi_33296981:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3321_end6968:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_361_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3384
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3385
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_362_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3388
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3389
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_363_1381944288.90674") :anon :lex :outer("cuid_506_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3392
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_509_1381944288.90674' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next6982:
    unless $P5004, for_done6984
    shift $P5006, $P5004
  for_redo6983:
    .const 'Sub' $P5005 = 'cuid_509_1381944288.90674' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next6982
  for_done6984:
.annotate 'line', 3397
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1381944288.90674") :anon :lex :outer("cuid_363_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3394
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3395
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3402
    .const 'Sub' $P5008 = 'cuid_364_1381944288.90674' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_365_1381944288.90674' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_366_1381944288.90674' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_367_1381944288.90674' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_368_1381944288.90674' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_369_1381944288.90674' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_370_1381944288.90674' 
    capture_lex $P5008 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_364_1381944288.90674' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_365_1381944288.90674' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_366_1381944288.90674' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_367_1381944288.90674' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_368_1381944288.90674' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_369_1381944288.90674' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_370_1381944288.90674' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_364_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3405
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$ast", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_781 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    new $P5003, 'ResizablePMCArray'
    set fb_tmp_781, _lex_param_1
    repr_defined $I5001, fb_tmp_781
    unless $I5001 goto if3330_else6985 
    set $P5004, fb_tmp_781[0]
    set $P5006, $P5004
    goto if3330_end6986
  if3330_else6985:
    null $P5005
    set $P5006, $P5005
  if3330_end6986:
    unless_null $P5006, vivi_33316987
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5006, $P5007
  vivi_33316987:
    push $P5003, $P5006
    repr_bind_attr_obj $P5001, $P5002, "@!block_stack", 0, $P5003
.annotate 'line', 3407
    nqp_decontainerize $P5008, _lex_param_0
    $P5008."visit_children"(_lex_param_1)
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_block" :subid("cuid_365_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3411
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
.annotate 'line', 3412
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    $P5003."push"(_lex_param_1)
.annotate 'line', 3414
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 3416
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!block_stack", 0
    $P5007."pop"()
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "find_lex" :subid("cuid_366_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3421
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_511_1381944288.90674' 
    capture_lex $P5009 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    set $I101, 0
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_6988
    .lex "RETURN", $P101
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    set $N5001, $P5003
    set $I5001, $N5001
    set $I101, $I5001
  while3332_test6990:
    set $N5002, $I101
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5007, $I5002
    set $P5006, $P5007
    unless $I5002 goto while3332_done6994 
  while3332_redo6992:
    .const 'Sub' $P5004 = 'cuid_511_1381944288.90674' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5006, $P5005
    goto while3332_test6990 
  while3332_done6994:
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    goto lexotic_6989
  lexotic_6988:
    .get_results ($P5008)
  lexotic_6989:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1381944288.90674") :anon :lex :outer("cuid_366_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3423
    .lex "%sym", $P101 
    .local pmc fb_tmp_782 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $I5002, "$i"
    sub $I5001, $I5002, 1
    store_lex "$i", $I5001
.annotate 'line', 3425
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    repr_get_attr_obj $P5005, $P5002, $P5004, "@!block_stack", 0
    set fb_tmp_782, $P5005
    repr_defined $I5003, fb_tmp_782
    unless $I5003 goto if3333_else6995 
    find_lex $I5004, "$i"
    set $P5006, fb_tmp_782[$I5004]
    set $P5008, $P5006
    goto if3333_end6996
  if3333_else6995:
    null $P5007
    set $P5008, $P5007
  if3333_end6996:
    unless_null $P5008, vivi_33346997
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5008, $P5009
  vivi_33346997:
    find_lex $P5010, "$name"
    $P5011 = $P5008."symbol"($P5010)
    set $P101, $P5011
    set $N5001, $P101
    box $P5014, $N5001
    set $P5013, $P5014
    unless $N5001 goto if3335_end6999 
.annotate 'line', 3426
    $P5012 = "RETURN"($P101)
    set $P5013, $P5012
  if3335_end6999:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_367_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3433
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "%sym", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_783 
    new $P5001, 'Hash'
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_7000
    .lex "RETURN", $P102
.annotate 'line', 3434
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."find_lex"(_lex_param_1)
    set $P101, $P5003
    get_id $I5003, $P101
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    get_id $I5004, $P5004
    iseq $I5002, $I5003, $I5004
    not $I5001, $I5002
    set $I5006, $I5001
    unless $I5001 goto if3337_end7005 
    exists $I5005, $P101["value"]
    set $I5006, $I5005
  if3337_end7005:
    unless $I5006 goto if3336_else7002 
.annotate 'line', 3435
    set fb_tmp_783, $P101
    repr_defined $I5007, fb_tmp_783
    unless $I5007 goto if3338_else7006 
    set $P5005, fb_tmp_783["value"]
    set $P5007, $P5005
    goto if3338_end7007
  if3338_else7006:
    null $P5006
    set $P5007, $P5006
  if3338_end7007:
    unless_null $P5007, vivi_33397008
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_33397008:
    $P5009 = "RETURN"($P5007)
    set $P5011, $P5009
    goto if3336_end7003
  if3336_else7002:
.annotate 'line', 3438
    set $S5002, _lex_param_1
    concat $S5001, "No compile-time value for ", $S5002
    box $P5010, $S5001
    die $P5010
    set $P5011, $P5010
  if3336_end7003:
    goto lexotic_7001
  lexotic_7000:
    .get_results ($P5011)
  lexotic_7001:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "visit_op" :subid("cuid_368_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3443
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_513_1381944288.90674' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_516_1381944288.90674' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_517_1381944288.90674' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_518_1381944288.90674' 
    capture_lex $P5043 
    .lex "&returns_int", $P101 
    .lex "$typeinfo", $P102 
    .lex "$asm", $P103 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_787 
    .const 'Sub' $P5001 = 'cuid_513_1381944288.90674' 
    capture_lex $P5001
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_7038
    .lex "RETURN", $P104
.annotate 'line', 3467
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 3469
    $P5005 = _lex_param_1."op"()
    set $S5001, $P5005
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if3354_else7040 
.annotate 'line', 3470
    $P5006 = _lex_param_1."op"()
    set $S5003, $P5006
    $P5007 = _lex_param_1."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if3354_end7041
  if3354_else7040:
    set $S5005, ""
  if3354_end7041:
    box $P5008, $S5005
    set $P102, $P5008
.annotate 'line', 3472
    $P5009 = _lex_param_1."op"()
    set $S5007, $P5009
    substr $S5006, $S5007, 0, 3
    box $P5010, $S5006
    set $P103, $P5010
    new $P5041, 'ExceptionHandler'
    set_label $P5041, catch_handler_33797083
    $P5041.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5041
.annotate 'line', 3474
    new $P5039, 'ExceptionHandler'
    set_label $P5039, catch_handler_33777081
    $P5039.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5039
    set $S5008, $P102
    iseq $I5005, $S5008, "_n"
    set $I5011, $I5005
    unless $I5005 goto if3356_end7045 
    set $S5009, $P103
    iseq $I5006, $S5009, "add"
    set $I5008, $I5006
    if $I5006 goto unless3358_end7049 
    set $S5010, $P103
    iseq $I5007, $S5010, "sub"
    set $I5008, $I5007
  unless3358_end7049:
    set $I5010, $I5008
    if $I5008 goto unless3357_end7047 
    set $S5011, $P103
    iseq $I5009, $S5011, "mul"
    set $I5010, $I5009
  unless3357_end7047:
    set $I5011, $I5010
  if3356_end7045:
    unless $I5011 goto if3355_else7042 
    .const 'Sub' $P5011 = 'cuid_516_1381944288.90674' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if3355_end7043
  if3355_else7042:
    set $S5012, $P102
    iseq $I5012, $S5012, "_i"
    unless $I5012 goto if3365_else7060 
.annotate 'line', 3484
.annotate 'line', 3485
    nqp_decontainerize $P5013, _lex_param_0
    $P5014 = $P5013."find_sym"("num")
    $P5015 = _lex_param_1."returns"($P5014)
    set $P5037, $P5015
    goto if3365_end7061
  if3365_else7060:
    set $S5013, $P102
    iseq $I5013, $S5013, "_s"
    unless $I5013 goto if3366_else7062 
.annotate 'line', 3486
.annotate 'line', 3487
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5016."find_sym"("str")
    $P5018 = _lex_param_1."returns"($P5017)
    set $P5036, $P5018
    goto if3366_end7063
  if3366_else7062:
.annotate 'line', 3488
    $P5019 = _lex_param_1."op"()
    set $S5014, $P5019
    iseq $I5014, $S5014, "handle"
    unless $I5014 goto if3367_else7064 
.annotate 'line', 3489
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."visit_handle"(_lex_param_1)
    $P5022 = "RETURN"($P5021)
    set $P5035, $P5022
    goto if3367_end7065
  if3367_else7064:
.annotate 'line', 3490
    $P5023 = _lex_param_1."op"()
    set $S5015, $P5023
    iseq $I5015, $S5015, "numify"
    box $P5034, $I5015
    set $P5033, $P5034
    unless $I5015 goto if3368_end7067 
    set fb_tmp_787, _lex_param_1
    repr_defined $I5017, fb_tmp_787
    unless $I5017 goto if3370_else7070 
    set $P5024, fb_tmp_787[0]
    set $P5026, $P5024
    goto if3370_end7071
  if3370_else7070:
    null $P5025
    set $P5026, $P5025
  if3370_end7071:
    unless_null $P5026, vivi_33717072
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5026, $P5027
  vivi_33717072:
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5016, $P5026, $P5028
    box $P5032, $I5016
    set $P5031, $P5032
    unless $I5016 goto if3369_end7069 
    .const 'Sub' $P5029 = 'cuid_517_1381944288.90674' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5031, $P5030
  if3369_end7069:
    set $P5033, $P5031
  if3368_end7067:
    set $P5035, $P5033
  if3367_end7065:
    set $P5036, $P5035
  if3366_end7063:
    set $P5037, $P5036
  if3365_end7061:
  if3355_end7043:
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5040, $P5038
    pop_eh 
    goto skip_handler_33767080
  catch_handler_33777081:
    .get_results ($P5039) 
    .const 'Sub' $P10001 = 'cuid_518_1381944288.90674' 
    capture_lex $P10001
    $P10001($P5039)
    set $I10001, 1
    set $P5039["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5039
    pop_upto_eh $P5039
    pop_eh 
    set $P5040, $P10002
    goto skip_handler_33767080
  skip_handler_33767080:
    set $P5042, $P5040
    pop_eh 
    goto skip_handler_33787082
  catch_handler_33797083:
    .get_results ($P5041) 
    set $I10001, 1
    set $P5041["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    finalize $P5041
    pop_upto_eh $P5041
    pop_eh 
    set $P5042, $P10001
    goto skip_handler_33787082
  skip_handler_33787082:
    goto lexotic_7039
  lexotic_7038:
    .get_results (_lex_param_1)
  lexotic_7039:
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "returns_int" :subid("cuid_513_1381944288.90674") :anon :lex :outer("cuid_368_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3444
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_512_1381944288.90674' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_514_1381944288.90674' 
    capture_lex $P5016 
    .lex "$node", _lex_param_0 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_7009
    .lex "RETURN", $P101
.annotate 'line', 3445
    $P5001 = _lex_param_0."returns"()
    repr_get_primitive_type_spec $I5002, $P5001
    set $N5001, $I5002
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if3340_end7012 
    $P5002 = "RETURN"(1)
  if3340_end7012:
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    type_check $I5003, _lex_param_0, $P5003
    unless $I5003 goto if3341_else7013 
    .const 'Sub' $P5004 = 'cuid_512_1381944288.90674' 
    capture_lex $P5004
    $P5005 = $P5004()
    goto if3341_end7014
  if3341_else7013:
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 43
    type_check $I5004, _lex_param_0, $P5006
    unless $I5004 goto if3347_else7025 
.annotate 'line', 3457
    $P5007 = "RETURN"(1)
    set $P5014, $P5007
    goto if3347_end7026
  if3347_else7025:
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 74
    type_check $I5005, _lex_param_0, $P5008
    set $I5007, $I5005
    unless $I5005 goto if3349_end7030 
.annotate 'line', 3459
    $P5009 = _lex_param_0."scope"()
    set $S5001, $P5009
    iseq $I5006, $S5001, "lexical"
    set $I5007, $I5006
  if3349_end7030:
    box $P5013, $I5007
    set $P5012, $P5013
    unless $I5007 goto if3348_end7028 
    .const 'Sub' $P5010 = 'cuid_514_1381944288.90674' 
    capture_lex $P5010
    $P5011 = $P5010()
    set $P5012, $P5011
  if3348_end7028:
    set $P5014, $P5012
  if3347_end7026:
  if3341_end7014:
    $P5015 = "RETURN"(0)
    goto lexotic_7010
  lexotic_7009:
    .get_results ($P5015)
  lexotic_7010:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1381944288.90674") :anon :lex :outer("cuid_513_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3448
    .lex "$typeinfo", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3449
    find_lex $P5002, "$node"
    $P5003 = $P5002."op"()
    set $S5001, $P5003
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if3342_else7015 
.annotate 'line', 3450
    find_lex $P5004, "$node"
    $P5005 = $P5004."op"()
    set $S5003, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if3342_end7016
  if3342_else7015:
    set $S5005, ""
  if3342_end7016:
    box $P5008, $S5005
    set $P101, $P5008
    set $S5006, $P101
    iseq $I5005, $S5006, "_i"
    unless $I5005 goto if3343_else7017 
.annotate 'line', 3452
    $P5009 = "RETURN"(1)
    set $P5019, $P5009
    goto if3343_end7018
  if3343_else7017:
.annotate 'line', 3454
    find_lex $P5010, "$node"
    $P5011 = $P5010."op"()
    set $S5007, $P5011
    iseq $I5006, $S5007, "chars"
    set $I5008, $I5006
    if $I5006 goto unless3346_end7024 
    find_lex $P5012, "$node"
    $P5013 = $P5012."op"()
    set $S5008, $P5013
    iseq $I5007, $S5008, "ord"
    set $I5008, $I5007
  unless3346_end7024:
    set $I5010, $I5008
    if $I5008 goto unless3345_end7022 
    find_lex $P5014, "$node"
    $P5015 = $P5014."op"()
    set $S5009, $P5015
    iseq $I5009, $S5009, "elems"
    set $I5010, $I5009
  unless3345_end7022:
    box $P5018, $I5010
    set $P5017, $P5018
    unless $I5010 goto if3344_end7020 
    $P5016 = "RETURN"(1)
    set $P5017, $P5016
  if3344_end7020:
    set $P5019, $P5017
  if3343_end7018:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_514_1381944288.90674") :anon :lex :outer("cuid_513_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3459
    .lex "%sym", $P101 
    .local pmc fb_tmp_784 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3460
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."find_lex"($P5005)
    set $P101, $P5006
    exists $I5001, $P101["type"]
    set $I5005, $I5001
    unless $I5001 goto if3351_end7034 
    set fb_tmp_784, $P101
    repr_defined $I5004, fb_tmp_784
    unless $I5004 goto if3352_else7035 
    set $P5007, fb_tmp_784["type"]
    set $P5009, $P5007
    goto if3352_end7036
  if3352_else7035:
    null $P5008
    set $P5009, $P5008
  if3352_end7036:
    unless_null $P5009, vivi_33537037
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5009, $P5010
  vivi_33537037:
    repr_get_primitive_type_spec $I5003, $P5009
    set $N5001, $I5003
    set $N5002, 1
    iseq $I5002, $N5001, $N5002
    set $I5005, $I5002
  if3351_end7034:
    box $P5013, $I5005
    set $P5012, $P5013
    unless $I5005 goto if3350_end7032 
.annotate 'line', 3461
    $P5011 = "RETURN"(1)
    set $P5012, $P5011
  if3350_end7032:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_516_1381944288.90674") :anon :lex :outer("cuid_368_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3475
    .const 'Sub' $P5025 = 'cuid_515_1381944288.90674' 
    capture_lex $P5025 
    .lex "$newopn", $P101 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 3477
    find_lex $P5004, "$op"
    set fb_tmp_785, $P5004
    repr_defined $I5001, fb_tmp_785
    unless $I5001 goto if3361_else7054 
    set $P5005, fb_tmp_785[0]
    set $P5007, $P5005
    goto if3361_end7055
  if3361_else7054:
    null $P5006
    set $P5007, $P5006
  if3361_end7055:
    unless_null $P5007, vivi_33627056
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5007, $P5008
  vivi_33627056:
    $P5009 = "&returns_int"($P5007)
    set $P5016, $P5009
    unless $P5009 goto if3360_end7053 
    find_lex $P5010, "$op"
    set fb_tmp_786, $P5010
    repr_defined $I5002, fb_tmp_786
    unless $I5002 goto if3363_else7057 
    set $P5011, fb_tmp_786[1]
    set $P5013, $P5011
    goto if3363_end7058
  if3363_else7057:
    null $P5012
    set $P5013, $P5012
  if3363_end7058:
    unless_null $P5013, vivi_33647059
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5013, $P5014
  vivi_33647059:
    $P5015 = "&returns_int"($P5013)
    set $P5016, $P5015
  if3360_end7053:
    unless $P5016 goto if3359_else7050 
    .const 'Sub' $P5017 = 'cuid_515_1381944288.90674' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5024, $P5018
    goto if3359_end7051
  if3359_else7050:
.annotate 'line', 3481
.annotate 'line', 3482
    find_lex $P5019, "$op"
    find_lex $P5021, "self"
    nqp_decontainerize $P5020, $P5021
    $P5022 = $P5020."find_sym"("num")
    $P5023 = $P5019."returns"($P5022)
    set $P5024, $P5023
  if3359_end7051:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_515_1381944288.90674") :anon :lex :outer("cuid_516_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3477
    .lex "$newopn", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 3479
    find_lex $P5004, "$op"
    $P5004."op"($P101)
.annotate 'line', 3480
    find_lex $P5005, "$op"
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    $P5008 = $P5006."find_sym"("int")
    $P5009 = $P5005."returns"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_517_1381944288.90674") :anon :lex :outer("cuid_368_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3493
    .lex "$sigil", $P101 
    .local pmc fb_tmp_788 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
.annotate 'line', 3494
    find_lex $P5002, "$op"
    set fb_tmp_788, $P5002
    repr_defined $I5001, fb_tmp_788
    unless $I5001 goto if3372_else7073 
    set $P5003, fb_tmp_788[0]
    set $P5005, $P5003
    goto if3372_end7074
  if3372_else7073:
    null $P5004
    set $P5005, $P5004
  if3372_end7074:
    unless_null $P5005, vivi_33737075
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_33737075:
    $P5007 = $P5005."name"()
    set $S5002, $P5007
    substr $S5001, $S5002, 0, 1
    box $P5008, $S5001
    set $P101, $P5008
    set $S5003, $P101
    iseq $I5002, $S5003, "@"
    set $I5004, $I5002
    if $I5002 goto unless3375_end7079 
    set $S5004, $P101
    iseq $I5003, $S5004, "%"
    set $I5004, $I5003
  unless3375_end7079:
    box $P5015, $I5004
    set $P5014, $P5015
    unless $I5004 goto if3374_end7077 
.annotate 'line', 3495
.annotate 'line', 3496
    find_lex $P5009, "$op"
    find_lex $P5011, "self"
    nqp_decontainerize $P5010, $P5011
    $P5012 = $P5010."find_sym"("int")
    $P5013 = $P5009."returns"($P5012)
    set $P5014, $P5013
  if3374_end7077:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_518_1381944288.90674") :anon :lex :outer("cuid_368_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3500
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "visit_handle" :subid("cuid_369_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3507
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$handle", _lex_param_1 
.annotate 'line', 3508
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."visit_children"(_lex_param_1, 1 :named("skip_selectors"))
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_children" :subid("cuid_370_1381944288.90674") :anon :lex :outer("cuid_510_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3512
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("skip_selectors") :optional 
    .param int haz_param_7 :opt_flag 
    .const 'Sub' $P5007 = 'cuid_519_1381944288.90674' 
    capture_lex $P5007 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$skip_selectors", _lex_param_2 
    if haz_param_7, default7104
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set _lex_param_2, $P5006
  default7104:
    set $I101, 0
    set $I101, 0
    nqp_isstr $I5001, _lex_param_1
    set $I5005, $I5001
    if $I5001 goto unless3380_end7085 
.annotate 'line', 3514
  while3381_test7086:
    set $N5001, $I101
    $P5001 = _lex_param_1."list"()
    set $N5002, $P5001
    islt $I5002, $N5001, $N5002
    set $I5004, $I5002
    unless $I5002 goto while3381_done7090 
  while3381_redo7088:
.annotate 'line', 3515
    set $P5002, _lex_param_2
    unless _lex_param_2 goto if3383_end7094 
    set $N5004, $I101
    set $N5005, 2
    mod $N5003, $N5004, $N5005
    box $P5003, $N5003
    set $P5002, $P5003
  if3383_end7094:
    if $P5002 goto unless3382_end7092 
    .const 'Sub' $P5004 = 'cuid_519_1381944288.90674' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless3382_end7092:
    add $I5003, $I101, 1
    set $I101, $I5003
    set $I5004, $I101
    goto while3381_test7086 
  while3381_done7090:
    set $I5005, $I5004
  unless3380_end7085:
    .return ($I5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_519_1381944288.90674") :anon :lex :outer("cuid_370_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3516
    .lex "$visit", $P101 
    .local pmc fb_tmp_789 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P101, $P5001
    find_lex $P5002, "$node"
    set fb_tmp_789, $P5002
    repr_defined $I5001, fb_tmp_789
    unless $I5001 goto if3384_else7095 
    find_lex $I5002, "$i"
    set $P5003, fb_tmp_789[$I5002]
    set $P5005, $P5003
    goto if3384_end7096
  if3384_else7095:
    null $P5004
    set $P5005, $P5004
  if3384_end7096:
    unless_null $P5005, vivi_33857097
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5005, $P5006
  vivi_33857097:
    set $P101, $P5005
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 86
    type_check $I5003, $P101, $P5007
    unless $I5003 goto if3386_else7098 
.annotate 'line', 3518
    find_lex $P5008, "$node"
    find_lex $I5004, "$i"
.annotate 'line', 3519
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    $P5011 = $P5009."visit_op"($P101)
    set $P5008[$I5004], $P5011
    set $P5026, $P5011
    goto if3386_end7099
  if3386_else7098:
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 108
    type_check $I5005, $P101, $P5012
    unless $I5005 goto if3387_else7100 
.annotate 'line', 3520
    find_lex $P5013, "$node"
    find_lex $I5006, "$i"
.annotate 'line', 3521
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    $P5016 = $P5014."visit_block"($P101)
    set $P5013[$I5006], $P5016
    set $P5025, $P5016
    goto if3387_end7101
  if3387_else7100:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163", 69
    type_check $I5007, $P101, $P5017
    unless $I5007 goto if3388_else7102 
.annotate 'line', 3522
.annotate 'line', 3523
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    $P5020 = $P5018."visit_children"($P101, 1 :named("skip_selectors"))
    set $P5024, $P5020
    goto if3388_end7103
  if3388_else7102:
.annotate 'line', 3524
.annotate 'line', 3525
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."visit_children"($P101)
    set $P5024, $P5023
  if3388_end7103:
    set $P5025, $P5024
  if3387_end7101:
    set $P5026, $P5025
  if3386_end7099:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_520_1381944288.90674") :anon :lex :outer("cuid_372_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3537
    .const 'Sub' $P5002 = 'cuid_371_1381944288.90674' 
    capture_lex $P5002 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_371_1381944288.90674' 
    capture_lex $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_371_1381944288.90674") :anon :lex :outer("cuid_520_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3538
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_790 
    set fb_tmp_790, _lex_param_2
    repr_defined $I5002, fb_tmp_790
    unless $I5002 goto if3390_else7107 
    set $P5001, fb_tmp_790["optimize"]
    set $P5003, $P5001
    goto if3390_end7108
  if3390_else7107:
    null $P5002
    set $P5003, $P5002
  if3390_end7108:
    unless_null $P5003, vivi_33917109
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771", 26
    set $P5003, $P5004
  vivi_33917109:
    set $S5001, $P5003
    iseq $I5001, $S5001, "off"
    unless $I5001 goto if3389_else7105 
    set $P5008, _lex_param_1
    goto if3389_end7106
  if3389_else7105:
.annotate 'line', 3541
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    $P5006 = $P5005."new"()
    $P5007 = $P5006."optimize"(_lex_param_1, _lex_param_2 :flat :named)
    set $P5008, $P5007
  if3389_end7106:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_522_1381944288.90674") :load :init
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = 'cuid_521_1381944288.90674' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_372_1381944288.90674" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    nqp_create_sc $P5001, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src/stage2/gen/NQP.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381944245.06863"
    push $P5004, "src/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381944239.89771"
    push $P5004, "src/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "20A8B78604B6E989C5DC1D669DAFFA35168CF57C-1381944251.32103"
    push $P5004, "src/stage2/gen/NQPHLL.nqp"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_fail"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "term:sym<name>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "5D8A0D0FBDA2B081F5DDEAF8492A748F124D5C36-1381944282.38409"
    push $P5004, "src/stage2/gen/NQPP6QRegex.nqp"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<unsp>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "cclass_backslash"
    push $P5004, "cclass_backslash:sym<s>"
    push $P5004, "cclass_backslash:sym<b>"
    push $P5004, "cclass_backslash:sym<e>"
    push $P5004, "cclass_backslash:sym<f>"
    push $P5004, "cclass_backslash:sym<h>"
    push $P5004, "cclass_backslash:sym<r>"
    push $P5004, "cclass_backslash:sym<t>"
    push $P5004, "cclass_backslash:sym<v>"
    push $P5004, "cclass_backslash:sym<o>"
    push $P5004, "cclass_backslash:sym<x>"
    push $P5004, "cclass_backslash:sym<c>"
    push $P5004, "cclass_backslash:sym<any>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "optimize"
    push $P5004, "visit_block"
    push $P5004, "find_lex"
    push $P5004, "visit_op"
    push $P5004, "visit_handle"
    push $P5004, "visit_children"
    push $P5004, "@!block_stack"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "recursion_limit"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, "-'"
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1381944290.58188"
    push $P5004, "alt_nfa__2_1381944290.60375"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1381944290.6286"
    push $P5004, "alt_nfa__3_1381944290.61693"
    push $P5004, "alt_nfa__6_1381944290.73409"
    push $P5004, "alt_nfa__5_1381944290.71882"
    push $P5004, "alt_nfa__7_1381944290.84371"
    push $P5004, "alt_nfa__9_1381944290.86933"
    push $P5004, "])}"
    push $P5004, "alt_nfa__8_1381944290.85124"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1381944290.99727"
    push $P5004, "alt_nfa__11_1381944291.00452"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1381944291.1296"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1381944291.15743"
    push $P5004, "alt_nfa__14_1381944291.15792"
    push $P5004, "alt_nfa__15_1381944291.15817"
    push $P5004, "alt_nfa__16_1381944291.22086"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1381944291.30486"
    push $P5004, "alt_nfa__18_1381944291.31562"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1381944291.39381"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1381944291.41946"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1381944291.8693"
    push $P5004, "alt_nfa__22_1381944291.88698"
    push $P5004, "alt_nfa__23_1381944291.94819"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1381944291.99303"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1381944292.09072"
    push $P5004, "alt_nfa__25_1381944292.08371"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1381944292.12325"
    push $P5004, "alt_nfa__28_1381944292.12355"
    push $P5004, "alt_nfa__29_1381944292.1239"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1381944292.1366"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1381944292.3741"
    push $P5004, "alt_nfa__32_1381944292.37501"
    push $P5004, "alt_nfa__33_1381944292.37568"
    push $P5004, "'\""
    push $P5004, "alt_nfa__34_1381944292.4037"
    push $P5004, "alt_nfa__35_1381944292.40404"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1381944292.49663"
    push $P5004, "alt_nfa__37_1381944292.50832"
    push $P5004, "sign"
    push $P5004, "+-"
    push $P5004, "alt_nfa__38_1381944292.52078"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "("
    push $P5004, "$"
    push $P5004, "\\"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1381944293.37496"
    push $P5004, "alt_nfa__40_1381944293.39969"
    push $P5004, "alt_nfa__41_1381944293.41186"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1381944293.44806"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "82C8134F4F1F98F3955D960634CCE916B8CF0355-1381944235.00084"
    push $P5004, "src/stage2/gen/nqp-mo.nqp"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1381944251.58394"
    push $P5004, "alt_nfa__2_1381944251.62596"
    push $P5004, "alt_nfa__3_1381944251.71916"
    push $P5004, "alt_nfa__4_1381944251.71989"
    push $P5004, "alt_nfa__5_1381944251.74759"
    push $P5004, "alt_nfa__6_1381944251.84699"
    push $P5004, "alt_nfa__7_1381944251.8644"
    push $P5004, "alt_nfa__8_1381944252.01162"
    push $P5004, "alt_nfa__9_1381944252.05968"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1381944282.56001"
    push $P5004, "alt_nfa__2_1381944282.59549"
    push $P5004, "alt_nfa__3_1381944282.70369"
    push $P5004, "alt_nfa__4_1381944282.72645"
    push $P5004, "alt_nfa__5_1381944282.82197"
    push $P5004, "alt_nfa__6_1381944282.86204"
    push $P5004, "alt_nfa__7_1381944282.88994"
    push $P5004, "alt_nfa__8_1381944283.10202"
    push $P5004, "alt_nfa__9_1381944283.10259"
    push $P5004, "alt_nfa__10_1381944283.11779"
    push $P5004, "alt_nfa__11_1381944283.20469"
    push $P5004, "alt_nfa__12_1381944283.21324"
    push $P5004, "alt_nfa__13_1381944283.31616"
    push $P5004, "alt_nfa__14_1381944283.38998"
    push $P5004, "alt_nfa__15_1381944283.40482"
    push $P5004, "alt_nfa__16_1381944283.47138"
    push $P5004, "alt_nfa__17_1381944283.55046"
    push $P5004, "alt_nfa__18_1381944283.56596"
    push $P5004, "alt_nfa__19_1381944283.59587"
    push $P5004, "alt_nfa__20_1381944283.61024"
    push $P5004, "alt_nfa__21_1381944283.74625"
    push $P5004, "alt_nfa__22_1381944283.75643"
    push $P5004, "alt_nfa__23_1381944283.83371"
    push $P5004, "alt_nfa__24_1381944283.8344"
    push $P5004, "alt_nfa__25_1381944283.83474"
    push $P5004, "alt_nfa__27_1381944283.87246"
    push $P5004, "alt_nfa__28_1381944283.87299"
    push $P5004, "alt_nfa__26_1381944283.84411"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Optimizer"
    push $P5004, "block_stack"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1381944242.41163"
    push $P5004, "src/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "96F80A66F2271DAB0F3CD1D5EC903FD7ED58994D-1381944260.71446"
    push $P5004, "src/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Optimizer"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, ")}]"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_521_1381944288.90674' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3393_end7113 
    die "Repossession conflicts occurred during deserialization"
  if3393_end7113:
    .const 'Sub' $P5001 = "cuid_1_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 37
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 230
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 231
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 232
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_228_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 252
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 253
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_248_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 365
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 366
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_360_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1381944288.90674" 
    nqp_get_sc_object $P5002, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 380
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_372_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "GLOBALish"
    push $P5002, "$?PACKAGE"
    push $P5002, "EXPORT"
    push $P5002, "ParseShared"
    push $P5002, "NQPCursorRole"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 0
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 1
    push $P5003, $P5006
    nqp_get_sc_object $P5007, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381944245.06863", 32
    push $P5003, $P5007
    nqp_get_sc_object $P5008, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381944245.06863", 35
    push $P5003, $P5008
    new $P5009, 'ResizableIntegerArray'
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5009)
    .const "LexInfo" $P5001 = "cuid_375_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 3
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_399_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 38
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_419_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 229
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 229
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_427_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 244
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 244
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_506_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 357
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 357
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_510_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 371
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_520_1381944288.90674"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 379
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "5EC894F76A0385687E1BE10904DCC073ED0AFDC3-1381944288.94119", 379
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5007 = $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_521_1381944288.90674") :anon :lex :outer("cuid_522_1381944288.90674")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1381944288.90674" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1381944288.90674" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_523_1381944288.90674") :load
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = "cuid_372_1381944288.90674" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_524_1381944288.90674") :main
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_372_1381944288.90674" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end