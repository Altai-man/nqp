.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_372_1381281828.51527") :anon :lex
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5047 = 'cuid_373_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_374_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_375_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_398_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_418_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_419_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_420_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_421_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_422_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_423_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_424_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_425_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_426_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_505_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_509_1381281828.51527' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_519_1381281828.51527' 
    capture_lex $P5047 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "ParseShared", $P105 
    .lex "NQPCursorRole", $P106 
    .lex "$nqpcomp", $P107 
    .lex "@clo", $P108 
    .lex "&MAIN", $P109 
    .lex "&hll-config", $P110 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P107, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P108, $P5003
    .const 'Sub' $P5004 = 'cuid_373_1381281828.51527' 
    capture_lex $P5004
    set $P109, $P5004
    .const 'Sub' $P5005 = 'cuid_374_1381281828.51527' 
    capture_lex $P5005
    set $P110, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_375_1381281828.51527' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_398_1381281828.51527' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_418_1381281828.51527' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1490
    nqp_get_sc_object $P5016, "96F80A66F2271DAB0F3CD1D5EC903FD7ED58994D-1381281801.12832", 60
    $P5017 = $P5016."operations"()
    set $P104, $P5017
.annotate 'line', 1492
    .const 'Sub' $P5019 = 'cuid_419_1381281828.51527' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "preinc", $P5018)
.annotate 'line', 1507
    .const 'Sub' $P5021 = 'cuid_420_1381281828.51527' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "predec", $P5020)
.annotate 'line', 1522
    .const 'Sub' $P5023 = 'cuid_421_1381281828.51527' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "postinc", $P5022)
.annotate 'line', 1546
    .const 'Sub' $P5025 = 'cuid_422_1381281828.51527' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "postdec", $P5024)
.annotate 'line', 1570
    .const 'Sub' $P5027 = 'cuid_423_1381281828.51527' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "numify", $P5026)
.annotate 'line', 1574
    .const 'Sub' $P5029 = 'cuid_424_1381281828.51527' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "stringify", $P5028)
.annotate 'line', 1578
    .const 'Sub' $P5031 = 'cuid_425_1381281828.51527' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "falsey", $P5030)
    .const 'Sub' $P5032 = 'cuid_426_1381281828.51527' 
    capture_lex $P5032
    $P5033 = $P5032()
    .const 'Sub' $P5034 = 'cuid_505_1381281828.51527' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_509_1381281828.51527' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_519_1381281828.51527' 
    capture_lex $P5038
    $P5039 = $P5038()
.annotate 'line', 3545
    nqp_get_sc_object $P5040, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 379
    $P5041 = $P5040."new"()
    set $P107, $P5041
.annotate 'line', 3546
    $P107."language"("nqp")
.annotate 'line', 3547
    nqp_get_sc_object $P5042, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P107."parsegrammar"($P5042)
.annotate 'line', 3548
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 244
    $P107."parseactions"($P5043)
.annotate 'line', 3549
    $P5044 = $P107."config"()
    "&hll-config"($P5044)
.annotate 'line', 3551
    $P107."addstage"("optimize", "ast" :named("after"))
.annotate 'line', 3554
    $P5045 = $P107."commandline_options"()
    set $P108, $P5045
.annotate 'line', 3555
    $P108."push"("parsetrace")
.annotate 'line', 3556
    $P108."push"("setting=s")
.annotate 'line', 3557
    $P108."push"("setting-path=s")
.annotate 'line', 3558
    $P108."push"("module-path=s")
.annotate 'line', 3559
    $P108."push"("no-regex-lib")
.annotate 'line', 3560
    $P108."push"("stable-sc")
.annotate 'line', 3561
    $P108."push"("optimize=s")
.annotate 'line', 3562
    $P108."push"("vmlibs=s")
.annotate 'line', 3563
    $P108."push"("dynext=s")
    unless _lex_param_0 goto if3394_end7112 
    $P5046 = "&MAIN"(_lex_param_0 :flat)
  if3394_end7112:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_373_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3566
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3568
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3575
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_374_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3579
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.09-129-gcbd4843"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-10-09T01:23:48Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 8
    .const 'Sub' $P5033 = 'cuid_376_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_1_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_2_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_3_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_4_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_5_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_6_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_7_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_8_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_9_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_10_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_11_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_17_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_18_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_19_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_20_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_21_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_22_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_23_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_24_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_25_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_26_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_27_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_28_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_29_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_30_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_31_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_32_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_33_1381281828.51527' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_34_1381281828.51527' 
    capture_lex $P5033 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "$loader", $P103 
    .lex "&compilee_list", $P104 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_376_1381281828.51527' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_1_1381281828.51527' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_2_1381281828.51527' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_3_1381281828.51527' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_4_1381281828.51527' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_5_1381281828.51527' 
    capture_lex $P5007
    get_hll_global $P5008, "ModuleLoader"
    set $P103, $P5008
    .const 'Sub' $P5009 = 'cuid_6_1381281828.51527' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_7_1381281828.51527' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_8_1381281828.51527' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_9_1381281828.51527' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_10_1381281828.51527' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_11_1381281828.51527' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_17_1381281828.51527' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_18_1381281828.51527' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_19_1381281828.51527' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_20_1381281828.51527' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_21_1381281828.51527' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_22_1381281828.51527' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_23_1381281828.51527' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_24_1381281828.51527' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_25_1381281828.51527' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_26_1381281828.51527' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_27_1381281828.51527' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_28_1381281828.51527' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_29_1381281828.51527' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_30_1381281828.51527' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_31_1381281828.51527' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_32_1381281828.51527' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_33_1381281828.51527' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_34_1381281828.51527' 
    capture_lex $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "compilee_list" :subid("cuid_376_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 530
    .param pmc _lex_param_0 :optional 
    .param int haz_param_1 :opt_flag 
    .lex "@orig", _lex_param_0 
    if haz_param_1, default16
    new $P5003, 'ResizablePMCArray'
    set _lex_param_0, $P5003
  default16:
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if12_else14 
    set $P5002, _lex_param_0
    goto if12_end15
  if12_else14:
    new $P5001, 'ResizablePMCArray'
    set $P5002, $P5001
  if12_end15:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_377_1381281828.51527' 
    capture_lex $P5039 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc fb_tmp_2 
    .local pmc fb_tmp_3 
    .local pmc pkg_viv_tmp_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", 8, $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", 9, $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", 10, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", 11, $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", 12, $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", 13, $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback23
    nqp_get_sc_object $P5021, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_1, $P5020
    set fb_tmp_3, pkg_viv_tmp_1
    repr_defined $I5004, fb_tmp_3
    unless $I5004 goto if16_else24 
    set $P5022, fb_tmp_3["%COMPILING"]
    set $P5024, $P5022
    goto if16_end25
  if16_else24:
    null $P5023
    set $P5024, $P5023
  if16_end25:
    unless_null $P5024, vivi_1726
    new $P5025, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5025
    set $P5024, $P5025
  vivi_1726:
    unless_null $P5024, vivi_1827
    die "Contextual %*COMPILING not found"
    box $P5026, "Contextual %*COMPILING not found"
    set $P5024, $P5026
  vivi_1827:
    set $P5019, $P5024
  fallback23:
    set fb_tmp_2, $P5019
    repr_defined $I5003, fb_tmp_2
    unless $I5003 goto if15_else21 
    set $P5027, fb_tmp_2["%?OPTIONS"]
    set $P5029, $P5027
    goto if15_end22
  if15_else21:
    null $P5028
    set $P5029, $P5028
  if15_end22:
    unless_null $P5029, vivi_1928
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5029, $P5030
  vivi_1928:
    set fb_tmp_1, $P5029
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if14_else19 
    set $P5031, fb_tmp_1["dynext"]
    set $P5033, $P5031
    goto if14_end20
  if14_else19:
    null $P5032
    set $P5033, $P5032
  if14_end20:
    unless_null $P5033, vivi_2029
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5034
  vivi_2029:
    defined $I5001, $P5033
    box $P5038, $I5001
    set $P5037, $P5038
    unless $I5001 goto if13_end18 
    .const 'Sub' $P5035 = 'cuid_377_1381281828.51527' 
    capture_lex $P5035
    $P5036 = $P5035()
    set $P5037, $P5036
  if13_end18:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1381281828.51527") :anon :lex :outer("cuid_1_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 41
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_4 
    .local pmc fb_tmp_5 
    .local pmc fb_tmp_6 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback34
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_6, pkg_viv_tmp_2
    repr_defined $I5003, fb_tmp_6
    unless $I5003 goto if23_else35 
    set $P5006, fb_tmp_6["%COMPILING"]
    set $P5008, $P5006
    goto if23_end36
  if23_else35:
    null $P5007
    set $P5008, $P5007
  if23_end36:
    unless_null $P5008, vivi_2437
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2437:
    unless_null $P5008, vivi_2538
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2538:
    set $P5003, $P5008
  fallback34:
    set fb_tmp_5, $P5003
    repr_defined $I5002, fb_tmp_5
    unless $I5002 goto if22_else32 
    set $P5011, fb_tmp_5["%?OPTIONS"]
    set $P5013, $P5011
    goto if22_end33
  if22_else32:
    null $P5012
    set $P5013, $P5012
  if22_end33:
    unless_null $P5013, vivi_2639
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_2639:
    set fb_tmp_4, $P5013
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if21_else30 
    set $P5015, fb_tmp_4["dynext"]
    set $P5017, $P5015
    goto if21_end31
  if21_else30:
    null $P5016
    set $P5017, $P5016
  if21_end31:
    unless_null $P5017, vivi_2740
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_2740:
    set $P101, $P5017
    getinterp $P5019
    set fb_tmp_8, $P5019
    repr_defined $I5005, fb_tmp_8
    unless $I5005 goto if29_else43 
    set $P5020, fb_tmp_8[.IGLOBALS_LIB_PATHS]
    set $P5022, $P5020
    goto if29_end44
  if29_else43:
    null $P5021
    set $P5022, $P5021
  if29_end44:
    unless_null $P5022, vivi_3045
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_3045:
    set fb_tmp_7, $P5022
    repr_defined $I5004, fb_tmp_7
    unless $I5004 goto if28_else41 
    set $P5024, fb_tmp_7[.PARROT_LIB_PATH_DYNEXT]
    set $P5026, $P5024
    goto if28_end42
  if28_else41:
    null $P5025
    set $P5026, $P5025
  if28_end42:
    unless_null $P5026, vivi_3146
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_3146:
    set $P102, $P5026
.annotate 'line', 45
    $P5028 = $P102."push"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 50
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_9 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 52
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 108
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS", 8
    set $N5001, $P5008
    unless $N5001 goto if32_end48 
.annotate 'line', 53
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS", 8
    set fb_tmp_9, $P5011
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if33_else49 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS", 8
    set $N5002, $P5015
    set $I5003, $N5002
    sub $I5002, $I5003, 1
    set $P5012, fb_tmp_9[$I5002]
    set $P5017, $P5012
    goto if33_end50
  if33_else49:
    null $P5016
    set $P5017, $P5016
  if33_end50:
    unless_null $P5017, vivi_3451
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_3451:
    set $P101["outer"], $P5017
  if32_end48:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS", 8
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS", 8
    set $N5003, $P5024
    set $I5004, $N5003
    set $P5021[$I5004], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 62
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 8
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_10 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 8
    set fb_tmp_10, $P5003
    repr_defined $I5001, fb_tmp_10
    unless $I5001 goto if35_else52 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS", 8
    set $N5001, $P5007
    set $I5003, $N5001
    sub $I5002, $I5003, 1
    set $P5004, fb_tmp_10[$I5002]
    set $P5009, $P5004
    goto if35_end53
  if35_else52:
    null $P5008
    set $P5009, $P5008
  if35_end53:
    unless_null $P5009, vivi_3654
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_3654:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 71
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS", 8
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 73
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 83
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_378_1381281828.51527' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_55
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if37_end58 
    .const 'Sub' $P5001 = 'cuid_378_1381281828.51527' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if37_end58:
    goto lexotic_56
  lexotic_55:
    .get_results ($P5003)
  lexotic_56:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1381281828.51527") :anon :lex :outer("cuid_6_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 85
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_11 
    .local pmc fb_tmp_12 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_13 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback61
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_3, $P5004
    set fb_tmp_12, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_12
    unless $I5002 goto if39_else62 
    set $P5006, fb_tmp_12["%COMPILING"]
    set $P5008, $P5006
    goto if39_end63
  if39_else62:
    null $P5007
    set $P5008, $P5007
  if39_end63:
    unless_null $P5008, vivi_4064
    new $P5009, 'Hash'
    set pkg_viv_tmp_3["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_4064:
    unless_null $P5008, vivi_4165
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_4165:
    set $P5003, $P5008
  fallback61:
    set fb_tmp_11, $P5003
    repr_defined $I5001, fb_tmp_11
    unless $I5001 goto if38_else59 
    set $P5011, fb_tmp_11["%?OPTIONS"]
    set $P5013, $P5011
    goto if38_end60
  if38_else59:
    null $P5012
    set $P5013, $P5012
  if38_end60:
    unless_null $P5013, vivi_4266
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_4266:
.annotate 'line', 90
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 94
    nqp_get_sc_object $P5018, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 96
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback67
    nqp_get_sc_object $P5022, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5021, $P5022
    set fb_tmp_13, $P5021
    repr_defined $I5003, fb_tmp_13
    unless $I5003 goto if43_else68 
    set $P5023, fb_tmp_13["$UNIT"]
    set $P5025, $P5023
    goto if43_end69
  if43_else68:
    null $P5024
    set $P5025, $P5024
  if43_end69:
    unless_null $P5025, vivi_4470
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_4470:
    unless_null $P5025, vivi_4571
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_4571:
    set $P5020, $P5025
  fallback67:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 97
    nqp_get_sc_object $P5029, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 99
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 101
    nqp_get_sc_object $P5031, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 103
    nqp_get_sc_object $P5034, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 105
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if46_else72 
.annotate 'line', 106
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 107
    nqp_get_sc_object $P5045, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 109
    nqp_get_sc_object $P5046, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
.annotate 'line', 110
    nqp_get_sc_object $P5047, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 111
    nqp_get_sc_object $P5049, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 112
    nqp_get_sc_object $P5051, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5052 = $P5051."new"("ModuleLoader.moarvm" :named("value"))
    $P5053 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"), $P5052 :named("moar"))
    $P5054 = $P5045."new"($P5053, "loadbytecode" :named("op"))
    $P5055 = $P5044."new"($P5054, $P102)
    $P5056 = $P5042."add_load_dependency_task"($P5055 :named("deserialize_past"))
    goto if46_end73
  if46_else72:
.annotate 'line', 117
.annotate 'line', 118
    find_lex $P5058, "self"
    nqp_decontainerize $P5057, $P5058
    $P5059 = $P5057."add_fixup_task"($P102 :named("fixup_past"))
  if46_end73:
    getattribute $P5060, $P101, 'lex_pad'
    $P5061 = "RETURN"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 127
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_74
    .lex "RETURN", $P102
.annotate 'line', 129
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 132
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if47_end77 
.annotate 'line', 133
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 134
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 136
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
.annotate 'line', 137
    nqp_get_sc_object $P5010, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 138
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 139
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5015 = $P5014."new"("ModuleLoader.moarvm" :named("value"))
    $P5016 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"), $P5015 :named("moar"))
    $P5017 = $P5008."new"($P5016, "loadbytecode" :named("op"))
.annotate 'line', 141
    nqp_get_sc_object $P5018, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 143
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 145
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5021 = $P5020."new"("ModuleLoader" :named("value"))
    $P5022 = $P5019."new"($P5021, "getcurhllsym" :named("op"))
.annotate 'line', 147
    nqp_get_sc_object $P5023, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5024 = $P5023."new"(_lex_param_1 :named("value"))
    $P5025 = $P5018."new"($P5022, $P5024, "callmethod" :named("op"), "load_module" :named("name"))
    $P5026 = $P5007."new"($P5017, $P5025)
    $P5027 = $P5006."add_load_dependency_task"($P5026 :named("deserialize_past"))
  if47_end77:
    getattribute $P5028, $P101, 'lex_pad'
    $P5029 = "RETURN"($P5028)
    goto lexotic_75
  lexotic_74:
    .get_results ($P5029)
  lexotic_75:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_379_1381281828.51527' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 155
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next78:
    unless $P5006, for_done80
    shift $P5008, $P5006
  for_redo79:
    .const 'Sub' $P5007 = 'cuid_379_1381281828.51527' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next78
  for_done80:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1381281828.51527") :anon :lex :outer("cuid_8_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 156
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 157
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 163
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_381_1381281828.51527' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 165
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next100:
    unless $P5008, for_done102
    shift $P5010, $P5008
  for_redo101:
    .const 'Sub' $P5009 = 'cuid_381_1381281828.51527' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next100
  for_done102:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1381281828.51527") :anon :lex :outer("cuid_9_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 169
    .param pmc _lex_param_0 
    .const 'Sub' $P5011 = 'cuid_380_1381281828.51527' 
    capture_lex $P5011 
    .lex "$part", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set $S5001, _lex_param_0
    box $P5002, $S5001
    set $P101, $P5002
    find_lex $P5004, "$target"
    get_who $P5003, $P5004
    set $S5002, $P101
    exists $I5001, $P5003[$S5002]
    unless $I5001 goto if48_else81 
.annotate 'line', 171
    find_lex $P5007, "$target"
    get_who $P5006, $P5007
    set $S5003, $P101
    set $P5005, $P5006[$S5003]
    store_lex "$target", $P5005
    set $P5010, $P5005
    goto if48_end82
  if48_else81:
    .const 'Sub' $P5008 = 'cuid_380_1381281828.51527' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if48_end82:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1381281828.51527") :anon :lex :outer("cuid_381_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 174
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_15 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_16 
    .local pmc pkg_viv_tmp_6 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback85
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_14, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_14
    unless $I5002 goto if50_else86 
    set $P5006, fb_tmp_14["%HOW"]
    set $P5008, $P5006
    goto if50_end87
  if50_else86:
    null $P5007
    set $P5008, $P5007
  if50_end87:
    unless_null $P5008, vivi_5188
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5009
    set $P5008, $P5009
  vivi_5188:
    unless_null $P5008, vivi_5289
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_5289:
    set $P5003, $P5008
  fallback85:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if49_else83 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback90
    nqp_get_sc_object $P5014, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_5, $P5013
    set fb_tmp_15, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_15
    unless $I5003 goto if53_else91 
    set $P5015, fb_tmp_15["%HOW"]
    set $P5017, $P5015
    goto if53_end92
  if53_else91:
    null $P5016
    set $P5017, $P5016
  if53_end92:
    unless_null $P5017, vivi_5493
    new $P5018, 'Hash'
    set pkg_viv_tmp_5["%HOW"], $P5018
    set $P5017, $P5018
  vivi_5493:
    unless_null $P5017, vivi_5594
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_5594:
    set $P5012, $P5017
  fallback90:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if49_end84
  if49_else83:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback95
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_6, $P5022
    set fb_tmp_16, pkg_viv_tmp_6
    repr_defined $I5004, fb_tmp_16
    unless $I5004 goto if56_else96 
    set $P5024, fb_tmp_16["%HOW"]
    set $P5026, $P5024
    goto if56_end97
  if56_else96:
    null $P5025
    set $P5026, $P5025
  if56_end97:
    unless_null $P5026, vivi_5798
    new $P5027, 'Hash'
    set pkg_viv_tmp_6["%HOW"], $P5027
    set $P5026, $P5027
  vivi_5798:
    unless_null $P5026, vivi_5899
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_5899:
    set $P5021, $P5026
  fallback95:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if49_end84:
    set $P101, $P5029
.annotate 'line', 178
    find_lex $P5030, "$part"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 179
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$part"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 188
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_17 
.annotate 'line', 189
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 190
    set fb_tmp_17, _lex_param_1
    repr_defined $I5001, fb_tmp_17
    unless $I5001 goto if59_else103 
    set $P5001, fb_tmp_17[0]
    set $P5003, $P5001
    goto if59_end104
  if59_else103:
    null $P5002
    set $P5003, $P5002
  if59_end104:
    unless_null $P5003, vivi_60105
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  vivi_60105:
    nqp_get_sc_object $P5005, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5006 = $P5005."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "static" :named("decl"), _lex_param_3 :named("value"))
    $P5007 = $P5003."push"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 198
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 200
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 201
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 202
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 204
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 209
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_2 :opt_flag 
    .const 'Sub' $P5083 = 'cuid_12_1381281828.51527' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_385_1381281828.51527' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_386_1381281828.51527' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_387_1381281828.51527' 
    capture_lex $P5083 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    if haz_param_2, default216
    box $P5082, "NQPRoutine"
    set _lex_param_4, $P5082
  default216:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_106
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_68119
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 215
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback108
    nqp_get_sc_object $P5015, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5014, $P5015
    set fb_tmp_18, $P5014
    repr_defined $I5002, fb_tmp_18
    unless $I5002 goto if61_else109 
    set $P5016, fb_tmp_18["$PACKAGE"]
    set $P5018, $P5016
    goto if61_end110
  if61_else109:
    null $P5017
    set $P5018, $P5017
  if61_end110:
    unless_null $P5018, vivi_62111
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_62111:
    unless_null $P5018, vivi_63112
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_63112:
    set $P5013, $P5018
  fallback108:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback113
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set fb_tmp_19, $P5022
    repr_defined $I5003, fb_tmp_19
    unless $I5003 goto if64_else114 
    set $P5024, fb_tmp_19["$PACKAGE"]
    set $P5026, $P5024
    goto if64_end115
  if64_else114:
    null $P5025
    set $P5026, $P5025
  if64_end115:
    unless_null $P5026, vivi_65116
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_65116:
    unless_null $P5026, vivi_66117
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_66117:
    set $P5021, $P5026
  fallback113:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_67118
  catch_handler_68119:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_67118
  skip_handler_67118:
    .const 'Sub' $P5034 = 'cuid_12_1381281828.51527' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if109_end193 
.annotate 'line', 264
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if109_end193:
.annotate 'line', 269
    nqp_get_sc_object $P5036, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_37, _lex_param_1
    repr_defined $I5005, fb_tmp_37
    unless $I5005 goto if111_else196 
    set $P5038, fb_tmp_37["compile_time_dummy"]
    set $P5040, $P5038
    goto if111_end197
  if111_else196:
    null $P5039
    set $P5040, $P5039
  if111_end197:
    unless_null $P5040, vivi_112198
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5041
  vivi_112198:
    defined $I5004, $P5040
    unless $I5004 goto if110_else194 
.annotate 'line', 272
    set fb_tmp_38, _lex_param_1
    repr_defined $I5006, fb_tmp_38
    unless $I5006 goto if113_else199 
    set $P5042, fb_tmp_38["compile_time_dummy"]
    set $P5044, $P5042
    goto if113_end200
  if113_else199:
    null $P5043
    set $P5044, $P5043
  if113_end200:
    unless_null $P5044, vivi_114201
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5044, $P5045
  vivi_114201:
    set $P106, $P5044
    goto if110_end195
  if110_else194:
.annotate 'line', 275
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 283
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx", 12
.annotate 'line', 284
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if115_end203 
.annotate 'line', 290
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list", 11
.annotate 'line', 291
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 292
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if116_else204 
    .const 'Sub' $P5059 = 'cuid_385_1381281828.51527' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if116_end205
  if116_else204:
    .const 'Sub' $P5061 = 'cuid_386_1381281828.51527' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if116_end205:
    set $P5064, $P5063
  if115_end203:
  if110_end195:
.annotate 'line', 332
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if121_else212 
    .const 'Sub' $P5066 = 'cuid_387_1381281828.51527' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5081, $P5067
    goto if121_end213
  if121_else212:
.annotate 'line', 371
.annotate 'line', 374
    nqp_get_sc_object $P5068, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 376
    nqp_get_sc_object $P5069, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 378
    nqp_get_sc_object $P5070, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 379
    nqp_get_sc_object $P5074, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 381
    nqp_get_sc_object $P5077, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    $P5080 = "RETURN"($P106)
    set $P5081, $P5080
  if121_end213:
    goto lexotic_107
  lexotic_106:
    .get_results ($P5081)
  lexotic_107:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1381281828.51527") :anon :lex :outer("cuid_17_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 222
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5051 = 'cuid_384_1381281828.51527' 
    capture_lex $P5051 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc pkg_viv_tmp_7 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P106, $P5006
.annotate 'line', 224
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 226
.annotate 'line', 227
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 120
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    find_dynamic_lex $P5015, "$*LINEPOSCACHE"
    unless_null $P5015, fallback120
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5016, $P5017
    set fb_tmp_20, $P5016
    repr_defined $I5001, fb_tmp_20
    unless $I5001 goto if69_else121 
    set $P5018, fb_tmp_20["$LINEPOSCACHE"]
    set $P5020, $P5018
    goto if69_end122
  if69_else121:
    null $P5019
    set $P5020, $P5019
  if69_end122:
    unless_null $P5020, vivi_70123
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_70123:
    unless_null $P5020, vivi_71124
    die "Contextual $*LINEPOSCACHE not found"
    box $P5022, "Contextual $*LINEPOSCACHE not found"
    set $P5020, $P5022
  vivi_71124:
    set $P5015, $P5020
  fallback120:
    find_dynamic_lex $P5023, "%*COMPILING"
    unless_null $P5023, fallback131
    nqp_get_sc_object $P5025, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_7, $P5024
    set fb_tmp_23, pkg_viv_tmp_7
    repr_defined $I5004, fb_tmp_23
    unless $I5004 goto if75_else132 
    set $P5026, fb_tmp_23["%COMPILING"]
    set $P5028, $P5026
    goto if75_end133
  if75_else132:
    null $P5027
    set $P5028, $P5027
  if75_end133:
    unless_null $P5028, vivi_76134
    new $P5029, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5029
    set $P5028, $P5029
  vivi_76134:
    unless_null $P5028, vivi_77135
    die "Contextual %*COMPILING not found"
    box $P5030, "Contextual %*COMPILING not found"
    set $P5028, $P5030
  vivi_77135:
    set $P5023, $P5028
  fallback131:
    set fb_tmp_22, $P5023
    repr_defined $I5003, fb_tmp_22
    unless $I5003 goto if74_else129 
    set $P5031, fb_tmp_22["%?OPTIONS"]
    set $P5033, $P5031
    goto if74_end130
  if74_else129:
    null $P5032
    set $P5033, $P5032
  if74_end130:
    unless_null $P5033, vivi_78136
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5034
  vivi_78136:
    set fb_tmp_21, $P5033
    repr_defined $I5002, fb_tmp_21
    unless $I5002 goto if73_else127 
    set $P5035, fb_tmp_21["bootstrap"]
    set $P5037, $P5035
    goto if73_end128
  if73_else127:
    null $P5036
    set $P5037, $P5036
  if73_end128:
    unless_null $P5037, vivi_79137
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_79137:
    unless $P5037 goto if72_else125 
    set $I5005, 1
    goto if72_end126
  if72_else125:
    set $I5005, 0
  if72_end126:
    $P5039 = $P101."compile"($P5014, "ast" :named("from"), 1 :named("compunit_ok"), $P5015 :named("lineposcache"), $I5005 :named("bootstrap"))
    set $P102, $P5039
.annotate 'line', 232
    $P5040 = $P101."backend"()
    $P5041 = $P5040."compunit_coderefs"($P102)
    set $P103, $P5041
    elements $I5006, $P103
    box $P5042, $I5006
    set $P104, $P5042
    box $P5043, 0
    set $P105, $P5043
  while80_test138:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5007, $N5001, $N5002
    box $P5047, $I5007
    set $P5046, $P5047
    unless $I5007 goto while80_done142 
  while80_redo140:
    .const 'Sub' $P5044 = 'cuid_384_1381281828.51527' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5046, $P5045
    goto while80_test138 
  while80_done142:
.annotate 'line', 258
    $P5048 = $P101."backend"()
    $P5049 = $P5048."compunit_mainline"($P102)
    set $P106, $P5049
.annotate 'line', 259
    $P5050 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1381281828.51527") :anon :lex :outer("cuid_12_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 235
    .const 'Sub' $P5017 = 'cuid_383_1381281828.51527' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_24, $P5002
    repr_defined $I5001, fb_tmp_24
    unless $I5001 goto if81_else143 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_24[$I5002]
    set $P5006, $P5003
    goto if81_end144
  if81_else143:
    null $P5005
    set $P5006, $P5005
  if81_end144:
    unless_null $P5006, vivi_82145
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_82145:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up", 9
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if83_end147 
    .const 'Sub' $P5013 = 'cuid_383_1381281828.51527' 
    capture_lex $P5013
    $P5014 = $P5013()
  if83_end147:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1381281828.51527") :anon :lex :outer("cuid_384_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 237
    .const 'Sub' $P5089 = 'cuid_382_1381281828.51527' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 241
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up", 9
    set fb_tmp_25, $P5006
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if84_else148 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_25[$S5001]
    set $P5010, $P5007
    goto if84_end149
  if84_else148:
    null $P5009
    set $P5010, $P5009
  if84_end149:
    unless_null $P5010, vivi_85150
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_85150:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types", 10
    set fb_tmp_26, $P5016
    repr_defined $I5002, fb_tmp_26
    unless $I5002 goto if86_else151 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_26[$S5002]
    set $P5020, $P5017
    goto if86_end152
  if86_else151:
    null $P5019
    set $P5020, $P5019
  if86_end152:
    unless_null $P5020, vivi_87153
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_87153:
    find_lex $P5022, "@allcodes"
    set fb_tmp_27, $P5022
    repr_defined $I5003, fb_tmp_27
    unless $I5003 goto if88_else154 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_27[$I5004]
    set $P5026, $P5023
    goto if88_end155
  if88_else154:
    null $P5025
    set $P5026, $P5025
  if88_end155:
    unless_null $P5026, vivi_89156
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_89156:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types", 10
    set fb_tmp_28, $P5031
    repr_defined $I5005, fb_tmp_28
    unless $I5005 goto if90_else157 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_28[$S5003]
    set $P5035, $P5032
    goto if90_end158
  if90_else157:
    null $P5034
    set $P5035, $P5034
  if90_end158:
    unless_null $P5035, vivi_91159
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5035, $P5036
  vivi_91159:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up", 9
    set fb_tmp_29, $P5044
    repr_defined $I5006, fb_tmp_29
    unless $I5006 goto if92_else160 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_29[$S5004]
    set $P5048, $P5045
    goto if92_end161
  if92_else160:
    null $P5047
    set $P5048, $P5047
  if92_end161:
    unless_null $P5048, vivi_93162
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5048, $P5049
  vivi_93162:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next172:
    unless $P5040, for_done174
    shift $P5051, $P5040
  for_redo173:
    .const 'Sub' $P5050 = 'cuid_382_1381281828.51527' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next172
  for_done174:
    find_lex $P5052, "@allcodes"
    set fb_tmp_33, $P5052
    repr_defined $I5007, fb_tmp_33
    unless $I5007 goto if100_else175 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_33[$I5008]
    set $P5056, $P5053
    goto if100_end176
  if100_else175:
    null $P5055
    set $P5056, $P5055
  if100_end176:
    unless_null $P5056, vivi_101177
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5056, $P5057
  vivi_101177:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 249
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx", 12
    set fb_tmp_34, $P5063
    repr_defined $I5009, fb_tmp_34
    unless $I5009 goto if102_else178 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_34[$S5005]
    set $P5067, $P5064
    goto if102_end179
  if102_else178:
    null $P5066
    set $P5067, $P5066
  if102_end179:
    unless_null $P5067, vivi_103180
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5067, $P5068
  vivi_103180:
    find_lex $P5069, "@allcodes"
    set fb_tmp_35, $P5069
    repr_defined $I5010, fb_tmp_35
    unless $I5010 goto if104_else181 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_35[$I5011]
    set $P5073, $P5070
    goto if104_end182
  if104_else181:
    null $P5072
    set $P5073, $P5072
  if104_end182:
    unless_null $P5073, vivi_105183
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5073, $P5074
  vivi_105183:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list", 11
    set fb_tmp_36, $P5078
    repr_defined $I5012, fb_tmp_36
    unless $I5012 goto if106_else184 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_36[$S5006]
    set $P5082, $P5079
    goto if106_end185
  if106_else184:
    null $P5081
    set $P5082, $P5081
  if106_end185:
    unless_null $P5082, vivi_107186
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_107186:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while108_handlers190
    push_eh $P5087
  while108_test187:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while108_done191 
  while108_redo189:
.annotate 'line', 253
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while108_test187 
  while108_handlers190:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while108_test187
    eq $P5087, .CONTROL_LOOP_REDO, while108_redo189
  while108_done191:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1381281828.51527") :anon :lex :outer("cuid_383_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 244
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types", 10
    set fb_tmp_30, $P5004
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if94_else163 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_30[$S5001]
    set $P5008, $P5005
    goto if94_end164
  if94_else163:
    null $P5007
    set $P5008, $P5007
  if94_end164:
    unless_null $P5008, vivi_95165
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_95165:
    find_lex $P5011, "@allcodes"
    set fb_tmp_31, $P5011
    repr_defined $I5002, fb_tmp_31
    unless $I5002 goto if96_else166 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_31[$I5003]
    set $P5015, $P5012
    goto if96_end167
  if96_else166:
    null $P5014
    set $P5015, $P5014
  if96_end167:
    unless_null $P5015, vivi_97168
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_97168:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types", 10
    set fb_tmp_32, $P5020
    repr_defined $I5004, fb_tmp_32
    unless $I5004 goto if98_else169 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_32[$S5002]
    set $P5024, $P5021
    goto if98_end170
  if98_else169:
    null $P5023
    set $P5024, $P5023
  if98_end170:
    unless_null $P5024, vivi_99171
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_99171:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1381281828.51527") :anon :lex :outer("cuid_17_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 292
    .const 'Sub' $P5012 = 'cuid_13_1381281828.51527' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1381281828.51527' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1381281828.51527' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 13
    .const 'Sub' $P5011 = 'cuid_14_1381281828.51527' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1381281828.51527") :anon :lex :outer("cuid_385_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 293
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_39 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 294
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up", 9
    set fb_tmp_39, $P5005
    repr_defined $I5001, fb_tmp_39
    unless $I5001 goto if117_else206 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_39[$S5001]
    set $P5010, $P5006
    goto if117_end207
  if117_else206:
    null $P5009
    set $P5010, $P5009
  if117_end207:
    unless_null $P5010, vivi_118208
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_118208:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1381281828.51527") :anon :lex :outer("cuid_385_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 300

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1381281828.51527") :anon :lex :outer("cuid_17_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 304
    .const 'Sub' $P5012 = 'cuid_15_1381281828.51527' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1381281828.51527' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1381281828.51527' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 13
    .const 'Sub' $P5011 = 'cuid_16_1381281828.51527' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1381281828.51527") :anon :lex :outer("cuid_386_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 305
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_40 
.annotate 'line', 307
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 308
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 310
    nqp_get_sc_object $P5005, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 312
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 313
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 314
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 315
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 317
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 321
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up", 9
    set fb_tmp_40, $P5025
    repr_defined $I5001, fb_tmp_40
    unless $I5001 goto if119_else209 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_40[$S5001]
    set $P5030, $P5026
    goto if119_end210
  if119_else209:
    null $P5029
    set $P5030, $P5029
  if119_end210:
    unless_null $P5030, vivi_120211
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5030, $P5031
  vivi_120211:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1381281828.51527") :anon :lex :outer("cuid_386_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 324

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1381281828.51527") :anon :lex :outer("cuid_17_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 336
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if122_end215 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
.annotate 'line', 339
    $P5008 = "&compilee_list"()
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if122_end215:
.annotate 'line', 341
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 344
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 345
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 347
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 348
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 352
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 354
    nqp_get_sc_object $P5025, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 355
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 356
    nqp_get_sc_object $P5031, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 357
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 359
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 361
    nqp_get_sc_object $P5039, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 362
    nqp_get_sc_object $P5042, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up", 9
.annotate 'line', 366
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types", 10
.annotate 'line', 367
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 389
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_4 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_3, default223
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_2, $P5006
  default223:
    if haz_param_4, default224
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_3, $P5007
  default224:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_217
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if123_end220 
.annotate 'line', 392
    set $P101["name"], _lex_param_2
  if123_end220:
    defined $I5002, _lex_param_3
    unless $I5002 goto if124_end222 
.annotate 'line', 393
    set $P101["repr"], _lex_param_3
  if124_end222:
.annotate 'line', 394
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 395
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    $P5005 = "RETURN"($P102)
    goto lexotic_218
  lexotic_217:
    .get_results ($P5005)
  lexotic_218:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 406
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 407
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 408
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 413
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 414
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 418
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 419
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 420
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
.annotate 'line', 423
    $P5013 = "&compilee_list"(_lex_param_2)
    setattribute $P103, $P101, "$!types", $P5013
.annotate 'line', 425
    $P5014 = "&compilee_list"(_lex_param_3)
    setattribute $P103, $P101, "$!definednesses", $P5014
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 430
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 432
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 435
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 440
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 443
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 444
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 448
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 449
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_389_1381281828.51527' 
    capture_lex $P5030 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_45 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_225
    .lex "RETURN", $P106
.annotate 'line', 455
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 108
.annotate 'line', 456
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS", 8
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while125_test227:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while125_done231 
  while125_redo229:
    .const 'Sub' $P5014 = 'cuid_389_1381281828.51527' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while125_test227 
  while125_done231:
.annotate 'line', 479
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback253
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set fb_tmp_45, $P5022
    repr_defined $I5002, fb_tmp_45
    unless $I5002 goto if138_else254 
    set $P5024, fb_tmp_45["$GLOBALish"]
    set $P5026, $P5024
    goto if138_end255
  if138_else254:
    null $P5025
    set $P5026, $P5025
  if138_end255:
    unless_null $P5026, vivi_139256
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_139256:
    unless_null $P5026, vivi_140257
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_140257:
    set $P5021, $P5026
  fallback253:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 482
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 487
    $P101."shift"()
    $P5029 = "RETURN"($P101)
    goto lexotic_226
  lexotic_225:
    .get_results ($P5029)
  lexotic_226:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1381281828.51527") :anon :lex :outer("cuid_26_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 461
    .const 'Sub' $P5019 = 'cuid_388_1381281828.51527' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_41 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 463
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_41, $P5007
    repr_defined $I5001, fb_tmp_41
    unless $I5001 goto if126_else232 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_41[$I5002]
    set $P5011, $P5008
    goto if126_end233
  if126_else232:
    null $P5010
    set $P5011, $P5010
  if126_end233:
    unless_null $P5011, vivi_127234
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_127234:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next250:
    unless $P5016, for_done252
    shift $P5018, $P5016
  for_redo251:
    .const 'Sub' $P5017 = 'cuid_388_1381281828.51527' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next250
  for_done252:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1381281828.51527") :anon :lex :outer("cuid_389_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    find_lex $P5001, "%seen"
    set fb_tmp_42, $P5001
    repr_defined $I5002, fb_tmp_42
    unless $I5002 goto if130_else239 
.annotate 'line', 465
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_42[$S5001]
    set $P5005, $P5002
    goto if130_end240
  if130_else239:
    null $P5004
    set $P5005, $P5004
  if130_end240:
    unless_null $P5005, vivi_131241
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_131241:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if129_end238 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if129_end238:
    box $P5032, $I5004
    set $P5031, $P5032
    unless $I5004 goto if128_end236 
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_137249
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 466
.annotate 'line', 467
    find_lex $P5008, "$wrapper"
    set fb_tmp_43, $P5008
    repr_defined $I5005, fb_tmp_43
    unless $I5005 goto if132_else242 
    set $P5009, fb_tmp_43[0]
    set $P5011, $P5009
    goto if132_end243
  if132_else242:
    null $P5010
    set $P5011, $P5010
  if132_end243:
    unless_null $P5011, vivi_133244
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_133244:
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 469
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5015 = _lex_param_0."key"()
    $P5016 = $P5014."new"($P5015 :named("name"), "lexical" :named("scope"), "var" :named("isdecl"))
.annotate 'line', 470
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5018 = _lex_param_0."value"()
    set fb_tmp_44, $P5018
    repr_defined $I5006, fb_tmp_44
    unless $I5006 goto if134_else245 
    set $P5019, fb_tmp_44["value"]
    set $P5021, $P5019
    goto if134_end246
  if134_else245:
    null $P5020
    set $P5021, $P5020
  if134_end246:
    unless_null $P5021, vivi_135247
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_135247:
    $P5023 = $P5017."new"($P5021 :named("value"))
    $P5024 = $P5013."new"($P5016, $P5023, "bind" :named("op"))
    $P5025 = $P5011."push"($P5024)
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_136248
  catch_handler_137249:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_136248
  skip_handler_136248:
    find_lex $P5028, "%seen"
.annotate 'line', 473
    $P5029 = _lex_param_0."key"()
    set $S5002, $P5029
    box $P5030, 1
    set $P5028[$S5002], $P5030
    set $P5031, $P5030
  if128_end236:
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 492
    .param pmc _lex_param_0 
    .const 'Sub' $P5052 = 'cuid_390_1381281828.51527' 
    capture_lex $P5052 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_46 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    .local pmc fb_tmp_51 
    .local pmc pkg_viv_tmp_9 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback264
    nqp_get_sc_object $P5010, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_8, $P5009
    set fb_tmp_48, pkg_viv_tmp_8
    repr_defined $I5003, fb_tmp_48
    unless $I5003 goto if144_else265 
    set $P5011, fb_tmp_48["%COMPILING"]
    set $P5013, $P5011
    goto if144_end266
  if144_else265:
    null $P5012
    set $P5013, $P5012
  if144_end266:
    unless_null $P5013, vivi_145267
    new $P5014, 'Hash'
    set pkg_viv_tmp_8["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_145267:
    unless_null $P5013, vivi_146268
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_146268:
    set $P5008, $P5013
  fallback264:
    set fb_tmp_47, $P5008
    repr_defined $I5002, fb_tmp_47
    unless $I5002 goto if143_else262 
    set $P5016, fb_tmp_47["%?OPTIONS"]
    set $P5018, $P5016
    goto if143_end263
  if143_else262:
    null $P5017
    set $P5018, $P5017
  if143_end263:
    unless_null $P5018, vivi_147269
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_147269:
    set fb_tmp_46, $P5018
    repr_defined $I5001, fb_tmp_46
    unless $I5001 goto if142_else260 
    set $P5020, fb_tmp_46["vmlibs"]
    set $P5022, $P5020
    goto if142_end261
  if142_else260:
    null $P5021
    set $P5022, $P5021
  if142_end261:
    unless_null $P5022, vivi_148270
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_148270:
    unless $P5022 goto if141_end259 
.annotate 'line', 495
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback275
    nqp_get_sc_object $P5030, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_9, $P5029
    set fb_tmp_51, pkg_viv_tmp_9
    repr_defined $I5006, fb_tmp_51
    unless $I5006 goto if151_else276 
    set $P5031, fb_tmp_51["%COMPILING"]
    set $P5033, $P5031
    goto if151_end277
  if151_else276:
    null $P5032
    set $P5033, $P5032
  if151_end277:
    unless_null $P5033, vivi_152278
    new $P5034, 'Hash'
    set pkg_viv_tmp_9["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_152278:
    unless_null $P5033, vivi_153279
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_153279:
    set $P5028, $P5033
  fallback275:
    set fb_tmp_50, $P5028
    repr_defined $I5005, fb_tmp_50
    unless $I5005 goto if150_else273 
    set $P5036, fb_tmp_50["%?OPTIONS"]
    set $P5038, $P5036
    goto if150_end274
  if150_else273:
    null $P5037
    set $P5038, $P5037
  if150_end274:
    unless_null $P5038, vivi_154280
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5038, $P5039
  vivi_154280:
    set fb_tmp_49, $P5038
    repr_defined $I5004, fb_tmp_49
    unless $I5004 goto if149_else271 
    set $P5040, fb_tmp_49["vmlibs"]
    set $P5042, $P5040
    goto if149_end272
  if149_else271:
    null $P5041
    set $P5042, $P5041
  if149_end272:
    unless_null $P5042, vivi_155281
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5042, $P5043
  vivi_155281:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next282:
    unless $P5026, for_done284
    shift $P5045, $P5026
  for_redo283:
    .const 'Sub' $P5044 = 'cuid_390_1381281828.51527' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next282
  for_done284:
  if141_end259:
.annotate 'line', 500
    nqp_get_sc_object $P5046, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
.annotate 'line', 502
    nqp_get_sc_object $P5047, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5048 = $P5047."new"("null" :named("op"))
.annotate 'line', 503
    nqp_get_sc_object $P5049, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5050 = $P5049."new"("null" :named("op"))
    $P5051 = $P5046."new"($P101 :named("loadlibs"), $P5048 :named("jvm"), $P5050 :named("moar"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1381281828.51527") :anon :lex :outer("cuid_27_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 496
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 497
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 508
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 509
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
.annotate 'line', 510
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 511
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 512
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 513
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 515
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 516
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 517
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 519
    nqp_get_sc_object $P5021, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5022 = $P5021."new"("null" :named("op"))
.annotate 'line', 520
    nqp_get_sc_object $P5023, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5024 = $P5023."new"("null" :named("op"))
    $P5025 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"), $P5024 :named("moar"))
    $P5026 = $P5001."add_load_dependency_task"($P5025 :named("deserialize_past"))
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 525
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_391_1381281828.51527' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks", 13
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next285:
    unless $P5003, for_done287
    shift $P5008, $P5003
  for_redo286:
    .const 'Sub' $P5007 = 'cuid_391_1381281828.51527' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next285
  for_done287:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1381281828.51527") :anon :lex :outer("cuid_29_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 526
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 536
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 537
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 542
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 543
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 548
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_392_1381281828.51527' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_288
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS", 8
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while156_test290:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while156_done294 
  while156_redo292:
    .const 'Sub' $P5006 = 'cuid_392_1381281828.51527' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while156_test290 
  while156_done294:
    box $P5010, 0
    goto lexotic_289
  lexotic_288:
    .get_results ($P5010)
  lexotic_289:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1381281828.51527") :anon :lex :outer("cuid_32_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 550
    .lex "%sym", $P101 
    .local pmc fb_tmp_52 
    .local pmc fb_tmp_53 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 552
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_52, $P5007
    repr_defined $I5001, fb_tmp_52
    unless $I5001 goto if157_else295 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_52[$I5002]
    set $P5011, $P5008
    goto if157_end296
  if157_else295:
    null $P5010
    set $P5011, $P5010
  if157_end296:
    unless_null $P5011, vivi_158297
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_158297:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5022, $N5004
    set $P5021, $P5022
    unless $N5004 goto if159_end299 
.annotate 'line', 553
    set fb_tmp_53, $P101
    repr_defined $I5004, fb_tmp_53
    unless $I5004 goto if160_else300 
    set $P5015, fb_tmp_53["scope"]
    set $P5017, $P5015
    goto if160_end301
  if160_else300:
    null $P5016
    set $P5017, $P5016
  if160_end301:
    unless_null $P5017, vivi_161302
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_161302:
    set $S5001, $P5017
    find_lex $P5019, "$wanted_scope"
    set $S5002, $P5019
    iseq $I5003, $S5001, $S5002
    $P5020 = "RETURN"($I5003)
    set $P5021, $P5020
  if159_end299:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 561
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_163304
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 563
.annotate 'line', 564
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_162303
  catch_handler_163304:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_162303
  skip_handler_162303:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1381281828.51527") :anon :lex :outer("cuid_375_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 573
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_394_1381281828.51527' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_396_1381281828.51527' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_397_1381281828.51527' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_305
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless164_end308 
.annotate 'line', 575
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless164_end308:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if165_end310 
    .const 'Sub' $P5003 = 'cuid_394_1381281828.51527' 
    capture_lex $P5003
    $P5004 = $P5003()
  if165_end310:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback329
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5006, $P5007
    set fb_tmp_57, $P5006
    repr_defined $I5002, fb_tmp_57
    unless $I5002 goto if175_else330 
    set $P5008, fb_tmp_57["$GLOBALish"]
    set $P5010, $P5008
    goto if175_end331
  if175_else330:
    null $P5009
    set $P5010, $P5009
  if175_end331:
    unless_null $P5010, vivi_176332
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_176332:
    unless_null $P5010, vivi_177333
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_177333:
    set $P5005, $P5010
  fallback329:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if178_end335 
    .const 'Sub' $P5013 = 'cuid_396_1381281828.51527' 
    capture_lex $P5013
    $P5014 = $P5013()
  if178_end335:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next359:
    unless $P5017, for_done361
    shift $P5019, $P5017
  for_redo360:
    .const 'Sub' $P5018 = 'cuid_397_1381281828.51527' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next359
  for_done361:
    goto lexotic_306
  lexotic_305:
    .get_results ($P101)
  lexotic_306:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1381281828.51527") :anon :lex :outer("cuid_34_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 579
    .const 'Sub' $P5017 = 'cuid_393_1381281828.51527' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_54 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_54, $P5003
    repr_defined $I5001, fb_tmp_54
    unless $I5001 goto if166_else311 
    set $P5004, fb_tmp_54[0]
    set $P5006, $P5004
    goto if166_end312
  if166_else311:
    null $P5005
    set $P5006, $P5005
  if166_end312:
    unless_null $P5006, vivi_167313
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_167313:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 8
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while168_test314:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while168_done318 
  while168_redo316:
    .const 'Sub' $P5013 = 'cuid_393_1381281828.51527' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while168_test314 
  while168_done318:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1381281828.51527") :anon :lex :outer("cuid_394_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 582
    .lex "%sym", $P101 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 584
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_55, $P5007
    repr_defined $I5001, fb_tmp_55
    unless $I5001 goto if169_else319 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_55[$I5002]
    set $P5011, $P5008
    goto if169_end320
  if169_else319:
    null $P5010
    set $P5011, $P5010
  if169_end320:
    unless_null $P5011, vivi_170321
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_170321:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5024, $N5004
    set $P5023, $P5024
    unless $N5004 goto if171_end323 
.annotate 'line', 585
    exists $I5003, $P101["value"]
    unless $I5003 goto if172_else324 
.annotate 'line', 586
    set fb_tmp_56, $P101
    repr_defined $I5004, fb_tmp_56
    unless $I5004 goto if173_else326 
    set $P5015, fb_tmp_56["value"]
    set $P5017, $P5015
    goto if173_end327
  if173_else326:
    null $P5016
    set $P5017, $P5016
  if173_end327:
    unless_null $P5017, vivi_174328
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_174328:
    $P5019 = "RETURN"($P5017)
    set $P5022, $P5019
    goto if172_end325
  if172_else324:
.annotate 'line', 589
    find_lex $P5020, "$final_name"
    set $S5002, $P5020
    concat $S5001, "No compile-time value for ", $S5002
    box $P5021, $S5001
    die $P5021
    set $P5022, $P5021
  if172_end325:
    set $P5023, $P5022
  if171_end323:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1381281828.51527") :anon :lex :outer("cuid_34_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 600
    .const 'Sub' $P5017 = 'cuid_395_1381281828.51527' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_58 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_58, $P5003
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if179_else336 
    set $P5004, fb_tmp_58[0]
    set $P5006, $P5004
    goto if179_end337
  if179_else336:
    null $P5005
    set $P5006, $P5005
  if179_end337:
    unless_null $P5006, vivi_180338
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_180338:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 8
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while181_test339:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while181_done343 
  while181_redo341:
    .const 'Sub' $P5013 = 'cuid_395_1381281828.51527' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while181_test339 
  while181_done343:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1381281828.51527") :anon :lex :outer("cuid_396_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 603
    .lex "%sym", $P101 
    .local pmc fb_tmp_59 
    .local pmc fb_tmp_60 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 605
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_59, $P5007
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if182_else344 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_59[$I5002]
    set $P5011, $P5008
    goto if182_end345
  if182_else344:
    null $P5010
    set $P5011, $P5010
  if182_end345:
    unless_null $P5011, vivi_183346
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_183346:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if184_end348 
.annotate 'line', 606
    exists $I5003, $P101["value"]
    unless $I5003 goto if185_else349 
.annotate 'line', 607
    set fb_tmp_60, $P101
    repr_defined $I5004, fb_tmp_60
    unless $I5004 goto if186_else351 
    set $P5015, fb_tmp_60["value"]
    set $P5017, $P5015
    goto if186_end352
  if186_else351:
    null $P5016
    set $P5017, $P5016
  if186_end352:
    unless_null $P5017, vivi_187353
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_187353:
    store_lex "$result", $P5017
.annotate 'line', 609
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if185_end350
  if185_else349:
.annotate 'line', 612
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if185_end350:
    set $P5024, $P5023
  if184_end348:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1381281828.51527") :anon :lex :outer("cuid_34_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 620
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_61 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if188_else354 
.annotate 'line', 621
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_61, $P5003
    repr_defined $I5002, fb_tmp_61
    unless $I5002 goto if189_else356 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_61[$S5002]
    set $P5007, $P5005
    goto if189_end357
  if189_else356:
    null $P5006
    set $P5007, $P5006
  if189_end357:
    unless_null $P5007, vivi_190358
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_190358:
    store_lex "$result", $P5007
    set $P5012, $P5007
    goto if188_end355
  if188_else354:
.annotate 'line', 624
.annotate 'line', 626
    find_lex $P5009, "@name"
    $P5010 = "&join"("::", $P5009)
    set $S5004, $P5010
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5011, $S5003
    die $P5011
    set $P5012, $P5011
  if188_end355:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 635
    .const 'Sub' $P5199 = 'cuid_35_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_47_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_49_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_67_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_78_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_93_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_94_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_130_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_222_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1381281828.51527' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_224_1381281828.51527' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1320
.annotate 'line', 1321
    nqp_get_sc_object $P5001, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1322
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1323
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1324
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1325
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1326
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1327
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1328
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5008."O"(":prec<m=>, :assoc<non>", "%relational")
.annotate 'line', 1329
    nqp_get_sc_object $P5009, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1330
    nqp_get_sc_object $P5010, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1331
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1332
    nqp_get_sc_object $P5012, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1333
    nqp_get_sc_object $P5013, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1334
    nqp_get_sc_object $P5014, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1335
    nqp_get_sc_object $P5015, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 635
    .const 'Sub' $P5016 = 'cuid_35_1381281828.51527' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1381281828.51527' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1381281828.51527' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1381281828.51527' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1381281828.51527' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1381281828.51527' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1381281828.51527' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1381281828.51527' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1381281828.51527' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1381281828.51527' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_47_1381281828.51527' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_49_1381281828.51527' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_50_1381281828.51527' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_51_1381281828.51527' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_52_1381281828.51527' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_53_1381281828.51527' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_54_1381281828.51527' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_55_1381281828.51527' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_56_1381281828.51527' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_57_1381281828.51527' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_58_1381281828.51527' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_59_1381281828.51527' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_60_1381281828.51527' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_61_1381281828.51527' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_62_1381281828.51527' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_63_1381281828.51527' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_64_1381281828.51527' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_65_1381281828.51527' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_67_1381281828.51527' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_68_1381281828.51527' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_69_1381281828.51527' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_70_1381281828.51527' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_71_1381281828.51527' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_72_1381281828.51527' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_73_1381281828.51527' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_74_1381281828.51527' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_75_1381281828.51527' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_76_1381281828.51527' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_77_1381281828.51527' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_78_1381281828.51527' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_79_1381281828.51527' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_80_1381281828.51527' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_81_1381281828.51527' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_82_1381281828.51527' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_83_1381281828.51527' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_84_1381281828.51527' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_85_1381281828.51527' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_86_1381281828.51527' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_87_1381281828.51527' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_88_1381281828.51527' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_89_1381281828.51527' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_90_1381281828.51527' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_93_1381281828.51527' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_94_1381281828.51527' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_95_1381281828.51527' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_96_1381281828.51527' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_97_1381281828.51527' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_98_1381281828.51527' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_99_1381281828.51527' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_100_1381281828.51527' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_101_1381281828.51527' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_102_1381281828.51527' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_103_1381281828.51527' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_104_1381281828.51527' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_105_1381281828.51527' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_106_1381281828.51527' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_107_1381281828.51527' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_108_1381281828.51527' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_109_1381281828.51527' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_110_1381281828.51527' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_111_1381281828.51527' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_112_1381281828.51527' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_113_1381281828.51527' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_114_1381281828.51527' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_115_1381281828.51527' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_116_1381281828.51527' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_117_1381281828.51527' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_118_1381281828.51527' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_119_1381281828.51527' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_120_1381281828.51527' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_121_1381281828.51527' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_122_1381281828.51527' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_123_1381281828.51527' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_124_1381281828.51527' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_125_1381281828.51527' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_126_1381281828.51527' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_127_1381281828.51527' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_128_1381281828.51527' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_129_1381281828.51527' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_130_1381281828.51527' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_131_1381281828.51527' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_132_1381281828.51527' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_134_1381281828.51527' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_135_1381281828.51527' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_136_1381281828.51527' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_137_1381281828.51527' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_138_1381281828.51527' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_139_1381281828.51527' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_140_1381281828.51527' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_141_1381281828.51527' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_142_1381281828.51527' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_143_1381281828.51527' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_144_1381281828.51527' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_145_1381281828.51527' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_146_1381281828.51527' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_147_1381281828.51527' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_148_1381281828.51527' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_149_1381281828.51527' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_150_1381281828.51527' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_151_1381281828.51527' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_152_1381281828.51527' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_153_1381281828.51527' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_154_1381281828.51527' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_155_1381281828.51527' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_156_1381281828.51527' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_157_1381281828.51527' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_158_1381281828.51527' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_159_1381281828.51527' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_160_1381281828.51527' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_161_1381281828.51527' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_162_1381281828.51527' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_163_1381281828.51527' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_164_1381281828.51527' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_165_1381281828.51527' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_166_1381281828.51527' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_167_1381281828.51527' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_168_1381281828.51527' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_169_1381281828.51527' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_170_1381281828.51527' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_171_1381281828.51527' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_172_1381281828.51527' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_173_1381281828.51527' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_174_1381281828.51527' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_175_1381281828.51527' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_176_1381281828.51527' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_177_1381281828.51527' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_178_1381281828.51527' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_179_1381281828.51527' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_180_1381281828.51527' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_181_1381281828.51527' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_182_1381281828.51527' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_183_1381281828.51527' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_184_1381281828.51527' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_185_1381281828.51527' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_186_1381281828.51527' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_187_1381281828.51527' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_188_1381281828.51527' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_189_1381281828.51527' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_190_1381281828.51527' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_191_1381281828.51527' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_192_1381281828.51527' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_193_1381281828.51527' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_194_1381281828.51527' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_195_1381281828.51527' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_196_1381281828.51527' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_197_1381281828.51527' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_198_1381281828.51527' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_199_1381281828.51527' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_200_1381281828.51527' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_201_1381281828.51527' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_202_1381281828.51527' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_203_1381281828.51527' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_204_1381281828.51527' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_205_1381281828.51527' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_206_1381281828.51527' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_207_1381281828.51527' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_208_1381281828.51527' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_209_1381281828.51527' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_210_1381281828.51527' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_211_1381281828.51527' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_212_1381281828.51527' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_213_1381281828.51527' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_214_1381281828.51527' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_215_1381281828.51527' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_216_1381281828.51527' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_217_1381281828.51527' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_218_1381281828.51527' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_219_1381281828.51527' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_220_1381281828.51527' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_221_1381281828.51527' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_222_1381281828.51527' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_223_1381281828.51527' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_224_1381281828.51527' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 636
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_62 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_63 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_64 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_65 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_66 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_67 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_68 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_69 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_70 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_71 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_72 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    .local pmc fb_tmp_75 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_76 
    .local pmc pkg_viv_tmp_19 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback367
    nqp_get_sc_object $P5021, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_11, $P5020
    set fb_tmp_63, pkg_viv_tmp_11
    repr_defined $I5002, fb_tmp_63
    unless $I5002 goto if194_else368 
    set $P5022, fb_tmp_63["%LANG"]
    set $P5024, $P5022
    goto if194_end369
  if194_else368:
    null $P5023
    set $P5024, $P5023
  if194_end369:
    unless_null $P5024, vivi_195370
    new $P5025, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5025
    set $P5024, $P5025
  vivi_195370:
    unless_null $P5024, vivi_196371
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_196371:
    set $P101, $P5024
  fallback367:
    nqp_get_sc_object $P5028, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    set pkg_lookup_tmp_1, $P5028
    get_who $P5029, pkg_lookup_tmp_1
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if198_else374 
    get_who $P5031, pkg_lookup_tmp_1
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if198_end375
  if198_else374:
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5032
  if198_end375:
    get_who $P5027, $P5033
    set fb_tmp_64, $P5027
    repr_defined $I5003, fb_tmp_64
    unless $I5003 goto if197_else372 
    set $P5034, fb_tmp_64["Regex"]
    set $P5036, $P5034
    goto if197_end373
  if197_else372:
    null $P5035
    set $P5036, $P5035
  if197_end373:
    unless_null $P5036, vivi_199376
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5036, $P5037
  vivi_199376:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback377
    nqp_get_sc_object $P5039, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_12, $P5038
    set fb_tmp_65, pkg_viv_tmp_12
    repr_defined $I5005, fb_tmp_65
    unless $I5005 goto if200_else378 
    set $P5040, fb_tmp_65["%LANG"]
    set $P5042, $P5040
    goto if200_end379
  if200_else378:
    null $P5041
    set $P5042, $P5041
  if200_end379:
    unless_null $P5042, vivi_201380
    new $P5043, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5043
    set $P5042, $P5043
  vivi_201380:
    unless_null $P5042, vivi_202381
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_202381:
    set $P101, $P5042
  fallback377:
    nqp_get_sc_object $P5046, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    set pkg_lookup_tmp_2, $P5046
    get_who $P5047, pkg_lookup_tmp_2
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if204_else384 
    get_who $P5049, pkg_lookup_tmp_2
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if204_end385
  if204_else384:
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5051, $P5050
  if204_end385:
    get_who $P5045, $P5051
    set fb_tmp_66, $P5045
    repr_defined $I5006, fb_tmp_66
    unless $I5006 goto if203_else382 
    set $P5052, fb_tmp_66["RegexActions"]
    set $P5054, $P5052
    goto if203_end383
  if203_else382:
    null $P5053
    set $P5054, $P5053
  if203_end383:
    unless_null $P5054, vivi_205386
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5054, $P5055
  vivi_205386:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback387
    nqp_get_sc_object $P5057, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_13, $P5056
    set fb_tmp_67, pkg_viv_tmp_13
    repr_defined $I5008, fb_tmp_67
    unless $I5008 goto if206_else388 
    set $P5058, fb_tmp_67["%LANG"]
    set $P5060, $P5058
    goto if206_end389
  if206_else388:
    null $P5059
    set $P5060, $P5059
  if206_end389:
    unless_null $P5060, vivi_207390
    new $P5061, 'Hash'
    set pkg_viv_tmp_13["%LANG"], $P5061
    set $P5060, $P5061
  vivi_207390:
    unless_null $P5060, vivi_208391
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_208391:
    set $P101, $P5060
  fallback387:
    nqp_get_sc_object $P5063, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    set $P101["MAIN"], $P5063
    unless_null $P101, fallback392
    nqp_get_sc_object $P5065, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5064, $P5065
    set pkg_viv_tmp_14, $P5064
    set fb_tmp_68, pkg_viv_tmp_14
    repr_defined $I5009, fb_tmp_68
    unless $I5009 goto if209_else393 
    set $P5066, fb_tmp_68["%LANG"]
    set $P5068, $P5066
    goto if209_end394
  if209_else393:
    null $P5067
    set $P5068, $P5067
  if209_end394:
    unless_null $P5068, vivi_210395
    new $P5069, 'Hash'
    set pkg_viv_tmp_14["%LANG"], $P5069
    set $P5068, $P5069
  vivi_210395:
    unless_null $P5068, vivi_211396
    die "Contextual %*LANG not found"
    box $P5070, "Contextual %*LANG not found"
    set $P5068, $P5070
  vivi_211396:
    set $P101, $P5068
  fallback392:
    nqp_get_sc_object $P5072, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    set pkg_lookup_tmp_3, $P5072
    get_who $P5073, pkg_lookup_tmp_3
    exists $I5011, $P5073["NQP"]
    unless $I5011 goto if213_else399 
    get_who $P5075, pkg_lookup_tmp_3
    set $P5074, $P5075["NQP"]
    set $P5077, $P5074
    goto if213_end400
  if213_else399:
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5077, $P5076
  if213_end400:
    get_who $P5071, $P5077
    set fb_tmp_69, $P5071
    repr_defined $I5010, fb_tmp_69
    unless $I5010 goto if212_else397 
    set $P5078, fb_tmp_69["Actions"]
    set $P5080, $P5078
    goto if212_end398
  if212_else397:
    null $P5079
    set $P5080, $P5079
  if212_end398:
    unless_null $P5080, vivi_214401
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5080, $P5081
  vivi_214401:
    set $P101["MAIN-actions"], $P5080
    unless_null $P102, fallback407
    nqp_get_sc_object $P5090, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_16, $P5089
    set fb_tmp_71, pkg_viv_tmp_16
    repr_defined $I5013, fb_tmp_71
    unless $I5013 goto if218_else408 
    set $P5091, fb_tmp_71["%HOW"]
    set $P5093, $P5091
    goto if218_end409
  if218_else408:
    null $P5092
    set $P5093, $P5092
  if218_end409:
    unless_null $P5093, vivi_219410
    new $P5094, 'Hash'
    set pkg_viv_tmp_16["%HOW"], $P5094
    set $P5093, $P5094
  vivi_219410:
    unless_null $P5093, vivi_220411
    die "Contextual %*HOW not found"
    box $P5095, "Contextual %*HOW not found"
    set $P5093, $P5095
  vivi_220411:
    set $P102, $P5093
  fallback407:
    get_knowhow $P5096
    set $P102["knowhow"], $P5096
    unless_null $P102, fallback412
    nqp_get_sc_object $P5098, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_17, $P5097
    set fb_tmp_72, pkg_viv_tmp_17
    repr_defined $I5014, fb_tmp_72
    unless $I5014 goto if221_else413 
    set $P5099, fb_tmp_72["%HOW"]
    set $P5101, $P5099
    goto if221_end414
  if221_else413:
    null $P5100
    set $P5101, $P5100
  if221_end414:
    unless_null $P5101, vivi_222415
    new $P5102, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5102
    set $P5101, $P5102
  vivi_222415:
    unless_null $P5101, vivi_223416
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_223416:
    set $P102, $P5101
  fallback412:
    get_knowhow_attribute $P5104
    set $P102["knowhow-attr"], $P5104
    find_dynamic_lex $P5105, "$?FILES"
    set $P103, $P5105
.annotate 'line', 655
    nqp_decontainerize $P5106, _lex_param_0
    $P5107 = $P5106."target"()
    set $S5003, $P5107
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5108, "%*COMPILING"
    unless_null $P5108, fallback423
    nqp_get_sc_object $P5110, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_18, $P5109
    set fb_tmp_75, pkg_viv_tmp_18
    repr_defined $I5017, fb_tmp_75
    unless $I5017 goto if227_else424 
    set $P5111, fb_tmp_75["%COMPILING"]
    set $P5113, $P5111
    goto if227_end425
  if227_else424:
    null $P5112
    set $P5113, $P5112
  if227_end425:
    unless_null $P5113, vivi_228426
    new $P5114, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5114
    set $P5113, $P5114
  vivi_228426:
    unless_null $P5113, vivi_229427
    die "Contextual %*COMPILING not found"
    box $P5115, "Contextual %*COMPILING not found"
    set $P5113, $P5115
  vivi_229427:
    set $P5108, $P5113
  fallback423:
    set fb_tmp_74, $P5108
    repr_defined $I5016, fb_tmp_74
    unless $I5016 goto if226_else421 
    set $P5116, fb_tmp_74["%?OPTIONS"]
    set $P5118, $P5116
    goto if226_end422
  if226_else421:
    null $P5117
    set $P5118, $P5117
  if226_end422:
    unless_null $P5118, vivi_230428
    nqp_get_sc_object $P5119, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5118, $P5119
  vivi_230428:
    set fb_tmp_73, $P5118
    repr_defined $I5015, fb_tmp_73
    unless $I5015 goto if225_else419 
    set $P5120, fb_tmp_73["stable-sc"]
    set $P5122, $P5120
    goto if225_end420
  if225_else419:
    null $P5121
    set $P5122, $P5121
  if225_end420:
    unless_null $P5122, vivi_231429
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5122, $P5123
  vivi_231429:
    unless $P5122 goto if224_else417 
    set $S5006, ""
    goto if224_end418
  if224_else417:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if224_end418:
    concat $S5001, $S5002, $S5006
    box $P5124, $S5001
    set $P104, $P5124
    isnull $I5018, $P103
    unless $I5018 goto if232_else430 
.annotate 'line', 658
    nqp_get_sc_object $P5125, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    $P5126 = $P5125."new"($P104 :named("handle"))
    set $P5129, $P5126
    goto if232_end431
  if232_else430:
.annotate 'line', 659
    nqp_get_sc_object $P5127, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    $P5128 = $P5127."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5129, $P5128
  if232_end431:
    set $P105, $P5129
    box $P5130, ""
    set $P106, $P5130
    box $P5131, ""
    set $P107, $P5131
    box $P5132, ""
    set $P108, $P5132
    box $P5133, 0
    set $P109, $P5133
    box $P5134, 0
    set $P110, $P5134
    box $P5135, 0
    set $P111, $P5135
.annotate 'line', 668
    nqp_decontainerize $P5143, _lex_param_0
    $P5144 = $P5143."comp_unit"()
    .return ($P5144) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 673
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx236_start
    .local string rx236_tgt
    .local int rx236_pos
    .local int rx236_off
    .local int rx236_eos
    .local int rx236_rep
    .local pmc rx236_cur
    .local pmc rx236_curclass
    .local pmc rx236_bstack
    .local pmc rx236_cstack
    rx236_start = self."!cursor_start_all"()
    set rx236_cur, rx236_start[0]
    set rx236_tgt, rx236_start[1]
    set rx236_pos, rx236_start[2]
    set rx236_curclass, rx236_start[3]
    set rx236_bstack, rx236_start[4]
    set $I19, rx236_start[5]
    store_lex unicode:"$\x{a2}", rx236_cur
    length rx236_eos, rx236_tgt
    eq $I19, 1, rx236_restart439
    gt rx236_pos, rx236_eos, rx236_fail440
    repr_get_attr_int $I11, self, rx236_curclass, "$!from"
    ne $I11, -1, rxscan237_done446
    goto rxscan237_scan445
  rxscan237_loop444:
    inc rx236_pos
    gt rx236_pos, rx236_eos, rx236_fail440
    repr_bind_attr_int rx236_cur, rx236_curclass, "$!from", rx236_pos
  rxscan237_scan445:
    nqp_rxmark rx236_bstack, rxscan237_loop444, rx236_pos, 0
  rxscan237_done446:
    repr_bind_attr_int rx236_cur, rx236_curclass, "$!pos", rx236_pos
    $P11 = rx236_cur."ident"()
    repr_get_attr_int $I11, $P11, rx236_curclass, "$!pos"
    lt $I11, 0, rx236_fail440
    repr_get_attr_int rx236_pos, $P11, rx236_curclass, "$!pos"
    nqp_rxmark rx236_bstack, rxquantr239_done449, rx236_pos, 0
  rxquantr239_loop448:
    ge rx236_pos, rx236_eos, rx236_fail440
    substr $S11, rx236_tgt, rx236_pos, 1
    index $I11, ucs4:"-'", $S11
    lt $I11, 0, rx236_fail440
    inc rx236_pos
    repr_bind_attr_int rx236_cur, rx236_curclass, "$!pos", rx236_pos
    $P11 = rx236_cur."ident"()
    repr_get_attr_int $I11, $P11, rx236_curclass, "$!pos"
    lt $I11, 0, rx236_fail440
    repr_get_attr_int rx236_pos, $P11, rx236_curclass, "$!pos"
    nqp_rxpeek $I19, rx236_bstack, rxquantr239_done449
    inc $I19
    inc $I19
    set rx236_rep, rx236_bstack[$I19]
    nqp_rxcommit rx236_bstack, rxquantr239_done449
    inc rx236_rep
    nqp_rxmark rx236_bstack, rxquantr239_done449, rx236_pos, rx236_rep
    goto rxquantr239_loop448
  rxquantr239_done449:
    rx236_cur."!cursor_pass"(rx236_pos, "identifier", 'backtrack'=>1)
    .return (rx236_cur)
  rx236_restart439:
    repr_get_attr_obj rx236_cstack, rx236_cur, rx236_curclass, "$!cstack"
  rx236_fail440:
    unless rx236_bstack, rx236_done438
    pop $I19, rx236_bstack
    if_null rx236_cstack, rx236_cstack_done443
    unless rx236_cstack, rx236_cstack_done443
    dec $I19
    set $P11, rx236_cstack[$I19]
  rx236_cstack_done443:
    pop rx236_rep, rx236_bstack
    pop rx236_pos, rx236_bstack
    pop $I19, rx236_bstack
    lt rx236_pos, -1, rx236_done438
    lt rx236_pos, 0, rx236_fail440
    eq $I19, 0, rx236_fail440
    nqp_islist $I20, rx236_cstack
    unless $I20, rx236_jump441
    elements $I18, rx236_bstack
    le $I18, 0, rx236_cut442
    dec $I18
    set $I18, rx236_bstack[$I18]
  rx236_cut442:
    assign rx236_cstack, $I18
  rx236_jump441:
    jump $I19
  rx236_done438:
    rx236_cur."!cursor_fail"()
    .return (rx236_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 675
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx241_start
    .local string rx241_tgt
    .local int rx241_pos
    .local int rx241_off
    .local int rx241_eos
    .local int rx241_rep
    .local pmc rx241_cur
    .local pmc rx241_curclass
    .local pmc rx241_bstack
    .local pmc rx241_cstack
    rx241_start = self."!cursor_start_all"()
    set rx241_cur, rx241_start[0]
    set rx241_tgt, rx241_start[1]
    set rx241_pos, rx241_start[2]
    set rx241_curclass, rx241_start[3]
    set rx241_bstack, rx241_start[4]
    set $I19, rx241_start[5]
    store_lex unicode:"$\x{a2}", rx241_cur
    length rx241_eos, rx241_tgt
    eq $I19, 1, rx241_restart453
    gt rx241_pos, rx241_eos, rx241_fail454
    repr_get_attr_int $I11, self, rx241_curclass, "$!from"
    ne $I11, -1, rxscan242_done460
    goto rxscan242_scan459
  rxscan242_loop458:
    inc rx241_pos
    gt rx241_pos, rx241_eos, rx241_fail454
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!from", rx241_pos
  rxscan242_scan459:
    nqp_rxmark rx241_bstack, rxscan242_loop458, rx241_pos, 0
  rxscan242_done460:
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!pos", rx241_pos
    $P11 = rx241_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx241_curclass, "$!pos"
    lt $I11, 0, rx241_fail454
    nqp_rxmark rx241_bstack, rxsubrule243_pass461, -1, 0
  rxsubrule243_pass461:
    rx241_cstack = rx241_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx241_pos, $P11, rx241_curclass, "$!pos"
    nqp_rxmark rx241_bstack, rxquantr244_done463, rx241_pos, 0
  rxquantr244_loop462:
    add $I11, rx241_pos, 2
    gt $I11, rx241_eos, rx241_fail454
    substr $S10, rx241_tgt, rx241_pos, 2
    ne $S10, ucs4:"::", rx241_fail454
    add rx241_pos, 2
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!pos", rx241_pos
    $P11 = rx241_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx241_curclass, "$!pos"
    lt $I11, 0, rx241_fail454
    nqp_rxmark rx241_bstack, rxsubrule245_pass464, -1, 0
  rxsubrule245_pass464:
    rx241_cstack = rx241_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx241_pos, $P11, rx241_curclass, "$!pos"
    nqp_rxpeek $I19, rx241_bstack, rxquantr244_done463
    inc $I19
    inc $I19
    set rx241_rep, rx241_bstack[$I19]
    nqp_rxcommit rx241_bstack, rxquantr244_done463
    inc rx241_rep
    nqp_rxmark rx241_bstack, rxquantr244_done463, rx241_pos, rx241_rep
    goto rxquantr244_loop462
  rxquantr244_done463:
    rx241_cur."!cursor_pass"(rx241_pos, "name", 'backtrack'=>1)
    .return (rx241_cur)
  rx241_restart453:
    repr_get_attr_obj rx241_cstack, rx241_cur, rx241_curclass, "$!cstack"
  rx241_fail454:
    unless rx241_bstack, rx241_done452
    pop $I19, rx241_bstack
    if_null rx241_cstack, rx241_cstack_done457
    unless rx241_cstack, rx241_cstack_done457
    dec $I19
    set $P11, rx241_cstack[$I19]
  rx241_cstack_done457:
    pop rx241_rep, rx241_bstack
    pop rx241_pos, rx241_bstack
    pop $I19, rx241_bstack
    lt rx241_pos, -1, rx241_done452
    lt rx241_pos, 0, rx241_fail454
    eq $I19, 0, rx241_fail454
    nqp_islist $I20, rx241_cstack
    unless $I20, rx241_jump455
    elements $I18, rx241_bstack
    le $I18, 0, rx241_cut456
    dec $I18
    set $I18, rx241_bstack[$I18]
  rx241_cut456:
    assign rx241_cstack, $I18
  rx241_jump455:
    jump $I19
  rx241_done452:
    rx241_cur."!cursor_fail"()
    .return (rx241_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 677
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx246_start
    .local string rx246_tgt
    .local int rx246_pos
    .local int rx246_off
    .local int rx246_eos
    .local int rx246_rep
    .local pmc rx246_cur
    .local pmc rx246_curclass
    .local pmc rx246_bstack
    .local pmc rx246_cstack
    rx246_start = self."!cursor_start_all"()
    set rx246_cur, rx246_start[0]
    set rx246_tgt, rx246_start[1]
    set rx246_pos, rx246_start[2]
    set rx246_curclass, rx246_start[3]
    set rx246_bstack, rx246_start[4]
    set $I19, rx246_start[5]
    store_lex unicode:"$\x{a2}", rx246_cur
    length rx246_eos, rx246_tgt
    eq $I19, 1, rx246_restart467
    gt rx246_pos, rx246_eos, rx246_fail468
    repr_get_attr_int $I11, self, rx246_curclass, "$!from"
    ne $I11, -1, rxscan247_done474
    goto rxscan247_scan473
  rxscan247_loop472:
    inc rx246_pos
    gt rx246_pos, rx246_eos, rx246_fail468
    repr_bind_attr_int rx246_cur, rx246_curclass, "$!from", rx246_pos
  rxscan247_scan473:
    nqp_rxmark rx246_bstack, rxscan247_loop472, rx246_pos, 0
  rxscan247_done474:
    repr_bind_attr_int rx246_cur, rx246_curclass, "$!pos", rx246_pos
    $P11 = rx246_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx246_curclass, "$!pos"
    lt $I11, 0, rx246_fail468
    nqp_rxmark rx246_bstack, rxsubrule248_pass475, -1, 0
  rxsubrule248_pass475:
    rx246_cstack = rx246_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx246_pos, $P11, rx246_curclass, "$!pos"
    nqp_rxmark rx246_bstack, rxquantr249_done477, rx246_pos, 0
  rxquantr249_loop476:
    repr_bind_attr_int rx246_cur, rx246_curclass, "$!pos", rx246_pos
    $P11 = rx246_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx246_curclass, "$!pos"
    lt $I11, 0, rx246_fail468
    goto rxsubrule250_pass478
  rxsubrule250_back479:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx246_curclass, "$!pos"
    lt $I11, 0, rx246_fail468
  rxsubrule250_pass478:
    rx246_cstack = rx246_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule250_back479
    push rx246_bstack, $I11
    push rx246_bstack, 0
    push rx246_bstack, rx246_pos
    elements $I11, rx246_cstack
    push rx246_bstack, $I11
    repr_get_attr_int rx246_pos, $P11, rx246_curclass, "$!pos"
    nqp_rxpeek $I19, rx246_bstack, rxquantr249_done477
    inc $I19
    inc $I19
    set rx246_rep, rx246_bstack[$I19]
    nqp_rxcommit rx246_bstack, rxquantr249_done477
    inc rx246_rep
  rxquantr249_done477:
    rx246_cur."!cursor_pass"(rx246_pos, "deflongname", 'backtrack'=>1)
    .return (rx246_cur)
  rx246_restart467:
    repr_get_attr_obj rx246_cstack, rx246_cur, rx246_curclass, "$!cstack"
  rx246_fail468:
    unless rx246_bstack, rx246_done466
    pop $I19, rx246_bstack
    if_null rx246_cstack, rx246_cstack_done471
    unless rx246_cstack, rx246_cstack_done471
    dec $I19
    set $P11, rx246_cstack[$I19]
  rx246_cstack_done471:
    pop rx246_rep, rx246_bstack
    pop rx246_pos, rx246_bstack
    pop $I19, rx246_bstack
    lt rx246_pos, -1, rx246_done466
    lt rx246_pos, 0, rx246_fail468
    eq $I19, 0, rx246_fail468
    nqp_islist $I20, rx246_cstack
    unless $I20, rx246_jump469
    elements $I18, rx246_bstack
    le $I18, 0, rx246_cut470
    dec $I18
    set $I18, rx246_bstack[$I18]
  rx246_cut470:
    assign rx246_cstack, $I18
  rx246_jump469:
    jump $I19
  rx246_done466:
    rx246_cur."!cursor_fail"()
    .return (rx246_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 681
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx251_start
    .local string rx251_tgt
    .local int rx251_pos
    .local int rx251_off
    .local int rx251_eos
    .local int rx251_rep
    .local pmc rx251_cur
    .local pmc rx251_curclass
    .local pmc rx251_bstack
    .local pmc rx251_cstack
    rx251_start = self."!cursor_start_all"()
    set rx251_cur, rx251_start[0]
    set rx251_tgt, rx251_start[1]
    set rx251_pos, rx251_start[2]
    set rx251_curclass, rx251_start[3]
    set rx251_bstack, rx251_start[4]
    set $I19, rx251_start[5]
    store_lex unicode:"$\x{a2}", rx251_cur
    length rx251_eos, rx251_tgt
    eq $I19, 1, rx251_restart482
    gt rx251_pos, rx251_eos, rx251_fail483
    repr_get_attr_int $I11, self, rx251_curclass, "$!from"
    ne $I11, -1, rxscan252_done489
    goto rxscan252_scan488
  rxscan252_loop487:
    inc rx251_pos
    gt rx251_pos, rx251_eos, rx251_fail483
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!from", rx251_pos
  rxscan252_scan488:
    nqp_rxmark rx251_bstack, rxscan252_loop487, rx251_pos, 0
  rxscan252_done489:
    nqp_rxmark rx251_bstack, rxquantr253_done491, rx251_pos, 0
  rxquantr253_loop490:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt254_0493
    nqp_push_label $P11, alt254_1498
    nqp_rxmark rx251_bstack, alt254_end492, -1, 0
    rx251_cur."!alt"(rx251_pos, "alt_nfa__1_1381281830.16661", $P11)
    goto rx251_fail483
  alt254_0493:
    nqp_rxmark rx251_bstack, rxquantr255_done495, rx251_pos, 0
  rxquantr255_loop494:
    ge rx251_pos, rx251_eos, rx251_fail483
    substr $S11, rx251_tgt, rx251_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx251_fail483
    inc rx251_pos
    nqp_rxpeek $I19, rx251_bstack, rxquantr255_done495
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr255_done495
    inc rx251_rep
    nqp_rxmark rx251_bstack, rxquantr255_done495, rx251_pos, rx251_rep
    goto rxquantr255_loop494
  rxquantr255_done495:
    is_cclass $I11, .CCLASS_NEWLINE, rx251_tgt, rx251_pos
    if $I11, rxanchor256_done496
    ne rx251_pos, rx251_eos, rx251_fail483
    eq rx251_pos, 0, rxanchor256_done496
    sub $I11, rx251_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx251_tgt, $I11
    if $I11, rx251_fail483
  rxanchor256_done496:
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."ws"()
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail483
    repr_get_attr_int rx251_pos, $P11, rx251_curclass, "$!pos"
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail483
    goto alt254_end492
  alt254_1498:
    nqp_rxmark rx251_bstack, rxquantr258_done500, rx251_pos, 0
  rxquantr258_loop499:
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."unv"()
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail483
    goto rxsubrule259_pass501
  rxsubrule259_back502:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail483
  rxsubrule259_pass501:
    rx251_cstack = rx251_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule259_back502
    push rx251_bstack, $I11
    push rx251_bstack, 0
    push rx251_bstack, rx251_pos
    elements $I11, rx251_cstack
    push rx251_bstack, $I11
    repr_get_attr_int rx251_pos, $P11, rx251_curclass, "$!pos"
    nqp_rxpeek $I19, rx251_bstack, rxquantr258_done500
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr258_done500
    inc rx251_rep
  rxquantr258_done500:
    is_cclass $I11, .CCLASS_NEWLINE, rx251_tgt, rx251_pos
    if $I11, rxanchor260_done503
    ne rx251_pos, rx251_eos, rx251_fail483
    eq rx251_pos, 0, rxanchor260_done503
    sub $I11, rx251_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx251_tgt, $I11
    if $I11, rx251_fail483
  rxanchor260_done503:
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."ws"()
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail483
    repr_get_attr_int rx251_pos, $P11, rx251_curclass, "$!pos"
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail483
    goto alt254_end492
  alt254_end492:
    nqp_rxpeek $I19, rx251_bstack, rxquantr253_done491
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr253_done491
    inc rx251_rep
  rxquantr253_done491:
    rx251_cur."!cursor_pass"(rx251_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx251_cur)
  rx251_restart482:
    repr_get_attr_obj rx251_cstack, rx251_cur, rx251_curclass, "$!cstack"
  rx251_fail483:
    unless rx251_bstack, rx251_done481
    pop $I19, rx251_bstack
    if_null rx251_cstack, rx251_cstack_done486
    unless rx251_cstack, rx251_cstack_done486
    dec $I19
    set $P11, rx251_cstack[$I19]
  rx251_cstack_done486:
    pop rx251_rep, rx251_bstack
    pop rx251_pos, rx251_bstack
    pop $I19, rx251_bstack
    lt rx251_pos, -1, rx251_done481
    lt rx251_pos, 0, rx251_fail483
    eq $I19, 0, rx251_fail483
    nqp_islist $I20, rx251_cstack
    unless $I20, rx251_jump484
    elements $I18, rx251_bstack
    le $I18, 0, rx251_cut485
    dec $I18
    set $I18, rx251_bstack[$I18]
  rx251_cut485:
    assign rx251_cstack, $I18
  rx251_jump484:
    jump $I19
  rx251_done481:
    rx251_cur."!cursor_fail"()
    .return (rx251_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 688
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx262_start
    .local string rx262_tgt
    .local int rx262_pos
    .local int rx262_off
    .local int rx262_eos
    .local int rx262_rep
    .local pmc rx262_cur
    .local pmc rx262_curclass
    .local pmc rx262_bstack
    .local pmc rx262_cstack
    rx262_start = self."!cursor_start_all"()
    set rx262_cur, rx262_start[0]
    set rx262_tgt, rx262_start[1]
    set rx262_pos, rx262_start[2]
    set rx262_curclass, rx262_start[3]
    set rx262_bstack, rx262_start[4]
    set $I19, rx262_start[5]
    store_lex unicode:"$\x{a2}", rx262_cur
    length rx262_eos, rx262_tgt
    eq $I19, 1, rx262_restart507
    gt rx262_pos, rx262_eos, rx262_fail508
    repr_get_attr_int $I11, self, rx262_curclass, "$!from"
    ne $I11, -1, rxscan263_done514
    goto rxscan263_scan513
  rxscan263_loop512:
    inc rx262_pos
    gt rx262_pos, rx262_eos, rx262_fail508
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!from", rx262_pos
  rxscan263_scan513:
    nqp_rxmark rx262_bstack, rxscan263_loop512, rx262_pos, 0
  rxscan263_done514:
  alt264_0516:
    nqp_rxmark rx262_bstack, alt264_1517, rx262_pos, 0
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail508
    goto alt264_end515
  alt264_1517:
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."ww"()
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    ge $I11, 0, rx262_fail508
    nqp_rxmark rx262_bstack, rxquantr265_done519, rx262_pos, 0
  rxquantr265_loop518:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt266_0521
    nqp_push_label $P11, alt266_1524
    nqp_push_label $P11, alt266_2527
    nqp_push_label $P11, alt266_3530
    nqp_rxmark rx262_bstack, alt266_end520, -1, 0
    rx262_cur."!alt"(rx262_pos, "alt_nfa__2_1381281830.18802", $P11)
    goto rx262_fail508
  alt266_0521:
    nqp_rxmark rx262_bstack, rxquantr267_done523, -1, 0
  rxquantr267_loop522:
    ge rx262_pos, rx262_eos, rx262_fail508
    substr $S11, rx262_tgt, rx262_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx262_fail508
    inc rx262_pos
    nqp_rxpeek $I19, rx262_bstack, rxquantr267_done523
    inc $I19
    inc $I19
    set rx262_rep, rx262_bstack[$I19]
    nqp_rxcommit rx262_bstack, rxquantr267_done523
    inc rx262_rep
    nqp_rxmark rx262_bstack, rxquantr267_done523, rx262_pos, rx262_rep
    goto rxquantr267_loop522
  rxquantr267_done523:
    goto alt266_end520
  alt266_1524:
    add $I11, rx262_pos, 1
    gt $I11, rx262_eos, rx262_fail508
    substr $S10, rx262_tgt, rx262_pos, 1
    ne $S10, ucs4:"#", rx262_fail508
    add rx262_pos, 1
    nqp_rxmark rx262_bstack, rxquantr268_done526, rx262_pos, 0
  rxquantr268_loop525:
    ge rx262_pos, rx262_eos, rx262_fail508
    is_cclass $I11, .CCLASS_NEWLINE, rx262_tgt, rx262_pos
    if $I11, rx262_fail508
    substr $S10, rx262_tgt, rx262_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx262_pos, $I11
    add rx262_pos, 1
    nqp_rxpeek $I19, rx262_bstack, rxquantr268_done526
    inc $I19
    inc $I19
    set rx262_rep, rx262_bstack[$I19]
    nqp_rxcommit rx262_bstack, rxquantr268_done526
    inc rx262_rep
    nqp_rxmark rx262_bstack, rxquantr268_done526, rx262_pos, rx262_rep
    goto rxquantr268_loop525
  rxquantr268_done526:
    goto alt266_end520
  alt266_2527:
    eq rx262_pos, 0, rxanchor269_done528
    ge rx262_pos, rx262_eos, rx262_fail508
    sub $I11, rx262_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx262_tgt, $I11
    unless $I11, rx262_fail508
  rxanchor269_done528:
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail508
    repr_get_attr_int rx262_pos, $P11, rx262_curclass, "$!pos"
    goto alt266_end520
  alt266_3530:
    nqp_rxmark rx262_bstack, rxquantr271_done532, -1, 0
  rxquantr271_loop531:
    ge rx262_pos, rx262_eos, rx262_fail508
    substr $S11, rx262_tgt, rx262_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx262_fail508
    inc rx262_pos
    nqp_rxpeek $I19, rx262_bstack, rxquantr271_done532
    inc $I19
    inc $I19
    set rx262_rep, rx262_bstack[$I19]
    nqp_rxcommit rx262_bstack, rxquantr271_done532
    inc rx262_rep
    nqp_rxmark rx262_bstack, rxquantr271_done532, rx262_pos, rx262_rep
    goto rxquantr271_loop531
  rxquantr271_done532:
    goto alt266_end520
  alt266_end520:
    nqp_rxpeek $I19, rx262_bstack, rxquantr265_done519
    inc $I19
    inc $I19
    set rx262_rep, rx262_bstack[$I19]
    nqp_rxcommit rx262_bstack, rxquantr265_done519
    inc rx262_rep
    nqp_rxmark rx262_bstack, rxquantr265_done519, rx262_pos, rx262_rep
    goto rxquantr265_loop518
  rxquantr265_done519:
    repr_bind_attr_int rx262_cur, rx262_curclass, "$!pos", rx262_pos
    $P11 = rx262_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx262_curclass, "$!pos"
    lt $I11, 0, rx262_fail508
  alt264_end515:
    rx262_cur."!cursor_pass"(rx262_pos, "ws", 'backtrack'=>1)
    .return (rx262_cur)
  rx262_restart507:
    repr_get_attr_obj rx262_cstack, rx262_cur, rx262_curclass, "$!cstack"
  rx262_fail508:
    unless rx262_bstack, rx262_done506
    pop $I19, rx262_bstack
    if_null rx262_cstack, rx262_cstack_done511
    unless rx262_cstack, rx262_cstack_done511
    dec $I19
    set $P11, rx262_cstack[$I19]
  rx262_cstack_done511:
    pop rx262_rep, rx262_bstack
    pop rx262_pos, rx262_bstack
    pop $I19, rx262_bstack
    lt rx262_pos, -1, rx262_done506
    lt rx262_pos, 0, rx262_fail508
    eq $I19, 0, rx262_fail508
    nqp_islist $I20, rx262_cstack
    unless $I20, rx262_jump509
    elements $I18, rx262_bstack
    le $I18, 0, rx262_cut510
    dec $I18
    set $I18, rx262_bstack[$I18]
  rx262_cut510:
    assign rx262_cstack, $I18
  rx262_jump509:
    jump $I19
  rx262_done506:
    rx262_cur."!cursor_fail"()
    .return (rx262_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 699
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1381281828.51527' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx272_start
    .local string rx272_tgt
    .local int rx272_pos
    .local int rx272_off
    .local int rx272_eos
    .local int rx272_rep
    .local pmc rx272_cur
    .local pmc rx272_curclass
    .local pmc rx272_bstack
    .local pmc rx272_cstack
    rx272_start = self."!cursor_start_all"()
    set rx272_cur, rx272_start[0]
    set rx272_tgt, rx272_start[1]
    set rx272_pos, rx272_start[2]
    set rx272_curclass, rx272_start[3]
    set rx272_bstack, rx272_start[4]
    set $I19, rx272_start[5]
    store_lex unicode:"$\x{a2}", rx272_cur
    length rx272_eos, rx272_tgt
    eq $I19, 1, rx272_restart535
    gt rx272_pos, rx272_eos, rx272_fail536
    repr_get_attr_int $I11, self, rx272_curclass, "$!from"
    ne $I11, -1, rxscan273_done542
    goto rxscan273_scan541
  rxscan273_loop540:
    inc rx272_pos
    gt rx272_pos, rx272_eos, rx272_fail536
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!from", rx272_pos
  rxscan273_scan541:
    nqp_rxmark rx272_bstack, rxscan273_loop540, rx272_pos, 0
  rxscan273_done542:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt274_0544
    nqp_push_label $P11, alt274_1562
    nqp_push_label $P11, alt274_2567
    nqp_rxmark rx272_bstack, alt274_end543, -1, 0
    rx272_cur."!alt"(rx272_pos, "alt_nfa__4_1381281830.21252", $P11)
    goto rx272_fail536
  alt274_0544:
    eq rx272_pos, 0, rxanchor275_done545
    ge rx272_pos, rx272_eos, rx272_fail536
    sub $I11, rx272_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx272_tgt, $I11
    unless $I11, rx272_fail536
  rxanchor275_done545:
    .const 'Sub' $P5001 = 'cuid_42_1381281828.51527' 
    capture_lex $P5001
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail536
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail536
    repr_get_attr_int rx272_pos, $P11, rx272_curclass, "$!pos"
    goto alt274_end543
  alt274_1562:
    nqp_rxmark rx272_bstack, rxquantr281_done564, rx272_pos, 0
  rxquantr281_loop563:
    ge rx272_pos, rx272_eos, rx272_fail536
    substr $S11, rx272_tgt, rx272_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx272_fail536
    inc rx272_pos
    nqp_rxpeek $I19, rx272_bstack, rxquantr281_done564
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr281_done564
    inc rx272_rep
    nqp_rxmark rx272_bstack, rxquantr281_done564, rx272_pos, rx272_rep
    goto rxquantr281_loop563
  rxquantr281_done564:
    add $I11, rx272_pos, 1
    gt $I11, rx272_eos, rx272_fail536
    substr $S10, rx272_tgt, rx272_pos, 1
    ne $S10, ucs4:"#", rx272_fail536
    add rx272_pos, 1
    nqp_rxmark rx272_bstack, rxquantr282_done566, rx272_pos, 0
  rxquantr282_loop565:
    ge rx272_pos, rx272_eos, rx272_fail536
    is_cclass $I11, .CCLASS_NEWLINE, rx272_tgt, rx272_pos
    if $I11, rx272_fail536
    substr $S10, rx272_tgt, rx272_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx272_pos, $I11
    add rx272_pos, 1
    nqp_rxpeek $I19, rx272_bstack, rxquantr282_done566
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr282_done566
    inc rx272_rep
    nqp_rxmark rx272_bstack, rxquantr282_done566, rx272_pos, rx272_rep
    goto rxquantr282_loop565
  rxquantr282_done566:
    goto alt274_end543
  alt274_2567:
    nqp_rxmark rx272_bstack, rxquantr283_done569, -1, 0
  rxquantr283_loop568:
    ge rx272_pos, rx272_eos, rx272_fail536
    substr $S11, rx272_tgt, rx272_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx272_fail536
    inc rx272_pos
    nqp_rxpeek $I19, rx272_bstack, rxquantr283_done569
    inc $I19
    inc $I19
    set rx272_rep, rx272_bstack[$I19]
    nqp_rxcommit rx272_bstack, rxquantr283_done569
    inc rx272_rep
    nqp_rxmark rx272_bstack, rxquantr283_done569, rx272_pos, rx272_rep
    goto rxquantr283_loop568
  rxquantr283_done569:
    goto alt274_end543
  alt274_end543:
    nqp_rxcommit rx272_bstack, alt274_end543
    rx272_cur."!cursor_pass"(rx272_pos, "unv", 'backtrack'=>1)
    .return (rx272_cur)
  rx272_restart535:
    repr_get_attr_obj rx272_cstack, rx272_cur, rx272_curclass, "$!cstack"
  rx272_fail536:
    unless rx272_bstack, rx272_done534
    pop $I19, rx272_bstack
    if_null rx272_cstack, rx272_cstack_done539
    unless rx272_cstack, rx272_cstack_done539
    dec $I19
    set $P11, rx272_cstack[$I19]
  rx272_cstack_done539:
    pop rx272_rep, rx272_bstack
    pop rx272_pos, rx272_bstack
    pop $I19, rx272_bstack
    lt rx272_pos, -1, rx272_done534
    lt rx272_pos, 0, rx272_fail536
    eq $I19, 0, rx272_fail536
    nqp_islist $I20, rx272_cstack
    unless $I20, rx272_jump537
    elements $I18, rx272_bstack
    le $I18, 0, rx272_cut538
    dec $I18
    set $I18, rx272_bstack[$I18]
  rx272_cut538:
    assign rx272_cstack, $I18
  rx272_jump537:
    jump $I19
  rx272_done534:
    rx272_cur."!cursor_fail"()
    .return (rx272_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1381281828.51527") :anon :lex :outer("cuid_41_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx276_start
    .local string rx276_tgt
    .local int rx276_pos
    .local int rx276_off
    .local int rx276_eos
    .local int rx276_rep
    .local pmc rx276_cur
    .local pmc rx276_curclass
    .local pmc rx276_bstack
    .local pmc rx276_cstack
    rx276_start = self."!cursor_start_all"()
    set rx276_cur, rx276_start[0]
    set rx276_tgt, rx276_start[1]
    set rx276_pos, rx276_start[2]
    set rx276_curclass, rx276_start[3]
    set rx276_bstack, rx276_start[4]
    set $I19, rx276_start[5]
    store_lex unicode:"$\x{a2}", rx276_cur
    length rx276_eos, rx276_tgt
    eq $I19, 1, rx276_restart548
    gt rx276_pos, rx276_eos, rx276_fail549
    repr_get_attr_int $I11, self, rx276_curclass, "$!from"
    ne $I11, -1, rxscan277_done555
    goto rxscan277_scan554
  rxscan277_loop553:
    inc rx276_pos
    gt rx276_pos, rx276_eos, rx276_fail549
    repr_bind_attr_int rx276_cur, rx276_curclass, "$!from", rx276_pos
  rxscan277_scan554:
    nqp_rxmark rx276_bstack, rxscan277_loop553, rx276_pos, 0
  rxscan277_done555:
    nqp_rxmark rx276_bstack, rxquantr278_done557, rx276_pos, 0
  rxquantr278_loop556:
    ge rx276_pos, rx276_eos, rx276_fail549
    substr $S11, rx276_tgt, rx276_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx276_fail549
    inc rx276_pos
    nqp_rxpeek $I19, rx276_bstack, rxquantr278_done557
    inc $I19
    inc $I19
    set rx276_rep, rx276_bstack[$I19]
    nqp_rxcommit rx276_bstack, rxquantr278_done557
    inc rx276_rep
    nqp_rxmark rx276_bstack, rxquantr278_done557, rx276_pos, rx276_rep
    goto rxquantr278_loop556
  rxquantr278_done557:
    add $I11, rx276_pos, 1
    gt $I11, rx276_eos, rx276_fail549
    substr $S10, rx276_tgt, rx276_pos, 1
    ne $S10, ucs4:"=", rx276_fail549
    add rx276_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt279_0559
    nqp_push_label $P11, alt279_1560
    nqp_rxmark rx276_bstack, alt279_end558, -1, 0
    rx276_cur."!alt"(rx276_pos, "alt_nfa__3_1381281830.20096", $P11)
    goto rx276_fail549
  alt279_0559:
    ge rx276_pos, rx276_eos, rx276_fail549
    is_cclass $I11, .CCLASS_WORD, rx276_tgt, rx276_pos
    unless $I11, rx276_fail549
    add rx276_pos, 1
    goto alt279_end558
  alt279_1560:
    add $I11, rx276_pos, 1
    gt $I11, rx276_eos, rx276_fail549
    substr $S10, rx276_tgt, rx276_pos, 1
    ne $S10, ucs4:"\\", rx276_fail549
    add rx276_pos, 1
    goto alt279_end558
  alt279_end558:
    nqp_rxcommit rx276_bstack, alt279_end558
    rx276_cur."!cursor_pass"(rx276_pos, 'backtrack'=>1)
    .return (rx276_cur)
  rx276_restart548:
    repr_get_attr_obj rx276_cstack, rx276_cur, rx276_curclass, "$!cstack"
  rx276_fail549:
    unless rx276_bstack, rx276_done547
    pop $I19, rx276_bstack
    if_null rx276_cstack, rx276_cstack_done552
    unless rx276_cstack, rx276_cstack_done552
    dec $I19
    set $P11, rx276_cstack[$I19]
  rx276_cstack_done552:
    pop rx276_rep, rx276_bstack
    pop rx276_pos, rx276_bstack
    pop $I19, rx276_bstack
    lt rx276_pos, -1, rx276_done547
    lt rx276_pos, 0, rx276_fail549
    eq $I19, 0, rx276_fail549
    nqp_islist $I20, rx276_cstack
    unless $I20, rx276_jump550
    elements $I18, rx276_bstack
    le $I18, 0, rx276_cut551
    dec $I18
    set $I18, rx276_bstack[$I18]
  rx276_cut551:
    assign rx276_cstack, $I18
  rx276_jump550:
    jump $I19
  rx276_done547:
    rx276_cur."!cursor_fail"()
    .return (rx276_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 708
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_399_1381281828.51527' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_44_1381281828.51527' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx284_start
    .local string rx284_tgt
    .local int rx284_pos
    .local int rx284_off
    .local int rx284_eos
    .local int rx284_rep
    .local pmc rx284_cur
    .local pmc rx284_curclass
    .local pmc rx284_bstack
    .local pmc rx284_cstack
    rx284_start = self."!cursor_start_all"()
    set rx284_cur, rx284_start[0]
    set rx284_tgt, rx284_start[1]
    set rx284_pos, rx284_start[2]
    set rx284_curclass, rx284_start[3]
    set rx284_bstack, rx284_start[4]
    set $I19, rx284_start[5]
    store_lex unicode:"$\x{a2}", rx284_cur
    length rx284_eos, rx284_tgt
    eq $I19, 1, rx284_restart572
    gt rx284_pos, rx284_eos, rx284_fail573
    repr_get_attr_int $I11, self, rx284_curclass, "$!from"
    ne $I11, -1, rxscan285_done579
    goto rxscan285_scan578
  rxscan285_loop577:
    inc rx284_pos
    gt rx284_pos, rx284_eos, rx284_fail573
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!from", rx284_pos
  rxscan285_scan578:
    nqp_rxmark rx284_bstack, rxscan285_loop577, rx284_pos, 0
  rxscan285_done579:
    eq rx284_pos, 0, rxanchor286_done580
    ge rx284_pos, rx284_eos, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, $I11
    unless $I11, rx284_fail573
  rxanchor286_done580:
    nqp_rxmark rx284_bstack, rxquantr287_done582, rx284_pos, 0
  rxquantr287_loop581:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr287_done582
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr287_done582
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr287_done582, rx284_pos, rx284_rep
    goto rxquantr287_loop581
  rxquantr287_done582:
    add $I11, rx284_pos, 1
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 1
    ne $S10, ucs4:"=", rx284_fail573
    add rx284_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt288_0584
    nqp_push_label $P11, alt288_1603
    nqp_push_label $P11, alt288_2622
    nqp_push_label $P11, alt288_3644
    nqp_push_label $P11, alt288_4669
    nqp_rxmark rx284_bstack, alt288_end583, -1, 0
    rx284_cur."!alt"(rx284_pos, "alt_nfa__6_1381281830.31668", $P11)
    goto rx284_fail573
  alt288_0584:
    add $I11, rx284_pos, 5
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 5
    ne $S10, ucs4:"begin", rx284_fail573
    add rx284_pos, 5
    nqp_rxmark rx284_bstack, rxquantr289_done586, -1, 0
  rxquantr289_loop585:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr289_done586
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr289_done586
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr289_done586, rx284_pos, rx284_rep
    goto rxquantr289_loop585
  rxquantr289_done586:
    add $I11, rx284_pos, 3
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 3
    ne $S10, ucs4:"END", rx284_fail573
    add rx284_pos, 3
    le rx284_pos, 0, rx284_fail573
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, $I11
    unless $I11, rx284_fail573
  alt291_0589:
    nqp_rxmark rx284_bstack, alt291_1600, rx284_pos, 0
    set rx284_rep, 0
    nqp_rxmark rx284_bstack, rxquantf292_loop590, rx284_pos, rx284_rep
    goto rxquantf292_done591
  rxquantf292_loop590:
    set $I12, rx284_rep
    ge rx284_pos, rx284_eos, rx284_fail573
    add rx284_pos, 1
    set rx284_rep, $I12
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantf292_loop590, rx284_pos, rx284_rep
  rxquantf292_done591:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    unless $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxmark rx284_bstack, rxquantr293_done594, rx284_pos, 0
  rxquantr293_loop593:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr293_done594
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr293_done594
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr293_done594, rx284_pos, rx284_rep
    goto rxquantr293_loop593
  rxquantr293_done594:
    add $I11, rx284_pos, 4
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 4
    ne $S10, ucs4:"=end", rx284_fail573
    add rx284_pos, 4
    nqp_rxmark rx284_bstack, rxquantr294_done596, -1, 0
  rxquantr294_loop595:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr294_done596
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr294_done596
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr294_done596, rx284_pos, rx284_rep
    goto rxquantr294_loop595
  rxquantr294_done596:
    add $I11, rx284_pos, 3
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 3
    ne $S10, ucs4:"END", rx284_fail573
    add rx284_pos, 3
    le rx284_pos, 0, rx284_fail573
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, $I11
    unless $I11, rx284_fail573
    nqp_rxmark rx284_bstack, rxquantr296_done599, rx284_pos, 0
  rxquantr296_loop598:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxpeek $I19, rx284_bstack, rxquantr296_done599
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr296_done599
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr296_done599, rx284_pos, rx284_rep
    goto rxquantr296_loop598
  rxquantr296_done599:
    goto alt291_end588
  alt291_1600:
    nqp_rxmark rx284_bstack, rxquantr297_done602, rx284_pos, 0
  rxquantr297_loop601:
    ge rx284_pos, rx284_eos, rx284_fail573
    add rx284_pos, 1
    nqp_rxpeek $I19, rx284_bstack, rxquantr297_done602
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr297_done602
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr297_done602, rx284_pos, rx284_rep
    goto rxquantr297_loop601
  rxquantr297_done602:
  alt291_end588:
    goto alt288_end583
  alt288_1603:
    add $I11, rx284_pos, 5
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 5
    ne $S10, ucs4:"begin", rx284_fail573
    add rx284_pos, 5
    nqp_rxmark rx284_bstack, rxquantr298_done605, -1, 0
  rxquantr298_loop604:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr298_done605
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr298_done605
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr298_done605, rx284_pos, rx284_rep
    goto rxquantr298_loop604
  rxquantr298_done605:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    nqp_rxmark rx284_bstack, rxsubrule299_pass606, -1, 0
  rxsubrule299_pass606:
    rx284_cstack = rx284_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
  alt300_0608:
    nqp_rxmark rx284_bstack, alt300_1620, rx284_pos, 0
    set rx284_rep, 0
    nqp_rxmark rx284_bstack, rxquantf301_loop609, rx284_pos, rx284_rep
    goto rxquantf301_done610
  rxquantf301_loop609:
    set $I12, rx284_rep
    ge rx284_pos, rx284_eos, rx284_fail573
    add rx284_pos, 1
    set rx284_rep, $I12
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantf301_loop609, rx284_pos, rx284_rep
  rxquantf301_done610:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    unless $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxmark rx284_bstack, rxquantr302_done613, rx284_pos, 0
  rxquantr302_loop612:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr302_done613
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr302_done613
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr302_done613, rx284_pos, rx284_rep
    goto rxquantr302_loop612
  rxquantr302_done613:
    add $I11, rx284_pos, 4
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 4
    ne $S10, ucs4:"=end", rx284_fail573
    add rx284_pos, 4
    nqp_rxmark rx284_bstack, rxquantr303_done615, -1, 0
  rxquantr303_loop614:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr303_done615
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr303_done615
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr303_done615, rx284_pos, rx284_rep
    goto rxquantr303_loop614
  rxquantr303_done615:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
    le rx284_pos, 0, rx284_fail573
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, $I11
    unless $I11, rx284_fail573
    nqp_rxmark rx284_bstack, rxquantr306_done619, rx284_pos, 0
  rxquantr306_loop618:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxpeek $I19, rx284_bstack, rxquantr306_done619
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr306_done619
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr306_done619, rx284_pos, rx284_rep
    goto rxquantr306_loop618
  rxquantr306_done619:
    goto alt300_end607
  alt300_1620:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
  alt300_end607:
    goto alt288_end583
  alt288_2622:
    add $I11, rx284_pos, 5
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 5
    ne $S10, ucs4:"begin", rx284_fail573
    add rx284_pos, 5
    le rx284_pos, 0, rx284_fail573
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, $I11
    unless $I11, rx284_fail573
    nqp_rxmark rx284_bstack, rxquantr309_done625, rx284_pos, 0
  rxquantr309_loop624:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr309_done625
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr309_done625
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr309_done625, rx284_pos, rx284_rep
    goto rxquantr309_loop624
  rxquantr309_done625:
  alt310_0627:
    nqp_rxmark rx284_bstack, alt310_1629, rx284_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    if $I11, rxanchor311_done628
    ne rx284_pos, rx284_eos, rx284_fail573
    eq rx284_pos, 0, rxanchor311_done628
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, $I11
    if $I11, rx284_fail573
  rxanchor311_done628:
    goto alt310_end626
  alt310_1629:
    nqp_rxmark rx284_bstack, alt310_2630, rx284_pos, 0
    add $I11, rx284_pos, 1
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 1
    ne $S10, ucs4:"#", rx284_fail573
    add rx284_pos, 1
    goto alt310_end626
  alt310_2630:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
  alt310_end626:
  alt313_0633:
    nqp_rxmark rx284_bstack, alt313_1642, rx284_pos, 0
    set rx284_rep, 0
    nqp_rxmark rx284_bstack, rxquantf314_loop634, rx284_pos, rx284_rep
    goto rxquantf314_done635
  rxquantf314_loop634:
    set $I12, rx284_rep
    ge rx284_pos, rx284_eos, rx284_fail573
    add rx284_pos, 1
    set rx284_rep, $I12
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantf314_loop634, rx284_pos, rx284_rep
  rxquantf314_done635:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    unless $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxmark rx284_bstack, rxquantr315_done638, rx284_pos, 0
  rxquantr315_loop637:
    ge rx284_pos, rx284_eos, rx284_fail573
    substr $S11, rx284_tgt, rx284_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx284_fail573
    inc rx284_pos
    nqp_rxpeek $I19, rx284_bstack, rxquantr315_done638
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr315_done638
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr315_done638, rx284_pos, rx284_rep
    goto rxquantr315_loop637
  rxquantr315_done638:
    add $I11, rx284_pos, 4
    gt $I11, rx284_eos, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 4
    ne $S10, ucs4:"=end", rx284_fail573
    add rx284_pos, 4
    le rx284_pos, 0, rx284_fail573
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx284_tgt, $I11
    unless $I11, rx284_fail573
    nqp_rxmark rx284_bstack, rxquantr317_done641, rx284_pos, 0
  rxquantr317_loop640:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxpeek $I19, rx284_bstack, rxquantr317_done641
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr317_done641
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr317_done641, rx284_pos, rx284_rep
    goto rxquantr317_loop640
  rxquantr317_done641:
    goto alt313_end632
  alt313_1642:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
  alt313_end632:
    goto alt288_end583
  alt288_3644:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    nqp_rxmark rx284_bstack, rxsubrule319_pass645, -1, 0
  rxsubrule319_pass645:
    rx284_cstack = rx284_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    store_lex unicode:"$\x{a2}", rx284_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_399_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    set rx284_rep, 0
    nqp_rxmark rx284_bstack, rxquantf320_loop646, rx284_pos, rx284_rep
    goto rxquantf320_done647
  rxquantf320_loop646:
    set $I12, rx284_rep
    ge rx284_pos, rx284_eos, rx284_fail573
    add rx284_pos, 1
    set rx284_rep, $I12
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantf320_loop646, rx284_pos, rx284_rep
  rxquantf320_done647:
    eq rx284_pos, 0, rxanchor321_done649
    ge rx284_pos, rx284_eos, rx284_fail573
    sub $I11, rx284_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, $I11
    unless $I11, rx284_fail573
  rxanchor321_done649:
    .const 'Sub' $P5004 = 'cuid_44_1381281828.51527' 
    capture_lex $P5004
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    goto alt288_end583
  alt288_4669:
  alt329_0671:
    nqp_rxmark rx284_bstack, alt329_1672, rx284_pos, 0
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_WHITESPACE, rx284_tgt, rx284_pos
    unless $I11, rx284_fail573
    add rx284_pos, 1
    goto alt329_end670
  alt329_1672:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail573
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
  alt329_end670:
    nqp_rxmark rx284_bstack, rxquantr331_done675, rx284_pos, 0
  rxquantr331_loop674:
    ge rx284_pos, rx284_eos, rx284_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx284_tgt, rx284_pos
    if $I11, rx284_fail573
    substr $S10, rx284_tgt, rx284_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx284_pos, $I11
    add rx284_pos, 1
    nqp_rxpeek $I19, rx284_bstack, rxquantr331_done675
    inc $I19
    inc $I19
    set rx284_rep, rx284_bstack[$I19]
    nqp_rxcommit rx284_bstack, rxquantr331_done675
    inc rx284_rep
    nqp_rxmark rx284_bstack, rxquantr331_done675, rx284_pos, rx284_rep
    goto rxquantr331_loop674
  rxquantr331_done675:
    goto alt288_end583
  alt288_end583:
    nqp_rxcommit rx284_bstack, alt288_end583
    rx284_cur."!cursor_pass"(rx284_pos, "pod_comment", 'backtrack'=>1)
    .return (rx284_cur)
  rx284_restart572:
    repr_get_attr_obj rx284_cstack, rx284_cur, rx284_curclass, "$!cstack"
  rx284_fail573:
    unless rx284_bstack, rx284_done571
    pop $I19, rx284_bstack
    if_null rx284_cstack, rx284_cstack_done576
    unless rx284_cstack, rx284_cstack_done576
    dec $I19
    set $P11, rx284_cstack[$I19]
  rx284_cstack_done576:
    pop rx284_rep, rx284_bstack
    pop rx284_pos, rx284_bstack
    pop $I19, rx284_bstack
    lt rx284_pos, -1, rx284_done571
    lt rx284_pos, 0, rx284_fail573
    eq $I19, 0, rx284_fail573
    nqp_islist $I20, rx284_cstack
    unless $I20, rx284_jump574
    elements $I18, rx284_bstack
    le $I18, 0, rx284_cut575
    dec $I18
    set $I18, rx284_bstack[$I18]
  rx284_cut575:
    assign rx284_cstack, $I18
  rx284_jump574:
    jump $I19
  rx284_done571:
    rx284_cur."!cursor_fail"()
    .return (rx284_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1381281828.51527") :anon :lex :outer("cuid_43_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 724

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1381281828.51527") :anon :lex :outer("cuid_43_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx322_start
    .local string rx322_tgt
    .local int rx322_pos
    .local int rx322_off
    .local int rx322_eos
    .local int rx322_rep
    .local pmc rx322_cur
    .local pmc rx322_curclass
    .local pmc rx322_bstack
    .local pmc rx322_cstack
    rx322_start = self."!cursor_start_all"()
    set rx322_cur, rx322_start[0]
    set rx322_tgt, rx322_start[1]
    set rx322_pos, rx322_start[2]
    set rx322_curclass, rx322_start[3]
    set rx322_bstack, rx322_start[4]
    set $I19, rx322_start[5]
    store_lex unicode:"$\x{a2}", rx322_cur
    length rx322_eos, rx322_tgt
    eq $I19, 1, rx322_restart652
    gt rx322_pos, rx322_eos, rx322_fail653
    repr_get_attr_int $I11, self, rx322_curclass, "$!from"
    ne $I11, -1, rxscan323_done659
    goto rxscan323_scan658
  rxscan323_loop657:
    inc rx322_pos
    gt rx322_pos, rx322_eos, rx322_fail653
    repr_bind_attr_int rx322_cur, rx322_curclass, "$!from", rx322_pos
  rxscan323_scan658:
    nqp_rxmark rx322_bstack, rxscan323_loop657, rx322_pos, 0
  rxscan323_done659:
    nqp_rxmark rx322_bstack, rxquantr324_done661, rx322_pos, 0
  rxquantr324_loop660:
    ge rx322_pos, rx322_eos, rx322_fail653
    substr $S11, rx322_tgt, rx322_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx322_fail653
    inc rx322_pos
    nqp_rxpeek $I19, rx322_bstack, rxquantr324_done661
    inc $I19
    inc $I19
    set rx322_rep, rx322_bstack[$I19]
    nqp_rxcommit rx322_bstack, rxquantr324_done661
    inc rx322_rep
    nqp_rxmark rx322_bstack, rxquantr324_done661, rx322_pos, rx322_rep
    goto rxquantr324_loop660
  rxquantr324_done661:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt325_0663
    nqp_push_label $P11, alt325_1668
    nqp_rxmark rx322_bstack, alt325_end662, -1, 0
    rx322_cur."!alt"(rx322_pos, "alt_nfa__5_1381281830.30132", $P11)
    goto rx322_fail653
  alt325_0663:
    add $I11, rx322_pos, 1
    gt $I11, rx322_eos, rx322_fail653
    substr $S10, rx322_tgt, rx322_pos, 1
    ne $S10, ucs4:"=", rx322_fail653
    add rx322_pos, 1
    nqp_rxmark rx322_bstack, rxquantr326_done665, rx322_pos, 0
  rxquantr326_loop664:
    add $I11, rx322_pos, 3
    gt $I11, rx322_eos, rx322_fail653
    substr $S10, rx322_tgt, rx322_pos, 3
    ne $S10, ucs4:"cut", rx322_fail653
    add rx322_pos, 3
    le rx322_pos, 0, rx322_fail653
    is_cclass $I11, .CCLASS_WORD, rx322_tgt, rx322_pos
    if $I11, rx322_fail653
    sub $I11, rx322_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx322_tgt, $I11
    unless $I11, rx322_fail653
    repr_bind_attr_int rx322_cur, rx322_curclass, "$!pos", rx322_pos
    $P11 = rx322_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx322_curclass, "$!pos"
    lt $I11, 0, rx322_fail653
    repr_get_attr_int rx322_pos, $P11, rx322_curclass, "$!pos"
    nqp_rxpeek $I19, rx322_bstack, rxquantr326_done665
    inc $I19
    inc $I19
    set rx322_rep, rx322_bstack[$I19]
    nqp_rxcommit rx322_bstack, rxquantr326_done665
    inc rx322_rep
  rxquantr326_done665:
    goto alt325_end662
  alt325_1668:
    ge rx322_pos, rx322_eos, rx322_fail653
    is_cclass $I11, .CCLASS_NEWLINE, rx322_tgt, rx322_pos
    unless $I11, rx322_fail653
    substr $S10, rx322_tgt, rx322_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx322_pos, $I11
    add rx322_pos, 1
    goto alt325_end662
  alt325_end662:
    nqp_rxcommit rx322_bstack, alt325_end662
    rx322_cur."!cursor_pass"(rx322_pos, 'backtrack'=>1)
    .return (rx322_cur)
  rx322_restart652:
    repr_get_attr_obj rx322_cstack, rx322_cur, rx322_curclass, "$!cstack"
  rx322_fail653:
    unless rx322_bstack, rx322_done651
    pop $I19, rx322_bstack
    if_null rx322_cstack, rx322_cstack_done656
    unless rx322_cstack, rx322_cstack_done656
    dec $I19
    set $P11, rx322_cstack[$I19]
  rx322_cstack_done656:
    pop rx322_rep, rx322_bstack
    pop rx322_pos, rx322_bstack
    pop $I19, rx322_bstack
    lt rx322_pos, -1, rx322_done651
    lt rx322_pos, 0, rx322_fail653
    eq $I19, 0, rx322_fail653
    nqp_islist $I20, rx322_cstack
    unless $I20, rx322_jump654
    elements $I18, rx322_bstack
    le $I18, 0, rx322_cut655
    dec $I18
    set $I18, rx322_bstack[$I18]
  rx322_cut655:
    assign rx322_cstack, $I18
  rx322_jump654:
    jump $I19
  rx322_done651:
    rx322_cur."!cursor_fail"()
    .return (rx322_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 739
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_400_1381281828.51527' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_401_1381281828.51527' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_403_1381281828.51527' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_404_1381281828.51527' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_91 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx332_start
    .local string rx332_tgt
    .local int rx332_pos
    .local int rx332_off
    .local int rx332_eos
    .local int rx332_rep
    .local pmc rx332_cur
    .local pmc rx332_curclass
    .local pmc rx332_bstack
    .local pmc rx332_cstack
    rx332_start = self."!cursor_start_all"()
    set rx332_cur, rx332_start[0]
    set rx332_tgt, rx332_start[1]
    set rx332_pos, rx332_start[2]
    set rx332_curclass, rx332_start[3]
    set rx332_bstack, rx332_start[4]
    set $I19, rx332_start[5]
    store_lex unicode:"$\x{a2}", rx332_cur
    length rx332_eos, rx332_tgt
    eq $I19, 1, rx332_restart678
    gt rx332_pos, rx332_eos, rx332_fail679
    repr_get_attr_int $I11, self, rx332_curclass, "$!from"
    ne $I11, -1, rxscan333_done685
    goto rxscan333_scan684
  rxscan333_loop683:
    inc rx332_pos
    gt rx332_pos, rx332_eos, rx332_fail679
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!from", rx332_pos
  rxscan333_scan684:
    nqp_rxmark rx332_bstack, rxscan333_loop683, rx332_pos, 0
  rxscan333_done685:
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    unless_null $P103, fallback686
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5010, $P5011
    set fb_tmp_77, $P5010
    repr_defined $I5001, fb_tmp_77
    unless $I5001 goto if334_else687 
    set $P5012, fb_tmp_77["$MAIN_SUB"]
    set $P5014, $P5012
    goto if334_end688
  if334_else687:
    null $P5013
    set $P5014, $P5013
  if334_end688:
    unless_null $P5014, vivi_335689
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_335689:
    unless_null $P5014, vivi_336690
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_336690:
    set $P103, $P5014
  fallback686:
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
.annotate 'line', 744
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback691
    nqp_get_sc_object $P5019, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5018, $P5019
    set fb_tmp_78, $P5018
    repr_defined $I5002, fb_tmp_78
    unless $I5002 goto if337_else692 
    set $P5020, fb_tmp_78["$W"]
    set $P5022, $P5020
    goto if337_end693
  if337_else692:
    null $P5021
    set $P5022, $P5021
  if337_end693:
    unless_null $P5022, vivi_338694
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_338694:
    unless_null $P5022, vivi_339695
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_339695:
    set $P5017, $P5022
  fallback691:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
.annotate 'line', 748
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback696
    nqp_get_sc_object $P5028, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5027, $P5028
    set fb_tmp_79, $P5027
    repr_defined $I5003, fb_tmp_79
    unless $I5003 goto if340_else697 
    set $P5029, fb_tmp_79["$W"]
    set $P5031, $P5029
    goto if340_end698
  if340_else697:
    null $P5030
    set $P5031, $P5030
  if340_end698:
    unless_null $P5031, vivi_341699
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_341699:
    unless_null $P5031, vivi_342700
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_342700:
    set $P5026, $P5031
  fallback696:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback703
    nqp_get_sc_object $P5036, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_20, $P5035
    set fb_tmp_81, pkg_viv_tmp_20
    repr_defined $I5005, fb_tmp_81
    unless $I5005 goto if344_else704 
    set $P5037, fb_tmp_81["%HOW"]
    set $P5039, $P5037
    goto if344_end705
  if344_else704:
    null $P5038
    set $P5039, $P5038
  if344_end705:
    unless_null $P5039, vivi_345706
    new $P5040, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5040
    set $P5039, $P5040
  vivi_345706:
    unless_null $P5039, vivi_346707
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_346707:
    set $P5034, $P5039
  fallback703:
    set fb_tmp_80, $P5034
    repr_defined $I5004, fb_tmp_80
    unless $I5004 goto if343_else701 
    set $P5042, fb_tmp_80["knowhow"]
    set $P5044, $P5042
    goto if343_end702
  if343_else701:
    null $P5043
    set $P5044, $P5043
  if343_end702:
    unless_null $P5044, vivi_347708
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5044, $P5045
  vivi_347708:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_400_1381281828.51527' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    unless_null $P105, fallback734
    nqp_get_sc_object $P5051, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5050, $P5051
    set fb_tmp_87, $P5050
    repr_defined $I5006, fb_tmp_87
    unless $I5006 goto if363_else735 
    set $P5052, fb_tmp_87["$GLOBALish"]
    set $P5054, $P5052
    goto if363_end736
  if363_else735:
    null $P5053
    set $P5054, $P5053
  if363_end736:
    unless_null $P5054, vivi_364737
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5054, $P5055
  vivi_364737:
    unless_null $P5054, vivi_365738
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_365738:
    set $P105, $P5054
  fallback734:
    set $P106, $P105
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_401_1381281828.51527' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    unless_null $P107, fallback754
    nqp_get_sc_object $P5061, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5060, $P5061
    set fb_tmp_91, $P5060
    repr_defined $I5007, fb_tmp_91
    unless $I5007 goto if375_else755 
    set $P5062, fb_tmp_91["$EXPORT"]
    set $P5064, $P5062
    goto if375_end756
  if375_else755:
    null $P5063
    set $P5064, $P5063
  if375_end756:
    unless_null $P5064, vivi_376757
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5064, $P5065
  vivi_376757:
    unless_null $P5064, vivi_377758
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_377758:
    set $P107, $P5064
  fallback754:
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_403_1381281828.51527' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    store_lex unicode:"$\x{a2}", rx332_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_404_1381281828.51527' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    $P11 = rx332_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx332_curclass, "$!pos"
    lt $I11, 0, rx332_fail679
    repr_get_attr_int rx332_pos, $P11, rx332_curclass, "$!pos"
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    $P11 = rx332_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx332_curclass, "$!pos"
    lt $I11, 0, rx332_fail679
    nqp_rxmark rx332_bstack, rxsubrule424_pass834, -1, 0
  rxsubrule424_pass834:
    rx332_cstack = rx332_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx332_pos, $P11, rx332_curclass, "$!pos"
  alt425_0836:
    nqp_rxmark rx332_bstack, alt425_1838, rx332_pos, 0
    lt rx332_pos, rx332_eos, rx332_fail679
    goto alt425_end835
  alt425_1838:
    repr_bind_attr_int rx332_cur, rx332_curclass, "$!pos", rx332_pos
    $P11 = rx332_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx332_curclass, "$!pos"
    lt $I11, 0, rx332_fail679
    repr_get_attr_int rx332_pos, $P11, rx332_curclass, "$!pos"
  alt425_end835:
    rx332_cur."!cursor_pass"(rx332_pos, "comp_unit", 'backtrack'=>1)
    .return (rx332_cur)
  rx332_restart678:
    repr_get_attr_obj rx332_cstack, rx332_cur, rx332_curclass, "$!cstack"
  rx332_fail679:
    unless rx332_bstack, rx332_done677
    pop $I19, rx332_bstack
    if_null rx332_cstack, rx332_cstack_done682
    unless rx332_cstack, rx332_cstack_done682
    dec $I19
    set $P11, rx332_cstack[$I19]
  rx332_cstack_done682:
    pop rx332_rep, rx332_bstack
    pop rx332_pos, rx332_bstack
    pop $I19, rx332_bstack
    lt rx332_pos, -1, rx332_done677
    lt rx332_pos, 0, rx332_fail679
    eq $I19, 0, rx332_fail679
    nqp_islist $I20, rx332_cstack
    unless $I20, rx332_jump680
    elements $I18, rx332_bstack
    le $I18, 0, rx332_cut681
    dec $I18
    set $I18, rx332_bstack[$I18]
  rx332_cut681:
    assign rx332_cstack, $I18
  rx332_jump680:
    jump $I19
  rx332_done677:
    rx332_cur."!cursor_fail"()
    .return (rx332_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1381281828.51527") :anon :lex :outer("cuid_45_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 749
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
.annotate 'line', 750
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback709
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_82, $P5003
    repr_defined $I5001, fb_tmp_82
    unless $I5001 goto if348_else710 
    set $P5005, fb_tmp_82["$GLOBALish"]
    set $P5007, $P5005
    goto if348_end711
  if348_else710:
    null $P5006
    set $P5007, $P5006
  if348_end711:
    unless_null $P5007, vivi_349712
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_349712:
    unless_null $P5007, vivi_350713
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_350713:
    set $P5002, $P5007
  fallback709:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback714
    nqp_get_sc_object $P5012, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5011, $P5012
    set fb_tmp_83, $P5011
    repr_defined $I5002, fb_tmp_83
    unless $I5002 goto if351_else715 
    set $P5013, fb_tmp_83["$GLOBALish"]
    set $P5015, $P5013
    goto if351_end716
  if351_else715:
    null $P5014
    set $P5015, $P5014
  if351_end716:
    unless_null $P5015, vivi_352717
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_352717:
    unless_null $P5015, vivi_353718
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_353718:
    set $P5010, $P5015
  fallback714:
    $P5001."compose"($P5010)
.annotate 'line', 751
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback719
    nqp_get_sc_object $P5020, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5019, $P5020
    set fb_tmp_84, $P5019
    repr_defined $I5003, fb_tmp_84
    unless $I5003 goto if354_else720 
    set $P5021, fb_tmp_84["$W"]
    set $P5023, $P5021
    goto if354_end721
  if354_else720:
    null $P5022
    set $P5023, $P5022
  if354_end721:
    unless_null $P5023, vivi_355722
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_355722:
    unless_null $P5023, vivi_356723
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_356723:
    set $P5018, $P5023
  fallback719:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback724
    nqp_get_sc_object $P5028, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5027, $P5028
    set fb_tmp_85, $P5027
    repr_defined $I5004, fb_tmp_85
    unless $I5004 goto if357_else725 
    set $P5029, fb_tmp_85["$UNIT"]
    set $P5031, $P5029
    goto if357_end726
  if357_else725:
    null $P5030
    set $P5031, $P5030
  if357_end726:
    unless_null $P5031, vivi_358727
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_358727:
    unless_null $P5031, vivi_359728
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_359728:
    set $P5026, $P5031
  fallback724:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback729
    nqp_get_sc_object $P5036, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5035, $P5036
    set fb_tmp_86, $P5035
    repr_defined $I5005, fb_tmp_86
    unless $I5005 goto if360_else730 
    set $P5037, fb_tmp_86["$GLOBALish"]
    set $P5039, $P5037
    goto if360_end731
  if360_else730:
    null $P5038
    set $P5039, $P5038
  if360_end731:
    unless_null $P5039, vivi_361732
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5039, $P5040
  vivi_361732:
    unless_null $P5039, vivi_362733
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_362733:
    set $P5034, $P5039
  fallback729:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1381281828.51527") :anon :lex :outer("cuid_45_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 756
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback739
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_88, $P5002
    repr_defined $I5001, fb_tmp_88
    unless $I5001 goto if366_else740 
    set $P5004, fb_tmp_88["$W"]
    set $P5006, $P5004
    goto if366_end741
  if366_else740:
    null $P5005
    set $P5006, $P5005
  if366_end741:
    unless_null $P5006, vivi_367742
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_367742:
    unless_null $P5006, vivi_368743
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_368743:
    set $P5001, $P5006
  fallback739:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback744
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5010, $P5011
    set fb_tmp_89, $P5010
    repr_defined $I5002, fb_tmp_89
    unless $I5002 goto if369_else745 
    set $P5012, fb_tmp_89["$UNIT"]
    set $P5014, $P5012
    goto if369_end746
  if369_else745:
    null $P5013
    set $P5014, $P5013
  if369_end746:
    unless_null $P5014, vivi_370747
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_370747:
    unless_null $P5014, vivi_371748
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_371748:
    set $P5009, $P5014
  fallback744:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback749
    nqp_get_sc_object $P5019, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5018, $P5019
    set fb_tmp_90, $P5018
    repr_defined $I5003, fb_tmp_90
    unless $I5003 goto if372_else750 
    set $P5020, fb_tmp_90["$PACKAGE"]
    set $P5022, $P5020
    goto if372_end751
  if372_else750:
    null $P5021
    set $P5022, $P5021
  if372_end751:
    unless_null $P5022, vivi_373752
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_373752:
    unless_null $P5022, vivi_374753
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_374753:
    set $P5017, $P5022
  fallback749:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1381281828.51527") :anon :lex :outer("cuid_45_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 760
    .const 'Sub' $P5021 = 'cuid_402_1381281828.51527' 
    capture_lex $P5021 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    .local pmc pkg_viv_tmp_21 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback765
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_94, pkg_viv_tmp_21
    repr_defined $I5004, fb_tmp_94
    unless $I5004 goto if381_else766 
    set $P5004, fb_tmp_94["%COMPILING"]
    set $P5006, $P5004
    goto if381_end767
  if381_else766:
    null $P5005
    set $P5006, $P5005
  if381_end767:
    unless_null $P5006, vivi_382768
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_382768:
    unless_null $P5006, vivi_383769
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_383769:
    set $P5001, $P5006
  fallback765:
    set fb_tmp_93, $P5001
    repr_defined $I5003, fb_tmp_93
    unless $I5003 goto if380_else763 
    set $P5009, fb_tmp_93["%?OPTIONS"]
    set $P5011, $P5009
    goto if380_end764
  if380_else763:
    null $P5010
    set $P5011, $P5010
  if380_end764:
    unless_null $P5011, vivi_384770
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_384770:
    set fb_tmp_92, $P5011
    repr_defined $I5002, fb_tmp_92
    unless $I5002 goto if379_else761 
    set $P5013, fb_tmp_92["setting"]
    set $P5015, $P5013
    goto if379_end762
  if379_else761:
    null $P5014
    set $P5015, $P5014
  if379_end762:
    unless_null $P5015, vivi_385771
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_385771:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless378_end760 
    .const 'Sub' $P5017 = 'cuid_402_1381281828.51527' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless378_end760:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1381281828.51527") :anon :lex :outer("cuid_403_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 761
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_106 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 762
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback772
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_95, $P5003
    repr_defined $I5001, fb_tmp_95
    unless $I5001 goto if386_else773 
    set $P5005, fb_tmp_95["$W"]
    set $P5007, $P5005
    goto if386_end774
  if386_else773:
    null $P5006
    set $P5007, $P5006
  if386_end774:
    unless_null $P5007, vivi_387775
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_387775:
    unless_null $P5007, vivi_388776
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_388776:
    set $P5002, $P5007
  fallback772:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback779
    nqp_get_sc_object $P5012, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_22, $P5011
    set fb_tmp_97, pkg_viv_tmp_22
    repr_defined $I5003, fb_tmp_97
    unless $I5003 goto if390_else780 
    set $P5013, fb_tmp_97["%HOW"]
    set $P5015, $P5013
    goto if390_end781
  if390_else780:
    null $P5014
    set $P5015, $P5014
  if390_end781:
    unless_null $P5015, vivi_391782
    new $P5016, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5016
    set $P5015, $P5016
  vivi_391782:
    unless_null $P5015, vivi_392783
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_392783:
    set $P5010, $P5015
  fallback779:
    set fb_tmp_96, $P5010
    repr_defined $I5002, fb_tmp_96
    unless $I5002 goto if389_else777 
    set $P5018, fb_tmp_96["knowhow"]
    set $P5020, $P5018
    goto if389_end778
  if389_else777:
    null $P5019
    set $P5020, $P5019
  if389_end778:
    unless_null $P5020, vivi_393784
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_393784:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 763
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback785
    nqp_get_sc_object $P5026, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5025, $P5026
    set fb_tmp_98, $P5025
    repr_defined $I5004, fb_tmp_98
    unless $I5004 goto if394_else786 
    set $P5027, fb_tmp_98["$EXPORT"]
    set $P5029, $P5027
    goto if394_end787
  if394_else786:
    null $P5028
    set $P5029, $P5028
  if394_end787:
    unless_null $P5029, vivi_395788
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5029, $P5030
  vivi_395788:
    unless_null $P5029, vivi_396789
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_396789:
    set $P5024, $P5029
  fallback785:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback790
    nqp_get_sc_object $P5034, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5033, $P5034
    set fb_tmp_99, $P5033
    repr_defined $I5005, fb_tmp_99
    unless $I5005 goto if397_else791 
    set $P5035, fb_tmp_99["$EXPORT"]
    set $P5037, $P5035
    goto if397_end792
  if397_else791:
    null $P5036
    set $P5037, $P5036
  if397_end792:
    unless_null $P5037, vivi_398793
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_398793:
    unless_null $P5037, vivi_399794
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_399794:
    set $P5032, $P5037
  fallback790:
    $P5023."compose"($P5032)
.annotate 'line', 764
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback795
    nqp_get_sc_object $P5042, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5041, $P5042
    set fb_tmp_100, $P5041
    repr_defined $I5006, fb_tmp_100
    unless $I5006 goto if400_else796 
    set $P5043, fb_tmp_100["$W"]
    set $P5045, $P5043
    goto if400_end797
  if400_else796:
    null $P5044
    set $P5045, $P5044
  if400_end797:
    unless_null $P5045, vivi_401798
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  vivi_401798:
    unless_null $P5045, vivi_402799
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_402799:
    set $P5040, $P5045
  fallback795:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback800
    nqp_get_sc_object $P5050, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5049, $P5050
    set fb_tmp_101, $P5049
    repr_defined $I5007, fb_tmp_101
    unless $I5007 goto if403_else801 
    set $P5051, fb_tmp_101["$UNIT"]
    set $P5053, $P5051
    goto if403_end802
  if403_else801:
    null $P5052
    set $P5053, $P5052
  if403_end802:
    unless_null $P5053, vivi_404803
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5053, $P5054
  vivi_404803:
    unless_null $P5053, vivi_405804
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_405804:
    set $P5048, $P5053
  fallback800:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback805
    nqp_get_sc_object $P5058, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5057, $P5058
    set fb_tmp_102, $P5057
    repr_defined $I5008, fb_tmp_102
    unless $I5008 goto if406_else806 
    set $P5059, fb_tmp_102["$EXPORT"]
    set $P5061, $P5059
    goto if406_end807
  if406_else806:
    null $P5060
    set $P5061, $P5060
  if406_end807:
    unless_null $P5061, vivi_407808
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5061, $P5062
  vivi_407808:
    unless_null $P5061, vivi_408809
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_408809:
    set $P5056, $P5061
  fallback805:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 765
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback810
    nqp_get_sc_object $P5066, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5065, $P5066
    set fb_tmp_103, $P5065
    repr_defined $I5009, fb_tmp_103
    unless $I5009 goto if409_else811 
    set $P5067, fb_tmp_103["$W"]
    set $P5069, $P5067
    goto if409_end812
  if409_else811:
    null $P5068
    set $P5069, $P5068
  if409_end812:
    unless_null $P5069, vivi_410813
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5069, $P5070
  vivi_410813:
    unless_null $P5069, vivi_411814
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_411814:
    set $P5064, $P5069
  fallback810:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback817
    nqp_get_sc_object $P5074, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_23, $P5073
    set fb_tmp_105, pkg_viv_tmp_23
    repr_defined $I5011, fb_tmp_105
    unless $I5011 goto if413_else818 
    set $P5075, fb_tmp_105["%HOW"]
    set $P5077, $P5075
    goto if413_end819
  if413_else818:
    null $P5076
    set $P5077, $P5076
  if413_end819:
    unless_null $P5077, vivi_414820
    new $P5078, 'Hash'
    set pkg_viv_tmp_23["%HOW"], $P5078
    set $P5077, $P5078
  vivi_414820:
    unless_null $P5077, vivi_415821
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_415821:
    set $P5072, $P5077
  fallback817:
    set fb_tmp_104, $P5072
    repr_defined $I5010, fb_tmp_104
    unless $I5010 goto if412_else815 
    set $P5080, fb_tmp_104["knowhow"]
    set $P5082, $P5080
    goto if412_end816
  if412_else815:
    null $P5081
    set $P5082, $P5081
  if412_end816:
    unless_null $P5082, vivi_416822
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_416822:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 766
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback823
    nqp_get_sc_object $P5089, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5088, $P5089
    set fb_tmp_106, $P5088
    repr_defined $I5012, fb_tmp_106
    unless $I5012 goto if417_else824 
    set $P5090, fb_tmp_106["$EXPORT"]
    set $P5092, $P5090
    goto if417_end825
  if417_else824:
    null $P5091
    set $P5092, $P5091
  if417_end825:
    unless_null $P5092, vivi_418826
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5092, $P5093
  vivi_418826:
    unless_null $P5092, vivi_419827
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_419827:
    set $P5087, $P5092
  fallback823:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1381281828.51527") :anon :lex :outer("cuid_45_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 771
    .local pmc fb_tmp_107 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback828
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_107, $P5002
    repr_defined $I5001, fb_tmp_107
    unless $I5001 goto if420_else829 
    set $P5004, fb_tmp_107["$W"]
    set $P5006, $P5004
    goto if420_end830
  if420_else829:
    null $P5005
    set $P5006, $P5005
  if420_end830:
    unless_null $P5006, vivi_421831
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_421831:
    unless_null $P5006, vivi_422832
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_422832:
    set $P5001, $P5006
  fallback828:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 779
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx428_start
    .local string rx428_tgt
    .local int rx428_pos
    .local int rx428_off
    .local int rx428_eos
    .local int rx428_rep
    .local pmc rx428_cur
    .local pmc rx428_curclass
    .local pmc rx428_bstack
    .local pmc rx428_cstack
    rx428_start = self."!cursor_start_all"()
    set rx428_cur, rx428_start[0]
    set rx428_tgt, rx428_start[1]
    set rx428_pos, rx428_start[2]
    set rx428_curclass, rx428_start[3]
    set rx428_bstack, rx428_start[4]
    set $I19, rx428_start[5]
    store_lex unicode:"$\x{a2}", rx428_cur
    length rx428_eos, rx428_tgt
    eq $I19, 1, rx428_restart842
    gt rx428_pos, rx428_eos, rx428_fail843
    repr_get_attr_int $I11, self, rx428_curclass, "$!from"
    ne $I11, -1, rxscan429_done849
    goto rxscan429_scan848
  rxscan429_loop847:
    inc rx428_pos
    gt rx428_pos, rx428_eos, rx428_fail843
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!from", rx428_pos
  rxscan429_scan848:
    nqp_rxmark rx428_bstack, rxscan429_loop847, rx428_pos, 0
  rxscan429_done849:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt430_0851
    nqp_push_label $P11, alt430_1855
    nqp_rxmark rx428_bstack, alt430_end850, -1, 0
    rx428_cur."!alt"(rx428_pos, "alt_nfa__7_1381281830.42617", $P11)
    goto rx428_fail843
  alt430_0851:
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."ws"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    lt rx428_pos, rx428_eos, rx428_fail843
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."ws"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    goto alt430_end850
  alt430_1855:
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."ws"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    nqp_rxmark rx428_bstack, rxquantr435_done858, rx428_pos, 0
  rxquantr435_loop857:
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."statement"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    nqp_rxmark rx428_bstack, rxsubrule436_pass859, -1, 0
  rxsubrule436_pass859:
    rx428_cstack = rx428_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."ws"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    nqp_rxpeek $I19, rx428_bstack, rxquantr435_done858
    inc $I19
    inc $I19
    set rx428_rep, rx428_bstack[$I19]
    nqp_rxcommit rx428_bstack, rxquantr435_done858
    inc rx428_rep
    nqp_rxmark rx428_bstack, rxquantr435_done858, rx428_pos, rx428_rep
    goto rxquantr435_loop857
  rxquantr435_done858:
    repr_bind_attr_int rx428_cur, rx428_curclass, "$!pos", rx428_pos
    $P11 = rx428_cur."ws"()
    repr_get_attr_int $I11, $P11, rx428_curclass, "$!pos"
    lt $I11, 0, rx428_fail843
    repr_get_attr_int rx428_pos, $P11, rx428_curclass, "$!pos"
    goto alt430_end850
  alt430_end850:
    rx428_cur."!cursor_pass"(rx428_pos, "statementlist", 'backtrack'=>1)
    .return (rx428_cur)
  rx428_restart842:
    repr_get_attr_obj rx428_cstack, rx428_cur, rx428_curclass, "$!cstack"
  rx428_fail843:
    unless rx428_bstack, rx428_done841
    pop $I19, rx428_bstack
    if_null rx428_cstack, rx428_cstack_done846
    unless rx428_cstack, rx428_cstack_done846
    dec $I19
    set $P11, rx428_cstack[$I19]
  rx428_cstack_done846:
    pop rx428_rep, rx428_bstack
    pop rx428_pos, rx428_bstack
    pop $I19, rx428_bstack
    lt rx428_pos, -1, rx428_done841
    lt rx428_pos, 0, rx428_fail843
    eq $I19, 0, rx428_fail843
    nqp_islist $I20, rx428_cstack
    unless $I20, rx428_jump844
    elements $I18, rx428_bstack
    le $I18, 0, rx428_cut845
    dec $I18
    set $I18, rx428_bstack[$I18]
  rx428_cut845:
    assign rx428_cstack, $I18
  rx428_jump844:
    jump $I19
  rx428_done841:
    rx428_cur."!cursor_fail"()
    .return (rx428_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 784
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1381281828.51527' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx440_start
    .local string rx440_tgt
    .local int rx440_pos
    .local int rx440_off
    .local int rx440_eos
    .local int rx440_rep
    .local pmc rx440_cur
    .local pmc rx440_curclass
    .local pmc rx440_bstack
    .local pmc rx440_cstack
    rx440_start = self."!cursor_start_all"()
    set rx440_cur, rx440_start[0]
    set rx440_tgt, rx440_start[1]
    set rx440_pos, rx440_start[2]
    set rx440_curclass, rx440_start[3]
    set rx440_bstack, rx440_start[4]
    set $I19, rx440_start[5]
    store_lex unicode:"$\x{a2}", rx440_cur
    length rx440_eos, rx440_tgt
    eq $I19, 1, rx440_restart865
    gt rx440_pos, rx440_eos, rx440_fail866
    repr_get_attr_int $I11, self, rx440_curclass, "$!from"
    ne $I11, -1, rxscan441_done872
    goto rxscan441_scan871
  rxscan441_loop870:
    inc rx440_pos
    gt rx440_pos, rx440_eos, rx440_fail866
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!from", rx440_pos
  rxscan441_scan871:
    nqp_rxmark rx440_bstack, rxscan441_loop870, rx440_pos, 0
  rxscan441_done872:
    .const 'Sub' $P5001 = 'cuid_48_1381281828.51527' 
    capture_lex $P5001
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    ge $I11, 0, rx440_fail866
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt446_0888
    nqp_push_label $P11, alt446_1890
    nqp_rxmark rx440_bstack, alt446_end887, -1, 0
    rx440_cur."!alt"(rx440_pos, "alt_nfa__9_1381281830.45107", $P11)
    goto rx440_fail866
  alt446_0888:
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    nqp_rxmark rx440_bstack, rxsubrule447_pass889, -1, 0
  rxsubrule447_pass889:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    goto alt446_end887
  alt446_1890:
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    nqp_rxmark rx440_bstack, rxsubrule448_pass891, -1, 0
  rxsubrule448_pass891:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."ws"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    nqp_rxmark rx440_bstack, rxquantr450_done894, rx440_pos, 0
  rxquantr450_loop893:
  alt451_0896:
    nqp_rxmark rx440_bstack, alt451_1897, rx440_pos, 0
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    goto alt451_end895
  alt451_1897:
    nqp_rxmark rx440_bstack, alt451_2903, rx440_pos, 0
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    nqp_rxmark rx440_bstack, rxsubrule452_pass898, -1, 0
  rxsubrule452_pass898:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    nqp_rxmark rx440_bstack, rxquantr453_done900, rx440_pos, 0
  rxquantr453_loop899:
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    goto rxsubrule454_pass901
  rxsubrule454_back902:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
  rxsubrule454_pass901:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule454_back902
    push rx440_bstack, $I11
    push rx440_bstack, 0
    push rx440_bstack, rx440_pos
    elements $I11, rx440_cstack
    push rx440_bstack, $I11
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    nqp_rxpeek $I19, rx440_bstack, rxquantr453_done900
    inc $I19
    inc $I19
    set rx440_rep, rx440_bstack[$I19]
    nqp_rxcommit rx440_bstack, rxquantr453_done900
    inc rx440_rep
  rxquantr453_done900:
    goto alt451_end895
  alt451_2903:
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail866
    nqp_rxmark rx440_bstack, rxsubrule455_pass904, -1, 0
  rxsubrule455_pass904:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
  alt451_end895:
    nqp_rxpeek $I19, rx440_bstack, rxquantr450_done894
    inc $I19
    inc $I19
    set rx440_rep, rx440_bstack[$I19]
    nqp_rxcommit rx440_bstack, rxquantr450_done894
    inc rx440_rep
  rxquantr450_done894:
    goto alt446_end887
  alt446_end887:
    nqp_rxcommit rx440_bstack, alt446_end887
    rx440_cur."!cursor_pass"(rx440_pos, "statement", 'backtrack'=>1)
    .return (rx440_cur)
  rx440_restart865:
    repr_get_attr_obj rx440_cstack, rx440_cur, rx440_curclass, "$!cstack"
  rx440_fail866:
    unless rx440_bstack, rx440_done864
    pop $I19, rx440_bstack
    if_null rx440_cstack, rx440_cstack_done869
    unless rx440_cstack, rx440_cstack_done869
    dec $I19
    set $P11, rx440_cstack[$I19]
  rx440_cstack_done869:
    pop rx440_rep, rx440_bstack
    pop rx440_pos, rx440_bstack
    pop $I19, rx440_bstack
    lt rx440_pos, -1, rx440_done864
    lt rx440_pos, 0, rx440_fail866
    eq $I19, 0, rx440_fail866
    nqp_islist $I20, rx440_cstack
    unless $I20, rx440_jump867
    elements $I18, rx440_bstack
    le $I18, 0, rx440_cut868
    dec $I18
    set $I18, rx440_bstack[$I18]
  rx440_cut868:
    assign rx440_cstack, $I18
  rx440_jump867:
    jump $I19
  rx440_done864:
    rx440_cur."!cursor_fail"()
    .return (rx440_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1381281828.51527") :anon :lex :outer("cuid_47_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx442_start
    .local string rx442_tgt
    .local int rx442_pos
    .local int rx442_off
    .local int rx442_eos
    .local int rx442_rep
    .local pmc rx442_cur
    .local pmc rx442_curclass
    .local pmc rx442_bstack
    .local pmc rx442_cstack
    rx442_start = self."!cursor_start_all"()
    set rx442_cur, rx442_start[0]
    set rx442_tgt, rx442_start[1]
    set rx442_pos, rx442_start[2]
    set rx442_curclass, rx442_start[3]
    set rx442_bstack, rx442_start[4]
    set $I19, rx442_start[5]
    store_lex unicode:"$\x{a2}", rx442_cur
    length rx442_eos, rx442_tgt
    eq $I19, 1, rx442_restart875
    gt rx442_pos, rx442_eos, rx442_fail876
    repr_get_attr_int $I11, self, rx442_curclass, "$!from"
    ne $I11, -1, rxscan443_done882
    goto rxscan443_scan881
  rxscan443_loop880:
    inc rx442_pos
    gt rx442_pos, rx442_eos, rx442_fail876
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!from", rx442_pos
  rxscan443_scan881:
    nqp_rxmark rx442_bstack, rxscan443_loop880, rx442_pos, 0
  rxscan443_done882:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt444_0884
    nqp_push_label $P11, alt444_1885
    nqp_rxmark rx442_bstack, alt444_end883, -1, 0
    rx442_cur."!alt"(rx442_pos, "alt_nfa__8_1381281830.43374", $P11)
    goto rx442_fail876
  alt444_0884:
    ge rx442_pos, rx442_eos, rx442_fail876
    substr $S11, rx442_tgt, rx442_pos, 1
    index $I11, ucs4:"])}", $S11
    lt $I11, 0, rx442_fail876
    inc rx442_pos
    goto alt444_end883
  alt444_1885:
    lt rx442_pos, rx442_eos, rx442_fail876
    goto alt444_end883
  alt444_end883:
    rx442_cur."!cursor_pass"(rx442_pos, 'backtrack'=>1)
    .return (rx442_cur)
  rx442_restart875:
    repr_get_attr_obj rx442_cstack, rx442_cur, rx442_curclass, "$!cstack"
  rx442_fail876:
    unless rx442_bstack, rx442_done874
    pop $I19, rx442_bstack
    if_null rx442_cstack, rx442_cstack_done879
    unless rx442_cstack, rx442_cstack_done879
    dec $I19
    set $P11, rx442_cstack[$I19]
  rx442_cstack_done879:
    pop rx442_rep, rx442_bstack
    pop rx442_pos, rx442_bstack
    pop $I19, rx442_bstack
    lt rx442_pos, -1, rx442_done874
    lt rx442_pos, 0, rx442_fail876
    eq $I19, 0, rx442_fail876
    nqp_islist $I20, rx442_cstack
    unless $I20, rx442_jump877
    elements $I18, rx442_bstack
    le $I18, 0, rx442_cut878
    dec $I18
    set $I18, rx442_bstack[$I18]
  rx442_cut878:
    assign rx442_cstack, $I18
  rx442_jump877:
    jump $I19
  rx442_done874:
    rx442_cur."!cursor_fail"()
    .return (rx442_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 797
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx456_start
    .local string rx456_tgt
    .local int rx456_pos
    .local int rx456_off
    .local int rx456_eos
    .local int rx456_rep
    .local pmc rx456_cur
    .local pmc rx456_curclass
    .local pmc rx456_bstack
    .local pmc rx456_cstack
    rx456_start = self."!cursor_start_all"()
    set rx456_cur, rx456_start[0]
    set rx456_tgt, rx456_start[1]
    set rx456_pos, rx456_start[2]
    set rx456_curclass, rx456_start[3]
    set rx456_bstack, rx456_start[4]
    set $I19, rx456_start[5]
    store_lex unicode:"$\x{a2}", rx456_cur
    length rx456_eos, rx456_tgt
    eq $I19, 1, rx456_restart907
    gt rx456_pos, rx456_eos, rx456_fail908
    repr_get_attr_int $I11, self, rx456_curclass, "$!from"
    ne $I11, -1, rxscan457_done914
    goto rxscan457_scan913
  rxscan457_loop912:
    inc rx456_pos
    gt rx456_pos, rx456_eos, rx456_fail908
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!from", rx456_pos
  rxscan457_scan913:
    nqp_rxmark rx456_bstack, rxscan457_loop912, rx456_pos, 0
  rxscan457_done914:
  alt458_0916:
    nqp_rxmark rx456_bstack, alt458_1917, rx456_pos, 0
    add $I11, rx456_pos, 1
    gt $I11, rx456_eos, rx456_fail908
    substr $S10, rx456_tgt, rx456_pos, 1
    ne $S10, ucs4:";", rx456_fail908
    add rx456_pos, 1
    goto alt458_end915
  alt458_1917:
    nqp_rxmark rx456_bstack, alt458_2918, rx456_pos, 0
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail908
    goto alt458_end915
  alt458_2918:
    nqp_rxmark rx456_bstack, alt458_3919, rx456_pos, 0
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail908
    goto alt458_end915
  alt458_3919:
    lt rx456_pos, rx456_eos, rx456_fail908
  alt458_end915:
    rx456_cur."!cursor_pass"(rx456_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx456_cur)
  rx456_restart907:
    repr_get_attr_obj rx456_cstack, rx456_cur, rx456_curclass, "$!cstack"
  rx456_fail908:
    unless rx456_bstack, rx456_done906
    pop $I19, rx456_bstack
    if_null rx456_cstack, rx456_cstack_done911
    unless rx456_cstack, rx456_cstack_done911
    dec $I19
    set $P11, rx456_cstack[$I19]
  rx456_cstack_done911:
    pop rx456_rep, rx456_bstack
    pop rx456_pos, rx456_bstack
    pop $I19, rx456_bstack
    lt rx456_pos, -1, rx456_done906
    lt rx456_pos, 0, rx456_fail908
    eq $I19, 0, rx456_fail908
    nqp_islist $I20, rx456_cstack
    unless $I20, rx456_jump909
    elements $I18, rx456_bstack
    le $I18, 0, rx456_cut910
    dec $I18
    set $I18, rx456_bstack[$I18]
  rx456_cut910:
    assign rx456_cstack, $I18
  rx456_jump909:
    jump $I19
  rx456_done906:
    rx456_cur."!cursor_fail"()
    .return (rx456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 804
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx460_start
    .local string rx460_tgt
    .local int rx460_pos
    .local int rx460_off
    .local int rx460_eos
    .local int rx460_rep
    .local pmc rx460_cur
    .local pmc rx460_curclass
    .local pmc rx460_bstack
    .local pmc rx460_cstack
    rx460_start = self."!cursor_start_all"()
    set rx460_cur, rx460_start[0]
    set rx460_tgt, rx460_start[1]
    set rx460_pos, rx460_start[2]
    set rx460_curclass, rx460_start[3]
    set rx460_bstack, rx460_start[4]
    set $I19, rx460_start[5]
    store_lex unicode:"$\x{a2}", rx460_cur
    length rx460_eos, rx460_tgt
    eq $I19, 1, rx460_restart923
    gt rx460_pos, rx460_eos, rx460_fail924
    repr_get_attr_int $I11, self, rx460_curclass, "$!from"
    ne $I11, -1, rxscan461_done930
    goto rxscan461_scan929
  rxscan461_loop928:
    inc rx460_pos
    gt rx460_pos, rx460_eos, rx460_fail924
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!from", rx460_pos
  rxscan461_scan929:
    nqp_rxmark rx460_bstack, rxscan461_loop928, rx460_pos, 0
  rxscan461_done930:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail924
    nqp_rxmark rx460_bstack, rxsubrule462_pass931, -1, 0
  rxsubrule462_pass931:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."ws"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail924
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail924
    nqp_rxmark rx460_bstack, rxsubrule464_pass933, -1, 0
  rxsubrule464_pass933:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    rx460_cur."!cursor_pass"(rx460_pos, "xblock", 'backtrack'=>1)
    .return (rx460_cur)
  rx460_restart923:
    repr_get_attr_obj rx460_cstack, rx460_cur, rx460_curclass, "$!cstack"
  rx460_fail924:
    unless rx460_bstack, rx460_done922
    pop $I19, rx460_bstack
    if_null rx460_cstack, rx460_cstack_done927
    unless rx460_cstack, rx460_cstack_done927
    dec $I19
    set $P11, rx460_cstack[$I19]
  rx460_cstack_done927:
    pop rx460_rep, rx460_bstack
    pop rx460_pos, rx460_bstack
    pop $I19, rx460_bstack
    lt rx460_pos, -1, rx460_done922
    lt rx460_pos, 0, rx460_fail924
    eq $I19, 0, rx460_fail924
    nqp_islist $I20, rx460_cstack
    unless $I20, rx460_jump925
    elements $I18, rx460_bstack
    le $I18, 0, rx460_cut926
    dec $I18
    set $I18, rx460_bstack[$I18]
  rx460_cut926:
    assign rx460_cstack, $I18
  rx460_jump925:
    jump $I19
  rx460_done922:
    rx460_cur."!cursor_fail"()
    .return (rx460_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 808
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx465_start
    .local string rx465_tgt
    .local int rx465_pos
    .local int rx465_off
    .local int rx465_eos
    .local int rx465_rep
    .local pmc rx465_cur
    .local pmc rx465_curclass
    .local pmc rx465_bstack
    .local pmc rx465_cstack
    rx465_start = self."!cursor_start_all"()
    set rx465_cur, rx465_start[0]
    set rx465_tgt, rx465_start[1]
    set rx465_pos, rx465_start[2]
    set rx465_curclass, rx465_start[3]
    set rx465_bstack, rx465_start[4]
    set $I19, rx465_start[5]
    store_lex unicode:"$\x{a2}", rx465_cur
    length rx465_eos, rx465_tgt
    eq $I19, 1, rx465_restart936
    gt rx465_pos, rx465_eos, rx465_fail937
    repr_get_attr_int $I11, self, rx465_curclass, "$!from"
    ne $I11, -1, rxscan466_done943
    goto rxscan466_scan942
  rxscan466_loop941:
    inc rx465_pos
    gt rx465_pos, rx465_eos, rx465_fail937
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!from", rx465_pos
  rxscan466_scan942:
    nqp_rxmark rx465_bstack, rxscan466_loop941, rx465_pos, 0
  rxscan466_done943:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt467_0945
    nqp_push_label $P11, alt467_1951
    nqp_push_label $P11, alt467_2954
    nqp_rxmark rx465_bstack, alt467_end944, -1, 0
    rx465_cur."!alt"(rx465_pos, "alt_nfa__10_1381281830.57891", $P11)
    goto rx465_fail937
  alt467_0945:
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."signature"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    nqp_rxmark rx465_bstack, rxsubrule470_pass948, -1, 0
  rxsubrule470_pass948:
    rx465_cstack = rx465_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."ws"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    nqp_rxmark rx465_bstack, rxsubrule472_pass950, -1, 0
  rxsubrule472_pass950:
    rx465_cstack = rx465_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    goto alt467_end944
  alt467_1951:
    ge rx465_pos, rx465_eos, rx465_fail937
    substr $S11, rx465_tgt, rx465_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx465_fail937
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    nqp_rxmark rx465_bstack, rxsubrule474_pass953, -1, 0
  rxsubrule474_pass953:
    rx465_cstack = rx465_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    goto alt467_end944
  alt467_2954:
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail937
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    goto alt467_end944
  alt467_end944:
    rx465_cur."!cursor_pass"(rx465_pos, "pblock", 'backtrack'=>1)
    .return (rx465_cur)
  rx465_restart936:
    repr_get_attr_obj rx465_cstack, rx465_cur, rx465_curclass, "$!cstack"
  rx465_fail937:
    unless rx465_bstack, rx465_done935
    pop $I19, rx465_bstack
    if_null rx465_cstack, rx465_cstack_done940
    unless rx465_cstack, rx465_cstack_done940
    dec $I19
    set $P11, rx465_cstack[$I19]
  rx465_cstack_done940:
    pop rx465_rep, rx465_bstack
    pop rx465_pos, rx465_bstack
    pop $I19, rx465_bstack
    lt rx465_pos, -1, rx465_done935
    lt rx465_pos, 0, rx465_fail937
    eq $I19, 0, rx465_fail937
    nqp_islist $I20, rx465_cstack
    unless $I20, rx465_jump938
    elements $I18, rx465_bstack
    le $I18, 0, rx465_cut939
    dec $I18
    set $I18, rx465_bstack[$I18]
  rx465_cut939:
    assign rx465_cstack, $I18
  rx465_jump938:
    jump $I19
  rx465_done935:
    rx465_cur."!cursor_fail"()
    .return (rx465_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 819
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx476_start
    .local string rx476_tgt
    .local int rx476_pos
    .local int rx476_off
    .local int rx476_eos
    .local int rx476_rep
    .local pmc rx476_cur
    .local pmc rx476_curclass
    .local pmc rx476_bstack
    .local pmc rx476_cstack
    rx476_start = self."!cursor_start_all"()
    set rx476_cur, rx476_start[0]
    set rx476_tgt, rx476_start[1]
    set rx476_pos, rx476_start[2]
    set rx476_curclass, rx476_start[3]
    set rx476_bstack, rx476_start[4]
    set $I19, rx476_start[5]
    store_lex unicode:"$\x{a2}", rx476_cur
    length rx476_eos, rx476_tgt
    eq $I19, 1, rx476_restart958
    gt rx476_pos, rx476_eos, rx476_fail959
    repr_get_attr_int $I11, self, rx476_curclass, "$!from"
    ne $I11, -1, rxscan477_done965
    goto rxscan477_scan964
  rxscan477_loop963:
    inc rx476_pos
    gt rx476_pos, rx476_eos, rx476_fail959
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!from", rx476_pos
  rxscan477_scan964:
    nqp_rxmark rx476_bstack, rxscan477_loop963, rx476_pos, 0
  rxscan477_done965:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt478_0967
    nqp_push_label $P11, alt478_1968
    nqp_rxmark rx476_bstack, alt478_end966, -1, 0
    rx476_cur."!alt"(rx476_pos, "alt_nfa__11_1381281830.58618", $P11)
    goto rx476_fail959
  alt478_0967:
    add $I11, rx476_pos, 2
    gt $I11, rx476_eos, rx476_fail959
    substr $S10, rx476_tgt, rx476_pos, 2
    ne $S10, ucs4:"->", rx476_fail959
    add rx476_pos, 2
    goto alt478_end966
  alt478_1968:
    add $I11, rx476_pos, 3
    gt $I11, rx476_eos, rx476_fail959
    substr $S10, rx476_tgt, rx476_pos, 3
    ne $S10, ucs4:"<->", rx476_fail959
    add rx476_pos, 3
    goto alt478_end966
  alt478_end966:
    rx476_cur."!cursor_pass"(rx476_pos, "lambda", 'backtrack'=>1)
    .return (rx476_cur)
  rx476_restart958:
    repr_get_attr_obj rx476_cstack, rx476_cur, rx476_curclass, "$!cstack"
  rx476_fail959:
    unless rx476_bstack, rx476_done957
    pop $I19, rx476_bstack
    if_null rx476_cstack, rx476_cstack_done962
    unless rx476_cstack, rx476_cstack_done962
    dec $I19
    set $P11, rx476_cstack[$I19]
  rx476_cstack_done962:
    pop rx476_rep, rx476_bstack
    pop rx476_pos, rx476_bstack
    pop $I19, rx476_bstack
    lt rx476_pos, -1, rx476_done957
    lt rx476_pos, 0, rx476_fail959
    eq $I19, 0, rx476_fail959
    nqp_islist $I20, rx476_cstack
    unless $I20, rx476_jump960
    elements $I18, rx476_bstack
    le $I18, 0, rx476_cut961
    dec $I18
    set $I18, rx476_bstack[$I18]
  rx476_cut961:
    assign rx476_cstack, $I18
  rx476_jump960:
    jump $I19
  rx476_done957:
    rx476_cur."!cursor_fail"()
    .return (rx476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 821
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx479_start
    .local string rx479_tgt
    .local int rx479_pos
    .local int rx479_off
    .local int rx479_eos
    .local int rx479_rep
    .local pmc rx479_cur
    .local pmc rx479_curclass
    .local pmc rx479_bstack
    .local pmc rx479_cstack
    rx479_start = self."!cursor_start_all"()
    set rx479_cur, rx479_start[0]
    set rx479_tgt, rx479_start[1]
    set rx479_pos, rx479_start[2]
    set rx479_curclass, rx479_start[3]
    set rx479_bstack, rx479_start[4]
    set $I19, rx479_start[5]
    store_lex unicode:"$\x{a2}", rx479_cur
    length rx479_eos, rx479_tgt
    eq $I19, 1, rx479_restart971
    gt rx479_pos, rx479_eos, rx479_fail972
    repr_get_attr_int $I11, self, rx479_curclass, "$!from"
    ne $I11, -1, rxscan480_done978
    goto rxscan480_scan977
  rxscan480_loop976:
    inc rx479_pos
    gt rx479_pos, rx479_eos, rx479_fail972
    repr_bind_attr_int rx479_cur, rx479_curclass, "$!from", rx479_pos
  rxscan480_scan977:
    nqp_rxmark rx479_bstack, rxscan480_loop976, rx479_pos, 0
  rxscan480_done978:
  alt481_0980:
    nqp_rxmark rx479_bstack, alt481_1981, rx479_pos, 0
    ge rx479_pos, rx479_eos, rx479_fail972
    substr $S11, rx479_tgt, rx479_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx479_fail972
    goto alt481_end979
  alt481_1981:
    repr_bind_attr_int rx479_cur, rx479_curclass, "$!pos", rx479_pos
    $P11 = rx479_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx479_curclass, "$!pos"
    lt $I11, 0, rx479_fail972
    repr_get_attr_int rx479_pos, $P11, rx479_curclass, "$!pos"
  alt481_end979:
    repr_bind_attr_int rx479_cur, rx479_curclass, "$!pos", rx479_pos
    $P11 = rx479_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx479_curclass, "$!pos"
    lt $I11, 0, rx479_fail972
    repr_get_attr_int rx479_pos, $P11, rx479_curclass, "$!pos"
    repr_bind_attr_int rx479_cur, rx479_curclass, "$!pos", rx479_pos
    $P11 = rx479_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx479_curclass, "$!pos"
    lt $I11, 0, rx479_fail972
    nqp_rxmark rx479_bstack, rxsubrule484_pass984, -1, 0
  rxsubrule484_pass984:
    rx479_cstack = rx479_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx479_pos, $P11, rx479_curclass, "$!pos"
    rx479_cur."!cursor_pass"(rx479_pos, "block", 'backtrack'=>1)
    .return (rx479_cur)
  rx479_restart971:
    repr_get_attr_obj rx479_cstack, rx479_cur, rx479_curclass, "$!cstack"
  rx479_fail972:
    unless rx479_bstack, rx479_done970
    pop $I19, rx479_bstack
    if_null rx479_cstack, rx479_cstack_done975
    unless rx479_cstack, rx479_cstack_done975
    dec $I19
    set $P11, rx479_cstack[$I19]
  rx479_cstack_done975:
    pop rx479_rep, rx479_bstack
    pop rx479_pos, rx479_bstack
    pop $I19, rx479_bstack
    lt rx479_pos, -1, rx479_done970
    lt rx479_pos, 0, rx479_fail972
    eq $I19, 0, rx479_fail972
    nqp_islist $I20, rx479_cstack
    unless $I20, rx479_jump973
    elements $I18, rx479_bstack
    le $I18, 0, rx479_cut974
    dec $I18
    set $I18, rx479_bstack[$I18]
  rx479_cut974:
    assign rx479_cstack, $I18
  rx479_jump973:
    jump $I19
  rx479_done970:
    rx479_cur."!cursor_fail"()
    .return (rx479_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 827
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_108 
    .local pmc pkg_viv_tmp_24 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx485_start
    .local string rx485_tgt
    .local int rx485_pos
    .local int rx485_off
    .local int rx485_eos
    .local int rx485_rep
    .local pmc rx485_cur
    .local pmc rx485_curclass
    .local pmc rx485_bstack
    .local pmc rx485_cstack
    rx485_start = self."!cursor_start_all"()
    set rx485_cur, rx485_start[0]
    set rx485_tgt, rx485_start[1]
    set rx485_pos, rx485_start[2]
    set rx485_curclass, rx485_start[3]
    set rx485_bstack, rx485_start[4]
    set $I19, rx485_start[5]
    store_lex unicode:"$\x{a2}", rx485_cur
    length rx485_eos, rx485_tgt
    eq $I19, 1, rx485_restart987
    gt rx485_pos, rx485_eos, rx485_fail988
    repr_get_attr_int $I11, self, rx485_curclass, "$!from"
    ne $I11, -1, rxscan486_done994
    goto rxscan486_scan993
  rxscan486_loop992:
    inc rx485_pos
    gt rx485_pos, rx485_eos, rx485_fail988
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!from", rx485_pos
  rxscan486_scan993:
    nqp_rxmark rx485_bstack, rxscan486_loop992, rx485_pos, 0
  rxscan486_done994:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    store_lex unicode:"$\x{a2}", rx485_cur
    unless_null $P101, fallback995
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_108, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_108
    unless $I5001 goto if487_else996 
    set $P5004, fb_tmp_108["%HANDLERS"]
    set $P5006, $P5004
    goto if487_end997
  if487_else996:
    null $P5005
    set $P5006, $P5005
  if487_end997:
    unless_null $P5006, vivi_488998
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_488998:
    unless_null $P5006, vivi_489999
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_489999:
    set $P101, $P5006
  fallback995:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail988
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
  alt491_01002:
    nqp_rxmark rx485_bstack, alt491_11004, rx485_pos, 0
    add $I11, rx485_pos, 14
    gt $I11, rx485_eos, rx485_fail988
    substr $S10, rx485_tgt, rx485_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx485_fail988
    add rx485_pos, 14
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail988
    nqp_rxmark rx485_bstack, rxsubrule492_pass1003, -1, 0
  rxsubrule492_pass1003:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
    goto alt491_end1001
  alt491_11004:
    add $I11, rx485_pos, 1
    gt $I11, rx485_eos, rx485_fail988
    substr $S10, rx485_tgt, rx485_pos, 1
    ne $S10, ucs4:"{", rx485_fail988
    add rx485_pos, 1
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail988
    nqp_rxmark rx485_bstack, rxsubrule493_pass1005, -1, 0
  rxsubrule493_pass1005:
    rx485_cstack = rx485_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
  alt494_01007:
    nqp_rxmark rx485_bstack, alt494_11008, rx485_pos, 0
    add $I11, rx485_pos, 1
    gt $I11, rx485_eos, rx485_fail988
    substr $S10, rx485_tgt, rx485_pos, 1
    ne $S10, ucs4:"}", rx485_fail988
    add rx485_pos, 1
    goto alt494_end1006
  alt494_11008:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail988
    goto rxsubrule495_pass1009
  rxsubrule495_back1010:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail988
  rxsubrule495_pass1009:
    rx485_cstack = rx485_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule495_back1010
    push rx485_bstack, $I11
    push rx485_bstack, 0
    push rx485_bstack, rx485_pos
    elements $I11, rx485_cstack
    push rx485_bstack, $I11
    repr_get_attr_int rx485_pos, $P11, rx485_curclass, "$!pos"
  alt494_end1006:
  alt491_end1001:
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!pos", rx485_pos
    $P11 = rx485_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx485_curclass, "$!pos"
    lt $I11, 0, rx485_fail988
    rx485_cur."!cursor_pass"(rx485_pos, "blockoid", 'backtrack'=>1)
    .return (rx485_cur)
  rx485_restart987:
    repr_get_attr_obj rx485_cstack, rx485_cur, rx485_curclass, "$!cstack"
  rx485_fail988:
    unless rx485_bstack, rx485_done986
    pop $I19, rx485_bstack
    if_null rx485_cstack, rx485_cstack_done991
    unless rx485_cstack, rx485_cstack_done991
    dec $I19
    set $P11, rx485_cstack[$I19]
  rx485_cstack_done991:
    pop rx485_rep, rx485_bstack
    pop rx485_pos, rx485_bstack
    pop $I19, rx485_bstack
    lt rx485_pos, -1, rx485_done986
    lt rx485_pos, 0, rx485_fail988
    eq $I19, 0, rx485_fail988
    nqp_islist $I20, rx485_cstack
    unless $I20, rx485_jump989
    elements $I18, rx485_bstack
    le $I18, 0, rx485_cut990
    dec $I18
    set $I18, rx485_bstack[$I18]
  rx485_cut990:
    assign rx485_cstack, $I18
  rx485_jump989:
    jump $I19
  rx485_done986:
    rx485_cur."!cursor_fail"()
    .return (rx485_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 837
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx496_start
    .local string rx496_tgt
    .local int rx496_pos
    .local int rx496_off
    .local int rx496_eos
    .local int rx496_rep
    .local pmc rx496_cur
    .local pmc rx496_curclass
    .local pmc rx496_bstack
    .local pmc rx496_cstack
    rx496_start = self."!cursor_start_all"()
    set rx496_cur, rx496_start[0]
    set rx496_tgt, rx496_start[1]
    set rx496_pos, rx496_start[2]
    set rx496_curclass, rx496_start[3]
    set rx496_bstack, rx496_start[4]
    set $I19, rx496_start[5]
    store_lex unicode:"$\x{a2}", rx496_cur
    length rx496_eos, rx496_tgt
    eq $I19, 1, rx496_restart1013
    gt rx496_pos, rx496_eos, rx496_fail1014
    repr_get_attr_int $I11, self, rx496_curclass, "$!from"
    ne $I11, -1, rxscan497_done1020
    goto rxscan497_scan1019
  rxscan497_loop1018:
    inc rx496_pos
    gt rx496_pos, rx496_eos, rx496_fail1014
    repr_bind_attr_int rx496_cur, rx496_curclass, "$!from", rx496_pos
  rxscan497_scan1019:
    nqp_rxmark rx496_bstack, rxscan497_loop1018, rx496_pos, 0
  rxscan497_done1020:
    rx496_cur."!cursor_pass"(rx496_pos, "newpad", 'backtrack'=>1)
    .return (rx496_cur)
  rx496_restart1013:
    repr_get_attr_obj rx496_cstack, rx496_cur, rx496_curclass, "$!cstack"
  rx496_fail1014:
    unless rx496_bstack, rx496_done1012
    pop $I19, rx496_bstack
    if_null rx496_cstack, rx496_cstack_done1017
    unless rx496_cstack, rx496_cstack_done1017
    dec $I19
    set $P11, rx496_cstack[$I19]
  rx496_cstack_done1017:
    pop rx496_rep, rx496_bstack
    pop rx496_pos, rx496_bstack
    pop $I19, rx496_bstack
    lt rx496_pos, -1, rx496_done1012
    lt rx496_pos, 0, rx496_fail1014
    eq $I19, 0, rx496_fail1014
    nqp_islist $I20, rx496_cstack
    unless $I20, rx496_jump1015
    elements $I18, rx496_bstack
    le $I18, 0, rx496_cut1016
    dec $I18
    set $I18, rx496_bstack[$I18]
  rx496_cut1016:
    assign rx496_cstack, $I18
  rx496_jump1015:
    jump $I19
  rx496_done1012:
    rx496_cur."!cursor_fail"()
    .return (rx496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 838
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx499_start
    .local string rx499_tgt
    .local int rx499_pos
    .local int rx499_off
    .local int rx499_eos
    .local int rx499_rep
    .local pmc rx499_cur
    .local pmc rx499_curclass
    .local pmc rx499_bstack
    .local pmc rx499_cstack
    rx499_start = self."!cursor_start_all"()
    set rx499_cur, rx499_start[0]
    set rx499_tgt, rx499_start[1]
    set rx499_pos, rx499_start[2]
    set rx499_curclass, rx499_start[3]
    set rx499_bstack, rx499_start[4]
    set $I19, rx499_start[5]
    store_lex unicode:"$\x{a2}", rx499_cur
    length rx499_eos, rx499_tgt
    eq $I19, 1, rx499_restart1024
    gt rx499_pos, rx499_eos, rx499_fail1025
    repr_get_attr_int $I11, self, rx499_curclass, "$!from"
    ne $I11, -1, rxscan500_done1031
    goto rxscan500_scan1030
  rxscan500_loop1029:
    inc rx499_pos
    gt rx499_pos, rx499_eos, rx499_fail1025
    repr_bind_attr_int rx499_cur, rx499_curclass, "$!from", rx499_pos
  rxscan500_scan1030:
    nqp_rxmark rx499_bstack, rxscan500_loop1029, rx499_pos, 0
  rxscan500_done1031:
    rx499_cur."!cursor_pass"(rx499_pos, "outerctx", 'backtrack'=>1)
    .return (rx499_cur)
  rx499_restart1024:
    repr_get_attr_obj rx499_cstack, rx499_cur, rx499_curclass, "$!cstack"
  rx499_fail1025:
    unless rx499_bstack, rx499_done1023
    pop $I19, rx499_bstack
    if_null rx499_cstack, rx499_cstack_done1028
    unless rx499_cstack, rx499_cstack_done1028
    dec $I19
    set $P11, rx499_cstack[$I19]
  rx499_cstack_done1028:
    pop rx499_rep, rx499_bstack
    pop rx499_pos, rx499_bstack
    pop $I19, rx499_bstack
    lt rx499_pos, -1, rx499_done1023
    lt rx499_pos, 0, rx499_fail1025
    eq $I19, 0, rx499_fail1025
    nqp_islist $I20, rx499_cstack
    unless $I20, rx499_jump1026
    elements $I18, rx499_bstack
    le $I18, 0, rx499_cut1027
    dec $I18
    set $I18, rx499_bstack[$I18]
  rx499_cut1027:
    assign rx499_cstack, $I18
  rx499_jump1026:
    jump $I19
  rx499_done1023:
    rx499_cur."!cursor_fail"()
    .return (rx499_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 839
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx502_start
    .local string rx502_tgt
    .local int rx502_pos
    .local int rx502_off
    .local int rx502_eos
    .local int rx502_rep
    .local pmc rx502_cur
    .local pmc rx502_curclass
    .local pmc rx502_bstack
    .local pmc rx502_cstack
    rx502_start = self."!cursor_start_all"()
    set rx502_cur, rx502_start[0]
    set rx502_tgt, rx502_start[1]
    set rx502_pos, rx502_start[2]
    set rx502_curclass, rx502_start[3]
    set rx502_bstack, rx502_start[4]
    set $I19, rx502_start[5]
    store_lex unicode:"$\x{a2}", rx502_cur
    length rx502_eos, rx502_tgt
    eq $I19, 1, rx502_restart1035
    gt rx502_pos, rx502_eos, rx502_fail1036
    repr_get_attr_int $I11, self, rx502_curclass, "$!from"
    ne $I11, -1, rxscan503_done1042
    goto rxscan503_scan1041
  rxscan503_loop1040:
    inc rx502_pos
    gt rx502_pos, rx502_eos, rx502_fail1036
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!from", rx502_pos
  rxscan503_scan1041:
    nqp_rxmark rx502_bstack, rxscan503_loop1040, rx502_pos, 0
  rxscan503_done1042:
    rx502_cur."!cursor_pass"(rx502_pos, "finishpad", 'backtrack'=>1)
    .return (rx502_cur)
  rx502_restart1035:
    repr_get_attr_obj rx502_cstack, rx502_cur, rx502_curclass, "$!cstack"
  rx502_fail1036:
    unless rx502_bstack, rx502_done1034
    pop $I19, rx502_bstack
    if_null rx502_cstack, rx502_cstack_done1039
    unless rx502_cstack, rx502_cstack_done1039
    dec $I19
    set $P11, rx502_cstack[$I19]
  rx502_cstack_done1039:
    pop rx502_rep, rx502_bstack
    pop rx502_pos, rx502_bstack
    pop $I19, rx502_bstack
    lt rx502_pos, -1, rx502_done1034
    lt rx502_pos, 0, rx502_fail1036
    eq $I19, 0, rx502_fail1036
    nqp_islist $I20, rx502_cstack
    unless $I20, rx502_jump1037
    elements $I18, rx502_bstack
    le $I18, 0, rx502_cut1038
    dec $I18
    set $I18, rx502_bstack[$I18]
  rx502_cut1038:
    assign rx502_cstack, $I18
  rx502_jump1037:
    jump $I19
  rx502_done1034:
    rx502_cur."!cursor_fail"()
    .return (rx502_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 840
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx505_start
    .local string rx505_tgt
    .local int rx505_pos
    .local int rx505_off
    .local int rx505_eos
    .local int rx505_rep
    .local pmc rx505_cur
    .local pmc rx505_curclass
    .local pmc rx505_bstack
    .local pmc rx505_cstack
    rx505_start = self."!cursor_start_all"()
    set rx505_cur, rx505_start[0]
    set rx505_tgt, rx505_start[1]
    set rx505_pos, rx505_start[2]
    set rx505_curclass, rx505_start[3]
    set rx505_bstack, rx505_start[4]
    set $I19, rx505_start[5]
    store_lex unicode:"$\x{a2}", rx505_cur
    length rx505_eos, rx505_tgt
    eq $I19, 1, rx505_restart1046
    gt rx505_pos, rx505_eos, rx505_fail1047
    repr_get_attr_int $I11, self, rx505_curclass, "$!from"
    ne $I11, -1, rxscan506_done1053
    goto rxscan506_scan1052
  rxscan506_loop1051:
    inc rx505_pos
    gt rx505_pos, rx505_eos, rx505_fail1047
    repr_bind_attr_int rx505_cur, rx505_curclass, "$!from", rx505_pos
  rxscan506_scan1052:
    nqp_rxmark rx505_bstack, rxscan506_loop1051, rx505_pos, 0
  rxscan506_done1053:
    rx505_cur."!cursor_pass"(rx505_pos, "you_are_here", 'backtrack'=>1)
    .return (rx505_cur)
  rx505_restart1046:
    repr_get_attr_obj rx505_cstack, rx505_cur, rx505_curclass, "$!cstack"
  rx505_fail1047:
    unless rx505_bstack, rx505_done1045
    pop $I19, rx505_bstack
    if_null rx505_cstack, rx505_cstack_done1050
    unless rx505_cstack, rx505_cstack_done1050
    dec $I19
    set $P11, rx505_cstack[$I19]
  rx505_cstack_done1050:
    pop rx505_rep, rx505_bstack
    pop rx505_pos, rx505_bstack
    pop $I19, rx505_bstack
    lt rx505_pos, -1, rx505_done1045
    lt rx505_pos, 0, rx505_fail1047
    eq $I19, 0, rx505_fail1047
    nqp_islist $I20, rx505_cstack
    unless $I20, rx505_jump1048
    elements $I18, rx505_bstack
    le $I18, 0, rx505_cut1049
    dec $I18
    set $I18, rx505_bstack[$I18]
  rx505_cut1049:
    assign rx505_cstack, $I18
  rx505_jump1048:
    jump $I19
  rx505_done1045:
    rx505_cur."!cursor_fail"()
    .return (rx505_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 842
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 844
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx508_start
    .local string rx508_tgt
    .local int rx508_pos
    .local int rx508_off
    .local int rx508_eos
    .local int rx508_rep
    .local pmc rx508_cur
    .local pmc rx508_curclass
    .local pmc rx508_bstack
    .local pmc rx508_cstack
    rx508_start = self."!cursor_start_all"()
    set rx508_cur, rx508_start[0]
    set rx508_tgt, rx508_start[1]
    set rx508_pos, rx508_start[2]
    set rx508_curclass, rx508_start[3]
    set rx508_bstack, rx508_start[4]
    set $I19, rx508_start[5]
    store_lex unicode:"$\x{a2}", rx508_cur
    length rx508_eos, rx508_tgt
    eq $I19, 1, rx508_restart1057
    gt rx508_pos, rx508_eos, rx508_fail1058
    repr_get_attr_int $I11, self, rx508_curclass, "$!from"
    ne $I11, -1, rxscan509_done1064
    goto rxscan509_scan1063
  rxscan509_loop1062:
    inc rx508_pos
    gt rx508_pos, rx508_eos, rx508_fail1058
    repr_bind_attr_int rx508_cur, rx508_curclass, "$!from", rx508_pos
  rxscan509_scan1063:
    nqp_rxmark rx508_bstack, rxscan509_loop1062, rx508_pos, 0
  rxscan509_done1064:
    ge rx508_pos, rx508_eos, rx508_fail1058
    substr $S11, rx508_tgt, rx508_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx508_fail1058
    rx508_cur."!cursor_pass"(rx508_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx508_cur)
  rx508_restart1057:
    repr_get_attr_obj rx508_cstack, rx508_cur, rx508_curclass, "$!cstack"
  rx508_fail1058:
    unless rx508_bstack, rx508_done1056
    pop $I19, rx508_bstack
    if_null rx508_cstack, rx508_cstack_done1061
    unless rx508_cstack, rx508_cstack_done1061
    dec $I19
    set $P11, rx508_cstack[$I19]
  rx508_cstack_done1061:
    pop rx508_rep, rx508_bstack
    pop rx508_pos, rx508_bstack
    pop $I19, rx508_bstack
    lt rx508_pos, -1, rx508_done1056
    lt rx508_pos, 0, rx508_fail1058
    eq $I19, 0, rx508_fail1058
    nqp_islist $I20, rx508_cstack
    unless $I20, rx508_jump1059
    elements $I18, rx508_bstack
    le $I18, 0, rx508_cut1060
    dec $I18
    set $I18, rx508_bstack[$I18]
  rx508_cut1060:
    assign rx508_cstack, $I18
  rx508_jump1059:
    jump $I19
  rx508_done1056:
    rx508_cur."!cursor_fail"()
    .return (rx508_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 845
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx510_start
    .local string rx510_tgt
    .local int rx510_pos
    .local int rx510_off
    .local int rx510_eos
    .local int rx510_rep
    .local pmc rx510_cur
    .local pmc rx510_curclass
    .local pmc rx510_bstack
    .local pmc rx510_cstack
    rx510_start = self."!cursor_start_all"()
    set rx510_cur, rx510_start[0]
    set rx510_tgt, rx510_start[1]
    set rx510_pos, rx510_start[2]
    set rx510_curclass, rx510_start[3]
    set rx510_bstack, rx510_start[4]
    set $I19, rx510_start[5]
    store_lex unicode:"$\x{a2}", rx510_cur
    length rx510_eos, rx510_tgt
    eq $I19, 1, rx510_restart1067
    gt rx510_pos, rx510_eos, rx510_fail1068
    repr_get_attr_int $I11, self, rx510_curclass, "$!from"
    ne $I11, -1, rxscan511_done1074
    goto rxscan511_scan1073
  rxscan511_loop1072:
    inc rx510_pos
    gt rx510_pos, rx510_eos, rx510_fail1068
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!from", rx510_pos
  rxscan511_scan1073:
    nqp_rxmark rx510_bstack, rxscan511_loop1072, rx510_pos, 0
  rxscan511_done1074:
    ge rx510_pos, rx510_eos, rx510_fail1068
    substr $S11, rx510_tgt, rx510_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx510_fail1068
    rx510_cur."!cursor_pass"(rx510_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx510_cur)
  rx510_restart1067:
    repr_get_attr_obj rx510_cstack, rx510_cur, rx510_curclass, "$!cstack"
  rx510_fail1068:
    unless rx510_bstack, rx510_done1066
    pop $I19, rx510_bstack
    if_null rx510_cstack, rx510_cstack_done1071
    unless rx510_cstack, rx510_cstack_done1071
    dec $I19
    set $P11, rx510_cstack[$I19]
  rx510_cstack_done1071:
    pop rx510_rep, rx510_bstack
    pop rx510_pos, rx510_bstack
    pop $I19, rx510_bstack
    lt rx510_pos, -1, rx510_done1066
    lt rx510_pos, 0, rx510_fail1068
    eq $I19, 0, rx510_fail1068
    nqp_islist $I20, rx510_cstack
    unless $I20, rx510_jump1069
    elements $I18, rx510_bstack
    le $I18, 0, rx510_cut1070
    dec $I18
    set $I18, rx510_bstack[$I18]
  rx510_cut1070:
    assign rx510_cstack, $I18
  rx510_jump1069:
    jump $I19
  rx510_done1066:
    rx510_cur."!cursor_fail"()
    .return (rx510_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 849
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 851
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx512_start
    .local string rx512_tgt
    .local int rx512_pos
    .local int rx512_off
    .local int rx512_eos
    .local int rx512_rep
    .local pmc rx512_cur
    .local pmc rx512_curclass
    .local pmc rx512_bstack
    .local pmc rx512_cstack
    rx512_start = self."!cursor_start_all"()
    set rx512_cur, rx512_start[0]
    set rx512_tgt, rx512_start[1]
    set rx512_pos, rx512_start[2]
    set rx512_curclass, rx512_start[3]
    set rx512_bstack, rx512_start[4]
    set $I19, rx512_start[5]
    store_lex unicode:"$\x{a2}", rx512_cur
    length rx512_eos, rx512_tgt
    eq $I19, 1, rx512_restart1077
    gt rx512_pos, rx512_eos, rx512_fail1078
    repr_get_attr_int $I11, self, rx512_curclass, "$!from"
    ne $I11, -1, rxscan513_done1084
    goto rxscan513_scan1083
  rxscan513_loop1082:
    inc rx512_pos
    gt rx512_pos, rx512_eos, rx512_fail1078
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!from", rx512_pos
  rxscan513_scan1083:
    nqp_rxmark rx512_bstack, rxscan513_loop1082, rx512_pos, 0
  rxscan513_done1084:
    nqp_rxmark rx512_bstack, rxcap514_fail1086, rx512_pos, 0
    add $I11, rx512_pos, 3
    gt $I11, rx512_eos, rx512_fail1078
    substr $S10, rx512_tgt, rx512_pos, 3
    ne $S10, ucs4:"use", rx512_fail1078
    add rx512_pos, 3
    nqp_rxpeek $I19, rx512_bstack, rxcap514_fail1086
    inc $I19
    set $I11, rx512_bstack[$I19]
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx512_pos)
    rx512_cstack = rx512_cur."!cursor_capture"($P11, "sym")
    goto rxcap514_done1085
  rxcap514_fail1086:
    goto rx512_fail1078
  rxcap514_done1085:
    ge rx512_pos, rx512_eos, rx512_fail1078
    is_cclass $I11, .CCLASS_WHITESPACE, rx512_tgt, rx512_pos
    unless $I11, rx512_fail1078
    add rx512_pos, 1
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1078
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."name"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1078
    nqp_rxmark rx512_bstack, rxsubrule516_pass1088, -1, 0
  rxsubrule516_pass1088:
    rx512_cstack = rx512_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1078
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    rx512_cur."!cursor_pass"(rx512_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx512_cur)
  rx512_restart1077:
    repr_get_attr_obj rx512_cstack, rx512_cur, rx512_curclass, "$!cstack"
  rx512_fail1078:
    unless rx512_bstack, rx512_done1076
    pop $I19, rx512_bstack
    if_null rx512_cstack, rx512_cstack_done1081
    unless rx512_cstack, rx512_cstack_done1081
    dec $I19
    set $P11, rx512_cstack[$I19]
  rx512_cstack_done1081:
    pop rx512_rep, rx512_bstack
    pop rx512_pos, rx512_bstack
    pop $I19, rx512_bstack
    lt rx512_pos, -1, rx512_done1076
    lt rx512_pos, 0, rx512_fail1078
    eq $I19, 0, rx512_fail1078
    nqp_islist $I20, rx512_cstack
    unless $I20, rx512_jump1079
    elements $I18, rx512_bstack
    le $I18, 0, rx512_cut1080
    dec $I18
    set $I18, rx512_bstack[$I18]
  rx512_cut1080:
    assign rx512_cstack, $I18
  rx512_jump1079:
    jump $I19
  rx512_done1076:
    rx512_cur."!cursor_fail"()
    .return (rx512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 855
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx518_start
    .local string rx518_tgt
    .local int rx518_pos
    .local int rx518_off
    .local int rx518_eos
    .local int rx518_rep
    .local pmc rx518_cur
    .local pmc rx518_curclass
    .local pmc rx518_bstack
    .local pmc rx518_cstack
    rx518_start = self."!cursor_start_all"()
    set rx518_cur, rx518_start[0]
    set rx518_tgt, rx518_start[1]
    set rx518_pos, rx518_start[2]
    set rx518_curclass, rx518_start[3]
    set rx518_bstack, rx518_start[4]
    set $I19, rx518_start[5]
    store_lex unicode:"$\x{a2}", rx518_cur
    length rx518_eos, rx518_tgt
    eq $I19, 1, rx518_restart1092
    gt rx518_pos, rx518_eos, rx518_fail1093
    repr_get_attr_int $I11, self, rx518_curclass, "$!from"
    ne $I11, -1, rxscan519_done1099
    goto rxscan519_scan1098
  rxscan519_loop1097:
    inc rx518_pos
    gt rx518_pos, rx518_eos, rx518_fail1093
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!from", rx518_pos
  rxscan519_scan1098:
    nqp_rxmark rx518_bstack, rxscan519_loop1097, rx518_pos, 0
  rxscan519_done1099:
    nqp_rxmark rx518_bstack, rxcap520_fail1101, rx518_pos, 0
    add $I11, rx518_pos, 2
    gt $I11, rx518_eos, rx518_fail1093
    substr $S10, rx518_tgt, rx518_pos, 2
    ne $S10, ucs4:"if", rx518_fail1093
    add rx518_pos, 2
    nqp_rxpeek $I19, rx518_bstack, rxcap520_fail1101
    inc $I19
    set $I11, rx518_bstack[$I19]
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx518_pos)
    rx518_cstack = rx518_cur."!cursor_capture"($P11, "sym")
    goto rxcap520_done1100
  rxcap520_fail1101:
    goto rx518_fail1093
  rxcap520_done1100:
    ge rx518_pos, rx518_eos, rx518_fail1093
    is_cclass $I11, .CCLASS_WHITESPACE, rx518_tgt, rx518_pos
    unless $I11, rx518_fail1093
    add rx518_pos, 1
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    nqp_rxmark rx518_bstack, rxsubrule522_pass1103, -1, 0
  rxsubrule522_pass1103:
    rx518_cstack = rx518_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    nqp_rxmark rx518_bstack, rxquantr524_done1106, rx518_pos, 0
  rxquantr524_loop1105:
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    add $I11, rx518_pos, 5
    gt $I11, rx518_eos, rx518_fail1093
    substr $S10, rx518_tgt, rx518_pos, 5
    ne $S10, ucs4:"elsif", rx518_fail1093
    add rx518_pos, 5
    ge rx518_pos, rx518_eos, rx518_fail1093
    is_cclass $I11, .CCLASS_WHITESPACE, rx518_tgt, rx518_pos
    unless $I11, rx518_fail1093
    add rx518_pos, 1
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    nqp_rxmark rx518_bstack, rxsubrule527_pass1109, -1, 0
  rxsubrule527_pass1109:
    rx518_cstack = rx518_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    nqp_rxpeek $I19, rx518_bstack, rxquantr524_done1106
    inc $I19
    inc $I19
    set rx518_rep, rx518_bstack[$I19]
    nqp_rxcommit rx518_bstack, rxquantr524_done1106
    inc rx518_rep
    nqp_rxmark rx518_bstack, rxquantr524_done1106, rx518_pos, rx518_rep
    goto rxquantr524_loop1105
  rxquantr524_done1106:
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    nqp_rxmark rx518_bstack, rxquantr530_done1113, rx518_pos, 0
  rxquantr530_loop1112:
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    add $I11, rx518_pos, 4
    gt $I11, rx518_eos, rx518_fail1093
    substr $S10, rx518_tgt, rx518_pos, 4
    ne $S10, ucs4:"else", rx518_fail1093
    add rx518_pos, 4
    ge rx518_pos, rx518_eos, rx518_fail1093
    is_cclass $I11, .CCLASS_WHITESPACE, rx518_tgt, rx518_pos
    unless $I11, rx518_fail1093
    add rx518_pos, 1
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    nqp_rxmark rx518_bstack, rxsubrule533_pass1116, -1, 0
  rxsubrule533_pass1116:
    rx518_cstack = rx518_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    nqp_rxpeek $I19, rx518_bstack, rxquantr530_done1113
    inc $I19
    inc $I19
    set rx518_rep, rx518_bstack[$I19]
    nqp_rxcommit rx518_bstack, rxquantr530_done1113
    inc rx518_rep
  rxquantr530_done1113:
    repr_bind_attr_int rx518_cur, rx518_curclass, "$!pos", rx518_pos
    $P11 = rx518_cur."ws"()
    repr_get_attr_int $I11, $P11, rx518_curclass, "$!pos"
    lt $I11, 0, rx518_fail1093
    repr_get_attr_int rx518_pos, $P11, rx518_curclass, "$!pos"
    rx518_cur."!cursor_pass"(rx518_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx518_cur)
  rx518_restart1092:
    repr_get_attr_obj rx518_cstack, rx518_cur, rx518_curclass, "$!cstack"
  rx518_fail1093:
    unless rx518_bstack, rx518_done1091
    pop $I19, rx518_bstack
    if_null rx518_cstack, rx518_cstack_done1096
    unless rx518_cstack, rx518_cstack_done1096
    dec $I19
    set $P11, rx518_cstack[$I19]
  rx518_cstack_done1096:
    pop rx518_rep, rx518_bstack
    pop rx518_pos, rx518_bstack
    pop $I19, rx518_bstack
    lt rx518_pos, -1, rx518_done1091
    lt rx518_pos, 0, rx518_fail1093
    eq $I19, 0, rx518_fail1093
    nqp_islist $I20, rx518_cstack
    unless $I20, rx518_jump1094
    elements $I18, rx518_bstack
    le $I18, 0, rx518_cut1095
    dec $I18
    set $I18, rx518_bstack[$I18]
  rx518_cut1095:
    assign rx518_cstack, $I18
  rx518_jump1094:
    jump $I19
  rx518_done1091:
    rx518_cur."!cursor_fail"()
    .return (rx518_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 862
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1381281828.51527' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx536_start
    .local string rx536_tgt
    .local int rx536_pos
    .local int rx536_off
    .local int rx536_eos
    .local int rx536_rep
    .local pmc rx536_cur
    .local pmc rx536_curclass
    .local pmc rx536_bstack
    .local pmc rx536_cstack
    rx536_start = self."!cursor_start_all"()
    set rx536_cur, rx536_start[0]
    set rx536_tgt, rx536_start[1]
    set rx536_pos, rx536_start[2]
    set rx536_curclass, rx536_start[3]
    set rx536_bstack, rx536_start[4]
    set $I19, rx536_start[5]
    store_lex unicode:"$\x{a2}", rx536_cur
    length rx536_eos, rx536_tgt
    eq $I19, 1, rx536_restart1121
    gt rx536_pos, rx536_eos, rx536_fail1122
    repr_get_attr_int $I11, self, rx536_curclass, "$!from"
    ne $I11, -1, rxscan537_done1128
    goto rxscan537_scan1127
  rxscan537_loop1126:
    inc rx536_pos
    gt rx536_pos, rx536_eos, rx536_fail1122
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!from", rx536_pos
  rxscan537_scan1127:
    nqp_rxmark rx536_bstack, rxscan537_loop1126, rx536_pos, 0
  rxscan537_done1128:
    nqp_rxmark rx536_bstack, rxcap538_fail1130, rx536_pos, 0
    add $I11, rx536_pos, 6
    gt $I11, rx536_eos, rx536_fail1122
    substr $S10, rx536_tgt, rx536_pos, 6
    ne $S10, ucs4:"unless", rx536_fail1122
    add rx536_pos, 6
    nqp_rxpeek $I19, rx536_bstack, rxcap538_fail1130
    inc $I19
    set $I11, rx536_bstack[$I19]
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx536_pos)
    rx536_cstack = rx536_cur."!cursor_capture"($P11, "sym")
    goto rxcap538_done1129
  rxcap538_fail1130:
    goto rx536_fail1122
  rxcap538_done1129:
    ge rx536_pos, rx536_eos, rx536_fail1122
    is_cclass $I11, .CCLASS_WHITESPACE, rx536_tgt, rx536_pos
    unless $I11, rx536_fail1122
    add rx536_pos, 1
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    nqp_rxmark rx536_bstack, rxsubrule540_pass1132, -1, 0
  rxsubrule540_pass1132:
    rx536_cstack = rx536_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
  alt542_01135:
    nqp_rxmark rx536_bstack, alt542_11148, rx536_pos, 0
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1381281828.51527' 
    capture_lex $P5001
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    ge $I11, 0, rx536_fail1122
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    goto alt542_end1134
  alt542_11148:
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
  alt542_end1134:
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1122
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    rx536_cur."!cursor_pass"(rx536_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx536_cur)
  rx536_restart1121:
    repr_get_attr_obj rx536_cstack, rx536_cur, rx536_curclass, "$!cstack"
  rx536_fail1122:
    unless rx536_bstack, rx536_done1120
    pop $I19, rx536_bstack
    if_null rx536_cstack, rx536_cstack_done1125
    unless rx536_cstack, rx536_cstack_done1125
    dec $I19
    set $P11, rx536_cstack[$I19]
  rx536_cstack_done1125:
    pop rx536_rep, rx536_bstack
    pop rx536_pos, rx536_bstack
    pop $I19, rx536_bstack
    lt rx536_pos, -1, rx536_done1120
    lt rx536_pos, 0, rx536_fail1122
    eq $I19, 0, rx536_fail1122
    nqp_islist $I20, rx536_cstack
    unless $I20, rx536_jump1123
    elements $I18, rx536_bstack
    le $I18, 0, rx536_cut1124
    dec $I18
    set $I18, rx536_bstack[$I18]
  rx536_cut1124:
    assign rx536_cstack, $I18
  rx536_jump1123:
    jump $I19
  rx536_done1120:
    rx536_cur."!cursor_fail"()
    .return (rx536_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1381281828.51527") :anon :lex :outer("cuid_65_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx544_start
    .local string rx544_tgt
    .local int rx544_pos
    .local int rx544_off
    .local int rx544_eos
    .local int rx544_rep
    .local pmc rx544_cur
    .local pmc rx544_curclass
    .local pmc rx544_bstack
    .local pmc rx544_cstack
    rx544_start = self."!cursor_start_all"()
    set rx544_cur, rx544_start[0]
    set rx544_tgt, rx544_start[1]
    set rx544_pos, rx544_start[2]
    set rx544_curclass, rx544_start[3]
    set rx544_bstack, rx544_start[4]
    set $I19, rx544_start[5]
    store_lex unicode:"$\x{a2}", rx544_cur
    length rx544_eos, rx544_tgt
    eq $I19, 1, rx544_restart1139
    gt rx544_pos, rx544_eos, rx544_fail1140
    repr_get_attr_int $I11, self, rx544_curclass, "$!from"
    ne $I11, -1, rxscan545_done1146
    goto rxscan545_scan1145
  rxscan545_loop1144:
    inc rx544_pos
    gt rx544_pos, rx544_eos, rx544_fail1140
    repr_bind_attr_int rx544_cur, rx544_curclass, "$!from", rx544_pos
  rxscan545_scan1145:
    nqp_rxmark rx544_bstack, rxscan545_loop1144, rx544_pos, 0
  rxscan545_done1146:
    add $I11, rx544_pos, 4
    gt $I11, rx544_eos, rx544_fail1140
    substr $S10, rx544_tgt, rx544_pos, 4
    ne $S10, ucs4:"else", rx544_fail1140
    add rx544_pos, 4
    rx544_cur."!cursor_pass"(rx544_pos, 'backtrack'=>1)
    .return (rx544_cur)
  rx544_restart1139:
    repr_get_attr_obj rx544_cstack, rx544_cur, rx544_curclass, "$!cstack"
  rx544_fail1140:
    unless rx544_bstack, rx544_done1138
    pop $I19, rx544_bstack
    if_null rx544_cstack, rx544_cstack_done1143
    unless rx544_cstack, rx544_cstack_done1143
    dec $I19
    set $P11, rx544_cstack[$I19]
  rx544_cstack_done1143:
    pop rx544_rep, rx544_bstack
    pop rx544_pos, rx544_bstack
    pop $I19, rx544_bstack
    lt rx544_pos, -1, rx544_done1138
    lt rx544_pos, 0, rx544_fail1140
    eq $I19, 0, rx544_fail1140
    nqp_islist $I20, rx544_cstack
    unless $I20, rx544_jump1141
    elements $I18, rx544_bstack
    le $I18, 0, rx544_cut1142
    dec $I18
    set $I18, rx544_bstack[$I18]
  rx544_cut1142:
    assign rx544_cstack, $I18
  rx544_jump1141:
    jump $I19
  rx544_done1138:
    rx544_cur."!cursor_fail"()
    .return (rx544_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 868
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx551_start
    .local string rx551_tgt
    .local int rx551_pos
    .local int rx551_off
    .local int rx551_eos
    .local int rx551_rep
    .local pmc rx551_cur
    .local pmc rx551_curclass
    .local pmc rx551_bstack
    .local pmc rx551_cstack
    rx551_start = self."!cursor_start_all"()
    set rx551_cur, rx551_start[0]
    set rx551_tgt, rx551_start[1]
    set rx551_pos, rx551_start[2]
    set rx551_curclass, rx551_start[3]
    set rx551_bstack, rx551_start[4]
    set $I19, rx551_start[5]
    store_lex unicode:"$\x{a2}", rx551_cur
    length rx551_eos, rx551_tgt
    eq $I19, 1, rx551_restart1155
    gt rx551_pos, rx551_eos, rx551_fail1156
    repr_get_attr_int $I11, self, rx551_curclass, "$!from"
    ne $I11, -1, rxscan552_done1162
    goto rxscan552_scan1161
  rxscan552_loop1160:
    inc rx551_pos
    gt rx551_pos, rx551_eos, rx551_fail1156
    repr_bind_attr_int rx551_cur, rx551_curclass, "$!from", rx551_pos
  rxscan552_scan1161:
    nqp_rxmark rx551_bstack, rxscan552_loop1160, rx551_pos, 0
  rxscan552_done1162:
    repr_bind_attr_int rx551_cur, rx551_curclass, "$!pos", rx551_pos
    store_lex unicode:"$\x{a2}", rx551_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx551_bstack, rxcap553_fail1164, rx551_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt554_01166
    nqp_push_label $P11, alt554_11167
    nqp_rxmark rx551_bstack, alt554_end1165, -1, 0
    rx551_cur."!alt"(rx551_pos, "alt_nfa__12_1381281830.71007", $P11)
    goto rx551_fail1156
  alt554_01166:
    add $I11, rx551_pos, 5
    gt $I11, rx551_eos, rx551_fail1156
    substr $S10, rx551_tgt, rx551_pos, 5
    ne $S10, ucs4:"while", rx551_fail1156
    add rx551_pos, 5
    goto alt554_end1165
  alt554_11167:
    add $I11, rx551_pos, 5
    gt $I11, rx551_eos, rx551_fail1156
    substr $S10, rx551_tgt, rx551_pos, 5
    ne $S10, ucs4:"until", rx551_fail1156
    add rx551_pos, 5
    goto alt554_end1165
  alt554_end1165:
    nqp_rxcommit rx551_bstack, alt554_end1165
    nqp_rxpeek $I19, rx551_bstack, rxcap553_fail1164
    inc $I19
    set $I11, rx551_bstack[$I19]
    repr_bind_attr_int rx551_cur, rx551_curclass, "$!pos", rx551_pos
    $P11 = rx551_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx551_pos)
    rx551_cstack = rx551_cur."!cursor_capture"($P11, "sym")
    goto rxcap553_done1163
  rxcap553_fail1164:
    goto rx551_fail1156
  rxcap553_done1163:
    ge rx551_pos, rx551_eos, rx551_fail1156
    is_cclass $I11, .CCLASS_WHITESPACE, rx551_tgt, rx551_pos
    unless $I11, rx551_fail1156
    add rx551_pos, 1
    repr_bind_attr_int rx551_cur, rx551_curclass, "$!pos", rx551_pos
    $P11 = rx551_cur."ws"()
    repr_get_attr_int $I11, $P11, rx551_curclass, "$!pos"
    lt $I11, 0, rx551_fail1156
    repr_get_attr_int rx551_pos, $P11, rx551_curclass, "$!pos"
    repr_bind_attr_int rx551_cur, rx551_curclass, "$!pos", rx551_pos
    $P11 = rx551_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx551_curclass, "$!pos"
    lt $I11, 0, rx551_fail1156
    nqp_rxmark rx551_bstack, rxsubrule556_pass1169, -1, 0
  rxsubrule556_pass1169:
    rx551_cstack = rx551_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx551_pos, $P11, rx551_curclass, "$!pos"
    repr_bind_attr_int rx551_cur, rx551_curclass, "$!pos", rx551_pos
    $P11 = rx551_cur."ws"()
    repr_get_attr_int $I11, $P11, rx551_curclass, "$!pos"
    lt $I11, 0, rx551_fail1156
    repr_get_attr_int rx551_pos, $P11, rx551_curclass, "$!pos"
    rx551_cur."!cursor_pass"(rx551_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx551_cur)
  rx551_restart1155:
    repr_get_attr_obj rx551_cstack, rx551_cur, rx551_curclass, "$!cstack"
  rx551_fail1156:
    unless rx551_bstack, rx551_done1154
    pop $I19, rx551_bstack
    if_null rx551_cstack, rx551_cstack_done1159
    unless rx551_cstack, rx551_cstack_done1159
    dec $I19
    set $P11, rx551_cstack[$I19]
  rx551_cstack_done1159:
    pop rx551_rep, rx551_bstack
    pop rx551_pos, rx551_bstack
    pop $I19, rx551_bstack
    lt rx551_pos, -1, rx551_done1154
    lt rx551_pos, 0, rx551_fail1156
    eq $I19, 0, rx551_fail1156
    nqp_islist $I20, rx551_cstack
    unless $I20, rx551_jump1157
    elements $I18, rx551_bstack
    le $I18, 0, rx551_cut1158
    dec $I18
    set $I18, rx551_bstack[$I18]
  rx551_cut1158:
    assign rx551_cstack, $I18
  rx551_jump1157:
    jump $I19
  rx551_done1154:
    rx551_cur."!cursor_fail"()
    .return (rx551_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 874
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx558_start
    .local string rx558_tgt
    .local int rx558_pos
    .local int rx558_off
    .local int rx558_eos
    .local int rx558_rep
    .local pmc rx558_cur
    .local pmc rx558_curclass
    .local pmc rx558_bstack
    .local pmc rx558_cstack
    rx558_start = self."!cursor_start_all"()
    set rx558_cur, rx558_start[0]
    set rx558_tgt, rx558_start[1]
    set rx558_pos, rx558_start[2]
    set rx558_curclass, rx558_start[3]
    set rx558_bstack, rx558_start[4]
    set $I19, rx558_start[5]
    store_lex unicode:"$\x{a2}", rx558_cur
    length rx558_eos, rx558_tgt
    eq $I19, 1, rx558_restart1173
    gt rx558_pos, rx558_eos, rx558_fail1174
    repr_get_attr_int $I11, self, rx558_curclass, "$!from"
    ne $I11, -1, rxscan559_done1180
    goto rxscan559_scan1179
  rxscan559_loop1178:
    inc rx558_pos
    gt rx558_pos, rx558_eos, rx558_fail1174
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!from", rx558_pos
  rxscan559_scan1179:
    nqp_rxmark rx558_bstack, rxscan559_loop1178, rx558_pos, 0
  rxscan559_done1180:
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    store_lex unicode:"$\x{a2}", rx558_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx558_bstack, rxcap560_fail1182, rx558_pos, 0
    add $I11, rx558_pos, 6
    gt $I11, rx558_eos, rx558_fail1174
    substr $S10, rx558_tgt, rx558_pos, 6
    ne $S10, ucs4:"repeat", rx558_fail1174
    add rx558_pos, 6
    nqp_rxpeek $I19, rx558_bstack, rxcap560_fail1182
    inc $I19
    set $I11, rx558_bstack[$I19]
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx558_pos)
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "sym")
    goto rxcap560_done1181
  rxcap560_fail1182:
    goto rx558_fail1174
  rxcap560_done1181:
    ge rx558_pos, rx558_eos, rx558_fail1174
    is_cclass $I11, .CCLASS_WHITESPACE, rx558_tgt, rx558_pos
    unless $I11, rx558_fail1174
    add rx558_pos, 1
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt562_01185
    nqp_push_label $P11, alt562_11195
    nqp_rxmark rx558_bstack, alt562_end1184, -1, 0
    rx558_cur."!alt"(rx558_pos, "alt_nfa__15_1381281830.73797", $P11)
    goto rx558_fail1174
  alt562_01185:
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    nqp_rxmark rx558_bstack, rxcap564_fail1188, rx558_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt565_01190
    nqp_push_label $P11, alt565_11191
    nqp_rxmark rx558_bstack, alt565_end1189, -1, 0
    rx558_cur."!alt"(rx558_pos, "alt_nfa__13_1381281830.73725", $P11)
    goto rx558_fail1174
  alt565_01190:
    add $I11, rx558_pos, 5
    gt $I11, rx558_eos, rx558_fail1174
    substr $S10, rx558_tgt, rx558_pos, 5
    ne $S10, ucs4:"while", rx558_fail1174
    add rx558_pos, 5
    goto alt565_end1189
  alt565_11191:
    add $I11, rx558_pos, 5
    gt $I11, rx558_eos, rx558_fail1174
    substr $S10, rx558_tgt, rx558_pos, 5
    ne $S10, ucs4:"until", rx558_fail1174
    add rx558_pos, 5
    goto alt565_end1189
  alt565_end1189:
    nqp_rxcommit rx558_bstack, alt565_end1189
    nqp_rxpeek $I19, rx558_bstack, rxcap564_fail1188
    inc $I19
    set $I11, rx558_bstack[$I19]
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx558_pos)
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "wu")
    goto rxcap564_done1187
  rxcap564_fail1188:
    goto rx558_fail1174
  rxcap564_done1187:
    ge rx558_pos, rx558_eos, rx558_fail1174
    is_cclass $I11, .CCLASS_WHITESPACE, rx558_tgt, rx558_pos
    unless $I11, rx558_fail1174
    add rx558_pos, 1
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    nqp_rxmark rx558_bstack, rxsubrule567_pass1193, -1, 0
  rxsubrule567_pass1193:
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    goto alt562_end1184
  alt562_11195:
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    nqp_rxmark rx558_bstack, rxsubrule570_pass1197, -1, 0
  rxsubrule570_pass1197:
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    nqp_rxmark rx558_bstack, rxcap572_fail1200, rx558_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt573_01202
    nqp_push_label $P11, alt573_11203
    nqp_rxmark rx558_bstack, alt573_end1201, -1, 0
    rx558_cur."!alt"(rx558_pos, "alt_nfa__14_1381281830.73773", $P11)
    goto rx558_fail1174
  alt573_01202:
    add $I11, rx558_pos, 5
    gt $I11, rx558_eos, rx558_fail1174
    substr $S10, rx558_tgt, rx558_pos, 5
    ne $S10, ucs4:"while", rx558_fail1174
    add rx558_pos, 5
    goto alt573_end1201
  alt573_11203:
    add $I11, rx558_pos, 5
    gt $I11, rx558_eos, rx558_fail1174
    substr $S10, rx558_tgt, rx558_pos, 5
    ne $S10, ucs4:"until", rx558_fail1174
    add rx558_pos, 5
    goto alt573_end1201
  alt573_end1201:
    nqp_rxcommit rx558_bstack, alt573_end1201
    nqp_rxpeek $I19, rx558_bstack, rxcap572_fail1200
    inc $I19
    set $I11, rx558_bstack[$I19]
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx558_pos)
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "wu")
    goto rxcap572_done1199
  rxcap572_fail1200:
    goto rx558_fail1174
  rxcap572_done1199:
    ge rx558_pos, rx558_eos, rx558_fail1174
    is_cclass $I11, .CCLASS_WHITESPACE, rx558_tgt, rx558_pos
    unless $I11, rx558_fail1174
    add rx558_pos, 1
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    nqp_rxmark rx558_bstack, rxsubrule575_pass1205, -1, 0
  rxsubrule575_pass1205:
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    goto alt562_end1184
  alt562_end1184:
    nqp_rxcommit rx558_bstack, alt562_end1184
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1174
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    rx558_cur."!cursor_pass"(rx558_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx558_cur)
  rx558_restart1173:
    repr_get_attr_obj rx558_cstack, rx558_cur, rx558_curclass, "$!cstack"
  rx558_fail1174:
    unless rx558_bstack, rx558_done1172
    pop $I19, rx558_bstack
    if_null rx558_cstack, rx558_cstack_done1177
    unless rx558_cstack, rx558_cstack_done1177
    dec $I19
    set $P11, rx558_cstack[$I19]
  rx558_cstack_done1177:
    pop rx558_rep, rx558_bstack
    pop rx558_pos, rx558_bstack
    pop $I19, rx558_bstack
    lt rx558_pos, -1, rx558_done1172
    lt rx558_pos, 0, rx558_fail1174
    eq $I19, 0, rx558_fail1174
    nqp_islist $I20, rx558_cstack
    unless $I20, rx558_jump1175
    elements $I18, rx558_bstack
    le $I18, 0, rx558_cut1176
    dec $I18
    set $I18, rx558_bstack[$I18]
  rx558_cut1176:
    assign rx558_cstack, $I18
  rx558_jump1175:
    jump $I19
  rx558_done1172:
    rx558_cur."!cursor_fail"()
    .return (rx558_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 883
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx578_start
    .local string rx578_tgt
    .local int rx578_pos
    .local int rx578_off
    .local int rx578_eos
    .local int rx578_rep
    .local pmc rx578_cur
    .local pmc rx578_curclass
    .local pmc rx578_bstack
    .local pmc rx578_cstack
    rx578_start = self."!cursor_start_all"()
    set rx578_cur, rx578_start[0]
    set rx578_tgt, rx578_start[1]
    set rx578_pos, rx578_start[2]
    set rx578_curclass, rx578_start[3]
    set rx578_bstack, rx578_start[4]
    set $I19, rx578_start[5]
    store_lex unicode:"$\x{a2}", rx578_cur
    length rx578_eos, rx578_tgt
    eq $I19, 1, rx578_restart1210
    gt rx578_pos, rx578_eos, rx578_fail1211
    repr_get_attr_int $I11, self, rx578_curclass, "$!from"
    ne $I11, -1, rxscan579_done1217
    goto rxscan579_scan1216
  rxscan579_loop1215:
    inc rx578_pos
    gt rx578_pos, rx578_eos, rx578_fail1211
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!from", rx578_pos
  rxscan579_scan1216:
    nqp_rxmark rx578_bstack, rxscan579_loop1215, rx578_pos, 0
  rxscan579_done1217:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    store_lex unicode:"$\x{a2}", rx578_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx578_bstack, rxcap580_fail1219, rx578_pos, 0
    add $I11, rx578_pos, 3
    gt $I11, rx578_eos, rx578_fail1211
    substr $S10, rx578_tgt, rx578_pos, 3
    ne $S10, ucs4:"for", rx578_fail1211
    add rx578_pos, 3
    nqp_rxpeek $I19, rx578_bstack, rxcap580_fail1219
    inc $I19
    set $I11, rx578_bstack[$I19]
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx578_pos)
    rx578_cstack = rx578_cur."!cursor_capture"($P11, "sym")
    goto rxcap580_done1218
  rxcap580_fail1219:
    goto rx578_fail1211
  rxcap580_done1218:
    ge rx578_pos, rx578_eos, rx578_fail1211
    is_cclass $I11, .CCLASS_WHITESPACE, rx578_tgt, rx578_pos
    unless $I11, rx578_fail1211
    add rx578_pos, 1
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."ws"()
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1211
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1211
    nqp_rxmark rx578_bstack, rxsubrule582_pass1221, -1, 0
  rxsubrule582_pass1221:
    rx578_cstack = rx578_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."ws"()
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1211
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
    rx578_cur."!cursor_pass"(rx578_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx578_cur)
  rx578_restart1210:
    repr_get_attr_obj rx578_cstack, rx578_cur, rx578_curclass, "$!cstack"
  rx578_fail1211:
    unless rx578_bstack, rx578_done1209
    pop $I19, rx578_bstack
    if_null rx578_cstack, rx578_cstack_done1214
    unless rx578_cstack, rx578_cstack_done1214
    dec $I19
    set $P11, rx578_cstack[$I19]
  rx578_cstack_done1214:
    pop rx578_rep, rx578_bstack
    pop rx578_pos, rx578_bstack
    pop $I19, rx578_bstack
    lt rx578_pos, -1, rx578_done1209
    lt rx578_pos, 0, rx578_fail1211
    eq $I19, 0, rx578_fail1211
    nqp_islist $I20, rx578_cstack
    unless $I20, rx578_jump1212
    elements $I18, rx578_bstack
    le $I18, 0, rx578_cut1213
    dec $I18
    set $I18, rx578_bstack[$I18]
  rx578_cut1213:
    assign rx578_cstack, $I18
  rx578_jump1212:
    jump $I19
  rx578_done1209:
    rx578_cur."!cursor_fail"()
    .return (rx578_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 889
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx584_start
    .local string rx584_tgt
    .local int rx584_pos
    .local int rx584_off
    .local int rx584_eos
    .local int rx584_rep
    .local pmc rx584_cur
    .local pmc rx584_curclass
    .local pmc rx584_bstack
    .local pmc rx584_cstack
    rx584_start = self."!cursor_start_all"()
    set rx584_cur, rx584_start[0]
    set rx584_tgt, rx584_start[1]
    set rx584_pos, rx584_start[2]
    set rx584_curclass, rx584_start[3]
    set rx584_bstack, rx584_start[4]
    set $I19, rx584_start[5]
    store_lex unicode:"$\x{a2}", rx584_cur
    length rx584_eos, rx584_tgt
    eq $I19, 1, rx584_restart1225
    gt rx584_pos, rx584_eos, rx584_fail1226
    repr_get_attr_int $I11, self, rx584_curclass, "$!from"
    ne $I11, -1, rxscan585_done1232
    goto rxscan585_scan1231
  rxscan585_loop1230:
    inc rx584_pos
    gt rx584_pos, rx584_eos, rx584_fail1226
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!from", rx584_pos
  rxscan585_scan1231:
    nqp_rxmark rx584_bstack, rxscan585_loop1230, rx584_pos, 0
  rxscan585_done1232:
    nqp_rxmark rx584_bstack, rxcap586_fail1234, rx584_pos, 0
    add $I11, rx584_pos, 5
    gt $I11, rx584_eos, rx584_fail1226
    substr $S10, rx584_tgt, rx584_pos, 5
    ne $S10, ucs4:"CATCH", rx584_fail1226
    add rx584_pos, 5
    nqp_rxpeek $I19, rx584_bstack, rxcap586_fail1234
    inc $I19
    set $I11, rx584_bstack[$I19]
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx584_pos)
    rx584_cstack = rx584_cur."!cursor_capture"($P11, "sym")
    goto rxcap586_done1233
  rxcap586_fail1234:
    goto rx584_fail1226
  rxcap586_done1233:
    ge rx584_pos, rx584_eos, rx584_fail1226
    is_cclass $I11, .CCLASS_WHITESPACE, rx584_tgt, rx584_pos
    unless $I11, rx584_fail1226
    add rx584_pos, 1
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."ws"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1226
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."block"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1226
    nqp_rxmark rx584_bstack, rxsubrule588_pass1236, -1, 0
  rxsubrule588_pass1236:
    rx584_cstack = rx584_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."ws"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1226
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    rx584_cur."!cursor_pass"(rx584_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx584_cur)
  rx584_restart1225:
    repr_get_attr_obj rx584_cstack, rx584_cur, rx584_curclass, "$!cstack"
  rx584_fail1226:
    unless rx584_bstack, rx584_done1224
    pop $I19, rx584_bstack
    if_null rx584_cstack, rx584_cstack_done1229
    unless rx584_cstack, rx584_cstack_done1229
    dec $I19
    set $P11, rx584_cstack[$I19]
  rx584_cstack_done1229:
    pop rx584_rep, rx584_bstack
    pop rx584_pos, rx584_bstack
    pop $I19, rx584_bstack
    lt rx584_pos, -1, rx584_done1224
    lt rx584_pos, 0, rx584_fail1226
    eq $I19, 0, rx584_fail1226
    nqp_islist $I20, rx584_cstack
    unless $I20, rx584_jump1227
    elements $I18, rx584_bstack
    le $I18, 0, rx584_cut1228
    dec $I18
    set $I18, rx584_bstack[$I18]
  rx584_cut1228:
    assign rx584_cstack, $I18
  rx584_jump1227:
    jump $I19
  rx584_done1224:
    rx584_cur."!cursor_fail"()
    .return (rx584_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 894
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx590_start
    .local string rx590_tgt
    .local int rx590_pos
    .local int rx590_off
    .local int rx590_eos
    .local int rx590_rep
    .local pmc rx590_cur
    .local pmc rx590_curclass
    .local pmc rx590_bstack
    .local pmc rx590_cstack
    rx590_start = self."!cursor_start_all"()
    set rx590_cur, rx590_start[0]
    set rx590_tgt, rx590_start[1]
    set rx590_pos, rx590_start[2]
    set rx590_curclass, rx590_start[3]
    set rx590_bstack, rx590_start[4]
    set $I19, rx590_start[5]
    store_lex unicode:"$\x{a2}", rx590_cur
    length rx590_eos, rx590_tgt
    eq $I19, 1, rx590_restart1240
    gt rx590_pos, rx590_eos, rx590_fail1241
    repr_get_attr_int $I11, self, rx590_curclass, "$!from"
    ne $I11, -1, rxscan591_done1247
    goto rxscan591_scan1246
  rxscan591_loop1245:
    inc rx590_pos
    gt rx590_pos, rx590_eos, rx590_fail1241
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!from", rx590_pos
  rxscan591_scan1246:
    nqp_rxmark rx590_bstack, rxscan591_loop1245, rx590_pos, 0
  rxscan591_done1247:
    nqp_rxmark rx590_bstack, rxcap592_fail1249, rx590_pos, 0
    add $I11, rx590_pos, 7
    gt $I11, rx590_eos, rx590_fail1241
    substr $S10, rx590_tgt, rx590_pos, 7
    ne $S10, ucs4:"CONTROL", rx590_fail1241
    add rx590_pos, 7
    nqp_rxpeek $I19, rx590_bstack, rxcap592_fail1249
    inc $I19
    set $I11, rx590_bstack[$I19]
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx590_pos)
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "sym")
    goto rxcap592_done1248
  rxcap592_fail1249:
    goto rx590_fail1241
  rxcap592_done1248:
    ge rx590_pos, rx590_eos, rx590_fail1241
    is_cclass $I11, .CCLASS_WHITESPACE, rx590_tgt, rx590_pos
    unless $I11, rx590_fail1241
    add rx590_pos, 1
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."ws"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1241
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."block"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1241
    nqp_rxmark rx590_bstack, rxsubrule594_pass1251, -1, 0
  rxsubrule594_pass1251:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."ws"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1241
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    rx590_cur."!cursor_pass"(rx590_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx590_cur)
  rx590_restart1240:
    repr_get_attr_obj rx590_cstack, rx590_cur, rx590_curclass, "$!cstack"
  rx590_fail1241:
    unless rx590_bstack, rx590_done1239
    pop $I19, rx590_bstack
    if_null rx590_cstack, rx590_cstack_done1244
    unless rx590_cstack, rx590_cstack_done1244
    dec $I19
    set $P11, rx590_cstack[$I19]
  rx590_cstack_done1244:
    pop rx590_rep, rx590_bstack
    pop rx590_pos, rx590_bstack
    pop $I19, rx590_bstack
    lt rx590_pos, -1, rx590_done1239
    lt rx590_pos, 0, rx590_fail1241
    eq $I19, 0, rx590_fail1241
    nqp_islist $I20, rx590_cstack
    unless $I20, rx590_jump1242
    elements $I18, rx590_bstack
    le $I18, 0, rx590_cut1243
    dec $I18
    set $I18, rx590_bstack[$I18]
  rx590_cut1243:
    assign rx590_cstack, $I18
  rx590_jump1242:
    jump $I19
  rx590_done1239:
    rx590_cur."!cursor_fail"()
    .return (rx590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 899
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 900
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx596_start
    .local string rx596_tgt
    .local int rx596_pos
    .local int rx596_off
    .local int rx596_eos
    .local int rx596_rep
    .local pmc rx596_cur
    .local pmc rx596_curclass
    .local pmc rx596_bstack
    .local pmc rx596_cstack
    rx596_start = self."!cursor_start_all"()
    set rx596_cur, rx596_start[0]
    set rx596_tgt, rx596_start[1]
    set rx596_pos, rx596_start[2]
    set rx596_curclass, rx596_start[3]
    set rx596_bstack, rx596_start[4]
    set $I19, rx596_start[5]
    store_lex unicode:"$\x{a2}", rx596_cur
    length rx596_eos, rx596_tgt
    eq $I19, 1, rx596_restart1255
    gt rx596_pos, rx596_eos, rx596_fail1256
    repr_get_attr_int $I11, self, rx596_curclass, "$!from"
    ne $I11, -1, rxscan597_done1262
    goto rxscan597_scan1261
  rxscan597_loop1260:
    inc rx596_pos
    gt rx596_pos, rx596_eos, rx596_fail1256
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!from", rx596_pos
  rxscan597_scan1261:
    nqp_rxmark rx596_bstack, rxscan597_loop1260, rx596_pos, 0
  rxscan597_done1262:
    nqp_rxmark rx596_bstack, rxcap598_fail1264, rx596_pos, 0
    add $I11, rx596_pos, 5
    gt $I11, rx596_eos, rx596_fail1256
    substr $S10, rx596_tgt, rx596_pos, 5
    ne $S10, ucs4:"BEGIN", rx596_fail1256
    add rx596_pos, 5
    nqp_rxpeek $I19, rx596_bstack, rxcap598_fail1264
    inc $I19
    set $I11, rx596_bstack[$I19]
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx596_pos)
    rx596_cstack = rx596_cur."!cursor_capture"($P11, "sym")
    goto rxcap598_done1263
  rxcap598_fail1264:
    goto rx596_fail1256
  rxcap598_done1263:
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx596_curclass, "$!pos"
    lt $I11, 0, rx596_fail1256
    nqp_rxmark rx596_bstack, rxsubrule599_pass1265, -1, 0
  rxsubrule599_pass1265:
    rx596_cstack = rx596_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx596_pos, $P11, rx596_curclass, "$!pos"
    rx596_cur."!cursor_pass"(rx596_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx596_cur)
  rx596_restart1255:
    repr_get_attr_obj rx596_cstack, rx596_cur, rx596_curclass, "$!cstack"
  rx596_fail1256:
    unless rx596_bstack, rx596_done1254
    pop $I19, rx596_bstack
    if_null rx596_cstack, rx596_cstack_done1259
    unless rx596_cstack, rx596_cstack_done1259
    dec $I19
    set $P11, rx596_cstack[$I19]
  rx596_cstack_done1259:
    pop rx596_rep, rx596_bstack
    pop rx596_pos, rx596_bstack
    pop $I19, rx596_bstack
    lt rx596_pos, -1, rx596_done1254
    lt rx596_pos, 0, rx596_fail1256
    eq $I19, 0, rx596_fail1256
    nqp_islist $I20, rx596_cstack
    unless $I20, rx596_jump1257
    elements $I18, rx596_bstack
    le $I18, 0, rx596_cut1258
    dec $I18
    set $I18, rx596_bstack[$I18]
  rx596_cut1258:
    assign rx596_cstack, $I18
  rx596_jump1257:
    jump $I19
  rx596_done1254:
    rx596_cur."!cursor_fail"()
    .return (rx596_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 901
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx600_start
    .local string rx600_tgt
    .local int rx600_pos
    .local int rx600_off
    .local int rx600_eos
    .local int rx600_rep
    .local pmc rx600_cur
    .local pmc rx600_curclass
    .local pmc rx600_bstack
    .local pmc rx600_cstack
    rx600_start = self."!cursor_start_all"()
    set rx600_cur, rx600_start[0]
    set rx600_tgt, rx600_start[1]
    set rx600_pos, rx600_start[2]
    set rx600_curclass, rx600_start[3]
    set rx600_bstack, rx600_start[4]
    set $I19, rx600_start[5]
    store_lex unicode:"$\x{a2}", rx600_cur
    length rx600_eos, rx600_tgt
    eq $I19, 1, rx600_restart1268
    gt rx600_pos, rx600_eos, rx600_fail1269
    repr_get_attr_int $I11, self, rx600_curclass, "$!from"
    ne $I11, -1, rxscan601_done1275
    goto rxscan601_scan1274
  rxscan601_loop1273:
    inc rx600_pos
    gt rx600_pos, rx600_eos, rx600_fail1269
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!from", rx600_pos
  rxscan601_scan1274:
    nqp_rxmark rx600_bstack, rxscan601_loop1273, rx600_pos, 0
  rxscan601_done1275:
    nqp_rxmark rx600_bstack, rxcap602_fail1277, rx600_pos, 0
    add $I11, rx600_pos, 4
    gt $I11, rx600_eos, rx600_fail1269
    substr $S10, rx600_tgt, rx600_pos, 4
    ne $S10, ucs4:"INIT", rx600_fail1269
    add rx600_pos, 4
    nqp_rxpeek $I19, rx600_bstack, rxcap602_fail1277
    inc $I19
    set $I11, rx600_bstack[$I19]
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx600_pos)
    rx600_cstack = rx600_cur."!cursor_capture"($P11, "sym")
    goto rxcap602_done1276
  rxcap602_fail1277:
    goto rx600_fail1269
  rxcap602_done1276:
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx600_curclass, "$!pos"
    lt $I11, 0, rx600_fail1269
    nqp_rxmark rx600_bstack, rxsubrule603_pass1278, -1, 0
  rxsubrule603_pass1278:
    rx600_cstack = rx600_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx600_pos, $P11, rx600_curclass, "$!pos"
    rx600_cur."!cursor_pass"(rx600_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx600_cur)
  rx600_restart1268:
    repr_get_attr_obj rx600_cstack, rx600_cur, rx600_curclass, "$!cstack"
  rx600_fail1269:
    unless rx600_bstack, rx600_done1267
    pop $I19, rx600_bstack
    if_null rx600_cstack, rx600_cstack_done1272
    unless rx600_cstack, rx600_cstack_done1272
    dec $I19
    set $P11, rx600_cstack[$I19]
  rx600_cstack_done1272:
    pop rx600_rep, rx600_bstack
    pop rx600_pos, rx600_bstack
    pop $I19, rx600_bstack
    lt rx600_pos, -1, rx600_done1267
    lt rx600_pos, 0, rx600_fail1269
    eq $I19, 0, rx600_fail1269
    nqp_islist $I20, rx600_cstack
    unless $I20, rx600_jump1270
    elements $I18, rx600_bstack
    le $I18, 0, rx600_cut1271
    dec $I18
    set $I18, rx600_bstack[$I18]
  rx600_cut1271:
    assign rx600_cstack, $I18
  rx600_jump1270:
    jump $I19
  rx600_done1267:
    rx600_cur."!cursor_fail"()
    .return (rx600_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 903
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx604_start
    .local string rx604_tgt
    .local int rx604_pos
    .local int rx604_off
    .local int rx604_eos
    .local int rx604_rep
    .local pmc rx604_cur
    .local pmc rx604_curclass
    .local pmc rx604_bstack
    .local pmc rx604_cstack
    rx604_start = self."!cursor_start_all"()
    set rx604_cur, rx604_start[0]
    set rx604_tgt, rx604_start[1]
    set rx604_pos, rx604_start[2]
    set rx604_curclass, rx604_start[3]
    set rx604_bstack, rx604_start[4]
    set $I19, rx604_start[5]
    store_lex unicode:"$\x{a2}", rx604_cur
    length rx604_eos, rx604_tgt
    eq $I19, 1, rx604_restart1281
    gt rx604_pos, rx604_eos, rx604_fail1282
    repr_get_attr_int $I11, self, rx604_curclass, "$!from"
    ne $I11, -1, rxscan605_done1288
    goto rxscan605_scan1287
  rxscan605_loop1286:
    inc rx604_pos
    gt rx604_pos, rx604_eos, rx604_fail1282
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!from", rx604_pos
  rxscan605_scan1287:
    nqp_rxmark rx604_bstack, rxscan605_loop1286, rx604_pos, 0
  rxscan605_done1288:
    nqp_rxmark rx604_bstack, rxcap606_fail1290, rx604_pos, 0
    add $I11, rx604_pos, 3
    gt $I11, rx604_eos, rx604_fail1282
    substr $S10, rx604_tgt, rx604_pos, 3
    ne $S10, ucs4:"try", rx604_fail1282
    add rx604_pos, 3
    nqp_rxpeek $I19, rx604_bstack, rxcap606_fail1290
    inc $I19
    set $I11, rx604_bstack[$I19]
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx604_pos)
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "sym")
    goto rxcap606_done1289
  rxcap606_fail1290:
    goto rx604_fail1282
  rxcap606_done1289:
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1282
    nqp_rxmark rx604_bstack, rxsubrule607_pass1291, -1, 0
  rxsubrule607_pass1291:
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    rx604_cur."!cursor_pass"(rx604_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx604_cur)
  rx604_restart1281:
    repr_get_attr_obj rx604_cstack, rx604_cur, rx604_curclass, "$!cstack"
  rx604_fail1282:
    unless rx604_bstack, rx604_done1280
    pop $I19, rx604_bstack
    if_null rx604_cstack, rx604_cstack_done1285
    unless rx604_cstack, rx604_cstack_done1285
    dec $I19
    set $P11, rx604_cstack[$I19]
  rx604_cstack_done1285:
    pop rx604_rep, rx604_bstack
    pop rx604_pos, rx604_bstack
    pop $I19, rx604_bstack
    lt rx604_pos, -1, rx604_done1280
    lt rx604_pos, 0, rx604_fail1282
    eq $I19, 0, rx604_fail1282
    nqp_islist $I20, rx604_cstack
    unless $I20, rx604_jump1283
    elements $I18, rx604_bstack
    le $I18, 0, rx604_cut1284
    dec $I18
    set $I18, rx604_bstack[$I18]
  rx604_cut1284:
    assign rx604_cstack, $I18
  rx604_jump1283:
    jump $I19
  rx604_done1280:
    rx604_cur."!cursor_fail"()
    .return (rx604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 908
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx608_start
    .local string rx608_tgt
    .local int rx608_pos
    .local int rx608_off
    .local int rx608_eos
    .local int rx608_rep
    .local pmc rx608_cur
    .local pmc rx608_curclass
    .local pmc rx608_bstack
    .local pmc rx608_cstack
    rx608_start = self."!cursor_start_all"()
    set rx608_cur, rx608_start[0]
    set rx608_tgt, rx608_start[1]
    set rx608_pos, rx608_start[2]
    set rx608_curclass, rx608_start[3]
    set rx608_bstack, rx608_start[4]
    set $I19, rx608_start[5]
    store_lex unicode:"$\x{a2}", rx608_cur
    length rx608_eos, rx608_tgt
    eq $I19, 1, rx608_restart1294
    gt rx608_pos, rx608_eos, rx608_fail1295
    repr_get_attr_int $I11, self, rx608_curclass, "$!from"
    ne $I11, -1, rxscan609_done1301
    goto rxscan609_scan1300
  rxscan609_loop1299:
    inc rx608_pos
    gt rx608_pos, rx608_eos, rx608_fail1295
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!from", rx608_pos
  rxscan609_scan1300:
    nqp_rxmark rx608_bstack, rxscan609_loop1299, rx608_pos, 0
  rxscan609_done1301:
    ge rx608_pos, rx608_eos, rx608_fail1295
    is_cclass $I11, .CCLASS_WHITESPACE, rx608_tgt, rx608_pos
    unless $I11, rx608_fail1295
    add rx608_pos, 1
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1295
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt611_01304
    nqp_push_label $P11, alt611_11306
    nqp_rxmark rx608_bstack, alt611_end1303, -1, 0
    rx608_cur."!alt"(rx608_pos, "alt_nfa__16_1381281830.80025", $P11)
    goto rx608_fail1295
  alt611_01304:
    ge rx608_pos, rx608_eos, rx608_fail1295
    substr $S11, rx608_tgt, rx608_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx608_fail1295
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."block"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1295
    nqp_rxmark rx608_bstack, rxsubrule612_pass1305, -1, 0
  rxsubrule612_pass1305:
    rx608_cstack = rx608_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    goto alt611_end1303
  alt611_11306:
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."statement"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1295
    nqp_rxmark rx608_bstack, rxsubrule613_pass1307, -1, 0
  rxsubrule613_pass1307:
    rx608_cstack = rx608_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    goto alt611_end1303
  alt611_end1303:
    nqp_rxcommit rx608_bstack, alt611_end1303
    rx608_cur."!cursor_pass"(rx608_pos, "blorst", 'backtrack'=>1)
    .return (rx608_cur)
  rx608_restart1294:
    repr_get_attr_obj rx608_cstack, rx608_cur, rx608_curclass, "$!cstack"
  rx608_fail1295:
    unless rx608_bstack, rx608_done1293
    pop $I19, rx608_bstack
    if_null rx608_cstack, rx608_cstack_done1298
    unless rx608_cstack, rx608_cstack_done1298
    dec $I19
    set $P11, rx608_cstack[$I19]
  rx608_cstack_done1298:
    pop rx608_rep, rx608_bstack
    pop rx608_pos, rx608_bstack
    pop $I19, rx608_bstack
    lt rx608_pos, -1, rx608_done1293
    lt rx608_pos, 0, rx608_fail1295
    eq $I19, 0, rx608_fail1295
    nqp_islist $I20, rx608_cstack
    unless $I20, rx608_jump1296
    elements $I18, rx608_bstack
    le $I18, 0, rx608_cut1297
    dec $I18
    set $I18, rx608_bstack[$I18]
  rx608_cut1297:
    assign rx608_cstack, $I18
  rx608_jump1296:
    jump $I19
  rx608_done1293:
    rx608_cur."!cursor_fail"()
    .return (rx608_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 914
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 916
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx614_start
    .local string rx614_tgt
    .local int rx614_pos
    .local int rx614_off
    .local int rx614_eos
    .local int rx614_rep
    .local pmc rx614_cur
    .local pmc rx614_curclass
    .local pmc rx614_bstack
    .local pmc rx614_cstack
    rx614_start = self."!cursor_start_all"()
    set rx614_cur, rx614_start[0]
    set rx614_tgt, rx614_start[1]
    set rx614_pos, rx614_start[2]
    set rx614_curclass, rx614_start[3]
    set rx614_bstack, rx614_start[4]
    set $I19, rx614_start[5]
    store_lex unicode:"$\x{a2}", rx614_cur
    length rx614_eos, rx614_tgt
    eq $I19, 1, rx614_restart1310
    gt rx614_pos, rx614_eos, rx614_fail1311
    repr_get_attr_int $I11, self, rx614_curclass, "$!from"
    ne $I11, -1, rxscan615_done1317
    goto rxscan615_scan1316
  rxscan615_loop1315:
    inc rx614_pos
    gt rx614_pos, rx614_eos, rx614_fail1311
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!from", rx614_pos
  rxscan615_scan1316:
    nqp_rxmark rx614_bstack, rxscan615_loop1315, rx614_pos, 0
  rxscan615_done1317:
    nqp_rxmark rx614_bstack, rxcap616_fail1319, rx614_pos, 0
    add $I11, rx614_pos, 2
    gt $I11, rx614_eos, rx614_fail1311
    substr $S10, rx614_tgt, rx614_pos, 2
    ne $S10, ucs4:"if", rx614_fail1311
    add rx614_pos, 2
    nqp_rxpeek $I19, rx614_bstack, rxcap616_fail1319
    inc $I19
    set $I11, rx614_bstack[$I19]
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx614_pos)
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "sym")
    goto rxcap616_done1318
  rxcap616_fail1319:
    goto rx614_fail1311
  rxcap616_done1318:
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."ws"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1311
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1311
    nqp_rxmark rx614_bstack, rxsubrule618_pass1321, -1, 0
  rxsubrule618_pass1321:
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."ws"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1311
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    rx614_cur."!cursor_pass"(rx614_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx614_cur)
  rx614_restart1310:
    repr_get_attr_obj rx614_cstack, rx614_cur, rx614_curclass, "$!cstack"
  rx614_fail1311:
    unless rx614_bstack, rx614_done1309
    pop $I19, rx614_bstack
    if_null rx614_cstack, rx614_cstack_done1314
    unless rx614_cstack, rx614_cstack_done1314
    dec $I19
    set $P11, rx614_cstack[$I19]
  rx614_cstack_done1314:
    pop rx614_rep, rx614_bstack
    pop rx614_pos, rx614_bstack
    pop $I19, rx614_bstack
    lt rx614_pos, -1, rx614_done1309
    lt rx614_pos, 0, rx614_fail1311
    eq $I19, 0, rx614_fail1311
    nqp_islist $I20, rx614_cstack
    unless $I20, rx614_jump1312
    elements $I18, rx614_bstack
    le $I18, 0, rx614_cut1313
    dec $I18
    set $I18, rx614_bstack[$I18]
  rx614_cut1313:
    assign rx614_cstack, $I18
  rx614_jump1312:
    jump $I19
  rx614_done1309:
    rx614_cur."!cursor_fail"()
    .return (rx614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 917
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx620_start
    .local string rx620_tgt
    .local int rx620_pos
    .local int rx620_off
    .local int rx620_eos
    .local int rx620_rep
    .local pmc rx620_cur
    .local pmc rx620_curclass
    .local pmc rx620_bstack
    .local pmc rx620_cstack
    rx620_start = self."!cursor_start_all"()
    set rx620_cur, rx620_start[0]
    set rx620_tgt, rx620_start[1]
    set rx620_pos, rx620_start[2]
    set rx620_curclass, rx620_start[3]
    set rx620_bstack, rx620_start[4]
    set $I19, rx620_start[5]
    store_lex unicode:"$\x{a2}", rx620_cur
    length rx620_eos, rx620_tgt
    eq $I19, 1, rx620_restart1325
    gt rx620_pos, rx620_eos, rx620_fail1326
    repr_get_attr_int $I11, self, rx620_curclass, "$!from"
    ne $I11, -1, rxscan621_done1332
    goto rxscan621_scan1331
  rxscan621_loop1330:
    inc rx620_pos
    gt rx620_pos, rx620_eos, rx620_fail1326
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!from", rx620_pos
  rxscan621_scan1331:
    nqp_rxmark rx620_bstack, rxscan621_loop1330, rx620_pos, 0
  rxscan621_done1332:
    nqp_rxmark rx620_bstack, rxcap622_fail1334, rx620_pos, 0
    add $I11, rx620_pos, 6
    gt $I11, rx620_eos, rx620_fail1326
    substr $S10, rx620_tgt, rx620_pos, 6
    ne $S10, ucs4:"unless", rx620_fail1326
    add rx620_pos, 6
    nqp_rxpeek $I19, rx620_bstack, rxcap622_fail1334
    inc $I19
    set $I11, rx620_bstack[$I19]
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx620_pos)
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "sym")
    goto rxcap622_done1333
  rxcap622_fail1334:
    goto rx620_fail1326
  rxcap622_done1333:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."ws"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1326
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1326
    nqp_rxmark rx620_bstack, rxsubrule624_pass1336, -1, 0
  rxsubrule624_pass1336:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."ws"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1326
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    rx620_cur."!cursor_pass"(rx620_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx620_cur)
  rx620_restart1325:
    repr_get_attr_obj rx620_cstack, rx620_cur, rx620_curclass, "$!cstack"
  rx620_fail1326:
    unless rx620_bstack, rx620_done1324
    pop $I19, rx620_bstack
    if_null rx620_cstack, rx620_cstack_done1329
    unless rx620_cstack, rx620_cstack_done1329
    dec $I19
    set $P11, rx620_cstack[$I19]
  rx620_cstack_done1329:
    pop rx620_rep, rx620_bstack
    pop rx620_pos, rx620_bstack
    pop $I19, rx620_bstack
    lt rx620_pos, -1, rx620_done1324
    lt rx620_pos, 0, rx620_fail1326
    eq $I19, 0, rx620_fail1326
    nqp_islist $I20, rx620_cstack
    unless $I20, rx620_jump1327
    elements $I18, rx620_bstack
    le $I18, 0, rx620_cut1328
    dec $I18
    set $I18, rx620_bstack[$I18]
  rx620_cut1328:
    assign rx620_cstack, $I18
  rx620_jump1327:
    jump $I19
  rx620_done1324:
    rx620_cur."!cursor_fail"()
    .return (rx620_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 919
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 921
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx626_start
    .local string rx626_tgt
    .local int rx626_pos
    .local int rx626_off
    .local int rx626_eos
    .local int rx626_rep
    .local pmc rx626_cur
    .local pmc rx626_curclass
    .local pmc rx626_bstack
    .local pmc rx626_cstack
    rx626_start = self."!cursor_start_all"()
    set rx626_cur, rx626_start[0]
    set rx626_tgt, rx626_start[1]
    set rx626_pos, rx626_start[2]
    set rx626_curclass, rx626_start[3]
    set rx626_bstack, rx626_start[4]
    set $I19, rx626_start[5]
    store_lex unicode:"$\x{a2}", rx626_cur
    length rx626_eos, rx626_tgt
    eq $I19, 1, rx626_restart1340
    gt rx626_pos, rx626_eos, rx626_fail1341
    repr_get_attr_int $I11, self, rx626_curclass, "$!from"
    ne $I11, -1, rxscan627_done1347
    goto rxscan627_scan1346
  rxscan627_loop1345:
    inc rx626_pos
    gt rx626_pos, rx626_eos, rx626_fail1341
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!from", rx626_pos
  rxscan627_scan1346:
    nqp_rxmark rx626_bstack, rxscan627_loop1345, rx626_pos, 0
  rxscan627_done1347:
    nqp_rxmark rx626_bstack, rxcap628_fail1349, rx626_pos, 0
    add $I11, rx626_pos, 5
    gt $I11, rx626_eos, rx626_fail1341
    substr $S10, rx626_tgt, rx626_pos, 5
    ne $S10, ucs4:"while", rx626_fail1341
    add rx626_pos, 5
    nqp_rxpeek $I19, rx626_bstack, rxcap628_fail1349
    inc $I19
    set $I11, rx626_bstack[$I19]
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx626_pos)
    rx626_cstack = rx626_cur."!cursor_capture"($P11, "sym")
    goto rxcap628_done1348
  rxcap628_fail1349:
    goto rx626_fail1341
  rxcap628_done1348:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."ws"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1341
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1341
    nqp_rxmark rx626_bstack, rxsubrule630_pass1351, -1, 0
  rxsubrule630_pass1351:
    rx626_cstack = rx626_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."ws"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1341
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    rx626_cur."!cursor_pass"(rx626_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx626_cur)
  rx626_restart1340:
    repr_get_attr_obj rx626_cstack, rx626_cur, rx626_curclass, "$!cstack"
  rx626_fail1341:
    unless rx626_bstack, rx626_done1339
    pop $I19, rx626_bstack
    if_null rx626_cstack, rx626_cstack_done1344
    unless rx626_cstack, rx626_cstack_done1344
    dec $I19
    set $P11, rx626_cstack[$I19]
  rx626_cstack_done1344:
    pop rx626_rep, rx626_bstack
    pop rx626_pos, rx626_bstack
    pop $I19, rx626_bstack
    lt rx626_pos, -1, rx626_done1339
    lt rx626_pos, 0, rx626_fail1341
    eq $I19, 0, rx626_fail1341
    nqp_islist $I20, rx626_cstack
    unless $I20, rx626_jump1342
    elements $I18, rx626_bstack
    le $I18, 0, rx626_cut1343
    dec $I18
    set $I18, rx626_bstack[$I18]
  rx626_cut1343:
    assign rx626_cstack, $I18
  rx626_jump1342:
    jump $I19
  rx626_done1339:
    rx626_cur."!cursor_fail"()
    .return (rx626_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 922
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx632_start
    .local string rx632_tgt
    .local int rx632_pos
    .local int rx632_off
    .local int rx632_eos
    .local int rx632_rep
    .local pmc rx632_cur
    .local pmc rx632_curclass
    .local pmc rx632_bstack
    .local pmc rx632_cstack
    rx632_start = self."!cursor_start_all"()
    set rx632_cur, rx632_start[0]
    set rx632_tgt, rx632_start[1]
    set rx632_pos, rx632_start[2]
    set rx632_curclass, rx632_start[3]
    set rx632_bstack, rx632_start[4]
    set $I19, rx632_start[5]
    store_lex unicode:"$\x{a2}", rx632_cur
    length rx632_eos, rx632_tgt
    eq $I19, 1, rx632_restart1355
    gt rx632_pos, rx632_eos, rx632_fail1356
    repr_get_attr_int $I11, self, rx632_curclass, "$!from"
    ne $I11, -1, rxscan633_done1362
    goto rxscan633_scan1361
  rxscan633_loop1360:
    inc rx632_pos
    gt rx632_pos, rx632_eos, rx632_fail1356
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!from", rx632_pos
  rxscan633_scan1361:
    nqp_rxmark rx632_bstack, rxscan633_loop1360, rx632_pos, 0
  rxscan633_done1362:
    nqp_rxmark rx632_bstack, rxcap634_fail1364, rx632_pos, 0
    add $I11, rx632_pos, 5
    gt $I11, rx632_eos, rx632_fail1356
    substr $S10, rx632_tgt, rx632_pos, 5
    ne $S10, ucs4:"until", rx632_fail1356
    add rx632_pos, 5
    nqp_rxpeek $I19, rx632_bstack, rxcap634_fail1364
    inc $I19
    set $I11, rx632_bstack[$I19]
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx632_pos)
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "sym")
    goto rxcap634_done1363
  rxcap634_fail1364:
    goto rx632_fail1356
  rxcap634_done1363:
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1356
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1356
    nqp_rxmark rx632_bstack, rxsubrule636_pass1366, -1, 0
  rxsubrule636_pass1366:
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1356
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    rx632_cur."!cursor_pass"(rx632_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx632_cur)
  rx632_restart1355:
    repr_get_attr_obj rx632_cstack, rx632_cur, rx632_curclass, "$!cstack"
  rx632_fail1356:
    unless rx632_bstack, rx632_done1354
    pop $I19, rx632_bstack
    if_null rx632_cstack, rx632_cstack_done1359
    unless rx632_cstack, rx632_cstack_done1359
    dec $I19
    set $P11, rx632_cstack[$I19]
  rx632_cstack_done1359:
    pop rx632_rep, rx632_bstack
    pop rx632_pos, rx632_bstack
    pop $I19, rx632_bstack
    lt rx632_pos, -1, rx632_done1354
    lt rx632_pos, 0, rx632_fail1356
    eq $I19, 0, rx632_fail1356
    nqp_islist $I20, rx632_cstack
    unless $I20, rx632_jump1357
    elements $I18, rx632_bstack
    le $I18, 0, rx632_cut1358
    dec $I18
    set $I18, rx632_bstack[$I18]
  rx632_cut1358:
    assign rx632_cstack, $I18
  rx632_jump1357:
    jump $I19
  rx632_done1354:
    rx632_cur."!cursor_fail"()
    .return (rx632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 923
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx638_start
    .local string rx638_tgt
    .local int rx638_pos
    .local int rx638_off
    .local int rx638_eos
    .local int rx638_rep
    .local pmc rx638_cur
    .local pmc rx638_curclass
    .local pmc rx638_bstack
    .local pmc rx638_cstack
    rx638_start = self."!cursor_start_all"()
    set rx638_cur, rx638_start[0]
    set rx638_tgt, rx638_start[1]
    set rx638_pos, rx638_start[2]
    set rx638_curclass, rx638_start[3]
    set rx638_bstack, rx638_start[4]
    set $I19, rx638_start[5]
    store_lex unicode:"$\x{a2}", rx638_cur
    length rx638_eos, rx638_tgt
    eq $I19, 1, rx638_restart1370
    gt rx638_pos, rx638_eos, rx638_fail1371
    repr_get_attr_int $I11, self, rx638_curclass, "$!from"
    ne $I11, -1, rxscan639_done1377
    goto rxscan639_scan1376
  rxscan639_loop1375:
    inc rx638_pos
    gt rx638_pos, rx638_eos, rx638_fail1371
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!from", rx638_pos
  rxscan639_scan1376:
    nqp_rxmark rx638_bstack, rxscan639_loop1375, rx638_pos, 0
  rxscan639_done1377:
    nqp_rxmark rx638_bstack, rxcap640_fail1379, rx638_pos, 0
    add $I11, rx638_pos, 3
    gt $I11, rx638_eos, rx638_fail1371
    substr $S10, rx638_tgt, rx638_pos, 3
    ne $S10, ucs4:"for", rx638_fail1371
    add rx638_pos, 3
    nqp_rxpeek $I19, rx638_bstack, rxcap640_fail1379
    inc $I19
    set $I11, rx638_bstack[$I19]
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx638_pos)
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "sym")
    goto rxcap640_done1378
  rxcap640_fail1379:
    goto rx638_fail1371
  rxcap640_done1378:
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1371
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1371
    nqp_rxmark rx638_bstack, rxsubrule642_pass1381, -1, 0
  rxsubrule642_pass1381:
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1371
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    rx638_cur."!cursor_pass"(rx638_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx638_cur)
  rx638_restart1370:
    repr_get_attr_obj rx638_cstack, rx638_cur, rx638_curclass, "$!cstack"
  rx638_fail1371:
    unless rx638_bstack, rx638_done1369
    pop $I19, rx638_bstack
    if_null rx638_cstack, rx638_cstack_done1374
    unless rx638_cstack, rx638_cstack_done1374
    dec $I19
    set $P11, rx638_cstack[$I19]
  rx638_cstack_done1374:
    pop rx638_rep, rx638_bstack
    pop rx638_pos, rx638_bstack
    pop $I19, rx638_bstack
    lt rx638_pos, -1, rx638_done1369
    lt rx638_pos, 0, rx638_fail1371
    eq $I19, 0, rx638_fail1371
    nqp_islist $I20, rx638_cstack
    unless $I20, rx638_jump1372
    elements $I18, rx638_bstack
    le $I18, 0, rx638_cut1373
    dec $I18
    set $I18, rx638_bstack[$I18]
  rx638_cut1373:
    assign rx638_cstack, $I18
  rx638_jump1372:
    jump $I19
  rx638_done1369:
    rx638_cur."!cursor_fail"()
    .return (rx638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 927
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx644_start
    .local string rx644_tgt
    .local int rx644_pos
    .local int rx644_off
    .local int rx644_eos
    .local int rx644_rep
    .local pmc rx644_cur
    .local pmc rx644_curclass
    .local pmc rx644_bstack
    .local pmc rx644_cstack
    rx644_start = self."!cursor_start_all"()
    set rx644_cur, rx644_start[0]
    set rx644_tgt, rx644_start[1]
    set rx644_pos, rx644_start[2]
    set rx644_curclass, rx644_start[3]
    set rx644_bstack, rx644_start[4]
    set $I19, rx644_start[5]
    store_lex unicode:"$\x{a2}", rx644_cur
    length rx644_eos, rx644_tgt
    eq $I19, 1, rx644_restart1385
    gt rx644_pos, rx644_eos, rx644_fail1386
    repr_get_attr_int $I11, self, rx644_curclass, "$!from"
    ne $I11, -1, rxscan645_done1392
    goto rxscan645_scan1391
  rxscan645_loop1390:
    inc rx644_pos
    gt rx644_pos, rx644_eos, rx644_fail1386
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!from", rx644_pos
  rxscan645_scan1391:
    nqp_rxmark rx644_bstack, rxscan645_loop1390, rx644_pos, 0
  rxscan645_done1392:
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1386
    nqp_rxmark rx644_bstack, rxsubrule646_pass1393, -1, 0
  rxsubrule646_pass1393:
    rx644_cstack = rx644_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    rx644_cur."!cursor_pass"(rx644_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx644_cur)
  rx644_restart1385:
    repr_get_attr_obj rx644_cstack, rx644_cur, rx644_curclass, "$!cstack"
  rx644_fail1386:
    unless rx644_bstack, rx644_done1384
    pop $I19, rx644_bstack
    if_null rx644_cstack, rx644_cstack_done1389
    unless rx644_cstack, rx644_cstack_done1389
    dec $I19
    set $P11, rx644_cstack[$I19]
  rx644_cstack_done1389:
    pop rx644_rep, rx644_bstack
    pop rx644_pos, rx644_bstack
    pop $I19, rx644_bstack
    lt rx644_pos, -1, rx644_done1384
    lt rx644_pos, 0, rx644_fail1386
    eq $I19, 0, rx644_fail1386
    nqp_islist $I20, rx644_cstack
    unless $I20, rx644_jump1387
    elements $I18, rx644_bstack
    le $I18, 0, rx644_cut1388
    dec $I18
    set $I18, rx644_bstack[$I18]
  rx644_cut1388:
    assign rx644_cstack, $I18
  rx644_jump1387:
    jump $I19
  rx644_done1384:
    rx644_cur."!cursor_fail"()
    .return (rx644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 928
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx647_start
    .local string rx647_tgt
    .local int rx647_pos
    .local int rx647_off
    .local int rx647_eos
    .local int rx647_rep
    .local pmc rx647_cur
    .local pmc rx647_curclass
    .local pmc rx647_bstack
    .local pmc rx647_cstack
    rx647_start = self."!cursor_start_all"()
    set rx647_cur, rx647_start[0]
    set rx647_tgt, rx647_start[1]
    set rx647_pos, rx647_start[2]
    set rx647_curclass, rx647_start[3]
    set rx647_bstack, rx647_start[4]
    set $I19, rx647_start[5]
    store_lex unicode:"$\x{a2}", rx647_cur
    length rx647_eos, rx647_tgt
    eq $I19, 1, rx647_restart1396
    gt rx647_pos, rx647_eos, rx647_fail1397
    repr_get_attr_int $I11, self, rx647_curclass, "$!from"
    ne $I11, -1, rxscan648_done1403
    goto rxscan648_scan1402
  rxscan648_loop1401:
    inc rx647_pos
    gt rx647_pos, rx647_eos, rx647_fail1397
    repr_bind_attr_int rx647_cur, rx647_curclass, "$!from", rx647_pos
  rxscan648_scan1402:
    nqp_rxmark rx647_bstack, rxscan648_loop1401, rx647_pos, 0
  rxscan648_done1403:
    repr_bind_attr_int rx647_cur, rx647_curclass, "$!pos", rx647_pos
    $P11 = rx647_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx647_curclass, "$!pos"
    lt $I11, 0, rx647_fail1397
    nqp_rxmark rx647_bstack, rxsubrule649_pass1404, -1, 0
  rxsubrule649_pass1404:
    rx647_cstack = rx647_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx647_pos, $P11, rx647_curclass, "$!pos"
    rx647_cur."!cursor_pass"(rx647_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx647_cur)
  rx647_restart1396:
    repr_get_attr_obj rx647_cstack, rx647_cur, rx647_curclass, "$!cstack"
  rx647_fail1397:
    unless rx647_bstack, rx647_done1395
    pop $I19, rx647_bstack
    if_null rx647_cstack, rx647_cstack_done1400
    unless rx647_cstack, rx647_cstack_done1400
    dec $I19
    set $P11, rx647_cstack[$I19]
  rx647_cstack_done1400:
    pop rx647_rep, rx647_bstack
    pop rx647_pos, rx647_bstack
    pop $I19, rx647_bstack
    lt rx647_pos, -1, rx647_done1395
    lt rx647_pos, 0, rx647_fail1397
    eq $I19, 0, rx647_fail1397
    nqp_islist $I20, rx647_cstack
    unless $I20, rx647_jump1398
    elements $I18, rx647_bstack
    le $I18, 0, rx647_cut1399
    dec $I18
    set $I18, rx647_bstack[$I18]
  rx647_cut1399:
    assign rx647_cstack, $I18
  rx647_jump1398:
    jump $I19
  rx647_done1395:
    rx647_cur."!cursor_fail"()
    .return (rx647_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx650_start
    .local string rx650_tgt
    .local int rx650_pos
    .local int rx650_off
    .local int rx650_eos
    .local int rx650_rep
    .local pmc rx650_cur
    .local pmc rx650_curclass
    .local pmc rx650_bstack
    .local pmc rx650_cstack
    rx650_start = self."!cursor_start_all"()
    set rx650_cur, rx650_start[0]
    set rx650_tgt, rx650_start[1]
    set rx650_pos, rx650_start[2]
    set rx650_curclass, rx650_start[3]
    set rx650_bstack, rx650_start[4]
    set $I19, rx650_start[5]
    store_lex unicode:"$\x{a2}", rx650_cur
    length rx650_eos, rx650_tgt
    eq $I19, 1, rx650_restart1407
    gt rx650_pos, rx650_eos, rx650_fail1408
    repr_get_attr_int $I11, self, rx650_curclass, "$!from"
    ne $I11, -1, rxscan651_done1414
    goto rxscan651_scan1413
  rxscan651_loop1412:
    inc rx650_pos
    gt rx650_pos, rx650_eos, rx650_fail1408
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!from", rx650_pos
  rxscan651_scan1413:
    nqp_rxmark rx650_bstack, rxscan651_loop1412, rx650_pos, 0
  rxscan651_done1414:
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."variable"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1408
    nqp_rxmark rx650_bstack, rxsubrule652_pass1415, -1, 0
  rxsubrule652_pass1415:
    rx650_cstack = rx650_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    rx650_cur."!cursor_pass"(rx650_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx650_cur)
  rx650_restart1407:
    repr_get_attr_obj rx650_cstack, rx650_cur, rx650_curclass, "$!cstack"
  rx650_fail1408:
    unless rx650_bstack, rx650_done1406
    pop $I19, rx650_bstack
    if_null rx650_cstack, rx650_cstack_done1411
    unless rx650_cstack, rx650_cstack_done1411
    dec $I19
    set $P11, rx650_cstack[$I19]
  rx650_cstack_done1411:
    pop rx650_rep, rx650_bstack
    pop rx650_pos, rx650_bstack
    pop $I19, rx650_bstack
    lt rx650_pos, -1, rx650_done1406
    lt rx650_pos, 0, rx650_fail1408
    eq $I19, 0, rx650_fail1408
    nqp_islist $I20, rx650_cstack
    unless $I20, rx650_jump1409
    elements $I18, rx650_bstack
    le $I18, 0, rx650_cut1410
    dec $I18
    set $I18, rx650_bstack[$I18]
  rx650_cut1410:
    assign rx650_cstack, $I18
  rx650_jump1409:
    jump $I19
  rx650_done1406:
    rx650_cur."!cursor_fail"()
    .return (rx650_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx653_start
    .local string rx653_tgt
    .local int rx653_pos
    .local int rx653_off
    .local int rx653_eos
    .local int rx653_rep
    .local pmc rx653_cur
    .local pmc rx653_curclass
    .local pmc rx653_bstack
    .local pmc rx653_cstack
    rx653_start = self."!cursor_start_all"()
    set rx653_cur, rx653_start[0]
    set rx653_tgt, rx653_start[1]
    set rx653_pos, rx653_start[2]
    set rx653_curclass, rx653_start[3]
    set rx653_bstack, rx653_start[4]
    set $I19, rx653_start[5]
    store_lex unicode:"$\x{a2}", rx653_cur
    length rx653_eos, rx653_tgt
    eq $I19, 1, rx653_restart1418
    gt rx653_pos, rx653_eos, rx653_fail1419
    repr_get_attr_int $I11, self, rx653_curclass, "$!from"
    ne $I11, -1, rxscan654_done1425
    goto rxscan654_scan1424
  rxscan654_loop1423:
    inc rx653_pos
    gt rx653_pos, rx653_eos, rx653_fail1419
    repr_bind_attr_int rx653_cur, rx653_curclass, "$!from", rx653_pos
  rxscan654_scan1424:
    nqp_rxmark rx653_bstack, rxscan654_loop1423, rx653_pos, 0
  rxscan654_done1425:
    repr_bind_attr_int rx653_cur, rx653_curclass, "$!pos", rx653_pos
    $P11 = rx653_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx653_curclass, "$!pos"
    lt $I11, 0, rx653_fail1419
    nqp_rxmark rx653_bstack, rxsubrule655_pass1426, -1, 0
  rxsubrule655_pass1426:
    rx653_cstack = rx653_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx653_pos, $P11, rx653_curclass, "$!pos"
    rx653_cur."!cursor_pass"(rx653_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx653_cur)
  rx653_restart1418:
    repr_get_attr_obj rx653_cstack, rx653_cur, rx653_curclass, "$!cstack"
  rx653_fail1419:
    unless rx653_bstack, rx653_done1417
    pop $I19, rx653_bstack
    if_null rx653_cstack, rx653_cstack_done1422
    unless rx653_cstack, rx653_cstack_done1422
    dec $I19
    set $P11, rx653_cstack[$I19]
  rx653_cstack_done1422:
    pop rx653_rep, rx653_bstack
    pop rx653_pos, rx653_bstack
    pop $I19, rx653_bstack
    lt rx653_pos, -1, rx653_done1417
    lt rx653_pos, 0, rx653_fail1419
    eq $I19, 0, rx653_fail1419
    nqp_islist $I20, rx653_cstack
    unless $I20, rx653_jump1420
    elements $I18, rx653_bstack
    le $I18, 0, rx653_cut1421
    dec $I18
    set $I18, rx653_bstack[$I18]
  rx653_cut1421:
    assign rx653_cstack, $I18
  rx653_jump1420:
    jump $I19
  rx653_done1417:
    rx653_cur."!cursor_fail"()
    .return (rx653_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx656_start
    .local string rx656_tgt
    .local int rx656_pos
    .local int rx656_off
    .local int rx656_eos
    .local int rx656_rep
    .local pmc rx656_cur
    .local pmc rx656_curclass
    .local pmc rx656_bstack
    .local pmc rx656_cstack
    rx656_start = self."!cursor_start_all"()
    set rx656_cur, rx656_start[0]
    set rx656_tgt, rx656_start[1]
    set rx656_pos, rx656_start[2]
    set rx656_curclass, rx656_start[3]
    set rx656_bstack, rx656_start[4]
    set $I19, rx656_start[5]
    store_lex unicode:"$\x{a2}", rx656_cur
    length rx656_eos, rx656_tgt
    eq $I19, 1, rx656_restart1429
    gt rx656_pos, rx656_eos, rx656_fail1430
    repr_get_attr_int $I11, self, rx656_curclass, "$!from"
    ne $I11, -1, rxscan657_done1436
    goto rxscan657_scan1435
  rxscan657_loop1434:
    inc rx656_pos
    gt rx656_pos, rx656_eos, rx656_fail1430
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!from", rx656_pos
  rxscan657_scan1435:
    nqp_rxmark rx656_bstack, rxscan657_loop1434, rx656_pos, 0
  rxscan657_done1436:
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1430
    nqp_rxmark rx656_bstack, rxsubrule658_pass1437, -1, 0
  rxsubrule658_pass1437:
    rx656_cstack = rx656_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    rx656_cur."!cursor_pass"(rx656_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx656_cur)
  rx656_restart1429:
    repr_get_attr_obj rx656_cstack, rx656_cur, rx656_curclass, "$!cstack"
  rx656_fail1430:
    unless rx656_bstack, rx656_done1428
    pop $I19, rx656_bstack
    if_null rx656_cstack, rx656_cstack_done1433
    unless rx656_cstack, rx656_cstack_done1433
    dec $I19
    set $P11, rx656_cstack[$I19]
  rx656_cstack_done1433:
    pop rx656_rep, rx656_bstack
    pop rx656_pos, rx656_bstack
    pop $I19, rx656_bstack
    lt rx656_pos, -1, rx656_done1428
    lt rx656_pos, 0, rx656_fail1430
    eq $I19, 0, rx656_fail1430
    nqp_islist $I20, rx656_cstack
    unless $I20, rx656_jump1431
    elements $I18, rx656_bstack
    le $I18, 0, rx656_cut1432
    dec $I18
    set $I18, rx656_bstack[$I18]
  rx656_cut1432:
    assign rx656_cstack, $I18
  rx656_jump1431:
    jump $I19
  rx656_done1428:
    rx656_cur."!cursor_fail"()
    .return (rx656_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 932
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx659_start
    .local string rx659_tgt
    .local int rx659_pos
    .local int rx659_off
    .local int rx659_eos
    .local int rx659_rep
    .local pmc rx659_cur
    .local pmc rx659_curclass
    .local pmc rx659_bstack
    .local pmc rx659_cstack
    rx659_start = self."!cursor_start_all"()
    set rx659_cur, rx659_start[0]
    set rx659_tgt, rx659_start[1]
    set rx659_pos, rx659_start[2]
    set rx659_curclass, rx659_start[3]
    set rx659_bstack, rx659_start[4]
    set $I19, rx659_start[5]
    store_lex unicode:"$\x{a2}", rx659_cur
    length rx659_eos, rx659_tgt
    eq $I19, 1, rx659_restart1440
    gt rx659_pos, rx659_eos, rx659_fail1441
    repr_get_attr_int $I11, self, rx659_curclass, "$!from"
    ne $I11, -1, rxscan660_done1447
    goto rxscan660_scan1446
  rxscan660_loop1445:
    inc rx659_pos
    gt rx659_pos, rx659_eos, rx659_fail1441
    repr_bind_attr_int rx659_cur, rx659_curclass, "$!from", rx659_pos
  rxscan660_scan1446:
    nqp_rxmark rx659_bstack, rxscan660_loop1445, rx659_pos, 0
  rxscan660_done1447:
    repr_bind_attr_int rx659_cur, rx659_curclass, "$!pos", rx659_pos
    $P11 = rx659_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx659_curclass, "$!pos"
    lt $I11, 0, rx659_fail1441
    nqp_rxmark rx659_bstack, rxsubrule661_pass1448, -1, 0
  rxsubrule661_pass1448:
    rx659_cstack = rx659_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx659_pos, $P11, rx659_curclass, "$!pos"
    rx659_cur."!cursor_pass"(rx659_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx659_cur)
  rx659_restart1440:
    repr_get_attr_obj rx659_cstack, rx659_cur, rx659_curclass, "$!cstack"
  rx659_fail1441:
    unless rx659_bstack, rx659_done1439
    pop $I19, rx659_bstack
    if_null rx659_cstack, rx659_cstack_done1444
    unless rx659_cstack, rx659_cstack_done1444
    dec $I19
    set $P11, rx659_cstack[$I19]
  rx659_cstack_done1444:
    pop rx659_rep, rx659_bstack
    pop rx659_pos, rx659_bstack
    pop $I19, rx659_bstack
    lt rx659_pos, -1, rx659_done1439
    lt rx659_pos, 0, rx659_fail1441
    eq $I19, 0, rx659_fail1441
    nqp_islist $I20, rx659_cstack
    unless $I20, rx659_jump1442
    elements $I18, rx659_bstack
    le $I18, 0, rx659_cut1443
    dec $I18
    set $I18, rx659_bstack[$I18]
  rx659_cut1443:
    assign rx659_cstack, $I18
  rx659_jump1442:
    jump $I19
  rx659_done1439:
    rx659_cur."!cursor_fail"()
    .return (rx659_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 933
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1381281828.51527' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1381281828.51527' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx662_start
    .local string rx662_tgt
    .local int rx662_pos
    .local int rx662_off
    .local int rx662_eos
    .local int rx662_rep
    .local pmc rx662_cur
    .local pmc rx662_curclass
    .local pmc rx662_bstack
    .local pmc rx662_cstack
    rx662_start = self."!cursor_start_all"()
    set rx662_cur, rx662_start[0]
    set rx662_tgt, rx662_start[1]
    set rx662_pos, rx662_start[2]
    set rx662_curclass, rx662_start[3]
    set rx662_bstack, rx662_start[4]
    set $I19, rx662_start[5]
    store_lex unicode:"$\x{a2}", rx662_cur
    length rx662_eos, rx662_tgt
    eq $I19, 1, rx662_restart1451
    gt rx662_pos, rx662_eos, rx662_fail1452
    repr_get_attr_int $I11, self, rx662_curclass, "$!from"
    ne $I11, -1, rxscan663_done1458
    goto rxscan663_scan1457
  rxscan663_loop1456:
    inc rx662_pos
    gt rx662_pos, rx662_eos, rx662_fail1452
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!from", rx662_pos
  rxscan663_scan1457:
    nqp_rxmark rx662_bstack, rxscan663_loop1456, rx662_pos, 0
  rxscan663_done1458:
    .const 'Sub' $P5001 = 'cuid_91_1381281828.51527' 
    capture_lex $P5001
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    lt $I11, 0, rx662_fail1452
    .const 'Sub' $P5002 = 'cuid_92_1381281828.51527' 
    capture_lex $P5002
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    ge $I11, 0, rx662_fail1452
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    lt $I11, 0, rx662_fail1452
    nqp_rxmark rx662_bstack, rxsubrule671_pass1488, -1, 0
  rxsubrule671_pass1488:
    rx662_cstack = rx662_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx662_pos, $P11, rx662_curclass, "$!pos"
    rx662_cur."!cursor_pass"(rx662_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx662_cur)
  rx662_restart1451:
    repr_get_attr_obj rx662_cstack, rx662_cur, rx662_curclass, "$!cstack"
  rx662_fail1452:
    unless rx662_bstack, rx662_done1450
    pop $I19, rx662_bstack
    if_null rx662_cstack, rx662_cstack_done1455
    unless rx662_cstack, rx662_cstack_done1455
    dec $I19
    set $P11, rx662_cstack[$I19]
  rx662_cstack_done1455:
    pop rx662_rep, rx662_bstack
    pop rx662_pos, rx662_bstack
    pop $I19, rx662_bstack
    lt rx662_pos, -1, rx662_done1450
    lt rx662_pos, 0, rx662_fail1452
    eq $I19, 0, rx662_fail1452
    nqp_islist $I20, rx662_cstack
    unless $I20, rx662_jump1453
    elements $I18, rx662_bstack
    le $I18, 0, rx662_cut1454
    dec $I18
    set $I18, rx662_bstack[$I18]
  rx662_cut1454:
    assign rx662_cstack, $I18
  rx662_jump1453:
    jump $I19
  rx662_done1450:
    rx662_cur."!cursor_fail"()
    .return (rx662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1381281828.51527") :anon :lex :outer("cuid_90_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx664_start
    .local string rx664_tgt
    .local int rx664_pos
    .local int rx664_off
    .local int rx664_eos
    .local int rx664_rep
    .local pmc rx664_cur
    .local pmc rx664_curclass
    .local pmc rx664_bstack
    .local pmc rx664_cstack
    rx664_start = self."!cursor_start_all"()
    set rx664_cur, rx664_start[0]
    set rx664_tgt, rx664_start[1]
    set rx664_pos, rx664_start[2]
    set rx664_curclass, rx664_start[3]
    set rx664_bstack, rx664_start[4]
    set $I19, rx664_start[5]
    store_lex unicode:"$\x{a2}", rx664_cur
    length rx664_eos, rx664_tgt
    eq $I19, 1, rx664_restart1461
    gt rx664_pos, rx664_eos, rx664_fail1462
    repr_get_attr_int $I11, self, rx664_curclass, "$!from"
    ne $I11, -1, rxscan665_done1468
    goto rxscan665_scan1467
  rxscan665_loop1466:
    inc rx664_pos
    gt rx664_pos, rx664_eos, rx664_fail1462
    repr_bind_attr_int rx664_cur, rx664_curclass, "$!from", rx664_pos
  rxscan665_scan1467:
    nqp_rxmark rx664_bstack, rxscan665_loop1466, rx664_pos, 0
  rxscan665_done1468:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt666_01470
    nqp_push_label $P11, alt666_11471
    nqp_push_label $P11, alt666_21472
    nqp_rxmark rx664_bstack, alt666_end1469, -1, 0
    rx664_cur."!alt"(rx664_pos, "alt_nfa__17_1381281830.88347", $P11)
    goto rx664_fail1462
  alt666_01470:
    add $I11, rx664_pos, 5
    gt $I11, rx664_eos, rx664_fail1462
    substr $S10, rx664_tgt, rx664_pos, 5
    ne $S10, ucs4:"multi", rx664_fail1462
    add rx664_pos, 5
    goto alt666_end1469
  alt666_11471:
    add $I11, rx664_pos, 5
    gt $I11, rx664_eos, rx664_fail1462
    substr $S10, rx664_tgt, rx664_pos, 5
    ne $S10, ucs4:"proto", rx664_fail1462
    add rx664_pos, 5
    goto alt666_end1469
  alt666_21472:
    add $I11, rx664_pos, 4
    gt $I11, rx664_eos, rx664_fail1462
    substr $S10, rx664_tgt, rx664_pos, 4
    ne $S10, ucs4:"only", rx664_fail1462
    add rx664_pos, 4
    goto alt666_end1469
  alt666_end1469:
    rx664_cur."!cursor_pass"(rx664_pos, 'backtrack'=>1)
    .return (rx664_cur)
  rx664_restart1461:
    repr_get_attr_obj rx664_cstack, rx664_cur, rx664_curclass, "$!cstack"
  rx664_fail1462:
    unless rx664_bstack, rx664_done1460
    pop $I19, rx664_bstack
    if_null rx664_cstack, rx664_cstack_done1465
    unless rx664_cstack, rx664_cstack_done1465
    dec $I19
    set $P11, rx664_cstack[$I19]
  rx664_cstack_done1465:
    pop rx664_rep, rx664_bstack
    pop rx664_pos, rx664_bstack
    pop $I19, rx664_bstack
    lt rx664_pos, -1, rx664_done1460
    lt rx664_pos, 0, rx664_fail1462
    eq $I19, 0, rx664_fail1462
    nqp_islist $I20, rx664_cstack
    unless $I20, rx664_jump1463
    elements $I18, rx664_bstack
    le $I18, 0, rx664_cut1464
    dec $I18
    set $I18, rx664_bstack[$I18]
  rx664_cut1464:
    assign rx664_cstack, $I18
  rx664_jump1463:
    jump $I19
  rx664_done1460:
    rx664_cur."!cursor_fail"()
    .return (rx664_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1381281828.51527") :anon :lex :outer("cuid_90_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx667_start
    .local string rx667_tgt
    .local int rx667_pos
    .local int rx667_off
    .local int rx667_eos
    .local int rx667_rep
    .local pmc rx667_cur
    .local pmc rx667_curclass
    .local pmc rx667_bstack
    .local pmc rx667_cstack
    rx667_start = self."!cursor_start_all"()
    set rx667_cur, rx667_start[0]
    set rx667_tgt, rx667_start[1]
    set rx667_pos, rx667_start[2]
    set rx667_curclass, rx667_start[3]
    set rx667_bstack, rx667_start[4]
    set $I19, rx667_start[5]
    store_lex unicode:"$\x{a2}", rx667_cur
    length rx667_eos, rx667_tgt
    eq $I19, 1, rx667_restart1475
    gt rx667_pos, rx667_eos, rx667_fail1476
    repr_get_attr_int $I11, self, rx667_curclass, "$!from"
    ne $I11, -1, rxscan668_done1482
    goto rxscan668_scan1481
  rxscan668_loop1480:
    inc rx667_pos
    gt rx667_pos, rx667_eos, rx667_fail1476
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!from", rx667_pos
  rxscan668_scan1481:
    nqp_rxmark rx667_bstack, rxscan668_loop1480, rx667_pos, 0
  rxscan668_done1482:
    add $I11, rx667_pos, 5
    gt $I11, rx667_eos, rx667_fail1476
    substr $S10, rx667_tgt, rx667_pos, 5
    ne $S10, ucs4:"proto", rx667_fail1476
    add rx667_pos, 5
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."ws"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1476
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt670_01485
    nqp_push_label $P11, alt670_11486
    nqp_push_label $P11, alt670_21487
    nqp_rxmark rx667_bstack, alt670_end1484, -1, 0
    rx667_cur."!alt"(rx667_pos, "alt_nfa__18_1381281830.89415", $P11)
    goto rx667_fail1476
  alt670_01485:
    add $I11, rx667_pos, 5
    gt $I11, rx667_eos, rx667_fail1476
    substr $S10, rx667_tgt, rx667_pos, 5
    ne $S10, ucs4:"regex", rx667_fail1476
    add rx667_pos, 5
    goto alt670_end1484
  alt670_11486:
    add $I11, rx667_pos, 5
    gt $I11, rx667_eos, rx667_fail1476
    substr $S10, rx667_tgt, rx667_pos, 5
    ne $S10, ucs4:"token", rx667_fail1476
    add rx667_pos, 5
    goto alt670_end1484
  alt670_21487:
    add $I11, rx667_pos, 4
    gt $I11, rx667_eos, rx667_fail1476
    substr $S10, rx667_tgt, rx667_pos, 4
    ne $S10, ucs4:"rule", rx667_fail1476
    add rx667_pos, 4
    goto alt670_end1484
  alt670_end1484:
    nqp_rxcommit rx667_bstack, alt670_end1484
    rx667_cur."!cursor_pass"(rx667_pos, 'backtrack'=>1)
    .return (rx667_cur)
  rx667_restart1475:
    repr_get_attr_obj rx667_cstack, rx667_cur, rx667_curclass, "$!cstack"
  rx667_fail1476:
    unless rx667_bstack, rx667_done1474
    pop $I19, rx667_bstack
    if_null rx667_cstack, rx667_cstack_done1479
    unless rx667_cstack, rx667_cstack_done1479
    dec $I19
    set $P11, rx667_cstack[$I19]
  rx667_cstack_done1479:
    pop rx667_rep, rx667_bstack
    pop rx667_pos, rx667_bstack
    pop $I19, rx667_bstack
    lt rx667_pos, -1, rx667_done1474
    lt rx667_pos, 0, rx667_fail1476
    eq $I19, 0, rx667_fail1476
    nqp_islist $I20, rx667_cstack
    unless $I20, rx667_jump1477
    elements $I18, rx667_bstack
    le $I18, 0, rx667_cut1478
    dec $I18
    set $I18, rx667_bstack[$I18]
  rx667_cut1478:
    assign rx667_cstack, $I18
  rx667_jump1477:
    jump $I19
  rx667_done1474:
    rx667_cur."!cursor_fail"()
    .return (rx667_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 938
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx672_start
    .local string rx672_tgt
    .local int rx672_pos
    .local int rx672_off
    .local int rx672_eos
    .local int rx672_rep
    .local pmc rx672_cur
    .local pmc rx672_curclass
    .local pmc rx672_bstack
    .local pmc rx672_cstack
    rx672_start = self."!cursor_start_all"()
    set rx672_cur, rx672_start[0]
    set rx672_tgt, rx672_start[1]
    set rx672_pos, rx672_start[2]
    set rx672_curclass, rx672_start[3]
    set rx672_bstack, rx672_start[4]
    set $I19, rx672_start[5]
    store_lex unicode:"$\x{a2}", rx672_cur
    length rx672_eos, rx672_tgt
    eq $I19, 1, rx672_restart1491
    gt rx672_pos, rx672_eos, rx672_fail1492
    repr_get_attr_int $I11, self, rx672_curclass, "$!from"
    ne $I11, -1, rxscan673_done1498
    goto rxscan673_scan1497
  rxscan673_loop1496:
    inc rx672_pos
    gt rx672_pos, rx672_eos, rx672_fail1492
    repr_bind_attr_int rx672_cur, rx672_curclass, "$!from", rx672_pos
  rxscan673_scan1497:
    nqp_rxmark rx672_bstack, rxscan673_loop1496, rx672_pos, 0
  rxscan673_done1498:
    repr_bind_attr_int rx672_cur, rx672_curclass, "$!pos", rx672_pos
    $P11 = rx672_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx672_curclass, "$!pos"
    lt $I11, 0, rx672_fail1492
    nqp_rxmark rx672_bstack, rxsubrule674_pass1499, -1, 0
  rxsubrule674_pass1499:
    rx672_cstack = rx672_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx672_pos, $P11, rx672_curclass, "$!pos"
    rx672_cur."!cursor_pass"(rx672_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx672_cur)
  rx672_restart1491:
    repr_get_attr_obj rx672_cstack, rx672_cur, rx672_curclass, "$!cstack"
  rx672_fail1492:
    unless rx672_bstack, rx672_done1490
    pop $I19, rx672_bstack
    if_null rx672_cstack, rx672_cstack_done1495
    unless rx672_cstack, rx672_cstack_done1495
    dec $I19
    set $P11, rx672_cstack[$I19]
  rx672_cstack_done1495:
    pop rx672_rep, rx672_bstack
    pop rx672_pos, rx672_bstack
    pop $I19, rx672_bstack
    lt rx672_pos, -1, rx672_done1490
    lt rx672_pos, 0, rx672_fail1492
    eq $I19, 0, rx672_fail1492
    nqp_islist $I20, rx672_cstack
    unless $I20, rx672_jump1493
    elements $I18, rx672_bstack
    le $I18, 0, rx672_cut1494
    dec $I18
    set $I18, rx672_bstack[$I18]
  rx672_cut1494:
    assign rx672_cstack, $I18
  rx672_jump1493:
    jump $I19
  rx672_done1490:
    rx672_cur."!cursor_fail"()
    .return (rx672_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 939
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx675_start
    .local string rx675_tgt
    .local int rx675_pos
    .local int rx675_off
    .local int rx675_eos
    .local int rx675_rep
    .local pmc rx675_cur
    .local pmc rx675_curclass
    .local pmc rx675_bstack
    .local pmc rx675_cstack
    rx675_start = self."!cursor_start_all"()
    set rx675_cur, rx675_start[0]
    set rx675_tgt, rx675_start[1]
    set rx675_pos, rx675_start[2]
    set rx675_curclass, rx675_start[3]
    set rx675_bstack, rx675_start[4]
    set $I19, rx675_start[5]
    store_lex unicode:"$\x{a2}", rx675_cur
    length rx675_eos, rx675_tgt
    eq $I19, 1, rx675_restart1502
    gt rx675_pos, rx675_eos, rx675_fail1503
    repr_get_attr_int $I11, self, rx675_curclass, "$!from"
    ne $I11, -1, rxscan676_done1509
    goto rxscan676_scan1508
  rxscan676_loop1507:
    inc rx675_pos
    gt rx675_pos, rx675_eos, rx675_fail1503
    repr_bind_attr_int rx675_cur, rx675_curclass, "$!from", rx675_pos
  rxscan676_scan1508:
    nqp_rxmark rx675_bstack, rxscan676_loop1507, rx675_pos, 0
  rxscan676_done1509:
    repr_bind_attr_int rx675_cur, rx675_curclass, "$!pos", rx675_pos
    $P11 = rx675_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx675_curclass, "$!pos"
    lt $I11, 0, rx675_fail1503
    nqp_rxmark rx675_bstack, rxsubrule677_pass1510, -1, 0
  rxsubrule677_pass1510:
    rx675_cstack = rx675_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx675_pos, $P11, rx675_curclass, "$!pos"
    rx675_cur."!cursor_pass"(rx675_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx675_cur)
  rx675_restart1502:
    repr_get_attr_obj rx675_cstack, rx675_cur, rx675_curclass, "$!cstack"
  rx675_fail1503:
    unless rx675_bstack, rx675_done1501
    pop $I19, rx675_bstack
    if_null rx675_cstack, rx675_cstack_done1506
    unless rx675_cstack, rx675_cstack_done1506
    dec $I19
    set $P11, rx675_cstack[$I19]
  rx675_cstack_done1506:
    pop rx675_rep, rx675_bstack
    pop rx675_pos, rx675_bstack
    pop $I19, rx675_bstack
    lt rx675_pos, -1, rx675_done1501
    lt rx675_pos, 0, rx675_fail1503
    eq $I19, 0, rx675_fail1503
    nqp_islist $I20, rx675_cstack
    unless $I20, rx675_jump1504
    elements $I18, rx675_bstack
    le $I18, 0, rx675_cut1505
    dec $I18
    set $I18, rx675_bstack[$I18]
  rx675_cut1505:
    assign rx675_cstack, $I18
  rx675_jump1504:
    jump $I19
  rx675_done1501:
    rx675_cur."!cursor_fail"()
    .return (rx675_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 940
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx678_start
    .local string rx678_tgt
    .local int rx678_pos
    .local int rx678_off
    .local int rx678_eos
    .local int rx678_rep
    .local pmc rx678_cur
    .local pmc rx678_curclass
    .local pmc rx678_bstack
    .local pmc rx678_cstack
    rx678_start = self."!cursor_start_all"()
    set rx678_cur, rx678_start[0]
    set rx678_tgt, rx678_start[1]
    set rx678_pos, rx678_start[2]
    set rx678_curclass, rx678_start[3]
    set rx678_bstack, rx678_start[4]
    set $I19, rx678_start[5]
    store_lex unicode:"$\x{a2}", rx678_cur
    length rx678_eos, rx678_tgt
    eq $I19, 1, rx678_restart1513
    gt rx678_pos, rx678_eos, rx678_fail1514
    repr_get_attr_int $I11, self, rx678_curclass, "$!from"
    ne $I11, -1, rxscan679_done1520
    goto rxscan679_scan1519
  rxscan679_loop1518:
    inc rx678_pos
    gt rx678_pos, rx678_eos, rx678_fail1514
    repr_bind_attr_int rx678_cur, rx678_curclass, "$!from", rx678_pos
  rxscan679_scan1519:
    nqp_rxmark rx678_bstack, rxscan679_loop1518, rx678_pos, 0
  rxscan679_done1520:
    repr_bind_attr_int rx678_cur, rx678_curclass, "$!pos", rx678_pos
    $P11 = rx678_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx678_curclass, "$!pos"
    lt $I11, 0, rx678_fail1514
    repr_bind_attr_int rx678_cur, rx678_curclass, "$!pos", rx678_pos
    $P11 = rx678_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx678_curclass, "$!pos"
    lt $I11, 0, rx678_fail1514
    nqp_rxmark rx678_bstack, rxsubrule680_pass1521, -1, 0
  rxsubrule680_pass1521:
    rx678_cstack = rx678_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx678_pos, $P11, rx678_curclass, "$!pos"
    rx678_cur."!cursor_pass"(rx678_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx678_cur)
  rx678_restart1513:
    repr_get_attr_obj rx678_cstack, rx678_cur, rx678_curclass, "$!cstack"
  rx678_fail1514:
    unless rx678_bstack, rx678_done1512
    pop $I19, rx678_bstack
    if_null rx678_cstack, rx678_cstack_done1517
    unless rx678_cstack, rx678_cstack_done1517
    dec $I19
    set $P11, rx678_cstack[$I19]
  rx678_cstack_done1517:
    pop rx678_rep, rx678_bstack
    pop rx678_pos, rx678_bstack
    pop $I19, rx678_bstack
    lt rx678_pos, -1, rx678_done1512
    lt rx678_pos, 0, rx678_fail1514
    eq $I19, 0, rx678_fail1514
    nqp_islist $I20, rx678_cstack
    unless $I20, rx678_jump1515
    elements $I18, rx678_bstack
    le $I18, 0, rx678_cut1516
    dec $I18
    set $I18, rx678_bstack[$I18]
  rx678_cut1516:
    assign rx678_cstack, $I18
  rx678_jump1515:
    jump $I19
  rx678_done1512:
    rx678_cur."!cursor_fail"()
    .return (rx678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_96_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 941
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_405_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx681_start
    .local string rx681_tgt
    .local int rx681_pos
    .local int rx681_off
    .local int rx681_eos
    .local int rx681_rep
    .local pmc rx681_cur
    .local pmc rx681_curclass
    .local pmc rx681_bstack
    .local pmc rx681_cstack
    rx681_start = self."!cursor_start_all"()
    set rx681_cur, rx681_start[0]
    set rx681_tgt, rx681_start[1]
    set rx681_pos, rx681_start[2]
    set rx681_curclass, rx681_start[3]
    set rx681_bstack, rx681_start[4]
    set $I19, rx681_start[5]
    store_lex unicode:"$\x{a2}", rx681_cur
    length rx681_eos, rx681_tgt
    eq $I19, 1, rx681_restart1524
    gt rx681_pos, rx681_eos, rx681_fail1525
    repr_get_attr_int $I11, self, rx681_curclass, "$!from"
    ne $I11, -1, rxscan682_done1531
    goto rxscan682_scan1530
  rxscan682_loop1529:
    inc rx681_pos
    gt rx681_pos, rx681_eos, rx681_fail1525
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!from", rx681_pos
  rxscan682_scan1530:
    nqp_rxmark rx681_bstack, rxscan682_loop1529, rx681_pos, 0
  rxscan682_done1531:
    nqp_rxmark rx681_bstack, rxcap683_fail1533, rx681_pos, 0
    add $I11, rx681_pos, 4
    gt $I11, rx681_eos, rx681_fail1525
    substr $S10, rx681_tgt, rx681_pos, 4
    ne $S10, ucs4:"last", rx681_fail1525
    add rx681_pos, 4
    nqp_rxpeek $I19, rx681_bstack, rxcap683_fail1533
    inc $I19
    set $I11, rx681_bstack[$I19]
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!pos", rx681_pos
    $P11 = rx681_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx681_pos)
    rx681_cstack = rx681_cur."!cursor_capture"($P11, "sym")
    goto rxcap683_done1532
  rxcap683_fail1533:
    goto rx681_fail1525
  rxcap683_done1532:
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!pos", rx681_pos
    $P11 = rx681_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx681_curclass, "$!pos"
    ge $I11, 0, rx681_fail1525
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!pos", rx681_pos
    store_lex unicode:"$\x{a2}", rx681_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_405_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx681_cur."!cursor_pass"(rx681_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx681_cur)
  rx681_restart1524:
    repr_get_attr_obj rx681_cstack, rx681_cur, rx681_curclass, "$!cstack"
  rx681_fail1525:
    unless rx681_bstack, rx681_done1523
    pop $I19, rx681_bstack
    if_null rx681_cstack, rx681_cstack_done1528
    unless rx681_cstack, rx681_cstack_done1528
    dec $I19
    set $P11, rx681_cstack[$I19]
  rx681_cstack_done1528:
    pop rx681_rep, rx681_bstack
    pop rx681_pos, rx681_bstack
    pop $I19, rx681_bstack
    lt rx681_pos, -1, rx681_done1523
    lt rx681_pos, 0, rx681_fail1525
    eq $I19, 0, rx681_fail1525
    nqp_islist $I20, rx681_cstack
    unless $I20, rx681_jump1526
    elements $I18, rx681_bstack
    le $I18, 0, rx681_cut1527
    dec $I18
    set $I18, rx681_bstack[$I18]
  rx681_cut1527:
    assign rx681_cstack, $I18
  rx681_jump1526:
    jump $I19
  rx681_done1523:
    rx681_cur."!cursor_fail"()
    .return (rx681_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1381281828.51527") :anon :lex :outer("cuid_96_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 941

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_97_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 942
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_406_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx684_start
    .local string rx684_tgt
    .local int rx684_pos
    .local int rx684_off
    .local int rx684_eos
    .local int rx684_rep
    .local pmc rx684_cur
    .local pmc rx684_curclass
    .local pmc rx684_bstack
    .local pmc rx684_cstack
    rx684_start = self."!cursor_start_all"()
    set rx684_cur, rx684_start[0]
    set rx684_tgt, rx684_start[1]
    set rx684_pos, rx684_start[2]
    set rx684_curclass, rx684_start[3]
    set rx684_bstack, rx684_start[4]
    set $I19, rx684_start[5]
    store_lex unicode:"$\x{a2}", rx684_cur
    length rx684_eos, rx684_tgt
    eq $I19, 1, rx684_restart1536
    gt rx684_pos, rx684_eos, rx684_fail1537
    repr_get_attr_int $I11, self, rx684_curclass, "$!from"
    ne $I11, -1, rxscan685_done1543
    goto rxscan685_scan1542
  rxscan685_loop1541:
    inc rx684_pos
    gt rx684_pos, rx684_eos, rx684_fail1537
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!from", rx684_pos
  rxscan685_scan1542:
    nqp_rxmark rx684_bstack, rxscan685_loop1541, rx684_pos, 0
  rxscan685_done1543:
    nqp_rxmark rx684_bstack, rxcap686_fail1545, rx684_pos, 0
    add $I11, rx684_pos, 4
    gt $I11, rx684_eos, rx684_fail1537
    substr $S10, rx684_tgt, rx684_pos, 4
    ne $S10, ucs4:"next", rx684_fail1537
    add rx684_pos, 4
    nqp_rxpeek $I19, rx684_bstack, rxcap686_fail1545
    inc $I19
    set $I11, rx684_bstack[$I19]
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!pos", rx684_pos
    $P11 = rx684_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx684_pos)
    rx684_cstack = rx684_cur."!cursor_capture"($P11, "sym")
    goto rxcap686_done1544
  rxcap686_fail1545:
    goto rx684_fail1537
  rxcap686_done1544:
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!pos", rx684_pos
    $P11 = rx684_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx684_curclass, "$!pos"
    ge $I11, 0, rx684_fail1537
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!pos", rx684_pos
    store_lex unicode:"$\x{a2}", rx684_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_406_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx684_cur."!cursor_pass"(rx684_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx684_cur)
  rx684_restart1536:
    repr_get_attr_obj rx684_cstack, rx684_cur, rx684_curclass, "$!cstack"
  rx684_fail1537:
    unless rx684_bstack, rx684_done1535
    pop $I19, rx684_bstack
    if_null rx684_cstack, rx684_cstack_done1540
    unless rx684_cstack, rx684_cstack_done1540
    dec $I19
    set $P11, rx684_cstack[$I19]
  rx684_cstack_done1540:
    pop rx684_rep, rx684_bstack
    pop rx684_pos, rx684_bstack
    pop $I19, rx684_bstack
    lt rx684_pos, -1, rx684_done1535
    lt rx684_pos, 0, rx684_fail1537
    eq $I19, 0, rx684_fail1537
    nqp_islist $I20, rx684_cstack
    unless $I20, rx684_jump1538
    elements $I18, rx684_bstack
    le $I18, 0, rx684_cut1539
    dec $I18
    set $I18, rx684_bstack[$I18]
  rx684_cut1539:
    assign rx684_cstack, $I18
  rx684_jump1538:
    jump $I19
  rx684_done1535:
    rx684_cur."!cursor_fail"()
    .return (rx684_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1381281828.51527") :anon :lex :outer("cuid_97_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 942

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_98_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 943
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_407_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx687_start
    .local string rx687_tgt
    .local int rx687_pos
    .local int rx687_off
    .local int rx687_eos
    .local int rx687_rep
    .local pmc rx687_cur
    .local pmc rx687_curclass
    .local pmc rx687_bstack
    .local pmc rx687_cstack
    rx687_start = self."!cursor_start_all"()
    set rx687_cur, rx687_start[0]
    set rx687_tgt, rx687_start[1]
    set rx687_pos, rx687_start[2]
    set rx687_curclass, rx687_start[3]
    set rx687_bstack, rx687_start[4]
    set $I19, rx687_start[5]
    store_lex unicode:"$\x{a2}", rx687_cur
    length rx687_eos, rx687_tgt
    eq $I19, 1, rx687_restart1548
    gt rx687_pos, rx687_eos, rx687_fail1549
    repr_get_attr_int $I11, self, rx687_curclass, "$!from"
    ne $I11, -1, rxscan688_done1555
    goto rxscan688_scan1554
  rxscan688_loop1553:
    inc rx687_pos
    gt rx687_pos, rx687_eos, rx687_fail1549
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!from", rx687_pos
  rxscan688_scan1554:
    nqp_rxmark rx687_bstack, rxscan688_loop1553, rx687_pos, 0
  rxscan688_done1555:
    nqp_rxmark rx687_bstack, rxcap689_fail1557, rx687_pos, 0
    add $I11, rx687_pos, 4
    gt $I11, rx687_eos, rx687_fail1549
    substr $S10, rx687_tgt, rx687_pos, 4
    ne $S10, ucs4:"redo", rx687_fail1549
    add rx687_pos, 4
    nqp_rxpeek $I19, rx687_bstack, rxcap689_fail1557
    inc $I19
    set $I11, rx687_bstack[$I19]
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    $P11 = rx687_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx687_pos)
    rx687_cstack = rx687_cur."!cursor_capture"($P11, "sym")
    goto rxcap689_done1556
  rxcap689_fail1557:
    goto rx687_fail1549
  rxcap689_done1556:
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    $P11 = rx687_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx687_curclass, "$!pos"
    ge $I11, 0, rx687_fail1549
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    store_lex unicode:"$\x{a2}", rx687_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_407_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx687_cur."!cursor_pass"(rx687_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx687_cur)
  rx687_restart1548:
    repr_get_attr_obj rx687_cstack, rx687_cur, rx687_curclass, "$!cstack"
  rx687_fail1549:
    unless rx687_bstack, rx687_done1547
    pop $I19, rx687_bstack
    if_null rx687_cstack, rx687_cstack_done1552
    unless rx687_cstack, rx687_cstack_done1552
    dec $I19
    set $P11, rx687_cstack[$I19]
  rx687_cstack_done1552:
    pop rx687_rep, rx687_bstack
    pop rx687_pos, rx687_bstack
    pop $I19, rx687_bstack
    lt rx687_pos, -1, rx687_done1547
    lt rx687_pos, 0, rx687_fail1549
    eq $I19, 0, rx687_fail1549
    nqp_islist $I20, rx687_cstack
    unless $I20, rx687_jump1550
    elements $I18, rx687_bstack
    le $I18, 0, rx687_cut1551
    dec $I18
    set $I18, rx687_bstack[$I18]
  rx687_cut1551:
    assign rx687_cstack, $I18
  rx687_jump1550:
    jump $I19
  rx687_done1547:
    rx687_cur."!cursor_fail"()
    .return (rx687_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1381281828.51527") :anon :lex :outer("cuid_98_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 943

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_99_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 945
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx690_start
    .local string rx690_tgt
    .local int rx690_pos
    .local int rx690_off
    .local int rx690_eos
    .local int rx690_rep
    .local pmc rx690_cur
    .local pmc rx690_curclass
    .local pmc rx690_bstack
    .local pmc rx690_cstack
    rx690_start = self."!cursor_start_all"()
    set rx690_cur, rx690_start[0]
    set rx690_tgt, rx690_start[1]
    set rx690_pos, rx690_start[2]
    set rx690_curclass, rx690_start[3]
    set rx690_bstack, rx690_start[4]
    set $I19, rx690_start[5]
    store_lex unicode:"$\x{a2}", rx690_cur
    length rx690_eos, rx690_tgt
    eq $I19, 1, rx690_restart1560
    gt rx690_pos, rx690_eos, rx690_fail1561
    repr_get_attr_int $I11, self, rx690_curclass, "$!from"
    ne $I11, -1, rxscan691_done1567
    goto rxscan691_scan1566
  rxscan691_loop1565:
    inc rx690_pos
    gt rx690_pos, rx690_eos, rx690_fail1561
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!from", rx690_pos
  rxscan691_scan1566:
    nqp_rxmark rx690_bstack, rxscan691_loop1565, rx690_pos, 0
  rxscan691_done1567:
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1561
    nqp_rxmark rx690_bstack, rxsubrule692_pass1568, -1, 0
  rxsubrule692_pass1568:
    rx690_cstack = rx690_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    nqp_rxmark rx690_bstack, rxquantr693_done1570, rx690_pos, 0
  rxquantr693_loop1569:
    ge rx690_pos, rx690_eos, rx690_fail1561
    substr $S11, rx690_tgt, rx690_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx690_fail1561
    inc rx690_pos
    nqp_rxpeek $I19, rx690_bstack, rxquantr693_done1570
    inc $I19
    inc $I19
    set rx690_rep, rx690_bstack[$I19]
    nqp_rxcommit rx690_bstack, rxquantr693_done1570
    inc rx690_rep
    nqp_rxmark rx690_bstack, rxquantr693_done1570, rx690_pos, rx690_rep
    goto rxquantr693_loop1569
  rxquantr693_done1570:
    add $I11, rx690_pos, 2
    gt $I11, rx690_eos, rx690_fail1561
    substr $S10, rx690_tgt, rx690_pos, 2
    ne $S10, ucs4:"=>", rx690_fail1561
    add rx690_pos, 2
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."ws"()
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1561
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1561
    nqp_rxmark rx690_bstack, rxsubrule695_pass1572, -1, 0
  rxsubrule695_pass1572:
    rx690_cstack = rx690_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    rx690_cur."!cursor_pass"(rx690_pos, "fatarrow", 'backtrack'=>1)
    .return (rx690_cur)
  rx690_restart1560:
    repr_get_attr_obj rx690_cstack, rx690_cur, rx690_curclass, "$!cstack"
  rx690_fail1561:
    unless rx690_bstack, rx690_done1559
    pop $I19, rx690_bstack
    if_null rx690_cstack, rx690_cstack_done1564
    unless rx690_cstack, rx690_cstack_done1564
    dec $I19
    set $P11, rx690_cstack[$I19]
  rx690_cstack_done1564:
    pop rx690_rep, rx690_bstack
    pop rx690_pos, rx690_bstack
    pop $I19, rx690_bstack
    lt rx690_pos, -1, rx690_done1559
    lt rx690_pos, 0, rx690_fail1561
    eq $I19, 0, rx690_fail1561
    nqp_islist $I20, rx690_cstack
    unless $I20, rx690_jump1562
    elements $I18, rx690_bstack
    le $I18, 0, rx690_cut1563
    dec $I18
    set $I18, rx690_bstack[$I18]
  rx690_cut1563:
    assign rx690_cstack, $I18
  rx690_jump1562:
    jump $I19
  rx690_done1559:
    rx690_cur."!cursor_fail"()
    .return (rx690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_100_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 949
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx696_start
    .local string rx696_tgt
    .local int rx696_pos
    .local int rx696_off
    .local int rx696_eos
    .local int rx696_rep
    .local pmc rx696_cur
    .local pmc rx696_curclass
    .local pmc rx696_bstack
    .local pmc rx696_cstack
    rx696_start = self."!cursor_start_all"()
    set rx696_cur, rx696_start[0]
    set rx696_tgt, rx696_start[1]
    set rx696_pos, rx696_start[2]
    set rx696_curclass, rx696_start[3]
    set rx696_bstack, rx696_start[4]
    set $I19, rx696_start[5]
    store_lex unicode:"$\x{a2}", rx696_cur
    length rx696_eos, rx696_tgt
    eq $I19, 1, rx696_restart1575
    gt rx696_pos, rx696_eos, rx696_fail1576
    repr_get_attr_int $I11, self, rx696_curclass, "$!from"
    ne $I11, -1, rxscan697_done1582
    goto rxscan697_scan1581
  rxscan697_loop1580:
    inc rx696_pos
    gt rx696_pos, rx696_eos, rx696_fail1576
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!from", rx696_pos
  rxscan697_scan1581:
    nqp_rxmark rx696_bstack, rxscan697_loop1580, rx696_pos, 0
  rxscan697_done1582:
    add $I11, rx696_pos, 1
    gt $I11, rx696_eos, rx696_fail1576
    substr $S10, rx696_tgt, rx696_pos, 1
    ne $S10, ucs4:":", rx696_fail1576
    add rx696_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt698_01584
    nqp_push_label $P11, alt698_11588
    nqp_push_label $P11, alt698_21594
    nqp_push_label $P11, alt698_31596
    nqp_rxmark rx696_bstack, alt698_end1583, -1, 0
    rx696_cur."!alt"(rx696_pos, "alt_nfa__19_1381281830.97118", $P11)
    goto rx696_fail1576
  alt698_01584:
    nqp_rxmark rx696_bstack, rxcap699_fail1586, rx696_pos, 0
    add $I11, rx696_pos, 1
    gt $I11, rx696_eos, rx696_fail1576
    substr $S10, rx696_tgt, rx696_pos, 1
    ne $S10, ucs4:"!", rx696_fail1576
    add rx696_pos, 1
    nqp_rxpeek $I19, rx696_bstack, rxcap699_fail1586
    inc $I19
    set $I11, rx696_bstack[$I19]
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx696_pos)
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "not")
    goto rxcap699_done1585
  rxcap699_fail1586:
    goto rx696_fail1576
  rxcap699_done1585:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1576
    nqp_rxmark rx696_bstack, rxsubrule700_pass1587, -1, 0
  rxsubrule700_pass1587:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    goto alt698_end1583
  alt698_11588:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1576
    nqp_rxmark rx696_bstack, rxsubrule701_pass1589, -1, 0
  rxsubrule701_pass1589:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    nqp_rxmark rx696_bstack, rxquantr702_done1591, rx696_pos, 0
  rxquantr702_loop1590:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1576
    goto rxsubrule703_pass1592
  rxsubrule703_back1593:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1576
  rxsubrule703_pass1592:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule703_back1593
    push rx696_bstack, $I11
    push rx696_bstack, 0
    push rx696_bstack, rx696_pos
    elements $I11, rx696_cstack
    push rx696_bstack, $I11
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    nqp_rxpeek $I19, rx696_bstack, rxquantr702_done1591
    inc $I19
    inc $I19
    set rx696_rep, rx696_bstack[$I19]
    nqp_rxcommit rx696_bstack, rxquantr702_done1591
    inc rx696_rep
  rxquantr702_done1591:
    goto alt698_end1583
  alt698_21594:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1576
    nqp_rxmark rx696_bstack, rxsubrule704_pass1595, -1, 0
  rxsubrule704_pass1595:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    goto alt698_end1583
  alt698_31596:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."variable"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1576
    nqp_rxmark rx696_bstack, rxsubrule705_pass1597, -1, 0
  rxsubrule705_pass1597:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    goto alt698_end1583
  alt698_end1583:
    nqp_rxcommit rx696_bstack, alt698_end1583
    rx696_cur."!cursor_pass"(rx696_pos, "colonpair", 'backtrack'=>1)
    .return (rx696_cur)
  rx696_restart1575:
    repr_get_attr_obj rx696_cstack, rx696_cur, rx696_curclass, "$!cstack"
  rx696_fail1576:
    unless rx696_bstack, rx696_done1574
    pop $I19, rx696_bstack
    if_null rx696_cstack, rx696_cstack_done1579
    unless rx696_cstack, rx696_cstack_done1579
    dec $I19
    set $P11, rx696_cstack[$I19]
  rx696_cstack_done1579:
    pop rx696_rep, rx696_bstack
    pop rx696_pos, rx696_bstack
    pop $I19, rx696_bstack
    lt rx696_pos, -1, rx696_done1574
    lt rx696_pos, 0, rx696_fail1576
    eq $I19, 0, rx696_fail1576
    nqp_islist $I20, rx696_cstack
    unless $I20, rx696_jump1577
    elements $I18, rx696_bstack
    le $I18, 0, rx696_cut1578
    dec $I18
    set $I18, rx696_bstack[$I18]
  rx696_cut1578:
    assign rx696_cstack, $I18
  rx696_jump1577:
    jump $I19
  rx696_done1574:
    rx696_cur."!cursor_fail"()
    .return (rx696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_101_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 959
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx706_start
    .local string rx706_tgt
    .local int rx706_pos
    .local int rx706_off
    .local int rx706_eos
    .local int rx706_rep
    .local pmc rx706_cur
    .local pmc rx706_curclass
    .local pmc rx706_bstack
    .local pmc rx706_cstack
    rx706_start = self."!cursor_start_all"()
    set rx706_cur, rx706_start[0]
    set rx706_tgt, rx706_start[1]
    set rx706_pos, rx706_start[2]
    set rx706_curclass, rx706_start[3]
    set rx706_bstack, rx706_start[4]
    set $I19, rx706_start[5]
    store_lex unicode:"$\x{a2}", rx706_cur
    length rx706_eos, rx706_tgt
    eq $I19, 1, rx706_restart1600
    gt rx706_pos, rx706_eos, rx706_fail1601
    repr_get_attr_int $I11, self, rx706_curclass, "$!from"
    ne $I11, -1, rxscan707_done1607
    goto rxscan707_scan1606
  rxscan707_loop1605:
    inc rx706_pos
    gt rx706_pos, rx706_eos, rx706_fail1601
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!from", rx706_pos
  rxscan707_scan1606:
    nqp_rxmark rx706_bstack, rxscan707_loop1605, rx706_pos, 0
  rxscan707_done1607:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt708_01609
    nqp_push_label $P11, alt708_11616
    nqp_push_label $P11, alt708_21619
    nqp_push_label $P11, alt708_31627
    nqp_rxmark rx706_bstack, alt708_end1608, -1, 0
    rx706_cur."!alt"(rx706_pos, "alt_nfa__20_1381281830.99611", $P11)
    goto rx706_fail1601
  alt708_01609:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    nqp_rxmark rx706_bstack, rxsubrule709_pass1610, -1, 0
  rxsubrule709_pass1610:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    nqp_rxmark rx706_bstack, rxquantr710_done1612, rx706_pos, 0
  rxquantr710_loop1611:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    goto rxsubrule711_pass1613
  rxsubrule711_back1614:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
  rxsubrule711_pass1613:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule711_back1614
    push rx706_bstack, $I11
    push rx706_bstack, 0
    push rx706_bstack, rx706_pos
    elements $I11, rx706_cstack
    push rx706_bstack, $I11
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    nqp_rxpeek $I19, rx706_bstack, rxquantr710_done1612
    inc $I19
    inc $I19
    set rx706_rep, rx706_bstack[$I19]
    nqp_rxcommit rx706_bstack, rxquantr710_done1612
    inc rx706_rep
  rxquantr710_done1612:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."name"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    nqp_rxmark rx706_bstack, rxsubrule712_pass1615, -1, 0
  rxsubrule712_pass1615:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    goto alt708_end1608
  alt708_11616:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    nqp_rxmark rx706_bstack, rxsubrule713_pass1617, -1, 0
  rxsubrule713_pass1617:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    ge rx706_pos, rx706_eos, rx706_fail1601
    substr $S11, rx706_tgt, rx706_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx706_fail1601
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    nqp_rxmark rx706_bstack, rxsubrule714_pass1618, -1, 0
  rxsubrule714_pass1618:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    goto alt708_end1608
  alt708_21619:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    nqp_rxmark rx706_bstack, rxsubrule715_pass1620, -1, 0
  rxsubrule715_pass1620:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    add $I11, rx706_pos, 1
    gt $I11, rx706_eos, rx706_fail1601
    substr $S10, rx706_tgt, rx706_pos, 1
    ne $S10, ucs4:"(", rx706_fail1601
    add rx706_pos, 1
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    nqp_rxmark rx706_bstack, rxsubrule716_pass1621, -1, 0
  rxsubrule716_pass1621:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
  alt717_01623:
    nqp_rxmark rx706_bstack, alt717_11624, rx706_pos, 0
    add $I11, rx706_pos, 1
    gt $I11, rx706_eos, rx706_fail1601
    substr $S10, rx706_tgt, rx706_pos, 1
    ne $S10, ucs4:")", rx706_fail1601
    add rx706_pos, 1
    goto alt717_end1622
  alt717_11624:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
    goto rxsubrule718_pass1625
  rxsubrule718_back1626:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1601
  rxsubrule718_pass1625:
    rx706_cstack = rx706_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule718_back1626
    push rx706_bstack, $I11
    push rx706_bstack, 0
    push rx706_bstack, rx706_pos
    elements $I11, rx706_cstack
    push rx706_bstack, $I11
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
  alt717_end1622:
    goto alt708_end1608
  alt708_31627:
    nqp_rxmark rx706_bstack, rxcap719_fail1629, rx706_pos, 0
    add $I11, rx706_pos, 1
    gt $I11, rx706_eos, rx706_fail1601
    substr $S10, rx706_tgt, rx706_pos, 1
    ne $S10, ucs4:"$", rx706_fail1601
    add rx706_pos, 1
    nqp_rxpeek $I19, rx706_bstack, rxcap719_fail1629
    inc $I19
    set $I11, rx706_bstack[$I19]
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx706_pos)
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    goto rxcap719_done1628
  rxcap719_fail1629:
    goto rx706_fail1601
  rxcap719_done1628:
    nqp_rxmark rx706_bstack, rxcap720_fail1631, rx706_pos, 0
    ge rx706_pos, rx706_eos, rx706_fail1601
    substr $S11, rx706_tgt, rx706_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx706_fail1601
    inc rx706_pos
    nqp_rxpeek $I19, rx706_bstack, rxcap720_fail1631
    inc $I19
    set $I11, rx706_bstack[$I19]
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx706_pos)
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap720_done1630
  rxcap720_fail1631:
    goto rx706_fail1601
  rxcap720_done1630:
    goto alt708_end1608
  alt708_end1608:
    rx706_cur."!cursor_pass"(rx706_pos, "variable", 'backtrack'=>1)
    .return (rx706_cur)
  rx706_restart1600:
    repr_get_attr_obj rx706_cstack, rx706_cur, rx706_curclass, "$!cstack"
  rx706_fail1601:
    unless rx706_bstack, rx706_done1599
    pop $I19, rx706_bstack
    if_null rx706_cstack, rx706_cstack_done1604
    unless rx706_cstack, rx706_cstack_done1604
    dec $I19
    set $P11, rx706_cstack[$I19]
  rx706_cstack_done1604:
    pop rx706_rep, rx706_bstack
    pop rx706_pos, rx706_bstack
    pop $I19, rx706_bstack
    lt rx706_pos, -1, rx706_done1599
    lt rx706_pos, 0, rx706_fail1601
    eq $I19, 0, rx706_fail1601
    nqp_islist $I20, rx706_cstack
    unless $I20, rx706_jump1602
    elements $I18, rx706_bstack
    le $I18, 0, rx706_cut1603
    dec $I18
    set $I18, rx706_bstack[$I18]
  rx706_cut1603:
    assign rx706_cstack, $I18
  rx706_jump1602:
    jump $I19
  rx706_done1599:
    rx706_cur."!cursor_fail"()
    .return (rx706_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_102_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 966
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx721_start
    .local string rx721_tgt
    .local int rx721_pos
    .local int rx721_off
    .local int rx721_eos
    .local int rx721_rep
    .local pmc rx721_cur
    .local pmc rx721_curclass
    .local pmc rx721_bstack
    .local pmc rx721_cstack
    rx721_start = self."!cursor_start_all"()
    set rx721_cur, rx721_start[0]
    set rx721_tgt, rx721_start[1]
    set rx721_pos, rx721_start[2]
    set rx721_curclass, rx721_start[3]
    set rx721_bstack, rx721_start[4]
    set $I19, rx721_start[5]
    store_lex unicode:"$\x{a2}", rx721_cur
    length rx721_eos, rx721_tgt
    eq $I19, 1, rx721_restart1634
    gt rx721_pos, rx721_eos, rx721_fail1635
    repr_get_attr_int $I11, self, rx721_curclass, "$!from"
    ne $I11, -1, rxscan722_done1641
    goto rxscan722_scan1640
  rxscan722_loop1639:
    inc rx721_pos
    gt rx721_pos, rx721_eos, rx721_fail1635
    repr_bind_attr_int rx721_cur, rx721_curclass, "$!from", rx721_pos
  rxscan722_scan1640:
    nqp_rxmark rx721_bstack, rxscan722_loop1639, rx721_pos, 0
  rxscan722_done1641:
    ge rx721_pos, rx721_eos, rx721_fail1635
    substr $S11, rx721_tgt, rx721_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx721_fail1635
    inc rx721_pos
    rx721_cur."!cursor_pass"(rx721_pos, "sigil", 'backtrack'=>1)
    .return (rx721_cur)
  rx721_restart1634:
    repr_get_attr_obj rx721_cstack, rx721_cur, rx721_curclass, "$!cstack"
  rx721_fail1635:
    unless rx721_bstack, rx721_done1633
    pop $I19, rx721_bstack
    if_null rx721_cstack, rx721_cstack_done1638
    unless rx721_cstack, rx721_cstack_done1638
    dec $I19
    set $P11, rx721_cstack[$I19]
  rx721_cstack_done1638:
    pop rx721_rep, rx721_bstack
    pop rx721_pos, rx721_bstack
    pop $I19, rx721_bstack
    lt rx721_pos, -1, rx721_done1633
    lt rx721_pos, 0, rx721_fail1635
    eq $I19, 0, rx721_fail1635
    nqp_islist $I20, rx721_cstack
    unless $I20, rx721_jump1636
    elements $I18, rx721_bstack
    le $I18, 0, rx721_cut1637
    dec $I18
    set $I18, rx721_bstack[$I18]
  rx721_cut1637:
    assign rx721_cstack, $I18
  rx721_jump1636:
    jump $I19
  rx721_done1633:
    rx721_cur."!cursor_fail"()
    .return (rx721_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_103_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 968
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx723_start
    .local string rx723_tgt
    .local int rx723_pos
    .local int rx723_off
    .local int rx723_eos
    .local int rx723_rep
    .local pmc rx723_cur
    .local pmc rx723_curclass
    .local pmc rx723_bstack
    .local pmc rx723_cstack
    rx723_start = self."!cursor_start_all"()
    set rx723_cur, rx723_start[0]
    set rx723_tgt, rx723_start[1]
    set rx723_pos, rx723_start[2]
    set rx723_curclass, rx723_start[3]
    set rx723_bstack, rx723_start[4]
    set $I19, rx723_start[5]
    store_lex unicode:"$\x{a2}", rx723_cur
    length rx723_eos, rx723_tgt
    eq $I19, 1, rx723_restart1644
    gt rx723_pos, rx723_eos, rx723_fail1645
    repr_get_attr_int $I11, self, rx723_curclass, "$!from"
    ne $I11, -1, rxscan724_done1651
    goto rxscan724_scan1650
  rxscan724_loop1649:
    inc rx723_pos
    gt rx723_pos, rx723_eos, rx723_fail1645
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!from", rx723_pos
  rxscan724_scan1650:
    nqp_rxmark rx723_bstack, rxscan724_loop1649, rx723_pos, 0
  rxscan724_done1651:
    ge rx723_pos, rx723_eos, rx723_fail1645
    substr $S11, rx723_tgt, rx723_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx723_fail1645
    inc rx723_pos
    rx723_cur."!cursor_pass"(rx723_pos, "twigil", 'backtrack'=>1)
    .return (rx723_cur)
  rx723_restart1644:
    repr_get_attr_obj rx723_cstack, rx723_cur, rx723_curclass, "$!cstack"
  rx723_fail1645:
    unless rx723_bstack, rx723_done1643
    pop $I19, rx723_bstack
    if_null rx723_cstack, rx723_cstack_done1648
    unless rx723_cstack, rx723_cstack_done1648
    dec $I19
    set $P11, rx723_cstack[$I19]
  rx723_cstack_done1648:
    pop rx723_rep, rx723_bstack
    pop rx723_pos, rx723_bstack
    pop $I19, rx723_bstack
    lt rx723_pos, -1, rx723_done1643
    lt rx723_pos, 0, rx723_fail1645
    eq $I19, 0, rx723_fail1645
    nqp_islist $I20, rx723_cstack
    unless $I20, rx723_jump1646
    elements $I18, rx723_bstack
    le $I18, 0, rx723_cut1647
    dec $I18
    set $I18, rx723_bstack[$I18]
  rx723_cut1647:
    assign rx723_cstack, $I18
  rx723_jump1646:
    jump $I19
  rx723_done1643:
    rx723_cur."!cursor_fail"()
    .return (rx723_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_104_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 970
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_105_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 971
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_109 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx725_start
    .local string rx725_tgt
    .local int rx725_pos
    .local int rx725_off
    .local int rx725_eos
    .local int rx725_rep
    .local pmc rx725_cur
    .local pmc rx725_curclass
    .local pmc rx725_bstack
    .local pmc rx725_cstack
    rx725_start = self."!cursor_start_all"()
    set rx725_cur, rx725_start[0]
    set rx725_tgt, rx725_start[1]
    set rx725_pos, rx725_start[2]
    set rx725_curclass, rx725_start[3]
    set rx725_bstack, rx725_start[4]
    set $I19, rx725_start[5]
    store_lex unicode:"$\x{a2}", rx725_cur
    length rx725_eos, rx725_tgt
    eq $I19, 1, rx725_restart1654
    gt rx725_pos, rx725_eos, rx725_fail1655
    repr_get_attr_int $I11, self, rx725_curclass, "$!from"
    ne $I11, -1, rxscan726_done1661
    goto rxscan726_scan1660
  rxscan726_loop1659:
    inc rx725_pos
    gt rx725_pos, rx725_eos, rx725_fail1655
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!from", rx725_pos
  rxscan726_scan1660:
    nqp_rxmark rx725_bstack, rxscan726_loop1659, rx725_pos, 0
  rxscan726_done1661:
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    store_lex unicode:"$\x{a2}", rx725_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1662
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_109, $P5004
    repr_defined $I5001, fb_tmp_109
    unless $I5001 goto if727_else1663 
    set $P5006, fb_tmp_109["$PACKAGE"]
    set $P5008, $P5006
    goto if727_end1664
  if727_else1663:
    null $P5007
    set $P5008, $P5007
  if727_end1664:
    unless_null $P5008, vivi_7281665
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7281665:
    unless_null $P5008, vivi_7291666
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7291666:
    set $P5003, $P5008
  fallback1662:
    set $P101, $P5003
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    store_lex unicode:"$\x{a2}", rx725_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx725_bstack, rxcap730_fail1668, rx725_pos, 0
    add $I11, rx725_pos, 6
    gt $I11, rx725_eos, rx725_fail1655
    substr $S10, rx725_tgt, rx725_pos, 6
    ne $S10, ucs4:"module", rx725_fail1655
    add rx725_pos, 6
    nqp_rxpeek $I19, rx725_bstack, rxcap730_fail1668
    inc $I19
    set $I11, rx725_bstack[$I19]
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    $P11 = rx725_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx725_pos)
    rx725_cstack = rx725_cur."!cursor_capture"($P11, "sym")
    goto rxcap730_done1667
  rxcap730_fail1668:
    goto rx725_fail1655
  rxcap730_done1667:
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    $P11 = rx725_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx725_curclass, "$!pos"
    lt $I11, 0, rx725_fail1655
    nqp_rxmark rx725_bstack, rxsubrule731_pass1669, -1, 0
  rxsubrule731_pass1669:
    rx725_cstack = rx725_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx725_pos, $P11, rx725_curclass, "$!pos"
    rx725_cur."!cursor_pass"(rx725_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx725_cur)
  rx725_restart1654:
    repr_get_attr_obj rx725_cstack, rx725_cur, rx725_curclass, "$!cstack"
  rx725_fail1655:
    unless rx725_bstack, rx725_done1653
    pop $I19, rx725_bstack
    if_null rx725_cstack, rx725_cstack_done1658
    unless rx725_cstack, rx725_cstack_done1658
    dec $I19
    set $P11, rx725_cstack[$I19]
  rx725_cstack_done1658:
    pop rx725_rep, rx725_bstack
    pop rx725_pos, rx725_bstack
    pop $I19, rx725_bstack
    lt rx725_pos, -1, rx725_done1653
    lt rx725_pos, 0, rx725_fail1655
    eq $I19, 0, rx725_fail1655
    nqp_islist $I20, rx725_cstack
    unless $I20, rx725_jump1656
    elements $I18, rx725_bstack
    le $I18, 0, rx725_cut1657
    dec $I18
    set $I18, rx725_bstack[$I18]
  rx725_cut1657:
    assign rx725_cstack, $I18
  rx725_jump1656:
    jump $I19
  rx725_done1653:
    rx725_cur."!cursor_fail"()
    .return (rx725_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_106_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 976
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_110 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx732_start
    .local string rx732_tgt
    .local int rx732_pos
    .local int rx732_off
    .local int rx732_eos
    .local int rx732_rep
    .local pmc rx732_cur
    .local pmc rx732_curclass
    .local pmc rx732_bstack
    .local pmc rx732_cstack
    rx732_start = self."!cursor_start_all"()
    set rx732_cur, rx732_start[0]
    set rx732_tgt, rx732_start[1]
    set rx732_pos, rx732_start[2]
    set rx732_curclass, rx732_start[3]
    set rx732_bstack, rx732_start[4]
    set $I19, rx732_start[5]
    store_lex unicode:"$\x{a2}", rx732_cur
    length rx732_eos, rx732_tgt
    eq $I19, 1, rx732_restart1672
    gt rx732_pos, rx732_eos, rx732_fail1673
    repr_get_attr_int $I11, self, rx732_curclass, "$!from"
    ne $I11, -1, rxscan733_done1679
    goto rxscan733_scan1678
  rxscan733_loop1677:
    inc rx732_pos
    gt rx732_pos, rx732_eos, rx732_fail1673
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!from", rx732_pos
  rxscan733_scan1678:
    nqp_rxmark rx732_bstack, rxscan733_loop1677, rx732_pos, 0
  rxscan733_done1679:
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    store_lex unicode:"$\x{a2}", rx732_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1680
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_110, $P5004
    repr_defined $I5001, fb_tmp_110
    unless $I5001 goto if734_else1681 
    set $P5006, fb_tmp_110["$PACKAGE"]
    set $P5008, $P5006
    goto if734_end1682
  if734_else1681:
    null $P5007
    set $P5008, $P5007
  if734_end1682:
    unless_null $P5008, vivi_7351683
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7351683:
    unless_null $P5008, vivi_7361684
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7361684:
    set $P5003, $P5008
  fallback1680:
    set $P101, $P5003
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    store_lex unicode:"$\x{a2}", rx732_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx732_bstack, rxcap737_fail1686, rx732_pos, 0
    add $I11, rx732_pos, 7
    gt $I11, rx732_eos, rx732_fail1673
    substr $S10, rx732_tgt, rx732_pos, 7
    ne $S10, ucs4:"knowhow", rx732_fail1673
    add rx732_pos, 7
    nqp_rxpeek $I19, rx732_bstack, rxcap737_fail1686
    inc $I19
    set $I11, rx732_bstack[$I19]
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx732_pos)
    rx732_cstack = rx732_cur."!cursor_capture"($P11, "sym")
    goto rxcap737_done1685
  rxcap737_fail1686:
    goto rx732_fail1673
  rxcap737_done1685:
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx732_curclass, "$!pos"
    lt $I11, 0, rx732_fail1673
    nqp_rxmark rx732_bstack, rxsubrule738_pass1687, -1, 0
  rxsubrule738_pass1687:
    rx732_cstack = rx732_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx732_pos, $P11, rx732_curclass, "$!pos"
    rx732_cur."!cursor_pass"(rx732_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx732_cur)
  rx732_restart1672:
    repr_get_attr_obj rx732_cstack, rx732_cur, rx732_curclass, "$!cstack"
  rx732_fail1673:
    unless rx732_bstack, rx732_done1671
    pop $I19, rx732_bstack
    if_null rx732_cstack, rx732_cstack_done1676
    unless rx732_cstack, rx732_cstack_done1676
    dec $I19
    set $P11, rx732_cstack[$I19]
  rx732_cstack_done1676:
    pop rx732_rep, rx732_bstack
    pop rx732_pos, rx732_bstack
    pop $I19, rx732_bstack
    lt rx732_pos, -1, rx732_done1671
    lt rx732_pos, 0, rx732_fail1673
    eq $I19, 0, rx732_fail1673
    nqp_islist $I20, rx732_cstack
    unless $I20, rx732_jump1674
    elements $I18, rx732_bstack
    le $I18, 0, rx732_cut1675
    dec $I18
    set $I18, rx732_bstack[$I18]
  rx732_cut1675:
    assign rx732_cstack, $I18
  rx732_jump1674:
    jump $I19
  rx732_done1671:
    rx732_cur."!cursor_fail"()
    .return (rx732_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_107_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 981
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_111 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx739_start
    .local string rx739_tgt
    .local int rx739_pos
    .local int rx739_off
    .local int rx739_eos
    .local int rx739_rep
    .local pmc rx739_cur
    .local pmc rx739_curclass
    .local pmc rx739_bstack
    .local pmc rx739_cstack
    rx739_start = self."!cursor_start_all"()
    set rx739_cur, rx739_start[0]
    set rx739_tgt, rx739_start[1]
    set rx739_pos, rx739_start[2]
    set rx739_curclass, rx739_start[3]
    set rx739_bstack, rx739_start[4]
    set $I19, rx739_start[5]
    store_lex unicode:"$\x{a2}", rx739_cur
    length rx739_eos, rx739_tgt
    eq $I19, 1, rx739_restart1690
    gt rx739_pos, rx739_eos, rx739_fail1691
    repr_get_attr_int $I11, self, rx739_curclass, "$!from"
    ne $I11, -1, rxscan740_done1697
    goto rxscan740_scan1696
  rxscan740_loop1695:
    inc rx739_pos
    gt rx739_pos, rx739_eos, rx739_fail1691
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!from", rx739_pos
  rxscan740_scan1696:
    nqp_rxmark rx739_bstack, rxscan740_loop1695, rx739_pos, 0
  rxscan740_done1697:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    store_lex unicode:"$\x{a2}", rx739_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1698
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_111, $P5004
    repr_defined $I5001, fb_tmp_111
    unless $I5001 goto if741_else1699 
    set $P5006, fb_tmp_111["$PACKAGE"]
    set $P5008, $P5006
    goto if741_end1700
  if741_else1699:
    null $P5007
    set $P5008, $P5007
  if741_end1700:
    unless_null $P5008, vivi_7421701
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7421701:
    unless_null $P5008, vivi_7431702
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7431702:
    set $P5003, $P5008
  fallback1698:
    set $P101, $P5003
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    store_lex unicode:"$\x{a2}", rx739_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx739_bstack, rxcap744_fail1704, rx739_pos, 0
    add $I11, rx739_pos, 5
    gt $I11, rx739_eos, rx739_fail1691
    substr $S10, rx739_tgt, rx739_pos, 5
    ne $S10, ucs4:"class", rx739_fail1691
    add rx739_pos, 5
    nqp_rxpeek $I19, rx739_bstack, rxcap744_fail1704
    inc $I19
    set $I11, rx739_bstack[$I19]
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx739_pos)
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "sym")
    goto rxcap744_done1703
  rxcap744_fail1704:
    goto rx739_fail1691
  rxcap744_done1703:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1691
    nqp_rxmark rx739_bstack, rxsubrule745_pass1705, -1, 0
  rxsubrule745_pass1705:
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    rx739_cur."!cursor_pass"(rx739_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx739_cur)
  rx739_restart1690:
    repr_get_attr_obj rx739_cstack, rx739_cur, rx739_curclass, "$!cstack"
  rx739_fail1691:
    unless rx739_bstack, rx739_done1689
    pop $I19, rx739_bstack
    if_null rx739_cstack, rx739_cstack_done1694
    unless rx739_cstack, rx739_cstack_done1694
    dec $I19
    set $P11, rx739_cstack[$I19]
  rx739_cstack_done1694:
    pop rx739_rep, rx739_bstack
    pop rx739_pos, rx739_bstack
    pop $I19, rx739_bstack
    lt rx739_pos, -1, rx739_done1689
    lt rx739_pos, 0, rx739_fail1691
    eq $I19, 0, rx739_fail1691
    nqp_islist $I20, rx739_cstack
    unless $I20, rx739_jump1692
    elements $I18, rx739_bstack
    le $I18, 0, rx739_cut1693
    dec $I18
    set $I18, rx739_bstack[$I18]
  rx739_cut1693:
    assign rx739_cstack, $I18
  rx739_jump1692:
    jump $I19
  rx739_done1689:
    rx739_cur."!cursor_fail"()
    .return (rx739_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_108_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 986
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_112 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx746_start
    .local string rx746_tgt
    .local int rx746_pos
    .local int rx746_off
    .local int rx746_eos
    .local int rx746_rep
    .local pmc rx746_cur
    .local pmc rx746_curclass
    .local pmc rx746_bstack
    .local pmc rx746_cstack
    rx746_start = self."!cursor_start_all"()
    set rx746_cur, rx746_start[0]
    set rx746_tgt, rx746_start[1]
    set rx746_pos, rx746_start[2]
    set rx746_curclass, rx746_start[3]
    set rx746_bstack, rx746_start[4]
    set $I19, rx746_start[5]
    store_lex unicode:"$\x{a2}", rx746_cur
    length rx746_eos, rx746_tgt
    eq $I19, 1, rx746_restart1708
    gt rx746_pos, rx746_eos, rx746_fail1709
    repr_get_attr_int $I11, self, rx746_curclass, "$!from"
    ne $I11, -1, rxscan747_done1715
    goto rxscan747_scan1714
  rxscan747_loop1713:
    inc rx746_pos
    gt rx746_pos, rx746_eos, rx746_fail1709
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!from", rx746_pos
  rxscan747_scan1714:
    nqp_rxmark rx746_bstack, rxscan747_loop1713, rx746_pos, 0
  rxscan747_done1715:
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    store_lex unicode:"$\x{a2}", rx746_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1716
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_112, $P5004
    repr_defined $I5001, fb_tmp_112
    unless $I5001 goto if748_else1717 
    set $P5006, fb_tmp_112["$PACKAGE"]
    set $P5008, $P5006
    goto if748_end1718
  if748_else1717:
    null $P5007
    set $P5008, $P5007
  if748_end1718:
    unless_null $P5008, vivi_7491719
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7491719:
    unless_null $P5008, vivi_7501720
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7501720:
    set $P5003, $P5008
  fallback1716:
    set $P101, $P5003
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    store_lex unicode:"$\x{a2}", rx746_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx746_bstack, rxcap751_fail1722, rx746_pos, 0
    add $I11, rx746_pos, 7
    gt $I11, rx746_eos, rx746_fail1709
    substr $S10, rx746_tgt, rx746_pos, 7
    ne $S10, ucs4:"grammar", rx746_fail1709
    add rx746_pos, 7
    nqp_rxpeek $I19, rx746_bstack, rxcap751_fail1722
    inc $I19
    set $I11, rx746_bstack[$I19]
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    $P11 = rx746_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx746_pos)
    rx746_cstack = rx746_cur."!cursor_capture"($P11, "sym")
    goto rxcap751_done1721
  rxcap751_fail1722:
    goto rx746_fail1709
  rxcap751_done1721:
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    $P11 = rx746_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx746_curclass, "$!pos"
    lt $I11, 0, rx746_fail1709
    nqp_rxmark rx746_bstack, rxsubrule752_pass1723, -1, 0
  rxsubrule752_pass1723:
    rx746_cstack = rx746_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx746_pos, $P11, rx746_curclass, "$!pos"
    rx746_cur."!cursor_pass"(rx746_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx746_cur)
  rx746_restart1708:
    repr_get_attr_obj rx746_cstack, rx746_cur, rx746_curclass, "$!cstack"
  rx746_fail1709:
    unless rx746_bstack, rx746_done1707
    pop $I19, rx746_bstack
    if_null rx746_cstack, rx746_cstack_done1712
    unless rx746_cstack, rx746_cstack_done1712
    dec $I19
    set $P11, rx746_cstack[$I19]
  rx746_cstack_done1712:
    pop rx746_rep, rx746_bstack
    pop rx746_pos, rx746_bstack
    pop $I19, rx746_bstack
    lt rx746_pos, -1, rx746_done1707
    lt rx746_pos, 0, rx746_fail1709
    eq $I19, 0, rx746_fail1709
    nqp_islist $I20, rx746_cstack
    unless $I20, rx746_jump1710
    elements $I18, rx746_bstack
    le $I18, 0, rx746_cut1711
    dec $I18
    set $I18, rx746_bstack[$I18]
  rx746_cut1711:
    assign rx746_cstack, $I18
  rx746_jump1710:
    jump $I19
  rx746_done1707:
    rx746_cur."!cursor_fail"()
    .return (rx746_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_109_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 991
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_113 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx753_start
    .local string rx753_tgt
    .local int rx753_pos
    .local int rx753_off
    .local int rx753_eos
    .local int rx753_rep
    .local pmc rx753_cur
    .local pmc rx753_curclass
    .local pmc rx753_bstack
    .local pmc rx753_cstack
    rx753_start = self."!cursor_start_all"()
    set rx753_cur, rx753_start[0]
    set rx753_tgt, rx753_start[1]
    set rx753_pos, rx753_start[2]
    set rx753_curclass, rx753_start[3]
    set rx753_bstack, rx753_start[4]
    set $I19, rx753_start[5]
    store_lex unicode:"$\x{a2}", rx753_cur
    length rx753_eos, rx753_tgt
    eq $I19, 1, rx753_restart1726
    gt rx753_pos, rx753_eos, rx753_fail1727
    repr_get_attr_int $I11, self, rx753_curclass, "$!from"
    ne $I11, -1, rxscan754_done1733
    goto rxscan754_scan1732
  rxscan754_loop1731:
    inc rx753_pos
    gt rx753_pos, rx753_eos, rx753_fail1727
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!from", rx753_pos
  rxscan754_scan1732:
    nqp_rxmark rx753_bstack, rxscan754_loop1731, rx753_pos, 0
  rxscan754_done1733:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1734
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_113, $P5004
    repr_defined $I5001, fb_tmp_113
    unless $I5001 goto if755_else1735 
    set $P5006, fb_tmp_113["$PACKAGE"]
    set $P5008, $P5006
    goto if755_end1736
  if755_else1735:
    null $P5007
    set $P5008, $P5007
  if755_end1736:
    unless_null $P5008, vivi_7561737
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7561737:
    unless_null $P5008, vivi_7571738
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7571738:
    set $P5003, $P5008
  fallback1734:
    set $P101, $P5003
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx753_bstack, rxcap758_fail1740, rx753_pos, 0
    add $I11, rx753_pos, 4
    gt $I11, rx753_eos, rx753_fail1727
    substr $S10, rx753_tgt, rx753_pos, 4
    ne $S10, ucs4:"role", rx753_fail1727
    add rx753_pos, 4
    nqp_rxpeek $I19, rx753_bstack, rxcap758_fail1740
    inc $I19
    set $I11, rx753_bstack[$I19]
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx753_pos)
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "sym")
    goto rxcap758_done1739
  rxcap758_fail1740:
    goto rx753_fail1727
  rxcap758_done1739:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1727
    nqp_rxmark rx753_bstack, rxsubrule759_pass1741, -1, 0
  rxsubrule759_pass1741:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    rx753_cur."!cursor_pass"(rx753_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx753_cur)
  rx753_restart1726:
    repr_get_attr_obj rx753_cstack, rx753_cur, rx753_curclass, "$!cstack"
  rx753_fail1727:
    unless rx753_bstack, rx753_done1725
    pop $I19, rx753_bstack
    if_null rx753_cstack, rx753_cstack_done1730
    unless rx753_cstack, rx753_cstack_done1730
    dec $I19
    set $P11, rx753_cstack[$I19]
  rx753_cstack_done1730:
    pop rx753_rep, rx753_bstack
    pop rx753_pos, rx753_bstack
    pop $I19, rx753_bstack
    lt rx753_pos, -1, rx753_done1725
    lt rx753_pos, 0, rx753_fail1727
    eq $I19, 0, rx753_fail1727
    nqp_islist $I20, rx753_cstack
    unless $I20, rx753_jump1728
    elements $I18, rx753_bstack
    le $I18, 0, rx753_cut1729
    dec $I18
    set $I18, rx753_bstack[$I18]
  rx753_cut1729:
    assign rx753_cstack, $I18
  rx753_jump1728:
    jump $I19
  rx753_done1725:
    rx753_cur."!cursor_fail"()
    .return (rx753_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_110_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 996
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_114 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx760_start
    .local string rx760_tgt
    .local int rx760_pos
    .local int rx760_off
    .local int rx760_eos
    .local int rx760_rep
    .local pmc rx760_cur
    .local pmc rx760_curclass
    .local pmc rx760_bstack
    .local pmc rx760_cstack
    rx760_start = self."!cursor_start_all"()
    set rx760_cur, rx760_start[0]
    set rx760_tgt, rx760_start[1]
    set rx760_pos, rx760_start[2]
    set rx760_curclass, rx760_start[3]
    set rx760_bstack, rx760_start[4]
    set $I19, rx760_start[5]
    store_lex unicode:"$\x{a2}", rx760_cur
    length rx760_eos, rx760_tgt
    eq $I19, 1, rx760_restart1744
    gt rx760_pos, rx760_eos, rx760_fail1745
    repr_get_attr_int $I11, self, rx760_curclass, "$!from"
    ne $I11, -1, rxscan761_done1751
    goto rxscan761_scan1750
  rxscan761_loop1749:
    inc rx760_pos
    gt rx760_pos, rx760_eos, rx760_fail1745
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!from", rx760_pos
  rxscan761_scan1750:
    nqp_rxmark rx760_bstack, rxscan761_loop1749, rx760_pos, 0
  rxscan761_done1751:
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    store_lex unicode:"$\x{a2}", rx760_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1752
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_114, $P5004
    repr_defined $I5001, fb_tmp_114
    unless $I5001 goto if762_else1753 
    set $P5006, fb_tmp_114["$PACKAGE"]
    set $P5008, $P5006
    goto if762_end1754
  if762_else1753:
    null $P5007
    set $P5008, $P5007
  if762_end1754:
    unless_null $P5008, vivi_7631755
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7631755:
    unless_null $P5008, vivi_7641756
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7641756:
    set $P5003, $P5008
  fallback1752:
    set $P101, $P5003
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    store_lex unicode:"$\x{a2}", rx760_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx760_bstack, rxcap765_fail1758, rx760_pos, 0
    add $I11, rx760_pos, 6
    gt $I11, rx760_eos, rx760_fail1745
    substr $S10, rx760_tgt, rx760_pos, 6
    ne $S10, ucs4:"native", rx760_fail1745
    add rx760_pos, 6
    nqp_rxpeek $I19, rx760_bstack, rxcap765_fail1758
    inc $I19
    set $I11, rx760_bstack[$I19]
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx760_pos)
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "sym")
    goto rxcap765_done1757
  rxcap765_fail1758:
    goto rx760_fail1745
  rxcap765_done1757:
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1745
    nqp_rxmark rx760_bstack, rxsubrule766_pass1759, -1, 0
  rxsubrule766_pass1759:
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    rx760_cur."!cursor_pass"(rx760_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx760_cur)
  rx760_restart1744:
    repr_get_attr_obj rx760_cstack, rx760_cur, rx760_curclass, "$!cstack"
  rx760_fail1745:
    unless rx760_bstack, rx760_done1743
    pop $I19, rx760_bstack
    if_null rx760_cstack, rx760_cstack_done1748
    unless rx760_cstack, rx760_cstack_done1748
    dec $I19
    set $P11, rx760_cstack[$I19]
  rx760_cstack_done1748:
    pop rx760_rep, rx760_bstack
    pop rx760_pos, rx760_bstack
    pop $I19, rx760_bstack
    lt rx760_pos, -1, rx760_done1743
    lt rx760_pos, 0, rx760_fail1745
    eq $I19, 0, rx760_fail1745
    nqp_islist $I20, rx760_cstack
    unless $I20, rx760_jump1746
    elements $I18, rx760_bstack
    le $I18, 0, rx760_cut1747
    dec $I18
    set $I18, rx760_bstack[$I18]
  rx760_cut1747:
    assign rx760_cstack, $I18
  rx760_jump1746:
    jump $I19
  rx760_done1743:
    rx760_cur."!cursor_fail"()
    .return (rx760_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_111_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1001
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_115 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx767_start
    .local string rx767_tgt
    .local int rx767_pos
    .local int rx767_off
    .local int rx767_eos
    .local int rx767_rep
    .local pmc rx767_cur
    .local pmc rx767_curclass
    .local pmc rx767_bstack
    .local pmc rx767_cstack
    rx767_start = self."!cursor_start_all"()
    set rx767_cur, rx767_start[0]
    set rx767_tgt, rx767_start[1]
    set rx767_pos, rx767_start[2]
    set rx767_curclass, rx767_start[3]
    set rx767_bstack, rx767_start[4]
    set $I19, rx767_start[5]
    store_lex unicode:"$\x{a2}", rx767_cur
    length rx767_eos, rx767_tgt
    eq $I19, 1, rx767_restart1762
    gt rx767_pos, rx767_eos, rx767_fail1763
    repr_get_attr_int $I11, self, rx767_curclass, "$!from"
    ne $I11, -1, rxscan768_done1769
    goto rxscan768_scan1768
  rxscan768_loop1767:
    inc rx767_pos
    gt rx767_pos, rx767_eos, rx767_fail1763
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!from", rx767_pos
  rxscan768_scan1768:
    nqp_rxmark rx767_bstack, rxscan768_loop1767, rx767_pos, 0
  rxscan768_done1769:
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    store_lex unicode:"$\x{a2}", rx767_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1770
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_115, $P5004
    repr_defined $I5001, fb_tmp_115
    unless $I5001 goto if769_else1771 
    set $P5006, fb_tmp_115["$PACKAGE"]
    set $P5008, $P5006
    goto if769_end1772
  if769_else1771:
    null $P5007
    set $P5008, $P5007
  if769_end1772:
    unless_null $P5008, vivi_7701773
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_7701773:
    unless_null $P5008, vivi_7711774
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7711774:
    set $P5003, $P5008
  fallback1770:
    set $P101, $P5003
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    store_lex unicode:"$\x{a2}", rx767_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx767_bstack, rxcap772_fail1776, rx767_pos, 0
    add $I11, rx767_pos, 4
    gt $I11, rx767_eos, rx767_fail1763
    substr $S10, rx767_tgt, rx767_pos, 4
    ne $S10, ucs4:"stub", rx767_fail1763
    add rx767_pos, 4
    nqp_rxpeek $I19, rx767_bstack, rxcap772_fail1776
    inc $I19
    set $I11, rx767_bstack[$I19]
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx767_pos)
    rx767_cstack = rx767_cur."!cursor_capture"($P11, "sym")
    goto rxcap772_done1775
  rxcap772_fail1776:
    goto rx767_fail1763
  rxcap772_done1775:
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."name"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    nqp_rxmark rx767_bstack, rxsubrule774_pass1778, -1, 0
  rxsubrule774_pass1778:
    rx767_cstack = rx767_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 9
    gt $I11, rx767_eos, rx767_fail1763
    substr $S10, rx767_tgt, rx767_pos, 9
    ne $S10, ucs4:"metaclass", rx767_fail1763
    add rx767_pos, 9
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."name"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    nqp_rxmark rx767_bstack, rxsubrule777_pass1781, -1, 0
  rxsubrule777_pass1781:
    rx767_cstack = rx767_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 1
    gt $I11, rx767_eos, rx767_fail1763
    substr $S10, rx767_tgt, rx767_pos, 1
    ne $S10, ucs4:"{", rx767_fail1763
    add rx767_pos, 1
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 3
    gt $I11, rx767_eos, rx767_fail1763
    substr $S10, rx767_tgt, rx767_pos, 3
    ne $S10, ucs4:"...", rx767_fail1763
    add rx767_pos, 3
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 1
    gt $I11, rx767_eos, rx767_fail1763
    substr $S10, rx767_tgt, rx767_pos, 1
    ne $S10, ucs4:"}", rx767_fail1763
    add rx767_pos, 1
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1763
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    rx767_cur."!cursor_pass"(rx767_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx767_cur)
  rx767_restart1762:
    repr_get_attr_obj rx767_cstack, rx767_cur, rx767_curclass, "$!cstack"
  rx767_fail1763:
    unless rx767_bstack, rx767_done1761
    pop $I19, rx767_bstack
    if_null rx767_cstack, rx767_cstack_done1766
    unless rx767_cstack, rx767_cstack_done1766
    dec $I19
    set $P11, rx767_cstack[$I19]
  rx767_cstack_done1766:
    pop rx767_rep, rx767_bstack
    pop rx767_pos, rx767_bstack
    pop $I19, rx767_bstack
    lt rx767_pos, -1, rx767_done1761
    lt rx767_pos, 0, rx767_fail1763
    eq $I19, 0, rx767_fail1763
    nqp_islist $I20, rx767_cstack
    unless $I20, rx767_jump1764
    elements $I18, rx767_bstack
    le $I18, 0, rx767_cut1765
    dec $I18
    set $I18, rx767_bstack[$I18]
  rx767_cut1765:
    assign rx767_cstack, $I18
  rx767_jump1764:
    jump $I19
  rx767_done1761:
    rx767_cur."!cursor_fail"()
    .return (rx767_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_112_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1009
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_408_1381281828.51527' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_409_1381281828.51527' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx782_start
    .local string rx782_tgt
    .local int rx782_pos
    .local int rx782_off
    .local int rx782_eos
    .local int rx782_rep
    .local pmc rx782_cur
    .local pmc rx782_curclass
    .local pmc rx782_bstack
    .local pmc rx782_cstack
    rx782_start = self."!cursor_start_all"()
    set rx782_cur, rx782_start[0]
    set rx782_tgt, rx782_start[1]
    set rx782_pos, rx782_start[2]
    set rx782_curclass, rx782_start[3]
    set rx782_bstack, rx782_start[4]
    set $I19, rx782_start[5]
    store_lex unicode:"$\x{a2}", rx782_cur
    length rx782_eos, rx782_tgt
    eq $I19, 1, rx782_restart1788
    gt rx782_pos, rx782_eos, rx782_fail1789
    repr_get_attr_int $I11, self, rx782_curclass, "$!from"
    ne $I11, -1, rxscan783_done1795
    goto rxscan783_scan1794
  rxscan783_loop1793:
    inc rx782_pos
    gt rx782_pos, rx782_eos, rx782_fail1789
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!from", rx782_pos
  rxscan783_scan1794:
    nqp_rxmark rx782_bstack, rxscan783_loop1793, rx782_pos, 0
  rxscan783_done1795:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
    unless_null $P101, fallback1797
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_116, $P5003
    repr_defined $I5001, fb_tmp_116
    unless $I5001 goto if785_else1798 
    set $P5005, fb_tmp_116["$PACKAGE"]
    set $P5007, $P5005
    goto if785_end1799
  if785_else1798:
    null $P5006
    set $P5007, $P5006
  if785_end1799:
    unless_null $P5007, vivi_7861800
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_7861800:
    unless_null $P5007, vivi_7871801
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_7871801:
    set $P101, $P5007
  fallback1797:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
.annotate 'line', 1011
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1803
    nqp_get_sc_object $P5012, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5011, $P5012
    set fb_tmp_117, $P5011
    repr_defined $I5002, fb_tmp_117
    unless $I5002 goto if789_else1804 
    set $P5013, fb_tmp_117["$W"]
    set $P5015, $P5013
    goto if789_end1805
  if789_else1804:
    null $P5014
    set $P5015, $P5014
  if789_end1805:
    unless_null $P5015, vivi_7901806
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_7901806:
    unless_null $P5015, vivi_7911807
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_7911807:
    set $P5010, $P5015
  fallback1803:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."name"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule793_pass1809, -1, 0
  rxsubrule793_pass1809:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantr797_done1814, rx782_pos, 0
  rxquantr797_loop1813:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_408_1381281828.51527' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx782_fail1789
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:"[", rx782_fail1789
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule804_pass1823, -1, 0
  rxsubrule804_pass1823:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt805_01825:
    nqp_rxmark rx782_bstack, alt805_11826, rx782_pos, 0
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:"]", rx782_fail1789
    add rx782_pos, 1
    goto alt805_end1824
  alt805_11826:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    goto rxsubrule806_pass1827
  rxsubrule806_back1828:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
  rxsubrule806_pass1827:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule806_back1828
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt805_end1824:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxpeek $I19, rx782_bstack, rxquantr797_done1814
    inc $I19
    inc $I19
    set rx782_rep, rx782_bstack[$I19]
    nqp_rxcommit rx782_bstack, rxquantr797_done1814
    inc rx782_rep
  rxquantr797_done1814:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantr809_done1832, rx782_pos, 0
  rxquantr809_loop1831:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 2
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 2
    ne $S10, ucs4:"is", rx782_fail1789
    add rx782_pos, 2
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 5
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 5
    ne $S10, ucs4:"repr(", rx782_fail1789
    add rx782_pos, 5
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule813_pass1836, -1, 0
  rxsubrule813_pass1836:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:")", rx782_fail1789
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxpeek $I19, rx782_bstack, rxquantr809_done1832
    inc $I19
    inc $I19
    set rx782_rep, rx782_bstack[$I19]
    nqp_rxcommit rx782_bstack, rxquantr809_done1832
    inc rx782_rep
  rxquantr809_done1832:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_409_1381281828.51527' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantr935_done2042, rx782_pos, 0
  rxquantr935_loop2041:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxcap937_fail2045, rx782_pos, 0
    add $I11, rx782_pos, 9
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 9
    ne $S10, ucs4:"is export", rx782_fail1789
    add rx782_pos, 9
    nqp_rxpeek $I19, rx782_bstack, rxcap937_fail2045
    inc $I19
    set $I11, rx782_bstack[$I19]
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx782_pos)
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "export")
    goto rxcap937_done2044
  rxcap937_fail2045:
    goto rx782_fail1789
  rxcap937_done2044:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxpeek $I19, rx782_bstack, rxquantr935_done2042
    inc $I19
    inc $I19
    set rx782_rep, rx782_bstack[$I19]
    nqp_rxcommit rx782_bstack, rxquantr935_done2042
    inc rx782_rep
  rxquantr935_done2042:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantr940_done2049, rx782_pos, 0
  rxquantr940_loop2048:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 2
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 2
    ne $S10, ucs4:"is", rx782_fail1789
    add rx782_pos, 2
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."name"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule943_pass2052, -1, 0
  rxsubrule943_pass2052:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxpeek $I19, rx782_bstack, rxquantr940_done2049
    inc $I19
    inc $I19
    set rx782_rep, rx782_bstack[$I19]
    nqp_rxcommit rx782_bstack, rxquantr940_done2049
    inc rx782_rep
  rxquantr940_done2049:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantr946_done2056, rx782_pos, 0
  rxquantr946_loop2055:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 4
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 4
    ne $S10, ucs4:"does", rx782_fail1789
    add rx782_pos, 4
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."name"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule949_pass2059, -1, 0
  rxsubrule949_pass2059:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxpeek $I19, rx782_bstack, rxquantr946_done2056
    inc $I19
    inc $I19
    set rx782_rep, rx782_bstack[$I19]
    nqp_rxcommit rx782_bstack, rxquantr946_done2056
    inc rx782_rep
    nqp_rxmark rx782_bstack, rxquantr946_done2056, rx782_pos, rx782_rep
    goto rxquantr946_loop2055
  rxquantr946_done2056:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt952_02063:
    nqp_rxmark rx782_bstack, alt952_12078, rx782_pos, 0
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1789
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:";", rx782_fail1789
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule955_pass2066, -1, 0
  rxsubrule955_pass2066:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt957_02069:
    nqp_rxmark rx782_bstack, alt957_12073, rx782_pos, 0
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    lt rx782_pos, rx782_eos, rx782_fail1789
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt957_end2068
  alt957_12073:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt957_end2068:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt952_end2062
  alt952_12078:
    nqp_rxmark rx782_bstack, alt952_22083, rx782_pos, 0
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    ge rx782_pos, rx782_eos, rx782_fail1789
    substr $S11, rx782_tgt, rx782_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx782_fail1789
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    nqp_rxmark rx782_bstack, rxsubrule967_pass2081, -1, 0
  rxsubrule967_pass2081:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt952_end2062
  alt952_22083:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt952_end2062:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1789
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    rx782_cur."!cursor_pass"(rx782_pos, "package_def", 'backtrack'=>1)
    .return (rx782_cur)
  rx782_restart1788:
    repr_get_attr_obj rx782_cstack, rx782_cur, rx782_curclass, "$!cstack"
  rx782_fail1789:
    unless rx782_bstack, rx782_done1787
    pop $I19, rx782_bstack
    if_null rx782_cstack, rx782_cstack_done1792
    unless rx782_cstack, rx782_cstack_done1792
    dec $I19
    set $P11, rx782_cstack[$I19]
  rx782_cstack_done1792:
    pop rx782_rep, rx782_bstack
    pop rx782_pos, rx782_bstack
    pop $I19, rx782_bstack
    lt rx782_pos, -1, rx782_done1787
    lt rx782_pos, 0, rx782_fail1789
    eq $I19, 0, rx782_fail1789
    nqp_islist $I20, rx782_cstack
    unless $I20, rx782_jump1790
    elements $I18, rx782_bstack
    le $I18, 0, rx782_cut1791
    dec $I18
    set $I18, rx782_bstack[$I18]
  rx782_cut1791:
    assign rx782_cstack, $I18
  rx782_jump1790:
    jump $I19
  rx782_done1787:
    rx782_cur."!cursor_fail"()
    .return (rx782_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1381281828.51527") :anon :lex :outer("cuid_112_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1015
    .local pmc fb_tmp_118 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1816
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_118, $P5002
    repr_defined $I5002, fb_tmp_118
    unless $I5002 goto if799_else1817 
    set $P5004, fb_tmp_118["$PKGDECL"]
    set $P5006, $P5004
    goto if799_end1818
  if799_else1817:
    null $P5005
    set $P5006, $P5005
  if799_end1818:
    unless_null $P5006, vivi_8001819
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_8001819:
    unless_null $P5006, vivi_8011820
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_8011820:
    set $P5001, $P5006
  fallback1816:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1381281828.51527") :anon :lex :outer("cuid_112_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1018
    .lex "%args", $P101 
    .lex "$how", $P102 
    .lex "$INNER", $P103 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    find_lex $P5004, "$/"
    unless_null $P5004, fallback1842
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  fallback1842:
    set fb_tmp_119, $P5004
    repr_defined $I5001, fb_tmp_119
    unless $I5001 goto if817_else1840 
    set $P5006, fb_tmp_119["name"]
    set $P5008, $P5006
    goto if817_end1841
  if817_else1840:
    null $P5007
    set $P5008, $P5007
  if817_end1841:
    unless_null $P5008, vivi_8181843
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_8181843:
    set $S5001, $P5008
    box $P5010, $S5001
    set $P101["name"], $P5010
    find_lex $P5011, "$/"
    unless_null $P5011, fallback1848
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  fallback1848:
    set fb_tmp_120, $P5011
    repr_defined $I5002, fb_tmp_120
    unless $I5002 goto if820_else1846 
    set $P5013, fb_tmp_120["repr"]
    set $P5015, $P5013
    goto if820_end1847
  if820_else1846:
    null $P5014
    set $P5015, $P5014
  if820_end1847:
    unless_null $P5015, vivi_8211849
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_8211849:
    unless $P5015 goto if819_end1845 
.annotate 'line', 1023
    find_lex $P5017, "$/"
    unless_null $P5017, fallback1858
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  fallback1858:
    set fb_tmp_124, $P5017
    repr_defined $I5006, fb_tmp_124
    unless $I5006 goto if825_else1856 
    set $P5019, fb_tmp_124["repr"]
    set $P5021, $P5019
    goto if825_end1857
  if825_else1856:
    null $P5020
    set $P5021, $P5020
  if825_end1857:
    unless_null $P5021, vivi_8261859
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_8261859:
    set fb_tmp_123, $P5021
    repr_defined $I5005, fb_tmp_123
    unless $I5005 goto if824_else1854 
    set $P5023, fb_tmp_123["quote_delimited"]
    set $P5025, $P5023
    goto if824_end1855
  if824_else1854:
    null $P5024
    set $P5025, $P5024
  if824_end1855:
    unless_null $P5025, vivi_8271860
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_8271860:
    set fb_tmp_122, $P5025
    repr_defined $I5004, fb_tmp_122
    unless $I5004 goto if823_else1852 
    set $P5027, fb_tmp_122["quote_atom"]
    set $P5029, $P5027
    goto if823_end1853
  if823_else1852:
    null $P5028
    set $P5029, $P5028
  if823_end1853:
    unless_null $P5029, vivi_8281861
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5029, $P5030
  vivi_8281861:
    set fb_tmp_121, $P5029
    repr_defined $I5003, fb_tmp_121
    unless $I5003 goto if822_else1850 
    set $P5031, fb_tmp_121[0]
    set $P5033, $P5031
    goto if822_end1851
  if822_else1850:
    null $P5032
    set $P5033, $P5032
  if822_end1851:
    unless_null $P5033, vivi_8291862
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5034
  vivi_8291862:
    set $S5002, $P5033
    box $P5035, $S5002
    set $P101["repr"], $P5035
  if819_end1845:
    find_dynamic_lex $P5036, "%*HOW"
    unless_null $P5036, fallback1865
    nqp_get_sc_object $P5038, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5037, $P5038
    set pkg_viv_tmp_25, $P5037
    set fb_tmp_126, pkg_viv_tmp_25
    repr_defined $I5008, fb_tmp_126
    unless $I5008 goto if831_else1866 
    set $P5039, fb_tmp_126["%HOW"]
    set $P5041, $P5039
    goto if831_end1867
  if831_else1866:
    null $P5040
    set $P5041, $P5040
  if831_end1867:
    unless_null $P5041, vivi_8321868
    new $P5042, 'Hash'
    set pkg_viv_tmp_25["%HOW"], $P5042
    set $P5041, $P5042
  vivi_8321868:
    unless_null $P5041, vivi_8331869
    die "Contextual %*HOW not found"
    box $P5043, "Contextual %*HOW not found"
    set $P5041, $P5043
  vivi_8331869:
    set $P5036, $P5041
  fallback1865:
    set fb_tmp_125, $P5036
    repr_defined $I5007, fb_tmp_125
    unless $I5007 goto if830_else1863 
    find_dynamic_lex $P5045, "$*PKGDECL"
    unless_null $P5045, fallback1870
    nqp_get_sc_object $P5047, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5046, $P5047
    set fb_tmp_127, $P5046
    repr_defined $I5009, fb_tmp_127
    unless $I5009 goto if834_else1871 
    set $P5048, fb_tmp_127["$PKGDECL"]
    set $P5050, $P5048
    goto if834_end1872
  if834_else1871:
    null $P5049
    set $P5050, $P5049
  if834_end1872:
    unless_null $P5050, vivi_8351873
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5050, $P5051
  vivi_8351873:
    unless_null $P5050, vivi_8361874
    die "Contextual $*PKGDECL not found"
    box $P5052, "Contextual $*PKGDECL not found"
    set $P5050, $P5052
  vivi_8361874:
    set $P5045, $P5050
  fallback1870:
    set $S5003, $P5045
    set $P5044, fb_tmp_125[$S5003]
    set $P5054, $P5044
    goto if830_end1864
  if830_else1863:
    null $P5053
    set $P5054, $P5053
  if830_end1864:
    unless_null $P5054, vivi_8371875
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5054, $P5055
  vivi_8371875:
    set $P102, $P5054
.annotate 'line', 1027
    find_dynamic_lex $P5056, "$*W"
    unless_null $P5056, fallback1876
    nqp_get_sc_object $P5058, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5057, $P5058
    set fb_tmp_128, $P5057
    repr_defined $I5010, fb_tmp_128
    unless $I5010 goto if838_else1877 
    set $P5059, fb_tmp_128["$W"]
    set $P5061, $P5059
    goto if838_end1878
  if838_else1877:
    null $P5060
    set $P5061, $P5060
  if838_end1878:
    unless_null $P5061, vivi_8391879
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5061, $P5062
  vivi_8391879:
    unless_null $P5061, vivi_8401880
    die "Contextual $*W not found"
    box $P5063, "Contextual $*W not found"
    set $P5061, $P5063
  vivi_8401880:
    set $P5056, $P5061
  fallback1876:
    $P5064 = $P5056."cur_lexpad"()
    set $P103, $P5064
.annotate 'line', 1028
    find_dynamic_lex $P5065, "$*W"
    unless_null $P5065, fallback1881
    nqp_get_sc_object $P5067, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5066, $P5067
    set fb_tmp_129, $P5066
    repr_defined $I5011, fb_tmp_129
    unless $I5011 goto if841_else1882 
    set $P5068, fb_tmp_129["$W"]
    set $P5070, $P5068
    goto if841_end1883
  if841_else1882:
    null $P5069
    set $P5070, $P5069
  if841_end1883:
    unless_null $P5070, vivi_8421884
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5070, $P5071
  vivi_8421884:
    unless_null $P5070, vivi_8431885
    die "Contextual $*W not found"
    box $P5072, "Contextual $*W not found"
    set $P5070, $P5072
  vivi_8431885:
    set $P5065, $P5070
  fallback1881:
    $P5073 = $P5065."pkg_create_mo"($P102, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5073
    can $I5012, $P102, "parametric"
    box $P5076, $I5012
    set $P5075, $P5076
    unless $I5012 goto if845_end1889 
.annotate 'line', 1031
    $P5074 = $P102."parametric"($P102)
    set $P5075, $P5074
  if845_end1889:
    unless $P5075 goto if844_else1886 
.annotate 'line', 1032
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback1890
    nqp_get_sc_object $P5079, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5078, $P5079
    set fb_tmp_130, $P5078
    repr_defined $I5013, fb_tmp_130
    unless $I5013 goto if846_else1891 
    set $P5080, fb_tmp_130["$W"]
    set $P5082, $P5080
    goto if846_end1892
  if846_else1891:
    null $P5081
    set $P5082, $P5081
  if846_end1892:
    unless_null $P5082, vivi_8471893
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_8471893:
    unless_null $P5082, vivi_8481894
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_8481894:
    set $P5077, $P5082
  fallback1890:
    find_dynamic_lex $P5085, "$*PACKAGE"
    unless_null $P5085, fallback1895
    nqp_get_sc_object $P5087, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5086, $P5087
    set fb_tmp_131, $P5086
    repr_defined $I5014, fb_tmp_131
    unless $I5014 goto if849_else1896 
    set $P5088, fb_tmp_131["$PACKAGE"]
    set $P5090, $P5088
    goto if849_end1897
  if849_else1896:
    null $P5089
    set $P5090, $P5089
  if849_end1897:
    unless_null $P5090, vivi_8501898
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5090, $P5091
  vivi_8501898:
    unless_null $P5090, vivi_8511899
    die "Contextual $*PACKAGE not found"
    box $P5092, "Contextual $*PACKAGE not found"
    set $P5090, $P5092
  vivi_8511899:
    set $P5085, $P5090
  fallback1895:
    $P5077."install_lexical_symbol"($P103, "$?PACKAGE", $P5085)
.annotate 'line', 1033
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback1900
    nqp_get_sc_object $P5095, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5094, $P5095
    set fb_tmp_132, $P5094
    repr_defined $I5015, fb_tmp_132
    unless $I5015 goto if852_else1901 
    set $P5096, fb_tmp_132["$W"]
    set $P5098, $P5096
    goto if852_end1902
  if852_else1901:
    null $P5097
    set $P5098, $P5097
  if852_end1902:
    unless_null $P5098, vivi_8531903
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5098, $P5099
  vivi_8531903:
    unless_null $P5098, vivi_8541904
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_8541904:
    set $P5093, $P5098
  fallback1900:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback1905
    nqp_get_sc_object $P5103, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5102, $P5103
    set fb_tmp_133, $P5102
    repr_defined $I5016, fb_tmp_133
    unless $I5016 goto if855_else1906 
    set $P5104, fb_tmp_133["$PACKAGE"]
    set $P5106, $P5104
    goto if855_end1907
  if855_else1906:
    null $P5105
    set $P5106, $P5105
  if855_end1907:
    unless_null $P5106, vivi_8561908
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5106, $P5107
  vivi_8561908:
    unless_null $P5106, vivi_8571909
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_8571909:
    set $P5101, $P5106
  fallback1905:
    $P5109 = $P5093."install_lexical_symbol"($P103, "$?ROLE", $P5101)
    goto if844_end1887
  if844_else1886:
.annotate 'line', 1035
.annotate 'line', 1036
    find_dynamic_lex $P5110, "$*W"
    unless_null $P5110, fallback1910
    nqp_get_sc_object $P5112, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5111, $P5112
    set fb_tmp_134, $P5111
    repr_defined $I5017, fb_tmp_134
    unless $I5017 goto if858_else1911 
    set $P5113, fb_tmp_134["$W"]
    set $P5115, $P5113
    goto if858_end1912
  if858_else1911:
    null $P5114
    set $P5115, $P5114
  if858_end1912:
    unless_null $P5115, vivi_8591913
    nqp_get_sc_object $P5116, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5115, $P5116
  vivi_8591913:
    unless_null $P5115, vivi_8601914
    die "Contextual $*W not found"
    box $P5117, "Contextual $*W not found"
    set $P5115, $P5117
  vivi_8601914:
    set $P5110, $P5115
  fallback1910:
    find_dynamic_lex $P5118, "$*PACKAGE"
    unless_null $P5118, fallback1915
    nqp_get_sc_object $P5120, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5119, $P5120
    set fb_tmp_135, $P5119
    repr_defined $I5018, fb_tmp_135
    unless $I5018 goto if861_else1916 
    set $P5121, fb_tmp_135["$PACKAGE"]
    set $P5123, $P5121
    goto if861_end1917
  if861_else1916:
    null $P5122
    set $P5123, $P5122
  if861_end1917:
    unless_null $P5123, vivi_8621918
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5123, $P5124
  vivi_8621918:
    unless_null $P5123, vivi_8631919
    die "Contextual $*PACKAGE not found"
    box $P5125, "Contextual $*PACKAGE not found"
    set $P5123, $P5125
  vivi_8631919:
    set $P5118, $P5123
  fallback1915:
    $P5110."install_lexical_symbol"($P103, "$?PACKAGE", $P5118)
.annotate 'line', 1037
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback1920
    nqp_get_sc_object $P5128, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5127, $P5128
    set fb_tmp_136, $P5127
    repr_defined $I5019, fb_tmp_136
    unless $I5019 goto if864_else1921 
    set $P5129, fb_tmp_136["$W"]
    set $P5131, $P5129
    goto if864_end1922
  if864_else1921:
    null $P5130
    set $P5131, $P5130
  if864_end1922:
    unless_null $P5131, vivi_8651923
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5131, $P5132
  vivi_8651923:
    unless_null $P5131, vivi_8661924
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_8661924:
    set $P5126, $P5131
  fallback1920:
    find_dynamic_lex $P5134, "$*PACKAGE"
    unless_null $P5134, fallback1925
    nqp_get_sc_object $P5136, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5135, $P5136
    set fb_tmp_137, $P5135
    repr_defined $I5020, fb_tmp_137
    unless $I5020 goto if867_else1926 
    set $P5137, fb_tmp_137["$PACKAGE"]
    set $P5139, $P5137
    goto if867_end1927
  if867_else1926:
    null $P5138
    set $P5139, $P5138
  if867_end1927:
    unless_null $P5139, vivi_8681928
    nqp_get_sc_object $P5140, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5139, $P5140
  vivi_8681928:
    unless_null $P5139, vivi_8691929
    die "Contextual $*PACKAGE not found"
    box $P5141, "Contextual $*PACKAGE not found"
    set $P5139, $P5141
  vivi_8691929:
    set $P5134, $P5139
  fallback1925:
    $P5142 = $P5126."install_lexical_symbol"($P103, "$?CLASS", $P5134)
  if844_end1887:
    find_dynamic_lex $P5143, "$*SCOPE"
    unless_null $P5143, fallback1934
    nqp_get_sc_object $P5145, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5144, $P5145
    set fb_tmp_138, $P5144
    repr_defined $I5022, fb_tmp_138
    unless $I5022 goto if872_else1935 
    set $P5146, fb_tmp_138["$SCOPE"]
    set $P5148, $P5146
    goto if872_end1936
  if872_else1935:
    null $P5147
    set $P5148, $P5147
  if872_end1936:
    unless_null $P5148, vivi_8731937
    nqp_get_sc_object $P5149, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5148, $P5149
  vivi_8731937:
    unless_null $P5148, vivi_8741938
    die "Contextual $*SCOPE not found"
    box $P5150, "Contextual $*SCOPE not found"
    set $P5148, $P5150
  vivi_8741938:
    set $P5143, $P5148
  fallback1934:
    set $S5004, $P5143
    iseq $I5021, $S5004, "our"
    set $I5025, $I5021
    if $I5021 goto unless871_end1933 
    find_dynamic_lex $P5151, "$*SCOPE"
    unless_null $P5151, fallback1939
    nqp_get_sc_object $P5153, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5152, $P5153
    set fb_tmp_139, $P5152
    repr_defined $I5024, fb_tmp_139
    unless $I5024 goto if875_else1940 
    set $P5154, fb_tmp_139["$SCOPE"]
    set $P5156, $P5154
    goto if875_end1941
  if875_else1940:
    null $P5155
    set $P5156, $P5155
  if875_end1941:
    unless_null $P5156, vivi_8761942
    nqp_get_sc_object $P5157, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5156, $P5157
  vivi_8761942:
    unless_null $P5156, vivi_8771943
    die "Contextual $*SCOPE not found"
    box $P5158, "Contextual $*SCOPE not found"
    set $P5156, $P5158
  vivi_8771943:
    set $P5151, $P5156
  fallback1939:
    set $S5005, $P5151
    iseq $I5023, $S5005, ""
    set $I5025, $I5023
  unless871_end1933:
    unless $I5025 goto if870_else1930 
.annotate 'line', 1041
.annotate 'line', 1042
    find_dynamic_lex $P5159, "$*W"
    unless_null $P5159, fallback1944
    nqp_get_sc_object $P5161, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5160, $P5161
    set fb_tmp_140, $P5160
    repr_defined $I5026, fb_tmp_140
    unless $I5026 goto if878_else1945 
    set $P5162, fb_tmp_140["$W"]
    set $P5164, $P5162
    goto if878_end1946
  if878_else1945:
    null $P5163
    set $P5164, $P5163
  if878_end1946:
    unless_null $P5164, vivi_8791947
    nqp_get_sc_object $P5165, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5164, $P5165
  vivi_8791947:
    unless_null $P5164, vivi_8801948
    die "Contextual $*W not found"
    box $P5166, "Contextual $*W not found"
    set $P5164, $P5166
  vivi_8801948:
    set $P5159, $P5164
  fallback1944:
    find_dynamic_lex $P5167, "$*OUTERPACKAGE"
    unless_null $P5167, fallback1949
    nqp_get_sc_object $P5169, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5168, $P5169
    set fb_tmp_141, $P5168
    repr_defined $I5027, fb_tmp_141
    unless $I5027 goto if881_else1950 
    set $P5170, fb_tmp_141["$OUTERPACKAGE"]
    set $P5172, $P5170
    goto if881_end1951
  if881_else1950:
    null $P5171
    set $P5172, $P5171
  if881_end1951:
    unless_null $P5172, vivi_8821952
    nqp_get_sc_object $P5173, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5172, $P5173
  vivi_8821952:
    unless_null $P5172, vivi_8831953
    die "Contextual $*OUTERPACKAGE not found"
    box $P5174, "Contextual $*OUTERPACKAGE not found"
    set $P5172, $P5174
  vivi_8831953:
    set $P5167, $P5172
  fallback1949:
    find_lex $P5175, "$/"
    unless_null $P5175, fallback1958
    nqp_get_sc_object $P5176, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5175, $P5176
  fallback1958:
    set fb_tmp_143, $P5175
    repr_defined $I5029, fb_tmp_143
    unless $I5029 goto if885_else1956 
    set $P5177, fb_tmp_143["name"]
    set $P5179, $P5177
    goto if885_end1957
  if885_else1956:
    null $P5178
    set $P5179, $P5178
  if885_end1957:
    unless_null $P5179, vivi_8861959
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5179, $P5180
  vivi_8861959:
    set fb_tmp_142, $P5179
    repr_defined $I5028, fb_tmp_142
    unless $I5028 goto if884_else1954 
    set $P5181, fb_tmp_142["identifier"]
    set $P5183, $P5181
    goto if884_end1955
  if884_else1954:
    null $P5182
    set $P5183, $P5182
  if884_end1955:
    unless_null $P5183, vivi_8871960
    nqp_get_sc_object $P5184, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5183, $P5184
  vivi_8871960:
    find_dynamic_lex $P5185, "$*PACKAGE"
    unless_null $P5185, fallback1961
    nqp_get_sc_object $P5187, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5186, $P5187
    set fb_tmp_144, $P5186
    repr_defined $I5030, fb_tmp_144
    unless $I5030 goto if888_else1962 
    set $P5188, fb_tmp_144["$PACKAGE"]
    set $P5190, $P5188
    goto if888_end1963
  if888_else1962:
    null $P5189
    set $P5190, $P5189
  if888_end1963:
    unless_null $P5190, vivi_8891964
    nqp_get_sc_object $P5191, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5190, $P5191
  vivi_8891964:
    unless_null $P5190, vivi_8901965
    die "Contextual $*PACKAGE not found"
    box $P5192, "Contextual $*PACKAGE not found"
    set $P5190, $P5192
  vivi_8901965:
    set $P5185, $P5190
  fallback1961:
    $P5159."install_package_symbol"($P5167, $P5183, $P5185)
    find_lex $P5193, "$/"
    unless_null $P5193, fallback1972
    nqp_get_sc_object $P5194, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5193, $P5194
  fallback1972:
    set fb_tmp_146, $P5193
    repr_defined $I5033, fb_tmp_146
    unless $I5033 goto if893_else1970 
    set $P5195, fb_tmp_146["name"]
    set $P5197, $P5195
    goto if893_end1971
  if893_else1970:
    null $P5196
    set $P5197, $P5196
  if893_end1971:
    unless_null $P5197, vivi_8941973
    nqp_get_sc_object $P5198, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5197, $P5198
  vivi_8941973:
    set fb_tmp_145, $P5197
    repr_defined $I5032, fb_tmp_145
    unless $I5032 goto if892_else1968 
    set $P5199, fb_tmp_145["identifier"]
    set $P5201, $P5199
    goto if892_end1969
  if892_else1968:
    null $P5200
    set $P5201, $P5200
  if892_end1969:
    unless_null $P5201, vivi_8951974
    nqp_get_sc_object $P5202, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5201, $P5202
  vivi_8951974:
    set $N5001, $P5201
    set $N5002, 1
    iseq $I5031, $N5001, $N5002
    box $P5236, $I5031
    set $P5235, $P5236
    unless $I5031 goto if891_end1967 
.annotate 'line', 1043
.annotate 'line', 1044
    find_dynamic_lex $P5203, "$*W"
    unless_null $P5203, fallback1975
    nqp_get_sc_object $P5205, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5204, $P5205
    set fb_tmp_147, $P5204
    repr_defined $I5034, fb_tmp_147
    unless $I5034 goto if896_else1976 
    set $P5206, fb_tmp_147["$W"]
    set $P5208, $P5206
    goto if896_end1977
  if896_else1976:
    null $P5207
    set $P5208, $P5207
  if896_end1977:
    unless_null $P5208, vivi_8971978
    nqp_get_sc_object $P5209, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5208, $P5209
  vivi_8971978:
    unless_null $P5208, vivi_8981979
    die "Contextual $*W not found"
    box $P5210, "Contextual $*W not found"
    set $P5208, $P5210
  vivi_8981979:
    set $P5203, $P5208
  fallback1975:
    find_lex $P5211, "$OUTER"
    find_lex $P5212, "$/"
    unless_null $P5212, fallback1986
    nqp_get_sc_object $P5213, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5212, $P5213
  fallback1986:
    set fb_tmp_150, $P5212
    repr_defined $I5037, fb_tmp_150
    unless $I5037 goto if901_else1984 
    set $P5214, fb_tmp_150["name"]
    set $P5216, $P5214
    goto if901_end1985
  if901_else1984:
    null $P5215
    set $P5216, $P5215
  if901_end1985:
    unless_null $P5216, vivi_9021987
    nqp_get_sc_object $P5217, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5216, $P5217
  vivi_9021987:
    set fb_tmp_149, $P5216
    repr_defined $I5036, fb_tmp_149
    unless $I5036 goto if900_else1982 
    set $P5218, fb_tmp_149["identifier"]
    set $P5220, $P5218
    goto if900_end1983
  if900_else1982:
    null $P5219
    set $P5220, $P5219
  if900_end1983:
    unless_null $P5220, vivi_9031988
    nqp_get_sc_object $P5221, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5220, $P5221
  vivi_9031988:
    set fb_tmp_148, $P5220
    repr_defined $I5035, fb_tmp_148
    unless $I5035 goto if899_else1980 
    set $P5222, fb_tmp_148[0]
    set $P5224, $P5222
    goto if899_end1981
  if899_else1980:
    null $P5223
    set $P5224, $P5223
  if899_end1981:
    unless_null $P5224, vivi_9041989
    nqp_get_sc_object $P5225, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5224, $P5225
  vivi_9041989:
    find_dynamic_lex $P5226, "$*PACKAGE"
    unless_null $P5226, fallback1990
    nqp_get_sc_object $P5228, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5227, $P5228
    set fb_tmp_151, $P5227
    repr_defined $I5038, fb_tmp_151
    unless $I5038 goto if905_else1991 
    set $P5229, fb_tmp_151["$PACKAGE"]
    set $P5231, $P5229
    goto if905_end1992
  if905_else1991:
    null $P5230
    set $P5231, $P5230
  if905_end1992:
    unless_null $P5231, vivi_9061993
    nqp_get_sc_object $P5232, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5231, $P5232
  vivi_9061993:
    unless_null $P5231, vivi_9071994
    die "Contextual $*PACKAGE not found"
    box $P5233, "Contextual $*PACKAGE not found"
    set $P5231, $P5233
  vivi_9071994:
    set $P5226, $P5231
  fallback1990:
    $P5234 = $P5203."install_lexical_symbol"($P5211, $P5224, $P5226)
    set $P5235, $P5234
  if891_end1967:
    set $P5307, $P5235
    goto if870_end1931
  if870_else1930:
    find_dynamic_lex $P5237, "$*SCOPE"
    unless_null $P5237, fallback1997
    nqp_get_sc_object $P5239, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5238, $P5239
    set fb_tmp_152, $P5238
    repr_defined $I5040, fb_tmp_152
    unless $I5040 goto if909_else1998 
    set $P5240, fb_tmp_152["$SCOPE"]
    set $P5242, $P5240
    goto if909_end1999
  if909_else1998:
    null $P5241
    set $P5242, $P5241
  if909_end1999:
    unless_null $P5242, vivi_9102000
    nqp_get_sc_object $P5243, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5242, $P5243
  vivi_9102000:
    unless_null $P5242, vivi_9112001
    die "Contextual $*SCOPE not found"
    box $P5244, "Contextual $*SCOPE not found"
    set $P5242, $P5244
  vivi_9112001:
    set $P5237, $P5242
  fallback1997:
    set $S5006, $P5237
    iseq $I5039, $S5006, "my"
    unless $I5039 goto if908_else1995 
.annotate 'line', 1047
    find_lex $P5245, "$/"
    unless_null $P5245, fallback2008
    nqp_get_sc_object $P5246, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5245, $P5246
  fallback2008:
    set fb_tmp_154, $P5245
    repr_defined $I5043, fb_tmp_154
    unless $I5043 goto if914_else2006 
    set $P5247, fb_tmp_154["name"]
    set $P5249, $P5247
    goto if914_end2007
  if914_else2006:
    null $P5248
    set $P5249, $P5248
  if914_end2007:
    unless_null $P5249, vivi_9152009
    nqp_get_sc_object $P5250, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5249, $P5250
  vivi_9152009:
    set fb_tmp_153, $P5249
    repr_defined $I5042, fb_tmp_153
    unless $I5042 goto if913_else2004 
    set $P5251, fb_tmp_153["identifier"]
    set $P5253, $P5251
    goto if913_end2005
  if913_else2004:
    null $P5252
    set $P5253, $P5252
  if913_end2005:
    unless_null $P5253, vivi_9162010
    nqp_get_sc_object $P5254, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5253, $P5254
  vivi_9162010:
    set $N5003, $P5253
    set $N5004, 1
    isne $I5041, $N5003, $N5004
    unless $I5041 goto if912_end2003 
.annotate 'line', 1048
.annotate 'line', 1049
    find_lex $P5255, "$/"
    unless_null $P5255, fallback2013
    nqp_get_sc_object $P5256, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5255, $P5256
  fallback2013:
    set fb_tmp_155, $P5255
    repr_defined $I5044, fb_tmp_155
    unless $I5044 goto if917_else2011 
    set $P5257, fb_tmp_155["name"]
    set $P5259, $P5257
    goto if917_end2012
  if917_else2011:
    null $P5258
    set $P5259, $P5258
  if917_end2012:
    unless_null $P5259, vivi_9182014
    nqp_get_sc_object $P5260, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5259, $P5260
  vivi_9182014:
    $P5261 = $P5259."CURSOR"()
    $P5262 = $P5261."panic"("A my scoped package cannot have a multi-part name yet")
  if912_end2003:
.annotate 'line', 1051
    find_dynamic_lex $P5263, "$*W"
    unless_null $P5263, fallback2015
    nqp_get_sc_object $P5265, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5264, $P5265
    set fb_tmp_156, $P5264
    repr_defined $I5045, fb_tmp_156
    unless $I5045 goto if919_else2016 
    set $P5266, fb_tmp_156["$W"]
    set $P5268, $P5266
    goto if919_end2017
  if919_else2016:
    null $P5267
    set $P5268, $P5267
  if919_end2017:
    unless_null $P5268, vivi_9202018
    nqp_get_sc_object $P5269, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5268, $P5269
  vivi_9202018:
    unless_null $P5268, vivi_9212019
    die "Contextual $*W not found"
    box $P5270, "Contextual $*W not found"
    set $P5268, $P5270
  vivi_9212019:
    set $P5263, $P5268
  fallback2015:
    find_lex $P5271, "$OUTER"
    find_lex $P5272, "$/"
    unless_null $P5272, fallback2026
    nqp_get_sc_object $P5273, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5272, $P5273
  fallback2026:
    set fb_tmp_159, $P5272
    repr_defined $I5048, fb_tmp_159
    unless $I5048 goto if924_else2024 
    set $P5274, fb_tmp_159["name"]
    set $P5276, $P5274
    goto if924_end2025
  if924_else2024:
    null $P5275
    set $P5276, $P5275
  if924_end2025:
    unless_null $P5276, vivi_9252027
    nqp_get_sc_object $P5277, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5276, $P5277
  vivi_9252027:
    set fb_tmp_158, $P5276
    repr_defined $I5047, fb_tmp_158
    unless $I5047 goto if923_else2022 
    set $P5278, fb_tmp_158["identifier"]
    set $P5280, $P5278
    goto if923_end2023
  if923_else2022:
    null $P5279
    set $P5280, $P5279
  if923_end2023:
    unless_null $P5280, vivi_9262028
    nqp_get_sc_object $P5281, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5280, $P5281
  vivi_9262028:
    set fb_tmp_157, $P5280
    repr_defined $I5046, fb_tmp_157
    unless $I5046 goto if922_else2020 
    set $P5282, fb_tmp_157[0]
    set $P5284, $P5282
    goto if922_end2021
  if922_else2020:
    null $P5283
    set $P5284, $P5283
  if922_end2021:
    unless_null $P5284, vivi_9272029
    nqp_get_sc_object $P5285, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5284, $P5285
  vivi_9272029:
    find_dynamic_lex $P5286, "$*PACKAGE"
    unless_null $P5286, fallback2030
    nqp_get_sc_object $P5288, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5287, $P5288
    set fb_tmp_160, $P5287
    repr_defined $I5049, fb_tmp_160
    unless $I5049 goto if928_else2031 
    set $P5289, fb_tmp_160["$PACKAGE"]
    set $P5291, $P5289
    goto if928_end2032
  if928_else2031:
    null $P5290
    set $P5291, $P5290
  if928_end2032:
    unless_null $P5291, vivi_9292033
    nqp_get_sc_object $P5292, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5291, $P5292
  vivi_9292033:
    unless_null $P5291, vivi_9302034
    die "Contextual $*PACKAGE not found"
    box $P5293, "Contextual $*PACKAGE not found"
    set $P5291, $P5293
  vivi_9302034:
    set $P5286, $P5291
  fallback2030:
    $P5294 = $P5263."install_lexical_symbol"($P5271, $P5284, $P5286)
    set $P5306, $P5294
    goto if908_end1996
  if908_else1995:
.annotate 'line', 1053
.annotate 'line', 1054
    find_lex $P5295, "$/"
    $P5296 = $P5295."CURSOR"()
    find_dynamic_lex $P5297, "$*SCOPE"
    unless_null $P5297, fallback2035
    nqp_get_sc_object $P5299, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5298, $P5299
    set fb_tmp_161, $P5298
    repr_defined $I5050, fb_tmp_161
    unless $I5050 goto if931_else2036 
    set $P5300, fb_tmp_161["$SCOPE"]
    set $P5302, $P5300
    goto if931_end2037
  if931_else2036:
    null $P5301
    set $P5302, $P5301
  if931_end2037:
    unless_null $P5302, vivi_9322038
    nqp_get_sc_object $P5303, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5302, $P5303
  vivi_9322038:
    unless_null $P5302, vivi_9332039
    die "Contextual $*SCOPE not found"
    box $P5304, "Contextual $*SCOPE not found"
    set $P5302, $P5304
  vivi_9332039:
    set $P5297, $P5302
  fallback2035:
    set $S5008, $P5297
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5305 = $P5296."panic"($S5007)
    set $P5306, $P5305
  if908_end1996:
    set $P5307, $P5306
  if870_end1931:
    .return ($P5307) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_113_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1068
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx973_start
    .local string rx973_tgt
    .local int rx973_pos
    .local int rx973_off
    .local int rx973_eos
    .local int rx973_rep
    .local pmc rx973_cur
    .local pmc rx973_curclass
    .local pmc rx973_bstack
    .local pmc rx973_cstack
    rx973_start = self."!cursor_start_all"()
    set rx973_cur, rx973_start[0]
    set rx973_tgt, rx973_start[1]
    set rx973_pos, rx973_start[2]
    set rx973_curclass, rx973_start[3]
    set rx973_bstack, rx973_start[4]
    set $I19, rx973_start[5]
    store_lex unicode:"$\x{a2}", rx973_cur
    length rx973_eos, rx973_tgt
    eq $I19, 1, rx973_restart2090
    gt rx973_pos, rx973_eos, rx973_fail2091
    repr_get_attr_int $I11, self, rx973_curclass, "$!from"
    ne $I11, -1, rxscan974_done2097
    goto rxscan974_scan2096
  rxscan974_loop2095:
    inc rx973_pos
    gt rx973_pos, rx973_eos, rx973_fail2091
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!from", rx973_pos
  rxscan974_scan2096:
    nqp_rxmark rx973_bstack, rxscan974_loop2095, rx973_pos, 0
  rxscan974_done2097:
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    store_lex unicode:"$\x{a2}", rx973_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    store_lex unicode:"$\x{a2}", rx973_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    nqp_rxmark rx973_bstack, rxquantr978_done2102, -1, 0
  rxquantr978_loop2101:
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."variable"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    nqp_rxmark rx973_bstack, rxsubrule980_pass2104, -1, 0
  rxsubrule980_pass2104:
    rx973_cstack = rx973_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    nqp_rxpeek $I19, rx973_bstack, rxquantr978_done2102
    inc $I19
    inc $I19
    set rx973_rep, rx973_bstack[$I19]
    nqp_rxcommit rx973_bstack, rxquantr978_done2102
    inc rx973_rep
    nqp_rxmark rx973_bstack, rxquantr978_done2102, rx973_pos, rx973_rep
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    add $I11, rx973_pos, 1
    gt $I11, rx973_eos, rx973_fail2091
    substr $S10, rx973_tgt, rx973_pos, 1
    ne $S10, ucs4:",", rx973_fail2091
    add rx973_pos, 1
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    goto rxquantr978_loop2101
  rxquantr978_done2102:
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."ws"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2091
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    rx973_cur."!cursor_pass"(rx973_pos, "role_params", 'backtrack'=>1)
    .return (rx973_cur)
  rx973_restart2090:
    repr_get_attr_obj rx973_cstack, rx973_cur, rx973_curclass, "$!cstack"
  rx973_fail2091:
    unless rx973_bstack, rx973_done2089
    pop $I19, rx973_bstack
    if_null rx973_cstack, rx973_cstack_done2094
    unless rx973_cstack, rx973_cstack_done2094
    dec $I19
    set $P11, rx973_cstack[$I19]
  rx973_cstack_done2094:
    pop rx973_rep, rx973_bstack
    pop rx973_pos, rx973_bstack
    pop $I19, rx973_bstack
    lt rx973_pos, -1, rx973_done2089
    lt rx973_pos, 0, rx973_fail2091
    eq $I19, 0, rx973_fail2091
    nqp_islist $I20, rx973_cstack
    unless $I20, rx973_jump2092
    elements $I18, rx973_bstack
    le $I18, 0, rx973_cut2093
    dec $I18
    set $I18, rx973_bstack[$I18]
  rx973_cut2093:
    assign rx973_cstack, $I18
  rx973_jump2092:
    jump $I19
  rx973_done2089:
    rx973_cur."!cursor_fail"()
    .return (rx973_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_114_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1074
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_115_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1075
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx985_start
    .local string rx985_tgt
    .local int rx985_pos
    .local int rx985_off
    .local int rx985_eos
    .local int rx985_rep
    .local pmc rx985_cur
    .local pmc rx985_curclass
    .local pmc rx985_bstack
    .local pmc rx985_cstack
    rx985_start = self."!cursor_start_all"()
    set rx985_cur, rx985_start[0]
    set rx985_tgt, rx985_start[1]
    set rx985_pos, rx985_start[2]
    set rx985_curclass, rx985_start[3]
    set rx985_bstack, rx985_start[4]
    set $I19, rx985_start[5]
    store_lex unicode:"$\x{a2}", rx985_cur
    length rx985_eos, rx985_tgt
    eq $I19, 1, rx985_restart2111
    gt rx985_pos, rx985_eos, rx985_fail2112
    repr_get_attr_int $I11, self, rx985_curclass, "$!from"
    ne $I11, -1, rxscan986_done2118
    goto rxscan986_scan2117
  rxscan986_loop2116:
    inc rx985_pos
    gt rx985_pos, rx985_eos, rx985_fail2112
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!from", rx985_pos
  rxscan986_scan2117:
    nqp_rxmark rx985_bstack, rxscan986_loop2116, rx985_pos, 0
  rxscan986_done2118:
    nqp_rxmark rx985_bstack, rxcap987_fail2120, rx985_pos, 0
    add $I11, rx985_pos, 2
    gt $I11, rx985_eos, rx985_fail2112
    substr $S10, rx985_tgt, rx985_pos, 2
    ne $S10, ucs4:"my", rx985_fail2112
    add rx985_pos, 2
    nqp_rxpeek $I19, rx985_bstack, rxcap987_fail2120
    inc $I19
    set $I11, rx985_bstack[$I19]
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx985_pos)
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "sym")
    goto rxcap987_done2119
  rxcap987_fail2120:
    goto rx985_fail2112
  rxcap987_done2119:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2112
    nqp_rxmark rx985_bstack, rxsubrule988_pass2121, -1, 0
  rxsubrule988_pass2121:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    rx985_cur."!cursor_pass"(rx985_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx985_cur)
  rx985_restart2111:
    repr_get_attr_obj rx985_cstack, rx985_cur, rx985_curclass, "$!cstack"
  rx985_fail2112:
    unless rx985_bstack, rx985_done2110
    pop $I19, rx985_bstack
    if_null rx985_cstack, rx985_cstack_done2115
    unless rx985_cstack, rx985_cstack_done2115
    dec $I19
    set $P11, rx985_cstack[$I19]
  rx985_cstack_done2115:
    pop rx985_rep, rx985_bstack
    pop rx985_pos, rx985_bstack
    pop $I19, rx985_bstack
    lt rx985_pos, -1, rx985_done2110
    lt rx985_pos, 0, rx985_fail2112
    eq $I19, 0, rx985_fail2112
    nqp_islist $I20, rx985_cstack
    unless $I20, rx985_jump2113
    elements $I18, rx985_bstack
    le $I18, 0, rx985_cut2114
    dec $I18
    set $I18, rx985_bstack[$I18]
  rx985_cut2114:
    assign rx985_cstack, $I18
  rx985_jump2113:
    jump $I19
  rx985_done2110:
    rx985_cur."!cursor_fail"()
    .return (rx985_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_116_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1076
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx989_start
    .local string rx989_tgt
    .local int rx989_pos
    .local int rx989_off
    .local int rx989_eos
    .local int rx989_rep
    .local pmc rx989_cur
    .local pmc rx989_curclass
    .local pmc rx989_bstack
    .local pmc rx989_cstack
    rx989_start = self."!cursor_start_all"()
    set rx989_cur, rx989_start[0]
    set rx989_tgt, rx989_start[1]
    set rx989_pos, rx989_start[2]
    set rx989_curclass, rx989_start[3]
    set rx989_bstack, rx989_start[4]
    set $I19, rx989_start[5]
    store_lex unicode:"$\x{a2}", rx989_cur
    length rx989_eos, rx989_tgt
    eq $I19, 1, rx989_restart2124
    gt rx989_pos, rx989_eos, rx989_fail2125
    repr_get_attr_int $I11, self, rx989_curclass, "$!from"
    ne $I11, -1, rxscan990_done2131
    goto rxscan990_scan2130
  rxscan990_loop2129:
    inc rx989_pos
    gt rx989_pos, rx989_eos, rx989_fail2125
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!from", rx989_pos
  rxscan990_scan2130:
    nqp_rxmark rx989_bstack, rxscan990_loop2129, rx989_pos, 0
  rxscan990_done2131:
    nqp_rxmark rx989_bstack, rxcap991_fail2133, rx989_pos, 0
    add $I11, rx989_pos, 3
    gt $I11, rx989_eos, rx989_fail2125
    substr $S10, rx989_tgt, rx989_pos, 3
    ne $S10, ucs4:"our", rx989_fail2125
    add rx989_pos, 3
    nqp_rxpeek $I19, rx989_bstack, rxcap991_fail2133
    inc $I19
    set $I11, rx989_bstack[$I19]
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx989_pos)
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "sym")
    goto rxcap991_done2132
  rxcap991_fail2133:
    goto rx989_fail2125
  rxcap991_done2132:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2125
    nqp_rxmark rx989_bstack, rxsubrule992_pass2134, -1, 0
  rxsubrule992_pass2134:
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    rx989_cur."!cursor_pass"(rx989_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx989_cur)
  rx989_restart2124:
    repr_get_attr_obj rx989_cstack, rx989_cur, rx989_curclass, "$!cstack"
  rx989_fail2125:
    unless rx989_bstack, rx989_done2123
    pop $I19, rx989_bstack
    if_null rx989_cstack, rx989_cstack_done2128
    unless rx989_cstack, rx989_cstack_done2128
    dec $I19
    set $P11, rx989_cstack[$I19]
  rx989_cstack_done2128:
    pop rx989_rep, rx989_bstack
    pop rx989_pos, rx989_bstack
    pop $I19, rx989_bstack
    lt rx989_pos, -1, rx989_done2123
    lt rx989_pos, 0, rx989_fail2125
    eq $I19, 0, rx989_fail2125
    nqp_islist $I20, rx989_cstack
    unless $I20, rx989_jump2126
    elements $I18, rx989_bstack
    le $I18, 0, rx989_cut2127
    dec $I18
    set $I18, rx989_bstack[$I18]
  rx989_cut2127:
    assign rx989_cstack, $I18
  rx989_jump2126:
    jump $I19
  rx989_done2123:
    rx989_cur."!cursor_fail"()
    .return (rx989_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_117_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1077
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx993_start
    .local string rx993_tgt
    .local int rx993_pos
    .local int rx993_off
    .local int rx993_eos
    .local int rx993_rep
    .local pmc rx993_cur
    .local pmc rx993_curclass
    .local pmc rx993_bstack
    .local pmc rx993_cstack
    rx993_start = self."!cursor_start_all"()
    set rx993_cur, rx993_start[0]
    set rx993_tgt, rx993_start[1]
    set rx993_pos, rx993_start[2]
    set rx993_curclass, rx993_start[3]
    set rx993_bstack, rx993_start[4]
    set $I19, rx993_start[5]
    store_lex unicode:"$\x{a2}", rx993_cur
    length rx993_eos, rx993_tgt
    eq $I19, 1, rx993_restart2137
    gt rx993_pos, rx993_eos, rx993_fail2138
    repr_get_attr_int $I11, self, rx993_curclass, "$!from"
    ne $I11, -1, rxscan994_done2144
    goto rxscan994_scan2143
  rxscan994_loop2142:
    inc rx993_pos
    gt rx993_pos, rx993_eos, rx993_fail2138
    repr_bind_attr_int rx993_cur, rx993_curclass, "$!from", rx993_pos
  rxscan994_scan2143:
    nqp_rxmark rx993_bstack, rxscan994_loop2142, rx993_pos, 0
  rxscan994_done2144:
    nqp_rxmark rx993_bstack, rxcap995_fail2146, rx993_pos, 0
    add $I11, rx993_pos, 3
    gt $I11, rx993_eos, rx993_fail2138
    substr $S10, rx993_tgt, rx993_pos, 3
    ne $S10, ucs4:"has", rx993_fail2138
    add rx993_pos, 3
    nqp_rxpeek $I19, rx993_bstack, rxcap995_fail2146
    inc $I19
    set $I11, rx993_bstack[$I19]
    repr_bind_attr_int rx993_cur, rx993_curclass, "$!pos", rx993_pos
    $P11 = rx993_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx993_pos)
    rx993_cstack = rx993_cur."!cursor_capture"($P11, "sym")
    goto rxcap995_done2145
  rxcap995_fail2146:
    goto rx993_fail2138
  rxcap995_done2145:
    repr_bind_attr_int rx993_cur, rx993_curclass, "$!pos", rx993_pos
    $P11 = rx993_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx993_curclass, "$!pos"
    lt $I11, 0, rx993_fail2138
    nqp_rxmark rx993_bstack, rxsubrule996_pass2147, -1, 0
  rxsubrule996_pass2147:
    rx993_cstack = rx993_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx993_pos, $P11, rx993_curclass, "$!pos"
    rx993_cur."!cursor_pass"(rx993_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx993_cur)
  rx993_restart2137:
    repr_get_attr_obj rx993_cstack, rx993_cur, rx993_curclass, "$!cstack"
  rx993_fail2138:
    unless rx993_bstack, rx993_done2136
    pop $I19, rx993_bstack
    if_null rx993_cstack, rx993_cstack_done2141
    unless rx993_cstack, rx993_cstack_done2141
    dec $I19
    set $P11, rx993_cstack[$I19]
  rx993_cstack_done2141:
    pop rx993_rep, rx993_bstack
    pop rx993_pos, rx993_bstack
    pop $I19, rx993_bstack
    lt rx993_pos, -1, rx993_done2136
    lt rx993_pos, 0, rx993_fail2138
    eq $I19, 0, rx993_fail2138
    nqp_islist $I20, rx993_cstack
    unless $I20, rx993_jump2139
    elements $I18, rx993_bstack
    le $I18, 0, rx993_cut2140
    dec $I18
    set $I18, rx993_bstack[$I18]
  rx993_cut2140:
    assign rx993_cstack, $I18
  rx993_jump2139:
    jump $I19
  rx993_done2136:
    rx993_cur."!cursor_fail"()
    .return (rx993_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_118_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1079
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx997_start
    .local string rx997_tgt
    .local int rx997_pos
    .local int rx997_off
    .local int rx997_eos
    .local int rx997_rep
    .local pmc rx997_cur
    .local pmc rx997_curclass
    .local pmc rx997_bstack
    .local pmc rx997_cstack
    rx997_start = self."!cursor_start_all"()
    set rx997_cur, rx997_start[0]
    set rx997_tgt, rx997_start[1]
    set rx997_pos, rx997_start[2]
    set rx997_curclass, rx997_start[3]
    set rx997_bstack, rx997_start[4]
    set $I19, rx997_start[5]
    store_lex unicode:"$\x{a2}", rx997_cur
    length rx997_eos, rx997_tgt
    eq $I19, 1, rx997_restart2150
    gt rx997_pos, rx997_eos, rx997_fail2151
    repr_get_attr_int $I11, self, rx997_curclass, "$!from"
    ne $I11, -1, rxscan998_done2157
    goto rxscan998_scan2156
  rxscan998_loop2155:
    inc rx997_pos
    gt rx997_pos, rx997_eos, rx997_fail2151
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!from", rx997_pos
  rxscan998_scan2156:
    nqp_rxmark rx997_bstack, rxscan998_loop2155, rx997_pos, 0
  rxscan998_done2157:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt999_02159
    nqp_push_label $P11, alt999_12163
    nqp_push_label $P11, alt999_22167
    nqp_rxmark rx997_bstack, alt999_end2158, -1, 0
    rx997_cur."!alt"(rx997_pos, "alt_nfa__21_1381281831.4423", $P11)
    goto rx997_fail2151
  alt999_02159:
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."ws"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    nqp_rxmark rx997_bstack, rxsubrule1001_pass2161, -1, 0
  rxsubrule1001_pass2161:
    rx997_cstack = rx997_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."ws"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    goto alt999_end2158
  alt999_12163:
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."ws"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    nqp_rxmark rx997_bstack, rxsubrule1004_pass2165, -1, 0
  rxsubrule1004_pass2165:
    rx997_cstack = rx997_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."ws"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    goto alt999_end2158
  alt999_22167:
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."ws"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    nqp_rxmark rx997_bstack, rxsubrule1007_pass2169, -1, 0
  rxsubrule1007_pass2169:
    rx997_cstack = rx997_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    repr_bind_attr_int rx997_cur, rx997_curclass, "$!pos", rx997_pos
    $P11 = rx997_cur."ws"()
    repr_get_attr_int $I11, $P11, rx997_curclass, "$!pos"
    lt $I11, 0, rx997_fail2151
    repr_get_attr_int rx997_pos, $P11, rx997_curclass, "$!pos"
    goto alt999_end2158
  alt999_end2158:
    rx997_cur."!cursor_pass"(rx997_pos, "scoped", 'backtrack'=>1)
    .return (rx997_cur)
  rx997_restart2150:
    repr_get_attr_obj rx997_cstack, rx997_cur, rx997_curclass, "$!cstack"
  rx997_fail2151:
    unless rx997_bstack, rx997_done2149
    pop $I19, rx997_bstack
    if_null rx997_cstack, rx997_cstack_done2154
    unless rx997_cstack, rx997_cstack_done2154
    dec $I19
    set $P11, rx997_cstack[$I19]
  rx997_cstack_done2154:
    pop rx997_rep, rx997_bstack
    pop rx997_pos, rx997_bstack
    pop $I19, rx997_bstack
    lt rx997_pos, -1, rx997_done2149
    lt rx997_pos, 0, rx997_fail2151
    eq $I19, 0, rx997_fail2151
    nqp_islist $I20, rx997_cstack
    unless $I20, rx997_jump2152
    elements $I18, rx997_bstack
    le $I18, 0, rx997_cut2153
    dec $I18
    set $I18, rx997_bstack[$I18]
  rx997_cut2153:
    assign rx997_cstack, $I18
  rx997_jump2152:
    jump $I19
  rx997_done2149:
    rx997_cur."!cursor_fail"()
    .return (rx997_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_119_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1085
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_410_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1009_start
    .local string rx1009_tgt
    .local int rx1009_pos
    .local int rx1009_off
    .local int rx1009_eos
    .local int rx1009_rep
    .local pmc rx1009_cur
    .local pmc rx1009_curclass
    .local pmc rx1009_bstack
    .local pmc rx1009_cstack
    rx1009_start = self."!cursor_start_all"()
    set rx1009_cur, rx1009_start[0]
    set rx1009_tgt, rx1009_start[1]
    set rx1009_pos, rx1009_start[2]
    set rx1009_curclass, rx1009_start[3]
    set rx1009_bstack, rx1009_start[4]
    set $I19, rx1009_start[5]
    store_lex unicode:"$\x{a2}", rx1009_cur
    length rx1009_eos, rx1009_tgt
    eq $I19, 1, rx1009_restart2173
    gt rx1009_pos, rx1009_eos, rx1009_fail2174
    repr_get_attr_int $I11, self, rx1009_curclass, "$!from"
    ne $I11, -1, rxscan1010_done2180
    goto rxscan1010_scan2179
  rxscan1010_loop2178:
    inc rx1009_pos
    gt rx1009_pos, rx1009_eos, rx1009_fail2174
    repr_bind_attr_int rx1009_cur, rx1009_curclass, "$!from", rx1009_pos
  rxscan1010_scan2179:
    nqp_rxmark rx1009_bstack, rxscan1010_loop2178, rx1009_pos, 0
  rxscan1010_done2180:
    repr_bind_attr_int rx1009_cur, rx1009_curclass, "$!pos", rx1009_pos
    $P11 = rx1009_cur."name"()
    repr_get_attr_int $I11, $P11, rx1009_curclass, "$!pos"
    lt $I11, 0, rx1009_fail2174
    nqp_rxmark rx1009_bstack, rxsubrule1011_pass2181, -1, 0
  rxsubrule1011_pass2181:
    rx1009_cstack = rx1009_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1009_pos, $P11, rx1009_curclass, "$!pos"
    repr_bind_attr_int rx1009_cur, rx1009_curclass, "$!pos", rx1009_pos
    store_lex unicode:"$\x{a2}", rx1009_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_410_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1009_fail2174
    rx1009_cur."!cursor_pass"(rx1009_pos, "typename", 'backtrack'=>1)
    .return (rx1009_cur)
  rx1009_restart2173:
    repr_get_attr_obj rx1009_cstack, rx1009_cur, rx1009_curclass, "$!cstack"
  rx1009_fail2174:
    unless rx1009_bstack, rx1009_done2172
    pop $I19, rx1009_bstack
    if_null rx1009_cstack, rx1009_cstack_done2177
    unless rx1009_cstack, rx1009_cstack_done2177
    dec $I19
    set $P11, rx1009_cstack[$I19]
  rx1009_cstack_done2177:
    pop rx1009_rep, rx1009_bstack
    pop rx1009_pos, rx1009_bstack
    pop $I19, rx1009_bstack
    lt rx1009_pos, -1, rx1009_done2172
    lt rx1009_pos, 0, rx1009_fail2174
    eq $I19, 0, rx1009_fail2174
    nqp_islist $I20, rx1009_cstack
    unless $I20, rx1009_jump2175
    elements $I18, rx1009_bstack
    le $I18, 0, rx1009_cut2176
    dec $I18
    set $I18, rx1009_bstack[$I18]
  rx1009_cut2176:
    assign rx1009_cstack, $I18
  rx1009_jump2175:
    jump $I19
  rx1009_done2172:
    rx1009_cur."!cursor_fail"()
    .return (rx1009_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1381281828.51527") :anon :lex :outer("cuid_119_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1087
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2182
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_162, $P5002
    repr_defined $I5001, fb_tmp_162
    unless $I5001 goto if1012_else2183 
    set $P5004, fb_tmp_162["$W"]
    set $P5006, $P5004
    goto if1012_end2184
  if1012_else2183:
    null $P5005
    set $P5006, $P5005
  if1012_end2184:
    unless_null $P5006, vivi_10132185
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_10132185:
    unless_null $P5006, vivi_10142186
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_10142186:
    set $P5001, $P5006
  fallback2182:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2191
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  fallback2191:
    set fb_tmp_164, $P5010
    repr_defined $I5003, fb_tmp_164
    unless $I5003 goto if1016_else2189 
    set $P5012, fb_tmp_164["name"]
    set $P5014, $P5012
    goto if1016_end2190
  if1016_else2189:
    null $P5013
    set $P5014, $P5013
  if1016_end2190:
    unless_null $P5014, vivi_10172192
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_10172192:
    set fb_tmp_163, $P5014
    repr_defined $I5002, fb_tmp_163
    unless $I5002 goto if1015_else2187 
    set $P5016, fb_tmp_163["identifier"]
    set $P5018, $P5016
    goto if1015_end2188
  if1015_else2187:
    null $P5017
    set $P5018, $P5017
  if1015_end2188:
    unless_null $P5018, vivi_10182193
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_10182193:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_120_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1090
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1019_start
    .local string rx1019_tgt
    .local int rx1019_pos
    .local int rx1019_off
    .local int rx1019_eos
    .local int rx1019_rep
    .local pmc rx1019_cur
    .local pmc rx1019_curclass
    .local pmc rx1019_bstack
    .local pmc rx1019_cstack
    rx1019_start = self."!cursor_start_all"()
    set rx1019_cur, rx1019_start[0]
    set rx1019_tgt, rx1019_start[1]
    set rx1019_pos, rx1019_start[2]
    set rx1019_curclass, rx1019_start[3]
    set rx1019_bstack, rx1019_start[4]
    set $I19, rx1019_start[5]
    store_lex unicode:"$\x{a2}", rx1019_cur
    length rx1019_eos, rx1019_tgt
    eq $I19, 1, rx1019_restart2196
    gt rx1019_pos, rx1019_eos, rx1019_fail2197
    repr_get_attr_int $I11, self, rx1019_curclass, "$!from"
    ne $I11, -1, rxscan1020_done2203
    goto rxscan1020_scan2202
  rxscan1020_loop2201:
    inc rx1019_pos
    gt rx1019_pos, rx1019_eos, rx1019_fail2197
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!from", rx1019_pos
  rxscan1020_scan2202:
    nqp_rxmark rx1019_bstack, rxscan1020_loop2201, rx1019_pos, 0
  rxscan1020_done2203:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1021_02205
    nqp_push_label $P11, alt1021_12207
    nqp_rxmark rx1019_bstack, alt1021_end2204, -1, 0
    rx1019_cur."!alt"(rx1019_pos, "alt_nfa__22_1381281831.46022", $P11)
    goto rx1019_fail2197
  alt1021_02205:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2197
    nqp_rxmark rx1019_bstack, rxsubrule1022_pass2206, -1, 0
  rxsubrule1022_pass2206:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    goto alt1021_end2204
  alt1021_12207:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2197
    nqp_rxmark rx1019_bstack, rxsubrule1023_pass2208, -1, 0
  rxsubrule1023_pass2208:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    goto alt1021_end2204
  alt1021_end2204:
    rx1019_cur."!cursor_pass"(rx1019_pos, "declarator", 'backtrack'=>1)
    .return (rx1019_cur)
  rx1019_restart2196:
    repr_get_attr_obj rx1019_cstack, rx1019_cur, rx1019_curclass, "$!cstack"
  rx1019_fail2197:
    unless rx1019_bstack, rx1019_done2195
    pop $I19, rx1019_bstack
    if_null rx1019_cstack, rx1019_cstack_done2200
    unless rx1019_cstack, rx1019_cstack_done2200
    dec $I19
    set $P11, rx1019_cstack[$I19]
  rx1019_cstack_done2200:
    pop rx1019_rep, rx1019_bstack
    pop rx1019_pos, rx1019_bstack
    pop $I19, rx1019_bstack
    lt rx1019_pos, -1, rx1019_done2195
    lt rx1019_pos, 0, rx1019_fail2197
    eq $I19, 0, rx1019_fail2197
    nqp_islist $I20, rx1019_cstack
    unless $I20, rx1019_jump2198
    elements $I18, rx1019_bstack
    le $I18, 0, rx1019_cut2199
    dec $I18
    set $I18, rx1019_bstack[$I18]
  rx1019_cut2199:
    assign rx1019_cstack, $I18
  rx1019_jump2198:
    jump $I19
  rx1019_done2195:
    rx1019_cur."!cursor_fail"()
    .return (rx1019_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_121_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1095
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_411_1381281828.51527' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1024_start
    .local string rx1024_tgt
    .local int rx1024_pos
    .local int rx1024_off
    .local int rx1024_eos
    .local int rx1024_rep
    .local pmc rx1024_cur
    .local pmc rx1024_curclass
    .local pmc rx1024_bstack
    .local pmc rx1024_cstack
    rx1024_start = self."!cursor_start_all"()
    set rx1024_cur, rx1024_start[0]
    set rx1024_tgt, rx1024_start[1]
    set rx1024_pos, rx1024_start[2]
    set rx1024_curclass, rx1024_start[3]
    set rx1024_bstack, rx1024_start[4]
    set $I19, rx1024_start[5]
    store_lex unicode:"$\x{a2}", rx1024_cur
    length rx1024_eos, rx1024_tgt
    eq $I19, 1, rx1024_restart2211
    gt rx1024_pos, rx1024_eos, rx1024_fail2212
    repr_get_attr_int $I11, self, rx1024_curclass, "$!from"
    ne $I11, -1, rxscan1025_done2218
    goto rxscan1025_scan2217
  rxscan1025_loop2216:
    inc rx1024_pos
    gt rx1024_pos, rx1024_eos, rx1024_fail2212
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!from", rx1024_pos
  rxscan1025_scan2217:
    nqp_rxmark rx1024_bstack, rxscan1025_loop2216, rx1024_pos, 0
  rxscan1025_done2218:
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    nqp_rxmark rx1024_bstack, rxquantr1027_done2221, rx1024_pos, 0
  rxquantr1027_loop2220:
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    goto rxsubrule1028_pass2222
  rxsubrule1028_back2223:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
  rxsubrule1028_pass2222:
    rx1024_cstack = rx1024_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1028_back2223
    push rx1024_bstack, $I11
    push rx1024_bstack, 0
    push rx1024_bstack, rx1024_pos
    elements $I11, rx1024_cstack
    push rx1024_bstack, $I11
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    nqp_rxpeek $I19, rx1024_bstack, rxquantr1027_done2221
    inc $I19
    inc $I19
    set rx1024_rep, rx1024_bstack[$I19]
    nqp_rxcommit rx1024_bstack, rxquantr1027_done2221
    inc rx1024_rep
  rxquantr1027_done2221:
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    store_lex unicode:"$\x{a2}", rx1024_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    nqp_rxmark rx1024_bstack, rxsubrule1031_pass2226, -1, 0
  rxsubrule1031_pass2226:
    rx1024_cstack = rx1024_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    store_lex unicode:"$\x{a2}", rx1024_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_411_1381281828.51527' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    nqp_rxmark rx1024_bstack, rxquantr1034_done2230, rx1024_pos, 0
  rxquantr1034_loop2229:
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    goto rxsubrule1035_pass2231
  rxsubrule1035_back2232:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
  rxsubrule1035_pass2231:
    rx1024_cstack = rx1024_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1035_back2232
    push rx1024_bstack, $I11
    push rx1024_bstack, 0
    push rx1024_bstack, rx1024_pos
    elements $I11, rx1024_cstack
    push rx1024_bstack, $I11
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    nqp_rxpeek $I19, rx1024_bstack, rxquantr1034_done2230
    inc $I19
    inc $I19
    set rx1024_rep, rx1024_bstack[$I19]
    nqp_rxcommit rx1024_bstack, rxquantr1034_done2230
    inc rx1024_rep
    nqp_rxmark rx1024_bstack, rxquantr1034_done2230, rx1024_pos, rx1024_rep
    goto rxquantr1034_loop2229
  rxquantr1034_done2230:
    repr_bind_attr_int rx1024_cur, rx1024_curclass, "$!pos", rx1024_pos
    $P11 = rx1024_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1024_curclass, "$!pos"
    lt $I11, 0, rx1024_fail2212
    repr_get_attr_int rx1024_pos, $P11, rx1024_curclass, "$!pos"
    rx1024_cur."!cursor_pass"(rx1024_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1024_cur)
  rx1024_restart2211:
    repr_get_attr_obj rx1024_cstack, rx1024_cur, rx1024_curclass, "$!cstack"
  rx1024_fail2212:
    unless rx1024_bstack, rx1024_done2210
    pop $I19, rx1024_bstack
    if_null rx1024_cstack, rx1024_cstack_done2215
    unless rx1024_cstack, rx1024_cstack_done2215
    dec $I19
    set $P11, rx1024_cstack[$I19]
  rx1024_cstack_done2215:
    pop rx1024_rep, rx1024_bstack
    pop rx1024_pos, rx1024_bstack
    pop $I19, rx1024_bstack
    lt rx1024_pos, -1, rx1024_done2210
    lt rx1024_pos, 0, rx1024_fail2212
    eq $I19, 0, rx1024_fail2212
    nqp_islist $I20, rx1024_cstack
    unless $I20, rx1024_jump2213
    elements $I18, rx1024_bstack
    le $I18, 0, rx1024_cut2214
    dec $I18
    set $I18, rx1024_bstack[$I18]
  rx1024_cut2214:
    assign rx1024_cstack, $I18
  rx1024_jump2213:
    jump $I19
  rx1024_done2210:
    rx1024_cur."!cursor_fail"()
    .return (rx1024_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1381281828.51527") :anon :lex :outer("cuid_121_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1099

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_122_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1103
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_123_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1104
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1037_start
    .local string rx1037_tgt
    .local int rx1037_pos
    .local int rx1037_off
    .local int rx1037_eos
    .local int rx1037_rep
    .local pmc rx1037_cur
    .local pmc rx1037_curclass
    .local pmc rx1037_bstack
    .local pmc rx1037_cstack
    rx1037_start = self."!cursor_start_all"()
    set rx1037_cur, rx1037_start[0]
    set rx1037_tgt, rx1037_start[1]
    set rx1037_pos, rx1037_start[2]
    set rx1037_curclass, rx1037_start[3]
    set rx1037_bstack, rx1037_start[4]
    set $I19, rx1037_start[5]
    store_lex unicode:"$\x{a2}", rx1037_cur
    length rx1037_eos, rx1037_tgt
    eq $I19, 1, rx1037_restart2236
    gt rx1037_pos, rx1037_eos, rx1037_fail2237
    repr_get_attr_int $I11, self, rx1037_curclass, "$!from"
    ne $I11, -1, rxscan1038_done2243
    goto rxscan1038_scan2242
  rxscan1038_loop2241:
    inc rx1037_pos
    gt rx1037_pos, rx1037_eos, rx1037_fail2237
    repr_bind_attr_int rx1037_cur, rx1037_curclass, "$!from", rx1037_pos
  rxscan1038_scan2242:
    nqp_rxmark rx1037_bstack, rxscan1038_loop2241, rx1037_pos, 0
  rxscan1038_done2243:
    nqp_rxmark rx1037_bstack, rxcap1039_fail2245, rx1037_pos, 0
    add $I11, rx1037_pos, 3
    gt $I11, rx1037_eos, rx1037_fail2237
    substr $S10, rx1037_tgt, rx1037_pos, 3
    ne $S10, ucs4:"sub", rx1037_fail2237
    add rx1037_pos, 3
    nqp_rxpeek $I19, rx1037_bstack, rxcap1039_fail2245
    inc $I19
    set $I11, rx1037_bstack[$I19]
    repr_bind_attr_int rx1037_cur, rx1037_curclass, "$!pos", rx1037_pos
    $P11 = rx1037_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1037_pos)
    rx1037_cstack = rx1037_cur."!cursor_capture"($P11, "sym")
    goto rxcap1039_done2244
  rxcap1039_fail2245:
    goto rx1037_fail2237
  rxcap1039_done2244:
    repr_bind_attr_int rx1037_cur, rx1037_curclass, "$!pos", rx1037_pos
    $P11 = rx1037_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1037_curclass, "$!pos"
    lt $I11, 0, rx1037_fail2237
    nqp_rxmark rx1037_bstack, rxsubrule1040_pass2246, -1, 0
  rxsubrule1040_pass2246:
    rx1037_cstack = rx1037_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1037_pos, $P11, rx1037_curclass, "$!pos"
    rx1037_cur."!cursor_pass"(rx1037_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1037_cur)
  rx1037_restart2236:
    repr_get_attr_obj rx1037_cstack, rx1037_cur, rx1037_curclass, "$!cstack"
  rx1037_fail2237:
    unless rx1037_bstack, rx1037_done2235
    pop $I19, rx1037_bstack
    if_null rx1037_cstack, rx1037_cstack_done2240
    unless rx1037_cstack, rx1037_cstack_done2240
    dec $I19
    set $P11, rx1037_cstack[$I19]
  rx1037_cstack_done2240:
    pop rx1037_rep, rx1037_bstack
    pop rx1037_pos, rx1037_bstack
    pop $I19, rx1037_bstack
    lt rx1037_pos, -1, rx1037_done2235
    lt rx1037_pos, 0, rx1037_fail2237
    eq $I19, 0, rx1037_fail2237
    nqp_islist $I20, rx1037_cstack
    unless $I20, rx1037_jump2238
    elements $I18, rx1037_bstack
    le $I18, 0, rx1037_cut2239
    dec $I18
    set $I18, rx1037_bstack[$I18]
  rx1037_cut2239:
    assign rx1037_cstack, $I18
  rx1037_jump2238:
    jump $I19
  rx1037_done2235:
    rx1037_cur."!cursor_fail"()
    .return (rx1037_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_124_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1105
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1041_start
    .local string rx1041_tgt
    .local int rx1041_pos
    .local int rx1041_off
    .local int rx1041_eos
    .local int rx1041_rep
    .local pmc rx1041_cur
    .local pmc rx1041_curclass
    .local pmc rx1041_bstack
    .local pmc rx1041_cstack
    rx1041_start = self."!cursor_start_all"()
    set rx1041_cur, rx1041_start[0]
    set rx1041_tgt, rx1041_start[1]
    set rx1041_pos, rx1041_start[2]
    set rx1041_curclass, rx1041_start[3]
    set rx1041_bstack, rx1041_start[4]
    set $I19, rx1041_start[5]
    store_lex unicode:"$\x{a2}", rx1041_cur
    length rx1041_eos, rx1041_tgt
    eq $I19, 1, rx1041_restart2249
    gt rx1041_pos, rx1041_eos, rx1041_fail2250
    repr_get_attr_int $I11, self, rx1041_curclass, "$!from"
    ne $I11, -1, rxscan1042_done2256
    goto rxscan1042_scan2255
  rxscan1042_loop2254:
    inc rx1041_pos
    gt rx1041_pos, rx1041_eos, rx1041_fail2250
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!from", rx1041_pos
  rxscan1042_scan2255:
    nqp_rxmark rx1041_bstack, rxscan1042_loop2254, rx1041_pos, 0
  rxscan1042_done2256:
    nqp_rxmark rx1041_bstack, rxcap1043_fail2258, rx1041_pos, 0
    add $I11, rx1041_pos, 6
    gt $I11, rx1041_eos, rx1041_fail2250
    substr $S10, rx1041_tgt, rx1041_pos, 6
    ne $S10, ucs4:"method", rx1041_fail2250
    add rx1041_pos, 6
    nqp_rxpeek $I19, rx1041_bstack, rxcap1043_fail2258
    inc $I19
    set $I11, rx1041_bstack[$I19]
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1041_pos)
    rx1041_cstack = rx1041_cur."!cursor_capture"($P11, "sym")
    goto rxcap1043_done2257
  rxcap1043_fail2258:
    goto rx1041_fail2250
  rxcap1043_done2257:
    repr_bind_attr_int rx1041_cur, rx1041_curclass, "$!pos", rx1041_pos
    $P11 = rx1041_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1041_curclass, "$!pos"
    lt $I11, 0, rx1041_fail2250
    nqp_rxmark rx1041_bstack, rxsubrule1044_pass2259, -1, 0
  rxsubrule1044_pass2259:
    rx1041_cstack = rx1041_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx1041_pos, $P11, rx1041_curclass, "$!pos"
    rx1041_cur."!cursor_pass"(rx1041_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1041_cur)
  rx1041_restart2249:
    repr_get_attr_obj rx1041_cstack, rx1041_cur, rx1041_curclass, "$!cstack"
  rx1041_fail2250:
    unless rx1041_bstack, rx1041_done2248
    pop $I19, rx1041_bstack
    if_null rx1041_cstack, rx1041_cstack_done2253
    unless rx1041_cstack, rx1041_cstack_done2253
    dec $I19
    set $P11, rx1041_cstack[$I19]
  rx1041_cstack_done2253:
    pop rx1041_rep, rx1041_bstack
    pop rx1041_pos, rx1041_bstack
    pop $I19, rx1041_bstack
    lt rx1041_pos, -1, rx1041_done2248
    lt rx1041_pos, 0, rx1041_fail2250
    eq $I19, 0, rx1041_fail2250
    nqp_islist $I20, rx1041_cstack
    unless $I20, rx1041_jump2251
    elements $I18, rx1041_bstack
    le $I18, 0, rx1041_cut2252
    dec $I18
    set $I18, rx1041_bstack[$I18]
  rx1041_cut2252:
    assign rx1041_cstack, $I18
  rx1041_jump2251:
    jump $I19
  rx1041_done2248:
    rx1041_cur."!cursor_fail"()
    .return (rx1041_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_125_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1107
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1045_start
    .local string rx1045_tgt
    .local int rx1045_pos
    .local int rx1045_off
    .local int rx1045_eos
    .local int rx1045_rep
    .local pmc rx1045_cur
    .local pmc rx1045_curclass
    .local pmc rx1045_bstack
    .local pmc rx1045_cstack
    rx1045_start = self."!cursor_start_all"()
    set rx1045_cur, rx1045_start[0]
    set rx1045_tgt, rx1045_start[1]
    set rx1045_pos, rx1045_start[2]
    set rx1045_curclass, rx1045_start[3]
    set rx1045_bstack, rx1045_start[4]
    set $I19, rx1045_start[5]
    store_lex unicode:"$\x{a2}", rx1045_cur
    length rx1045_eos, rx1045_tgt
    eq $I19, 1, rx1045_restart2262
    gt rx1045_pos, rx1045_eos, rx1045_fail2263
    repr_get_attr_int $I11, self, rx1045_curclass, "$!from"
    ne $I11, -1, rxscan1046_done2269
    goto rxscan1046_scan2268
  rxscan1046_loop2267:
    inc rx1045_pos
    gt rx1045_pos, rx1045_eos, rx1045_fail2263
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!from", rx1045_pos
  rxscan1046_scan2268:
    nqp_rxmark rx1045_bstack, rxscan1046_loop2267, rx1045_pos, 0
  rxscan1046_done2269:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    store_lex unicode:"$\x{a2}", rx1045_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    nqp_rxmark rx1045_bstack, rxquantr1049_done2273, rx1045_pos, 0
  rxquantr1049_loop2272:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    nqp_rxmark rx1045_bstack, rxcap1051_fail2276, rx1045_pos, 0
    nqp_rxmark rx1045_bstack, rxquantr1052_done2278, rx1045_pos, 0
  rxquantr1052_loop2277:
    add $I11, rx1045_pos, 1
    gt $I11, rx1045_eos, rx1045_fail2263
    substr $S10, rx1045_tgt, rx1045_pos, 1
    ne $S10, ucs4:"&", rx1045_fail2263
    add rx1045_pos, 1
    nqp_rxpeek $I19, rx1045_bstack, rxquantr1052_done2278
    inc $I19
    inc $I19
    set rx1045_rep, rx1045_bstack[$I19]
    nqp_rxcommit rx1045_bstack, rxquantr1052_done2278
    inc rx1045_rep
  rxquantr1052_done2278:
    nqp_rxpeek $I19, rx1045_bstack, rxcap1051_fail2276
    inc $I19
    set $I11, rx1045_bstack[$I19]
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1045_pos)
    rx1045_cstack = rx1045_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1051_done2275
  rxcap1051_fail2276:
    goto rx1045_fail2263
  rxcap1051_done2275:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    nqp_rxmark rx1045_bstack, rxsubrule1053_pass2279, -1, 0
  rxsubrule1053_pass2279:
    rx1045_cstack = rx1045_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    nqp_rxpeek $I19, rx1045_bstack, rxquantr1049_done2273
    inc $I19
    inc $I19
    set rx1045_rep, rx1045_bstack[$I19]
    nqp_rxcommit rx1045_bstack, rxquantr1049_done2273
    inc rx1045_rep
  rxquantr1049_done2273:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
  alt1058_02285:
    nqp_rxmark rx1045_bstack, alt1058_12291, rx1045_pos, 0
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    add $I11, rx1045_pos, 1
    gt $I11, rx1045_eos, rx1045_fail2263
    substr $S10, rx1045_tgt, rx1045_pos, 1
    ne $S10, ucs4:"(", rx1045_fail2263
    add rx1045_pos, 1
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    nqp_rxmark rx1045_bstack, rxsubrule1061_pass2288, -1, 0
  rxsubrule1061_pass2288:
    rx1045_cstack = rx1045_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    add $I11, rx1045_pos, 1
    gt $I11, rx1045_eos, rx1045_fail2263
    substr $S10, rx1045_tgt, rx1045_pos, 1
    ne $S10, ucs4:")", rx1045_fail2263
    add rx1045_pos, 1
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    goto alt1058_end2284
  alt1058_12291:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
  alt1058_end2284:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    nqp_rxmark rx1045_bstack, rxquantr1068_done2297, rx1045_pos, 0
  rxquantr1068_loop2296:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    goto rxsubrule1069_pass2298
  rxsubrule1069_back2299:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
  rxsubrule1069_pass2298:
    rx1045_cstack = rx1045_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1069_back2299
    push rx1045_bstack, $I11
    push rx1045_bstack, 0
    push rx1045_bstack, rx1045_pos
    elements $I11, rx1045_cstack
    push rx1045_bstack, $I11
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    nqp_rxpeek $I19, rx1045_bstack, rxquantr1068_done2297
    inc $I19
    inc $I19
    set rx1045_rep, rx1045_bstack[$I19]
    nqp_rxcommit rx1045_bstack, rxquantr1068_done2297
    inc rx1045_rep
    nqp_rxmark rx1045_bstack, rxquantr1068_done2297, rx1045_pos, rx1045_rep
    goto rxquantr1068_loop2296
  rxquantr1068_done2297:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1071_02302
    nqp_push_label $P11, alt1071_12306
    nqp_rxmark rx1045_bstack, alt1071_end2301, -1, 0
    rx1045_cur."!alt"(rx1045_pos, "alt_nfa__23_1381281831.52088", $P11)
    goto rx1045_fail2263
  alt1071_02302:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    nqp_rxmark rx1045_bstack, rxsubrule1073_pass2304, -1, 0
  rxsubrule1073_pass2304:
    rx1045_cstack = rx1045_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    goto alt1071_end2301
  alt1071_12306:
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    nqp_rxmark rx1045_bstack, rxsubrule1076_pass2308, -1, 0
  rxsubrule1076_pass2308:
    rx1045_cstack = rx1045_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    goto alt1071_end2301
  alt1071_end2301:
    nqp_rxcommit rx1045_bstack, alt1071_end2301
    repr_bind_attr_int rx1045_cur, rx1045_curclass, "$!pos", rx1045_pos
    $P11 = rx1045_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1045_curclass, "$!pos"
    lt $I11, 0, rx1045_fail2263
    repr_get_attr_int rx1045_pos, $P11, rx1045_curclass, "$!pos"
    rx1045_cur."!cursor_pass"(rx1045_pos, "routine_def", 'backtrack'=>1)
    .return (rx1045_cur)
  rx1045_restart2262:
    repr_get_attr_obj rx1045_cstack, rx1045_cur, rx1045_curclass, "$!cstack"
  rx1045_fail2263:
    unless rx1045_bstack, rx1045_done2261
    pop $I19, rx1045_bstack
    if_null rx1045_cstack, rx1045_cstack_done2266
    unless rx1045_cstack, rx1045_cstack_done2266
    dec $I19
    set $P11, rx1045_cstack[$I19]
  rx1045_cstack_done2266:
    pop rx1045_rep, rx1045_bstack
    pop rx1045_pos, rx1045_bstack
    pop $I19, rx1045_bstack
    lt rx1045_pos, -1, rx1045_done2261
    lt rx1045_pos, 0, rx1045_fail2263
    eq $I19, 0, rx1045_fail2263
    nqp_islist $I20, rx1045_cstack
    unless $I20, rx1045_jump2264
    elements $I18, rx1045_bstack
    le $I18, 0, rx1045_cut2265
    dec $I18
    set $I18, rx1045_bstack[$I18]
  rx1045_cut2265:
    assign rx1045_cstack, $I18
  rx1045_jump2264:
    jump $I19
  rx1045_done2261:
    rx1045_cur."!cursor_fail"()
    .return (rx1045_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_126_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1120
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_412_1381281828.51527' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1079_start
    .local string rx1079_tgt
    .local int rx1079_pos
    .local int rx1079_off
    .local int rx1079_eos
    .local int rx1079_rep
    .local pmc rx1079_cur
    .local pmc rx1079_curclass
    .local pmc rx1079_bstack
    .local pmc rx1079_cstack
    rx1079_start = self."!cursor_start_all"()
    set rx1079_cur, rx1079_start[0]
    set rx1079_tgt, rx1079_start[1]
    set rx1079_pos, rx1079_start[2]
    set rx1079_curclass, rx1079_start[3]
    set rx1079_bstack, rx1079_start[4]
    set $I19, rx1079_start[5]
    store_lex unicode:"$\x{a2}", rx1079_cur
    length rx1079_eos, rx1079_tgt
    eq $I19, 1, rx1079_restart2313
    gt rx1079_pos, rx1079_eos, rx1079_fail2314
    repr_get_attr_int $I11, self, rx1079_curclass, "$!from"
    ne $I11, -1, rxscan1080_done2320
    goto rxscan1080_scan2319
  rxscan1080_loop2318:
    inc rx1079_pos
    gt rx1079_pos, rx1079_eos, rx1079_fail2314
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!from", rx1079_pos
  rxscan1080_scan2319:
    nqp_rxmark rx1079_bstack, rxscan1080_loop2318, rx1079_pos, 0
  rxscan1080_done2320:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    store_lex unicode:"$\x{a2}", rx1079_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    store_lex unicode:"$\x{a2}", rx1079_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
  alt1084_02325:
    nqp_rxmark rx1079_bstack, alt1084_12331, rx1079_pos, 0
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    add $I11, rx1079_pos, 3
    gt $I11, rx1079_eos, rx1079_fail2314
    substr $S10, rx1079_tgt, rx1079_pos, 3
    ne $S10, ucs4:"::(", rx1079_fail2314
    add rx1079_pos, 3
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    nqp_rxmark rx1079_bstack, rxsubrule1087_pass2328, -1, 0
  rxsubrule1087_pass2328:
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    add $I11, rx1079_pos, 1
    gt $I11, rx1079_eos, rx1079_fail2314
    substr $S10, rx1079_tgt, rx1079_pos, 1
    ne $S10, ucs4:")", rx1079_fail2314
    add rx1079_pos, 1
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    goto alt1084_end2324
  alt1084_12331:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    nqp_rxmark rx1079_bstack, rxcap1091_fail2334, rx1079_pos, 0
    nqp_rxmark rx1079_bstack, rxquantr1092_done2336, rx1079_pos, 0
  rxquantr1092_loop2335:
    add $I11, rx1079_pos, 1
    gt $I11, rx1079_eos, rx1079_fail2314
    substr $S10, rx1079_tgt, rx1079_pos, 1
    ne $S10, ucs4:"!", rx1079_fail2314
    add rx1079_pos, 1
    nqp_rxpeek $I19, rx1079_bstack, rxquantr1092_done2336
    inc $I19
    inc $I19
    set rx1079_rep, rx1079_bstack[$I19]
    nqp_rxcommit rx1079_bstack, rxquantr1092_done2336
    inc rx1079_rep
  rxquantr1092_done2336:
    nqp_rxpeek $I19, rx1079_bstack, rxcap1091_fail2334
    inc $I19
    set $I11, rx1079_bstack[$I19]
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1079_pos)
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "private")
    goto rxcap1091_done2333
  rxcap1091_fail2334:
    goto rx1079_fail2314
  rxcap1091_done2333:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    nqp_rxmark rx1079_bstack, rxquantr1094_done2339, rx1079_pos, 0
  rxquantr1094_loop2338:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    goto rxsubrule1095_pass2340
  rxsubrule1095_back2341:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
  rxsubrule1095_pass2340:
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1095_back2341
    push rx1079_bstack, $I11
    push rx1079_bstack, 0
    push rx1079_bstack, rx1079_pos
    elements $I11, rx1079_cstack
    push rx1079_bstack, $I11
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    nqp_rxpeek $I19, rx1079_bstack, rxquantr1094_done2339
    inc $I19
    inc $I19
    set rx1079_rep, rx1079_bstack[$I19]
    nqp_rxcommit rx1079_bstack, rxquantr1094_done2339
    inc rx1079_rep
  rxquantr1094_done2339:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
  alt1084_end2324:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
  alt1100_02347:
    nqp_rxmark rx1079_bstack, alt1100_12353, rx1079_pos, 0
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    add $I11, rx1079_pos, 1
    gt $I11, rx1079_eos, rx1079_fail2314
    substr $S10, rx1079_tgt, rx1079_pos, 1
    ne $S10, ucs4:"(", rx1079_fail2314
    add rx1079_pos, 1
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    nqp_rxmark rx1079_bstack, rxsubrule1103_pass2350, -1, 0
  rxsubrule1103_pass2350:
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    add $I11, rx1079_pos, 1
    gt $I11, rx1079_eos, rx1079_fail2314
    substr $S10, rx1079_tgt, rx1079_pos, 1
    ne $S10, ucs4:")", rx1079_fail2314
    add rx1079_pos, 1
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    goto alt1100_end2346
  alt1100_12353:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
  alt1100_end2346:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    store_lex unicode:"$\x{a2}", rx1079_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_412_1381281828.51527' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    nqp_rxmark rx1079_bstack, rxquantr1111_done2360, rx1079_pos, 0
  rxquantr1111_loop2359:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    goto rxsubrule1112_pass2361
  rxsubrule1112_back2362:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
  rxsubrule1112_pass2361:
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1112_back2362
    push rx1079_bstack, $I11
    push rx1079_bstack, 0
    push rx1079_bstack, rx1079_pos
    elements $I11, rx1079_cstack
    push rx1079_bstack, $I11
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    nqp_rxpeek $I19, rx1079_bstack, rxquantr1111_done2360
    inc $I19
    inc $I19
    set rx1079_rep, rx1079_bstack[$I19]
    nqp_rxcommit rx1079_bstack, rxquantr1111_done2360
    inc rx1079_rep
    nqp_rxmark rx1079_bstack, rxquantr1111_done2360, rx1079_pos, rx1079_rep
    goto rxquantr1111_loop2359
  rxquantr1111_done2360:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1114_02365
    nqp_push_label $P11, alt1114_12369
    nqp_rxmark rx1079_bstack, alt1114_end2364, -1, 0
    rx1079_cur."!alt"(rx1079_pos, "alt_nfa__24_1381281831.56603", $P11)
    goto rx1079_fail2314
  alt1114_02365:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    nqp_rxmark rx1079_bstack, rxsubrule1116_pass2367, -1, 0
  rxsubrule1116_pass2367:
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    goto alt1114_end2364
  alt1114_12369:
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    nqp_rxmark rx1079_bstack, rxsubrule1119_pass2371, -1, 0
  rxsubrule1119_pass2371:
    rx1079_cstack = rx1079_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    goto alt1114_end2364
  alt1114_end2364:
    nqp_rxcommit rx1079_bstack, alt1114_end2364
    repr_bind_attr_int rx1079_cur, rx1079_curclass, "$!pos", rx1079_pos
    $P11 = rx1079_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1079_curclass, "$!pos"
    lt $I11, 0, rx1079_fail2314
    repr_get_attr_int rx1079_pos, $P11, rx1079_curclass, "$!pos"
    rx1079_cur."!cursor_pass"(rx1079_pos, "method_def", 'backtrack'=>1)
    .return (rx1079_cur)
  rx1079_restart2313:
    repr_get_attr_obj rx1079_cstack, rx1079_cur, rx1079_curclass, "$!cstack"
  rx1079_fail2314:
    unless rx1079_bstack, rx1079_done2312
    pop $I19, rx1079_bstack
    if_null rx1079_cstack, rx1079_cstack_done2317
    unless rx1079_cstack, rx1079_cstack_done2317
    dec $I19
    set $P11, rx1079_cstack[$I19]
  rx1079_cstack_done2317:
    pop rx1079_rep, rx1079_bstack
    pop rx1079_pos, rx1079_bstack
    pop $I19, rx1079_bstack
    lt rx1079_pos, -1, rx1079_done2312
    lt rx1079_pos, 0, rx1079_fail2314
    eq $I19, 0, rx1079_fail2314
    nqp_islist $I20, rx1079_cstack
    unless $I20, rx1079_jump2315
    elements $I18, rx1079_bstack
    le $I18, 0, rx1079_cut2316
    dec $I18
    set $I18, rx1079_bstack[$I18]
  rx1079_cut2316:
    assign rx1079_cstack, $I18
  rx1079_jump2315:
    jump $I19
  rx1079_done2312:
    rx1079_cur."!cursor_fail"()
    .return (rx1079_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1381281828.51527") :anon :lex :outer("cuid_126_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1130

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_127_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1138
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_413_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1122_start
    .local string rx1122_tgt
    .local int rx1122_pos
    .local int rx1122_off
    .local int rx1122_eos
    .local int rx1122_rep
    .local pmc rx1122_cur
    .local pmc rx1122_curclass
    .local pmc rx1122_bstack
    .local pmc rx1122_cstack
    rx1122_start = self."!cursor_start_all"()
    set rx1122_cur, rx1122_start[0]
    set rx1122_tgt, rx1122_start[1]
    set rx1122_pos, rx1122_start[2]
    set rx1122_curclass, rx1122_start[3]
    set rx1122_bstack, rx1122_start[4]
    set $I19, rx1122_start[5]
    store_lex unicode:"$\x{a2}", rx1122_cur
    length rx1122_eos, rx1122_tgt
    eq $I19, 1, rx1122_restart2376
    gt rx1122_pos, rx1122_eos, rx1122_fail2377
    repr_get_attr_int $I11, self, rx1122_curclass, "$!from"
    ne $I11, -1, rxscan1123_done2383
    goto rxscan1123_scan2382
  rxscan1123_loop2381:
    inc rx1122_pos
    gt rx1122_pos, rx1122_eos, rx1122_fail2377
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!from", rx1122_pos
  rxscan1123_scan2382:
    nqp_rxmark rx1122_bstack, rxscan1123_loop2381, rx1122_pos, 0
  rxscan1123_done2383:
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    store_lex unicode:"$\x{a2}", rx1122_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_413_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1122_fail2377
    add $I11, rx1122_pos, 1
    gt $I11, rx1122_eos, rx1122_fail2377
    substr $S10, rx1122_tgt, rx1122_pos, 1
    ne $S10, ucs4:"{", rx1122_fail2377
    add rx1122_pos, 1
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2377
    repr_get_attr_int rx1122_pos, $P11, rx1122_curclass, "$!pos"
    add $I11, rx1122_pos, 1
    gt $I11, rx1122_eos, rx1122_fail2377
    substr $S10, rx1122_tgt, rx1122_pos, 1
    ne $S10, ucs4:"*", rx1122_fail2377
    add rx1122_pos, 1
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2377
    repr_get_attr_int rx1122_pos, $P11, rx1122_curclass, "$!pos"
    add $I11, rx1122_pos, 1
    gt $I11, rx1122_eos, rx1122_fail2377
    substr $S10, rx1122_tgt, rx1122_pos, 1
    ne $S10, ucs4:"}", rx1122_fail2377
    add rx1122_pos, 1
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2377
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2377
    repr_get_attr_int rx1122_pos, $P11, rx1122_curclass, "$!pos"
    rx1122_cur."!cursor_pass"(rx1122_pos, "onlystar", 'backtrack'=>1)
    .return (rx1122_cur)
  rx1122_restart2376:
    repr_get_attr_obj rx1122_cstack, rx1122_cur, rx1122_curclass, "$!cstack"
  rx1122_fail2377:
    unless rx1122_bstack, rx1122_done2375
    pop $I19, rx1122_bstack
    if_null rx1122_cstack, rx1122_cstack_done2380
    unless rx1122_cstack, rx1122_cstack_done2380
    dec $I19
    set $P11, rx1122_cstack[$I19]
  rx1122_cstack_done2380:
    pop rx1122_rep, rx1122_bstack
    pop rx1122_pos, rx1122_bstack
    pop $I19, rx1122_bstack
    lt rx1122_pos, -1, rx1122_done2375
    lt rx1122_pos, 0, rx1122_fail2377
    eq $I19, 0, rx1122_fail2377
    nqp_islist $I20, rx1122_cstack
    unless $I20, rx1122_jump2378
    elements $I18, rx1122_bstack
    le $I18, 0, rx1122_cut2379
    dec $I18
    set $I18, rx1122_bstack[$I18]
  rx1122_cut2379:
    assign rx1122_cstack, $I18
  rx1122_jump2378:
    jump $I19
  rx1122_done2375:
    rx1122_cur."!cursor_fail"()
    .return (rx1122_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1381281828.51527") :anon :lex :outer("cuid_127_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1139
    .local pmc fb_tmp_165 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2384
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_165, $P5002
    repr_defined $I5002, fb_tmp_165
    unless $I5002 goto if1124_else2385 
    set $P5004, fb_tmp_165["$MULTINESS"]
    set $P5006, $P5004
    goto if1124_end2386
  if1124_else2385:
    null $P5005
    set $P5006, $P5005
  if1124_end2386:
    unless_null $P5006, vivi_11252387
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_11252387:
    unless_null $P5006, vivi_11262388
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_11262388:
    set $P5001, $P5006
  fallback2384:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_128_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1145
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_129_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1146
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1130_start
    .local string rx1130_tgt
    .local int rx1130_pos
    .local int rx1130_off
    .local int rx1130_eos
    .local int rx1130_rep
    .local pmc rx1130_cur
    .local pmc rx1130_curclass
    .local pmc rx1130_bstack
    .local pmc rx1130_cstack
    rx1130_start = self."!cursor_start_all"()
    set rx1130_cur, rx1130_start[0]
    set rx1130_tgt, rx1130_start[1]
    set rx1130_pos, rx1130_start[2]
    set rx1130_curclass, rx1130_start[3]
    set rx1130_bstack, rx1130_start[4]
    set $I19, rx1130_start[5]
    store_lex unicode:"$\x{a2}", rx1130_cur
    length rx1130_eos, rx1130_tgt
    eq $I19, 1, rx1130_restart2394
    gt rx1130_pos, rx1130_eos, rx1130_fail2395
    repr_get_attr_int $I11, self, rx1130_curclass, "$!from"
    ne $I11, -1, rxscan1131_done2401
    goto rxscan1131_scan2400
  rxscan1131_loop2399:
    inc rx1130_pos
    gt rx1130_pos, rx1130_eos, rx1130_fail2395
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!from", rx1130_pos
  rxscan1131_scan2400:
    nqp_rxmark rx1130_bstack, rxscan1131_loop2399, rx1130_pos, 0
  rxscan1131_done2401:
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    store_lex unicode:"$\x{a2}", rx1130_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1130_bstack, rxcap1132_fail2403, rx1130_pos, 0
    add $I11, rx1130_pos, 5
    gt $I11, rx1130_eos, rx1130_fail2395
    substr $S10, rx1130_tgt, rx1130_pos, 5
    ne $S10, ucs4:"multi", rx1130_fail2395
    add rx1130_pos, 5
    nqp_rxpeek $I19, rx1130_bstack, rxcap1132_fail2403
    inc $I19
    set $I11, rx1130_bstack[$I19]
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1130_pos)
    rx1130_cstack = rx1130_cur."!cursor_capture"($P11, "sym")
    goto rxcap1132_done2402
  rxcap1132_fail2403:
    goto rx1130_fail2395
  rxcap1132_done2402:
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1130_curclass, "$!pos"
    lt $I11, 0, rx1130_fail2395
    repr_get_attr_int rx1130_pos, $P11, rx1130_curclass, "$!pos"
  alt1134_02406:
    nqp_rxmark rx1130_bstack, alt1134_12408, rx1130_pos, 0
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1130_curclass, "$!pos"
    lt $I11, 0, rx1130_fail2395
    nqp_rxmark rx1130_bstack, rxsubrule1135_pass2407, -1, 0
  rxsubrule1135_pass2407:
    rx1130_cstack = rx1130_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1130_pos, $P11, rx1130_curclass, "$!pos"
    goto alt1134_end2405
  alt1134_12408:
    nqp_rxmark rx1130_bstack, alt1134_22410, rx1130_pos, 0
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1130_curclass, "$!pos"
    lt $I11, 0, rx1130_fail2395
    nqp_rxmark rx1130_bstack, rxsubrule1136_pass2409, -1, 0
  rxsubrule1136_pass2409:
    rx1130_cstack = rx1130_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1130_pos, $P11, rx1130_curclass, "$!pos"
    goto alt1134_end2405
  alt1134_22410:
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1130_curclass, "$!pos"
    lt $I11, 0, rx1130_fail2395
    repr_get_attr_int rx1130_pos, $P11, rx1130_curclass, "$!pos"
  alt1134_end2405:
    rx1130_cur."!cursor_pass"(rx1130_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1130_cur)
  rx1130_restart2394:
    repr_get_attr_obj rx1130_cstack, rx1130_cur, rx1130_curclass, "$!cstack"
  rx1130_fail2395:
    unless rx1130_bstack, rx1130_done2393
    pop $I19, rx1130_bstack
    if_null rx1130_cstack, rx1130_cstack_done2398
    unless rx1130_cstack, rx1130_cstack_done2398
    dec $I19
    set $P11, rx1130_cstack[$I19]
  rx1130_cstack_done2398:
    pop rx1130_rep, rx1130_bstack
    pop rx1130_pos, rx1130_bstack
    pop $I19, rx1130_bstack
    lt rx1130_pos, -1, rx1130_done2393
    lt rx1130_pos, 0, rx1130_fail2395
    eq $I19, 0, rx1130_fail2395
    nqp_islist $I20, rx1130_cstack
    unless $I20, rx1130_jump2396
    elements $I18, rx1130_bstack
    le $I18, 0, rx1130_cut2397
    dec $I18
    set $I18, rx1130_bstack[$I18]
  rx1130_cut2397:
    assign rx1130_cstack, $I18
  rx1130_jump2396:
    jump $I19
  rx1130_done2393:
    rx1130_cur."!cursor_fail"()
    .return (rx1130_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_130_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1151
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1138_start
    .local string rx1138_tgt
    .local int rx1138_pos
    .local int rx1138_off
    .local int rx1138_eos
    .local int rx1138_rep
    .local pmc rx1138_cur
    .local pmc rx1138_curclass
    .local pmc rx1138_bstack
    .local pmc rx1138_cstack
    rx1138_start = self."!cursor_start_all"()
    set rx1138_cur, rx1138_start[0]
    set rx1138_tgt, rx1138_start[1]
    set rx1138_pos, rx1138_start[2]
    set rx1138_curclass, rx1138_start[3]
    set rx1138_bstack, rx1138_start[4]
    set $I19, rx1138_start[5]
    store_lex unicode:"$\x{a2}", rx1138_cur
    length rx1138_eos, rx1138_tgt
    eq $I19, 1, rx1138_restart2414
    gt rx1138_pos, rx1138_eos, rx1138_fail2415
    repr_get_attr_int $I11, self, rx1138_curclass, "$!from"
    ne $I11, -1, rxscan1139_done2421
    goto rxscan1139_scan2420
  rxscan1139_loop2419:
    inc rx1138_pos
    gt rx1138_pos, rx1138_eos, rx1138_fail2415
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!from", rx1138_pos
  rxscan1139_scan2420:
    nqp_rxmark rx1138_bstack, rxscan1139_loop2419, rx1138_pos, 0
  rxscan1139_done2421:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    store_lex unicode:"$\x{a2}", rx1138_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1138_bstack, rxcap1140_fail2423, rx1138_pos, 0
    add $I11, rx1138_pos, 5
    gt $I11, rx1138_eos, rx1138_fail2415
    substr $S10, rx1138_tgt, rx1138_pos, 5
    ne $S10, ucs4:"proto", rx1138_fail2415
    add rx1138_pos, 5
    nqp_rxpeek $I19, rx1138_bstack, rxcap1140_fail2423
    inc $I19
    set $I11, rx1138_bstack[$I19]
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1138_pos)
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "sym")
    goto rxcap1140_done2422
  rxcap1140_fail2423:
    goto rx1138_fail2415
  rxcap1140_done2422:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2415
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
  alt1142_02426:
    nqp_rxmark rx1138_bstack, alt1142_12428, rx1138_pos, 0
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2415
    nqp_rxmark rx1138_bstack, rxsubrule1143_pass2427, -1, 0
  rxsubrule1143_pass2427:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    goto alt1142_end2425
  alt1142_12428:
    nqp_rxmark rx1138_bstack, alt1142_22430, rx1138_pos, 0
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2415
    nqp_rxmark rx1138_bstack, rxsubrule1144_pass2429, -1, 0
  rxsubrule1144_pass2429:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    goto alt1142_end2425
  alt1142_22430:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2415
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
  alt1142_end2425:
    rx1138_cur."!cursor_pass"(rx1138_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1138_cur)
  rx1138_restart2414:
    repr_get_attr_obj rx1138_cstack, rx1138_cur, rx1138_curclass, "$!cstack"
  rx1138_fail2415:
    unless rx1138_bstack, rx1138_done2413
    pop $I19, rx1138_bstack
    if_null rx1138_cstack, rx1138_cstack_done2418
    unless rx1138_cstack, rx1138_cstack_done2418
    dec $I19
    set $P11, rx1138_cstack[$I19]
  rx1138_cstack_done2418:
    pop rx1138_rep, rx1138_bstack
    pop rx1138_pos, rx1138_bstack
    pop $I19, rx1138_bstack
    lt rx1138_pos, -1, rx1138_done2413
    lt rx1138_pos, 0, rx1138_fail2415
    eq $I19, 0, rx1138_fail2415
    nqp_islist $I20, rx1138_cstack
    unless $I20, rx1138_jump2416
    elements $I18, rx1138_bstack
    le $I18, 0, rx1138_cut2417
    dec $I18
    set $I18, rx1138_bstack[$I18]
  rx1138_cut2417:
    assign rx1138_cstack, $I18
  rx1138_jump2416:
    jump $I19
  rx1138_done2413:
    rx1138_cur."!cursor_fail"()
    .return (rx1138_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_131_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1156
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1146_start
    .local string rx1146_tgt
    .local int rx1146_pos
    .local int rx1146_off
    .local int rx1146_eos
    .local int rx1146_rep
    .local pmc rx1146_cur
    .local pmc rx1146_curclass
    .local pmc rx1146_bstack
    .local pmc rx1146_cstack
    rx1146_start = self."!cursor_start_all"()
    set rx1146_cur, rx1146_start[0]
    set rx1146_tgt, rx1146_start[1]
    set rx1146_pos, rx1146_start[2]
    set rx1146_curclass, rx1146_start[3]
    set rx1146_bstack, rx1146_start[4]
    set $I19, rx1146_start[5]
    store_lex unicode:"$\x{a2}", rx1146_cur
    length rx1146_eos, rx1146_tgt
    eq $I19, 1, rx1146_restart2434
    gt rx1146_pos, rx1146_eos, rx1146_fail2435
    repr_get_attr_int $I11, self, rx1146_curclass, "$!from"
    ne $I11, -1, rxscan1147_done2441
    goto rxscan1147_scan2440
  rxscan1147_loop2439:
    inc rx1146_pos
    gt rx1146_pos, rx1146_eos, rx1146_fail2435
    repr_bind_attr_int rx1146_cur, rx1146_curclass, "$!from", rx1146_pos
  rxscan1147_scan2440:
    nqp_rxmark rx1146_bstack, rxscan1147_loop2439, rx1146_pos, 0
  rxscan1147_done2441:
    repr_bind_attr_int rx1146_cur, rx1146_curclass, "$!pos", rx1146_pos
    store_lex unicode:"$\x{a2}", rx1146_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1146_cur, rx1146_curclass, "$!pos", rx1146_pos
    $P11 = rx1146_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1146_curclass, "$!pos"
    lt $I11, 0, rx1146_fail2435
    nqp_rxmark rx1146_bstack, rxsubrule1148_pass2442, -1, 0
  rxsubrule1148_pass2442:
    rx1146_cstack = rx1146_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1146_pos, $P11, rx1146_curclass, "$!pos"
    rx1146_cur."!cursor_pass"(rx1146_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1146_cur)
  rx1146_restart2434:
    repr_get_attr_obj rx1146_cstack, rx1146_cur, rx1146_curclass, "$!cstack"
  rx1146_fail2435:
    unless rx1146_bstack, rx1146_done2433
    pop $I19, rx1146_bstack
    if_null rx1146_cstack, rx1146_cstack_done2438
    unless rx1146_cstack, rx1146_cstack_done2438
    dec $I19
    set $P11, rx1146_cstack[$I19]
  rx1146_cstack_done2438:
    pop rx1146_rep, rx1146_bstack
    pop rx1146_pos, rx1146_bstack
    pop $I19, rx1146_bstack
    lt rx1146_pos, -1, rx1146_done2433
    lt rx1146_pos, 0, rx1146_fail2435
    eq $I19, 0, rx1146_fail2435
    nqp_islist $I20, rx1146_cstack
    unless $I20, rx1146_jump2436
    elements $I18, rx1146_bstack
    le $I18, 0, rx1146_cut2437
    dec $I18
    set $I18, rx1146_bstack[$I18]
  rx1146_cut2437:
    assign rx1146_cstack, $I18
  rx1146_jump2436:
    jump $I19
  rx1146_done2433:
    rx1146_cur."!cursor_fail"()
    .return (rx1146_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_132_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1161
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_414_1381281828.51527' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_133_1381281828.51527' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1149_start
    .local string rx1149_tgt
    .local int rx1149_pos
    .local int rx1149_off
    .local int rx1149_eos
    .local int rx1149_rep
    .local pmc rx1149_cur
    .local pmc rx1149_curclass
    .local pmc rx1149_bstack
    .local pmc rx1149_cstack
    rx1149_start = self."!cursor_start_all"()
    set rx1149_cur, rx1149_start[0]
    set rx1149_tgt, rx1149_start[1]
    set rx1149_pos, rx1149_start[2]
    set rx1149_curclass, rx1149_start[3]
    set rx1149_bstack, rx1149_start[4]
    set $I19, rx1149_start[5]
    store_lex unicode:"$\x{a2}", rx1149_cur
    length rx1149_eos, rx1149_tgt
    eq $I19, 1, rx1149_restart2445
    gt rx1149_pos, rx1149_eos, rx1149_fail2446
    repr_get_attr_int $I11, self, rx1149_curclass, "$!from"
    ne $I11, -1, rxscan1150_done2452
    goto rxscan1150_scan2451
  rxscan1150_loop2450:
    inc rx1149_pos
    gt rx1149_pos, rx1149_eos, rx1149_fail2446
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!from", rx1149_pos
  rxscan1150_scan2451:
    nqp_rxmark rx1149_bstack, rxscan1150_loop2450, rx1149_pos, 0
  rxscan1150_done2452:
    nqp_rxmark rx1149_bstack, rxquantr1151_done2454, rx1149_pos, 0
  rxquantr1151_loop2453:
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    store_lex unicode:"$\x{a2}", rx1149_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_414_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1149_fail2446
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    nqp_rxmark rx1149_bstack, rxsubrule1156_pass2461, -1, 0
  rxsubrule1156_pass2461:
    rx1149_cstack = rx1149_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    add $I11, rx1149_pos, 1
    gt $I11, rx1149_eos, rx1149_fail2446
    substr $S10, rx1149_tgt, rx1149_pos, 1
    ne $S10, ucs4:":", rx1149_fail2446
    add rx1149_pos, 1
    nqp_rxpeek $I19, rx1149_bstack, rxquantr1151_done2454
    inc $I19
    inc $I19
    set rx1149_rep, rx1149_bstack[$I19]
    nqp_rxcommit rx1149_bstack, rxquantr1151_done2454
    inc rx1149_rep
  rxquantr1151_done2454:
    nqp_rxmark rx1149_bstack, rxquantr1158_done2464, rx1149_pos, 0
  rxquantr1158_loop2463:
    nqp_rxmark rx1149_bstack, rxquantr1159_done2466, rx1149_pos, 0
  rxquantr1159_loop2465:
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    nqp_rxmark rx1149_bstack, rxsubrule1161_pass2468, -1, 0
  rxsubrule1161_pass2468:
    rx1149_cstack = rx1149_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1163_02471
    nqp_push_label $P11, alt1163_12472
    nqp_rxmark rx1149_bstack, alt1163_end2470, -1, 0
    rx1149_cur."!alt"(rx1149_pos, "alt_nfa__26_1381281831.66126", $P11)
    goto rx1149_fail2446
  alt1163_02471:
    add $I11, rx1149_pos, 1
    gt $I11, rx1149_eos, rx1149_fail2446
    substr $S10, rx1149_tgt, rx1149_pos, 1
    ne $S10, ucs4:",", rx1149_fail2446
    add rx1149_pos, 1
    goto alt1163_end2470
  alt1163_12472:
    .const 'Sub' $P5004 = 'cuid_133_1381281828.51527' 
    capture_lex $P5004
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2446
    nqp_rxmark rx1149_bstack, rxsubrule1168_pass2488, -1, 0
  rxsubrule1168_pass2488:
    rx1149_cstack = rx1149_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    goto alt1163_end2470
  alt1163_end2470:
    nqp_rxcommit rx1149_bstack, alt1163_end2470
    nqp_rxpeek $I19, rx1149_bstack, rxquantr1159_done2466
    inc $I19
    inc $I19
    set rx1149_rep, rx1149_bstack[$I19]
    nqp_rxcommit rx1149_bstack, rxquantr1159_done2466
    inc rx1149_rep
    nqp_rxmark rx1149_bstack, rxquantr1159_done2466, rx1149_pos, rx1149_rep
    goto rxquantr1159_loop2465
  rxquantr1159_done2466:
    nqp_rxpeek $I19, rx1149_bstack, rxquantr1158_done2464
    inc $I19
    inc $I19
    set rx1149_rep, rx1149_bstack[$I19]
    nqp_rxcommit rx1149_bstack, rxquantr1158_done2464
    inc rx1149_rep
  rxquantr1158_done2464:
    rx1149_cur."!cursor_pass"(rx1149_pos, "signature", 'backtrack'=>1)
    .return (rx1149_cur)
  rx1149_restart2445:
    repr_get_attr_obj rx1149_cstack, rx1149_cur, rx1149_curclass, "$!cstack"
  rx1149_fail2446:
    unless rx1149_bstack, rx1149_done2444
    pop $I19, rx1149_bstack
    if_null rx1149_cstack, rx1149_cstack_done2449
    unless rx1149_cstack, rx1149_cstack_done2449
    dec $I19
    set $P11, rx1149_cstack[$I19]
  rx1149_cstack_done2449:
    pop rx1149_rep, rx1149_bstack
    pop rx1149_pos, rx1149_bstack
    pop $I19, rx1149_bstack
    lt rx1149_pos, -1, rx1149_done2444
    lt rx1149_pos, 0, rx1149_fail2446
    eq $I19, 0, rx1149_fail2446
    nqp_islist $I20, rx1149_cstack
    unless $I20, rx1149_jump2447
    elements $I18, rx1149_bstack
    le $I18, 0, rx1149_cut2448
    dec $I18
    set $I18, rx1149_bstack[$I18]
  rx1149_cut2448:
    assign rx1149_cstack, $I18
  rx1149_jump2447:
    jump $I19
  rx1149_done2444:
    rx1149_cur."!cursor_fail"()
    .return (rx1149_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1381281828.51527") :anon :lex :outer("cuid_132_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1162
    .local pmc fb_tmp_166 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2455
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_166, $P5002
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1152_else2456 
    set $P5004, fb_tmp_166["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1152_end2457
  if1152_else2456:
    null $P5005
    set $P5006, $P5005
  if1152_end2457:
    unless_null $P5006, vivi_11532458
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_11532458:
    unless_null $P5006, vivi_11542459
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_11542459:
    set $P5001, $P5006
  fallback2455:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_133_1381281828.51527") :anon :lex :outer("cuid_132_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1164_start
    .local string rx1164_tgt
    .local int rx1164_pos
    .local int rx1164_off
    .local int rx1164_eos
    .local int rx1164_rep
    .local pmc rx1164_cur
    .local pmc rx1164_curclass
    .local pmc rx1164_bstack
    .local pmc rx1164_cstack
    rx1164_start = self."!cursor_start_all"()
    set rx1164_cur, rx1164_start[0]
    set rx1164_tgt, rx1164_start[1]
    set rx1164_pos, rx1164_start[2]
    set rx1164_curclass, rx1164_start[3]
    set rx1164_bstack, rx1164_start[4]
    set $I19, rx1164_start[5]
    store_lex unicode:"$\x{a2}", rx1164_cur
    length rx1164_eos, rx1164_tgt
    eq $I19, 1, rx1164_restart2475
    gt rx1164_pos, rx1164_eos, rx1164_fail2476
    repr_get_attr_int $I11, self, rx1164_curclass, "$!from"
    ne $I11, -1, rxscan1165_done2482
    goto rxscan1165_scan2481
  rxscan1165_loop2480:
    inc rx1164_pos
    gt rx1164_pos, rx1164_eos, rx1164_fail2476
    repr_bind_attr_int rx1164_cur, rx1164_curclass, "$!from", rx1164_pos
  rxscan1165_scan2481:
    nqp_rxmark rx1164_bstack, rxscan1165_loop2480, rx1164_pos, 0
  rxscan1165_done2482:
    nqp_rxmark rx1164_bstack, rxquantr1166_done2484, rx1164_pos, 0
  rxquantr1166_loop2483:
    ge rx1164_pos, rx1164_eos, rx1164_fail2476
    is_cclass $I11, .CCLASS_WHITESPACE, rx1164_tgt, rx1164_pos
    unless $I11, rx1164_fail2476
    add rx1164_pos, 1
    nqp_rxpeek $I19, rx1164_bstack, rxquantr1166_done2484
    inc $I19
    inc $I19
    set rx1164_rep, rx1164_bstack[$I19]
    nqp_rxcommit rx1164_bstack, rxquantr1166_done2484
    inc rx1164_rep
    nqp_rxmark rx1164_bstack, rxquantr1166_done2484, rx1164_pos, rx1164_rep
    goto rxquantr1166_loop2483
  rxquantr1166_done2484:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1167_02486
    nqp_push_label $P11, alt1167_12487
    nqp_rxmark rx1164_bstack, alt1167_end2485, -1, 0
    rx1164_cur."!alt"(rx1164_pos, "alt_nfa__25_1381281831.65438", $P11)
    goto rx1164_fail2476
  alt1167_02486:
    add $I11, rx1164_pos, 1
    gt $I11, rx1164_eos, rx1164_fail2476
    substr $S10, rx1164_tgt, rx1164_pos, 1
    ne $S10, ucs4:")", rx1164_fail2476
    add rx1164_pos, 1
    goto alt1167_end2485
  alt1167_12487:
    add $I11, rx1164_pos, 1
    gt $I11, rx1164_eos, rx1164_fail2476
    substr $S10, rx1164_tgt, rx1164_pos, 1
    ne $S10, ucs4:"{", rx1164_fail2476
    add rx1164_pos, 1
    goto alt1167_end2485
  alt1167_end2485:
    nqp_rxcommit rx1164_bstack, alt1167_end2485
    rx1164_cur."!cursor_pass"(rx1164_pos, 'backtrack'=>1)
    .return (rx1164_cur)
  rx1164_restart2475:
    repr_get_attr_obj rx1164_cstack, rx1164_cur, rx1164_curclass, "$!cstack"
  rx1164_fail2476:
    unless rx1164_bstack, rx1164_done2474
    pop $I19, rx1164_bstack
    if_null rx1164_cstack, rx1164_cstack_done2479
    unless rx1164_cstack, rx1164_cstack_done2479
    dec $I19
    set $P11, rx1164_cstack[$I19]
  rx1164_cstack_done2479:
    pop rx1164_rep, rx1164_bstack
    pop rx1164_pos, rx1164_bstack
    pop $I19, rx1164_bstack
    lt rx1164_pos, -1, rx1164_done2474
    lt rx1164_pos, 0, rx1164_fail2476
    eq $I19, 0, rx1164_fail2476
    nqp_islist $I20, rx1164_cstack
    unless $I20, rx1164_jump2477
    elements $I18, rx1164_bstack
    le $I18, 0, rx1164_cut2478
    dec $I18
    set $I18, rx1164_bstack[$I18]
  rx1164_cut2478:
    assign rx1164_cstack, $I18
  rx1164_jump2477:
    jump $I19
  rx1164_done2474:
    rx1164_cur."!cursor_fail"()
    .return (rx1164_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_134_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1166
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1169_start
    .local string rx1169_tgt
    .local int rx1169_pos
    .local int rx1169_off
    .local int rx1169_eos
    .local int rx1169_rep
    .local pmc rx1169_cur
    .local pmc rx1169_curclass
    .local pmc rx1169_bstack
    .local pmc rx1169_cstack
    rx1169_start = self."!cursor_start_all"()
    set rx1169_cur, rx1169_start[0]
    set rx1169_tgt, rx1169_start[1]
    set rx1169_pos, rx1169_start[2]
    set rx1169_curclass, rx1169_start[3]
    set rx1169_bstack, rx1169_start[4]
    set $I19, rx1169_start[5]
    store_lex unicode:"$\x{a2}", rx1169_cur
    length rx1169_eos, rx1169_tgt
    eq $I19, 1, rx1169_restart2491
    gt rx1169_pos, rx1169_eos, rx1169_fail2492
    repr_get_attr_int $I11, self, rx1169_curclass, "$!from"
    ne $I11, -1, rxscan1170_done2498
    goto rxscan1170_scan2497
  rxscan1170_loop2496:
    inc rx1169_pos
    gt rx1169_pos, rx1169_eos, rx1169_fail2492
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!from", rx1169_pos
  rxscan1170_scan2497:
    nqp_rxmark rx1169_bstack, rxscan1170_loop2496, rx1169_pos, 0
  rxscan1170_done2498:
    nqp_rxmark rx1169_bstack, rxquantr1171_done2500, rx1169_pos, 0
  rxquantr1171_loop2499:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
    nqp_rxmark rx1169_bstack, rxsubrule1172_pass2501, -1, 0
  rxsubrule1172_pass2501:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxmark rx1169_bstack, rxquantr1173_done2503, rx1169_pos, 0
  rxquantr1173_loop2502:
    add $I11, rx1169_pos, 1
    gt $I11, rx1169_eos, rx1169_fail2492
    substr $S10, rx1169_tgt, rx1169_pos, 1
    ne $S10, ucs4:":", rx1169_fail2492
    add rx1169_pos, 1
    nqp_rxmark rx1169_bstack, rxcap1174_fail2505, rx1169_pos, 0
    ge rx1169_pos, rx1169_eos, rx1169_fail2492
    substr $S11, rx1169_tgt, rx1169_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1169_fail2492
    inc rx1169_pos
    nqp_rxpeek $I19, rx1169_bstack, rxcap1174_fail2505
    inc $I19
    set $I11, rx1169_bstack[$I19]
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1169_pos)
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1174_done2504
  rxcap1174_fail2505:
    goto rx1169_fail2492
  rxcap1174_done2504:
    nqp_rxpeek $I19, rx1169_bstack, rxquantr1173_done2503
    inc $I19
    inc $I19
    set rx1169_rep, rx1169_bstack[$I19]
    nqp_rxcommit rx1169_bstack, rxquantr1173_done2503
    inc rx1169_rep
  rxquantr1173_done2503:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxpeek $I19, rx1169_bstack, rxquantr1171_done2500
    inc $I19
    inc $I19
    set rx1169_rep, rx1169_bstack[$I19]
    nqp_rxcommit rx1169_bstack, rxquantr1171_done2500
    inc rx1169_rep
    nqp_rxmark rx1169_bstack, rxquantr1171_done2500, rx1169_pos, rx1169_rep
    goto rxquantr1171_loop2499
  rxquantr1171_done2500:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1176_02508
    nqp_push_label $P11, alt1176_12512
    nqp_rxmark rx1169_bstack, alt1176_end2507, -1, 0
    rx1169_cur."!alt"(rx1169_pos, "alt_nfa__29_1381281831.69457", $P11)
    goto rx1169_fail2492
  alt1176_02508:
    nqp_rxmark rx1169_bstack, rxcap1177_fail2510, rx1169_pos, 0
    add $I11, rx1169_pos, 1
    gt $I11, rx1169_eos, rx1169_fail2492
    substr $S10, rx1169_tgt, rx1169_pos, 1
    ne $S10, ucs4:"*", rx1169_fail2492
    add rx1169_pos, 1
    nqp_rxpeek $I19, rx1169_bstack, rxcap1177_fail2510
    inc $I19
    set $I11, rx1169_bstack[$I19]
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1169_pos)
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "quant")
    goto rxcap1177_done2509
  rxcap1177_fail2510:
    goto rx1169_fail2492
  rxcap1177_done2509:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
    nqp_rxmark rx1169_bstack, rxsubrule1178_pass2511, -1, 0
  rxsubrule1178_pass2511:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    goto alt1176_end2507
  alt1176_12512:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1179_02514
    nqp_push_label $P11, alt1179_12516
    nqp_rxmark rx1169_bstack, alt1179_end2513, -1, 0
    rx1169_cur."!alt"(rx1169_pos, "alt_nfa__27_1381281831.69389", $P11)
    goto rx1169_fail2492
  alt1179_02514:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
    nqp_rxmark rx1169_bstack, rxsubrule1180_pass2515, -1, 0
  rxsubrule1180_pass2515:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    goto alt1179_end2513
  alt1179_12516:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
    nqp_rxmark rx1169_bstack, rxsubrule1181_pass2517, -1, 0
  rxsubrule1181_pass2517:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    goto alt1179_end2513
  alt1179_end2513:
    nqp_rxcommit rx1169_bstack, alt1179_end2513
    nqp_rxmark rx1169_bstack, rxcap1182_fail2519, rx1169_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1183_02521
    nqp_push_label $P11, alt1183_12522
    nqp_push_label $P11, alt1183_22523
    nqp_rxmark rx1169_bstack, alt1183_end2520, -1, 0
    rx1169_cur."!alt"(rx1169_pos, "alt_nfa__28_1381281831.69422", $P11)
    goto rx1169_fail2492
  alt1183_02521:
    add $I11, rx1169_pos, 1
    gt $I11, rx1169_eos, rx1169_fail2492
    substr $S10, rx1169_tgt, rx1169_pos, 1
    ne $S10, ucs4:"?", rx1169_fail2492
    add rx1169_pos, 1
    goto alt1183_end2520
  alt1183_12522:
    add $I11, rx1169_pos, 1
    gt $I11, rx1169_eos, rx1169_fail2492
    substr $S10, rx1169_tgt, rx1169_pos, 1
    ne $S10, ucs4:"!", rx1169_fail2492
    add rx1169_pos, 1
    goto alt1183_end2520
  alt1183_22523:
    goto alt1183_end2520
  alt1183_end2520:
    nqp_rxcommit rx1169_bstack, alt1183_end2520
    nqp_rxpeek $I19, rx1169_bstack, rxcap1182_fail2519
    inc $I19
    set $I11, rx1169_bstack[$I19]
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1169_pos)
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "quant")
    goto rxcap1182_done2518
  rxcap1182_fail2519:
    goto rx1169_fail2492
  rxcap1182_done2518:
    goto alt1176_end2507
  alt1176_end2507:
    nqp_rxcommit rx1169_bstack, alt1176_end2507
    nqp_rxmark rx1169_bstack, rxquantr1185_done2526, rx1169_pos, 0
  rxquantr1185_loop2525:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
    goto rxsubrule1186_pass2527
  rxsubrule1186_back2528:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2492
  rxsubrule1186_pass2527:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1186_back2528
    push rx1169_bstack, $I11
    push rx1169_bstack, 0
    push rx1169_bstack, rx1169_pos
    elements $I11, rx1169_cstack
    push rx1169_bstack, $I11
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxpeek $I19, rx1169_bstack, rxquantr1185_done2526
    inc $I19
    inc $I19
    set rx1169_rep, rx1169_bstack[$I19]
    nqp_rxcommit rx1169_bstack, rxquantr1185_done2526
    inc rx1169_rep
  rxquantr1185_done2526:
    rx1169_cur."!cursor_pass"(rx1169_pos, "parameter", 'backtrack'=>1)
    .return (rx1169_cur)
  rx1169_restart2491:
    repr_get_attr_obj rx1169_cstack, rx1169_cur, rx1169_curclass, "$!cstack"
  rx1169_fail2492:
    unless rx1169_bstack, rx1169_done2490
    pop $I19, rx1169_bstack
    if_null rx1169_cstack, rx1169_cstack_done2495
    unless rx1169_cstack, rx1169_cstack_done2495
    dec $I19
    set $P11, rx1169_cstack[$I19]
  rx1169_cstack_done2495:
    pop rx1169_rep, rx1169_bstack
    pop rx1169_pos, rx1169_bstack
    pop $I19, rx1169_bstack
    lt rx1169_pos, -1, rx1169_done2490
    lt rx1169_pos, 0, rx1169_fail2492
    eq $I19, 0, rx1169_fail2492
    nqp_islist $I20, rx1169_cstack
    unless $I20, rx1169_jump2493
    elements $I18, rx1169_bstack
    le $I18, 0, rx1169_cut2494
    dec $I18
    set $I18, rx1169_bstack[$I18]
  rx1169_cut2494:
    assign rx1169_cstack, $I18
  rx1169_jump2493:
    jump $I19
  rx1169_done2490:
    rx1169_cur."!cursor_fail"()
    .return (rx1169_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_135_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1175
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1187_start
    .local string rx1187_tgt
    .local int rx1187_pos
    .local int rx1187_off
    .local int rx1187_eos
    .local int rx1187_rep
    .local pmc rx1187_cur
    .local pmc rx1187_curclass
    .local pmc rx1187_bstack
    .local pmc rx1187_cstack
    rx1187_start = self."!cursor_start_all"()
    set rx1187_cur, rx1187_start[0]
    set rx1187_tgt, rx1187_start[1]
    set rx1187_pos, rx1187_start[2]
    set rx1187_curclass, rx1187_start[3]
    set rx1187_bstack, rx1187_start[4]
    set $I19, rx1187_start[5]
    store_lex unicode:"$\x{a2}", rx1187_cur
    length rx1187_eos, rx1187_tgt
    eq $I19, 1, rx1187_restart2531
    gt rx1187_pos, rx1187_eos, rx1187_fail2532
    repr_get_attr_int $I11, self, rx1187_curclass, "$!from"
    ne $I11, -1, rxscan1188_done2538
    goto rxscan1188_scan2537
  rxscan1188_loop2536:
    inc rx1187_pos
    gt rx1187_pos, rx1187_eos, rx1187_fail2532
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!from", rx1187_pos
  rxscan1188_scan2537:
    nqp_rxmark rx1187_bstack, rxscan1188_loop2536, rx1187_pos, 0
  rxscan1188_done2538:
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2532
    nqp_rxmark rx1187_bstack, rxsubrule1189_pass2539, -1, 0
  rxsubrule1189_pass2539:
    rx1187_cstack = rx1187_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    nqp_rxmark rx1187_bstack, rxquantr1190_done2541, rx1187_pos, 0
  rxquantr1190_loop2540:
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2532
    goto rxsubrule1191_pass2542
  rxsubrule1191_back2543:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2532
  rxsubrule1191_pass2542:
    rx1187_cstack = rx1187_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1191_back2543
    push rx1187_bstack, $I11
    push rx1187_bstack, 0
    push rx1187_bstack, rx1187_pos
    elements $I11, rx1187_cstack
    push rx1187_bstack, $I11
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    nqp_rxpeek $I19, rx1187_bstack, rxquantr1190_done2541
    inc $I19
    inc $I19
    set rx1187_rep, rx1187_bstack[$I19]
    nqp_rxcommit rx1187_bstack, rxquantr1190_done2541
    inc rx1187_rep
  rxquantr1190_done2541:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1192_02545
    nqp_push_label $P11, alt1192_12547
    nqp_rxmark rx1187_bstack, alt1192_end2544, -1, 0
    rx1187_cur."!alt"(rx1187_pos, "alt_nfa__30_1381281831.70772", $P11)
    goto rx1187_fail2532
  alt1192_02545:
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1187_curclass, "$!pos"
    lt $I11, 0, rx1187_fail2532
    nqp_rxmark rx1187_bstack, rxsubrule1193_pass2546, -1, 0
  rxsubrule1193_pass2546:
    rx1187_cstack = rx1187_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1187_pos, $P11, rx1187_curclass, "$!pos"
    goto alt1192_end2544
  alt1192_12547:
    nqp_rxmark rx1187_bstack, rxcap1194_fail2549, rx1187_pos, 0
    ge rx1187_pos, rx1187_eos, rx1187_fail2532
    substr $S11, rx1187_tgt, rx1187_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1187_fail2532
    inc rx1187_pos
    nqp_rxpeek $I19, rx1187_bstack, rxcap1194_fail2549
    inc $I19
    set $I11, rx1187_bstack[$I19]
    repr_bind_attr_int rx1187_cur, rx1187_curclass, "$!pos", rx1187_pos
    $P11 = rx1187_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1187_pos)
    rx1187_cstack = rx1187_cur."!cursor_capture"($P11, "name")
    goto rxcap1194_done2548
  rxcap1194_fail2549:
    goto rx1187_fail2532
  rxcap1194_done2548:
    goto alt1192_end2544
  alt1192_end2544:
    nqp_rxcommit rx1187_bstack, alt1192_end2544
    rx1187_cur."!cursor_pass"(rx1187_pos, "param_var", 'backtrack'=>1)
    .return (rx1187_cur)
  rx1187_restart2531:
    repr_get_attr_obj rx1187_cstack, rx1187_cur, rx1187_curclass, "$!cstack"
  rx1187_fail2532:
    unless rx1187_bstack, rx1187_done2530
    pop $I19, rx1187_bstack
    if_null rx1187_cstack, rx1187_cstack_done2535
    unless rx1187_cstack, rx1187_cstack_done2535
    dec $I19
    set $P11, rx1187_cstack[$I19]
  rx1187_cstack_done2535:
    pop rx1187_rep, rx1187_bstack
    pop rx1187_pos, rx1187_bstack
    pop $I19, rx1187_bstack
    lt rx1187_pos, -1, rx1187_done2530
    lt rx1187_pos, 0, rx1187_fail2532
    eq $I19, 0, rx1187_fail2532
    nqp_islist $I20, rx1187_cstack
    unless $I20, rx1187_jump2533
    elements $I18, rx1187_bstack
    le $I18, 0, rx1187_cut2534
    dec $I18
    set $I18, rx1187_bstack[$I18]
  rx1187_cut2534:
    assign rx1187_cstack, $I18
  rx1187_jump2533:
    jump $I19
  rx1187_done2530:
    rx1187_cur."!cursor_fail"()
    .return (rx1187_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_136_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1180
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1195_start
    .local string rx1195_tgt
    .local int rx1195_pos
    .local int rx1195_off
    .local int rx1195_eos
    .local int rx1195_rep
    .local pmc rx1195_cur
    .local pmc rx1195_curclass
    .local pmc rx1195_bstack
    .local pmc rx1195_cstack
    rx1195_start = self."!cursor_start_all"()
    set rx1195_cur, rx1195_start[0]
    set rx1195_tgt, rx1195_start[1]
    set rx1195_pos, rx1195_start[2]
    set rx1195_curclass, rx1195_start[3]
    set rx1195_bstack, rx1195_start[4]
    set $I19, rx1195_start[5]
    store_lex unicode:"$\x{a2}", rx1195_cur
    length rx1195_eos, rx1195_tgt
    eq $I19, 1, rx1195_restart2552
    gt rx1195_pos, rx1195_eos, rx1195_fail2553
    repr_get_attr_int $I11, self, rx1195_curclass, "$!from"
    ne $I11, -1, rxscan1196_done2559
    goto rxscan1196_scan2558
  rxscan1196_loop2557:
    inc rx1195_pos
    gt rx1195_pos, rx1195_eos, rx1195_fail2553
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!from", rx1195_pos
  rxscan1196_scan2558:
    nqp_rxmark rx1195_bstack, rxscan1196_loop2557, rx1195_pos, 0
  rxscan1196_done2559:
    add $I11, rx1195_pos, 1
    gt $I11, rx1195_eos, rx1195_fail2553
    substr $S10, rx1195_tgt, rx1195_pos, 1
    ne $S10, ucs4:":", rx1195_fail2553
    add rx1195_pos, 1
    repr_bind_attr_int rx1195_cur, rx1195_curclass, "$!pos", rx1195_pos
    $P11 = rx1195_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1195_curclass, "$!pos"
    lt $I11, 0, rx1195_fail2553
    nqp_rxmark rx1195_bstack, rxsubrule1197_pass2560, -1, 0
  rxsubrule1197_pass2560:
    rx1195_cstack = rx1195_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1195_pos, $P11, rx1195_curclass, "$!pos"
    rx1195_cur."!cursor_pass"(rx1195_pos, "named_param", 'backtrack'=>1)
    .return (rx1195_cur)
  rx1195_restart2552:
    repr_get_attr_obj rx1195_cstack, rx1195_cur, rx1195_curclass, "$!cstack"
  rx1195_fail2553:
    unless rx1195_bstack, rx1195_done2551
    pop $I19, rx1195_bstack
    if_null rx1195_cstack, rx1195_cstack_done2556
    unless rx1195_cstack, rx1195_cstack_done2556
    dec $I19
    set $P11, rx1195_cstack[$I19]
  rx1195_cstack_done2556:
    pop rx1195_rep, rx1195_bstack
    pop rx1195_pos, rx1195_bstack
    pop $I19, rx1195_bstack
    lt rx1195_pos, -1, rx1195_done2551
    lt rx1195_pos, 0, rx1195_fail2553
    eq $I19, 0, rx1195_fail2553
    nqp_islist $I20, rx1195_cstack
    unless $I20, rx1195_jump2554
    elements $I18, rx1195_bstack
    le $I18, 0, rx1195_cut2555
    dec $I18
    set $I18, rx1195_bstack[$I18]
  rx1195_cut2555:
    assign rx1195_cstack, $I18
  rx1195_jump2554:
    jump $I19
  rx1195_done2551:
    rx1195_cur."!cursor_fail"()
    .return (rx1195_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_137_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1184
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1198_start
    .local string rx1198_tgt
    .local int rx1198_pos
    .local int rx1198_off
    .local int rx1198_eos
    .local int rx1198_rep
    .local pmc rx1198_cur
    .local pmc rx1198_curclass
    .local pmc rx1198_bstack
    .local pmc rx1198_cstack
    rx1198_start = self."!cursor_start_all"()
    set rx1198_cur, rx1198_start[0]
    set rx1198_tgt, rx1198_start[1]
    set rx1198_pos, rx1198_start[2]
    set rx1198_curclass, rx1198_start[3]
    set rx1198_bstack, rx1198_start[4]
    set $I19, rx1198_start[5]
    store_lex unicode:"$\x{a2}", rx1198_cur
    length rx1198_eos, rx1198_tgt
    eq $I19, 1, rx1198_restart2563
    gt rx1198_pos, rx1198_eos, rx1198_fail2564
    repr_get_attr_int $I11, self, rx1198_curclass, "$!from"
    ne $I11, -1, rxscan1199_done2570
    goto rxscan1199_scan2569
  rxscan1199_loop2568:
    inc rx1198_pos
    gt rx1198_pos, rx1198_eos, rx1198_fail2564
    repr_bind_attr_int rx1198_cur, rx1198_curclass, "$!from", rx1198_pos
  rxscan1199_scan2569:
    nqp_rxmark rx1198_bstack, rxscan1199_loop2568, rx1198_pos, 0
  rxscan1199_done2570:
    repr_bind_attr_int rx1198_cur, rx1198_curclass, "$!pos", rx1198_pos
    $P11 = rx1198_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1198_curclass, "$!pos"
    lt $I11, 0, rx1198_fail2564
    repr_get_attr_int rx1198_pos, $P11, rx1198_curclass, "$!pos"
    add $I11, rx1198_pos, 1
    gt $I11, rx1198_eos, rx1198_fail2564
    substr $S10, rx1198_tgt, rx1198_pos, 1
    ne $S10, ucs4:"=", rx1198_fail2564
    add rx1198_pos, 1
    repr_bind_attr_int rx1198_cur, rx1198_curclass, "$!pos", rx1198_pos
    $P11 = rx1198_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1198_curclass, "$!pos"
    lt $I11, 0, rx1198_fail2564
    repr_get_attr_int rx1198_pos, $P11, rx1198_curclass, "$!pos"
    repr_bind_attr_int rx1198_cur, rx1198_curclass, "$!pos", rx1198_pos
    $P11 = rx1198_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1198_curclass, "$!pos"
    lt $I11, 0, rx1198_fail2564
    nqp_rxmark rx1198_bstack, rxsubrule1202_pass2573, -1, 0
  rxsubrule1202_pass2573:
    rx1198_cstack = rx1198_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1198_pos, $P11, rx1198_curclass, "$!pos"
    repr_bind_attr_int rx1198_cur, rx1198_curclass, "$!pos", rx1198_pos
    $P11 = rx1198_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1198_curclass, "$!pos"
    lt $I11, 0, rx1198_fail2564
    repr_get_attr_int rx1198_pos, $P11, rx1198_curclass, "$!pos"
    rx1198_cur."!cursor_pass"(rx1198_pos, "default_value", 'backtrack'=>1)
    .return (rx1198_cur)
  rx1198_restart2563:
    repr_get_attr_obj rx1198_cstack, rx1198_cur, rx1198_curclass, "$!cstack"
  rx1198_fail2564:
    unless rx1198_bstack, rx1198_done2562
    pop $I19, rx1198_bstack
    if_null rx1198_cstack, rx1198_cstack_done2567
    unless rx1198_cstack, rx1198_cstack_done2567
    dec $I19
    set $P11, rx1198_cstack[$I19]
  rx1198_cstack_done2567:
    pop rx1198_rep, rx1198_bstack
    pop rx1198_pos, rx1198_bstack
    pop $I19, rx1198_bstack
    lt rx1198_pos, -1, rx1198_done2562
    lt rx1198_pos, 0, rx1198_fail2564
    eq $I19, 0, rx1198_fail2564
    nqp_islist $I20, rx1198_cstack
    unless $I20, rx1198_jump2565
    elements $I18, rx1198_bstack
    le $I18, 0, rx1198_cut2566
    dec $I18
    set $I18, rx1198_bstack[$I18]
  rx1198_cut2566:
    assign rx1198_cstack, $I18
  rx1198_jump2565:
    jump $I19
  rx1198_done2562:
    rx1198_cur."!cursor_fail"()
    .return (rx1198_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_138_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1186
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1204_start
    .local string rx1204_tgt
    .local int rx1204_pos
    .local int rx1204_off
    .local int rx1204_eos
    .local int rx1204_rep
    .local pmc rx1204_cur
    .local pmc rx1204_curclass
    .local pmc rx1204_bstack
    .local pmc rx1204_cstack
    rx1204_start = self."!cursor_start_all"()
    set rx1204_cur, rx1204_start[0]
    set rx1204_tgt, rx1204_start[1]
    set rx1204_pos, rx1204_start[2]
    set rx1204_curclass, rx1204_start[3]
    set rx1204_bstack, rx1204_start[4]
    set $I19, rx1204_start[5]
    store_lex unicode:"$\x{a2}", rx1204_cur
    length rx1204_eos, rx1204_tgt
    eq $I19, 1, rx1204_restart2577
    gt rx1204_pos, rx1204_eos, rx1204_fail2578
    repr_get_attr_int $I11, self, rx1204_curclass, "$!from"
    ne $I11, -1, rxscan1205_done2584
    goto rxscan1205_scan2583
  rxscan1205_loop2582:
    inc rx1204_pos
    gt rx1204_pos, rx1204_eos, rx1204_fail2578
    repr_bind_attr_int rx1204_cur, rx1204_curclass, "$!from", rx1204_pos
  rxscan1205_scan2583:
    nqp_rxmark rx1204_bstack, rxscan1205_loop2582, rx1204_pos, 0
  rxscan1205_done2584:
    repr_bind_attr_int rx1204_cur, rx1204_curclass, "$!pos", rx1204_pos
    $P11 = rx1204_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1204_curclass, "$!pos"
    lt $I11, 0, rx1204_fail2578
    repr_get_attr_int rx1204_pos, $P11, rx1204_curclass, "$!pos"
    repr_bind_attr_int rx1204_cur, rx1204_curclass, "$!pos", rx1204_pos
    $P11 = rx1204_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1204_curclass, "$!pos"
    lt $I11, 0, rx1204_fail2578
    nqp_rxmark rx1204_bstack, rxsubrule1207_pass2586, -1, 0
  rxsubrule1207_pass2586:
    rx1204_cstack = rx1204_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1204_pos, $P11, rx1204_curclass, "$!pos"
    repr_bind_attr_int rx1204_cur, rx1204_curclass, "$!pos", rx1204_pos
    $P11 = rx1204_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1204_curclass, "$!pos"
    lt $I11, 0, rx1204_fail2578
    repr_get_attr_int rx1204_pos, $P11, rx1204_curclass, "$!pos"
    rx1204_cur."!cursor_pass"(rx1204_pos, "trait", 'backtrack'=>1)
    .return (rx1204_cur)
  rx1204_restart2577:
    repr_get_attr_obj rx1204_cstack, rx1204_cur, rx1204_curclass, "$!cstack"
  rx1204_fail2578:
    unless rx1204_bstack, rx1204_done2576
    pop $I19, rx1204_bstack
    if_null rx1204_cstack, rx1204_cstack_done2581
    unless rx1204_cstack, rx1204_cstack_done2581
    dec $I19
    set $P11, rx1204_cstack[$I19]
  rx1204_cstack_done2581:
    pop rx1204_rep, rx1204_bstack
    pop rx1204_pos, rx1204_bstack
    pop $I19, rx1204_bstack
    lt rx1204_pos, -1, rx1204_done2576
    lt rx1204_pos, 0, rx1204_fail2578
    eq $I19, 0, rx1204_fail2578
    nqp_islist $I20, rx1204_cstack
    unless $I20, rx1204_jump2579
    elements $I18, rx1204_bstack
    le $I18, 0, rx1204_cut2580
    dec $I18
    set $I18, rx1204_bstack[$I18]
  rx1204_cut2580:
    assign rx1204_cstack, $I18
  rx1204_jump2579:
    jump $I19
  rx1204_done2576:
    rx1204_cur."!cursor_fail"()
    .return (rx1204_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_139_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1188
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_140_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1189
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1209_start
    .local string rx1209_tgt
    .local int rx1209_pos
    .local int rx1209_off
    .local int rx1209_eos
    .local int rx1209_rep
    .local pmc rx1209_cur
    .local pmc rx1209_curclass
    .local pmc rx1209_bstack
    .local pmc rx1209_cstack
    rx1209_start = self."!cursor_start_all"()
    set rx1209_cur, rx1209_start[0]
    set rx1209_tgt, rx1209_start[1]
    set rx1209_pos, rx1209_start[2]
    set rx1209_curclass, rx1209_start[3]
    set rx1209_bstack, rx1209_start[4]
    set $I19, rx1209_start[5]
    store_lex unicode:"$\x{a2}", rx1209_cur
    length rx1209_eos, rx1209_tgt
    eq $I19, 1, rx1209_restart2590
    gt rx1209_pos, rx1209_eos, rx1209_fail2591
    repr_get_attr_int $I11, self, rx1209_curclass, "$!from"
    ne $I11, -1, rxscan1210_done2597
    goto rxscan1210_scan2596
  rxscan1210_loop2595:
    inc rx1209_pos
    gt rx1209_pos, rx1209_eos, rx1209_fail2591
    repr_bind_attr_int rx1209_cur, rx1209_curclass, "$!from", rx1209_pos
  rxscan1210_scan2596:
    nqp_rxmark rx1209_bstack, rxscan1210_loop2595, rx1209_pos, 0
  rxscan1210_done2597:
    nqp_rxmark rx1209_bstack, rxcap1211_fail2599, rx1209_pos, 0
    add $I11, rx1209_pos, 2
    gt $I11, rx1209_eos, rx1209_fail2591
    substr $S10, rx1209_tgt, rx1209_pos, 2
    ne $S10, ucs4:"is", rx1209_fail2591
    add rx1209_pos, 2
    nqp_rxpeek $I19, rx1209_bstack, rxcap1211_fail2599
    inc $I19
    set $I11, rx1209_bstack[$I19]
    repr_bind_attr_int rx1209_cur, rx1209_curclass, "$!pos", rx1209_pos
    $P11 = rx1209_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1209_pos)
    rx1209_cstack = rx1209_cur."!cursor_capture"($P11, "sym")
    goto rxcap1211_done2598
  rxcap1211_fail2599:
    goto rx1209_fail2591
  rxcap1211_done2598:
    repr_bind_attr_int rx1209_cur, rx1209_curclass, "$!pos", rx1209_pos
    $P11 = rx1209_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1209_curclass, "$!pos"
    lt $I11, 0, rx1209_fail2591
    repr_get_attr_int rx1209_pos, $P11, rx1209_curclass, "$!pos"
    repr_bind_attr_int rx1209_cur, rx1209_curclass, "$!pos", rx1209_pos
    $P11 = rx1209_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1209_curclass, "$!pos"
    lt $I11, 0, rx1209_fail2591
    nqp_rxmark rx1209_bstack, rxsubrule1213_pass2601, -1, 0
  rxsubrule1213_pass2601:
    rx1209_cstack = rx1209_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1209_pos, $P11, rx1209_curclass, "$!pos"
    nqp_rxmark rx1209_bstack, rxquantr1214_done2603, rx1209_pos, 0
  rxquantr1214_loop2602:
    repr_bind_attr_int rx1209_cur, rx1209_curclass, "$!pos", rx1209_pos
    $P11 = rx1209_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1209_curclass, "$!pos"
    lt $I11, 0, rx1209_fail2591
    goto rxsubrule1215_pass2604
  rxsubrule1215_back2605:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1209_curclass, "$!pos"
    lt $I11, 0, rx1209_fail2591
  rxsubrule1215_pass2604:
    rx1209_cstack = rx1209_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1215_back2605
    push rx1209_bstack, $I11
    push rx1209_bstack, 0
    push rx1209_bstack, rx1209_pos
    elements $I11, rx1209_cstack
    push rx1209_bstack, $I11
    repr_get_attr_int rx1209_pos, $P11, rx1209_curclass, "$!pos"
    nqp_rxpeek $I19, rx1209_bstack, rxquantr1214_done2603
    inc $I19
    inc $I19
    set rx1209_rep, rx1209_bstack[$I19]
    nqp_rxcommit rx1209_bstack, rxquantr1214_done2603
    inc rx1209_rep
  rxquantr1214_done2603:
    repr_bind_attr_int rx1209_cur, rx1209_curclass, "$!pos", rx1209_pos
    $P11 = rx1209_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1209_curclass, "$!pos"
    lt $I11, 0, rx1209_fail2591
    repr_get_attr_int rx1209_pos, $P11, rx1209_curclass, "$!pos"
    rx1209_cur."!cursor_pass"(rx1209_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1209_cur)
  rx1209_restart2590:
    repr_get_attr_obj rx1209_cstack, rx1209_cur, rx1209_curclass, "$!cstack"
  rx1209_fail2591:
    unless rx1209_bstack, rx1209_done2589
    pop $I19, rx1209_bstack
    if_null rx1209_cstack, rx1209_cstack_done2594
    unless rx1209_cstack, rx1209_cstack_done2594
    dec $I19
    set $P11, rx1209_cstack[$I19]
  rx1209_cstack_done2594:
    pop rx1209_rep, rx1209_bstack
    pop rx1209_pos, rx1209_bstack
    pop $I19, rx1209_bstack
    lt rx1209_pos, -1, rx1209_done2589
    lt rx1209_pos, 0, rx1209_fail2591
    eq $I19, 0, rx1209_fail2591
    nqp_islist $I20, rx1209_cstack
    unless $I20, rx1209_jump2592
    elements $I18, rx1209_bstack
    le $I18, 0, rx1209_cut2593
    dec $I18
    set $I18, rx1209_bstack[$I18]
  rx1209_cut2593:
    assign rx1209_cstack, $I18
  rx1209_jump2592:
    jump $I19
  rx1209_done2589:
    rx1209_cur."!cursor_fail"()
    .return (rx1209_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_141_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1191
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_415_1381281828.51527' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_167 
    .local pmc pkg_viv_tmp_26 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1217_start
    .local string rx1217_tgt
    .local int rx1217_pos
    .local int rx1217_off
    .local int rx1217_eos
    .local int rx1217_rep
    .local pmc rx1217_cur
    .local pmc rx1217_curclass
    .local pmc rx1217_bstack
    .local pmc rx1217_cstack
    rx1217_start = self."!cursor_start_all"()
    set rx1217_cur, rx1217_start[0]
    set rx1217_tgt, rx1217_start[1]
    set rx1217_pos, rx1217_start[2]
    set rx1217_curclass, rx1217_start[3]
    set rx1217_bstack, rx1217_start[4]
    set $I19, rx1217_start[5]
    store_lex unicode:"$\x{a2}", rx1217_cur
    length rx1217_eos, rx1217_tgt
    eq $I19, 1, rx1217_restart2609
    gt rx1217_pos, rx1217_eos, rx1217_fail2610
    repr_get_attr_int $I11, self, rx1217_curclass, "$!from"
    ne $I11, -1, rxscan1218_done2616
    goto rxscan1218_scan2615
  rxscan1218_loop2614:
    inc rx1217_pos
    gt rx1217_pos, rx1217_eos, rx1217_fail2610
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!from", rx1217_pos
  rxscan1218_scan2615:
    nqp_rxmark rx1217_bstack, rxscan1218_loop2614, rx1217_pos, 0
  rxscan1218_done2616:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1219_02618
    nqp_push_label $P11, alt1219_12658
    nqp_rxmark rx1217_bstack, alt1219_end2617, -1, 0
    rx1217_cur."!alt"(rx1217_pos, "alt_nfa__33_1381281831.94515", $P11)
    goto rx1217_fail2610
  alt1219_02618:
    nqp_rxmark rx1217_bstack, rxcap1220_fail2620, rx1217_pos, 0
    add $I11, rx1217_pos, 5
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 5
    ne $S10, ucs4:"proto", rx1217_fail2610
    add rx1217_pos, 5
    nqp_rxpeek $I19, rx1217_bstack, rxcap1220_fail2620
    inc $I19
    set $I11, rx1217_bstack[$I19]
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1217_pos)
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "proto")
    goto rxcap1220_done2619
  rxcap1220_fail2620:
    goto rx1217_fail2610
  rxcap1220_done2619:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1222_02623
    nqp_push_label $P11, alt1222_12624
    nqp_push_label $P11, alt1222_22625
    nqp_rxmark rx1217_bstack, alt1222_end2622, -1, 0
    rx1217_cur."!alt"(rx1217_pos, "alt_nfa__31_1381281831.9436", $P11)
    goto rx1217_fail2610
  alt1222_02623:
    add $I11, rx1217_pos, 5
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 5
    ne $S10, ucs4:"regex", rx1217_fail2610
    add rx1217_pos, 5
    goto alt1222_end2622
  alt1222_12624:
    add $I11, rx1217_pos, 5
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 5
    ne $S10, ucs4:"token", rx1217_fail2610
    add rx1217_pos, 5
    goto alt1222_end2622
  alt1222_22625:
    add $I11, rx1217_pos, 4
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 4
    ne $S10, ucs4:"rule", rx1217_fail2610
    add rx1217_pos, 4
    goto alt1222_end2622
  alt1222_end2622:
    nqp_rxcommit rx1217_bstack, alt1222_end2622
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
  alt1224_02628:
    nqp_rxmark rx1217_bstack, alt1224_12634, rx1217_pos, 0
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 3
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 3
    ne $S10, ucs4:"::(", rx1217_fail2610
    add rx1217_pos, 3
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    nqp_rxmark rx1217_bstack, rxsubrule1227_pass2631, -1, 0
  rxsubrule1227_pass2631:
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:")", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1224_end2627
  alt1224_12634:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    nqp_rxmark rx1217_bstack, rxsubrule1231_pass2636, -1, 0
  rxsubrule1231_pass2636:
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
  alt1224_end2627:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
  alt1234_02640:
    nqp_rxmark rx1217_bstack, alt1234_12643, rx1217_pos, 0
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 3
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 3
    ne $S10, ucs4:"{*}", rx1217_fail2610
    add rx1217_pos, 3
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1234_end2639
  alt1234_12643:
    nqp_rxmark rx1217_bstack, alt1234_22648, rx1217_pos, 0
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"{", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 5
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 5
    ne $S10, ucs4:"<...>", rx1217_fail2610
    add rx1217_pos, 5
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"}", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1234_end2639
  alt1234_22648:
    nqp_rxmark rx1217_bstack, alt1234_32653, rx1217_pos, 0
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"{", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 3
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 3
    ne $S10, ucs4:"<*>", rx1217_fail2610
    add rx1217_pos, 3
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"}", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1234_end2639
  alt1234_32653:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
  alt1234_end2639:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1219_end2617
  alt1219_12658:
    nqp_rxmark rx1217_bstack, rxcap1249_fail2660, rx1217_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1250_02662
    nqp_push_label $P11, alt1250_12663
    nqp_push_label $P11, alt1250_22664
    nqp_rxmark rx1217_bstack, alt1250_end2661, -1, 0
    rx1217_cur."!alt"(rx1217_pos, "alt_nfa__32_1381281831.94449", $P11)
    goto rx1217_fail2610
  alt1250_02662:
    add $I11, rx1217_pos, 5
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 5
    ne $S10, ucs4:"regex", rx1217_fail2610
    add rx1217_pos, 5
    goto alt1250_end2661
  alt1250_12663:
    add $I11, rx1217_pos, 5
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 5
    ne $S10, ucs4:"token", rx1217_fail2610
    add rx1217_pos, 5
    goto alt1250_end2661
  alt1250_22664:
    add $I11, rx1217_pos, 4
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 4
    ne $S10, ucs4:"rule", rx1217_fail2610
    add rx1217_pos, 4
    goto alt1250_end2661
  alt1250_end2661:
    nqp_rxcommit rx1217_bstack, alt1250_end2661
    nqp_rxpeek $I19, rx1217_bstack, rxcap1249_fail2660
    inc $I19
    set $I11, rx1217_bstack[$I19]
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1217_pos)
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "sym")
    goto rxcap1249_done2659
  rxcap1249_fail2660:
    goto rx1217_fail2610
  rxcap1249_done2659:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
  alt1252_02667:
    nqp_rxmark rx1217_bstack, alt1252_12673, rx1217_pos, 0
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 3
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 3
    ne $S10, ucs4:"::(", rx1217_fail2610
    add rx1217_pos, 3
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    nqp_rxmark rx1217_bstack, rxsubrule1255_pass2670, -1, 0
  rxsubrule1255_pass2670:
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:")", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1252_end2666
  alt1252_12673:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    nqp_rxmark rx1217_bstack, rxsubrule1259_pass2675, -1, 0
  rxsubrule1259_pass2675:
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
  alt1252_end2666:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    nqp_rxmark rx1217_bstack, rxquantr1264_done2681, rx1217_pos, 0
  rxquantr1264_loop2680:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"(", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    nqp_rxmark rx1217_bstack, rxsubrule1267_pass2684, -1, 0
  rxsubrule1267_pass2684:
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:")", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    nqp_rxpeek $I19, rx1217_bstack, rxquantr1264_done2681
    inc $I19
    inc $I19
    set rx1217_rep, rx1217_bstack[$I19]
    nqp_rxcommit rx1217_bstack, rxquantr1264_done2681
    inc rx1217_rep
  rxquantr1264_done2681:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    store_lex unicode:"$\x{a2}", rx1217_cur
    unless_null $P101, fallback2688
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_26, $P5002
    set fb_tmp_167, pkg_viv_tmp_26
    repr_defined $I5001, fb_tmp_167
    unless $I5001 goto if1271_else2689 
    set $P5004, fb_tmp_167["%RX"]
    set $P5006, $P5004
    goto if1271_end2690
  if1271_else2689:
    null $P5005
    set $P5006, $P5005
  if1271_end2690:
    unless_null $P5006, vivi_12722691
    new $P5007, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5007
    set $P5006, $P5007
  vivi_12722691:
    unless_null $P5006, vivi_12732692
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12732692:
    set $P101, $P5006
  fallback2688:
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    store_lex unicode:"$\x{a2}", rx1217_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_415_1381281828.51527' 
    capture_lex $P5010
    $P5011 = $P5010()
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"{", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    nqp_rxmark rx1217_bstack, rxsubrule1313_pass2761, -1, 0
  rxsubrule1313_pass2761:
    rx1217_cstack = rx1217_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    add $I11, rx1217_pos, 1
    gt $I11, rx1217_eos, rx1217_fail2610
    substr $S10, rx1217_tgt, rx1217_pos, 1
    ne $S10, ucs4:"}", rx1217_fail2610
    add rx1217_pos, 1
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_bind_attr_int rx1217_cur, rx1217_curclass, "$!pos", rx1217_pos
    $P11 = rx1217_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1217_curclass, "$!pos"
    lt $I11, 0, rx1217_fail2610
    repr_get_attr_int rx1217_pos, $P11, rx1217_curclass, "$!pos"
    goto alt1219_end2617
  alt1219_end2617:
    nqp_rxcommit rx1217_bstack, alt1219_end2617
    rx1217_cur."!cursor_pass"(rx1217_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1217_cur)
  rx1217_restart2609:
    repr_get_attr_obj rx1217_cstack, rx1217_cur, rx1217_curclass, "$!cstack"
  rx1217_fail2610:
    unless rx1217_bstack, rx1217_done2608
    pop $I19, rx1217_bstack
    if_null rx1217_cstack, rx1217_cstack_done2613
    unless rx1217_cstack, rx1217_cstack_done2613
    dec $I19
    set $P11, rx1217_cstack[$I19]
  rx1217_cstack_done2613:
    pop rx1217_rep, rx1217_bstack
    pop rx1217_pos, rx1217_bstack
    pop $I19, rx1217_bstack
    lt rx1217_pos, -1, rx1217_done2608
    lt rx1217_pos, 0, rx1217_fail2610
    eq $I19, 0, rx1217_fail2610
    nqp_islist $I20, rx1217_cstack
    unless $I20, rx1217_jump2611
    elements $I18, rx1217_bstack
    le $I18, 0, rx1217_cut2612
    dec $I18
    set $I18, rx1217_bstack[$I18]
  rx1217_cut2612:
    assign rx1217_cstack, $I18
  rx1217_jump2611:
    jump $I19
  rx1217_done2608:
    rx1217_cur."!cursor_fail"()
    .return (rx1217_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1381281828.51527") :anon :lex :outer("cuid_141_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1212
    .local pmc fb_tmp_168 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_169 
    .local pmc fb_tmp_170 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    .local pmc fb_tmp_173 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_177 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_178 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_31 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2694
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_27, $P5002
    set fb_tmp_168, pkg_viv_tmp_27
    repr_defined $I5001, fb_tmp_168
    unless $I5001 goto if1275_else2695 
    set $P5004, fb_tmp_168["%RX"]
    set $P5006, $P5004
    goto if1275_end2696
  if1275_else2695:
    null $P5005
    set $P5006, $P5005
  if1275_end2696:
    unless_null $P5006, vivi_12762697
    new $P5007, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5007
    set $P5006, $P5007
  vivi_12762697:
    unless_null $P5006, vivi_12772698
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12772698:
    set $P5001, $P5006
  fallback2694:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2701
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  fallback2701:
    set fb_tmp_169, $P5009
    repr_defined $I5003, fb_tmp_169
    unless $I5003 goto if1278_else2699 
    set $P5011, fb_tmp_169["sym"]
    set $P5013, $P5011
    goto if1278_end2700
  if1278_else2699:
    null $P5012
    set $P5013, $P5012
  if1278_end2700:
    unless_null $P5013, vivi_12792702
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_12792702:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2703
    nqp_get_sc_object $P5018, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_28, $P5017
    set fb_tmp_170, pkg_viv_tmp_28
    repr_defined $I5004, fb_tmp_170
    unless $I5004 goto if1280_else2704 
    set $P5019, fb_tmp_170["%RX"]
    set $P5021, $P5019
    goto if1280_end2705
  if1280_else2704:
    null $P5020
    set $P5021, $P5020
  if1280_end2705:
    unless_null $P5021, vivi_12812706
    new $P5022, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5022
    set $P5021, $P5022
  vivi_12812706:
    unless_null $P5021, vivi_12822707
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12822707:
    set $P5016, $P5021
  fallback2703:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2712
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  fallback2712:
    set fb_tmp_171, $P5024
    repr_defined $I5006, fb_tmp_171
    unless $I5006 goto if1284_else2710 
    set $P5026, fb_tmp_171["sym"]
    set $P5028, $P5026
    goto if1284_end2711
  if1284_else2710:
    null $P5027
    set $P5028, $P5027
  if1284_end2711:
    unless_null $P5028, vivi_12852713
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_12852713:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1283_end2709 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2716
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5030, $P5031
  fallback2716:
    set fb_tmp_172, $P5030
    repr_defined $I5008, fb_tmp_172
    unless $I5008 goto if1286_else2714 
    set $P5032, fb_tmp_172["sym"]
    set $P5034, $P5032
    goto if1286_end2715
  if1286_else2714:
    null $P5033
    set $P5034, $P5033
  if1286_end2715:
    unless_null $P5034, vivi_12872717
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  vivi_12872717:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1283_end2709:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2718
    nqp_get_sc_object $P5039, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_29, $P5038
    set fb_tmp_173, pkg_viv_tmp_29
    repr_defined $I5010, fb_tmp_173
    unless $I5010 goto if1288_else2719 
    set $P5040, fb_tmp_173["%RX"]
    set $P5042, $P5040
    goto if1288_end2720
  if1288_else2719:
    null $P5041
    set $P5042, $P5041
  if1288_end2720:
    unless_null $P5042, vivi_12892721
    new $P5043, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5043
    set $P5042, $P5043
  vivi_12892721:
    unless_null $P5042, vivi_12902722
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12902722:
    set $P5037, $P5042
  fallback2718:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2727
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  fallback2727:
    set fb_tmp_174, $P5045
    repr_defined $I5011, fb_tmp_174
    unless $I5011 goto if1292_else2725 
    set $P5047, fb_tmp_174["deflongname"]
    set $P5049, $P5047
    goto if1292_end2726
  if1292_else2725:
    null $P5048
    set $P5049, $P5048
  if1292_end2726:
    unless_null $P5049, vivi_12932728
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_12932728:
    unless $P5049 goto if1291_else2723 
.annotate 'line', 1215
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2731
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5051, $P5052
  fallback2731:
    set fb_tmp_175, $P5051
    repr_defined $I5012, fb_tmp_175
    unless $I5012 goto if1294_else2729 
    set $P5053, fb_tmp_175["deflongname"]
    set $P5055, $P5053
    goto if1294_end2730
  if1294_else2729:
    null $P5054
    set $P5055, $P5054
  if1294_end2730:
    unless_null $P5055, vivi_12952732
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5055, $P5056
  vivi_12952732:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1291_end2724
  if1291_else2723:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2735
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5058, $P5059
  fallback2735:
    set fb_tmp_176, $P5058
    repr_defined $I5013, fb_tmp_176
    unless $I5013 goto if1296_else2733 
    set $P5060, fb_tmp_176["latename"]
    set $P5062, $P5060
    goto if1296_end2734
  if1296_else2733:
    null $P5061
    set $P5062, $P5061
  if1296_end2734:
    unless_null $P5062, vivi_12972736
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5062, $P5063
  vivi_12972736:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1291_end2724:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2737
    nqp_get_sc_object $P5068, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_30, $P5067
    set fb_tmp_177, pkg_viv_tmp_30
    repr_defined $I5014, fb_tmp_177
    unless $I5014 goto if1298_else2738 
    set $P5069, fb_tmp_177["%RX"]
    set $P5071, $P5069
    goto if1298_end2739
  if1298_else2738:
    null $P5070
    set $P5071, $P5070
  if1298_end2739:
    unless_null $P5071, vivi_12992740
    new $P5072, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5072
    set $P5071, $P5072
  vivi_12992740:
    unless_null $P5071, vivi_13002741
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_13002741:
    set $P5066, $P5071
  fallback2737:
.annotate 'line', 1216
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2742
    nqp_get_sc_object $P5076, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5075, $P5076
    set fb_tmp_178, $P5075
    repr_defined $I5015, fb_tmp_178
    unless $I5015 goto if1301_else2743 
    set $P5077, fb_tmp_178["$W"]
    set $P5079, $P5077
    goto if1301_end2744
  if1301_else2743:
    null $P5078
    set $P5079, $P5078
  if1301_end2744:
    unless_null $P5079, vivi_13022745
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5079, $P5080
  vivi_13022745:
    unless_null $P5079, vivi_13032746
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_13032746:
    set $P5074, $P5079
  fallback2742:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2747
    nqp_get_sc_object $P5084, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5083, $P5084
    set fb_tmp_179, $P5083
    repr_defined $I5016, fb_tmp_179
    unless $I5016 goto if1304_else2748 
    set $P5085, fb_tmp_179["$W"]
    set $P5087, $P5085
    goto if1304_end2749
  if1304_else2748:
    null $P5086
    set $P5087, $P5086
  if1304_end2749:
    unless_null $P5087, vivi_13052750
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5087, $P5088
  vivi_13052750:
    unless_null $P5087, vivi_13062751
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_13062751:
    set $P5082, $P5087
  fallback2747:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2754
    nqp_get_sc_object $P5093, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_31, $P5092
    set fb_tmp_181, pkg_viv_tmp_31
    repr_defined $I5018, fb_tmp_181
    unless $I5018 goto if1308_else2755 
    set $P5094, fb_tmp_181["%RX"]
    set $P5096, $P5094
    goto if1308_end2756
  if1308_else2755:
    null $P5095
    set $P5096, $P5095
  if1308_end2756:
    unless_null $P5096, vivi_13092757
    new $P5097, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5097
    set $P5096, $P5097
  vivi_13092757:
    unless_null $P5096, vivi_13102758
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_13102758:
    set $P5091, $P5096
  fallback2754:
    set fb_tmp_180, $P5091
    repr_defined $I5017, fb_tmp_180
    unless $I5017 goto if1307_else2752 
    set $P5099, fb_tmp_180["name"]
    set $P5101, $P5099
    goto if1307_end2753
  if1307_else2752:
    null $P5100
    set $P5101, $P5100
  if1307_end2753:
    unless_null $P5101, vivi_13112759
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5101, $P5102
  vivi_13112759:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_142_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1222
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1315_start
    .local string rx1315_tgt
    .local int rx1315_pos
    .local int rx1315_off
    .local int rx1315_eos
    .local int rx1315_rep
    .local pmc rx1315_cur
    .local pmc rx1315_curclass
    .local pmc rx1315_bstack
    .local pmc rx1315_cstack
    rx1315_start = self."!cursor_start_all"()
    set rx1315_cur, rx1315_start[0]
    set rx1315_tgt, rx1315_start[1]
    set rx1315_pos, rx1315_start[2]
    set rx1315_curclass, rx1315_start[3]
    set rx1315_bstack, rx1315_start[4]
    set $I19, rx1315_start[5]
    store_lex unicode:"$\x{a2}", rx1315_cur
    length rx1315_eos, rx1315_tgt
    eq $I19, 1, rx1315_restart2765
    gt rx1315_pos, rx1315_eos, rx1315_fail2766
    repr_get_attr_int $I11, self, rx1315_curclass, "$!from"
    ne $I11, -1, rxscan1316_done2772
    goto rxscan1316_scan2771
  rxscan1316_loop2770:
    inc rx1315_pos
    gt rx1315_pos, rx1315_eos, rx1315_fail2766
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!from", rx1315_pos
  rxscan1316_scan2771:
    nqp_rxmark rx1315_bstack, rxscan1316_loop2770, rx1315_pos, 0
  rxscan1316_done2772:
    add $I11, rx1315_pos, 1
    gt $I11, rx1315_eos, rx1315_fail2766
    substr $S10, rx1315_tgt, rx1315_pos, 1
    ne $S10, ucs4:".", rx1315_fail2766
    add rx1315_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1317_02774
    nqp_push_label $P11, alt1317_12776
    nqp_rxmark rx1315_bstack, alt1317_end2773, -1, 0
    rx1315_cur."!alt"(rx1315_pos, "alt_nfa__34_1381281831.97316", $P11)
    goto rx1315_fail2766
  alt1317_02774:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2766
    nqp_rxmark rx1315_bstack, rxsubrule1318_pass2775, -1, 0
  rxsubrule1318_pass2775:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    goto alt1317_end2773
  alt1317_12776:
    ge rx1315_pos, rx1315_eos, rx1315_fail2766
    substr $S11, rx1315_tgt, rx1315_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1315_fail2766
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2766
    nqp_rxmark rx1315_bstack, rxsubrule1319_pass2777, -1, 0
  rxsubrule1319_pass2777:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
  alt1320_02779:
    nqp_rxmark rx1315_bstack, alt1320_12780, rx1315_pos, 0
    ge rx1315_pos, rx1315_eos, rx1315_fail2766
    substr $S11, rx1315_tgt, rx1315_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1315_fail2766
    goto alt1320_end2778
  alt1320_12780:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2766
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
  alt1320_end2778:
    goto alt1317_end2773
  alt1317_end2773:
    nqp_rxcommit rx1315_bstack, alt1317_end2773
    nqp_rxmark rx1315_bstack, rxquantr1322_done2783, rx1315_pos, 0
  rxquantr1322_loop2782:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1323_02785
    nqp_push_label $P11, alt1323_12787
    nqp_rxmark rx1315_bstack, alt1323_end2784, -1, 0
    rx1315_cur."!alt"(rx1315_pos, "alt_nfa__35_1381281831.97352", $P11)
    goto rx1315_fail2766
  alt1323_02785:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."args"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2766
    nqp_rxmark rx1315_bstack, rxsubrule1324_pass2786, -1, 0
  rxsubrule1324_pass2786:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    goto alt1323_end2784
  alt1323_12787:
    add $I11, rx1315_pos, 1
    gt $I11, rx1315_eos, rx1315_fail2766
    substr $S10, rx1315_tgt, rx1315_pos, 1
    ne $S10, ucs4:":", rx1315_fail2766
    add rx1315_pos, 1
    ge rx1315_pos, rx1315_eos, rx1315_fail2766
    is_cclass $I11, .CCLASS_WHITESPACE, rx1315_tgt, rx1315_pos
    unless $I11, rx1315_fail2766
    add rx1315_pos, 1
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2766
    nqp_rxmark rx1315_bstack, rxsubrule1325_pass2788, -1, 0
  rxsubrule1325_pass2788:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    goto alt1323_end2784
  alt1323_end2784:
    nqp_rxpeek $I19, rx1315_bstack, rxquantr1322_done2783
    inc $I19
    inc $I19
    set rx1315_rep, rx1315_bstack[$I19]
    nqp_rxcommit rx1315_bstack, rxquantr1322_done2783
    inc rx1315_rep
  rxquantr1322_done2783:
    rx1315_cur."!cursor_pass"(rx1315_pos, "dotty", 'backtrack'=>1)
    .return (rx1315_cur)
  rx1315_restart2765:
    repr_get_attr_obj rx1315_cstack, rx1315_cur, rx1315_curclass, "$!cstack"
  rx1315_fail2766:
    unless rx1315_bstack, rx1315_done2764
    pop $I19, rx1315_bstack
    if_null rx1315_cstack, rx1315_cstack_done2769
    unless rx1315_cstack, rx1315_cstack_done2769
    dec $I19
    set $P11, rx1315_cstack[$I19]
  rx1315_cstack_done2769:
    pop rx1315_rep, rx1315_bstack
    pop rx1315_pos, rx1315_bstack
    pop $I19, rx1315_bstack
    lt rx1315_pos, -1, rx1315_done2764
    lt rx1315_pos, 0, rx1315_fail2766
    eq $I19, 0, rx1315_fail2766
    nqp_islist $I20, rx1315_cstack
    unless $I20, rx1315_jump2767
    elements $I18, rx1315_bstack
    le $I18, 0, rx1315_cut2768
    dec $I18
    set $I18, rx1315_bstack[$I18]
  rx1315_cut2768:
    assign rx1315_cstack, $I18
  rx1315_jump2767:
    jump $I19
  rx1315_done2764:
    rx1315_cur."!cursor_fail"()
    .return (rx1315_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_143_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1235
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1326_start
    .local string rx1326_tgt
    .local int rx1326_pos
    .local int rx1326_off
    .local int rx1326_eos
    .local int rx1326_rep
    .local pmc rx1326_cur
    .local pmc rx1326_curclass
    .local pmc rx1326_bstack
    .local pmc rx1326_cstack
    rx1326_start = self."!cursor_start_all"()
    set rx1326_cur, rx1326_start[0]
    set rx1326_tgt, rx1326_start[1]
    set rx1326_pos, rx1326_start[2]
    set rx1326_curclass, rx1326_start[3]
    set rx1326_bstack, rx1326_start[4]
    set $I19, rx1326_start[5]
    store_lex unicode:"$\x{a2}", rx1326_cur
    length rx1326_eos, rx1326_tgt
    eq $I19, 1, rx1326_restart2791
    gt rx1326_pos, rx1326_eos, rx1326_fail2792
    repr_get_attr_int $I11, self, rx1326_curclass, "$!from"
    ne $I11, -1, rxscan1327_done2798
    goto rxscan1327_scan2797
  rxscan1327_loop2796:
    inc rx1326_pos
    gt rx1326_pos, rx1326_eos, rx1326_fail2792
    repr_bind_attr_int rx1326_cur, rx1326_curclass, "$!from", rx1326_pos
  rxscan1327_scan2797:
    nqp_rxmark rx1326_bstack, rxscan1327_loop2796, rx1326_pos, 0
  rxscan1327_done2798:
    nqp_rxmark rx1326_bstack, rxcap1328_fail2800, rx1326_pos, 0
    add $I11, rx1326_pos, 4
    gt $I11, rx1326_eos, rx1326_fail2792
    substr $S10, rx1326_tgt, rx1326_pos, 4
    ne $S10, ucs4:"self", rx1326_fail2792
    add rx1326_pos, 4
    nqp_rxpeek $I19, rx1326_bstack, rxcap1328_fail2800
    inc $I19
    set $I11, rx1326_bstack[$I19]
    repr_bind_attr_int rx1326_cur, rx1326_curclass, "$!pos", rx1326_pos
    $P11 = rx1326_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1326_pos)
    rx1326_cstack = rx1326_cur."!cursor_capture"($P11, "sym")
    goto rxcap1328_done2799
  rxcap1328_fail2800:
    goto rx1326_fail2792
  rxcap1328_done2799:
    le rx1326_pos, 0, rx1326_fail2792
    is_cclass $I11, .CCLASS_WORD, rx1326_tgt, rx1326_pos
    if $I11, rx1326_fail2792
    sub $I11, rx1326_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1326_tgt, $I11
    unless $I11, rx1326_fail2792
    rx1326_cur."!cursor_pass"(rx1326_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1326_cur)
  rx1326_restart2791:
    repr_get_attr_obj rx1326_cstack, rx1326_cur, rx1326_curclass, "$!cstack"
  rx1326_fail2792:
    unless rx1326_bstack, rx1326_done2790
    pop $I19, rx1326_bstack
    if_null rx1326_cstack, rx1326_cstack_done2795
    unless rx1326_cstack, rx1326_cstack_done2795
    dec $I19
    set $P11, rx1326_cstack[$I19]
  rx1326_cstack_done2795:
    pop rx1326_rep, rx1326_bstack
    pop rx1326_pos, rx1326_bstack
    pop $I19, rx1326_bstack
    lt rx1326_pos, -1, rx1326_done2790
    lt rx1326_pos, 0, rx1326_fail2792
    eq $I19, 0, rx1326_fail2792
    nqp_islist $I20, rx1326_cstack
    unless $I20, rx1326_jump2793
    elements $I18, rx1326_bstack
    le $I18, 0, rx1326_cut2794
    dec $I18
    set $I18, rx1326_bstack[$I18]
  rx1326_cut2794:
    assign rx1326_cstack, $I18
  rx1326_jump2793:
    jump $I19
  rx1326_done2790:
    rx1326_cur."!cursor_fail"()
    .return (rx1326_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_144_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1237
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1330_start
    .local string rx1330_tgt
    .local int rx1330_pos
    .local int rx1330_off
    .local int rx1330_eos
    .local int rx1330_rep
    .local pmc rx1330_cur
    .local pmc rx1330_curclass
    .local pmc rx1330_bstack
    .local pmc rx1330_cstack
    rx1330_start = self."!cursor_start_all"()
    set rx1330_cur, rx1330_start[0]
    set rx1330_tgt, rx1330_start[1]
    set rx1330_pos, rx1330_start[2]
    set rx1330_curclass, rx1330_start[3]
    set rx1330_bstack, rx1330_start[4]
    set $I19, rx1330_start[5]
    store_lex unicode:"$\x{a2}", rx1330_cur
    length rx1330_eos, rx1330_tgt
    eq $I19, 1, rx1330_restart2804
    gt rx1330_pos, rx1330_eos, rx1330_fail2805
    repr_get_attr_int $I11, self, rx1330_curclass, "$!from"
    ne $I11, -1, rxscan1331_done2811
    goto rxscan1331_scan2810
  rxscan1331_loop2809:
    inc rx1330_pos
    gt rx1330_pos, rx1330_eos, rx1330_fail2805
    repr_bind_attr_int rx1330_cur, rx1330_curclass, "$!from", rx1330_pos
  rxscan1331_scan2810:
    nqp_rxmark rx1330_bstack, rxscan1331_loop2809, rx1330_pos, 0
  rxscan1331_done2811:
    repr_bind_attr_int rx1330_cur, rx1330_curclass, "$!pos", rx1330_pos
    $P11 = rx1330_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1330_curclass, "$!pos"
    lt $I11, 0, rx1330_fail2805
    nqp_rxmark rx1330_bstack, rxsubrule1332_pass2812, -1, 0
  rxsubrule1332_pass2812:
    rx1330_cstack = rx1330_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1330_pos, $P11, rx1330_curclass, "$!pos"
    repr_bind_attr_int rx1330_cur, rx1330_curclass, "$!pos", rx1330_pos
    $P11 = rx1330_cur."args"()
    repr_get_attr_int $I11, $P11, rx1330_curclass, "$!pos"
    lt $I11, 0, rx1330_fail2805
    nqp_rxmark rx1330_bstack, rxsubrule1333_pass2813, -1, 0
  rxsubrule1333_pass2813:
    rx1330_cstack = rx1330_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1330_pos, $P11, rx1330_curclass, "$!pos"
    rx1330_cur."!cursor_pass"(rx1330_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1330_cur)
  rx1330_restart2804:
    repr_get_attr_obj rx1330_cstack, rx1330_cur, rx1330_curclass, "$!cstack"
  rx1330_fail2805:
    unless rx1330_bstack, rx1330_done2803
    pop $I19, rx1330_bstack
    if_null rx1330_cstack, rx1330_cstack_done2808
    unless rx1330_cstack, rx1330_cstack_done2808
    dec $I19
    set $P11, rx1330_cstack[$I19]
  rx1330_cstack_done2808:
    pop rx1330_rep, rx1330_bstack
    pop rx1330_pos, rx1330_bstack
    pop $I19, rx1330_bstack
    lt rx1330_pos, -1, rx1330_done2803
    lt rx1330_pos, 0, rx1330_fail2805
    eq $I19, 0, rx1330_fail2805
    nqp_islist $I20, rx1330_cstack
    unless $I20, rx1330_jump2806
    elements $I18, rx1330_bstack
    le $I18, 0, rx1330_cut2807
    dec $I18
    set $I18, rx1330_bstack[$I18]
  rx1330_cut2807:
    assign rx1330_cstack, $I18
  rx1330_jump2806:
    jump $I19
  rx1330_done2803:
    rx1330_cur."!cursor_fail"()
    .return (rx1330_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_145_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1241
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1334_start
    .local string rx1334_tgt
    .local int rx1334_pos
    .local int rx1334_off
    .local int rx1334_eos
    .local int rx1334_rep
    .local pmc rx1334_cur
    .local pmc rx1334_curclass
    .local pmc rx1334_bstack
    .local pmc rx1334_cstack
    rx1334_start = self."!cursor_start_all"()
    set rx1334_cur, rx1334_start[0]
    set rx1334_tgt, rx1334_start[1]
    set rx1334_pos, rx1334_start[2]
    set rx1334_curclass, rx1334_start[3]
    set rx1334_bstack, rx1334_start[4]
    set $I19, rx1334_start[5]
    store_lex unicode:"$\x{a2}", rx1334_cur
    length rx1334_eos, rx1334_tgt
    eq $I19, 1, rx1334_restart2816
    gt rx1334_pos, rx1334_eos, rx1334_fail2817
    repr_get_attr_int $I11, self, rx1334_curclass, "$!from"
    ne $I11, -1, rxscan1335_done2823
    goto rxscan1335_scan2822
  rxscan1335_loop2821:
    inc rx1334_pos
    gt rx1334_pos, rx1334_eos, rx1334_fail2817
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!from", rx1334_pos
  rxscan1335_scan2822:
    nqp_rxmark rx1334_bstack, rxscan1335_loop2821, rx1334_pos, 0
  rxscan1335_done2823:
    add $I11, rx1334_pos, 5
    gt $I11, rx1334_eos, rx1334_fail2817
    substr $S10, rx1334_tgt, rx1334_pos, 5
    ne $S10, ucs4:"pir::", rx1334_fail2817
    add rx1334_pos, 5
    nqp_rxmark rx1334_bstack, rxcap1336_fail2825, rx1334_pos, 0
    nqp_rxmark rx1334_bstack, rxquantr1337_done2827, -1, 0
  rxquantr1337_loop2826:
    ge rx1334_pos, rx1334_eos, rx1334_fail2817
    is_cclass $I11, .CCLASS_WORD, rx1334_tgt, rx1334_pos
    unless $I11, rx1334_fail2817
    add rx1334_pos, 1
    nqp_rxpeek $I19, rx1334_bstack, rxquantr1337_done2827
    inc $I19
    inc $I19
    set rx1334_rep, rx1334_bstack[$I19]
    nqp_rxcommit rx1334_bstack, rxquantr1337_done2827
    inc rx1334_rep
    nqp_rxmark rx1334_bstack, rxquantr1337_done2827, rx1334_pos, rx1334_rep
    goto rxquantr1337_loop2826
  rxquantr1337_done2827:
    nqp_rxpeek $I19, rx1334_bstack, rxcap1336_fail2825
    inc $I19
    set $I11, rx1334_bstack[$I19]
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!pos", rx1334_pos
    $P11 = rx1334_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1334_pos)
    rx1334_cstack = rx1334_cur."!cursor_capture"($P11, "op")
    goto rxcap1336_done2824
  rxcap1336_fail2825:
    goto rx1334_fail2817
  rxcap1336_done2824:
    nqp_rxmark rx1334_bstack, rxquantr1338_done2829, rx1334_pos, 0
  rxquantr1338_loop2828:
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!pos", rx1334_pos
    $P11 = rx1334_cur."args"()
    repr_get_attr_int $I11, $P11, rx1334_curclass, "$!pos"
    lt $I11, 0, rx1334_fail2817
    goto rxsubrule1339_pass2830
  rxsubrule1339_back2831:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1334_curclass, "$!pos"
    lt $I11, 0, rx1334_fail2817
  rxsubrule1339_pass2830:
    rx1334_cstack = rx1334_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1339_back2831
    push rx1334_bstack, $I11
    push rx1334_bstack, 0
    push rx1334_bstack, rx1334_pos
    elements $I11, rx1334_cstack
    push rx1334_bstack, $I11
    repr_get_attr_int rx1334_pos, $P11, rx1334_curclass, "$!pos"
    nqp_rxpeek $I19, rx1334_bstack, rxquantr1338_done2829
    inc $I19
    inc $I19
    set rx1334_rep, rx1334_bstack[$I19]
    nqp_rxcommit rx1334_bstack, rxquantr1338_done2829
    inc rx1334_rep
  rxquantr1338_done2829:
    rx1334_cur."!cursor_pass"(rx1334_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1334_cur)
  rx1334_restart2816:
    repr_get_attr_obj rx1334_cstack, rx1334_cur, rx1334_curclass, "$!cstack"
  rx1334_fail2817:
    unless rx1334_bstack, rx1334_done2815
    pop $I19, rx1334_bstack
    if_null rx1334_cstack, rx1334_cstack_done2820
    unless rx1334_cstack, rx1334_cstack_done2820
    dec $I19
    set $P11, rx1334_cstack[$I19]
  rx1334_cstack_done2820:
    pop rx1334_rep, rx1334_bstack
    pop rx1334_pos, rx1334_bstack
    pop $I19, rx1334_bstack
    lt rx1334_pos, -1, rx1334_done2815
    lt rx1334_pos, 0, rx1334_fail2817
    eq $I19, 0, rx1334_fail2817
    nqp_islist $I20, rx1334_cstack
    unless $I20, rx1334_jump2818
    elements $I18, rx1334_bstack
    le $I18, 0, rx1334_cut2819
    dec $I18
    set $I18, rx1334_bstack[$I18]
  rx1334_cut2819:
    assign rx1334_cstack, $I18
  rx1334_jump2818:
    jump $I19
  rx1334_done2815:
    rx1334_cur."!cursor_fail"()
    .return (rx1334_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_146_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1245
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1340_start
    .local string rx1340_tgt
    .local int rx1340_pos
    .local int rx1340_off
    .local int rx1340_eos
    .local int rx1340_rep
    .local pmc rx1340_cur
    .local pmc rx1340_curclass
    .local pmc rx1340_bstack
    .local pmc rx1340_cstack
    rx1340_start = self."!cursor_start_all"()
    set rx1340_cur, rx1340_start[0]
    set rx1340_tgt, rx1340_start[1]
    set rx1340_pos, rx1340_start[2]
    set rx1340_curclass, rx1340_start[3]
    set rx1340_bstack, rx1340_start[4]
    set $I19, rx1340_start[5]
    store_lex unicode:"$\x{a2}", rx1340_cur
    length rx1340_eos, rx1340_tgt
    eq $I19, 1, rx1340_restart2834
    gt rx1340_pos, rx1340_eos, rx1340_fail2835
    repr_get_attr_int $I11, self, rx1340_curclass, "$!from"
    ne $I11, -1, rxscan1341_done2841
    goto rxscan1341_scan2840
  rxscan1341_loop2839:
    inc rx1340_pos
    gt rx1340_pos, rx1340_eos, rx1340_fail2835
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!from", rx1340_pos
  rxscan1341_scan2840:
    nqp_rxmark rx1340_bstack, rxscan1341_loop2839, rx1340_pos, 0
  rxscan1341_done2841:
    add $I11, rx1340_pos, 12
    gt $I11, rx1340_eos, rx1340_fail2835
    substr $S10, rx1340_tgt, rx1340_pos, 12
    ne $S10, ucs4:"pir::const::", rx1340_fail2835
    add rx1340_pos, 12
    nqp_rxmark rx1340_bstack, rxcap1342_fail2843, rx1340_pos, 0
    nqp_rxmark rx1340_bstack, rxquantr1343_done2845, -1, 0
  rxquantr1343_loop2844:
    ge rx1340_pos, rx1340_eos, rx1340_fail2835
    is_cclass $I11, .CCLASS_WORD, rx1340_tgt, rx1340_pos
    unless $I11, rx1340_fail2835
    add rx1340_pos, 1
    nqp_rxpeek $I19, rx1340_bstack, rxquantr1343_done2845
    inc $I19
    inc $I19
    set rx1340_rep, rx1340_bstack[$I19]
    nqp_rxcommit rx1340_bstack, rxquantr1343_done2845
    inc rx1340_rep
    nqp_rxmark rx1340_bstack, rxquantr1343_done2845, rx1340_pos, rx1340_rep
    goto rxquantr1343_loop2844
  rxquantr1343_done2845:
    nqp_rxpeek $I19, rx1340_bstack, rxcap1342_fail2843
    inc $I19
    set $I11, rx1340_bstack[$I19]
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!pos", rx1340_pos
    $P11 = rx1340_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1340_pos)
    rx1340_cstack = rx1340_cur."!cursor_capture"($P11, "const")
    goto rxcap1342_done2842
  rxcap1342_fail2843:
    goto rx1340_fail2835
  rxcap1342_done2842:
    rx1340_cur."!cursor_pass"(rx1340_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1340_cur)
  rx1340_restart2834:
    repr_get_attr_obj rx1340_cstack, rx1340_cur, rx1340_curclass, "$!cstack"
  rx1340_fail2835:
    unless rx1340_bstack, rx1340_done2833
    pop $I19, rx1340_bstack
    if_null rx1340_cstack, rx1340_cstack_done2838
    unless rx1340_cstack, rx1340_cstack_done2838
    dec $I19
    set $P11, rx1340_cstack[$I19]
  rx1340_cstack_done2838:
    pop rx1340_rep, rx1340_bstack
    pop rx1340_pos, rx1340_bstack
    pop $I19, rx1340_bstack
    lt rx1340_pos, -1, rx1340_done2833
    lt rx1340_pos, 0, rx1340_fail2835
    eq $I19, 0, rx1340_fail2835
    nqp_islist $I20, rx1340_cstack
    unless $I20, rx1340_jump2836
    elements $I18, rx1340_bstack
    le $I18, 0, rx1340_cut2837
    dec $I18
    set $I18, rx1340_bstack[$I18]
  rx1340_cut2837:
    assign rx1340_cstack, $I18
  rx1340_jump2836:
    jump $I19
  rx1340_done2833:
    rx1340_cur."!cursor_fail"()
    .return (rx1340_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_147_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1249
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1344_start
    .local string rx1344_tgt
    .local int rx1344_pos
    .local int rx1344_off
    .local int rx1344_eos
    .local int rx1344_rep
    .local pmc rx1344_cur
    .local pmc rx1344_curclass
    .local pmc rx1344_bstack
    .local pmc rx1344_cstack
    rx1344_start = self."!cursor_start_all"()
    set rx1344_cur, rx1344_start[0]
    set rx1344_tgt, rx1344_start[1]
    set rx1344_pos, rx1344_start[2]
    set rx1344_curclass, rx1344_start[3]
    set rx1344_bstack, rx1344_start[4]
    set $I19, rx1344_start[5]
    store_lex unicode:"$\x{a2}", rx1344_cur
    length rx1344_eos, rx1344_tgt
    eq $I19, 1, rx1344_restart2848
    gt rx1344_pos, rx1344_eos, rx1344_fail2849
    repr_get_attr_int $I11, self, rx1344_curclass, "$!from"
    ne $I11, -1, rxscan1345_done2855
    goto rxscan1345_scan2854
  rxscan1345_loop2853:
    inc rx1344_pos
    gt rx1344_pos, rx1344_eos, rx1344_fail2849
    repr_bind_attr_int rx1344_cur, rx1344_curclass, "$!from", rx1344_pos
  rxscan1345_scan2854:
    nqp_rxmark rx1344_bstack, rxscan1345_loop2853, rx1344_pos, 0
  rxscan1345_done2855:
    add $I11, rx1344_pos, 5
    gt $I11, rx1344_eos, rx1344_fail2849
    substr $S10, rx1344_tgt, rx1344_pos, 5
    ne $S10, ucs4:"nqp::", rx1344_fail2849
    add rx1344_pos, 5
    nqp_rxmark rx1344_bstack, rxcap1346_fail2857, rx1344_pos, 0
    nqp_rxmark rx1344_bstack, rxquantr1347_done2859, -1, 0
  rxquantr1347_loop2858:
    ge rx1344_pos, rx1344_eos, rx1344_fail2849
    is_cclass $I11, .CCLASS_WORD, rx1344_tgt, rx1344_pos
    unless $I11, rx1344_fail2849
    add rx1344_pos, 1
    nqp_rxpeek $I19, rx1344_bstack, rxquantr1347_done2859
    inc $I19
    inc $I19
    set rx1344_rep, rx1344_bstack[$I19]
    nqp_rxcommit rx1344_bstack, rxquantr1347_done2859
    inc rx1344_rep
    nqp_rxmark rx1344_bstack, rxquantr1347_done2859, rx1344_pos, rx1344_rep
    goto rxquantr1347_loop2858
  rxquantr1347_done2859:
    nqp_rxpeek $I19, rx1344_bstack, rxcap1346_fail2857
    inc $I19
    set $I11, rx1344_bstack[$I19]
    repr_bind_attr_int rx1344_cur, rx1344_curclass, "$!pos", rx1344_pos
    $P11 = rx1344_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1344_pos)
    rx1344_cstack = rx1344_cur."!cursor_capture"($P11, "op")
    goto rxcap1346_done2856
  rxcap1346_fail2857:
    goto rx1344_fail2849
  rxcap1346_done2856:
    nqp_rxmark rx1344_bstack, rxquantr1348_done2861, rx1344_pos, 0
  rxquantr1348_loop2860:
    repr_bind_attr_int rx1344_cur, rx1344_curclass, "$!pos", rx1344_pos
    $P11 = rx1344_cur."args"()
    repr_get_attr_int $I11, $P11, rx1344_curclass, "$!pos"
    lt $I11, 0, rx1344_fail2849
    goto rxsubrule1349_pass2862
  rxsubrule1349_back2863:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1344_curclass, "$!pos"
    lt $I11, 0, rx1344_fail2849
  rxsubrule1349_pass2862:
    rx1344_cstack = rx1344_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1349_back2863
    push rx1344_bstack, $I11
    push rx1344_bstack, 0
    push rx1344_bstack, rx1344_pos
    elements $I11, rx1344_cstack
    push rx1344_bstack, $I11
    repr_get_attr_int rx1344_pos, $P11, rx1344_curclass, "$!pos"
    nqp_rxpeek $I19, rx1344_bstack, rxquantr1348_done2861
    inc $I19
    inc $I19
    set rx1344_rep, rx1344_bstack[$I19]
    nqp_rxcommit rx1344_bstack, rxquantr1348_done2861
    inc rx1344_rep
  rxquantr1348_done2861:
    rx1344_cur."!cursor_pass"(rx1344_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1344_cur)
  rx1344_restart2848:
    repr_get_attr_obj rx1344_cstack, rx1344_cur, rx1344_curclass, "$!cstack"
  rx1344_fail2849:
    unless rx1344_bstack, rx1344_done2847
    pop $I19, rx1344_bstack
    if_null rx1344_cstack, rx1344_cstack_done2852
    unless rx1344_cstack, rx1344_cstack_done2852
    dec $I19
    set $P11, rx1344_cstack[$I19]
  rx1344_cstack_done2852:
    pop rx1344_rep, rx1344_bstack
    pop rx1344_pos, rx1344_bstack
    pop $I19, rx1344_bstack
    lt rx1344_pos, -1, rx1344_done2847
    lt rx1344_pos, 0, rx1344_fail2849
    eq $I19, 0, rx1344_fail2849
    nqp_islist $I20, rx1344_cstack
    unless $I20, rx1344_jump2850
    elements $I18, rx1344_bstack
    le $I18, 0, rx1344_cut2851
    dec $I18
    set $I18, rx1344_bstack[$I18]
  rx1344_cut2851:
    assign rx1344_cstack, $I18
  rx1344_jump2850:
    jump $I19
  rx1344_done2847:
    rx1344_cur."!cursor_fail"()
    .return (rx1344_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_148_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1253
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1350_start
    .local string rx1350_tgt
    .local int rx1350_pos
    .local int rx1350_off
    .local int rx1350_eos
    .local int rx1350_rep
    .local pmc rx1350_cur
    .local pmc rx1350_curclass
    .local pmc rx1350_bstack
    .local pmc rx1350_cstack
    rx1350_start = self."!cursor_start_all"()
    set rx1350_cur, rx1350_start[0]
    set rx1350_tgt, rx1350_start[1]
    set rx1350_pos, rx1350_start[2]
    set rx1350_curclass, rx1350_start[3]
    set rx1350_bstack, rx1350_start[4]
    set $I19, rx1350_start[5]
    store_lex unicode:"$\x{a2}", rx1350_cur
    length rx1350_eos, rx1350_tgt
    eq $I19, 1, rx1350_restart2866
    gt rx1350_pos, rx1350_eos, rx1350_fail2867
    repr_get_attr_int $I11, self, rx1350_curclass, "$!from"
    ne $I11, -1, rxscan1351_done2873
    goto rxscan1351_scan2872
  rxscan1351_loop2871:
    inc rx1350_pos
    gt rx1350_pos, rx1350_eos, rx1350_fail2867
    repr_bind_attr_int rx1350_cur, rx1350_curclass, "$!from", rx1350_pos
  rxscan1351_scan2872:
    nqp_rxmark rx1350_bstack, rxscan1351_loop2871, rx1350_pos, 0
  rxscan1351_done2873:
    add $I11, rx1350_pos, 12
    gt $I11, rx1350_eos, rx1350_fail2867
    substr $S10, rx1350_tgt, rx1350_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1350_fail2867
    add rx1350_pos, 12
    nqp_rxmark rx1350_bstack, rxcap1352_fail2875, rx1350_pos, 0
    nqp_rxmark rx1350_bstack, rxquantr1353_done2877, -1, 0
  rxquantr1353_loop2876:
    ge rx1350_pos, rx1350_eos, rx1350_fail2867
    is_cclass $I11, .CCLASS_WORD, rx1350_tgt, rx1350_pos
    unless $I11, rx1350_fail2867
    add rx1350_pos, 1
    nqp_rxpeek $I19, rx1350_bstack, rxquantr1353_done2877
    inc $I19
    inc $I19
    set rx1350_rep, rx1350_bstack[$I19]
    nqp_rxcommit rx1350_bstack, rxquantr1353_done2877
    inc rx1350_rep
    nqp_rxmark rx1350_bstack, rxquantr1353_done2877, rx1350_pos, rx1350_rep
    goto rxquantr1353_loop2876
  rxquantr1353_done2877:
    nqp_rxpeek $I19, rx1350_bstack, rxcap1352_fail2875
    inc $I19
    set $I11, rx1350_bstack[$I19]
    repr_bind_attr_int rx1350_cur, rx1350_curclass, "$!pos", rx1350_pos
    $P11 = rx1350_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1350_pos)
    rx1350_cstack = rx1350_cur."!cursor_capture"($P11, "const")
    goto rxcap1352_done2874
  rxcap1352_fail2875:
    goto rx1350_fail2867
  rxcap1352_done2874:
    rx1350_cur."!cursor_pass"(rx1350_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1350_cur)
  rx1350_restart2866:
    repr_get_attr_obj rx1350_cstack, rx1350_cur, rx1350_curclass, "$!cstack"
  rx1350_fail2867:
    unless rx1350_bstack, rx1350_done2865
    pop $I19, rx1350_bstack
    if_null rx1350_cstack, rx1350_cstack_done2870
    unless rx1350_cstack, rx1350_cstack_done2870
    dec $I19
    set $P11, rx1350_cstack[$I19]
  rx1350_cstack_done2870:
    pop rx1350_rep, rx1350_bstack
    pop rx1350_pos, rx1350_bstack
    pop $I19, rx1350_bstack
    lt rx1350_pos, -1, rx1350_done2865
    lt rx1350_pos, 0, rx1350_fail2867
    eq $I19, 0, rx1350_fail2867
    nqp_islist $I20, rx1350_cstack
    unless $I20, rx1350_jump2868
    elements $I18, rx1350_bstack
    le $I18, 0, rx1350_cut2869
    dec $I18
    set $I18, rx1350_bstack[$I18]
  rx1350_cut2869:
    assign rx1350_cstack, $I18
  rx1350_jump2868:
    jump $I19
  rx1350_done2865:
    rx1350_cur."!cursor_fail"()
    .return (rx1350_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_149_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1257
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_416_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1354_start
    .local string rx1354_tgt
    .local int rx1354_pos
    .local int rx1354_off
    .local int rx1354_eos
    .local int rx1354_rep
    .local pmc rx1354_cur
    .local pmc rx1354_curclass
    .local pmc rx1354_bstack
    .local pmc rx1354_cstack
    rx1354_start = self."!cursor_start_all"()
    set rx1354_cur, rx1354_start[0]
    set rx1354_tgt, rx1354_start[1]
    set rx1354_pos, rx1354_start[2]
    set rx1354_curclass, rx1354_start[3]
    set rx1354_bstack, rx1354_start[4]
    set $I19, rx1354_start[5]
    store_lex unicode:"$\x{a2}", rx1354_cur
    length rx1354_eos, rx1354_tgt
    eq $I19, 1, rx1354_restart2880
    gt rx1354_pos, rx1354_eos, rx1354_fail2881
    repr_get_attr_int $I11, self, rx1354_curclass, "$!from"
    ne $I11, -1, rxscan1355_done2887
    goto rxscan1355_scan2886
  rxscan1355_loop2885:
    inc rx1354_pos
    gt rx1354_pos, rx1354_eos, rx1354_fail2881
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!from", rx1354_pos
  rxscan1355_scan2886:
    nqp_rxmark rx1354_bstack, rxscan1355_loop2885, rx1354_pos, 0
  rxscan1355_done2887:
    add $I11, rx1354_pos, 3
    gt $I11, rx1354_eos, rx1354_fail2881
    substr $S10, rx1354_tgt, rx1354_pos, 3
    ne $S10, ucs4:"{*}", rx1354_fail2881
    add rx1354_pos, 3
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2881
  alt1356_02889:
    nqp_rxmark rx1354_bstack, alt1356_12895, rx1354_pos, 0
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    store_lex unicode:"$\x{a2}", rx1354_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_416_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1354_fail2881
    goto alt1356_end2888
  alt1356_12895:
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2881
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
  alt1356_end2888:
    rx1354_cur."!cursor_pass"(rx1354_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1354_cur)
  rx1354_restart2880:
    repr_get_attr_obj rx1354_cstack, rx1354_cur, rx1354_curclass, "$!cstack"
  rx1354_fail2881:
    unless rx1354_bstack, rx1354_done2879
    pop $I19, rx1354_bstack
    if_null rx1354_cstack, rx1354_cstack_done2884
    unless rx1354_cstack, rx1354_cstack_done2884
    dec $I19
    set $P11, rx1354_cstack[$I19]
  rx1354_cstack_done2884:
    pop rx1354_rep, rx1354_bstack
    pop rx1354_pos, rx1354_bstack
    pop $I19, rx1354_bstack
    lt rx1354_pos, -1, rx1354_done2879
    lt rx1354_pos, 0, rx1354_fail2881
    eq $I19, 0, rx1354_fail2881
    nqp_islist $I20, rx1354_cstack
    unless $I20, rx1354_jump2882
    elements $I18, rx1354_bstack
    le $I18, 0, rx1354_cut2883
    dec $I18
    set $I18, rx1354_bstack[$I18]
  rx1354_cut2883:
    assign rx1354_cstack, $I18
  rx1354_jump2882:
    jump $I19
  rx1354_done2879:
    rx1354_cur."!cursor_fail"()
    .return (rx1354_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1381281828.51527") :anon :lex :outer("cuid_149_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1259
    .local pmc fb_tmp_182 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2890
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_182, $P5002
    repr_defined $I5002, fb_tmp_182
    unless $I5002 goto if1357_else2891 
    set $P5004, fb_tmp_182["$MULTINESS"]
    set $P5006, $P5004
    goto if1357_end2892
  if1357_else2891:
    null $P5005
    set $P5006, $P5005
  if1357_end2892:
    unless_null $P5006, vivi_13582893
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_13582893:
    unless_null $P5006, vivi_13592894
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13592894:
    set $P5001, $P5006
  fallback2890:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_150_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1262
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1361_start
    .local string rx1361_tgt
    .local int rx1361_pos
    .local int rx1361_off
    .local int rx1361_eos
    .local int rx1361_rep
    .local pmc rx1361_cur
    .local pmc rx1361_curclass
    .local pmc rx1361_bstack
    .local pmc rx1361_cstack
    rx1361_start = self."!cursor_start_all"()
    set rx1361_cur, rx1361_start[0]
    set rx1361_tgt, rx1361_start[1]
    set rx1361_pos, rx1361_start[2]
    set rx1361_curclass, rx1361_start[3]
    set rx1361_bstack, rx1361_start[4]
    set $I19, rx1361_start[5]
    store_lex unicode:"$\x{a2}", rx1361_cur
    length rx1361_eos, rx1361_tgt
    eq $I19, 1, rx1361_restart2899
    gt rx1361_pos, rx1361_eos, rx1361_fail2900
    repr_get_attr_int $I11, self, rx1361_curclass, "$!from"
    ne $I11, -1, rxscan1362_done2906
    goto rxscan1362_scan2905
  rxscan1362_loop2904:
    inc rx1361_pos
    gt rx1361_pos, rx1361_eos, rx1361_fail2900
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!from", rx1361_pos
  rxscan1362_scan2905:
    nqp_rxmark rx1361_bstack, rxscan1362_loop2904, rx1361_pos, 0
  rxscan1362_done2906:
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."name"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail2900
    nqp_rxmark rx1361_bstack, rxsubrule1363_pass2907, -1, 0
  rxsubrule1363_pass2907:
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1361_pos, $P11, rx1361_curclass, "$!pos"
    nqp_rxmark rx1361_bstack, rxquantr1364_done2909, rx1361_pos, 0
  rxquantr1364_loop2908:
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."args"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail2900
    goto rxsubrule1365_pass2910
  rxsubrule1365_back2911:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail2900
  rxsubrule1365_pass2910:
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1365_back2911
    push rx1361_bstack, $I11
    push rx1361_bstack, 0
    push rx1361_bstack, rx1361_pos
    elements $I11, rx1361_cstack
    push rx1361_bstack, $I11
    repr_get_attr_int rx1361_pos, $P11, rx1361_curclass, "$!pos"
    nqp_rxpeek $I19, rx1361_bstack, rxquantr1364_done2909
    inc $I19
    inc $I19
    set rx1361_rep, rx1361_bstack[$I19]
    nqp_rxcommit rx1361_bstack, rxquantr1364_done2909
    inc rx1361_rep
  rxquantr1364_done2909:
    rx1361_cur."!cursor_pass"(rx1361_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1361_cur)
  rx1361_restart2899:
    repr_get_attr_obj rx1361_cstack, rx1361_cur, rx1361_curclass, "$!cstack"
  rx1361_fail2900:
    unless rx1361_bstack, rx1361_done2898
    pop $I19, rx1361_bstack
    if_null rx1361_cstack, rx1361_cstack_done2903
    unless rx1361_cstack, rx1361_cstack_done2903
    dec $I19
    set $P11, rx1361_cstack[$I19]
  rx1361_cstack_done2903:
    pop rx1361_rep, rx1361_bstack
    pop rx1361_pos, rx1361_bstack
    pop $I19, rx1361_bstack
    lt rx1361_pos, -1, rx1361_done2898
    lt rx1361_pos, 0, rx1361_fail2900
    eq $I19, 0, rx1361_fail2900
    nqp_islist $I20, rx1361_cstack
    unless $I20, rx1361_jump2901
    elements $I18, rx1361_bstack
    le $I18, 0, rx1361_cut2902
    dec $I18
    set $I18, rx1361_bstack[$I18]
  rx1361_cut2902:
    assign rx1361_cstack, $I18
  rx1361_jump2901:
    jump $I19
  rx1361_done2898:
    rx1361_cur."!cursor_fail"()
    .return (rx1361_cur) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_151_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1266
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1366_start
    .local string rx1366_tgt
    .local int rx1366_pos
    .local int rx1366_off
    .local int rx1366_eos
    .local int rx1366_rep
    .local pmc rx1366_cur
    .local pmc rx1366_curclass
    .local pmc rx1366_bstack
    .local pmc rx1366_cstack
    rx1366_start = self."!cursor_start_all"()
    set rx1366_cur, rx1366_start[0]
    set rx1366_tgt, rx1366_start[1]
    set rx1366_pos, rx1366_start[2]
    set rx1366_curclass, rx1366_start[3]
    set rx1366_bstack, rx1366_start[4]
    set $I19, rx1366_start[5]
    store_lex unicode:"$\x{a2}", rx1366_cur
    length rx1366_eos, rx1366_tgt
    eq $I19, 1, rx1366_restart2914
    gt rx1366_pos, rx1366_eos, rx1366_fail2915
    repr_get_attr_int $I11, self, rx1366_curclass, "$!from"
    ne $I11, -1, rxscan1367_done2921
    goto rxscan1367_scan2920
  rxscan1367_loop2919:
    inc rx1366_pos
    gt rx1366_pos, rx1366_eos, rx1366_fail2915
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!from", rx1366_pos
  rxscan1367_scan2920:
    nqp_rxmark rx1366_bstack, rxscan1367_loop2919, rx1366_pos, 0
  rxscan1367_done2921:
    add $I11, rx1366_pos, 1
    gt $I11, rx1366_eos, rx1366_fail2915
    substr $S10, rx1366_tgt, rx1366_pos, 1
    ne $S10, ucs4:"(", rx1366_fail2915
    add rx1366_pos, 1
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    $P11 = rx1366_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1366_curclass, "$!pos"
    lt $I11, 0, rx1366_fail2915
    nqp_rxmark rx1366_bstack, rxsubrule1368_pass2922, -1, 0
  rxsubrule1368_pass2922:
    rx1366_cstack = rx1366_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1366_pos, $P11, rx1366_curclass, "$!pos"
    add $I11, rx1366_pos, 1
    gt $I11, rx1366_eos, rx1366_fail2915
    substr $S10, rx1366_tgt, rx1366_pos, 1
    ne $S10, ucs4:")", rx1366_fail2915
    add rx1366_pos, 1
    rx1366_cur."!cursor_pass"(rx1366_pos, "args", 'backtrack'=>1)
    .return (rx1366_cur)
  rx1366_restart2914:
    repr_get_attr_obj rx1366_cstack, rx1366_cur, rx1366_curclass, "$!cstack"
  rx1366_fail2915:
    unless rx1366_bstack, rx1366_done2913
    pop $I19, rx1366_bstack
    if_null rx1366_cstack, rx1366_cstack_done2918
    unless rx1366_cstack, rx1366_cstack_done2918
    dec $I19
    set $P11, rx1366_cstack[$I19]
  rx1366_cstack_done2918:
    pop rx1366_rep, rx1366_bstack
    pop rx1366_pos, rx1366_bstack
    pop $I19, rx1366_bstack
    lt rx1366_pos, -1, rx1366_done2913
    lt rx1366_pos, 0, rx1366_fail2915
    eq $I19, 0, rx1366_fail2915
    nqp_islist $I20, rx1366_cstack
    unless $I20, rx1366_jump2916
    elements $I18, rx1366_bstack
    le $I18, 0, rx1366_cut2917
    dec $I18
    set $I18, rx1366_bstack[$I18]
  rx1366_cut2917:
    assign rx1366_cstack, $I18
  rx1366_jump2916:
    jump $I19
  rx1366_done2913:
    rx1366_cur."!cursor_fail"()
    .return (rx1366_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_152_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1270
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1369_start
    .local string rx1369_tgt
    .local int rx1369_pos
    .local int rx1369_off
    .local int rx1369_eos
    .local int rx1369_rep
    .local pmc rx1369_cur
    .local pmc rx1369_curclass
    .local pmc rx1369_bstack
    .local pmc rx1369_cstack
    rx1369_start = self."!cursor_start_all"()
    set rx1369_cur, rx1369_start[0]
    set rx1369_tgt, rx1369_start[1]
    set rx1369_pos, rx1369_start[2]
    set rx1369_curclass, rx1369_start[3]
    set rx1369_bstack, rx1369_start[4]
    set $I19, rx1369_start[5]
    store_lex unicode:"$\x{a2}", rx1369_cur
    length rx1369_eos, rx1369_tgt
    eq $I19, 1, rx1369_restart2925
    gt rx1369_pos, rx1369_eos, rx1369_fail2926
    repr_get_attr_int $I11, self, rx1369_curclass, "$!from"
    ne $I11, -1, rxscan1370_done2932
    goto rxscan1370_scan2931
  rxscan1370_loop2930:
    inc rx1369_pos
    gt rx1369_pos, rx1369_eos, rx1369_fail2926
    repr_bind_attr_int rx1369_cur, rx1369_curclass, "$!from", rx1369_pos
  rxscan1370_scan2931:
    nqp_rxmark rx1369_bstack, rxscan1370_loop2930, rx1369_pos, 0
  rxscan1370_done2932:
    repr_bind_attr_int rx1369_cur, rx1369_curclass, "$!pos", rx1369_pos
    $P11 = rx1369_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1369_curclass, "$!pos"
    lt $I11, 0, rx1369_fail2926
    repr_get_attr_int rx1369_pos, $P11, rx1369_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1372_02935
    nqp_push_label $P11, alt1372_12937
    nqp_rxmark rx1369_bstack, alt1372_end2934, -1, 0
    rx1369_cur."!alt"(rx1369_pos, "alt_nfa__36_1381281832.06667", $P11)
    goto rx1369_fail2926
  alt1372_02935:
    repr_bind_attr_int rx1369_cur, rx1369_curclass, "$!pos", rx1369_pos
    $P11 = rx1369_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1369_curclass, "$!pos"
    lt $I11, 0, rx1369_fail2926
    nqp_rxmark rx1369_bstack, rxsubrule1373_pass2936, -1, 0
  rxsubrule1373_pass2936:
    rx1369_cstack = rx1369_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1369_pos, $P11, rx1369_curclass, "$!pos"
    goto alt1372_end2934
  alt1372_12937:
    goto alt1372_end2934
  alt1372_end2934:
    nqp_rxcommit rx1369_bstack, alt1372_end2934
    rx1369_cur."!cursor_pass"(rx1369_pos, "arglist", 'backtrack'=>1)
    .return (rx1369_cur)
  rx1369_restart2925:
    repr_get_attr_obj rx1369_cstack, rx1369_cur, rx1369_curclass, "$!cstack"
  rx1369_fail2926:
    unless rx1369_bstack, rx1369_done2924
    pop $I19, rx1369_bstack
    if_null rx1369_cstack, rx1369_cstack_done2929
    unless rx1369_cstack, rx1369_cstack_done2929
    dec $I19
    set $P11, rx1369_cstack[$I19]
  rx1369_cstack_done2929:
    pop rx1369_rep, rx1369_bstack
    pop rx1369_pos, rx1369_bstack
    pop $I19, rx1369_bstack
    lt rx1369_pos, -1, rx1369_done2924
    lt rx1369_pos, 0, rx1369_fail2926
    eq $I19, 0, rx1369_fail2926
    nqp_islist $I20, rx1369_cstack
    unless $I20, rx1369_jump2927
    elements $I18, rx1369_bstack
    le $I18, 0, rx1369_cut2928
    dec $I18
    set $I18, rx1369_bstack[$I18]
  rx1369_cut2928:
    assign rx1369_cstack, $I18
  rx1369_jump2927:
    jump $I19
  rx1369_done2924:
    rx1369_cur."!cursor_fail"()
    .return (rx1369_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_153_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1279
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1375_start
    .local string rx1375_tgt
    .local int rx1375_pos
    .local int rx1375_off
    .local int rx1375_eos
    .local int rx1375_rep
    .local pmc rx1375_cur
    .local pmc rx1375_curclass
    .local pmc rx1375_bstack
    .local pmc rx1375_cstack
    rx1375_start = self."!cursor_start_all"()
    set rx1375_cur, rx1375_start[0]
    set rx1375_tgt, rx1375_start[1]
    set rx1375_pos, rx1375_start[2]
    set rx1375_curclass, rx1375_start[3]
    set rx1375_bstack, rx1375_start[4]
    set $I19, rx1375_start[5]
    store_lex unicode:"$\x{a2}", rx1375_cur
    length rx1375_eos, rx1375_tgt
    eq $I19, 1, rx1375_restart2941
    gt rx1375_pos, rx1375_eos, rx1375_fail2942
    repr_get_attr_int $I11, self, rx1375_curclass, "$!from"
    ne $I11, -1, rxscan1376_done2948
    goto rxscan1376_scan2947
  rxscan1376_loop2946:
    inc rx1375_pos
    gt rx1375_pos, rx1375_eos, rx1375_fail2942
    repr_bind_attr_int rx1375_cur, rx1375_curclass, "$!from", rx1375_pos
  rxscan1376_scan2947:
    nqp_rxmark rx1375_bstack, rxscan1376_loop2946, rx1375_pos, 0
  rxscan1376_done2948:
    repr_bind_attr_int rx1375_cur, rx1375_curclass, "$!pos", rx1375_pos
    $P11 = rx1375_cur."value"()
    repr_get_attr_int $I11, $P11, rx1375_curclass, "$!pos"
    lt $I11, 0, rx1375_fail2942
    nqp_rxmark rx1375_bstack, rxsubrule1377_pass2949, -1, 0
  rxsubrule1377_pass2949:
    rx1375_cstack = rx1375_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1375_pos, $P11, rx1375_curclass, "$!pos"
    rx1375_cur."!cursor_pass"(rx1375_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1375_cur)
  rx1375_restart2941:
    repr_get_attr_obj rx1375_cstack, rx1375_cur, rx1375_curclass, "$!cstack"
  rx1375_fail2942:
    unless rx1375_bstack, rx1375_done2940
    pop $I19, rx1375_bstack
    if_null rx1375_cstack, rx1375_cstack_done2945
    unless rx1375_cstack, rx1375_cstack_done2945
    dec $I19
    set $P11, rx1375_cstack[$I19]
  rx1375_cstack_done2945:
    pop rx1375_rep, rx1375_bstack
    pop rx1375_pos, rx1375_bstack
    pop $I19, rx1375_bstack
    lt rx1375_pos, -1, rx1375_done2940
    lt rx1375_pos, 0, rx1375_fail2942
    eq $I19, 0, rx1375_fail2942
    nqp_islist $I20, rx1375_cstack
    unless $I20, rx1375_jump2943
    elements $I18, rx1375_bstack
    le $I18, 0, rx1375_cut2944
    dec $I18
    set $I18, rx1375_bstack[$I18]
  rx1375_cut2944:
    assign rx1375_cstack, $I18
  rx1375_jump2943:
    jump $I19
  rx1375_done2940:
    rx1375_cur."!cursor_fail"()
    .return (rx1375_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_154_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1281
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1378_start
    .local string rx1378_tgt
    .local int rx1378_pos
    .local int rx1378_off
    .local int rx1378_eos
    .local int rx1378_rep
    .local pmc rx1378_cur
    .local pmc rx1378_curclass
    .local pmc rx1378_bstack
    .local pmc rx1378_cstack
    rx1378_start = self."!cursor_start_all"()
    set rx1378_cur, rx1378_start[0]
    set rx1378_tgt, rx1378_start[1]
    set rx1378_pos, rx1378_start[2]
    set rx1378_curclass, rx1378_start[3]
    set rx1378_bstack, rx1378_start[4]
    set $I19, rx1378_start[5]
    store_lex unicode:"$\x{a2}", rx1378_cur
    length rx1378_eos, rx1378_tgt
    eq $I19, 1, rx1378_restart2952
    gt rx1378_pos, rx1378_eos, rx1378_fail2953
    repr_get_attr_int $I11, self, rx1378_curclass, "$!from"
    ne $I11, -1, rxscan1379_done2959
    goto rxscan1379_scan2958
  rxscan1379_loop2957:
    inc rx1378_pos
    gt rx1378_pos, rx1378_eos, rx1378_fail2953
    repr_bind_attr_int rx1378_cur, rx1378_curclass, "$!from", rx1378_pos
  rxscan1379_scan2958:
    nqp_rxmark rx1378_bstack, rxscan1379_loop2957, rx1378_pos, 0
  rxscan1379_done2959:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1380_02961
    nqp_push_label $P11, alt1380_12963
    nqp_rxmark rx1378_bstack, alt1380_end2960, -1, 0
    rx1378_cur."!alt"(rx1378_pos, "alt_nfa__37_1381281832.07821", $P11)
    goto rx1378_fail2953
  alt1380_02961:
    repr_bind_attr_int rx1378_cur, rx1378_curclass, "$!pos", rx1378_pos
    $P11 = rx1378_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1378_curclass, "$!pos"
    lt $I11, 0, rx1378_fail2953
    nqp_rxmark rx1378_bstack, rxsubrule1381_pass2962, -1, 0
  rxsubrule1381_pass2962:
    rx1378_cstack = rx1378_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1378_pos, $P11, rx1378_curclass, "$!pos"
    goto alt1380_end2960
  alt1380_12963:
    repr_bind_attr_int rx1378_cur, rx1378_curclass, "$!pos", rx1378_pos
    $P11 = rx1378_cur."number"()
    repr_get_attr_int $I11, $P11, rx1378_curclass, "$!pos"
    lt $I11, 0, rx1378_fail2953
    nqp_rxmark rx1378_bstack, rxsubrule1382_pass2964, -1, 0
  rxsubrule1382_pass2964:
    rx1378_cstack = rx1378_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1378_pos, $P11, rx1378_curclass, "$!pos"
    goto alt1380_end2960
  alt1380_end2960:
    rx1378_cur."!cursor_pass"(rx1378_pos, "value", 'backtrack'=>1)
    .return (rx1378_cur)
  rx1378_restart2952:
    repr_get_attr_obj rx1378_cstack, rx1378_cur, rx1378_curclass, "$!cstack"
  rx1378_fail2953:
    unless rx1378_bstack, rx1378_done2951
    pop $I19, rx1378_bstack
    if_null rx1378_cstack, rx1378_cstack_done2956
    unless rx1378_cstack, rx1378_cstack_done2956
    dec $I19
    set $P11, rx1378_cstack[$I19]
  rx1378_cstack_done2956:
    pop rx1378_rep, rx1378_bstack
    pop rx1378_pos, rx1378_bstack
    pop $I19, rx1378_bstack
    lt rx1378_pos, -1, rx1378_done2951
    lt rx1378_pos, 0, rx1378_fail2953
    eq $I19, 0, rx1378_fail2953
    nqp_islist $I20, rx1378_cstack
    unless $I20, rx1378_jump2954
    elements $I18, rx1378_bstack
    le $I18, 0, rx1378_cut2955
    dec $I18
    set $I18, rx1378_bstack[$I18]
  rx1378_cut2955:
    assign rx1378_cstack, $I18
  rx1378_jump2954:
    jump $I19
  rx1378_done2951:
    rx1378_cur."!cursor_fail"()
    .return (rx1378_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_155_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1286
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1383_start
    .local string rx1383_tgt
    .local int rx1383_pos
    .local int rx1383_off
    .local int rx1383_eos
    .local int rx1383_rep
    .local pmc rx1383_cur
    .local pmc rx1383_curclass
    .local pmc rx1383_bstack
    .local pmc rx1383_cstack
    rx1383_start = self."!cursor_start_all"()
    set rx1383_cur, rx1383_start[0]
    set rx1383_tgt, rx1383_start[1]
    set rx1383_pos, rx1383_start[2]
    set rx1383_curclass, rx1383_start[3]
    set rx1383_bstack, rx1383_start[4]
    set $I19, rx1383_start[5]
    store_lex unicode:"$\x{a2}", rx1383_cur
    length rx1383_eos, rx1383_tgt
    eq $I19, 1, rx1383_restart2967
    gt rx1383_pos, rx1383_eos, rx1383_fail2968
    repr_get_attr_int $I11, self, rx1383_curclass, "$!from"
    ne $I11, -1, rxscan1384_done2974
    goto rxscan1384_scan2973
  rxscan1384_loop2972:
    inc rx1383_pos
    gt rx1383_pos, rx1383_eos, rx1383_fail2968
    repr_bind_attr_int rx1383_cur, rx1383_curclass, "$!from", rx1383_pos
  rxscan1384_scan2973:
    nqp_rxmark rx1383_bstack, rxscan1384_loop2972, rx1383_pos, 0
  rxscan1384_done2974:
    nqp_rxmark rx1383_bstack, rxcap1385_fail2976, rx1383_pos, 0
    nqp_rxmark rx1383_bstack, rxquantr1386_done2978, rx1383_pos, 0
  rxquantr1386_loop2977:
    ge rx1383_pos, rx1383_eos, rx1383_fail2968
    substr $S11, rx1383_tgt, rx1383_pos, 1
    index $I11, ucs4:"+-", $S11
    lt $I11, 0, rx1383_fail2968
    inc rx1383_pos
    nqp_rxpeek $I19, rx1383_bstack, rxquantr1386_done2978
    inc $I19
    inc $I19
    set rx1383_rep, rx1383_bstack[$I19]
    nqp_rxcommit rx1383_bstack, rxquantr1386_done2978
    inc rx1383_rep
  rxquantr1386_done2978:
    nqp_rxpeek $I19, rx1383_bstack, rxcap1385_fail2976
    inc $I19
    set $I11, rx1383_bstack[$I19]
    repr_bind_attr_int rx1383_cur, rx1383_curclass, "$!pos", rx1383_pos
    $P11 = rx1383_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1383_pos)
    rx1383_cstack = rx1383_cur."!cursor_capture"($P11, "sign")
    goto rxcap1385_done2975
  rxcap1385_fail2976:
    goto rx1383_fail2968
  rxcap1385_done2975:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1387_02980
    nqp_push_label $P11, alt1387_12982
    nqp_rxmark rx1383_bstack, alt1387_end2979, -1, 0
    rx1383_cur."!alt"(rx1383_pos, "alt_nfa__38_1381281832.09019", $P11)
    goto rx1383_fail2968
  alt1387_02980:
    repr_bind_attr_int rx1383_cur, rx1383_curclass, "$!pos", rx1383_pos
    $P11 = rx1383_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1383_curclass, "$!pos"
    lt $I11, 0, rx1383_fail2968
    nqp_rxmark rx1383_bstack, rxsubrule1388_pass2981, -1, 0
  rxsubrule1388_pass2981:
    rx1383_cstack = rx1383_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1383_pos, $P11, rx1383_curclass, "$!pos"
    goto alt1387_end2979
  alt1387_12982:
    repr_bind_attr_int rx1383_cur, rx1383_curclass, "$!pos", rx1383_pos
    $P11 = rx1383_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1383_curclass, "$!pos"
    lt $I11, 0, rx1383_fail2968
    nqp_rxmark rx1383_bstack, rxsubrule1389_pass2983, -1, 0
  rxsubrule1389_pass2983:
    rx1383_cstack = rx1383_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1383_pos, $P11, rx1383_curclass, "$!pos"
    goto alt1387_end2979
  alt1387_end2979:
    nqp_rxcommit rx1383_bstack, alt1387_end2979
    rx1383_cur."!cursor_pass"(rx1383_pos, "number", 'backtrack'=>1)
    .return (rx1383_cur)
  rx1383_restart2967:
    repr_get_attr_obj rx1383_cstack, rx1383_cur, rx1383_curclass, "$!cstack"
  rx1383_fail2968:
    unless rx1383_bstack, rx1383_done2966
    pop $I19, rx1383_bstack
    if_null rx1383_cstack, rx1383_cstack_done2971
    unless rx1383_cstack, rx1383_cstack_done2971
    dec $I19
    set $P11, rx1383_cstack[$I19]
  rx1383_cstack_done2971:
    pop rx1383_rep, rx1383_bstack
    pop rx1383_pos, rx1383_bstack
    pop $I19, rx1383_bstack
    lt rx1383_pos, -1, rx1383_done2966
    lt rx1383_pos, 0, rx1383_fail2968
    eq $I19, 0, rx1383_fail2968
    nqp_islist $I20, rx1383_cstack
    unless $I20, rx1383_jump2969
    elements $I18, rx1383_bstack
    le $I18, 0, rx1383_cut2970
    dec $I18
    set $I18, rx1383_bstack[$I18]
  rx1383_cut2970:
    assign rx1383_cstack, $I18
  rx1383_jump2969:
    jump $I19
  rx1383_done2966:
    rx1383_cur."!cursor_fail"()
    .return (rx1383_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_156_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1291
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_157_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1292
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1390_start
    .local string rx1390_tgt
    .local int rx1390_pos
    .local int rx1390_off
    .local int rx1390_eos
    .local int rx1390_rep
    .local pmc rx1390_cur
    .local pmc rx1390_curclass
    .local pmc rx1390_bstack
    .local pmc rx1390_cstack
    rx1390_start = self."!cursor_start_all"()
    set rx1390_cur, rx1390_start[0]
    set rx1390_tgt, rx1390_start[1]
    set rx1390_pos, rx1390_start[2]
    set rx1390_curclass, rx1390_start[3]
    set rx1390_bstack, rx1390_start[4]
    set $I19, rx1390_start[5]
    store_lex unicode:"$\x{a2}", rx1390_cur
    length rx1390_eos, rx1390_tgt
    eq $I19, 1, rx1390_restart2986
    gt rx1390_pos, rx1390_eos, rx1390_fail2987
    repr_get_attr_int $I11, self, rx1390_curclass, "$!from"
    ne $I11, -1, rxscan1391_done2993
    goto rxscan1391_scan2992
  rxscan1391_loop2991:
    inc rx1390_pos
    gt rx1390_pos, rx1390_eos, rx1390_fail2987
    repr_bind_attr_int rx1390_cur, rx1390_curclass, "$!from", rx1390_pos
  rxscan1391_scan2992:
    nqp_rxmark rx1390_bstack, rxscan1391_loop2991, rx1390_pos, 0
  rxscan1391_done2993:
    ge rx1390_pos, rx1390_eos, rx1390_fail2987
    substr $S11, rx1390_tgt, rx1390_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1390_fail2987
    repr_bind_attr_int rx1390_cur, rx1390_curclass, "$!pos", rx1390_pos
    $P11 = rx1390_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1390_curclass, "$!pos"
    lt $I11, 0, rx1390_fail2987
    nqp_rxmark rx1390_bstack, rxsubrule1392_pass2994, -1, 0
  rxsubrule1392_pass2994:
    rx1390_cstack = rx1390_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1390_pos, $P11, rx1390_curclass, "$!pos"
    rx1390_cur."!cursor_pass"(rx1390_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1390_cur)
  rx1390_restart2986:
    repr_get_attr_obj rx1390_cstack, rx1390_cur, rx1390_curclass, "$!cstack"
  rx1390_fail2987:
    unless rx1390_bstack, rx1390_done2985
    pop $I19, rx1390_bstack
    if_null rx1390_cstack, rx1390_cstack_done2990
    unless rx1390_cstack, rx1390_cstack_done2990
    dec $I19
    set $P11, rx1390_cstack[$I19]
  rx1390_cstack_done2990:
    pop rx1390_rep, rx1390_bstack
    pop rx1390_pos, rx1390_bstack
    pop $I19, rx1390_bstack
    lt rx1390_pos, -1, rx1390_done2985
    lt rx1390_pos, 0, rx1390_fail2987
    eq $I19, 0, rx1390_fail2987
    nqp_islist $I20, rx1390_cstack
    unless $I20, rx1390_jump2988
    elements $I18, rx1390_bstack
    le $I18, 0, rx1390_cut2989
    dec $I18
    set $I18, rx1390_bstack[$I18]
  rx1390_cut2989:
    assign rx1390_cstack, $I18
  rx1390_jump2988:
    jump $I19
  rx1390_done2985:
    rx1390_cur."!cursor_fail"()
    .return (rx1390_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_158_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1293
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1393_start
    .local string rx1393_tgt
    .local int rx1393_pos
    .local int rx1393_off
    .local int rx1393_eos
    .local int rx1393_rep
    .local pmc rx1393_cur
    .local pmc rx1393_curclass
    .local pmc rx1393_bstack
    .local pmc rx1393_cstack
    rx1393_start = self."!cursor_start_all"()
    set rx1393_cur, rx1393_start[0]
    set rx1393_tgt, rx1393_start[1]
    set rx1393_pos, rx1393_start[2]
    set rx1393_curclass, rx1393_start[3]
    set rx1393_bstack, rx1393_start[4]
    set $I19, rx1393_start[5]
    store_lex unicode:"$\x{a2}", rx1393_cur
    length rx1393_eos, rx1393_tgt
    eq $I19, 1, rx1393_restart2997
    gt rx1393_pos, rx1393_eos, rx1393_fail2998
    repr_get_attr_int $I11, self, rx1393_curclass, "$!from"
    ne $I11, -1, rxscan1394_done3004
    goto rxscan1394_scan3003
  rxscan1394_loop3002:
    inc rx1393_pos
    gt rx1393_pos, rx1393_eos, rx1393_fail2998
    repr_bind_attr_int rx1393_cur, rx1393_curclass, "$!from", rx1393_pos
  rxscan1394_scan3003:
    nqp_rxmark rx1393_bstack, rxscan1394_loop3002, rx1393_pos, 0
  rxscan1394_done3004:
    ge rx1393_pos, rx1393_eos, rx1393_fail2998
    substr $S11, rx1393_tgt, rx1393_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1393_fail2998
    repr_bind_attr_int rx1393_cur, rx1393_curclass, "$!pos", rx1393_pos
    $P11 = rx1393_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1393_curclass, "$!pos"
    lt $I11, 0, rx1393_fail2998
    nqp_rxmark rx1393_bstack, rxsubrule1395_pass3005, -1, 0
  rxsubrule1395_pass3005:
    rx1393_cstack = rx1393_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1393_pos, $P11, rx1393_curclass, "$!pos"
    rx1393_cur."!cursor_pass"(rx1393_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1393_cur)
  rx1393_restart2997:
    repr_get_attr_obj rx1393_cstack, rx1393_cur, rx1393_curclass, "$!cstack"
  rx1393_fail2998:
    unless rx1393_bstack, rx1393_done2996
    pop $I19, rx1393_bstack
    if_null rx1393_cstack, rx1393_cstack_done3001
    unless rx1393_cstack, rx1393_cstack_done3001
    dec $I19
    set $P11, rx1393_cstack[$I19]
  rx1393_cstack_done3001:
    pop rx1393_rep, rx1393_bstack
    pop rx1393_pos, rx1393_bstack
    pop $I19, rx1393_bstack
    lt rx1393_pos, -1, rx1393_done2996
    lt rx1393_pos, 0, rx1393_fail2998
    eq $I19, 0, rx1393_fail2998
    nqp_islist $I20, rx1393_cstack
    unless $I20, rx1393_jump2999
    elements $I18, rx1393_bstack
    le $I18, 0, rx1393_cut3000
    dec $I18
    set $I18, rx1393_bstack[$I18]
  rx1393_cut3000:
    assign rx1393_cstack, $I18
  rx1393_jump2999:
    jump $I19
  rx1393_done2996:
    rx1393_cur."!cursor_fail"()
    .return (rx1393_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_159_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1294
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1396_start
    .local string rx1396_tgt
    .local int rx1396_pos
    .local int rx1396_off
    .local int rx1396_eos
    .local int rx1396_rep
    .local pmc rx1396_cur
    .local pmc rx1396_curclass
    .local pmc rx1396_bstack
    .local pmc rx1396_cstack
    rx1396_start = self."!cursor_start_all"()
    set rx1396_cur, rx1396_start[0]
    set rx1396_tgt, rx1396_start[1]
    set rx1396_pos, rx1396_start[2]
    set rx1396_curclass, rx1396_start[3]
    set rx1396_bstack, rx1396_start[4]
    set $I19, rx1396_start[5]
    store_lex unicode:"$\x{a2}", rx1396_cur
    length rx1396_eos, rx1396_tgt
    eq $I19, 1, rx1396_restart3008
    gt rx1396_pos, rx1396_eos, rx1396_fail3009
    repr_get_attr_int $I11, self, rx1396_curclass, "$!from"
    ne $I11, -1, rxscan1397_done3015
    goto rxscan1397_scan3014
  rxscan1397_loop3013:
    inc rx1396_pos
    gt rx1396_pos, rx1396_eos, rx1396_fail3009
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!from", rx1396_pos
  rxscan1397_scan3014:
    nqp_rxmark rx1396_bstack, rxscan1397_loop3013, rx1396_pos, 0
  rxscan1397_done3015:
    nqp_rxmark rx1396_bstack, rxcap1398_fail3017, rx1396_pos, 0
    add $I11, rx1396_pos, 1
    gt $I11, rx1396_eos, rx1396_fail3009
    substr $S10, rx1396_tgt, rx1396_pos, 1
    ne $S10, ucs4:"q", rx1396_fail3009
    add rx1396_pos, 1
    nqp_rxpeek $I19, rx1396_bstack, rxcap1398_fail3017
    inc $I19
    set $I11, rx1396_bstack[$I19]
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1396_pos)
    rx1396_cstack = rx1396_cur."!cursor_capture"($P11, "sym")
    goto rxcap1398_done3016
  rxcap1398_fail3017:
    goto rx1396_fail3009
  rxcap1398_done3016:
    le rx1396_pos, 0, rx1396_fail3009
    is_cclass $I11, .CCLASS_WORD, rx1396_tgt, rx1396_pos
    if $I11, rx1396_fail3009
    sub $I11, rx1396_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1396_tgt, $I11
    unless $I11, rx1396_fail3009
    ge rx1396_pos, rx1396_eos, rx1396_fail3009
    substr $S11, rx1396_tgt, rx1396_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1396_fail3009
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    lt $I11, 0, rx1396_fail3009
    repr_get_attr_int rx1396_pos, $P11, rx1396_curclass, "$!pos"
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    lt $I11, 0, rx1396_fail3009
    nqp_rxmark rx1396_bstack, rxsubrule1401_pass3020, -1, 0
  rxsubrule1401_pass3020:
    rx1396_cstack = rx1396_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1396_pos, $P11, rx1396_curclass, "$!pos"
    rx1396_cur."!cursor_pass"(rx1396_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1396_cur)
  rx1396_restart3008:
    repr_get_attr_obj rx1396_cstack, rx1396_cur, rx1396_curclass, "$!cstack"
  rx1396_fail3009:
    unless rx1396_bstack, rx1396_done3007
    pop $I19, rx1396_bstack
    if_null rx1396_cstack, rx1396_cstack_done3012
    unless rx1396_cstack, rx1396_cstack_done3012
    dec $I19
    set $P11, rx1396_cstack[$I19]
  rx1396_cstack_done3012:
    pop rx1396_rep, rx1396_bstack
    pop rx1396_pos, rx1396_bstack
    pop $I19, rx1396_bstack
    lt rx1396_pos, -1, rx1396_done3007
    lt rx1396_pos, 0, rx1396_fail3009
    eq $I19, 0, rx1396_fail3009
    nqp_islist $I20, rx1396_cstack
    unless $I20, rx1396_jump3010
    elements $I18, rx1396_bstack
    le $I18, 0, rx1396_cut3011
    dec $I18
    set $I18, rx1396_bstack[$I18]
  rx1396_cut3011:
    assign rx1396_cstack, $I18
  rx1396_jump3010:
    jump $I19
  rx1396_done3007:
    rx1396_cur."!cursor_fail"()
    .return (rx1396_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_160_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1295
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1402_start
    .local string rx1402_tgt
    .local int rx1402_pos
    .local int rx1402_off
    .local int rx1402_eos
    .local int rx1402_rep
    .local pmc rx1402_cur
    .local pmc rx1402_curclass
    .local pmc rx1402_bstack
    .local pmc rx1402_cstack
    rx1402_start = self."!cursor_start_all"()
    set rx1402_cur, rx1402_start[0]
    set rx1402_tgt, rx1402_start[1]
    set rx1402_pos, rx1402_start[2]
    set rx1402_curclass, rx1402_start[3]
    set rx1402_bstack, rx1402_start[4]
    set $I19, rx1402_start[5]
    store_lex unicode:"$\x{a2}", rx1402_cur
    length rx1402_eos, rx1402_tgt
    eq $I19, 1, rx1402_restart3023
    gt rx1402_pos, rx1402_eos, rx1402_fail3024
    repr_get_attr_int $I11, self, rx1402_curclass, "$!from"
    ne $I11, -1, rxscan1403_done3030
    goto rxscan1403_scan3029
  rxscan1403_loop3028:
    inc rx1402_pos
    gt rx1402_pos, rx1402_eos, rx1402_fail3024
    repr_bind_attr_int rx1402_cur, rx1402_curclass, "$!from", rx1402_pos
  rxscan1403_scan3029:
    nqp_rxmark rx1402_bstack, rxscan1403_loop3028, rx1402_pos, 0
  rxscan1403_done3030:
    nqp_rxmark rx1402_bstack, rxcap1404_fail3032, rx1402_pos, 0
    add $I11, rx1402_pos, 2
    gt $I11, rx1402_eos, rx1402_fail3024
    substr $S10, rx1402_tgt, rx1402_pos, 2
    ne $S10, ucs4:"qq", rx1402_fail3024
    add rx1402_pos, 2
    nqp_rxpeek $I19, rx1402_bstack, rxcap1404_fail3032
    inc $I19
    set $I11, rx1402_bstack[$I19]
    repr_bind_attr_int rx1402_cur, rx1402_curclass, "$!pos", rx1402_pos
    $P11 = rx1402_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1402_pos)
    rx1402_cstack = rx1402_cur."!cursor_capture"($P11, "sym")
    goto rxcap1404_done3031
  rxcap1404_fail3032:
    goto rx1402_fail3024
  rxcap1404_done3031:
    le rx1402_pos, 0, rx1402_fail3024
    is_cclass $I11, .CCLASS_WORD, rx1402_tgt, rx1402_pos
    if $I11, rx1402_fail3024
    sub $I11, rx1402_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1402_tgt, $I11
    unless $I11, rx1402_fail3024
    ge rx1402_pos, rx1402_eos, rx1402_fail3024
    substr $S11, rx1402_tgt, rx1402_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1402_fail3024
    repr_bind_attr_int rx1402_cur, rx1402_curclass, "$!pos", rx1402_pos
    $P11 = rx1402_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1402_curclass, "$!pos"
    lt $I11, 0, rx1402_fail3024
    repr_get_attr_int rx1402_pos, $P11, rx1402_curclass, "$!pos"
    repr_bind_attr_int rx1402_cur, rx1402_curclass, "$!pos", rx1402_pos
    $P11 = rx1402_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1402_curclass, "$!pos"
    lt $I11, 0, rx1402_fail3024
    nqp_rxmark rx1402_bstack, rxsubrule1407_pass3035, -1, 0
  rxsubrule1407_pass3035:
    rx1402_cstack = rx1402_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1402_pos, $P11, rx1402_curclass, "$!pos"
    rx1402_cur."!cursor_pass"(rx1402_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1402_cur)
  rx1402_restart3023:
    repr_get_attr_obj rx1402_cstack, rx1402_cur, rx1402_curclass, "$!cstack"
  rx1402_fail3024:
    unless rx1402_bstack, rx1402_done3022
    pop $I19, rx1402_bstack
    if_null rx1402_cstack, rx1402_cstack_done3027
    unless rx1402_cstack, rx1402_cstack_done3027
    dec $I19
    set $P11, rx1402_cstack[$I19]
  rx1402_cstack_done3027:
    pop rx1402_rep, rx1402_bstack
    pop rx1402_pos, rx1402_bstack
    pop $I19, rx1402_bstack
    lt rx1402_pos, -1, rx1402_done3022
    lt rx1402_pos, 0, rx1402_fail3024
    eq $I19, 0, rx1402_fail3024
    nqp_islist $I20, rx1402_cstack
    unless $I20, rx1402_jump3025
    elements $I18, rx1402_bstack
    le $I18, 0, rx1402_cut3026
    dec $I18
    set $I18, rx1402_bstack[$I18]
  rx1402_cut3026:
    assign rx1402_cstack, $I18
  rx1402_jump3025:
    jump $I19
  rx1402_done3022:
    rx1402_cur."!cursor_fail"()
    .return (rx1402_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_161_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1408_start
    .local string rx1408_tgt
    .local int rx1408_pos
    .local int rx1408_off
    .local int rx1408_eos
    .local int rx1408_rep
    .local pmc rx1408_cur
    .local pmc rx1408_curclass
    .local pmc rx1408_bstack
    .local pmc rx1408_cstack
    rx1408_start = self."!cursor_start_all"()
    set rx1408_cur, rx1408_start[0]
    set rx1408_tgt, rx1408_start[1]
    set rx1408_pos, rx1408_start[2]
    set rx1408_curclass, rx1408_start[3]
    set rx1408_bstack, rx1408_start[4]
    set $I19, rx1408_start[5]
    store_lex unicode:"$\x{a2}", rx1408_cur
    length rx1408_eos, rx1408_tgt
    eq $I19, 1, rx1408_restart3038
    gt rx1408_pos, rx1408_eos, rx1408_fail3039
    repr_get_attr_int $I11, self, rx1408_curclass, "$!from"
    ne $I11, -1, rxscan1409_done3045
    goto rxscan1409_scan3044
  rxscan1409_loop3043:
    inc rx1408_pos
    gt rx1408_pos, rx1408_eos, rx1408_fail3039
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!from", rx1408_pos
  rxscan1409_scan3044:
    nqp_rxmark rx1408_bstack, rxscan1409_loop3043, rx1408_pos, 0
  rxscan1409_done3045:
    nqp_rxmark rx1408_bstack, rxcap1410_fail3047, rx1408_pos, 0
    add $I11, rx1408_pos, 1
    gt $I11, rx1408_eos, rx1408_fail3039
    substr $S10, rx1408_tgt, rx1408_pos, 1
    ne $S10, ucs4:"Q", rx1408_fail3039
    add rx1408_pos, 1
    nqp_rxpeek $I19, rx1408_bstack, rxcap1410_fail3047
    inc $I19
    set $I11, rx1408_bstack[$I19]
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1408_pos)
    rx1408_cstack = rx1408_cur."!cursor_capture"($P11, "sym")
    goto rxcap1410_done3046
  rxcap1410_fail3047:
    goto rx1408_fail3039
  rxcap1410_done3046:
    le rx1408_pos, 0, rx1408_fail3039
    is_cclass $I11, .CCLASS_WORD, rx1408_tgt, rx1408_pos
    if $I11, rx1408_fail3039
    sub $I11, rx1408_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1408_tgt, $I11
    unless $I11, rx1408_fail3039
    ge rx1408_pos, rx1408_eos, rx1408_fail3039
    substr $S11, rx1408_tgt, rx1408_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1408_fail3039
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail3039
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail3039
    nqp_rxmark rx1408_bstack, rxsubrule1413_pass3050, -1, 0
  rxsubrule1413_pass3050:
    rx1408_cstack = rx1408_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    rx1408_cur."!cursor_pass"(rx1408_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1408_cur)
  rx1408_restart3038:
    repr_get_attr_obj rx1408_cstack, rx1408_cur, rx1408_curclass, "$!cstack"
  rx1408_fail3039:
    unless rx1408_bstack, rx1408_done3037
    pop $I19, rx1408_bstack
    if_null rx1408_cstack, rx1408_cstack_done3042
    unless rx1408_cstack, rx1408_cstack_done3042
    dec $I19
    set $P11, rx1408_cstack[$I19]
  rx1408_cstack_done3042:
    pop rx1408_rep, rx1408_bstack
    pop rx1408_pos, rx1408_bstack
    pop $I19, rx1408_bstack
    lt rx1408_pos, -1, rx1408_done3037
    lt rx1408_pos, 0, rx1408_fail3039
    eq $I19, 0, rx1408_fail3039
    nqp_islist $I20, rx1408_cstack
    unless $I20, rx1408_jump3040
    elements $I18, rx1408_bstack
    le $I18, 0, rx1408_cut3041
    dec $I18
    set $I18, rx1408_bstack[$I18]
  rx1408_cut3041:
    assign rx1408_cstack, $I18
  rx1408_jump3040:
    jump $I19
  rx1408_done3037:
    rx1408_cur."!cursor_fail"()
    .return (rx1408_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_162_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1297
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1414_start
    .local string rx1414_tgt
    .local int rx1414_pos
    .local int rx1414_off
    .local int rx1414_eos
    .local int rx1414_rep
    .local pmc rx1414_cur
    .local pmc rx1414_curclass
    .local pmc rx1414_bstack
    .local pmc rx1414_cstack
    rx1414_start = self."!cursor_start_all"()
    set rx1414_cur, rx1414_start[0]
    set rx1414_tgt, rx1414_start[1]
    set rx1414_pos, rx1414_start[2]
    set rx1414_curclass, rx1414_start[3]
    set rx1414_bstack, rx1414_start[4]
    set $I19, rx1414_start[5]
    store_lex unicode:"$\x{a2}", rx1414_cur
    length rx1414_eos, rx1414_tgt
    eq $I19, 1, rx1414_restart3053
    gt rx1414_pos, rx1414_eos, rx1414_fail3054
    repr_get_attr_int $I11, self, rx1414_curclass, "$!from"
    ne $I11, -1, rxscan1415_done3060
    goto rxscan1415_scan3059
  rxscan1415_loop3058:
    inc rx1414_pos
    gt rx1414_pos, rx1414_eos, rx1414_fail3054
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!from", rx1414_pos
  rxscan1415_scan3059:
    nqp_rxmark rx1414_bstack, rxscan1415_loop3058, rx1414_pos, 0
  rxscan1415_done3060:
    nqp_rxmark rx1414_bstack, rxcap1416_fail3062, rx1414_pos, 0
    add $I11, rx1414_pos, 5
    gt $I11, rx1414_eos, rx1414_fail3054
    substr $S10, rx1414_tgt, rx1414_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1414_fail3054
    add rx1414_pos, 5
    nqp_rxpeek $I19, rx1414_bstack, rxcap1416_fail3062
    inc $I19
    set $I11, rx1414_bstack[$I19]
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!pos", rx1414_pos
    $P11 = rx1414_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1414_pos)
    rx1414_cstack = rx1414_cur."!cursor_capture"($P11, "sym")
    goto rxcap1416_done3061
  rxcap1416_fail3062:
    goto rx1414_fail3054
  rxcap1416_done3061:
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!pos", rx1414_pos
    $P11 = rx1414_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1414_curclass, "$!pos"
    lt $I11, 0, rx1414_fail3054
    repr_get_attr_int rx1414_pos, $P11, rx1414_curclass, "$!pos"
    repr_bind_attr_int rx1414_cur, rx1414_curclass, "$!pos", rx1414_pos
    $P11 = rx1414_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1414_curclass, "$!pos"
    lt $I11, 0, rx1414_fail3054
    nqp_rxmark rx1414_bstack, rxsubrule1418_pass3064, -1, 0
  rxsubrule1418_pass3064:
    rx1414_cstack = rx1414_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1414_pos, $P11, rx1414_curclass, "$!pos"
    rx1414_cur."!cursor_pass"(rx1414_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1414_cur)
  rx1414_restart3053:
    repr_get_attr_obj rx1414_cstack, rx1414_cur, rx1414_curclass, "$!cstack"
  rx1414_fail3054:
    unless rx1414_bstack, rx1414_done3052
    pop $I19, rx1414_bstack
    if_null rx1414_cstack, rx1414_cstack_done3057
    unless rx1414_cstack, rx1414_cstack_done3057
    dec $I19
    set $P11, rx1414_cstack[$I19]
  rx1414_cstack_done3057:
    pop rx1414_rep, rx1414_bstack
    pop rx1414_pos, rx1414_bstack
    pop $I19, rx1414_bstack
    lt rx1414_pos, -1, rx1414_done3052
    lt rx1414_pos, 0, rx1414_fail3054
    eq $I19, 0, rx1414_fail3054
    nqp_islist $I20, rx1414_cstack
    unless $I20, rx1414_jump3055
    elements $I18, rx1414_bstack
    le $I18, 0, rx1414_cut3056
    dec $I18
    set $I18, rx1414_bstack[$I18]
  rx1414_cut3056:
    assign rx1414_cstack, $I18
  rx1414_jump3055:
    jump $I19
  rx1414_done3052:
    rx1414_cur."!cursor_fail"()
    .return (rx1414_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_163_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1298
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_183 
    .local pmc pkg_viv_tmp_32 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1419_start
    .local string rx1419_tgt
    .local int rx1419_pos
    .local int rx1419_off
    .local int rx1419_eos
    .local int rx1419_rep
    .local pmc rx1419_cur
    .local pmc rx1419_curclass
    .local pmc rx1419_bstack
    .local pmc rx1419_cstack
    rx1419_start = self."!cursor_start_all"()
    set rx1419_cur, rx1419_start[0]
    set rx1419_tgt, rx1419_start[1]
    set rx1419_pos, rx1419_start[2]
    set rx1419_curclass, rx1419_start[3]
    set rx1419_bstack, rx1419_start[4]
    set $I19, rx1419_start[5]
    store_lex unicode:"$\x{a2}", rx1419_cur
    length rx1419_eos, rx1419_tgt
    eq $I19, 1, rx1419_restart3067
    gt rx1419_pos, rx1419_eos, rx1419_fail3068
    repr_get_attr_int $I11, self, rx1419_curclass, "$!from"
    ne $I11, -1, rxscan1420_done3074
    goto rxscan1420_scan3073
  rxscan1420_loop3072:
    inc rx1419_pos
    gt rx1419_pos, rx1419_eos, rx1419_fail3068
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!from", rx1419_pos
  rxscan1420_scan3073:
    nqp_rxmark rx1419_bstack, rxscan1420_loop3072, rx1419_pos, 0
  rxscan1420_done3074:
    add $I11, rx1419_pos, 1
    gt $I11, rx1419_eos, rx1419_fail3068
    substr $S10, rx1419_tgt, rx1419_pos, 1
    ne $S10, ucs4:"/", rx1419_fail3068
    add rx1419_pos, 1
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!pos", rx1419_pos
    $P11 = rx1419_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1419_curclass, "$!pos"
    lt $I11, 0, rx1419_fail3068
    repr_get_attr_int rx1419_pos, $P11, rx1419_curclass, "$!pos"
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!pos", rx1419_pos
    store_lex unicode:"$\x{a2}", rx1419_cur
    unless_null $P101, fallback3076
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_32, $P5002
    set fb_tmp_183, pkg_viv_tmp_32
    repr_defined $I5001, fb_tmp_183
    unless $I5001 goto if1422_else3077 
    set $P5004, fb_tmp_183["%RX"]
    set $P5006, $P5004
    goto if1422_end3078
  if1422_else3077:
    null $P5005
    set $P5006, $P5005
  if1422_end3078:
    unless_null $P5006, vivi_14233079
    new $P5007, 'Hash'
    set pkg_viv_tmp_32["%RX"], $P5007
    set $P5006, $P5007
  vivi_14233079:
    unless_null $P5006, vivi_14243080
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_14243080:
    set $P101, $P5006
  fallback3076:
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!pos", rx1419_pos
    $P11 = rx1419_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1419_curclass, "$!pos"
    lt $I11, 0, rx1419_fail3068
    nqp_rxmark rx1419_bstack, rxsubrule1425_pass3081, -1, 0
  rxsubrule1425_pass3081:
    rx1419_cstack = rx1419_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1419_pos, $P11, rx1419_curclass, "$!pos"
    add $I11, rx1419_pos, 1
    gt $I11, rx1419_eos, rx1419_fail3068
    substr $S10, rx1419_tgt, rx1419_pos, 1
    ne $S10, ucs4:"/", rx1419_fail3068
    add rx1419_pos, 1
    rx1419_cur."!cursor_pass"(rx1419_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1419_cur)
  rx1419_restart3067:
    repr_get_attr_obj rx1419_cstack, rx1419_cur, rx1419_curclass, "$!cstack"
  rx1419_fail3068:
    unless rx1419_bstack, rx1419_done3066
    pop $I19, rx1419_bstack
    if_null rx1419_cstack, rx1419_cstack_done3071
    unless rx1419_cstack, rx1419_cstack_done3071
    dec $I19
    set $P11, rx1419_cstack[$I19]
  rx1419_cstack_done3071:
    pop rx1419_rep, rx1419_bstack
    pop rx1419_pos, rx1419_bstack
    pop $I19, rx1419_bstack
    lt rx1419_pos, -1, rx1419_done3066
    lt rx1419_pos, 0, rx1419_fail3068
    eq $I19, 0, rx1419_fail3068
    nqp_islist $I20, rx1419_cstack
    unless $I20, rx1419_jump3069
    elements $I18, rx1419_bstack
    le $I18, 0, rx1419_cut3070
    dec $I18
    set $I18, rx1419_bstack[$I18]
  rx1419_cut3070:
    assign rx1419_cstack, $I18
  rx1419_jump3069:
    jump $I19
  rx1419_done3066:
    rx1419_cur."!cursor_fail"()
    .return (rx1419_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_164_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1306
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1426_start
    .local string rx1426_tgt
    .local int rx1426_pos
    .local int rx1426_off
    .local int rx1426_eos
    .local int rx1426_rep
    .local pmc rx1426_cur
    .local pmc rx1426_curclass
    .local pmc rx1426_bstack
    .local pmc rx1426_cstack
    rx1426_start = self."!cursor_start_all"()
    set rx1426_cur, rx1426_start[0]
    set rx1426_tgt, rx1426_start[1]
    set rx1426_pos, rx1426_start[2]
    set rx1426_curclass, rx1426_start[3]
    set rx1426_bstack, rx1426_start[4]
    set $I19, rx1426_start[5]
    store_lex unicode:"$\x{a2}", rx1426_cur
    length rx1426_eos, rx1426_tgt
    eq $I19, 1, rx1426_restart3084
    gt rx1426_pos, rx1426_eos, rx1426_fail3085
    repr_get_attr_int $I11, self, rx1426_curclass, "$!from"
    ne $I11, -1, rxscan1427_done3091
    goto rxscan1427_scan3090
  rxscan1427_loop3089:
    inc rx1426_pos
    gt rx1426_pos, rx1426_eos, rx1426_fail3085
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!from", rx1426_pos
  rxscan1427_scan3090:
    nqp_rxmark rx1426_bstack, rxscan1427_loop3089, rx1426_pos, 0
  rxscan1427_done3091:
    ge rx1426_pos, rx1426_eos, rx1426_fail3085
    substr $S11, rx1426_tgt, rx1426_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1426_fail3085
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!pos", rx1426_pos
    $P11 = rx1426_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1426_curclass, "$!pos"
    lt $I11, 0, rx1426_fail3085
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!pos", rx1426_pos
    $P11 = rx1426_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1426_curclass, "$!pos"
    lt $I11, 0, rx1426_fail3085
    nqp_rxmark rx1426_bstack, rxsubrule1428_pass3092, -1, 0
  rxsubrule1428_pass3092:
    rx1426_cstack = rx1426_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1426_pos, $P11, rx1426_curclass, "$!pos"
    rx1426_cur."!cursor_pass"(rx1426_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1426_cur)
  rx1426_restart3084:
    repr_get_attr_obj rx1426_cstack, rx1426_cur, rx1426_curclass, "$!cstack"
  rx1426_fail3085:
    unless rx1426_bstack, rx1426_done3083
    pop $I19, rx1426_bstack
    if_null rx1426_cstack, rx1426_cstack_done3088
    unless rx1426_cstack, rx1426_cstack_done3088
    dec $I19
    set $P11, rx1426_cstack[$I19]
  rx1426_cstack_done3088:
    pop rx1426_rep, rx1426_bstack
    pop rx1426_pos, rx1426_bstack
    pop $I19, rx1426_bstack
    lt rx1426_pos, -1, rx1426_done3083
    lt rx1426_pos, 0, rx1426_fail3085
    eq $I19, 0, rx1426_fail3085
    nqp_islist $I20, rx1426_cstack
    unless $I20, rx1426_jump3086
    elements $I18, rx1426_bstack
    le $I18, 0, rx1426_cut3087
    dec $I18
    set $I18, rx1426_bstack[$I18]
  rx1426_cut3087:
    assign rx1426_cstack, $I18
  rx1426_jump3086:
    jump $I19
  rx1426_done3083:
    rx1426_cur."!cursor_fail"()
    .return (rx1426_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_165_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1307
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1429_start
    .local string rx1429_tgt
    .local int rx1429_pos
    .local int rx1429_off
    .local int rx1429_eos
    .local int rx1429_rep
    .local pmc rx1429_cur
    .local pmc rx1429_curclass
    .local pmc rx1429_bstack
    .local pmc rx1429_cstack
    rx1429_start = self."!cursor_start_all"()
    set rx1429_cur, rx1429_start[0]
    set rx1429_tgt, rx1429_start[1]
    set rx1429_pos, rx1429_start[2]
    set rx1429_curclass, rx1429_start[3]
    set rx1429_bstack, rx1429_start[4]
    set $I19, rx1429_start[5]
    store_lex unicode:"$\x{a2}", rx1429_cur
    length rx1429_eos, rx1429_tgt
    eq $I19, 1, rx1429_restart3095
    gt rx1429_pos, rx1429_eos, rx1429_fail3096
    repr_get_attr_int $I11, self, rx1429_curclass, "$!from"
    ne $I11, -1, rxscan1430_done3102
    goto rxscan1430_scan3101
  rxscan1430_loop3100:
    inc rx1429_pos
    gt rx1429_pos, rx1429_eos, rx1429_fail3096
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!from", rx1429_pos
  rxscan1430_scan3101:
    nqp_rxmark rx1429_bstack, rxscan1430_loop3100, rx1429_pos, 0
  rxscan1430_done3102:
    ge rx1429_pos, rx1429_eos, rx1429_fail3096
    substr $S11, rx1429_tgt, rx1429_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1429_fail3096
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!pos", rx1429_pos
    $P11 = rx1429_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1429_curclass, "$!pos"
    lt $I11, 0, rx1429_fail3096
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!pos", rx1429_pos
    $P11 = rx1429_cur."block"()
    repr_get_attr_int $I11, $P11, rx1429_curclass, "$!pos"
    lt $I11, 0, rx1429_fail3096
    nqp_rxmark rx1429_bstack, rxsubrule1431_pass3103, -1, 0
  rxsubrule1431_pass3103:
    rx1429_cstack = rx1429_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1429_pos, $P11, rx1429_curclass, "$!pos"
    rx1429_cur."!cursor_pass"(rx1429_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1429_cur)
  rx1429_restart3095:
    repr_get_attr_obj rx1429_cstack, rx1429_cur, rx1429_curclass, "$!cstack"
  rx1429_fail3096:
    unless rx1429_bstack, rx1429_done3094
    pop $I19, rx1429_bstack
    if_null rx1429_cstack, rx1429_cstack_done3099
    unless rx1429_cstack, rx1429_cstack_done3099
    dec $I19
    set $P11, rx1429_cstack[$I19]
  rx1429_cstack_done3099:
    pop rx1429_rep, rx1429_bstack
    pop rx1429_pos, rx1429_bstack
    pop $I19, rx1429_bstack
    lt rx1429_pos, -1, rx1429_done3094
    lt rx1429_pos, 0, rx1429_fail3096
    eq $I19, 0, rx1429_fail3096
    nqp_islist $I20, rx1429_cstack
    unless $I20, rx1429_jump3097
    elements $I18, rx1429_bstack
    le $I18, 0, rx1429_cut3098
    dec $I18
    set $I18, rx1429_bstack[$I18]
  rx1429_cut3098:
    assign rx1429_cstack, $I18
  rx1429_jump3097:
    jump $I19
  rx1429_done3094:
    rx1429_cur."!cursor_fail"()
    .return (rx1429_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_166_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1308
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1432_start
    .local string rx1432_tgt
    .local int rx1432_pos
    .local int rx1432_off
    .local int rx1432_eos
    .local int rx1432_rep
    .local pmc rx1432_cur
    .local pmc rx1432_curclass
    .local pmc rx1432_bstack
    .local pmc rx1432_cstack
    rx1432_start = self."!cursor_start_all"()
    set rx1432_cur, rx1432_start[0]
    set rx1432_tgt, rx1432_start[1]
    set rx1432_pos, rx1432_start[2]
    set rx1432_curclass, rx1432_start[3]
    set rx1432_bstack, rx1432_start[4]
    set $I19, rx1432_start[5]
    store_lex unicode:"$\x{a2}", rx1432_cur
    length rx1432_eos, rx1432_tgt
    eq $I19, 1, rx1432_restart3106
    gt rx1432_pos, rx1432_eos, rx1432_fail3107
    repr_get_attr_int $I11, self, rx1432_curclass, "$!from"
    ne $I11, -1, rxscan1433_done3113
    goto rxscan1433_scan3112
  rxscan1433_loop3111:
    inc rx1432_pos
    gt rx1432_pos, rx1432_eos, rx1432_fail3107
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!from", rx1432_pos
  rxscan1433_scan3112:
    nqp_rxmark rx1432_bstack, rxscan1433_loop3111, rx1432_pos, 0
  rxscan1433_done3113:
    ge rx1432_pos, rx1432_eos, rx1432_fail3107
    substr $S11, rx1432_tgt, rx1432_pos, 1
    index $I11, ucs4:"\\", $S11
    lt $I11, 0, rx1432_fail3107
    inc rx1432_pos
    add $I11, rx1432_pos, 1
    gt $I11, rx1432_eos, rx1432_fail3107
    substr $S10, rx1432_tgt, rx1432_pos, 1
    ne $S10, ucs4:"e", rx1432_fail3107
    add rx1432_pos, 1
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!pos", rx1432_pos
    $P11 = rx1432_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1432_curclass, "$!pos"
    lt $I11, 0, rx1432_fail3107
    rx1432_cur."!cursor_pass"(rx1432_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1432_cur)
  rx1432_restart3106:
    repr_get_attr_obj rx1432_cstack, rx1432_cur, rx1432_curclass, "$!cstack"
  rx1432_fail3107:
    unless rx1432_bstack, rx1432_done3105
    pop $I19, rx1432_bstack
    if_null rx1432_cstack, rx1432_cstack_done3110
    unless rx1432_cstack, rx1432_cstack_done3110
    dec $I19
    set $P11, rx1432_cstack[$I19]
  rx1432_cstack_done3110:
    pop rx1432_rep, rx1432_bstack
    pop rx1432_pos, rx1432_bstack
    pop $I19, rx1432_bstack
    lt rx1432_pos, -1, rx1432_done3105
    lt rx1432_pos, 0, rx1432_fail3107
    eq $I19, 0, rx1432_fail3107
    nqp_islist $I20, rx1432_cstack
    unless $I20, rx1432_jump3108
    elements $I18, rx1432_bstack
    le $I18, 0, rx1432_cut3109
    dec $I18
    set $I18, rx1432_bstack[$I18]
  rx1432_cut3109:
    assign rx1432_cstack, $I18
  rx1432_jump3108:
    jump $I19
  rx1432_done3105:
    rx1432_cur."!cursor_fail"()
    .return (rx1432_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_167_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1310
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1434_start
    .local string rx1434_tgt
    .local int rx1434_pos
    .local int rx1434_off
    .local int rx1434_eos
    .local int rx1434_rep
    .local pmc rx1434_cur
    .local pmc rx1434_curclass
    .local pmc rx1434_bstack
    .local pmc rx1434_cstack
    rx1434_start = self."!cursor_start_all"()
    set rx1434_cur, rx1434_start[0]
    set rx1434_tgt, rx1434_start[1]
    set rx1434_pos, rx1434_start[2]
    set rx1434_curclass, rx1434_start[3]
    set rx1434_bstack, rx1434_start[4]
    set $I19, rx1434_start[5]
    store_lex unicode:"$\x{a2}", rx1434_cur
    length rx1434_eos, rx1434_tgt
    eq $I19, 1, rx1434_restart3116
    gt rx1434_pos, rx1434_eos, rx1434_fail3117
    repr_get_attr_int $I11, self, rx1434_curclass, "$!from"
    ne $I11, -1, rxscan1435_done3123
    goto rxscan1435_scan3122
  rxscan1435_loop3121:
    inc rx1434_pos
    gt rx1434_pos, rx1434_eos, rx1434_fail3117
    repr_bind_attr_int rx1434_cur, rx1434_curclass, "$!from", rx1434_pos
  rxscan1435_scan3122:
    nqp_rxmark rx1434_bstack, rxscan1435_loop3121, rx1434_pos, 0
  rxscan1435_done3123:
    add $I11, rx1434_pos, 1
    gt $I11, rx1434_eos, rx1434_fail3117
    substr $S10, rx1434_tgt, rx1434_pos, 1
    ne $S10, ucs4:"(", rx1434_fail3117
    add rx1434_pos, 1
    repr_bind_attr_int rx1434_cur, rx1434_curclass, "$!pos", rx1434_pos
    $P11 = rx1434_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1434_curclass, "$!pos"
    lt $I11, 0, rx1434_fail3117
    repr_get_attr_int rx1434_pos, $P11, rx1434_curclass, "$!pos"
    nqp_rxmark rx1434_bstack, rxquantr1437_done3126, rx1434_pos, 0
  rxquantr1437_loop3125:
    repr_bind_attr_int rx1434_cur, rx1434_curclass, "$!pos", rx1434_pos
    $P11 = rx1434_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1434_curclass, "$!pos"
    lt $I11, 0, rx1434_fail3117
    goto rxsubrule1438_pass3127
  rxsubrule1438_back3128:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1434_curclass, "$!pos"
    lt $I11, 0, rx1434_fail3117
  rxsubrule1438_pass3127:
    rx1434_cstack = rx1434_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1438_back3128
    push rx1434_bstack, $I11
    push rx1434_bstack, 0
    push rx1434_bstack, rx1434_pos
    elements $I11, rx1434_cstack
    push rx1434_bstack, $I11
    repr_get_attr_int rx1434_pos, $P11, rx1434_curclass, "$!pos"
    nqp_rxpeek $I19, rx1434_bstack, rxquantr1437_done3126
    inc $I19
    inc $I19
    set rx1434_rep, rx1434_bstack[$I19]
    nqp_rxcommit rx1434_bstack, rxquantr1437_done3126
    inc rx1434_rep
  rxquantr1437_done3126:
    add $I11, rx1434_pos, 1
    gt $I11, rx1434_eos, rx1434_fail3117
    substr $S10, rx1434_tgt, rx1434_pos, 1
    ne $S10, ucs4:")", rx1434_fail3117
    add rx1434_pos, 1
    rx1434_cur."!cursor_pass"(rx1434_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1434_cur)
  rx1434_restart3116:
    repr_get_attr_obj rx1434_cstack, rx1434_cur, rx1434_curclass, "$!cstack"
  rx1434_fail3117:
    unless rx1434_bstack, rx1434_done3115
    pop $I19, rx1434_bstack
    if_null rx1434_cstack, rx1434_cstack_done3120
    unless rx1434_cstack, rx1434_cstack_done3120
    dec $I19
    set $P11, rx1434_cstack[$I19]
  rx1434_cstack_done3120:
    pop rx1434_rep, rx1434_bstack
    pop rx1434_pos, rx1434_bstack
    pop $I19, rx1434_bstack
    lt rx1434_pos, -1, rx1434_done3115
    lt rx1434_pos, 0, rx1434_fail3117
    eq $I19, 0, rx1434_fail3117
    nqp_islist $I20, rx1434_cstack
    unless $I20, rx1434_jump3118
    elements $I18, rx1434_bstack
    le $I18, 0, rx1434_cut3119
    dec $I18
    set $I18, rx1434_bstack[$I18]
  rx1434_cut3119:
    assign rx1434_cstack, $I18
  rx1434_jump3118:
    jump $I19
  rx1434_done3115:
    rx1434_cur."!cursor_fail"()
    .return (rx1434_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_168_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1311
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1439_start
    .local string rx1439_tgt
    .local int rx1439_pos
    .local int rx1439_off
    .local int rx1439_eos
    .local int rx1439_rep
    .local pmc rx1439_cur
    .local pmc rx1439_curclass
    .local pmc rx1439_bstack
    .local pmc rx1439_cstack
    rx1439_start = self."!cursor_start_all"()
    set rx1439_cur, rx1439_start[0]
    set rx1439_tgt, rx1439_start[1]
    set rx1439_pos, rx1439_start[2]
    set rx1439_curclass, rx1439_start[3]
    set rx1439_bstack, rx1439_start[4]
    set $I19, rx1439_start[5]
    store_lex unicode:"$\x{a2}", rx1439_cur
    length rx1439_eos, rx1439_tgt
    eq $I19, 1, rx1439_restart3131
    gt rx1439_pos, rx1439_eos, rx1439_fail3132
    repr_get_attr_int $I11, self, rx1439_curclass, "$!from"
    ne $I11, -1, rxscan1440_done3138
    goto rxscan1440_scan3137
  rxscan1440_loop3136:
    inc rx1439_pos
    gt rx1439_pos, rx1439_eos, rx1439_fail3132
    repr_bind_attr_int rx1439_cur, rx1439_curclass, "$!from", rx1439_pos
  rxscan1440_scan3137:
    nqp_rxmark rx1439_bstack, rxscan1440_loop3136, rx1439_pos, 0
  rxscan1440_done3138:
    add $I11, rx1439_pos, 1
    gt $I11, rx1439_eos, rx1439_fail3132
    substr $S10, rx1439_tgt, rx1439_pos, 1
    ne $S10, ucs4:"[", rx1439_fail3132
    add rx1439_pos, 1
    repr_bind_attr_int rx1439_cur, rx1439_curclass, "$!pos", rx1439_pos
    $P11 = rx1439_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1439_curclass, "$!pos"
    lt $I11, 0, rx1439_fail3132
    repr_get_attr_int rx1439_pos, $P11, rx1439_curclass, "$!pos"
    nqp_rxmark rx1439_bstack, rxquantr1442_done3141, rx1439_pos, 0
  rxquantr1442_loop3140:
    repr_bind_attr_int rx1439_cur, rx1439_curclass, "$!pos", rx1439_pos
    $P11 = rx1439_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1439_curclass, "$!pos"
    lt $I11, 0, rx1439_fail3132
    goto rxsubrule1443_pass3142
  rxsubrule1443_back3143:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1439_curclass, "$!pos"
    lt $I11, 0, rx1439_fail3132
  rxsubrule1443_pass3142:
    rx1439_cstack = rx1439_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1443_back3143
    push rx1439_bstack, $I11
    push rx1439_bstack, 0
    push rx1439_bstack, rx1439_pos
    elements $I11, rx1439_cstack
    push rx1439_bstack, $I11
    repr_get_attr_int rx1439_pos, $P11, rx1439_curclass, "$!pos"
    nqp_rxpeek $I19, rx1439_bstack, rxquantr1442_done3141
    inc $I19
    inc $I19
    set rx1439_rep, rx1439_bstack[$I19]
    nqp_rxcommit rx1439_bstack, rxquantr1442_done3141
    inc rx1439_rep
  rxquantr1442_done3141:
    add $I11, rx1439_pos, 1
    gt $I11, rx1439_eos, rx1439_fail3132
    substr $S10, rx1439_tgt, rx1439_pos, 1
    ne $S10, ucs4:"]", rx1439_fail3132
    add rx1439_pos, 1
    rx1439_cur."!cursor_pass"(rx1439_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1439_cur)
  rx1439_restart3131:
    repr_get_attr_obj rx1439_cstack, rx1439_cur, rx1439_curclass, "$!cstack"
  rx1439_fail3132:
    unless rx1439_bstack, rx1439_done3130
    pop $I19, rx1439_bstack
    if_null rx1439_cstack, rx1439_cstack_done3135
    unless rx1439_cstack, rx1439_cstack_done3135
    dec $I19
    set $P11, rx1439_cstack[$I19]
  rx1439_cstack_done3135:
    pop rx1439_rep, rx1439_bstack
    pop rx1439_pos, rx1439_bstack
    pop $I19, rx1439_bstack
    lt rx1439_pos, -1, rx1439_done3130
    lt rx1439_pos, 0, rx1439_fail3132
    eq $I19, 0, rx1439_fail3132
    nqp_islist $I20, rx1439_cstack
    unless $I20, rx1439_jump3133
    elements $I18, rx1439_bstack
    le $I18, 0, rx1439_cut3134
    dec $I18
    set $I18, rx1439_bstack[$I18]
  rx1439_cut3134:
    assign rx1439_cstack, $I18
  rx1439_jump3133:
    jump $I19
  rx1439_done3130:
    rx1439_cur."!cursor_fail"()
    .return (rx1439_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_169_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1312
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1444_start
    .local string rx1444_tgt
    .local int rx1444_pos
    .local int rx1444_off
    .local int rx1444_eos
    .local int rx1444_rep
    .local pmc rx1444_cur
    .local pmc rx1444_curclass
    .local pmc rx1444_bstack
    .local pmc rx1444_cstack
    rx1444_start = self."!cursor_start_all"()
    set rx1444_cur, rx1444_start[0]
    set rx1444_tgt, rx1444_start[1]
    set rx1444_pos, rx1444_start[2]
    set rx1444_curclass, rx1444_start[3]
    set rx1444_bstack, rx1444_start[4]
    set $I19, rx1444_start[5]
    store_lex unicode:"$\x{a2}", rx1444_cur
    length rx1444_eos, rx1444_tgt
    eq $I19, 1, rx1444_restart3146
    gt rx1444_pos, rx1444_eos, rx1444_fail3147
    repr_get_attr_int $I11, self, rx1444_curclass, "$!from"
    ne $I11, -1, rxscan1445_done3153
    goto rxscan1445_scan3152
  rxscan1445_loop3151:
    inc rx1444_pos
    gt rx1444_pos, rx1444_eos, rx1444_fail3147
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!from", rx1444_pos
  rxscan1445_scan3152:
    nqp_rxmark rx1444_bstack, rxscan1445_loop3151, rx1444_pos, 0
  rxscan1445_done3153:
    ge rx1444_pos, rx1444_eos, rx1444_fail3147
    substr $S11, rx1444_tgt, rx1444_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1444_fail3147
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!pos", rx1444_pos
    $P11 = rx1444_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1444_curclass, "$!pos"
    lt $I11, 0, rx1444_fail3147
    nqp_rxmark rx1444_bstack, rxsubrule1446_pass3154, -1, 0
  rxsubrule1446_pass3154:
    rx1444_cstack = rx1444_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1444_pos, $P11, rx1444_curclass, "$!pos"
    rx1444_cur."!cursor_pass"(rx1444_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1444_cur)
  rx1444_restart3146:
    repr_get_attr_obj rx1444_cstack, rx1444_cur, rx1444_curclass, "$!cstack"
  rx1444_fail3147:
    unless rx1444_bstack, rx1444_done3145
    pop $I19, rx1444_bstack
    if_null rx1444_cstack, rx1444_cstack_done3150
    unless rx1444_cstack, rx1444_cstack_done3150
    dec $I19
    set $P11, rx1444_cstack[$I19]
  rx1444_cstack_done3150:
    pop rx1444_rep, rx1444_bstack
    pop rx1444_pos, rx1444_bstack
    pop $I19, rx1444_bstack
    lt rx1444_pos, -1, rx1444_done3145
    lt rx1444_pos, 0, rx1444_fail3147
    eq $I19, 0, rx1444_fail3147
    nqp_islist $I20, rx1444_cstack
    unless $I20, rx1444_jump3148
    elements $I18, rx1444_bstack
    le $I18, 0, rx1444_cut3149
    dec $I18
    set $I18, rx1444_bstack[$I18]
  rx1444_cut3149:
    assign rx1444_cstack, $I18
  rx1444_jump3148:
    jump $I19
  rx1444_done3145:
    rx1444_cur."!cursor_fail"()
    .return (rx1444_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_170_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1313
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1447_start
    .local string rx1447_tgt
    .local int rx1447_pos
    .local int rx1447_off
    .local int rx1447_eos
    .local int rx1447_rep
    .local pmc rx1447_cur
    .local pmc rx1447_curclass
    .local pmc rx1447_bstack
    .local pmc rx1447_cstack
    rx1447_start = self."!cursor_start_all"()
    set rx1447_cur, rx1447_start[0]
    set rx1447_tgt, rx1447_start[1]
    set rx1447_pos, rx1447_start[2]
    set rx1447_curclass, rx1447_start[3]
    set rx1447_bstack, rx1447_start[4]
    set $I19, rx1447_start[5]
    store_lex unicode:"$\x{a2}", rx1447_cur
    length rx1447_eos, rx1447_tgt
    eq $I19, 1, rx1447_restart3157
    gt rx1447_pos, rx1447_eos, rx1447_fail3158
    repr_get_attr_int $I11, self, rx1447_curclass, "$!from"
    ne $I11, -1, rxscan1448_done3164
    goto rxscan1448_scan3163
  rxscan1448_loop3162:
    inc rx1447_pos
    gt rx1447_pos, rx1447_eos, rx1447_fail3158
    repr_bind_attr_int rx1447_cur, rx1447_curclass, "$!from", rx1447_pos
  rxscan1448_scan3163:
    nqp_rxmark rx1447_bstack, rxscan1448_loop3162, rx1447_pos, 0
  rxscan1448_done3164:
    ge rx1447_pos, rx1447_eos, rx1447_fail3158
    substr $S11, rx1447_tgt, rx1447_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1447_fail3158
    repr_bind_attr_int rx1447_cur, rx1447_curclass, "$!pos", rx1447_pos
    $P11 = rx1447_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1447_curclass, "$!pos"
    lt $I11, 0, rx1447_fail3158
    nqp_rxmark rx1447_bstack, rxsubrule1449_pass3165, -1, 0
  rxsubrule1449_pass3165:
    rx1447_cstack = rx1447_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1447_pos, $P11, rx1447_curclass, "$!pos"
    rx1447_cur."!cursor_pass"(rx1447_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1447_cur)
  rx1447_restart3157:
    repr_get_attr_obj rx1447_cstack, rx1447_cur, rx1447_curclass, "$!cstack"
  rx1447_fail3158:
    unless rx1447_bstack, rx1447_done3156
    pop $I19, rx1447_bstack
    if_null rx1447_cstack, rx1447_cstack_done3161
    unless rx1447_cstack, rx1447_cstack_done3161
    dec $I19
    set $P11, rx1447_cstack[$I19]
  rx1447_cstack_done3161:
    pop rx1447_rep, rx1447_bstack
    pop rx1447_pos, rx1447_bstack
    pop $I19, rx1447_bstack
    lt rx1447_pos, -1, rx1447_done3156
    lt rx1447_pos, 0, rx1447_fail3158
    eq $I19, 0, rx1447_fail3158
    nqp_islist $I20, rx1447_cstack
    unless $I20, rx1447_jump3159
    elements $I18, rx1447_bstack
    le $I18, 0, rx1447_cut3160
    dec $I18
    set $I18, rx1447_bstack[$I18]
  rx1447_cut3160:
    assign rx1447_cstack, $I18
  rx1447_jump3159:
    jump $I19
  rx1447_done3156:
    rx1447_cur."!cursor_fail"()
    .return (rx1447_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_171_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1314
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1450_start
    .local string rx1450_tgt
    .local int rx1450_pos
    .local int rx1450_off
    .local int rx1450_eos
    .local int rx1450_rep
    .local pmc rx1450_cur
    .local pmc rx1450_curclass
    .local pmc rx1450_bstack
    .local pmc rx1450_cstack
    rx1450_start = self."!cursor_start_all"()
    set rx1450_cur, rx1450_start[0]
    set rx1450_tgt, rx1450_start[1]
    set rx1450_pos, rx1450_start[2]
    set rx1450_curclass, rx1450_start[3]
    set rx1450_bstack, rx1450_start[4]
    set $I19, rx1450_start[5]
    store_lex unicode:"$\x{a2}", rx1450_cur
    length rx1450_eos, rx1450_tgt
    eq $I19, 1, rx1450_restart3168
    gt rx1450_pos, rx1450_eos, rx1450_fail3169
    repr_get_attr_int $I11, self, rx1450_curclass, "$!from"
    ne $I11, -1, rxscan1451_done3175
    goto rxscan1451_scan3174
  rxscan1451_loop3173:
    inc rx1450_pos
    gt rx1450_pos, rx1450_eos, rx1450_fail3169
    repr_bind_attr_int rx1450_cur, rx1450_curclass, "$!from", rx1450_pos
  rxscan1451_scan3174:
    nqp_rxmark rx1450_bstack, rxscan1451_loop3173, rx1450_pos, 0
  rxscan1451_done3175:
    ge rx1450_pos, rx1450_eos, rx1450_fail3169
    substr $S11, rx1450_tgt, rx1450_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1450_fail3169
    repr_bind_attr_int rx1450_cur, rx1450_curclass, "$!pos", rx1450_pos
    $P11 = rx1450_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1450_curclass, "$!pos"
    lt $I11, 0, rx1450_fail3169
    nqp_rxmark rx1450_bstack, rxsubrule1452_pass3176, -1, 0
  rxsubrule1452_pass3176:
    rx1450_cstack = rx1450_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1450_pos, $P11, rx1450_curclass, "$!pos"
    rx1450_cur."!cursor_pass"(rx1450_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1450_cur)
  rx1450_restart3168:
    repr_get_attr_obj rx1450_cstack, rx1450_cur, rx1450_curclass, "$!cstack"
  rx1450_fail3169:
    unless rx1450_bstack, rx1450_done3167
    pop $I19, rx1450_bstack
    if_null rx1450_cstack, rx1450_cstack_done3172
    unless rx1450_cstack, rx1450_cstack_done3172
    dec $I19
    set $P11, rx1450_cstack[$I19]
  rx1450_cstack_done3172:
    pop rx1450_rep, rx1450_bstack
    pop rx1450_pos, rx1450_bstack
    pop $I19, rx1450_bstack
    lt rx1450_pos, -1, rx1450_done3167
    lt rx1450_pos, 0, rx1450_fail3169
    eq $I19, 0, rx1450_fail3169
    nqp_islist $I20, rx1450_cstack
    unless $I20, rx1450_jump3170
    elements $I18, rx1450_bstack
    le $I18, 0, rx1450_cut3171
    dec $I18
    set $I18, rx1450_bstack[$I18]
  rx1450_cut3171:
    assign rx1450_cstack, $I18
  rx1450_jump3170:
    jump $I19
  rx1450_done3167:
    rx1450_cur."!cursor_fail"()
    .return (rx1450_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_172_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1316
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1453_start
    .local string rx1453_tgt
    .local int rx1453_pos
    .local int rx1453_off
    .local int rx1453_eos
    .local int rx1453_rep
    .local pmc rx1453_cur
    .local pmc rx1453_curclass
    .local pmc rx1453_bstack
    .local pmc rx1453_cstack
    rx1453_start = self."!cursor_start_all"()
    set rx1453_cur, rx1453_start[0]
    set rx1453_tgt, rx1453_start[1]
    set rx1453_pos, rx1453_start[2]
    set rx1453_curclass, rx1453_start[3]
    set rx1453_bstack, rx1453_start[4]
    set $I19, rx1453_start[5]
    store_lex unicode:"$\x{a2}", rx1453_cur
    length rx1453_eos, rx1453_tgt
    eq $I19, 1, rx1453_restart3179
    gt rx1453_pos, rx1453_eos, rx1453_fail3180
    repr_get_attr_int $I11, self, rx1453_curclass, "$!from"
    ne $I11, -1, rxscan1454_done3186
    goto rxscan1454_scan3185
  rxscan1454_loop3184:
    inc rx1453_pos
    gt rx1453_pos, rx1453_eos, rx1453_fail3180
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!from", rx1453_pos
  rxscan1454_scan3185:
    nqp_rxmark rx1453_bstack, rxscan1454_loop3184, rx1453_pos, 0
  rxscan1454_done3186:
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1453_curclass, "$!pos"
    lt $I11, 0, rx1453_fail3180
    repr_get_attr_int rx1453_pos, $P11, rx1453_curclass, "$!pos"
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1453_curclass, "$!pos"
    lt $I11, 0, rx1453_fail3180
    nqp_rxmark rx1453_bstack, rxsubrule1456_pass3188, -1, 0
  rxsubrule1456_pass3188:
    rx1453_cstack = rx1453_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1453_pos, $P11, rx1453_curclass, "$!pos"
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1453_curclass, "$!pos"
    lt $I11, 0, rx1453_fail3180
    repr_get_attr_int rx1453_pos, $P11, rx1453_curclass, "$!pos"
    rx1453_cur."!cursor_pass"(rx1453_pos, "semilist", 'backtrack'=>1)
    .return (rx1453_cur)
  rx1453_restart3179:
    repr_get_attr_obj rx1453_cstack, rx1453_cur, rx1453_curclass, "$!cstack"
  rx1453_fail3180:
    unless rx1453_bstack, rx1453_done3178
    pop $I19, rx1453_bstack
    if_null rx1453_cstack, rx1453_cstack_done3183
    unless rx1453_cstack, rx1453_cstack_done3183
    dec $I19
    set $P11, rx1453_cstack[$I19]
  rx1453_cstack_done3183:
    pop rx1453_rep, rx1453_bstack
    pop rx1453_pos, rx1453_bstack
    pop $I19, rx1453_bstack
    lt rx1453_pos, -1, rx1453_done3178
    lt rx1453_pos, 0, rx1453_fail3180
    eq $I19, 0, rx1453_fail3180
    nqp_islist $I20, rx1453_cstack
    unless $I20, rx1453_jump3181
    elements $I18, rx1453_bstack
    le $I18, 0, rx1453_cut3182
    dec $I18
    set $I18, rx1453_bstack[$I18]
  rx1453_cut3182:
    assign rx1453_cstack, $I18
  rx1453_jump3181:
    jump $I19
  rx1453_done3178:
    rx1453_cur."!cursor_fail"()
    .return (rx1453_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_173_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1339
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1458_start
    .local string rx1458_tgt
    .local int rx1458_pos
    .local int rx1458_off
    .local int rx1458_eos
    .local int rx1458_rep
    .local pmc rx1458_cur
    .local pmc rx1458_curclass
    .local pmc rx1458_bstack
    .local pmc rx1458_cstack
    rx1458_start = self."!cursor_start_all"()
    set rx1458_cur, rx1458_start[0]
    set rx1458_tgt, rx1458_start[1]
    set rx1458_pos, rx1458_start[2]
    set rx1458_curclass, rx1458_start[3]
    set rx1458_bstack, rx1458_start[4]
    set $I19, rx1458_start[5]
    store_lex unicode:"$\x{a2}", rx1458_cur
    length rx1458_eos, rx1458_tgt
    eq $I19, 1, rx1458_restart3192
    gt rx1458_pos, rx1458_eos, rx1458_fail3193
    repr_get_attr_int $I11, self, rx1458_curclass, "$!from"
    ne $I11, -1, rxscan1459_done3199
    goto rxscan1459_scan3198
  rxscan1459_loop3197:
    inc rx1458_pos
    gt rx1458_pos, rx1458_eos, rx1458_fail3193
    repr_bind_attr_int rx1458_cur, rx1458_curclass, "$!from", rx1458_pos
  rxscan1459_scan3198:
    nqp_rxmark rx1458_bstack, rxscan1459_loop3197, rx1458_pos, 0
  rxscan1459_done3199:
    repr_bind_attr_int rx1458_cur, rx1458_curclass, "$!pos", rx1458_pos
    $P11 = rx1458_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1458_curclass, "$!pos"
    ge $I11, 0, rx1458_fail3193
    repr_bind_attr_int rx1458_cur, rx1458_curclass, "$!pos", rx1458_pos
    $P11 = rx1458_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1458_curclass, "$!pos"
    lt $I11, 0, rx1458_fail3193
    nqp_rxmark rx1458_bstack, rxsubrule1460_pass3200, -1, 0
  rxsubrule1460_pass3200:
    rx1458_cstack = rx1458_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1458_pos, $P11, rx1458_curclass, "$!pos"
    rx1458_cur."!cursor_pass"(rx1458_pos, "infixish", 'backtrack'=>1)
    .return (rx1458_cur)
  rx1458_restart3192:
    repr_get_attr_obj rx1458_cstack, rx1458_cur, rx1458_curclass, "$!cstack"
  rx1458_fail3193:
    unless rx1458_bstack, rx1458_done3191
    pop $I19, rx1458_bstack
    if_null rx1458_cstack, rx1458_cstack_done3196
    unless rx1458_cstack, rx1458_cstack_done3196
    dec $I19
    set $P11, rx1458_cstack[$I19]
  rx1458_cstack_done3196:
    pop rx1458_rep, rx1458_bstack
    pop rx1458_pos, rx1458_bstack
    pop $I19, rx1458_bstack
    lt rx1458_pos, -1, rx1458_done3191
    lt rx1458_pos, 0, rx1458_fail3193
    eq $I19, 0, rx1458_fail3193
    nqp_islist $I20, rx1458_cstack
    unless $I20, rx1458_jump3194
    elements $I18, rx1458_bstack
    le $I18, 0, rx1458_cut3195
    dec $I18
    set $I18, rx1458_bstack[$I18]
  rx1458_cut3195:
    assign rx1458_cstack, $I18
  rx1458_jump3194:
    jump $I19
  rx1458_done3191:
    rx1458_cur."!cursor_fail"()
    .return (rx1458_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_174_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1340
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1461_start
    .local string rx1461_tgt
    .local int rx1461_pos
    .local int rx1461_off
    .local int rx1461_eos
    .local int rx1461_rep
    .local pmc rx1461_cur
    .local pmc rx1461_curclass
    .local pmc rx1461_bstack
    .local pmc rx1461_cstack
    rx1461_start = self."!cursor_start_all"()
    set rx1461_cur, rx1461_start[0]
    set rx1461_tgt, rx1461_start[1]
    set rx1461_pos, rx1461_start[2]
    set rx1461_curclass, rx1461_start[3]
    set rx1461_bstack, rx1461_start[4]
    set $I19, rx1461_start[5]
    store_lex unicode:"$\x{a2}", rx1461_cur
    length rx1461_eos, rx1461_tgt
    eq $I19, 1, rx1461_restart3203
    gt rx1461_pos, rx1461_eos, rx1461_fail3204
    repr_get_attr_int $I11, self, rx1461_curclass, "$!from"
    ne $I11, -1, rxscan1462_done3210
    goto rxscan1462_scan3209
  rxscan1462_loop3208:
    inc rx1461_pos
    gt rx1461_pos, rx1461_eos, rx1461_fail3204
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!from", rx1461_pos
  rxscan1462_scan3209:
    nqp_rxmark rx1461_bstack, rxscan1462_loop3208, rx1461_pos, 0
  rxscan1462_done3210:
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3204
    rx1461_cur."!cursor_pass"(rx1461_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1461_cur)
  rx1461_restart3203:
    repr_get_attr_obj rx1461_cstack, rx1461_cur, rx1461_curclass, "$!cstack"
  rx1461_fail3204:
    unless rx1461_bstack, rx1461_done3202
    pop $I19, rx1461_bstack
    if_null rx1461_cstack, rx1461_cstack_done3207
    unless rx1461_cstack, rx1461_cstack_done3207
    dec $I19
    set $P11, rx1461_cstack[$I19]
  rx1461_cstack_done3207:
    pop rx1461_rep, rx1461_bstack
    pop rx1461_pos, rx1461_bstack
    pop $I19, rx1461_bstack
    lt rx1461_pos, -1, rx1461_done3202
    lt rx1461_pos, 0, rx1461_fail3204
    eq $I19, 0, rx1461_fail3204
    nqp_islist $I20, rx1461_cstack
    unless $I20, rx1461_jump3205
    elements $I18, rx1461_bstack
    le $I18, 0, rx1461_cut3206
    dec $I18
    set $I18, rx1461_bstack[$I18]
  rx1461_cut3206:
    assign rx1461_cstack, $I18
  rx1461_jump3205:
    jump $I19
  rx1461_done3202:
    rx1461_cur."!cursor_fail"()
    .return (rx1461_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_175_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1342
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1463_start
    .local string rx1463_tgt
    .local int rx1463_pos
    .local int rx1463_off
    .local int rx1463_eos
    .local int rx1463_rep
    .local pmc rx1463_cur
    .local pmc rx1463_curclass
    .local pmc rx1463_bstack
    .local pmc rx1463_cstack
    rx1463_start = self."!cursor_start_all"()
    set rx1463_cur, rx1463_start[0]
    set rx1463_tgt, rx1463_start[1]
    set rx1463_pos, rx1463_start[2]
    set rx1463_curclass, rx1463_start[3]
    set rx1463_bstack, rx1463_start[4]
    set $I19, rx1463_start[5]
    store_lex unicode:"$\x{a2}", rx1463_cur
    length rx1463_eos, rx1463_tgt
    eq $I19, 1, rx1463_restart3213
    gt rx1463_pos, rx1463_eos, rx1463_fail3214
    repr_get_attr_int $I11, self, rx1463_curclass, "$!from"
    ne $I11, -1, rxscan1464_done3220
    goto rxscan1464_scan3219
  rxscan1464_loop3218:
    inc rx1463_pos
    gt rx1463_pos, rx1463_eos, rx1463_fail3214
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!from", rx1463_pos
  rxscan1464_scan3219:
    nqp_rxmark rx1463_bstack, rxscan1464_loop3218, rx1463_pos, 0
  rxscan1464_done3220:
    add $I11, rx1463_pos, 1
    gt $I11, rx1463_eos, rx1463_fail3214
    substr $S10, rx1463_tgt, rx1463_pos, 1
    ne $S10, ucs4:"[", rx1463_fail3214
    add rx1463_pos, 1
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!pos", rx1463_pos
    $P11 = rx1463_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1463_curclass, "$!pos"
    lt $I11, 0, rx1463_fail3214
    repr_get_attr_int rx1463_pos, $P11, rx1463_curclass, "$!pos"
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!pos", rx1463_pos
    $P11 = rx1463_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1463_curclass, "$!pos"
    lt $I11, 0, rx1463_fail3214
    nqp_rxmark rx1463_bstack, rxsubrule1466_pass3222, -1, 0
  rxsubrule1466_pass3222:
    rx1463_cstack = rx1463_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1463_pos, $P11, rx1463_curclass, "$!pos"
    add $I11, rx1463_pos, 1
    gt $I11, rx1463_eos, rx1463_fail3214
    substr $S10, rx1463_tgt, rx1463_pos, 1
    ne $S10, ucs4:"]", rx1463_fail3214
    add rx1463_pos, 1
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!pos", rx1463_pos
    $P11 = rx1463_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1463_curclass, "$!pos"
    lt $I11, 0, rx1463_fail3214
    nqp_rxmark rx1463_bstack, rxsubrule1467_pass3223, -1, 0
  rxsubrule1467_pass3223:
    rx1463_cstack = rx1463_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1463_pos, $P11, rx1463_curclass, "$!pos"
    rx1463_cur."!cursor_pass"(rx1463_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1463_cur)
  rx1463_restart3213:
    repr_get_attr_obj rx1463_cstack, rx1463_cur, rx1463_curclass, "$!cstack"
  rx1463_fail3214:
    unless rx1463_bstack, rx1463_done3212
    pop $I19, rx1463_bstack
    if_null rx1463_cstack, rx1463_cstack_done3217
    unless rx1463_cstack, rx1463_cstack_done3217
    dec $I19
    set $P11, rx1463_cstack[$I19]
  rx1463_cstack_done3217:
    pop rx1463_rep, rx1463_bstack
    pop rx1463_pos, rx1463_bstack
    pop $I19, rx1463_bstack
    lt rx1463_pos, -1, rx1463_done3212
    lt rx1463_pos, 0, rx1463_fail3214
    eq $I19, 0, rx1463_fail3214
    nqp_islist $I20, rx1463_cstack
    unless $I20, rx1463_jump3215
    elements $I18, rx1463_bstack
    le $I18, 0, rx1463_cut3216
    dec $I18
    set $I18, rx1463_bstack[$I18]
  rx1463_cut3216:
    assign rx1463_cstack, $I18
  rx1463_jump3215:
    jump $I19
  rx1463_done3212:
    rx1463_cur."!cursor_fail"()
    .return (rx1463_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_176_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1347
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1468_start
    .local string rx1468_tgt
    .local int rx1468_pos
    .local int rx1468_off
    .local int rx1468_eos
    .local int rx1468_rep
    .local pmc rx1468_cur
    .local pmc rx1468_curclass
    .local pmc rx1468_bstack
    .local pmc rx1468_cstack
    rx1468_start = self."!cursor_start_all"()
    set rx1468_cur, rx1468_start[0]
    set rx1468_tgt, rx1468_start[1]
    set rx1468_pos, rx1468_start[2]
    set rx1468_curclass, rx1468_start[3]
    set rx1468_bstack, rx1468_start[4]
    set $I19, rx1468_start[5]
    store_lex unicode:"$\x{a2}", rx1468_cur
    length rx1468_eos, rx1468_tgt
    eq $I19, 1, rx1468_restart3226
    gt rx1468_pos, rx1468_eos, rx1468_fail3227
    repr_get_attr_int $I11, self, rx1468_curclass, "$!from"
    ne $I11, -1, rxscan1469_done3233
    goto rxscan1469_scan3232
  rxscan1469_loop3231:
    inc rx1468_pos
    gt rx1468_pos, rx1468_eos, rx1468_fail3227
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!from", rx1468_pos
  rxscan1469_scan3232:
    nqp_rxmark rx1468_bstack, rxscan1469_loop3231, rx1468_pos, 0
  rxscan1469_done3233:
    add $I11, rx1468_pos, 1
    gt $I11, rx1468_eos, rx1468_fail3227
    substr $S10, rx1468_tgt, rx1468_pos, 1
    ne $S10, ucs4:"{", rx1468_fail3227
    add rx1468_pos, 1
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3227
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3227
    nqp_rxmark rx1468_bstack, rxsubrule1471_pass3235, -1, 0
  rxsubrule1471_pass3235:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    add $I11, rx1468_pos, 1
    gt $I11, rx1468_eos, rx1468_fail3227
    substr $S10, rx1468_tgt, rx1468_pos, 1
    ne $S10, ucs4:"}", rx1468_fail3227
    add rx1468_pos, 1
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3227
    nqp_rxmark rx1468_bstack, rxsubrule1472_pass3236, -1, 0
  rxsubrule1472_pass3236:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    rx1468_cur."!cursor_pass"(rx1468_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1468_cur)
  rx1468_restart3226:
    repr_get_attr_obj rx1468_cstack, rx1468_cur, rx1468_curclass, "$!cstack"
  rx1468_fail3227:
    unless rx1468_bstack, rx1468_done3225
    pop $I19, rx1468_bstack
    if_null rx1468_cstack, rx1468_cstack_done3230
    unless rx1468_cstack, rx1468_cstack_done3230
    dec $I19
    set $P11, rx1468_cstack[$I19]
  rx1468_cstack_done3230:
    pop rx1468_rep, rx1468_bstack
    pop rx1468_pos, rx1468_bstack
    pop $I19, rx1468_bstack
    lt rx1468_pos, -1, rx1468_done3225
    lt rx1468_pos, 0, rx1468_fail3227
    eq $I19, 0, rx1468_fail3227
    nqp_islist $I20, rx1468_cstack
    unless $I20, rx1468_jump3228
    elements $I18, rx1468_bstack
    le $I18, 0, rx1468_cut3229
    dec $I18
    set $I18, rx1468_bstack[$I18]
  rx1468_cut3229:
    assign rx1468_cstack, $I18
  rx1468_jump3228:
    jump $I19
  rx1468_done3225:
    rx1468_cur."!cursor_fail"()
    .return (rx1468_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_177_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1352
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1473_start
    .local string rx1473_tgt
    .local int rx1473_pos
    .local int rx1473_off
    .local int rx1473_eos
    .local int rx1473_rep
    .local pmc rx1473_cur
    .local pmc rx1473_curclass
    .local pmc rx1473_bstack
    .local pmc rx1473_cstack
    rx1473_start = self."!cursor_start_all"()
    set rx1473_cur, rx1473_start[0]
    set rx1473_tgt, rx1473_start[1]
    set rx1473_pos, rx1473_start[2]
    set rx1473_curclass, rx1473_start[3]
    set rx1473_bstack, rx1473_start[4]
    set $I19, rx1473_start[5]
    store_lex unicode:"$\x{a2}", rx1473_cur
    length rx1473_eos, rx1473_tgt
    eq $I19, 1, rx1473_restart3239
    gt rx1473_pos, rx1473_eos, rx1473_fail3240
    repr_get_attr_int $I11, self, rx1473_curclass, "$!from"
    ne $I11, -1, rxscan1474_done3246
    goto rxscan1474_scan3245
  rxscan1474_loop3244:
    inc rx1473_pos
    gt rx1473_pos, rx1473_eos, rx1473_fail3240
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!from", rx1473_pos
  rxscan1474_scan3245:
    nqp_rxmark rx1473_bstack, rxscan1474_loop3244, rx1473_pos, 0
  rxscan1474_done3246:
    ge rx1473_pos, rx1473_eos, rx1473_fail3240
    substr $S11, rx1473_tgt, rx1473_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1473_fail3240
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1473_curclass, "$!pos"
    lt $I11, 0, rx1473_fail3240
    nqp_rxmark rx1473_bstack, rxsubrule1475_pass3247, -1, 0
  rxsubrule1475_pass3247:
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1473_pos, $P11, rx1473_curclass, "$!pos"
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1473_curclass, "$!pos"
    lt $I11, 0, rx1473_fail3240
    nqp_rxmark rx1473_bstack, rxsubrule1476_pass3248, -1, 0
  rxsubrule1476_pass3248:
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1473_pos, $P11, rx1473_curclass, "$!pos"
    rx1473_cur."!cursor_pass"(rx1473_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1473_cur)
  rx1473_restart3239:
    repr_get_attr_obj rx1473_cstack, rx1473_cur, rx1473_curclass, "$!cstack"
  rx1473_fail3240:
    unless rx1473_bstack, rx1473_done3238
    pop $I19, rx1473_bstack
    if_null rx1473_cstack, rx1473_cstack_done3243
    unless rx1473_cstack, rx1473_cstack_done3243
    dec $I19
    set $P11, rx1473_cstack[$I19]
  rx1473_cstack_done3243:
    pop rx1473_rep, rx1473_bstack
    pop rx1473_pos, rx1473_bstack
    pop $I19, rx1473_bstack
    lt rx1473_pos, -1, rx1473_done3238
    lt rx1473_pos, 0, rx1473_fail3240
    eq $I19, 0, rx1473_fail3240
    nqp_islist $I20, rx1473_cstack
    unless $I20, rx1473_jump3241
    elements $I18, rx1473_bstack
    le $I18, 0, rx1473_cut3242
    dec $I18
    set $I18, rx1473_bstack[$I18]
  rx1473_cut3242:
    assign rx1473_cstack, $I18
  rx1473_jump3241:
    jump $I19
  rx1473_done3238:
    rx1473_cur."!cursor_fail"()
    .return (rx1473_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_178_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1477_start
    .local string rx1477_tgt
    .local int rx1477_pos
    .local int rx1477_off
    .local int rx1477_eos
    .local int rx1477_rep
    .local pmc rx1477_cur
    .local pmc rx1477_curclass
    .local pmc rx1477_bstack
    .local pmc rx1477_cstack
    rx1477_start = self."!cursor_start_all"()
    set rx1477_cur, rx1477_start[0]
    set rx1477_tgt, rx1477_start[1]
    set rx1477_pos, rx1477_start[2]
    set rx1477_curclass, rx1477_start[3]
    set rx1477_bstack, rx1477_start[4]
    set $I19, rx1477_start[5]
    store_lex unicode:"$\x{a2}", rx1477_cur
    length rx1477_eos, rx1477_tgt
    eq $I19, 1, rx1477_restart3251
    gt rx1477_pos, rx1477_eos, rx1477_fail3252
    repr_get_attr_int $I11, self, rx1477_curclass, "$!from"
    ne $I11, -1, rxscan1478_done3258
    goto rxscan1478_scan3257
  rxscan1478_loop3256:
    inc rx1477_pos
    gt rx1477_pos, rx1477_eos, rx1477_fail3252
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!from", rx1477_pos
  rxscan1478_scan3257:
    nqp_rxmark rx1477_bstack, rxscan1478_loop3256, rx1477_pos, 0
  rxscan1478_done3258:
    add $I11, rx1477_pos, 1
    gt $I11, rx1477_eos, rx1477_fail3252
    substr $S10, rx1477_tgt, rx1477_pos, 1
    ne $S10, ucs4:"(", rx1477_fail3252
    add rx1477_pos, 1
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail3252
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail3252
    nqp_rxmark rx1477_bstack, rxsubrule1480_pass3260, -1, 0
  rxsubrule1480_pass3260:
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    add $I11, rx1477_pos, 1
    gt $I11, rx1477_eos, rx1477_fail3252
    substr $S10, rx1477_tgt, rx1477_pos, 1
    ne $S10, ucs4:")", rx1477_fail3252
    add rx1477_pos, 1
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail3252
    nqp_rxmark rx1477_bstack, rxsubrule1481_pass3261, -1, 0
  rxsubrule1481_pass3261:
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    rx1477_cur."!cursor_pass"(rx1477_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1477_cur)
  rx1477_restart3251:
    repr_get_attr_obj rx1477_cstack, rx1477_cur, rx1477_curclass, "$!cstack"
  rx1477_fail3252:
    unless rx1477_bstack, rx1477_done3250
    pop $I19, rx1477_bstack
    if_null rx1477_cstack, rx1477_cstack_done3255
    unless rx1477_cstack, rx1477_cstack_done3255
    dec $I19
    set $P11, rx1477_cstack[$I19]
  rx1477_cstack_done3255:
    pop rx1477_rep, rx1477_bstack
    pop rx1477_pos, rx1477_bstack
    pop $I19, rx1477_bstack
    lt rx1477_pos, -1, rx1477_done3250
    lt rx1477_pos, 0, rx1477_fail3252
    eq $I19, 0, rx1477_fail3252
    nqp_islist $I20, rx1477_cstack
    unless $I20, rx1477_jump3253
    elements $I18, rx1477_bstack
    le $I18, 0, rx1477_cut3254
    dec $I18
    set $I18, rx1477_bstack[$I18]
  rx1477_cut3254:
    assign rx1477_cstack, $I18
  rx1477_jump3253:
    jump $I19
  rx1477_done3250:
    rx1477_cur."!cursor_fail"()
    .return (rx1477_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_179_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1362
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1482_start
    .local string rx1482_tgt
    .local int rx1482_pos
    .local int rx1482_off
    .local int rx1482_eos
    .local int rx1482_rep
    .local pmc rx1482_cur
    .local pmc rx1482_curclass
    .local pmc rx1482_bstack
    .local pmc rx1482_cstack
    rx1482_start = self."!cursor_start_all"()
    set rx1482_cur, rx1482_start[0]
    set rx1482_tgt, rx1482_start[1]
    set rx1482_pos, rx1482_start[2]
    set rx1482_curclass, rx1482_start[3]
    set rx1482_bstack, rx1482_start[4]
    set $I19, rx1482_start[5]
    store_lex unicode:"$\x{a2}", rx1482_cur
    length rx1482_eos, rx1482_tgt
    eq $I19, 1, rx1482_restart3264
    gt rx1482_pos, rx1482_eos, rx1482_fail3265
    repr_get_attr_int $I11, self, rx1482_curclass, "$!from"
    ne $I11, -1, rxscan1483_done3271
    goto rxscan1483_scan3270
  rxscan1483_loop3269:
    inc rx1482_pos
    gt rx1482_pos, rx1482_eos, rx1482_fail3265
    repr_bind_attr_int rx1482_cur, rx1482_curclass, "$!from", rx1482_pos
  rxscan1483_scan3270:
    nqp_rxmark rx1482_bstack, rxscan1483_loop3269, rx1482_pos, 0
  rxscan1483_done3271:
    repr_bind_attr_int rx1482_cur, rx1482_curclass, "$!pos", rx1482_pos
    $P11 = rx1482_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1482_curclass, "$!pos"
    lt $I11, 0, rx1482_fail3265
    nqp_rxmark rx1482_bstack, rxsubrule1484_pass3272, -1, 0
  rxsubrule1484_pass3272:
    rx1482_cstack = rx1482_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1482_pos, $P11, rx1482_curclass, "$!pos"
    repr_bind_attr_int rx1482_cur, rx1482_curclass, "$!pos", rx1482_pos
    $P11 = rx1482_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1482_curclass, "$!pos"
    lt $I11, 0, rx1482_fail3265
    nqp_rxmark rx1482_bstack, rxsubrule1485_pass3273, -1, 0
  rxsubrule1485_pass3273:
    rx1482_cstack = rx1482_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1482_pos, $P11, rx1482_curclass, "$!pos"
    rx1482_cur."!cursor_pass"(rx1482_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1482_cur)
  rx1482_restart3264:
    repr_get_attr_obj rx1482_cstack, rx1482_cur, rx1482_curclass, "$!cstack"
  rx1482_fail3265:
    unless rx1482_bstack, rx1482_done3263
    pop $I19, rx1482_bstack
    if_null rx1482_cstack, rx1482_cstack_done3268
    unless rx1482_cstack, rx1482_cstack_done3268
    dec $I19
    set $P11, rx1482_cstack[$I19]
  rx1482_cstack_done3268:
    pop rx1482_rep, rx1482_bstack
    pop rx1482_pos, rx1482_bstack
    pop $I19, rx1482_bstack
    lt rx1482_pos, -1, rx1482_done3263
    lt rx1482_pos, 0, rx1482_fail3265
    eq $I19, 0, rx1482_fail3265
    nqp_islist $I20, rx1482_cstack
    unless $I20, rx1482_jump3266
    elements $I18, rx1482_bstack
    le $I18, 0, rx1482_cut3267
    dec $I18
    set $I18, rx1482_bstack[$I18]
  rx1482_cut3267:
    assign rx1482_cstack, $I18
  rx1482_jump3266:
    jump $I19
  rx1482_done3263:
    rx1482_cur."!cursor_fail"()
    .return (rx1482_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_180_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1364
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1486_start
    .local string rx1486_tgt
    .local int rx1486_pos
    .local int rx1486_off
    .local int rx1486_eos
    .local int rx1486_rep
    .local pmc rx1486_cur
    .local pmc rx1486_curclass
    .local pmc rx1486_bstack
    .local pmc rx1486_cstack
    rx1486_start = self."!cursor_start_all"()
    set rx1486_cur, rx1486_start[0]
    set rx1486_tgt, rx1486_start[1]
    set rx1486_pos, rx1486_start[2]
    set rx1486_curclass, rx1486_start[3]
    set rx1486_bstack, rx1486_start[4]
    set $I19, rx1486_start[5]
    store_lex unicode:"$\x{a2}", rx1486_cur
    length rx1486_eos, rx1486_tgt
    eq $I19, 1, rx1486_restart3276
    gt rx1486_pos, rx1486_eos, rx1486_fail3277
    repr_get_attr_int $I11, self, rx1486_curclass, "$!from"
    ne $I11, -1, rxscan1487_done3283
    goto rxscan1487_scan3282
  rxscan1487_loop3281:
    inc rx1486_pos
    gt rx1486_pos, rx1486_eos, rx1486_fail3277
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!from", rx1486_pos
  rxscan1487_scan3282:
    nqp_rxmark rx1486_bstack, rxscan1487_loop3281, rx1486_pos, 0
  rxscan1487_done3283:
    nqp_rxmark rx1486_bstack, rxcap1488_fail3285, rx1486_pos, 0
    add $I11, rx1486_pos, 2
    gt $I11, rx1486_eos, rx1486_fail3277
    substr $S10, rx1486_tgt, rx1486_pos, 2
    ne $S10, ucs4:"++", rx1486_fail3277
    add rx1486_pos, 2
    nqp_rxpeek $I19, rx1486_bstack, rxcap1488_fail3285
    inc $I19
    set $I11, rx1486_bstack[$I19]
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!pos", rx1486_pos
    $P11 = rx1486_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1486_pos)
    rx1486_cstack = rx1486_cur."!cursor_capture"($P11, "sym")
    goto rxcap1488_done3284
  rxcap1488_fail3285:
    goto rx1486_fail3277
  rxcap1488_done3284:
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!pos", rx1486_pos
    $P11 = rx1486_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1486_curclass, "$!pos"
    lt $I11, 0, rx1486_fail3277
    nqp_rxmark rx1486_bstack, rxsubrule1489_pass3286, -1, 0
  rxsubrule1489_pass3286:
    rx1486_cstack = rx1486_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1486_pos, $P11, rx1486_curclass, "$!pos"
    rx1486_cur."!cursor_pass"(rx1486_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1486_cur)
  rx1486_restart3276:
    repr_get_attr_obj rx1486_cstack, rx1486_cur, rx1486_curclass, "$!cstack"
  rx1486_fail3277:
    unless rx1486_bstack, rx1486_done3275
    pop $I19, rx1486_bstack
    if_null rx1486_cstack, rx1486_cstack_done3280
    unless rx1486_cstack, rx1486_cstack_done3280
    dec $I19
    set $P11, rx1486_cstack[$I19]
  rx1486_cstack_done3280:
    pop rx1486_rep, rx1486_bstack
    pop rx1486_pos, rx1486_bstack
    pop $I19, rx1486_bstack
    lt rx1486_pos, -1, rx1486_done3275
    lt rx1486_pos, 0, rx1486_fail3277
    eq $I19, 0, rx1486_fail3277
    nqp_islist $I20, rx1486_cstack
    unless $I20, rx1486_jump3278
    elements $I18, rx1486_bstack
    le $I18, 0, rx1486_cut3279
    dec $I18
    set $I18, rx1486_bstack[$I18]
  rx1486_cut3279:
    assign rx1486_cstack, $I18
  rx1486_jump3278:
    jump $I19
  rx1486_done3275:
    rx1486_cur."!cursor_fail"()
    .return (rx1486_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_181_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1490_start
    .local string rx1490_tgt
    .local int rx1490_pos
    .local int rx1490_off
    .local int rx1490_eos
    .local int rx1490_rep
    .local pmc rx1490_cur
    .local pmc rx1490_curclass
    .local pmc rx1490_bstack
    .local pmc rx1490_cstack
    rx1490_start = self."!cursor_start_all"()
    set rx1490_cur, rx1490_start[0]
    set rx1490_tgt, rx1490_start[1]
    set rx1490_pos, rx1490_start[2]
    set rx1490_curclass, rx1490_start[3]
    set rx1490_bstack, rx1490_start[4]
    set $I19, rx1490_start[5]
    store_lex unicode:"$\x{a2}", rx1490_cur
    length rx1490_eos, rx1490_tgt
    eq $I19, 1, rx1490_restart3289
    gt rx1490_pos, rx1490_eos, rx1490_fail3290
    repr_get_attr_int $I11, self, rx1490_curclass, "$!from"
    ne $I11, -1, rxscan1491_done3296
    goto rxscan1491_scan3295
  rxscan1491_loop3294:
    inc rx1490_pos
    gt rx1490_pos, rx1490_eos, rx1490_fail3290
    repr_bind_attr_int rx1490_cur, rx1490_curclass, "$!from", rx1490_pos
  rxscan1491_scan3295:
    nqp_rxmark rx1490_bstack, rxscan1491_loop3294, rx1490_pos, 0
  rxscan1491_done3296:
    nqp_rxmark rx1490_bstack, rxcap1492_fail3298, rx1490_pos, 0
    add $I11, rx1490_pos, 2
    gt $I11, rx1490_eos, rx1490_fail3290
    substr $S10, rx1490_tgt, rx1490_pos, 2
    ne $S10, ucs4:"--", rx1490_fail3290
    add rx1490_pos, 2
    nqp_rxpeek $I19, rx1490_bstack, rxcap1492_fail3298
    inc $I19
    set $I11, rx1490_bstack[$I19]
    repr_bind_attr_int rx1490_cur, rx1490_curclass, "$!pos", rx1490_pos
    $P11 = rx1490_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1490_pos)
    rx1490_cstack = rx1490_cur."!cursor_capture"($P11, "sym")
    goto rxcap1492_done3297
  rxcap1492_fail3298:
    goto rx1490_fail3290
  rxcap1492_done3297:
    repr_bind_attr_int rx1490_cur, rx1490_curclass, "$!pos", rx1490_pos
    $P11 = rx1490_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1490_curclass, "$!pos"
    lt $I11, 0, rx1490_fail3290
    nqp_rxmark rx1490_bstack, rxsubrule1493_pass3299, -1, 0
  rxsubrule1493_pass3299:
    rx1490_cstack = rx1490_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1490_pos, $P11, rx1490_curclass, "$!pos"
    rx1490_cur."!cursor_pass"(rx1490_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1490_cur)
  rx1490_restart3289:
    repr_get_attr_obj rx1490_cstack, rx1490_cur, rx1490_curclass, "$!cstack"
  rx1490_fail3290:
    unless rx1490_bstack, rx1490_done3288
    pop $I19, rx1490_bstack
    if_null rx1490_cstack, rx1490_cstack_done3293
    unless rx1490_cstack, rx1490_cstack_done3293
    dec $I19
    set $P11, rx1490_cstack[$I19]
  rx1490_cstack_done3293:
    pop rx1490_rep, rx1490_bstack
    pop rx1490_pos, rx1490_bstack
    pop $I19, rx1490_bstack
    lt rx1490_pos, -1, rx1490_done3288
    lt rx1490_pos, 0, rx1490_fail3290
    eq $I19, 0, rx1490_fail3290
    nqp_islist $I20, rx1490_cstack
    unless $I20, rx1490_jump3291
    elements $I18, rx1490_bstack
    le $I18, 0, rx1490_cut3292
    dec $I18
    set $I18, rx1490_bstack[$I18]
  rx1490_cut3292:
    assign rx1490_cstack, $I18
  rx1490_jump3291:
    jump $I19
  rx1490_done3288:
    rx1490_cur."!cursor_fail"()
    .return (rx1490_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_182_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1367
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1494_start
    .local string rx1494_tgt
    .local int rx1494_pos
    .local int rx1494_off
    .local int rx1494_eos
    .local int rx1494_rep
    .local pmc rx1494_cur
    .local pmc rx1494_curclass
    .local pmc rx1494_bstack
    .local pmc rx1494_cstack
    rx1494_start = self."!cursor_start_all"()
    set rx1494_cur, rx1494_start[0]
    set rx1494_tgt, rx1494_start[1]
    set rx1494_pos, rx1494_start[2]
    set rx1494_curclass, rx1494_start[3]
    set rx1494_bstack, rx1494_start[4]
    set $I19, rx1494_start[5]
    store_lex unicode:"$\x{a2}", rx1494_cur
    length rx1494_eos, rx1494_tgt
    eq $I19, 1, rx1494_restart3302
    gt rx1494_pos, rx1494_eos, rx1494_fail3303
    repr_get_attr_int $I11, self, rx1494_curclass, "$!from"
    ne $I11, -1, rxscan1495_done3309
    goto rxscan1495_scan3308
  rxscan1495_loop3307:
    inc rx1494_pos
    gt rx1494_pos, rx1494_eos, rx1494_fail3303
    repr_bind_attr_int rx1494_cur, rx1494_curclass, "$!from", rx1494_pos
  rxscan1495_scan3308:
    nqp_rxmark rx1494_bstack, rxscan1495_loop3307, rx1494_pos, 0
  rxscan1495_done3309:
    nqp_rxmark rx1494_bstack, rxcap1496_fail3311, rx1494_pos, 0
    add $I11, rx1494_pos, 2
    gt $I11, rx1494_eos, rx1494_fail3303
    substr $S10, rx1494_tgt, rx1494_pos, 2
    ne $S10, ucs4:"++", rx1494_fail3303
    add rx1494_pos, 2
    nqp_rxpeek $I19, rx1494_bstack, rxcap1496_fail3311
    inc $I19
    set $I11, rx1494_bstack[$I19]
    repr_bind_attr_int rx1494_cur, rx1494_curclass, "$!pos", rx1494_pos
    $P11 = rx1494_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1494_pos)
    rx1494_cstack = rx1494_cur."!cursor_capture"($P11, "sym")
    goto rxcap1496_done3310
  rxcap1496_fail3311:
    goto rx1494_fail3303
  rxcap1496_done3310:
    repr_bind_attr_int rx1494_cur, rx1494_curclass, "$!pos", rx1494_pos
    $P11 = rx1494_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1494_curclass, "$!pos"
    lt $I11, 0, rx1494_fail3303
    nqp_rxmark rx1494_bstack, rxsubrule1497_pass3312, -1, 0
  rxsubrule1497_pass3312:
    rx1494_cstack = rx1494_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1494_pos, $P11, rx1494_curclass, "$!pos"
    rx1494_cur."!cursor_pass"(rx1494_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1494_cur)
  rx1494_restart3302:
    repr_get_attr_obj rx1494_cstack, rx1494_cur, rx1494_curclass, "$!cstack"
  rx1494_fail3303:
    unless rx1494_bstack, rx1494_done3301
    pop $I19, rx1494_bstack
    if_null rx1494_cstack, rx1494_cstack_done3306
    unless rx1494_cstack, rx1494_cstack_done3306
    dec $I19
    set $P11, rx1494_cstack[$I19]
  rx1494_cstack_done3306:
    pop rx1494_rep, rx1494_bstack
    pop rx1494_pos, rx1494_bstack
    pop $I19, rx1494_bstack
    lt rx1494_pos, -1, rx1494_done3301
    lt rx1494_pos, 0, rx1494_fail3303
    eq $I19, 0, rx1494_fail3303
    nqp_islist $I20, rx1494_cstack
    unless $I20, rx1494_jump3304
    elements $I18, rx1494_bstack
    le $I18, 0, rx1494_cut3305
    dec $I18
    set $I18, rx1494_bstack[$I18]
  rx1494_cut3305:
    assign rx1494_cstack, $I18
  rx1494_jump3304:
    jump $I19
  rx1494_done3301:
    rx1494_cur."!cursor_fail"()
    .return (rx1494_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_183_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1498_start
    .local string rx1498_tgt
    .local int rx1498_pos
    .local int rx1498_off
    .local int rx1498_eos
    .local int rx1498_rep
    .local pmc rx1498_cur
    .local pmc rx1498_curclass
    .local pmc rx1498_bstack
    .local pmc rx1498_cstack
    rx1498_start = self."!cursor_start_all"()
    set rx1498_cur, rx1498_start[0]
    set rx1498_tgt, rx1498_start[1]
    set rx1498_pos, rx1498_start[2]
    set rx1498_curclass, rx1498_start[3]
    set rx1498_bstack, rx1498_start[4]
    set $I19, rx1498_start[5]
    store_lex unicode:"$\x{a2}", rx1498_cur
    length rx1498_eos, rx1498_tgt
    eq $I19, 1, rx1498_restart3315
    gt rx1498_pos, rx1498_eos, rx1498_fail3316
    repr_get_attr_int $I11, self, rx1498_curclass, "$!from"
    ne $I11, -1, rxscan1499_done3322
    goto rxscan1499_scan3321
  rxscan1499_loop3320:
    inc rx1498_pos
    gt rx1498_pos, rx1498_eos, rx1498_fail3316
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!from", rx1498_pos
  rxscan1499_scan3321:
    nqp_rxmark rx1498_bstack, rxscan1499_loop3320, rx1498_pos, 0
  rxscan1499_done3322:
    nqp_rxmark rx1498_bstack, rxcap1500_fail3324, rx1498_pos, 0
    add $I11, rx1498_pos, 2
    gt $I11, rx1498_eos, rx1498_fail3316
    substr $S10, rx1498_tgt, rx1498_pos, 2
    ne $S10, ucs4:"--", rx1498_fail3316
    add rx1498_pos, 2
    nqp_rxpeek $I19, rx1498_bstack, rxcap1500_fail3324
    inc $I19
    set $I11, rx1498_bstack[$I19]
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!pos", rx1498_pos
    $P11 = rx1498_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1498_pos)
    rx1498_cstack = rx1498_cur."!cursor_capture"($P11, "sym")
    goto rxcap1500_done3323
  rxcap1500_fail3324:
    goto rx1498_fail3316
  rxcap1500_done3323:
    repr_bind_attr_int rx1498_cur, rx1498_curclass, "$!pos", rx1498_pos
    $P11 = rx1498_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1498_curclass, "$!pos"
    lt $I11, 0, rx1498_fail3316
    nqp_rxmark rx1498_bstack, rxsubrule1501_pass3325, -1, 0
  rxsubrule1501_pass3325:
    rx1498_cstack = rx1498_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1498_pos, $P11, rx1498_curclass, "$!pos"
    rx1498_cur."!cursor_pass"(rx1498_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1498_cur)
  rx1498_restart3315:
    repr_get_attr_obj rx1498_cstack, rx1498_cur, rx1498_curclass, "$!cstack"
  rx1498_fail3316:
    unless rx1498_bstack, rx1498_done3314
    pop $I19, rx1498_bstack
    if_null rx1498_cstack, rx1498_cstack_done3319
    unless rx1498_cstack, rx1498_cstack_done3319
    dec $I19
    set $P11, rx1498_cstack[$I19]
  rx1498_cstack_done3319:
    pop rx1498_rep, rx1498_bstack
    pop rx1498_pos, rx1498_bstack
    pop $I19, rx1498_bstack
    lt rx1498_pos, -1, rx1498_done3314
    lt rx1498_pos, 0, rx1498_fail3316
    eq $I19, 0, rx1498_fail3316
    nqp_islist $I20, rx1498_cstack
    unless $I20, rx1498_jump3317
    elements $I18, rx1498_bstack
    le $I18, 0, rx1498_cut3318
    dec $I18
    set $I18, rx1498_bstack[$I18]
  rx1498_cut3318:
    assign rx1498_cstack, $I18
  rx1498_jump3317:
    jump $I19
  rx1498_done3314:
    rx1498_cur."!cursor_fail"()
    .return (rx1498_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_184_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1370
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1502_start
    .local string rx1502_tgt
    .local int rx1502_pos
    .local int rx1502_off
    .local int rx1502_eos
    .local int rx1502_rep
    .local pmc rx1502_cur
    .local pmc rx1502_curclass
    .local pmc rx1502_bstack
    .local pmc rx1502_cstack
    rx1502_start = self."!cursor_start_all"()
    set rx1502_cur, rx1502_start[0]
    set rx1502_tgt, rx1502_start[1]
    set rx1502_pos, rx1502_start[2]
    set rx1502_curclass, rx1502_start[3]
    set rx1502_bstack, rx1502_start[4]
    set $I19, rx1502_start[5]
    store_lex unicode:"$\x{a2}", rx1502_cur
    length rx1502_eos, rx1502_tgt
    eq $I19, 1, rx1502_restart3328
    gt rx1502_pos, rx1502_eos, rx1502_fail3329
    repr_get_attr_int $I11, self, rx1502_curclass, "$!from"
    ne $I11, -1, rxscan1503_done3335
    goto rxscan1503_scan3334
  rxscan1503_loop3333:
    inc rx1502_pos
    gt rx1502_pos, rx1502_eos, rx1502_fail3329
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!from", rx1502_pos
  rxscan1503_scan3334:
    nqp_rxmark rx1502_bstack, rxscan1503_loop3333, rx1502_pos, 0
  rxscan1503_done3335:
    nqp_rxmark rx1502_bstack, rxcap1504_fail3337, rx1502_pos, 0
    add $I11, rx1502_pos, 2
    gt $I11, rx1502_eos, rx1502_fail3329
    substr $S10, rx1502_tgt, rx1502_pos, 2
    ne $S10, ucs4:"**", rx1502_fail3329
    add rx1502_pos, 2
    nqp_rxpeek $I19, rx1502_bstack, rxcap1504_fail3337
    inc $I19
    set $I11, rx1502_bstack[$I19]
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    $P11 = rx1502_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1502_pos)
    rx1502_cstack = rx1502_cur."!cursor_capture"($P11, "sym")
    goto rxcap1504_done3336
  rxcap1504_fail3337:
    goto rx1502_fail3329
  rxcap1504_done3336:
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    $P11 = rx1502_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1502_curclass, "$!pos"
    lt $I11, 0, rx1502_fail3329
    nqp_rxmark rx1502_bstack, rxsubrule1505_pass3338, -1, 0
  rxsubrule1505_pass3338:
    rx1502_cstack = rx1502_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1502_pos, $P11, rx1502_curclass, "$!pos"
    rx1502_cur."!cursor_pass"(rx1502_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1502_cur)
  rx1502_restart3328:
    repr_get_attr_obj rx1502_cstack, rx1502_cur, rx1502_curclass, "$!cstack"
  rx1502_fail3329:
    unless rx1502_bstack, rx1502_done3327
    pop $I19, rx1502_bstack
    if_null rx1502_cstack, rx1502_cstack_done3332
    unless rx1502_cstack, rx1502_cstack_done3332
    dec $I19
    set $P11, rx1502_cstack[$I19]
  rx1502_cstack_done3332:
    pop rx1502_rep, rx1502_bstack
    pop rx1502_pos, rx1502_bstack
    pop $I19, rx1502_bstack
    lt rx1502_pos, -1, rx1502_done3327
    lt rx1502_pos, 0, rx1502_fail3329
    eq $I19, 0, rx1502_fail3329
    nqp_islist $I20, rx1502_cstack
    unless $I20, rx1502_jump3330
    elements $I18, rx1502_bstack
    le $I18, 0, rx1502_cut3331
    dec $I18
    set $I18, rx1502_bstack[$I18]
  rx1502_cut3331:
    assign rx1502_cstack, $I18
  rx1502_jump3330:
    jump $I19
  rx1502_done3327:
    rx1502_cur."!cursor_fail"()
    .return (rx1502_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_185_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1372
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1506_start
    .local string rx1506_tgt
    .local int rx1506_pos
    .local int rx1506_off
    .local int rx1506_eos
    .local int rx1506_rep
    .local pmc rx1506_cur
    .local pmc rx1506_curclass
    .local pmc rx1506_bstack
    .local pmc rx1506_cstack
    rx1506_start = self."!cursor_start_all"()
    set rx1506_cur, rx1506_start[0]
    set rx1506_tgt, rx1506_start[1]
    set rx1506_pos, rx1506_start[2]
    set rx1506_curclass, rx1506_start[3]
    set rx1506_bstack, rx1506_start[4]
    set $I19, rx1506_start[5]
    store_lex unicode:"$\x{a2}", rx1506_cur
    length rx1506_eos, rx1506_tgt
    eq $I19, 1, rx1506_restart3341
    gt rx1506_pos, rx1506_eos, rx1506_fail3342
    repr_get_attr_int $I11, self, rx1506_curclass, "$!from"
    ne $I11, -1, rxscan1507_done3348
    goto rxscan1507_scan3347
  rxscan1507_loop3346:
    inc rx1506_pos
    gt rx1506_pos, rx1506_eos, rx1506_fail3342
    repr_bind_attr_int rx1506_cur, rx1506_curclass, "$!from", rx1506_pos
  rxscan1507_scan3347:
    nqp_rxmark rx1506_bstack, rxscan1507_loop3346, rx1506_pos, 0
  rxscan1507_done3348:
    nqp_rxmark rx1506_bstack, rxcap1508_fail3350, rx1506_pos, 0
    add $I11, rx1506_pos, 1
    gt $I11, rx1506_eos, rx1506_fail3342
    substr $S10, rx1506_tgt, rx1506_pos, 1
    ne $S10, ucs4:"+", rx1506_fail3342
    add rx1506_pos, 1
    nqp_rxpeek $I19, rx1506_bstack, rxcap1508_fail3350
    inc $I19
    set $I11, rx1506_bstack[$I19]
    repr_bind_attr_int rx1506_cur, rx1506_curclass, "$!pos", rx1506_pos
    $P11 = rx1506_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1506_pos)
    rx1506_cstack = rx1506_cur."!cursor_capture"($P11, "sym")
    goto rxcap1508_done3349
  rxcap1508_fail3350:
    goto rx1506_fail3342
  rxcap1508_done3349:
    repr_bind_attr_int rx1506_cur, rx1506_curclass, "$!pos", rx1506_pos
    $P11 = rx1506_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1506_curclass, "$!pos"
    lt $I11, 0, rx1506_fail3342
    nqp_rxmark rx1506_bstack, rxsubrule1509_pass3351, -1, 0
  rxsubrule1509_pass3351:
    rx1506_cstack = rx1506_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1506_pos, $P11, rx1506_curclass, "$!pos"
    rx1506_cur."!cursor_pass"(rx1506_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1506_cur)
  rx1506_restart3341:
    repr_get_attr_obj rx1506_cstack, rx1506_cur, rx1506_curclass, "$!cstack"
  rx1506_fail3342:
    unless rx1506_bstack, rx1506_done3340
    pop $I19, rx1506_bstack
    if_null rx1506_cstack, rx1506_cstack_done3345
    unless rx1506_cstack, rx1506_cstack_done3345
    dec $I19
    set $P11, rx1506_cstack[$I19]
  rx1506_cstack_done3345:
    pop rx1506_rep, rx1506_bstack
    pop rx1506_pos, rx1506_bstack
    pop $I19, rx1506_bstack
    lt rx1506_pos, -1, rx1506_done3340
    lt rx1506_pos, 0, rx1506_fail3342
    eq $I19, 0, rx1506_fail3342
    nqp_islist $I20, rx1506_cstack
    unless $I20, rx1506_jump3343
    elements $I18, rx1506_bstack
    le $I18, 0, rx1506_cut3344
    dec $I18
    set $I18, rx1506_bstack[$I18]
  rx1506_cut3344:
    assign rx1506_cstack, $I18
  rx1506_jump3343:
    jump $I19
  rx1506_done3340:
    rx1506_cur."!cursor_fail"()
    .return (rx1506_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_186_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1510_start
    .local string rx1510_tgt
    .local int rx1510_pos
    .local int rx1510_off
    .local int rx1510_eos
    .local int rx1510_rep
    .local pmc rx1510_cur
    .local pmc rx1510_curclass
    .local pmc rx1510_bstack
    .local pmc rx1510_cstack
    rx1510_start = self."!cursor_start_all"()
    set rx1510_cur, rx1510_start[0]
    set rx1510_tgt, rx1510_start[1]
    set rx1510_pos, rx1510_start[2]
    set rx1510_curclass, rx1510_start[3]
    set rx1510_bstack, rx1510_start[4]
    set $I19, rx1510_start[5]
    store_lex unicode:"$\x{a2}", rx1510_cur
    length rx1510_eos, rx1510_tgt
    eq $I19, 1, rx1510_restart3354
    gt rx1510_pos, rx1510_eos, rx1510_fail3355
    repr_get_attr_int $I11, self, rx1510_curclass, "$!from"
    ne $I11, -1, rxscan1511_done3361
    goto rxscan1511_scan3360
  rxscan1511_loop3359:
    inc rx1510_pos
    gt rx1510_pos, rx1510_eos, rx1510_fail3355
    repr_bind_attr_int rx1510_cur, rx1510_curclass, "$!from", rx1510_pos
  rxscan1511_scan3360:
    nqp_rxmark rx1510_bstack, rxscan1511_loop3359, rx1510_pos, 0
  rxscan1511_done3361:
    nqp_rxmark rx1510_bstack, rxcap1512_fail3363, rx1510_pos, 0
    add $I11, rx1510_pos, 1
    gt $I11, rx1510_eos, rx1510_fail3355
    substr $S10, rx1510_tgt, rx1510_pos, 1
    ne $S10, ucs4:"~", rx1510_fail3355
    add rx1510_pos, 1
    nqp_rxpeek $I19, rx1510_bstack, rxcap1512_fail3363
    inc $I19
    set $I11, rx1510_bstack[$I19]
    repr_bind_attr_int rx1510_cur, rx1510_curclass, "$!pos", rx1510_pos
    $P11 = rx1510_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1510_pos)
    rx1510_cstack = rx1510_cur."!cursor_capture"($P11, "sym")
    goto rxcap1512_done3362
  rxcap1512_fail3363:
    goto rx1510_fail3355
  rxcap1512_done3362:
    repr_bind_attr_int rx1510_cur, rx1510_curclass, "$!pos", rx1510_pos
    $P11 = rx1510_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1510_curclass, "$!pos"
    lt $I11, 0, rx1510_fail3355
    nqp_rxmark rx1510_bstack, rxsubrule1513_pass3364, -1, 0
  rxsubrule1513_pass3364:
    rx1510_cstack = rx1510_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1510_pos, $P11, rx1510_curclass, "$!pos"
    rx1510_cur."!cursor_pass"(rx1510_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1510_cur)
  rx1510_restart3354:
    repr_get_attr_obj rx1510_cstack, rx1510_cur, rx1510_curclass, "$!cstack"
  rx1510_fail3355:
    unless rx1510_bstack, rx1510_done3353
    pop $I19, rx1510_bstack
    if_null rx1510_cstack, rx1510_cstack_done3358
    unless rx1510_cstack, rx1510_cstack_done3358
    dec $I19
    set $P11, rx1510_cstack[$I19]
  rx1510_cstack_done3358:
    pop rx1510_rep, rx1510_bstack
    pop rx1510_pos, rx1510_bstack
    pop $I19, rx1510_bstack
    lt rx1510_pos, -1, rx1510_done3353
    lt rx1510_pos, 0, rx1510_fail3355
    eq $I19, 0, rx1510_fail3355
    nqp_islist $I20, rx1510_cstack
    unless $I20, rx1510_jump3356
    elements $I18, rx1510_bstack
    le $I18, 0, rx1510_cut3357
    dec $I18
    set $I18, rx1510_bstack[$I18]
  rx1510_cut3357:
    assign rx1510_cstack, $I18
  rx1510_jump3356:
    jump $I19
  rx1510_done3353:
    rx1510_cur."!cursor_fail"()
    .return (rx1510_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_187_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1514_start
    .local string rx1514_tgt
    .local int rx1514_pos
    .local int rx1514_off
    .local int rx1514_eos
    .local int rx1514_rep
    .local pmc rx1514_cur
    .local pmc rx1514_curclass
    .local pmc rx1514_bstack
    .local pmc rx1514_cstack
    rx1514_start = self."!cursor_start_all"()
    set rx1514_cur, rx1514_start[0]
    set rx1514_tgt, rx1514_start[1]
    set rx1514_pos, rx1514_start[2]
    set rx1514_curclass, rx1514_start[3]
    set rx1514_bstack, rx1514_start[4]
    set $I19, rx1514_start[5]
    store_lex unicode:"$\x{a2}", rx1514_cur
    length rx1514_eos, rx1514_tgt
    eq $I19, 1, rx1514_restart3367
    gt rx1514_pos, rx1514_eos, rx1514_fail3368
    repr_get_attr_int $I11, self, rx1514_curclass, "$!from"
    ne $I11, -1, rxscan1515_done3374
    goto rxscan1515_scan3373
  rxscan1515_loop3372:
    inc rx1514_pos
    gt rx1514_pos, rx1514_eos, rx1514_fail3368
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!from", rx1514_pos
  rxscan1515_scan3373:
    nqp_rxmark rx1514_bstack, rxscan1515_loop3372, rx1514_pos, 0
  rxscan1515_done3374:
    nqp_rxmark rx1514_bstack, rxcap1516_fail3376, rx1514_pos, 0
    add $I11, rx1514_pos, 1
    gt $I11, rx1514_eos, rx1514_fail3368
    substr $S10, rx1514_tgt, rx1514_pos, 1
    ne $S10, ucs4:"-", rx1514_fail3368
    add rx1514_pos, 1
    nqp_rxpeek $I19, rx1514_bstack, rxcap1516_fail3376
    inc $I19
    set $I11, rx1514_bstack[$I19]
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!pos", rx1514_pos
    $P11 = rx1514_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1514_pos)
    rx1514_cstack = rx1514_cur."!cursor_capture"($P11, "sym")
    goto rxcap1516_done3375
  rxcap1516_fail3376:
    goto rx1514_fail3368
  rxcap1516_done3375:
    ge rx1514_pos, rx1514_eos, rx1514_fail3368
    substr $S11, rx1514_tgt, rx1514_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1514_fail3368
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!pos", rx1514_pos
    $P11 = rx1514_cur."number"()
    repr_get_attr_int $I11, $P11, rx1514_curclass, "$!pos"
    ge $I11, 0, rx1514_fail3368
    repr_bind_attr_int rx1514_cur, rx1514_curclass, "$!pos", rx1514_pos
    $P11 = rx1514_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1514_curclass, "$!pos"
    lt $I11, 0, rx1514_fail3368
    nqp_rxmark rx1514_bstack, rxsubrule1517_pass3377, -1, 0
  rxsubrule1517_pass3377:
    rx1514_cstack = rx1514_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1514_pos, $P11, rx1514_curclass, "$!pos"
    rx1514_cur."!cursor_pass"(rx1514_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1514_cur)
  rx1514_restart3367:
    repr_get_attr_obj rx1514_cstack, rx1514_cur, rx1514_curclass, "$!cstack"
  rx1514_fail3368:
    unless rx1514_bstack, rx1514_done3366
    pop $I19, rx1514_bstack
    if_null rx1514_cstack, rx1514_cstack_done3371
    unless rx1514_cstack, rx1514_cstack_done3371
    dec $I19
    set $P11, rx1514_cstack[$I19]
  rx1514_cstack_done3371:
    pop rx1514_rep, rx1514_bstack
    pop rx1514_pos, rx1514_bstack
    pop $I19, rx1514_bstack
    lt rx1514_pos, -1, rx1514_done3366
    lt rx1514_pos, 0, rx1514_fail3368
    eq $I19, 0, rx1514_fail3368
    nqp_islist $I20, rx1514_cstack
    unless $I20, rx1514_jump3369
    elements $I18, rx1514_bstack
    le $I18, 0, rx1514_cut3370
    dec $I18
    set $I18, rx1514_bstack[$I18]
  rx1514_cut3370:
    assign rx1514_cstack, $I18
  rx1514_jump3369:
    jump $I19
  rx1514_done3366:
    rx1514_cur."!cursor_fail"()
    .return (rx1514_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_188_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1518_start
    .local string rx1518_tgt
    .local int rx1518_pos
    .local int rx1518_off
    .local int rx1518_eos
    .local int rx1518_rep
    .local pmc rx1518_cur
    .local pmc rx1518_curclass
    .local pmc rx1518_bstack
    .local pmc rx1518_cstack
    rx1518_start = self."!cursor_start_all"()
    set rx1518_cur, rx1518_start[0]
    set rx1518_tgt, rx1518_start[1]
    set rx1518_pos, rx1518_start[2]
    set rx1518_curclass, rx1518_start[3]
    set rx1518_bstack, rx1518_start[4]
    set $I19, rx1518_start[5]
    store_lex unicode:"$\x{a2}", rx1518_cur
    length rx1518_eos, rx1518_tgt
    eq $I19, 1, rx1518_restart3380
    gt rx1518_pos, rx1518_eos, rx1518_fail3381
    repr_get_attr_int $I11, self, rx1518_curclass, "$!from"
    ne $I11, -1, rxscan1519_done3387
    goto rxscan1519_scan3386
  rxscan1519_loop3385:
    inc rx1518_pos
    gt rx1518_pos, rx1518_eos, rx1518_fail3381
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!from", rx1518_pos
  rxscan1519_scan3386:
    nqp_rxmark rx1518_bstack, rxscan1519_loop3385, rx1518_pos, 0
  rxscan1519_done3387:
    nqp_rxmark rx1518_bstack, rxcap1520_fail3389, rx1518_pos, 0
    add $I11, rx1518_pos, 1
    gt $I11, rx1518_eos, rx1518_fail3381
    substr $S10, rx1518_tgt, rx1518_pos, 1
    ne $S10, ucs4:"?", rx1518_fail3381
    add rx1518_pos, 1
    nqp_rxpeek $I19, rx1518_bstack, rxcap1520_fail3389
    inc $I19
    set $I11, rx1518_bstack[$I19]
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!pos", rx1518_pos
    $P11 = rx1518_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1518_pos)
    rx1518_cstack = rx1518_cur."!cursor_capture"($P11, "sym")
    goto rxcap1520_done3388
  rxcap1520_fail3389:
    goto rx1518_fail3381
  rxcap1520_done3388:
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!pos", rx1518_pos
    $P11 = rx1518_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1518_curclass, "$!pos"
    lt $I11, 0, rx1518_fail3381
    nqp_rxmark rx1518_bstack, rxsubrule1521_pass3390, -1, 0
  rxsubrule1521_pass3390:
    rx1518_cstack = rx1518_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1518_pos, $P11, rx1518_curclass, "$!pos"
    rx1518_cur."!cursor_pass"(rx1518_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1518_cur)
  rx1518_restart3380:
    repr_get_attr_obj rx1518_cstack, rx1518_cur, rx1518_curclass, "$!cstack"
  rx1518_fail3381:
    unless rx1518_bstack, rx1518_done3379
    pop $I19, rx1518_bstack
    if_null rx1518_cstack, rx1518_cstack_done3384
    unless rx1518_cstack, rx1518_cstack_done3384
    dec $I19
    set $P11, rx1518_cstack[$I19]
  rx1518_cstack_done3384:
    pop rx1518_rep, rx1518_bstack
    pop rx1518_pos, rx1518_bstack
    pop $I19, rx1518_bstack
    lt rx1518_pos, -1, rx1518_done3379
    lt rx1518_pos, 0, rx1518_fail3381
    eq $I19, 0, rx1518_fail3381
    nqp_islist $I20, rx1518_cstack
    unless $I20, rx1518_jump3382
    elements $I18, rx1518_bstack
    le $I18, 0, rx1518_cut3383
    dec $I18
    set $I18, rx1518_bstack[$I18]
  rx1518_cut3383:
    assign rx1518_cstack, $I18
  rx1518_jump3382:
    jump $I19
  rx1518_done3379:
    rx1518_cur."!cursor_fail"()
    .return (rx1518_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_189_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1522_start
    .local string rx1522_tgt
    .local int rx1522_pos
    .local int rx1522_off
    .local int rx1522_eos
    .local int rx1522_rep
    .local pmc rx1522_cur
    .local pmc rx1522_curclass
    .local pmc rx1522_bstack
    .local pmc rx1522_cstack
    rx1522_start = self."!cursor_start_all"()
    set rx1522_cur, rx1522_start[0]
    set rx1522_tgt, rx1522_start[1]
    set rx1522_pos, rx1522_start[2]
    set rx1522_curclass, rx1522_start[3]
    set rx1522_bstack, rx1522_start[4]
    set $I19, rx1522_start[5]
    store_lex unicode:"$\x{a2}", rx1522_cur
    length rx1522_eos, rx1522_tgt
    eq $I19, 1, rx1522_restart3393
    gt rx1522_pos, rx1522_eos, rx1522_fail3394
    repr_get_attr_int $I11, self, rx1522_curclass, "$!from"
    ne $I11, -1, rxscan1523_done3400
    goto rxscan1523_scan3399
  rxscan1523_loop3398:
    inc rx1522_pos
    gt rx1522_pos, rx1522_eos, rx1522_fail3394
    repr_bind_attr_int rx1522_cur, rx1522_curclass, "$!from", rx1522_pos
  rxscan1523_scan3399:
    nqp_rxmark rx1522_bstack, rxscan1523_loop3398, rx1522_pos, 0
  rxscan1523_done3400:
    nqp_rxmark rx1522_bstack, rxcap1524_fail3402, rx1522_pos, 0
    add $I11, rx1522_pos, 1
    gt $I11, rx1522_eos, rx1522_fail3394
    substr $S10, rx1522_tgt, rx1522_pos, 1
    ne $S10, ucs4:"!", rx1522_fail3394
    add rx1522_pos, 1
    nqp_rxpeek $I19, rx1522_bstack, rxcap1524_fail3402
    inc $I19
    set $I11, rx1522_bstack[$I19]
    repr_bind_attr_int rx1522_cur, rx1522_curclass, "$!pos", rx1522_pos
    $P11 = rx1522_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1522_pos)
    rx1522_cstack = rx1522_cur."!cursor_capture"($P11, "sym")
    goto rxcap1524_done3401
  rxcap1524_fail3402:
    goto rx1522_fail3394
  rxcap1524_done3401:
    repr_bind_attr_int rx1522_cur, rx1522_curclass, "$!pos", rx1522_pos
    $P11 = rx1522_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1522_curclass, "$!pos"
    lt $I11, 0, rx1522_fail3394
    nqp_rxmark rx1522_bstack, rxsubrule1525_pass3403, -1, 0
  rxsubrule1525_pass3403:
    rx1522_cstack = rx1522_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1522_pos, $P11, rx1522_curclass, "$!pos"
    rx1522_cur."!cursor_pass"(rx1522_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1522_cur)
  rx1522_restart3393:
    repr_get_attr_obj rx1522_cstack, rx1522_cur, rx1522_curclass, "$!cstack"
  rx1522_fail3394:
    unless rx1522_bstack, rx1522_done3392
    pop $I19, rx1522_bstack
    if_null rx1522_cstack, rx1522_cstack_done3397
    unless rx1522_cstack, rx1522_cstack_done3397
    dec $I19
    set $P11, rx1522_cstack[$I19]
  rx1522_cstack_done3397:
    pop rx1522_rep, rx1522_bstack
    pop rx1522_pos, rx1522_bstack
    pop $I19, rx1522_bstack
    lt rx1522_pos, -1, rx1522_done3392
    lt rx1522_pos, 0, rx1522_fail3394
    eq $I19, 0, rx1522_fail3394
    nqp_islist $I20, rx1522_cstack
    unless $I20, rx1522_jump3395
    elements $I18, rx1522_bstack
    le $I18, 0, rx1522_cut3396
    dec $I18
    set $I18, rx1522_bstack[$I18]
  rx1522_cut3396:
    assign rx1522_cstack, $I18
  rx1522_jump3395:
    jump $I19
  rx1522_done3392:
    rx1522_cur."!cursor_fail"()
    .return (rx1522_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_190_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1526_start
    .local string rx1526_tgt
    .local int rx1526_pos
    .local int rx1526_off
    .local int rx1526_eos
    .local int rx1526_rep
    .local pmc rx1526_cur
    .local pmc rx1526_curclass
    .local pmc rx1526_bstack
    .local pmc rx1526_cstack
    rx1526_start = self."!cursor_start_all"()
    set rx1526_cur, rx1526_start[0]
    set rx1526_tgt, rx1526_start[1]
    set rx1526_pos, rx1526_start[2]
    set rx1526_curclass, rx1526_start[3]
    set rx1526_bstack, rx1526_start[4]
    set $I19, rx1526_start[5]
    store_lex unicode:"$\x{a2}", rx1526_cur
    length rx1526_eos, rx1526_tgt
    eq $I19, 1, rx1526_restart3406
    gt rx1526_pos, rx1526_eos, rx1526_fail3407
    repr_get_attr_int $I11, self, rx1526_curclass, "$!from"
    ne $I11, -1, rxscan1527_done3413
    goto rxscan1527_scan3412
  rxscan1527_loop3411:
    inc rx1526_pos
    gt rx1526_pos, rx1526_eos, rx1526_fail3407
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!from", rx1526_pos
  rxscan1527_scan3412:
    nqp_rxmark rx1526_bstack, rxscan1527_loop3411, rx1526_pos, 0
  rxscan1527_done3413:
    nqp_rxmark rx1526_bstack, rxcap1528_fail3415, rx1526_pos, 0
    add $I11, rx1526_pos, 1
    gt $I11, rx1526_eos, rx1526_fail3407
    substr $S10, rx1526_tgt, rx1526_pos, 1
    ne $S10, ucs4:"|", rx1526_fail3407
    add rx1526_pos, 1
    nqp_rxpeek $I19, rx1526_bstack, rxcap1528_fail3415
    inc $I19
    set $I11, rx1526_bstack[$I19]
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1526_pos)
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "sym")
    goto rxcap1528_done3414
  rxcap1528_fail3415:
    goto rx1526_fail3407
  rxcap1528_done3414:
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1526_curclass, "$!pos"
    lt $I11, 0, rx1526_fail3407
    nqp_rxmark rx1526_bstack, rxsubrule1529_pass3416, -1, 0
  rxsubrule1529_pass3416:
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1526_pos, $P11, rx1526_curclass, "$!pos"
    rx1526_cur."!cursor_pass"(rx1526_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1526_cur)
  rx1526_restart3406:
    repr_get_attr_obj rx1526_cstack, rx1526_cur, rx1526_curclass, "$!cstack"
  rx1526_fail3407:
    unless rx1526_bstack, rx1526_done3405
    pop $I19, rx1526_bstack
    if_null rx1526_cstack, rx1526_cstack_done3410
    unless rx1526_cstack, rx1526_cstack_done3410
    dec $I19
    set $P11, rx1526_cstack[$I19]
  rx1526_cstack_done3410:
    pop rx1526_rep, rx1526_bstack
    pop rx1526_pos, rx1526_bstack
    pop $I19, rx1526_bstack
    lt rx1526_pos, -1, rx1526_done3405
    lt rx1526_pos, 0, rx1526_fail3407
    eq $I19, 0, rx1526_fail3407
    nqp_islist $I20, rx1526_cstack
    unless $I20, rx1526_jump3408
    elements $I18, rx1526_bstack
    le $I18, 0, rx1526_cut3409
    dec $I18
    set $I18, rx1526_bstack[$I18]
  rx1526_cut3409:
    assign rx1526_cstack, $I18
  rx1526_jump3408:
    jump $I19
  rx1526_done3405:
    rx1526_cur."!cursor_fail"()
    .return (rx1526_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_191_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1379
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1530_start
    .local string rx1530_tgt
    .local int rx1530_pos
    .local int rx1530_off
    .local int rx1530_eos
    .local int rx1530_rep
    .local pmc rx1530_cur
    .local pmc rx1530_curclass
    .local pmc rx1530_bstack
    .local pmc rx1530_cstack
    rx1530_start = self."!cursor_start_all"()
    set rx1530_cur, rx1530_start[0]
    set rx1530_tgt, rx1530_start[1]
    set rx1530_pos, rx1530_start[2]
    set rx1530_curclass, rx1530_start[3]
    set rx1530_bstack, rx1530_start[4]
    set $I19, rx1530_start[5]
    store_lex unicode:"$\x{a2}", rx1530_cur
    length rx1530_eos, rx1530_tgt
    eq $I19, 1, rx1530_restart3419
    gt rx1530_pos, rx1530_eos, rx1530_fail3420
    repr_get_attr_int $I11, self, rx1530_curclass, "$!from"
    ne $I11, -1, rxscan1531_done3426
    goto rxscan1531_scan3425
  rxscan1531_loop3424:
    inc rx1530_pos
    gt rx1530_pos, rx1530_eos, rx1530_fail3420
    repr_bind_attr_int rx1530_cur, rx1530_curclass, "$!from", rx1530_pos
  rxscan1531_scan3425:
    nqp_rxmark rx1530_bstack, rxscan1531_loop3424, rx1530_pos, 0
  rxscan1531_done3426:
    nqp_rxmark rx1530_bstack, rxcap1532_fail3428, rx1530_pos, 0
    add $I11, rx1530_pos, 1
    gt $I11, rx1530_eos, rx1530_fail3420
    substr $S10, rx1530_tgt, rx1530_pos, 1
    ne $S10, ucs4:"*", rx1530_fail3420
    add rx1530_pos, 1
    nqp_rxpeek $I19, rx1530_bstack, rxcap1532_fail3428
    inc $I19
    set $I11, rx1530_bstack[$I19]
    repr_bind_attr_int rx1530_cur, rx1530_curclass, "$!pos", rx1530_pos
    $P11 = rx1530_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1530_pos)
    rx1530_cstack = rx1530_cur."!cursor_capture"($P11, "sym")
    goto rxcap1532_done3427
  rxcap1532_fail3428:
    goto rx1530_fail3420
  rxcap1532_done3427:
    repr_bind_attr_int rx1530_cur, rx1530_curclass, "$!pos", rx1530_pos
    $P11 = rx1530_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1530_curclass, "$!pos"
    lt $I11, 0, rx1530_fail3420
    nqp_rxmark rx1530_bstack, rxsubrule1533_pass3429, -1, 0
  rxsubrule1533_pass3429:
    rx1530_cstack = rx1530_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1530_pos, $P11, rx1530_curclass, "$!pos"
    rx1530_cur."!cursor_pass"(rx1530_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1530_cur)
  rx1530_restart3419:
    repr_get_attr_obj rx1530_cstack, rx1530_cur, rx1530_curclass, "$!cstack"
  rx1530_fail3420:
    unless rx1530_bstack, rx1530_done3418
    pop $I19, rx1530_bstack
    if_null rx1530_cstack, rx1530_cstack_done3423
    unless rx1530_cstack, rx1530_cstack_done3423
    dec $I19
    set $P11, rx1530_cstack[$I19]
  rx1530_cstack_done3423:
    pop rx1530_rep, rx1530_bstack
    pop rx1530_pos, rx1530_bstack
    pop $I19, rx1530_bstack
    lt rx1530_pos, -1, rx1530_done3418
    lt rx1530_pos, 0, rx1530_fail3420
    eq $I19, 0, rx1530_fail3420
    nqp_islist $I20, rx1530_cstack
    unless $I20, rx1530_jump3421
    elements $I18, rx1530_bstack
    le $I18, 0, rx1530_cut3422
    dec $I18
    set $I18, rx1530_bstack[$I18]
  rx1530_cut3422:
    assign rx1530_cstack, $I18
  rx1530_jump3421:
    jump $I19
  rx1530_done3418:
    rx1530_cur."!cursor_fail"()
    .return (rx1530_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_192_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1534_start
    .local string rx1534_tgt
    .local int rx1534_pos
    .local int rx1534_off
    .local int rx1534_eos
    .local int rx1534_rep
    .local pmc rx1534_cur
    .local pmc rx1534_curclass
    .local pmc rx1534_bstack
    .local pmc rx1534_cstack
    rx1534_start = self."!cursor_start_all"()
    set rx1534_cur, rx1534_start[0]
    set rx1534_tgt, rx1534_start[1]
    set rx1534_pos, rx1534_start[2]
    set rx1534_curclass, rx1534_start[3]
    set rx1534_bstack, rx1534_start[4]
    set $I19, rx1534_start[5]
    store_lex unicode:"$\x{a2}", rx1534_cur
    length rx1534_eos, rx1534_tgt
    eq $I19, 1, rx1534_restart3432
    gt rx1534_pos, rx1534_eos, rx1534_fail3433
    repr_get_attr_int $I11, self, rx1534_curclass, "$!from"
    ne $I11, -1, rxscan1535_done3439
    goto rxscan1535_scan3438
  rxscan1535_loop3437:
    inc rx1534_pos
    gt rx1534_pos, rx1534_eos, rx1534_fail3433
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!from", rx1534_pos
  rxscan1535_scan3438:
    nqp_rxmark rx1534_bstack, rxscan1535_loop3437, rx1534_pos, 0
  rxscan1535_done3439:
    nqp_rxmark rx1534_bstack, rxcap1536_fail3441, rx1534_pos, 0
    add $I11, rx1534_pos, 1
    gt $I11, rx1534_eos, rx1534_fail3433
    substr $S10, rx1534_tgt, rx1534_pos, 1
    ne $S10, ucs4:"/", rx1534_fail3433
    add rx1534_pos, 1
    nqp_rxpeek $I19, rx1534_bstack, rxcap1536_fail3441
    inc $I19
    set $I11, rx1534_bstack[$I19]
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!pos", rx1534_pos
    $P11 = rx1534_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1534_pos)
    rx1534_cstack = rx1534_cur."!cursor_capture"($P11, "sym")
    goto rxcap1536_done3440
  rxcap1536_fail3441:
    goto rx1534_fail3433
  rxcap1536_done3440:
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!pos", rx1534_pos
    $P11 = rx1534_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1534_curclass, "$!pos"
    lt $I11, 0, rx1534_fail3433
    nqp_rxmark rx1534_bstack, rxsubrule1537_pass3442, -1, 0
  rxsubrule1537_pass3442:
    rx1534_cstack = rx1534_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1534_pos, $P11, rx1534_curclass, "$!pos"
    rx1534_cur."!cursor_pass"(rx1534_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1534_cur)
  rx1534_restart3432:
    repr_get_attr_obj rx1534_cstack, rx1534_cur, rx1534_curclass, "$!cstack"
  rx1534_fail3433:
    unless rx1534_bstack, rx1534_done3431
    pop $I19, rx1534_bstack
    if_null rx1534_cstack, rx1534_cstack_done3436
    unless rx1534_cstack, rx1534_cstack_done3436
    dec $I19
    set $P11, rx1534_cstack[$I19]
  rx1534_cstack_done3436:
    pop rx1534_rep, rx1534_bstack
    pop rx1534_pos, rx1534_bstack
    pop $I19, rx1534_bstack
    lt rx1534_pos, -1, rx1534_done3431
    lt rx1534_pos, 0, rx1534_fail3433
    eq $I19, 0, rx1534_fail3433
    nqp_islist $I20, rx1534_cstack
    unless $I20, rx1534_jump3434
    elements $I18, rx1534_bstack
    le $I18, 0, rx1534_cut3435
    dec $I18
    set $I18, rx1534_bstack[$I18]
  rx1534_cut3435:
    assign rx1534_cstack, $I18
  rx1534_jump3434:
    jump $I19
  rx1534_done3431:
    rx1534_cur."!cursor_fail"()
    .return (rx1534_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_193_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1381
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1538_start
    .local string rx1538_tgt
    .local int rx1538_pos
    .local int rx1538_off
    .local int rx1538_eos
    .local int rx1538_rep
    .local pmc rx1538_cur
    .local pmc rx1538_curclass
    .local pmc rx1538_bstack
    .local pmc rx1538_cstack
    rx1538_start = self."!cursor_start_all"()
    set rx1538_cur, rx1538_start[0]
    set rx1538_tgt, rx1538_start[1]
    set rx1538_pos, rx1538_start[2]
    set rx1538_curclass, rx1538_start[3]
    set rx1538_bstack, rx1538_start[4]
    set $I19, rx1538_start[5]
    store_lex unicode:"$\x{a2}", rx1538_cur
    length rx1538_eos, rx1538_tgt
    eq $I19, 1, rx1538_restart3445
    gt rx1538_pos, rx1538_eos, rx1538_fail3446
    repr_get_attr_int $I11, self, rx1538_curclass, "$!from"
    ne $I11, -1, rxscan1539_done3452
    goto rxscan1539_scan3451
  rxscan1539_loop3450:
    inc rx1538_pos
    gt rx1538_pos, rx1538_eos, rx1538_fail3446
    repr_bind_attr_int rx1538_cur, rx1538_curclass, "$!from", rx1538_pos
  rxscan1539_scan3451:
    nqp_rxmark rx1538_bstack, rxscan1539_loop3450, rx1538_pos, 0
  rxscan1539_done3452:
    nqp_rxmark rx1538_bstack, rxcap1540_fail3454, rx1538_pos, 0
    add $I11, rx1538_pos, 1
    gt $I11, rx1538_eos, rx1538_fail3446
    substr $S10, rx1538_tgt, rx1538_pos, 1
    ne $S10, ucs4:"%", rx1538_fail3446
    add rx1538_pos, 1
    nqp_rxpeek $I19, rx1538_bstack, rxcap1540_fail3454
    inc $I19
    set $I11, rx1538_bstack[$I19]
    repr_bind_attr_int rx1538_cur, rx1538_curclass, "$!pos", rx1538_pos
    $P11 = rx1538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1538_pos)
    rx1538_cstack = rx1538_cur."!cursor_capture"($P11, "sym")
    goto rxcap1540_done3453
  rxcap1540_fail3454:
    goto rx1538_fail3446
  rxcap1540_done3453:
    repr_bind_attr_int rx1538_cur, rx1538_curclass, "$!pos", rx1538_pos
    $P11 = rx1538_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1538_curclass, "$!pos"
    lt $I11, 0, rx1538_fail3446
    nqp_rxmark rx1538_bstack, rxsubrule1541_pass3455, -1, 0
  rxsubrule1541_pass3455:
    rx1538_cstack = rx1538_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1538_pos, $P11, rx1538_curclass, "$!pos"
    rx1538_cur."!cursor_pass"(rx1538_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1538_cur)
  rx1538_restart3445:
    repr_get_attr_obj rx1538_cstack, rx1538_cur, rx1538_curclass, "$!cstack"
  rx1538_fail3446:
    unless rx1538_bstack, rx1538_done3444
    pop $I19, rx1538_bstack
    if_null rx1538_cstack, rx1538_cstack_done3449
    unless rx1538_cstack, rx1538_cstack_done3449
    dec $I19
    set $P11, rx1538_cstack[$I19]
  rx1538_cstack_done3449:
    pop rx1538_rep, rx1538_bstack
    pop rx1538_pos, rx1538_bstack
    pop $I19, rx1538_bstack
    lt rx1538_pos, -1, rx1538_done3444
    lt rx1538_pos, 0, rx1538_fail3446
    eq $I19, 0, rx1538_fail3446
    nqp_islist $I20, rx1538_cstack
    unless $I20, rx1538_jump3447
    elements $I18, rx1538_bstack
    le $I18, 0, rx1538_cut3448
    dec $I18
    set $I18, rx1538_bstack[$I18]
  rx1538_cut3448:
    assign rx1538_cstack, $I18
  rx1538_jump3447:
    jump $I19
  rx1538_done3444:
    rx1538_cur."!cursor_fail"()
    .return (rx1538_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_194_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1542_start
    .local string rx1542_tgt
    .local int rx1542_pos
    .local int rx1542_off
    .local int rx1542_eos
    .local int rx1542_rep
    .local pmc rx1542_cur
    .local pmc rx1542_curclass
    .local pmc rx1542_bstack
    .local pmc rx1542_cstack
    rx1542_start = self."!cursor_start_all"()
    set rx1542_cur, rx1542_start[0]
    set rx1542_tgt, rx1542_start[1]
    set rx1542_pos, rx1542_start[2]
    set rx1542_curclass, rx1542_start[3]
    set rx1542_bstack, rx1542_start[4]
    set $I19, rx1542_start[5]
    store_lex unicode:"$\x{a2}", rx1542_cur
    length rx1542_eos, rx1542_tgt
    eq $I19, 1, rx1542_restart3458
    gt rx1542_pos, rx1542_eos, rx1542_fail3459
    repr_get_attr_int $I11, self, rx1542_curclass, "$!from"
    ne $I11, -1, rxscan1543_done3465
    goto rxscan1543_scan3464
  rxscan1543_loop3463:
    inc rx1542_pos
    gt rx1542_pos, rx1542_eos, rx1542_fail3459
    repr_bind_attr_int rx1542_cur, rx1542_curclass, "$!from", rx1542_pos
  rxscan1543_scan3464:
    nqp_rxmark rx1542_bstack, rxscan1543_loop3463, rx1542_pos, 0
  rxscan1543_done3465:
    nqp_rxmark rx1542_bstack, rxcap1544_fail3467, rx1542_pos, 0
    add $I11, rx1542_pos, 2
    gt $I11, rx1542_eos, rx1542_fail3459
    substr $S10, rx1542_tgt, rx1542_pos, 2
    ne $S10, ucs4:"+&", rx1542_fail3459
    add rx1542_pos, 2
    nqp_rxpeek $I19, rx1542_bstack, rxcap1544_fail3467
    inc $I19
    set $I11, rx1542_bstack[$I19]
    repr_bind_attr_int rx1542_cur, rx1542_curclass, "$!pos", rx1542_pos
    $P11 = rx1542_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1542_pos)
    rx1542_cstack = rx1542_cur."!cursor_capture"($P11, "sym")
    goto rxcap1544_done3466
  rxcap1544_fail3467:
    goto rx1542_fail3459
  rxcap1544_done3466:
    repr_bind_attr_int rx1542_cur, rx1542_curclass, "$!pos", rx1542_pos
    $P11 = rx1542_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1542_curclass, "$!pos"
    lt $I11, 0, rx1542_fail3459
    nqp_rxmark rx1542_bstack, rxsubrule1545_pass3468, -1, 0
  rxsubrule1545_pass3468:
    rx1542_cstack = rx1542_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1542_pos, $P11, rx1542_curclass, "$!pos"
    rx1542_cur."!cursor_pass"(rx1542_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1542_cur)
  rx1542_restart3458:
    repr_get_attr_obj rx1542_cstack, rx1542_cur, rx1542_curclass, "$!cstack"
  rx1542_fail3459:
    unless rx1542_bstack, rx1542_done3457
    pop $I19, rx1542_bstack
    if_null rx1542_cstack, rx1542_cstack_done3462
    unless rx1542_cstack, rx1542_cstack_done3462
    dec $I19
    set $P11, rx1542_cstack[$I19]
  rx1542_cstack_done3462:
    pop rx1542_rep, rx1542_bstack
    pop rx1542_pos, rx1542_bstack
    pop $I19, rx1542_bstack
    lt rx1542_pos, -1, rx1542_done3457
    lt rx1542_pos, 0, rx1542_fail3459
    eq $I19, 0, rx1542_fail3459
    nqp_islist $I20, rx1542_cstack
    unless $I20, rx1542_jump3460
    elements $I18, rx1542_bstack
    le $I18, 0, rx1542_cut3461
    dec $I18
    set $I18, rx1542_bstack[$I18]
  rx1542_cut3461:
    assign rx1542_cstack, $I18
  rx1542_jump3460:
    jump $I19
  rx1542_done3457:
    rx1542_cur."!cursor_fail"()
    .return (rx1542_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_195_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1384
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1546_start
    .local string rx1546_tgt
    .local int rx1546_pos
    .local int rx1546_off
    .local int rx1546_eos
    .local int rx1546_rep
    .local pmc rx1546_cur
    .local pmc rx1546_curclass
    .local pmc rx1546_bstack
    .local pmc rx1546_cstack
    rx1546_start = self."!cursor_start_all"()
    set rx1546_cur, rx1546_start[0]
    set rx1546_tgt, rx1546_start[1]
    set rx1546_pos, rx1546_start[2]
    set rx1546_curclass, rx1546_start[3]
    set rx1546_bstack, rx1546_start[4]
    set $I19, rx1546_start[5]
    store_lex unicode:"$\x{a2}", rx1546_cur
    length rx1546_eos, rx1546_tgt
    eq $I19, 1, rx1546_restart3471
    gt rx1546_pos, rx1546_eos, rx1546_fail3472
    repr_get_attr_int $I11, self, rx1546_curclass, "$!from"
    ne $I11, -1, rxscan1547_done3478
    goto rxscan1547_scan3477
  rxscan1547_loop3476:
    inc rx1546_pos
    gt rx1546_pos, rx1546_eos, rx1546_fail3472
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!from", rx1546_pos
  rxscan1547_scan3477:
    nqp_rxmark rx1546_bstack, rxscan1547_loop3476, rx1546_pos, 0
  rxscan1547_done3478:
    nqp_rxmark rx1546_bstack, rxcap1548_fail3480, rx1546_pos, 0
    add $I11, rx1546_pos, 1
    gt $I11, rx1546_eos, rx1546_fail3472
    substr $S10, rx1546_tgt, rx1546_pos, 1
    ne $S10, ucs4:"+", rx1546_fail3472
    add rx1546_pos, 1
    nqp_rxpeek $I19, rx1546_bstack, rxcap1548_fail3480
    inc $I19
    set $I11, rx1546_bstack[$I19]
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1546_pos)
    rx1546_cstack = rx1546_cur."!cursor_capture"($P11, "sym")
    goto rxcap1548_done3479
  rxcap1548_fail3480:
    goto rx1546_fail3472
  rxcap1548_done3479:
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1546_curclass, "$!pos"
    lt $I11, 0, rx1546_fail3472
    nqp_rxmark rx1546_bstack, rxsubrule1549_pass3481, -1, 0
  rxsubrule1549_pass3481:
    rx1546_cstack = rx1546_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1546_pos, $P11, rx1546_curclass, "$!pos"
    rx1546_cur."!cursor_pass"(rx1546_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1546_cur)
  rx1546_restart3471:
    repr_get_attr_obj rx1546_cstack, rx1546_cur, rx1546_curclass, "$!cstack"
  rx1546_fail3472:
    unless rx1546_bstack, rx1546_done3470
    pop $I19, rx1546_bstack
    if_null rx1546_cstack, rx1546_cstack_done3475
    unless rx1546_cstack, rx1546_cstack_done3475
    dec $I19
    set $P11, rx1546_cstack[$I19]
  rx1546_cstack_done3475:
    pop rx1546_rep, rx1546_bstack
    pop rx1546_pos, rx1546_bstack
    pop $I19, rx1546_bstack
    lt rx1546_pos, -1, rx1546_done3470
    lt rx1546_pos, 0, rx1546_fail3472
    eq $I19, 0, rx1546_fail3472
    nqp_islist $I20, rx1546_cstack
    unless $I20, rx1546_jump3473
    elements $I18, rx1546_bstack
    le $I18, 0, rx1546_cut3474
    dec $I18
    set $I18, rx1546_bstack[$I18]
  rx1546_cut3474:
    assign rx1546_cstack, $I18
  rx1546_jump3473:
    jump $I19
  rx1546_done3470:
    rx1546_cur."!cursor_fail"()
    .return (rx1546_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_196_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1550_start
    .local string rx1550_tgt
    .local int rx1550_pos
    .local int rx1550_off
    .local int rx1550_eos
    .local int rx1550_rep
    .local pmc rx1550_cur
    .local pmc rx1550_curclass
    .local pmc rx1550_bstack
    .local pmc rx1550_cstack
    rx1550_start = self."!cursor_start_all"()
    set rx1550_cur, rx1550_start[0]
    set rx1550_tgt, rx1550_start[1]
    set rx1550_pos, rx1550_start[2]
    set rx1550_curclass, rx1550_start[3]
    set rx1550_bstack, rx1550_start[4]
    set $I19, rx1550_start[5]
    store_lex unicode:"$\x{a2}", rx1550_cur
    length rx1550_eos, rx1550_tgt
    eq $I19, 1, rx1550_restart3484
    gt rx1550_pos, rx1550_eos, rx1550_fail3485
    repr_get_attr_int $I11, self, rx1550_curclass, "$!from"
    ne $I11, -1, rxscan1551_done3491
    goto rxscan1551_scan3490
  rxscan1551_loop3489:
    inc rx1550_pos
    gt rx1550_pos, rx1550_eos, rx1550_fail3485
    repr_bind_attr_int rx1550_cur, rx1550_curclass, "$!from", rx1550_pos
  rxscan1551_scan3490:
    nqp_rxmark rx1550_bstack, rxscan1551_loop3489, rx1550_pos, 0
  rxscan1551_done3491:
    nqp_rxmark rx1550_bstack, rxcap1552_fail3493, rx1550_pos, 0
    add $I11, rx1550_pos, 1
    gt $I11, rx1550_eos, rx1550_fail3485
    substr $S10, rx1550_tgt, rx1550_pos, 1
    ne $S10, ucs4:"-", rx1550_fail3485
    add rx1550_pos, 1
    nqp_rxpeek $I19, rx1550_bstack, rxcap1552_fail3493
    inc $I19
    set $I11, rx1550_bstack[$I19]
    repr_bind_attr_int rx1550_cur, rx1550_curclass, "$!pos", rx1550_pos
    $P11 = rx1550_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1550_pos)
    rx1550_cstack = rx1550_cur."!cursor_capture"($P11, "sym")
    goto rxcap1552_done3492
  rxcap1552_fail3493:
    goto rx1550_fail3485
  rxcap1552_done3492:
    repr_bind_attr_int rx1550_cur, rx1550_curclass, "$!pos", rx1550_pos
    $P11 = rx1550_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1550_curclass, "$!pos"
    lt $I11, 0, rx1550_fail3485
    nqp_rxmark rx1550_bstack, rxsubrule1553_pass3494, -1, 0
  rxsubrule1553_pass3494:
    rx1550_cstack = rx1550_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1550_pos, $P11, rx1550_curclass, "$!pos"
    rx1550_cur."!cursor_pass"(rx1550_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1550_cur)
  rx1550_restart3484:
    repr_get_attr_obj rx1550_cstack, rx1550_cur, rx1550_curclass, "$!cstack"
  rx1550_fail3485:
    unless rx1550_bstack, rx1550_done3483
    pop $I19, rx1550_bstack
    if_null rx1550_cstack, rx1550_cstack_done3488
    unless rx1550_cstack, rx1550_cstack_done3488
    dec $I19
    set $P11, rx1550_cstack[$I19]
  rx1550_cstack_done3488:
    pop rx1550_rep, rx1550_bstack
    pop rx1550_pos, rx1550_bstack
    pop $I19, rx1550_bstack
    lt rx1550_pos, -1, rx1550_done3483
    lt rx1550_pos, 0, rx1550_fail3485
    eq $I19, 0, rx1550_fail3485
    nqp_islist $I20, rx1550_cstack
    unless $I20, rx1550_jump3486
    elements $I18, rx1550_bstack
    le $I18, 0, rx1550_cut3487
    dec $I18
    set $I18, rx1550_bstack[$I18]
  rx1550_cut3487:
    assign rx1550_cstack, $I18
  rx1550_jump3486:
    jump $I19
  rx1550_done3483:
    rx1550_cur."!cursor_fail"()
    .return (rx1550_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_197_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1554_start
    .local string rx1554_tgt
    .local int rx1554_pos
    .local int rx1554_off
    .local int rx1554_eos
    .local int rx1554_rep
    .local pmc rx1554_cur
    .local pmc rx1554_curclass
    .local pmc rx1554_bstack
    .local pmc rx1554_cstack
    rx1554_start = self."!cursor_start_all"()
    set rx1554_cur, rx1554_start[0]
    set rx1554_tgt, rx1554_start[1]
    set rx1554_pos, rx1554_start[2]
    set rx1554_curclass, rx1554_start[3]
    set rx1554_bstack, rx1554_start[4]
    set $I19, rx1554_start[5]
    store_lex unicode:"$\x{a2}", rx1554_cur
    length rx1554_eos, rx1554_tgt
    eq $I19, 1, rx1554_restart3497
    gt rx1554_pos, rx1554_eos, rx1554_fail3498
    repr_get_attr_int $I11, self, rx1554_curclass, "$!from"
    ne $I11, -1, rxscan1555_done3504
    goto rxscan1555_scan3503
  rxscan1555_loop3502:
    inc rx1554_pos
    gt rx1554_pos, rx1554_eos, rx1554_fail3498
    repr_bind_attr_int rx1554_cur, rx1554_curclass, "$!from", rx1554_pos
  rxscan1555_scan3503:
    nqp_rxmark rx1554_bstack, rxscan1555_loop3502, rx1554_pos, 0
  rxscan1555_done3504:
    nqp_rxmark rx1554_bstack, rxcap1556_fail3506, rx1554_pos, 0
    add $I11, rx1554_pos, 2
    gt $I11, rx1554_eos, rx1554_fail3498
    substr $S10, rx1554_tgt, rx1554_pos, 2
    ne $S10, ucs4:"+|", rx1554_fail3498
    add rx1554_pos, 2
    nqp_rxpeek $I19, rx1554_bstack, rxcap1556_fail3506
    inc $I19
    set $I11, rx1554_bstack[$I19]
    repr_bind_attr_int rx1554_cur, rx1554_curclass, "$!pos", rx1554_pos
    $P11 = rx1554_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1554_pos)
    rx1554_cstack = rx1554_cur."!cursor_capture"($P11, "sym")
    goto rxcap1556_done3505
  rxcap1556_fail3506:
    goto rx1554_fail3498
  rxcap1556_done3505:
    repr_bind_attr_int rx1554_cur, rx1554_curclass, "$!pos", rx1554_pos
    $P11 = rx1554_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1554_curclass, "$!pos"
    lt $I11, 0, rx1554_fail3498
    nqp_rxmark rx1554_bstack, rxsubrule1557_pass3507, -1, 0
  rxsubrule1557_pass3507:
    rx1554_cstack = rx1554_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1554_pos, $P11, rx1554_curclass, "$!pos"
    rx1554_cur."!cursor_pass"(rx1554_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1554_cur)
  rx1554_restart3497:
    repr_get_attr_obj rx1554_cstack, rx1554_cur, rx1554_curclass, "$!cstack"
  rx1554_fail3498:
    unless rx1554_bstack, rx1554_done3496
    pop $I19, rx1554_bstack
    if_null rx1554_cstack, rx1554_cstack_done3501
    unless rx1554_cstack, rx1554_cstack_done3501
    dec $I19
    set $P11, rx1554_cstack[$I19]
  rx1554_cstack_done3501:
    pop rx1554_rep, rx1554_bstack
    pop rx1554_pos, rx1554_bstack
    pop $I19, rx1554_bstack
    lt rx1554_pos, -1, rx1554_done3496
    lt rx1554_pos, 0, rx1554_fail3498
    eq $I19, 0, rx1554_fail3498
    nqp_islist $I20, rx1554_cstack
    unless $I20, rx1554_jump3499
    elements $I18, rx1554_bstack
    le $I18, 0, rx1554_cut3500
    dec $I18
    set $I18, rx1554_bstack[$I18]
  rx1554_cut3500:
    assign rx1554_cstack, $I18
  rx1554_jump3499:
    jump $I19
  rx1554_done3496:
    rx1554_cur."!cursor_fail"()
    .return (rx1554_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_198_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1387
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1558_start
    .local string rx1558_tgt
    .local int rx1558_pos
    .local int rx1558_off
    .local int rx1558_eos
    .local int rx1558_rep
    .local pmc rx1558_cur
    .local pmc rx1558_curclass
    .local pmc rx1558_bstack
    .local pmc rx1558_cstack
    rx1558_start = self."!cursor_start_all"()
    set rx1558_cur, rx1558_start[0]
    set rx1558_tgt, rx1558_start[1]
    set rx1558_pos, rx1558_start[2]
    set rx1558_curclass, rx1558_start[3]
    set rx1558_bstack, rx1558_start[4]
    set $I19, rx1558_start[5]
    store_lex unicode:"$\x{a2}", rx1558_cur
    length rx1558_eos, rx1558_tgt
    eq $I19, 1, rx1558_restart3510
    gt rx1558_pos, rx1558_eos, rx1558_fail3511
    repr_get_attr_int $I11, self, rx1558_curclass, "$!from"
    ne $I11, -1, rxscan1559_done3517
    goto rxscan1559_scan3516
  rxscan1559_loop3515:
    inc rx1558_pos
    gt rx1558_pos, rx1558_eos, rx1558_fail3511
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!from", rx1558_pos
  rxscan1559_scan3516:
    nqp_rxmark rx1558_bstack, rxscan1559_loop3515, rx1558_pos, 0
  rxscan1559_done3517:
    nqp_rxmark rx1558_bstack, rxcap1560_fail3519, rx1558_pos, 0
    add $I11, rx1558_pos, 2
    gt $I11, rx1558_eos, rx1558_fail3511
    substr $S10, rx1558_tgt, rx1558_pos, 2
    ne $S10, ucs4:"+^", rx1558_fail3511
    add rx1558_pos, 2
    nqp_rxpeek $I19, rx1558_bstack, rxcap1560_fail3519
    inc $I19
    set $I11, rx1558_bstack[$I19]
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1558_pos)
    rx1558_cstack = rx1558_cur."!cursor_capture"($P11, "sym")
    goto rxcap1560_done3518
  rxcap1560_fail3519:
    goto rx1558_fail3511
  rxcap1560_done3518:
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1558_curclass, "$!pos"
    lt $I11, 0, rx1558_fail3511
    nqp_rxmark rx1558_bstack, rxsubrule1561_pass3520, -1, 0
  rxsubrule1561_pass3520:
    rx1558_cstack = rx1558_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1558_pos, $P11, rx1558_curclass, "$!pos"
    rx1558_cur."!cursor_pass"(rx1558_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1558_cur)
  rx1558_restart3510:
    repr_get_attr_obj rx1558_cstack, rx1558_cur, rx1558_curclass, "$!cstack"
  rx1558_fail3511:
    unless rx1558_bstack, rx1558_done3509
    pop $I19, rx1558_bstack
    if_null rx1558_cstack, rx1558_cstack_done3514
    unless rx1558_cstack, rx1558_cstack_done3514
    dec $I19
    set $P11, rx1558_cstack[$I19]
  rx1558_cstack_done3514:
    pop rx1558_rep, rx1558_bstack
    pop rx1558_pos, rx1558_bstack
    pop $I19, rx1558_bstack
    lt rx1558_pos, -1, rx1558_done3509
    lt rx1558_pos, 0, rx1558_fail3511
    eq $I19, 0, rx1558_fail3511
    nqp_islist $I20, rx1558_cstack
    unless $I20, rx1558_jump3512
    elements $I18, rx1558_bstack
    le $I18, 0, rx1558_cut3513
    dec $I18
    set $I18, rx1558_bstack[$I18]
  rx1558_cut3513:
    assign rx1558_cstack, $I18
  rx1558_jump3512:
    jump $I19
  rx1558_done3509:
    rx1558_cur."!cursor_fail"()
    .return (rx1558_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_199_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1389
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1562_start
    .local string rx1562_tgt
    .local int rx1562_pos
    .local int rx1562_off
    .local int rx1562_eos
    .local int rx1562_rep
    .local pmc rx1562_cur
    .local pmc rx1562_curclass
    .local pmc rx1562_bstack
    .local pmc rx1562_cstack
    rx1562_start = self."!cursor_start_all"()
    set rx1562_cur, rx1562_start[0]
    set rx1562_tgt, rx1562_start[1]
    set rx1562_pos, rx1562_start[2]
    set rx1562_curclass, rx1562_start[3]
    set rx1562_bstack, rx1562_start[4]
    set $I19, rx1562_start[5]
    store_lex unicode:"$\x{a2}", rx1562_cur
    length rx1562_eos, rx1562_tgt
    eq $I19, 1, rx1562_restart3523
    gt rx1562_pos, rx1562_eos, rx1562_fail3524
    repr_get_attr_int $I11, self, rx1562_curclass, "$!from"
    ne $I11, -1, rxscan1563_done3530
    goto rxscan1563_scan3529
  rxscan1563_loop3528:
    inc rx1562_pos
    gt rx1562_pos, rx1562_eos, rx1562_fail3524
    repr_bind_attr_int rx1562_cur, rx1562_curclass, "$!from", rx1562_pos
  rxscan1563_scan3529:
    nqp_rxmark rx1562_bstack, rxscan1563_loop3528, rx1562_pos, 0
  rxscan1563_done3530:
    nqp_rxmark rx1562_bstack, rxcap1564_fail3532, rx1562_pos, 0
    add $I11, rx1562_pos, 1
    gt $I11, rx1562_eos, rx1562_fail3524
    substr $S10, rx1562_tgt, rx1562_pos, 1
    ne $S10, ucs4:"~", rx1562_fail3524
    add rx1562_pos, 1
    nqp_rxpeek $I19, rx1562_bstack, rxcap1564_fail3532
    inc $I19
    set $I11, rx1562_bstack[$I19]
    repr_bind_attr_int rx1562_cur, rx1562_curclass, "$!pos", rx1562_pos
    $P11 = rx1562_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1562_pos)
    rx1562_cstack = rx1562_cur."!cursor_capture"($P11, "sym")
    goto rxcap1564_done3531
  rxcap1564_fail3532:
    goto rx1562_fail3524
  rxcap1564_done3531:
    repr_bind_attr_int rx1562_cur, rx1562_curclass, "$!pos", rx1562_pos
    $P11 = rx1562_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1562_curclass, "$!pos"
    lt $I11, 0, rx1562_fail3524
    nqp_rxmark rx1562_bstack, rxsubrule1565_pass3533, -1, 0
  rxsubrule1565_pass3533:
    rx1562_cstack = rx1562_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1562_pos, $P11, rx1562_curclass, "$!pos"
    rx1562_cur."!cursor_pass"(rx1562_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1562_cur)
  rx1562_restart3523:
    repr_get_attr_obj rx1562_cstack, rx1562_cur, rx1562_curclass, "$!cstack"
  rx1562_fail3524:
    unless rx1562_bstack, rx1562_done3522
    pop $I19, rx1562_bstack
    if_null rx1562_cstack, rx1562_cstack_done3527
    unless rx1562_cstack, rx1562_cstack_done3527
    dec $I19
    set $P11, rx1562_cstack[$I19]
  rx1562_cstack_done3527:
    pop rx1562_rep, rx1562_bstack
    pop rx1562_pos, rx1562_bstack
    pop $I19, rx1562_bstack
    lt rx1562_pos, -1, rx1562_done3522
    lt rx1562_pos, 0, rx1562_fail3524
    eq $I19, 0, rx1562_fail3524
    nqp_islist $I20, rx1562_cstack
    unless $I20, rx1562_jump3525
    elements $I18, rx1562_bstack
    le $I18, 0, rx1562_cut3526
    dec $I18
    set $I18, rx1562_bstack[$I18]
  rx1562_cut3526:
    assign rx1562_cstack, $I18
  rx1562_jump3525:
    jump $I19
  rx1562_done3522:
    rx1562_cur."!cursor_fail"()
    .return (rx1562_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_200_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1391
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1566_start
    .local string rx1566_tgt
    .local int rx1566_pos
    .local int rx1566_off
    .local int rx1566_eos
    .local int rx1566_rep
    .local pmc rx1566_cur
    .local pmc rx1566_curclass
    .local pmc rx1566_bstack
    .local pmc rx1566_cstack
    rx1566_start = self."!cursor_start_all"()
    set rx1566_cur, rx1566_start[0]
    set rx1566_tgt, rx1566_start[1]
    set rx1566_pos, rx1566_start[2]
    set rx1566_curclass, rx1566_start[3]
    set rx1566_bstack, rx1566_start[4]
    set $I19, rx1566_start[5]
    store_lex unicode:"$\x{a2}", rx1566_cur
    length rx1566_eos, rx1566_tgt
    eq $I19, 1, rx1566_restart3536
    gt rx1566_pos, rx1566_eos, rx1566_fail3537
    repr_get_attr_int $I11, self, rx1566_curclass, "$!from"
    ne $I11, -1, rxscan1567_done3543
    goto rxscan1567_scan3542
  rxscan1567_loop3541:
    inc rx1566_pos
    gt rx1566_pos, rx1566_eos, rx1566_fail3537
    repr_bind_attr_int rx1566_cur, rx1566_curclass, "$!from", rx1566_pos
  rxscan1567_scan3542:
    nqp_rxmark rx1566_bstack, rxscan1567_loop3541, rx1566_pos, 0
  rxscan1567_done3543:
    nqp_rxmark rx1566_bstack, rxcap1568_fail3545, rx1566_pos, 0
    add $I11, rx1566_pos, 2
    gt $I11, rx1566_eos, rx1566_fail3537
    substr $S10, rx1566_tgt, rx1566_pos, 2
    ne $S10, ucs4:"==", rx1566_fail3537
    add rx1566_pos, 2
    nqp_rxpeek $I19, rx1566_bstack, rxcap1568_fail3545
    inc $I19
    set $I11, rx1566_bstack[$I19]
    repr_bind_attr_int rx1566_cur, rx1566_curclass, "$!pos", rx1566_pos
    $P11 = rx1566_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1566_pos)
    rx1566_cstack = rx1566_cur."!cursor_capture"($P11, "sym")
    goto rxcap1568_done3544
  rxcap1568_fail3545:
    goto rx1566_fail3537
  rxcap1568_done3544:
    repr_bind_attr_int rx1566_cur, rx1566_curclass, "$!pos", rx1566_pos
    $P11 = rx1566_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1566_curclass, "$!pos"
    lt $I11, 0, rx1566_fail3537
    nqp_rxmark rx1566_bstack, rxsubrule1569_pass3546, -1, 0
  rxsubrule1569_pass3546:
    rx1566_cstack = rx1566_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1566_pos, $P11, rx1566_curclass, "$!pos"
    rx1566_cur."!cursor_pass"(rx1566_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1566_cur)
  rx1566_restart3536:
    repr_get_attr_obj rx1566_cstack, rx1566_cur, rx1566_curclass, "$!cstack"
  rx1566_fail3537:
    unless rx1566_bstack, rx1566_done3535
    pop $I19, rx1566_bstack
    if_null rx1566_cstack, rx1566_cstack_done3540
    unless rx1566_cstack, rx1566_cstack_done3540
    dec $I19
    set $P11, rx1566_cstack[$I19]
  rx1566_cstack_done3540:
    pop rx1566_rep, rx1566_bstack
    pop rx1566_pos, rx1566_bstack
    pop $I19, rx1566_bstack
    lt rx1566_pos, -1, rx1566_done3535
    lt rx1566_pos, 0, rx1566_fail3537
    eq $I19, 0, rx1566_fail3537
    nqp_islist $I20, rx1566_cstack
    unless $I20, rx1566_jump3538
    elements $I18, rx1566_bstack
    le $I18, 0, rx1566_cut3539
    dec $I18
    set $I18, rx1566_bstack[$I18]
  rx1566_cut3539:
    assign rx1566_cstack, $I18
  rx1566_jump3538:
    jump $I19
  rx1566_done3535:
    rx1566_cur."!cursor_fail"()
    .return (rx1566_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_201_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1570_start
    .local string rx1570_tgt
    .local int rx1570_pos
    .local int rx1570_off
    .local int rx1570_eos
    .local int rx1570_rep
    .local pmc rx1570_cur
    .local pmc rx1570_curclass
    .local pmc rx1570_bstack
    .local pmc rx1570_cstack
    rx1570_start = self."!cursor_start_all"()
    set rx1570_cur, rx1570_start[0]
    set rx1570_tgt, rx1570_start[1]
    set rx1570_pos, rx1570_start[2]
    set rx1570_curclass, rx1570_start[3]
    set rx1570_bstack, rx1570_start[4]
    set $I19, rx1570_start[5]
    store_lex unicode:"$\x{a2}", rx1570_cur
    length rx1570_eos, rx1570_tgt
    eq $I19, 1, rx1570_restart3549
    gt rx1570_pos, rx1570_eos, rx1570_fail3550
    repr_get_attr_int $I11, self, rx1570_curclass, "$!from"
    ne $I11, -1, rxscan1571_done3556
    goto rxscan1571_scan3555
  rxscan1571_loop3554:
    inc rx1570_pos
    gt rx1570_pos, rx1570_eos, rx1570_fail3550
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!from", rx1570_pos
  rxscan1571_scan3555:
    nqp_rxmark rx1570_bstack, rxscan1571_loop3554, rx1570_pos, 0
  rxscan1571_done3556:
    nqp_rxmark rx1570_bstack, rxcap1572_fail3558, rx1570_pos, 0
    add $I11, rx1570_pos, 2
    gt $I11, rx1570_eos, rx1570_fail3550
    substr $S10, rx1570_tgt, rx1570_pos, 2
    ne $S10, ucs4:"!=", rx1570_fail3550
    add rx1570_pos, 2
    nqp_rxpeek $I19, rx1570_bstack, rxcap1572_fail3558
    inc $I19
    set $I11, rx1570_bstack[$I19]
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!pos", rx1570_pos
    $P11 = rx1570_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1570_pos)
    rx1570_cstack = rx1570_cur."!cursor_capture"($P11, "sym")
    goto rxcap1572_done3557
  rxcap1572_fail3558:
    goto rx1570_fail3550
  rxcap1572_done3557:
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!pos", rx1570_pos
    $P11 = rx1570_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1570_curclass, "$!pos"
    lt $I11, 0, rx1570_fail3550
    nqp_rxmark rx1570_bstack, rxsubrule1573_pass3559, -1, 0
  rxsubrule1573_pass3559:
    rx1570_cstack = rx1570_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1570_pos, $P11, rx1570_curclass, "$!pos"
    rx1570_cur."!cursor_pass"(rx1570_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1570_cur)
  rx1570_restart3549:
    repr_get_attr_obj rx1570_cstack, rx1570_cur, rx1570_curclass, "$!cstack"
  rx1570_fail3550:
    unless rx1570_bstack, rx1570_done3548
    pop $I19, rx1570_bstack
    if_null rx1570_cstack, rx1570_cstack_done3553
    unless rx1570_cstack, rx1570_cstack_done3553
    dec $I19
    set $P11, rx1570_cstack[$I19]
  rx1570_cstack_done3553:
    pop rx1570_rep, rx1570_bstack
    pop rx1570_pos, rx1570_bstack
    pop $I19, rx1570_bstack
    lt rx1570_pos, -1, rx1570_done3548
    lt rx1570_pos, 0, rx1570_fail3550
    eq $I19, 0, rx1570_fail3550
    nqp_islist $I20, rx1570_cstack
    unless $I20, rx1570_jump3551
    elements $I18, rx1570_bstack
    le $I18, 0, rx1570_cut3552
    dec $I18
    set $I18, rx1570_bstack[$I18]
  rx1570_cut3552:
    assign rx1570_cstack, $I18
  rx1570_jump3551:
    jump $I19
  rx1570_done3548:
    rx1570_cur."!cursor_fail"()
    .return (rx1570_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_202_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1393
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1574_start
    .local string rx1574_tgt
    .local int rx1574_pos
    .local int rx1574_off
    .local int rx1574_eos
    .local int rx1574_rep
    .local pmc rx1574_cur
    .local pmc rx1574_curclass
    .local pmc rx1574_bstack
    .local pmc rx1574_cstack
    rx1574_start = self."!cursor_start_all"()
    set rx1574_cur, rx1574_start[0]
    set rx1574_tgt, rx1574_start[1]
    set rx1574_pos, rx1574_start[2]
    set rx1574_curclass, rx1574_start[3]
    set rx1574_bstack, rx1574_start[4]
    set $I19, rx1574_start[5]
    store_lex unicode:"$\x{a2}", rx1574_cur
    length rx1574_eos, rx1574_tgt
    eq $I19, 1, rx1574_restart3562
    gt rx1574_pos, rx1574_eos, rx1574_fail3563
    repr_get_attr_int $I11, self, rx1574_curclass, "$!from"
    ne $I11, -1, rxscan1575_done3569
    goto rxscan1575_scan3568
  rxscan1575_loop3567:
    inc rx1574_pos
    gt rx1574_pos, rx1574_eos, rx1574_fail3563
    repr_bind_attr_int rx1574_cur, rx1574_curclass, "$!from", rx1574_pos
  rxscan1575_scan3568:
    nqp_rxmark rx1574_bstack, rxscan1575_loop3567, rx1574_pos, 0
  rxscan1575_done3569:
    nqp_rxmark rx1574_bstack, rxcap1576_fail3571, rx1574_pos, 0
    add $I11, rx1574_pos, 2
    gt $I11, rx1574_eos, rx1574_fail3563
    substr $S10, rx1574_tgt, rx1574_pos, 2
    ne $S10, ucs4:"<=", rx1574_fail3563
    add rx1574_pos, 2
    nqp_rxpeek $I19, rx1574_bstack, rxcap1576_fail3571
    inc $I19
    set $I11, rx1574_bstack[$I19]
    repr_bind_attr_int rx1574_cur, rx1574_curclass, "$!pos", rx1574_pos
    $P11 = rx1574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1574_pos)
    rx1574_cstack = rx1574_cur."!cursor_capture"($P11, "sym")
    goto rxcap1576_done3570
  rxcap1576_fail3571:
    goto rx1574_fail3563
  rxcap1576_done3570:
    repr_bind_attr_int rx1574_cur, rx1574_curclass, "$!pos", rx1574_pos
    $P11 = rx1574_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1574_curclass, "$!pos"
    lt $I11, 0, rx1574_fail3563
    nqp_rxmark rx1574_bstack, rxsubrule1577_pass3572, -1, 0
  rxsubrule1577_pass3572:
    rx1574_cstack = rx1574_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1574_pos, $P11, rx1574_curclass, "$!pos"
    rx1574_cur."!cursor_pass"(rx1574_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1574_cur)
  rx1574_restart3562:
    repr_get_attr_obj rx1574_cstack, rx1574_cur, rx1574_curclass, "$!cstack"
  rx1574_fail3563:
    unless rx1574_bstack, rx1574_done3561
    pop $I19, rx1574_bstack
    if_null rx1574_cstack, rx1574_cstack_done3566
    unless rx1574_cstack, rx1574_cstack_done3566
    dec $I19
    set $P11, rx1574_cstack[$I19]
  rx1574_cstack_done3566:
    pop rx1574_rep, rx1574_bstack
    pop rx1574_pos, rx1574_bstack
    pop $I19, rx1574_bstack
    lt rx1574_pos, -1, rx1574_done3561
    lt rx1574_pos, 0, rx1574_fail3563
    eq $I19, 0, rx1574_fail3563
    nqp_islist $I20, rx1574_cstack
    unless $I20, rx1574_jump3564
    elements $I18, rx1574_bstack
    le $I18, 0, rx1574_cut3565
    dec $I18
    set $I18, rx1574_bstack[$I18]
  rx1574_cut3565:
    assign rx1574_cstack, $I18
  rx1574_jump3564:
    jump $I19
  rx1574_done3561:
    rx1574_cur."!cursor_fail"()
    .return (rx1574_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_203_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1394
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1578_start
    .local string rx1578_tgt
    .local int rx1578_pos
    .local int rx1578_off
    .local int rx1578_eos
    .local int rx1578_rep
    .local pmc rx1578_cur
    .local pmc rx1578_curclass
    .local pmc rx1578_bstack
    .local pmc rx1578_cstack
    rx1578_start = self."!cursor_start_all"()
    set rx1578_cur, rx1578_start[0]
    set rx1578_tgt, rx1578_start[1]
    set rx1578_pos, rx1578_start[2]
    set rx1578_curclass, rx1578_start[3]
    set rx1578_bstack, rx1578_start[4]
    set $I19, rx1578_start[5]
    store_lex unicode:"$\x{a2}", rx1578_cur
    length rx1578_eos, rx1578_tgt
    eq $I19, 1, rx1578_restart3575
    gt rx1578_pos, rx1578_eos, rx1578_fail3576
    repr_get_attr_int $I11, self, rx1578_curclass, "$!from"
    ne $I11, -1, rxscan1579_done3582
    goto rxscan1579_scan3581
  rxscan1579_loop3580:
    inc rx1578_pos
    gt rx1578_pos, rx1578_eos, rx1578_fail3576
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!from", rx1578_pos
  rxscan1579_scan3581:
    nqp_rxmark rx1578_bstack, rxscan1579_loop3580, rx1578_pos, 0
  rxscan1579_done3582:
    nqp_rxmark rx1578_bstack, rxcap1580_fail3584, rx1578_pos, 0
    add $I11, rx1578_pos, 2
    gt $I11, rx1578_eos, rx1578_fail3576
    substr $S10, rx1578_tgt, rx1578_pos, 2
    ne $S10, ucs4:">=", rx1578_fail3576
    add rx1578_pos, 2
    nqp_rxpeek $I19, rx1578_bstack, rxcap1580_fail3584
    inc $I19
    set $I11, rx1578_bstack[$I19]
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!pos", rx1578_pos
    $P11 = rx1578_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1578_pos)
    rx1578_cstack = rx1578_cur."!cursor_capture"($P11, "sym")
    goto rxcap1580_done3583
  rxcap1580_fail3584:
    goto rx1578_fail3576
  rxcap1580_done3583:
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!pos", rx1578_pos
    $P11 = rx1578_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1578_curclass, "$!pos"
    lt $I11, 0, rx1578_fail3576
    nqp_rxmark rx1578_bstack, rxsubrule1581_pass3585, -1, 0
  rxsubrule1581_pass3585:
    rx1578_cstack = rx1578_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1578_pos, $P11, rx1578_curclass, "$!pos"
    rx1578_cur."!cursor_pass"(rx1578_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1578_cur)
  rx1578_restart3575:
    repr_get_attr_obj rx1578_cstack, rx1578_cur, rx1578_curclass, "$!cstack"
  rx1578_fail3576:
    unless rx1578_bstack, rx1578_done3574
    pop $I19, rx1578_bstack
    if_null rx1578_cstack, rx1578_cstack_done3579
    unless rx1578_cstack, rx1578_cstack_done3579
    dec $I19
    set $P11, rx1578_cstack[$I19]
  rx1578_cstack_done3579:
    pop rx1578_rep, rx1578_bstack
    pop rx1578_pos, rx1578_bstack
    pop $I19, rx1578_bstack
    lt rx1578_pos, -1, rx1578_done3574
    lt rx1578_pos, 0, rx1578_fail3576
    eq $I19, 0, rx1578_fail3576
    nqp_islist $I20, rx1578_cstack
    unless $I20, rx1578_jump3577
    elements $I18, rx1578_bstack
    le $I18, 0, rx1578_cut3578
    dec $I18
    set $I18, rx1578_bstack[$I18]
  rx1578_cut3578:
    assign rx1578_cstack, $I18
  rx1578_jump3577:
    jump $I19
  rx1578_done3574:
    rx1578_cur."!cursor_fail"()
    .return (rx1578_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_204_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1582_start
    .local string rx1582_tgt
    .local int rx1582_pos
    .local int rx1582_off
    .local int rx1582_eos
    .local int rx1582_rep
    .local pmc rx1582_cur
    .local pmc rx1582_curclass
    .local pmc rx1582_bstack
    .local pmc rx1582_cstack
    rx1582_start = self."!cursor_start_all"()
    set rx1582_cur, rx1582_start[0]
    set rx1582_tgt, rx1582_start[1]
    set rx1582_pos, rx1582_start[2]
    set rx1582_curclass, rx1582_start[3]
    set rx1582_bstack, rx1582_start[4]
    set $I19, rx1582_start[5]
    store_lex unicode:"$\x{a2}", rx1582_cur
    length rx1582_eos, rx1582_tgt
    eq $I19, 1, rx1582_restart3588
    gt rx1582_pos, rx1582_eos, rx1582_fail3589
    repr_get_attr_int $I11, self, rx1582_curclass, "$!from"
    ne $I11, -1, rxscan1583_done3595
    goto rxscan1583_scan3594
  rxscan1583_loop3593:
    inc rx1582_pos
    gt rx1582_pos, rx1582_eos, rx1582_fail3589
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!from", rx1582_pos
  rxscan1583_scan3594:
    nqp_rxmark rx1582_bstack, rxscan1583_loop3593, rx1582_pos, 0
  rxscan1583_done3595:
    nqp_rxmark rx1582_bstack, rxcap1584_fail3597, rx1582_pos, 0
    add $I11, rx1582_pos, 1
    gt $I11, rx1582_eos, rx1582_fail3589
    substr $S10, rx1582_tgt, rx1582_pos, 1
    ne $S10, ucs4:"<", rx1582_fail3589
    add rx1582_pos, 1
    nqp_rxpeek $I19, rx1582_bstack, rxcap1584_fail3597
    inc $I19
    set $I11, rx1582_bstack[$I19]
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!pos", rx1582_pos
    $P11 = rx1582_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1582_pos)
    rx1582_cstack = rx1582_cur."!cursor_capture"($P11, "sym")
    goto rxcap1584_done3596
  rxcap1584_fail3597:
    goto rx1582_fail3589
  rxcap1584_done3596:
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!pos", rx1582_pos
    $P11 = rx1582_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1582_curclass, "$!pos"
    lt $I11, 0, rx1582_fail3589
    nqp_rxmark rx1582_bstack, rxsubrule1585_pass3598, -1, 0
  rxsubrule1585_pass3598:
    rx1582_cstack = rx1582_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1582_pos, $P11, rx1582_curclass, "$!pos"
    rx1582_cur."!cursor_pass"(rx1582_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1582_cur)
  rx1582_restart3588:
    repr_get_attr_obj rx1582_cstack, rx1582_cur, rx1582_curclass, "$!cstack"
  rx1582_fail3589:
    unless rx1582_bstack, rx1582_done3587
    pop $I19, rx1582_bstack
    if_null rx1582_cstack, rx1582_cstack_done3592
    unless rx1582_cstack, rx1582_cstack_done3592
    dec $I19
    set $P11, rx1582_cstack[$I19]
  rx1582_cstack_done3592:
    pop rx1582_rep, rx1582_bstack
    pop rx1582_pos, rx1582_bstack
    pop $I19, rx1582_bstack
    lt rx1582_pos, -1, rx1582_done3587
    lt rx1582_pos, 0, rx1582_fail3589
    eq $I19, 0, rx1582_fail3589
    nqp_islist $I20, rx1582_cstack
    unless $I20, rx1582_jump3590
    elements $I18, rx1582_bstack
    le $I18, 0, rx1582_cut3591
    dec $I18
    set $I18, rx1582_bstack[$I18]
  rx1582_cut3591:
    assign rx1582_cstack, $I18
  rx1582_jump3590:
    jump $I19
  rx1582_done3587:
    rx1582_cur."!cursor_fail"()
    .return (rx1582_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_205_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1396
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1586_start
    .local string rx1586_tgt
    .local int rx1586_pos
    .local int rx1586_off
    .local int rx1586_eos
    .local int rx1586_rep
    .local pmc rx1586_cur
    .local pmc rx1586_curclass
    .local pmc rx1586_bstack
    .local pmc rx1586_cstack
    rx1586_start = self."!cursor_start_all"()
    set rx1586_cur, rx1586_start[0]
    set rx1586_tgt, rx1586_start[1]
    set rx1586_pos, rx1586_start[2]
    set rx1586_curclass, rx1586_start[3]
    set rx1586_bstack, rx1586_start[4]
    set $I19, rx1586_start[5]
    store_lex unicode:"$\x{a2}", rx1586_cur
    length rx1586_eos, rx1586_tgt
    eq $I19, 1, rx1586_restart3601
    gt rx1586_pos, rx1586_eos, rx1586_fail3602
    repr_get_attr_int $I11, self, rx1586_curclass, "$!from"
    ne $I11, -1, rxscan1587_done3608
    goto rxscan1587_scan3607
  rxscan1587_loop3606:
    inc rx1586_pos
    gt rx1586_pos, rx1586_eos, rx1586_fail3602
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!from", rx1586_pos
  rxscan1587_scan3607:
    nqp_rxmark rx1586_bstack, rxscan1587_loop3606, rx1586_pos, 0
  rxscan1587_done3608:
    nqp_rxmark rx1586_bstack, rxcap1588_fail3610, rx1586_pos, 0
    add $I11, rx1586_pos, 1
    gt $I11, rx1586_eos, rx1586_fail3602
    substr $S10, rx1586_tgt, rx1586_pos, 1
    ne $S10, ucs4:">", rx1586_fail3602
    add rx1586_pos, 1
    nqp_rxpeek $I19, rx1586_bstack, rxcap1588_fail3610
    inc $I19
    set $I11, rx1586_bstack[$I19]
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1586_pos)
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "sym")
    goto rxcap1588_done3609
  rxcap1588_fail3610:
    goto rx1586_fail3602
  rxcap1588_done3609:
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1586_curclass, "$!pos"
    lt $I11, 0, rx1586_fail3602
    nqp_rxmark rx1586_bstack, rxsubrule1589_pass3611, -1, 0
  rxsubrule1589_pass3611:
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1586_pos, $P11, rx1586_curclass, "$!pos"
    rx1586_cur."!cursor_pass"(rx1586_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1586_cur)
  rx1586_restart3601:
    repr_get_attr_obj rx1586_cstack, rx1586_cur, rx1586_curclass, "$!cstack"
  rx1586_fail3602:
    unless rx1586_bstack, rx1586_done3600
    pop $I19, rx1586_bstack
    if_null rx1586_cstack, rx1586_cstack_done3605
    unless rx1586_cstack, rx1586_cstack_done3605
    dec $I19
    set $P11, rx1586_cstack[$I19]
  rx1586_cstack_done3605:
    pop rx1586_rep, rx1586_bstack
    pop rx1586_pos, rx1586_bstack
    pop $I19, rx1586_bstack
    lt rx1586_pos, -1, rx1586_done3600
    lt rx1586_pos, 0, rx1586_fail3602
    eq $I19, 0, rx1586_fail3602
    nqp_islist $I20, rx1586_cstack
    unless $I20, rx1586_jump3603
    elements $I18, rx1586_bstack
    le $I18, 0, rx1586_cut3604
    dec $I18
    set $I18, rx1586_bstack[$I18]
  rx1586_cut3604:
    assign rx1586_cstack, $I18
  rx1586_jump3603:
    jump $I19
  rx1586_done3600:
    rx1586_cur."!cursor_fail"()
    .return (rx1586_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_206_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1590_start
    .local string rx1590_tgt
    .local int rx1590_pos
    .local int rx1590_off
    .local int rx1590_eos
    .local int rx1590_rep
    .local pmc rx1590_cur
    .local pmc rx1590_curclass
    .local pmc rx1590_bstack
    .local pmc rx1590_cstack
    rx1590_start = self."!cursor_start_all"()
    set rx1590_cur, rx1590_start[0]
    set rx1590_tgt, rx1590_start[1]
    set rx1590_pos, rx1590_start[2]
    set rx1590_curclass, rx1590_start[3]
    set rx1590_bstack, rx1590_start[4]
    set $I19, rx1590_start[5]
    store_lex unicode:"$\x{a2}", rx1590_cur
    length rx1590_eos, rx1590_tgt
    eq $I19, 1, rx1590_restart3614
    gt rx1590_pos, rx1590_eos, rx1590_fail3615
    repr_get_attr_int $I11, self, rx1590_curclass, "$!from"
    ne $I11, -1, rxscan1591_done3621
    goto rxscan1591_scan3620
  rxscan1591_loop3619:
    inc rx1590_pos
    gt rx1590_pos, rx1590_eos, rx1590_fail3615
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!from", rx1590_pos
  rxscan1591_scan3620:
    nqp_rxmark rx1590_bstack, rxscan1591_loop3619, rx1590_pos, 0
  rxscan1591_done3621:
    nqp_rxmark rx1590_bstack, rxcap1592_fail3623, rx1590_pos, 0
    add $I11, rx1590_pos, 2
    gt $I11, rx1590_eos, rx1590_fail3615
    substr $S10, rx1590_tgt, rx1590_pos, 2
    ne $S10, ucs4:"eq", rx1590_fail3615
    add rx1590_pos, 2
    nqp_rxpeek $I19, rx1590_bstack, rxcap1592_fail3623
    inc $I19
    set $I11, rx1590_bstack[$I19]
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1590_pos)
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "sym")
    goto rxcap1592_done3622
  rxcap1592_fail3623:
    goto rx1590_fail3615
  rxcap1592_done3622:
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1590_curclass, "$!pos"
    lt $I11, 0, rx1590_fail3615
    nqp_rxmark rx1590_bstack, rxsubrule1593_pass3624, -1, 0
  rxsubrule1593_pass3624:
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1590_pos, $P11, rx1590_curclass, "$!pos"
    rx1590_cur."!cursor_pass"(rx1590_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1590_cur)
  rx1590_restart3614:
    repr_get_attr_obj rx1590_cstack, rx1590_cur, rx1590_curclass, "$!cstack"
  rx1590_fail3615:
    unless rx1590_bstack, rx1590_done3613
    pop $I19, rx1590_bstack
    if_null rx1590_cstack, rx1590_cstack_done3618
    unless rx1590_cstack, rx1590_cstack_done3618
    dec $I19
    set $P11, rx1590_cstack[$I19]
  rx1590_cstack_done3618:
    pop rx1590_rep, rx1590_bstack
    pop rx1590_pos, rx1590_bstack
    pop $I19, rx1590_bstack
    lt rx1590_pos, -1, rx1590_done3613
    lt rx1590_pos, 0, rx1590_fail3615
    eq $I19, 0, rx1590_fail3615
    nqp_islist $I20, rx1590_cstack
    unless $I20, rx1590_jump3616
    elements $I18, rx1590_bstack
    le $I18, 0, rx1590_cut3617
    dec $I18
    set $I18, rx1590_bstack[$I18]
  rx1590_cut3617:
    assign rx1590_cstack, $I18
  rx1590_jump3616:
    jump $I19
  rx1590_done3613:
    rx1590_cur."!cursor_fail"()
    .return (rx1590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_207_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1398
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1594_start
    .local string rx1594_tgt
    .local int rx1594_pos
    .local int rx1594_off
    .local int rx1594_eos
    .local int rx1594_rep
    .local pmc rx1594_cur
    .local pmc rx1594_curclass
    .local pmc rx1594_bstack
    .local pmc rx1594_cstack
    rx1594_start = self."!cursor_start_all"()
    set rx1594_cur, rx1594_start[0]
    set rx1594_tgt, rx1594_start[1]
    set rx1594_pos, rx1594_start[2]
    set rx1594_curclass, rx1594_start[3]
    set rx1594_bstack, rx1594_start[4]
    set $I19, rx1594_start[5]
    store_lex unicode:"$\x{a2}", rx1594_cur
    length rx1594_eos, rx1594_tgt
    eq $I19, 1, rx1594_restart3627
    gt rx1594_pos, rx1594_eos, rx1594_fail3628
    repr_get_attr_int $I11, self, rx1594_curclass, "$!from"
    ne $I11, -1, rxscan1595_done3634
    goto rxscan1595_scan3633
  rxscan1595_loop3632:
    inc rx1594_pos
    gt rx1594_pos, rx1594_eos, rx1594_fail3628
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!from", rx1594_pos
  rxscan1595_scan3633:
    nqp_rxmark rx1594_bstack, rxscan1595_loop3632, rx1594_pos, 0
  rxscan1595_done3634:
    nqp_rxmark rx1594_bstack, rxcap1596_fail3636, rx1594_pos, 0
    add $I11, rx1594_pos, 2
    gt $I11, rx1594_eos, rx1594_fail3628
    substr $S10, rx1594_tgt, rx1594_pos, 2
    ne $S10, ucs4:"ne", rx1594_fail3628
    add rx1594_pos, 2
    nqp_rxpeek $I19, rx1594_bstack, rxcap1596_fail3636
    inc $I19
    set $I11, rx1594_bstack[$I19]
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1594_pos)
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "sym")
    goto rxcap1596_done3635
  rxcap1596_fail3636:
    goto rx1594_fail3628
  rxcap1596_done3635:
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1594_curclass, "$!pos"
    lt $I11, 0, rx1594_fail3628
    nqp_rxmark rx1594_bstack, rxsubrule1597_pass3637, -1, 0
  rxsubrule1597_pass3637:
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1594_pos, $P11, rx1594_curclass, "$!pos"
    rx1594_cur."!cursor_pass"(rx1594_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1594_cur)
  rx1594_restart3627:
    repr_get_attr_obj rx1594_cstack, rx1594_cur, rx1594_curclass, "$!cstack"
  rx1594_fail3628:
    unless rx1594_bstack, rx1594_done3626
    pop $I19, rx1594_bstack
    if_null rx1594_cstack, rx1594_cstack_done3631
    unless rx1594_cstack, rx1594_cstack_done3631
    dec $I19
    set $P11, rx1594_cstack[$I19]
  rx1594_cstack_done3631:
    pop rx1594_rep, rx1594_bstack
    pop rx1594_pos, rx1594_bstack
    pop $I19, rx1594_bstack
    lt rx1594_pos, -1, rx1594_done3626
    lt rx1594_pos, 0, rx1594_fail3628
    eq $I19, 0, rx1594_fail3628
    nqp_islist $I20, rx1594_cstack
    unless $I20, rx1594_jump3629
    elements $I18, rx1594_bstack
    le $I18, 0, rx1594_cut3630
    dec $I18
    set $I18, rx1594_bstack[$I18]
  rx1594_cut3630:
    assign rx1594_cstack, $I18
  rx1594_jump3629:
    jump $I19
  rx1594_done3626:
    rx1594_cur."!cursor_fail"()
    .return (rx1594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_208_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1399
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1598_start
    .local string rx1598_tgt
    .local int rx1598_pos
    .local int rx1598_off
    .local int rx1598_eos
    .local int rx1598_rep
    .local pmc rx1598_cur
    .local pmc rx1598_curclass
    .local pmc rx1598_bstack
    .local pmc rx1598_cstack
    rx1598_start = self."!cursor_start_all"()
    set rx1598_cur, rx1598_start[0]
    set rx1598_tgt, rx1598_start[1]
    set rx1598_pos, rx1598_start[2]
    set rx1598_curclass, rx1598_start[3]
    set rx1598_bstack, rx1598_start[4]
    set $I19, rx1598_start[5]
    store_lex unicode:"$\x{a2}", rx1598_cur
    length rx1598_eos, rx1598_tgt
    eq $I19, 1, rx1598_restart3640
    gt rx1598_pos, rx1598_eos, rx1598_fail3641
    repr_get_attr_int $I11, self, rx1598_curclass, "$!from"
    ne $I11, -1, rxscan1599_done3647
    goto rxscan1599_scan3646
  rxscan1599_loop3645:
    inc rx1598_pos
    gt rx1598_pos, rx1598_eos, rx1598_fail3641
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!from", rx1598_pos
  rxscan1599_scan3646:
    nqp_rxmark rx1598_bstack, rxscan1599_loop3645, rx1598_pos, 0
  rxscan1599_done3647:
    nqp_rxmark rx1598_bstack, rxcap1600_fail3649, rx1598_pos, 0
    add $I11, rx1598_pos, 2
    gt $I11, rx1598_eos, rx1598_fail3641
    substr $S10, rx1598_tgt, rx1598_pos, 2
    ne $S10, ucs4:"le", rx1598_fail3641
    add rx1598_pos, 2
    nqp_rxpeek $I19, rx1598_bstack, rxcap1600_fail3649
    inc $I19
    set $I11, rx1598_bstack[$I19]
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1598_pos)
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "sym")
    goto rxcap1600_done3648
  rxcap1600_fail3649:
    goto rx1598_fail3641
  rxcap1600_done3648:
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1598_curclass, "$!pos"
    lt $I11, 0, rx1598_fail3641
    nqp_rxmark rx1598_bstack, rxsubrule1601_pass3650, -1, 0
  rxsubrule1601_pass3650:
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1598_pos, $P11, rx1598_curclass, "$!pos"
    rx1598_cur."!cursor_pass"(rx1598_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1598_cur)
  rx1598_restart3640:
    repr_get_attr_obj rx1598_cstack, rx1598_cur, rx1598_curclass, "$!cstack"
  rx1598_fail3641:
    unless rx1598_bstack, rx1598_done3639
    pop $I19, rx1598_bstack
    if_null rx1598_cstack, rx1598_cstack_done3644
    unless rx1598_cstack, rx1598_cstack_done3644
    dec $I19
    set $P11, rx1598_cstack[$I19]
  rx1598_cstack_done3644:
    pop rx1598_rep, rx1598_bstack
    pop rx1598_pos, rx1598_bstack
    pop $I19, rx1598_bstack
    lt rx1598_pos, -1, rx1598_done3639
    lt rx1598_pos, 0, rx1598_fail3641
    eq $I19, 0, rx1598_fail3641
    nqp_islist $I20, rx1598_cstack
    unless $I20, rx1598_jump3642
    elements $I18, rx1598_bstack
    le $I18, 0, rx1598_cut3643
    dec $I18
    set $I18, rx1598_bstack[$I18]
  rx1598_cut3643:
    assign rx1598_cstack, $I18
  rx1598_jump3642:
    jump $I19
  rx1598_done3639:
    rx1598_cur."!cursor_fail"()
    .return (rx1598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_209_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1400
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1602_start
    .local string rx1602_tgt
    .local int rx1602_pos
    .local int rx1602_off
    .local int rx1602_eos
    .local int rx1602_rep
    .local pmc rx1602_cur
    .local pmc rx1602_curclass
    .local pmc rx1602_bstack
    .local pmc rx1602_cstack
    rx1602_start = self."!cursor_start_all"()
    set rx1602_cur, rx1602_start[0]
    set rx1602_tgt, rx1602_start[1]
    set rx1602_pos, rx1602_start[2]
    set rx1602_curclass, rx1602_start[3]
    set rx1602_bstack, rx1602_start[4]
    set $I19, rx1602_start[5]
    store_lex unicode:"$\x{a2}", rx1602_cur
    length rx1602_eos, rx1602_tgt
    eq $I19, 1, rx1602_restart3653
    gt rx1602_pos, rx1602_eos, rx1602_fail3654
    repr_get_attr_int $I11, self, rx1602_curclass, "$!from"
    ne $I11, -1, rxscan1603_done3660
    goto rxscan1603_scan3659
  rxscan1603_loop3658:
    inc rx1602_pos
    gt rx1602_pos, rx1602_eos, rx1602_fail3654
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!from", rx1602_pos
  rxscan1603_scan3659:
    nqp_rxmark rx1602_bstack, rxscan1603_loop3658, rx1602_pos, 0
  rxscan1603_done3660:
    nqp_rxmark rx1602_bstack, rxcap1604_fail3662, rx1602_pos, 0
    add $I11, rx1602_pos, 2
    gt $I11, rx1602_eos, rx1602_fail3654
    substr $S10, rx1602_tgt, rx1602_pos, 2
    ne $S10, ucs4:"ge", rx1602_fail3654
    add rx1602_pos, 2
    nqp_rxpeek $I19, rx1602_bstack, rxcap1604_fail3662
    inc $I19
    set $I11, rx1602_bstack[$I19]
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1602_pos)
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "sym")
    goto rxcap1604_done3661
  rxcap1604_fail3662:
    goto rx1602_fail3654
  rxcap1604_done3661:
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1602_curclass, "$!pos"
    lt $I11, 0, rx1602_fail3654
    nqp_rxmark rx1602_bstack, rxsubrule1605_pass3663, -1, 0
  rxsubrule1605_pass3663:
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1602_pos, $P11, rx1602_curclass, "$!pos"
    rx1602_cur."!cursor_pass"(rx1602_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1602_cur)
  rx1602_restart3653:
    repr_get_attr_obj rx1602_cstack, rx1602_cur, rx1602_curclass, "$!cstack"
  rx1602_fail3654:
    unless rx1602_bstack, rx1602_done3652
    pop $I19, rx1602_bstack
    if_null rx1602_cstack, rx1602_cstack_done3657
    unless rx1602_cstack, rx1602_cstack_done3657
    dec $I19
    set $P11, rx1602_cstack[$I19]
  rx1602_cstack_done3657:
    pop rx1602_rep, rx1602_bstack
    pop rx1602_pos, rx1602_bstack
    pop $I19, rx1602_bstack
    lt rx1602_pos, -1, rx1602_done3652
    lt rx1602_pos, 0, rx1602_fail3654
    eq $I19, 0, rx1602_fail3654
    nqp_islist $I20, rx1602_cstack
    unless $I20, rx1602_jump3655
    elements $I18, rx1602_bstack
    le $I18, 0, rx1602_cut3656
    dec $I18
    set $I18, rx1602_bstack[$I18]
  rx1602_cut3656:
    assign rx1602_cstack, $I18
  rx1602_jump3655:
    jump $I19
  rx1602_done3652:
    rx1602_cur."!cursor_fail"()
    .return (rx1602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_210_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1401
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1606_start
    .local string rx1606_tgt
    .local int rx1606_pos
    .local int rx1606_off
    .local int rx1606_eos
    .local int rx1606_rep
    .local pmc rx1606_cur
    .local pmc rx1606_curclass
    .local pmc rx1606_bstack
    .local pmc rx1606_cstack
    rx1606_start = self."!cursor_start_all"()
    set rx1606_cur, rx1606_start[0]
    set rx1606_tgt, rx1606_start[1]
    set rx1606_pos, rx1606_start[2]
    set rx1606_curclass, rx1606_start[3]
    set rx1606_bstack, rx1606_start[4]
    set $I19, rx1606_start[5]
    store_lex unicode:"$\x{a2}", rx1606_cur
    length rx1606_eos, rx1606_tgt
    eq $I19, 1, rx1606_restart3666
    gt rx1606_pos, rx1606_eos, rx1606_fail3667
    repr_get_attr_int $I11, self, rx1606_curclass, "$!from"
    ne $I11, -1, rxscan1607_done3673
    goto rxscan1607_scan3672
  rxscan1607_loop3671:
    inc rx1606_pos
    gt rx1606_pos, rx1606_eos, rx1606_fail3667
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!from", rx1606_pos
  rxscan1607_scan3672:
    nqp_rxmark rx1606_bstack, rxscan1607_loop3671, rx1606_pos, 0
  rxscan1607_done3673:
    nqp_rxmark rx1606_bstack, rxcap1608_fail3675, rx1606_pos, 0
    add $I11, rx1606_pos, 2
    gt $I11, rx1606_eos, rx1606_fail3667
    substr $S10, rx1606_tgt, rx1606_pos, 2
    ne $S10, ucs4:"lt", rx1606_fail3667
    add rx1606_pos, 2
    nqp_rxpeek $I19, rx1606_bstack, rxcap1608_fail3675
    inc $I19
    set $I11, rx1606_bstack[$I19]
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1606_pos)
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "sym")
    goto rxcap1608_done3674
  rxcap1608_fail3675:
    goto rx1606_fail3667
  rxcap1608_done3674:
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1606_curclass, "$!pos"
    lt $I11, 0, rx1606_fail3667
    nqp_rxmark rx1606_bstack, rxsubrule1609_pass3676, -1, 0
  rxsubrule1609_pass3676:
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1606_pos, $P11, rx1606_curclass, "$!pos"
    rx1606_cur."!cursor_pass"(rx1606_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1606_cur)
  rx1606_restart3666:
    repr_get_attr_obj rx1606_cstack, rx1606_cur, rx1606_curclass, "$!cstack"
  rx1606_fail3667:
    unless rx1606_bstack, rx1606_done3665
    pop $I19, rx1606_bstack
    if_null rx1606_cstack, rx1606_cstack_done3670
    unless rx1606_cstack, rx1606_cstack_done3670
    dec $I19
    set $P11, rx1606_cstack[$I19]
  rx1606_cstack_done3670:
    pop rx1606_rep, rx1606_bstack
    pop rx1606_pos, rx1606_bstack
    pop $I19, rx1606_bstack
    lt rx1606_pos, -1, rx1606_done3665
    lt rx1606_pos, 0, rx1606_fail3667
    eq $I19, 0, rx1606_fail3667
    nqp_islist $I20, rx1606_cstack
    unless $I20, rx1606_jump3668
    elements $I18, rx1606_bstack
    le $I18, 0, rx1606_cut3669
    dec $I18
    set $I18, rx1606_bstack[$I18]
  rx1606_cut3669:
    assign rx1606_cstack, $I18
  rx1606_jump3668:
    jump $I19
  rx1606_done3665:
    rx1606_cur."!cursor_fail"()
    .return (rx1606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_211_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1610_start
    .local string rx1610_tgt
    .local int rx1610_pos
    .local int rx1610_off
    .local int rx1610_eos
    .local int rx1610_rep
    .local pmc rx1610_cur
    .local pmc rx1610_curclass
    .local pmc rx1610_bstack
    .local pmc rx1610_cstack
    rx1610_start = self."!cursor_start_all"()
    set rx1610_cur, rx1610_start[0]
    set rx1610_tgt, rx1610_start[1]
    set rx1610_pos, rx1610_start[2]
    set rx1610_curclass, rx1610_start[3]
    set rx1610_bstack, rx1610_start[4]
    set $I19, rx1610_start[5]
    store_lex unicode:"$\x{a2}", rx1610_cur
    length rx1610_eos, rx1610_tgt
    eq $I19, 1, rx1610_restart3679
    gt rx1610_pos, rx1610_eos, rx1610_fail3680
    repr_get_attr_int $I11, self, rx1610_curclass, "$!from"
    ne $I11, -1, rxscan1611_done3686
    goto rxscan1611_scan3685
  rxscan1611_loop3684:
    inc rx1610_pos
    gt rx1610_pos, rx1610_eos, rx1610_fail3680
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!from", rx1610_pos
  rxscan1611_scan3685:
    nqp_rxmark rx1610_bstack, rxscan1611_loop3684, rx1610_pos, 0
  rxscan1611_done3686:
    nqp_rxmark rx1610_bstack, rxcap1612_fail3688, rx1610_pos, 0
    add $I11, rx1610_pos, 2
    gt $I11, rx1610_eos, rx1610_fail3680
    substr $S10, rx1610_tgt, rx1610_pos, 2
    ne $S10, ucs4:"gt", rx1610_fail3680
    add rx1610_pos, 2
    nqp_rxpeek $I19, rx1610_bstack, rxcap1612_fail3688
    inc $I19
    set $I11, rx1610_bstack[$I19]
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1610_pos)
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "sym")
    goto rxcap1612_done3687
  rxcap1612_fail3688:
    goto rx1610_fail3680
  rxcap1612_done3687:
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1610_curclass, "$!pos"
    lt $I11, 0, rx1610_fail3680
    nqp_rxmark rx1610_bstack, rxsubrule1613_pass3689, -1, 0
  rxsubrule1613_pass3689:
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1610_pos, $P11, rx1610_curclass, "$!pos"
    rx1610_cur."!cursor_pass"(rx1610_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1610_cur)
  rx1610_restart3679:
    repr_get_attr_obj rx1610_cstack, rx1610_cur, rx1610_curclass, "$!cstack"
  rx1610_fail3680:
    unless rx1610_bstack, rx1610_done3678
    pop $I19, rx1610_bstack
    if_null rx1610_cstack, rx1610_cstack_done3683
    unless rx1610_cstack, rx1610_cstack_done3683
    dec $I19
    set $P11, rx1610_cstack[$I19]
  rx1610_cstack_done3683:
    pop rx1610_rep, rx1610_bstack
    pop rx1610_pos, rx1610_bstack
    pop $I19, rx1610_bstack
    lt rx1610_pos, -1, rx1610_done3678
    lt rx1610_pos, 0, rx1610_fail3680
    eq $I19, 0, rx1610_fail3680
    nqp_islist $I20, rx1610_cstack
    unless $I20, rx1610_jump3681
    elements $I18, rx1610_bstack
    le $I18, 0, rx1610_cut3682
    dec $I18
    set $I18, rx1610_bstack[$I18]
  rx1610_cut3682:
    assign rx1610_cstack, $I18
  rx1610_jump3681:
    jump $I19
  rx1610_done3678:
    rx1610_cur."!cursor_fail"()
    .return (rx1610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_212_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1403
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1614_start
    .local string rx1614_tgt
    .local int rx1614_pos
    .local int rx1614_off
    .local int rx1614_eos
    .local int rx1614_rep
    .local pmc rx1614_cur
    .local pmc rx1614_curclass
    .local pmc rx1614_bstack
    .local pmc rx1614_cstack
    rx1614_start = self."!cursor_start_all"()
    set rx1614_cur, rx1614_start[0]
    set rx1614_tgt, rx1614_start[1]
    set rx1614_pos, rx1614_start[2]
    set rx1614_curclass, rx1614_start[3]
    set rx1614_bstack, rx1614_start[4]
    set $I19, rx1614_start[5]
    store_lex unicode:"$\x{a2}", rx1614_cur
    length rx1614_eos, rx1614_tgt
    eq $I19, 1, rx1614_restart3692
    gt rx1614_pos, rx1614_eos, rx1614_fail3693
    repr_get_attr_int $I11, self, rx1614_curclass, "$!from"
    ne $I11, -1, rxscan1615_done3699
    goto rxscan1615_scan3698
  rxscan1615_loop3697:
    inc rx1614_pos
    gt rx1614_pos, rx1614_eos, rx1614_fail3693
    repr_bind_attr_int rx1614_cur, rx1614_curclass, "$!from", rx1614_pos
  rxscan1615_scan3698:
    nqp_rxmark rx1614_bstack, rxscan1615_loop3697, rx1614_pos, 0
  rxscan1615_done3699:
    nqp_rxmark rx1614_bstack, rxcap1616_fail3701, rx1614_pos, 0
    add $I11, rx1614_pos, 3
    gt $I11, rx1614_eos, rx1614_fail3693
    substr $S10, rx1614_tgt, rx1614_pos, 3
    ne $S10, ucs4:"=:=", rx1614_fail3693
    add rx1614_pos, 3
    nqp_rxpeek $I19, rx1614_bstack, rxcap1616_fail3701
    inc $I19
    set $I11, rx1614_bstack[$I19]
    repr_bind_attr_int rx1614_cur, rx1614_curclass, "$!pos", rx1614_pos
    $P11 = rx1614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1614_pos)
    rx1614_cstack = rx1614_cur."!cursor_capture"($P11, "sym")
    goto rxcap1616_done3700
  rxcap1616_fail3701:
    goto rx1614_fail3693
  rxcap1616_done3700:
    repr_bind_attr_int rx1614_cur, rx1614_curclass, "$!pos", rx1614_pos
    $P11 = rx1614_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1614_curclass, "$!pos"
    lt $I11, 0, rx1614_fail3693
    nqp_rxmark rx1614_bstack, rxsubrule1617_pass3702, -1, 0
  rxsubrule1617_pass3702:
    rx1614_cstack = rx1614_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1614_pos, $P11, rx1614_curclass, "$!pos"
    rx1614_cur."!cursor_pass"(rx1614_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1614_cur)
  rx1614_restart3692:
    repr_get_attr_obj rx1614_cstack, rx1614_cur, rx1614_curclass, "$!cstack"
  rx1614_fail3693:
    unless rx1614_bstack, rx1614_done3691
    pop $I19, rx1614_bstack
    if_null rx1614_cstack, rx1614_cstack_done3696
    unless rx1614_cstack, rx1614_cstack_done3696
    dec $I19
    set $P11, rx1614_cstack[$I19]
  rx1614_cstack_done3696:
    pop rx1614_rep, rx1614_bstack
    pop rx1614_pos, rx1614_bstack
    pop $I19, rx1614_bstack
    lt rx1614_pos, -1, rx1614_done3691
    lt rx1614_pos, 0, rx1614_fail3693
    eq $I19, 0, rx1614_fail3693
    nqp_islist $I20, rx1614_cstack
    unless $I20, rx1614_jump3694
    elements $I18, rx1614_bstack
    le $I18, 0, rx1614_cut3695
    dec $I18
    set $I18, rx1614_bstack[$I18]
  rx1614_cut3695:
    assign rx1614_cstack, $I18
  rx1614_jump3694:
    jump $I19
  rx1614_done3691:
    rx1614_cur."!cursor_fail"()
    .return (rx1614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_213_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1404
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1618_start
    .local string rx1618_tgt
    .local int rx1618_pos
    .local int rx1618_off
    .local int rx1618_eos
    .local int rx1618_rep
    .local pmc rx1618_cur
    .local pmc rx1618_curclass
    .local pmc rx1618_bstack
    .local pmc rx1618_cstack
    rx1618_start = self."!cursor_start_all"()
    set rx1618_cur, rx1618_start[0]
    set rx1618_tgt, rx1618_start[1]
    set rx1618_pos, rx1618_start[2]
    set rx1618_curclass, rx1618_start[3]
    set rx1618_bstack, rx1618_start[4]
    set $I19, rx1618_start[5]
    store_lex unicode:"$\x{a2}", rx1618_cur
    length rx1618_eos, rx1618_tgt
    eq $I19, 1, rx1618_restart3705
    gt rx1618_pos, rx1618_eos, rx1618_fail3706
    repr_get_attr_int $I11, self, rx1618_curclass, "$!from"
    ne $I11, -1, rxscan1619_done3712
    goto rxscan1619_scan3711
  rxscan1619_loop3710:
    inc rx1618_pos
    gt rx1618_pos, rx1618_eos, rx1618_fail3706
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!from", rx1618_pos
  rxscan1619_scan3711:
    nqp_rxmark rx1618_bstack, rxscan1619_loop3710, rx1618_pos, 0
  rxscan1619_done3712:
    nqp_rxmark rx1618_bstack, rxcap1620_fail3714, rx1618_pos, 0
    add $I11, rx1618_pos, 2
    gt $I11, rx1618_eos, rx1618_fail3706
    substr $S10, rx1618_tgt, rx1618_pos, 2
    ne $S10, ucs4:"~~", rx1618_fail3706
    add rx1618_pos, 2
    nqp_rxpeek $I19, rx1618_bstack, rxcap1620_fail3714
    inc $I19
    set $I11, rx1618_bstack[$I19]
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1618_pos)
    rx1618_cstack = rx1618_cur."!cursor_capture"($P11, "sym")
    goto rxcap1620_done3713
  rxcap1620_fail3714:
    goto rx1618_fail3706
  rxcap1620_done3713:
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1618_curclass, "$!pos"
    lt $I11, 0, rx1618_fail3706
    nqp_rxmark rx1618_bstack, rxsubrule1621_pass3715, -1, 0
  rxsubrule1621_pass3715:
    rx1618_cstack = rx1618_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1618_pos, $P11, rx1618_curclass, "$!pos"
    rx1618_cur."!cursor_pass"(rx1618_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1618_cur)
  rx1618_restart3705:
    repr_get_attr_obj rx1618_cstack, rx1618_cur, rx1618_curclass, "$!cstack"
  rx1618_fail3706:
    unless rx1618_bstack, rx1618_done3704
    pop $I19, rx1618_bstack
    if_null rx1618_cstack, rx1618_cstack_done3709
    unless rx1618_cstack, rx1618_cstack_done3709
    dec $I19
    set $P11, rx1618_cstack[$I19]
  rx1618_cstack_done3709:
    pop rx1618_rep, rx1618_bstack
    pop rx1618_pos, rx1618_bstack
    pop $I19, rx1618_bstack
    lt rx1618_pos, -1, rx1618_done3704
    lt rx1618_pos, 0, rx1618_fail3706
    eq $I19, 0, rx1618_fail3706
    nqp_islist $I20, rx1618_cstack
    unless $I20, rx1618_jump3707
    elements $I18, rx1618_bstack
    le $I18, 0, rx1618_cut3708
    dec $I18
    set $I18, rx1618_bstack[$I18]
  rx1618_cut3708:
    assign rx1618_cstack, $I18
  rx1618_jump3707:
    jump $I19
  rx1618_done3704:
    rx1618_cur."!cursor_fail"()
    .return (rx1618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_214_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1406
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1622_start
    .local string rx1622_tgt
    .local int rx1622_pos
    .local int rx1622_off
    .local int rx1622_eos
    .local int rx1622_rep
    .local pmc rx1622_cur
    .local pmc rx1622_curclass
    .local pmc rx1622_bstack
    .local pmc rx1622_cstack
    rx1622_start = self."!cursor_start_all"()
    set rx1622_cur, rx1622_start[0]
    set rx1622_tgt, rx1622_start[1]
    set rx1622_pos, rx1622_start[2]
    set rx1622_curclass, rx1622_start[3]
    set rx1622_bstack, rx1622_start[4]
    set $I19, rx1622_start[5]
    store_lex unicode:"$\x{a2}", rx1622_cur
    length rx1622_eos, rx1622_tgt
    eq $I19, 1, rx1622_restart3718
    gt rx1622_pos, rx1622_eos, rx1622_fail3719
    repr_get_attr_int $I11, self, rx1622_curclass, "$!from"
    ne $I11, -1, rxscan1623_done3725
    goto rxscan1623_scan3724
  rxscan1623_loop3723:
    inc rx1622_pos
    gt rx1622_pos, rx1622_eos, rx1622_fail3719
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!from", rx1622_pos
  rxscan1623_scan3724:
    nqp_rxmark rx1622_bstack, rxscan1623_loop3723, rx1622_pos, 0
  rxscan1623_done3725:
    nqp_rxmark rx1622_bstack, rxcap1624_fail3727, rx1622_pos, 0
    add $I11, rx1622_pos, 2
    gt $I11, rx1622_eos, rx1622_fail3719
    substr $S10, rx1622_tgt, rx1622_pos, 2
    ne $S10, ucs4:"&&", rx1622_fail3719
    add rx1622_pos, 2
    nqp_rxpeek $I19, rx1622_bstack, rxcap1624_fail3727
    inc $I19
    set $I11, rx1622_bstack[$I19]
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!pos", rx1622_pos
    $P11 = rx1622_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1622_pos)
    rx1622_cstack = rx1622_cur."!cursor_capture"($P11, "sym")
    goto rxcap1624_done3726
  rxcap1624_fail3727:
    goto rx1622_fail3719
  rxcap1624_done3726:
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!pos", rx1622_pos
    $P11 = rx1622_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1622_curclass, "$!pos"
    lt $I11, 0, rx1622_fail3719
    nqp_rxmark rx1622_bstack, rxsubrule1625_pass3728, -1, 0
  rxsubrule1625_pass3728:
    rx1622_cstack = rx1622_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1622_pos, $P11, rx1622_curclass, "$!pos"
    rx1622_cur."!cursor_pass"(rx1622_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1622_cur)
  rx1622_restart3718:
    repr_get_attr_obj rx1622_cstack, rx1622_cur, rx1622_curclass, "$!cstack"
  rx1622_fail3719:
    unless rx1622_bstack, rx1622_done3717
    pop $I19, rx1622_bstack
    if_null rx1622_cstack, rx1622_cstack_done3722
    unless rx1622_cstack, rx1622_cstack_done3722
    dec $I19
    set $P11, rx1622_cstack[$I19]
  rx1622_cstack_done3722:
    pop rx1622_rep, rx1622_bstack
    pop rx1622_pos, rx1622_bstack
    pop $I19, rx1622_bstack
    lt rx1622_pos, -1, rx1622_done3717
    lt rx1622_pos, 0, rx1622_fail3719
    eq $I19, 0, rx1622_fail3719
    nqp_islist $I20, rx1622_cstack
    unless $I20, rx1622_jump3720
    elements $I18, rx1622_bstack
    le $I18, 0, rx1622_cut3721
    dec $I18
    set $I18, rx1622_bstack[$I18]
  rx1622_cut3721:
    assign rx1622_cstack, $I18
  rx1622_jump3720:
    jump $I19
  rx1622_done3717:
    rx1622_cur."!cursor_fail"()
    .return (rx1622_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_215_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1408
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1626_start
    .local string rx1626_tgt
    .local int rx1626_pos
    .local int rx1626_off
    .local int rx1626_eos
    .local int rx1626_rep
    .local pmc rx1626_cur
    .local pmc rx1626_curclass
    .local pmc rx1626_bstack
    .local pmc rx1626_cstack
    rx1626_start = self."!cursor_start_all"()
    set rx1626_cur, rx1626_start[0]
    set rx1626_tgt, rx1626_start[1]
    set rx1626_pos, rx1626_start[2]
    set rx1626_curclass, rx1626_start[3]
    set rx1626_bstack, rx1626_start[4]
    set $I19, rx1626_start[5]
    store_lex unicode:"$\x{a2}", rx1626_cur
    length rx1626_eos, rx1626_tgt
    eq $I19, 1, rx1626_restart3731
    gt rx1626_pos, rx1626_eos, rx1626_fail3732
    repr_get_attr_int $I11, self, rx1626_curclass, "$!from"
    ne $I11, -1, rxscan1627_done3738
    goto rxscan1627_scan3737
  rxscan1627_loop3736:
    inc rx1626_pos
    gt rx1626_pos, rx1626_eos, rx1626_fail3732
    repr_bind_attr_int rx1626_cur, rx1626_curclass, "$!from", rx1626_pos
  rxscan1627_scan3737:
    nqp_rxmark rx1626_bstack, rxscan1627_loop3736, rx1626_pos, 0
  rxscan1627_done3738:
    nqp_rxmark rx1626_bstack, rxcap1628_fail3740, rx1626_pos, 0
    add $I11, rx1626_pos, 2
    gt $I11, rx1626_eos, rx1626_fail3732
    substr $S10, rx1626_tgt, rx1626_pos, 2
    ne $S10, ucs4:"||", rx1626_fail3732
    add rx1626_pos, 2
    nqp_rxpeek $I19, rx1626_bstack, rxcap1628_fail3740
    inc $I19
    set $I11, rx1626_bstack[$I19]
    repr_bind_attr_int rx1626_cur, rx1626_curclass, "$!pos", rx1626_pos
    $P11 = rx1626_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1626_pos)
    rx1626_cstack = rx1626_cur."!cursor_capture"($P11, "sym")
    goto rxcap1628_done3739
  rxcap1628_fail3740:
    goto rx1626_fail3732
  rxcap1628_done3739:
    repr_bind_attr_int rx1626_cur, rx1626_curclass, "$!pos", rx1626_pos
    $P11 = rx1626_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1626_curclass, "$!pos"
    lt $I11, 0, rx1626_fail3732
    nqp_rxmark rx1626_bstack, rxsubrule1629_pass3741, -1, 0
  rxsubrule1629_pass3741:
    rx1626_cstack = rx1626_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1626_pos, $P11, rx1626_curclass, "$!pos"
    rx1626_cur."!cursor_pass"(rx1626_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1626_cur)
  rx1626_restart3731:
    repr_get_attr_obj rx1626_cstack, rx1626_cur, rx1626_curclass, "$!cstack"
  rx1626_fail3732:
    unless rx1626_bstack, rx1626_done3730
    pop $I19, rx1626_bstack
    if_null rx1626_cstack, rx1626_cstack_done3735
    unless rx1626_cstack, rx1626_cstack_done3735
    dec $I19
    set $P11, rx1626_cstack[$I19]
  rx1626_cstack_done3735:
    pop rx1626_rep, rx1626_bstack
    pop rx1626_pos, rx1626_bstack
    pop $I19, rx1626_bstack
    lt rx1626_pos, -1, rx1626_done3730
    lt rx1626_pos, 0, rx1626_fail3732
    eq $I19, 0, rx1626_fail3732
    nqp_islist $I20, rx1626_cstack
    unless $I20, rx1626_jump3733
    elements $I18, rx1626_bstack
    le $I18, 0, rx1626_cut3734
    dec $I18
    set $I18, rx1626_bstack[$I18]
  rx1626_cut3734:
    assign rx1626_cstack, $I18
  rx1626_jump3733:
    jump $I19
  rx1626_done3730:
    rx1626_cur."!cursor_fail"()
    .return (rx1626_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_216_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1409
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1630_start
    .local string rx1630_tgt
    .local int rx1630_pos
    .local int rx1630_off
    .local int rx1630_eos
    .local int rx1630_rep
    .local pmc rx1630_cur
    .local pmc rx1630_curclass
    .local pmc rx1630_bstack
    .local pmc rx1630_cstack
    rx1630_start = self."!cursor_start_all"()
    set rx1630_cur, rx1630_start[0]
    set rx1630_tgt, rx1630_start[1]
    set rx1630_pos, rx1630_start[2]
    set rx1630_curclass, rx1630_start[3]
    set rx1630_bstack, rx1630_start[4]
    set $I19, rx1630_start[5]
    store_lex unicode:"$\x{a2}", rx1630_cur
    length rx1630_eos, rx1630_tgt
    eq $I19, 1, rx1630_restart3744
    gt rx1630_pos, rx1630_eos, rx1630_fail3745
    repr_get_attr_int $I11, self, rx1630_curclass, "$!from"
    ne $I11, -1, rxscan1631_done3751
    goto rxscan1631_scan3750
  rxscan1631_loop3749:
    inc rx1630_pos
    gt rx1630_pos, rx1630_eos, rx1630_fail3745
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!from", rx1630_pos
  rxscan1631_scan3750:
    nqp_rxmark rx1630_bstack, rxscan1631_loop3749, rx1630_pos, 0
  rxscan1631_done3751:
    nqp_rxmark rx1630_bstack, rxcap1632_fail3753, rx1630_pos, 0
    add $I11, rx1630_pos, 2
    gt $I11, rx1630_eos, rx1630_fail3745
    substr $S10, rx1630_tgt, rx1630_pos, 2
    ne $S10, ucs4:"//", rx1630_fail3745
    add rx1630_pos, 2
    nqp_rxpeek $I19, rx1630_bstack, rxcap1632_fail3753
    inc $I19
    set $I11, rx1630_bstack[$I19]
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1630_pos)
    rx1630_cstack = rx1630_cur."!cursor_capture"($P11, "sym")
    goto rxcap1632_done3752
  rxcap1632_fail3753:
    goto rx1630_fail3745
  rxcap1632_done3752:
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3745
    nqp_rxmark rx1630_bstack, rxsubrule1633_pass3754, -1, 0
  rxsubrule1633_pass3754:
    rx1630_cstack = rx1630_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1630_pos, $P11, rx1630_curclass, "$!pos"
    rx1630_cur."!cursor_pass"(rx1630_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1630_cur)
  rx1630_restart3744:
    repr_get_attr_obj rx1630_cstack, rx1630_cur, rx1630_curclass, "$!cstack"
  rx1630_fail3745:
    unless rx1630_bstack, rx1630_done3743
    pop $I19, rx1630_bstack
    if_null rx1630_cstack, rx1630_cstack_done3748
    unless rx1630_cstack, rx1630_cstack_done3748
    dec $I19
    set $P11, rx1630_cstack[$I19]
  rx1630_cstack_done3748:
    pop rx1630_rep, rx1630_bstack
    pop rx1630_pos, rx1630_bstack
    pop $I19, rx1630_bstack
    lt rx1630_pos, -1, rx1630_done3743
    lt rx1630_pos, 0, rx1630_fail3745
    eq $I19, 0, rx1630_fail3745
    nqp_islist $I20, rx1630_cstack
    unless $I20, rx1630_jump3746
    elements $I18, rx1630_bstack
    le $I18, 0, rx1630_cut3747
    dec $I18
    set $I18, rx1630_bstack[$I18]
  rx1630_cut3747:
    assign rx1630_cstack, $I18
  rx1630_jump3746:
    jump $I19
  rx1630_done3743:
    rx1630_cur."!cursor_fail"()
    .return (rx1630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_217_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1411
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1634_start
    .local string rx1634_tgt
    .local int rx1634_pos
    .local int rx1634_off
    .local int rx1634_eos
    .local int rx1634_rep
    .local pmc rx1634_cur
    .local pmc rx1634_curclass
    .local pmc rx1634_bstack
    .local pmc rx1634_cstack
    rx1634_start = self."!cursor_start_all"()
    set rx1634_cur, rx1634_start[0]
    set rx1634_tgt, rx1634_start[1]
    set rx1634_pos, rx1634_start[2]
    set rx1634_curclass, rx1634_start[3]
    set rx1634_bstack, rx1634_start[4]
    set $I19, rx1634_start[5]
    store_lex unicode:"$\x{a2}", rx1634_cur
    length rx1634_eos, rx1634_tgt
    eq $I19, 1, rx1634_restart3757
    gt rx1634_pos, rx1634_eos, rx1634_fail3758
    repr_get_attr_int $I11, self, rx1634_curclass, "$!from"
    ne $I11, -1, rxscan1635_done3764
    goto rxscan1635_scan3763
  rxscan1635_loop3762:
    inc rx1634_pos
    gt rx1634_pos, rx1634_eos, rx1634_fail3758
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!from", rx1634_pos
  rxscan1635_scan3763:
    nqp_rxmark rx1634_bstack, rxscan1635_loop3762, rx1634_pos, 0
  rxscan1635_done3764:
    add $I11, rx1634_pos, 2
    gt $I11, rx1634_eos, rx1634_fail3758
    substr $S10, rx1634_tgt, rx1634_pos, 2
    ne $S10, ucs4:"??", rx1634_fail3758
    add rx1634_pos, 2
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3758
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3758
    nqp_rxmark rx1634_bstack, rxsubrule1637_pass3766, -1, 0
  rxsubrule1637_pass3766:
    rx1634_cstack = rx1634_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    add $I11, rx1634_pos, 2
    gt $I11, rx1634_eos, rx1634_fail3758
    substr $S10, rx1634_tgt, rx1634_pos, 2
    ne $S10, ucs4:"!!", rx1634_fail3758
    add rx1634_pos, 2
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3758
    nqp_rxmark rx1634_bstack, rxsubrule1638_pass3767, -1, 0
  rxsubrule1638_pass3767:
    rx1634_cstack = rx1634_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    rx1634_cur."!cursor_pass"(rx1634_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1634_cur)
  rx1634_restart3757:
    repr_get_attr_obj rx1634_cstack, rx1634_cur, rx1634_curclass, "$!cstack"
  rx1634_fail3758:
    unless rx1634_bstack, rx1634_done3756
    pop $I19, rx1634_bstack
    if_null rx1634_cstack, rx1634_cstack_done3761
    unless rx1634_cstack, rx1634_cstack_done3761
    dec $I19
    set $P11, rx1634_cstack[$I19]
  rx1634_cstack_done3761:
    pop rx1634_rep, rx1634_bstack
    pop rx1634_pos, rx1634_bstack
    pop $I19, rx1634_bstack
    lt rx1634_pos, -1, rx1634_done3756
    lt rx1634_pos, 0, rx1634_fail3758
    eq $I19, 0, rx1634_fail3758
    nqp_islist $I20, rx1634_cstack
    unless $I20, rx1634_jump3759
    elements $I18, rx1634_bstack
    le $I18, 0, rx1634_cut3760
    dec $I18
    set $I18, rx1634_bstack[$I18]
  rx1634_cut3760:
    assign rx1634_cstack, $I18
  rx1634_jump3759:
    jump $I19
  rx1634_done3756:
    rx1634_cur."!cursor_fail"()
    .return (rx1634_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_218_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1419
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1639_start
    .local string rx1639_tgt
    .local int rx1639_pos
    .local int rx1639_off
    .local int rx1639_eos
    .local int rx1639_rep
    .local pmc rx1639_cur
    .local pmc rx1639_curclass
    .local pmc rx1639_bstack
    .local pmc rx1639_cstack
    rx1639_start = self."!cursor_start_all"()
    set rx1639_cur, rx1639_start[0]
    set rx1639_tgt, rx1639_start[1]
    set rx1639_pos, rx1639_start[2]
    set rx1639_curclass, rx1639_start[3]
    set rx1639_bstack, rx1639_start[4]
    set $I19, rx1639_start[5]
    store_lex unicode:"$\x{a2}", rx1639_cur
    length rx1639_eos, rx1639_tgt
    eq $I19, 1, rx1639_restart3770
    gt rx1639_pos, rx1639_eos, rx1639_fail3771
    repr_get_attr_int $I11, self, rx1639_curclass, "$!from"
    ne $I11, -1, rxscan1640_done3777
    goto rxscan1640_scan3776
  rxscan1640_loop3775:
    inc rx1639_pos
    gt rx1639_pos, rx1639_eos, rx1639_fail3771
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!from", rx1639_pos
  rxscan1640_scan3776:
    nqp_rxmark rx1639_bstack, rxscan1640_loop3775, rx1639_pos, 0
  rxscan1640_done3777:
    nqp_rxmark rx1639_bstack, rxcap1641_fail3779, rx1639_pos, 0
    add $I11, rx1639_pos, 1
    gt $I11, rx1639_eos, rx1639_fail3771
    substr $S10, rx1639_tgt, rx1639_pos, 1
    ne $S10, ucs4:"=", rx1639_fail3771
    add rx1639_pos, 1
    nqp_rxpeek $I19, rx1639_bstack, rxcap1641_fail3779
    inc $I19
    set $I11, rx1639_bstack[$I19]
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1639_pos)
    rx1639_cstack = rx1639_cur."!cursor_capture"($P11, "sym")
    goto rxcap1641_done3778
  rxcap1641_fail3779:
    goto rx1639_fail3771
  rxcap1641_done3778:
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1639_curclass, "$!pos"
    lt $I11, 0, rx1639_fail3771
    repr_get_attr_int rx1639_pos, $P11, rx1639_curclass, "$!pos"
    rx1639_cur."!cursor_pass"(rx1639_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1639_cur)
  rx1639_restart3770:
    repr_get_attr_obj rx1639_cstack, rx1639_cur, rx1639_curclass, "$!cstack"
  rx1639_fail3771:
    unless rx1639_bstack, rx1639_done3769
    pop $I19, rx1639_bstack
    if_null rx1639_cstack, rx1639_cstack_done3774
    unless rx1639_cstack, rx1639_cstack_done3774
    dec $I19
    set $P11, rx1639_cstack[$I19]
  rx1639_cstack_done3774:
    pop rx1639_rep, rx1639_bstack
    pop rx1639_pos, rx1639_bstack
    pop $I19, rx1639_bstack
    lt rx1639_pos, -1, rx1639_done3769
    lt rx1639_pos, 0, rx1639_fail3771
    eq $I19, 0, rx1639_fail3771
    nqp_islist $I20, rx1639_cstack
    unless $I20, rx1639_jump3772
    elements $I18, rx1639_bstack
    le $I18, 0, rx1639_cut3773
    dec $I18
    set $I18, rx1639_bstack[$I18]
  rx1639_cut3773:
    assign rx1639_cstack, $I18
  rx1639_jump3772:
    jump $I19
  rx1639_done3769:
    rx1639_cur."!cursor_fail"()
    .return (rx1639_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_219_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1422
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1643_start
    .local string rx1643_tgt
    .local int rx1643_pos
    .local int rx1643_off
    .local int rx1643_eos
    .local int rx1643_rep
    .local pmc rx1643_cur
    .local pmc rx1643_curclass
    .local pmc rx1643_bstack
    .local pmc rx1643_cstack
    rx1643_start = self."!cursor_start_all"()
    set rx1643_cur, rx1643_start[0]
    set rx1643_tgt, rx1643_start[1]
    set rx1643_pos, rx1643_start[2]
    set rx1643_curclass, rx1643_start[3]
    set rx1643_bstack, rx1643_start[4]
    set $I19, rx1643_start[5]
    store_lex unicode:"$\x{a2}", rx1643_cur
    length rx1643_eos, rx1643_tgt
    eq $I19, 1, rx1643_restart3783
    gt rx1643_pos, rx1643_eos, rx1643_fail3784
    repr_get_attr_int $I11, self, rx1643_curclass, "$!from"
    ne $I11, -1, rxscan1644_done3790
    goto rxscan1644_scan3789
  rxscan1644_loop3788:
    inc rx1643_pos
    gt rx1643_pos, rx1643_eos, rx1643_fail3784
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!from", rx1643_pos
  rxscan1644_scan3789:
    nqp_rxmark rx1643_bstack, rxscan1644_loop3788, rx1643_pos, 0
  rxscan1644_done3790:
    nqp_rxmark rx1643_bstack, rxcap1645_fail3792, rx1643_pos, 0
    add $I11, rx1643_pos, 2
    gt $I11, rx1643_eos, rx1643_fail3784
    substr $S10, rx1643_tgt, rx1643_pos, 2
    ne $S10, ucs4:":=", rx1643_fail3784
    add rx1643_pos, 2
    nqp_rxpeek $I19, rx1643_bstack, rxcap1645_fail3792
    inc $I19
    set $I11, rx1643_bstack[$I19]
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    $P11 = rx1643_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1643_pos)
    rx1643_cstack = rx1643_cur."!cursor_capture"($P11, "sym")
    goto rxcap1645_done3791
  rxcap1645_fail3792:
    goto rx1643_fail3784
  rxcap1645_done3791:
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    $P11 = rx1643_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1643_curclass, "$!pos"
    lt $I11, 0, rx1643_fail3784
    nqp_rxmark rx1643_bstack, rxsubrule1646_pass3793, -1, 0
  rxsubrule1646_pass3793:
    rx1643_cstack = rx1643_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1643_pos, $P11, rx1643_curclass, "$!pos"
    rx1643_cur."!cursor_pass"(rx1643_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1643_cur)
  rx1643_restart3783:
    repr_get_attr_obj rx1643_cstack, rx1643_cur, rx1643_curclass, "$!cstack"
  rx1643_fail3784:
    unless rx1643_bstack, rx1643_done3782
    pop $I19, rx1643_bstack
    if_null rx1643_cstack, rx1643_cstack_done3787
    unless rx1643_cstack, rx1643_cstack_done3787
    dec $I19
    set $P11, rx1643_cstack[$I19]
  rx1643_cstack_done3787:
    pop rx1643_rep, rx1643_bstack
    pop rx1643_pos, rx1643_bstack
    pop $I19, rx1643_bstack
    lt rx1643_pos, -1, rx1643_done3782
    lt rx1643_pos, 0, rx1643_fail3784
    eq $I19, 0, rx1643_fail3784
    nqp_islist $I20, rx1643_cstack
    unless $I20, rx1643_jump3785
    elements $I18, rx1643_bstack
    le $I18, 0, rx1643_cut3786
    dec $I18
    set $I18, rx1643_bstack[$I18]
  rx1643_cut3786:
    assign rx1643_cstack, $I18
  rx1643_jump3785:
    jump $I19
  rx1643_done3782:
    rx1643_cur."!cursor_fail"()
    .return (rx1643_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_220_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1647_start
    .local string rx1647_tgt
    .local int rx1647_pos
    .local int rx1647_off
    .local int rx1647_eos
    .local int rx1647_rep
    .local pmc rx1647_cur
    .local pmc rx1647_curclass
    .local pmc rx1647_bstack
    .local pmc rx1647_cstack
    rx1647_start = self."!cursor_start_all"()
    set rx1647_cur, rx1647_start[0]
    set rx1647_tgt, rx1647_start[1]
    set rx1647_pos, rx1647_start[2]
    set rx1647_curclass, rx1647_start[3]
    set rx1647_bstack, rx1647_start[4]
    set $I19, rx1647_start[5]
    store_lex unicode:"$\x{a2}", rx1647_cur
    length rx1647_eos, rx1647_tgt
    eq $I19, 1, rx1647_restart3796
    gt rx1647_pos, rx1647_eos, rx1647_fail3797
    repr_get_attr_int $I11, self, rx1647_curclass, "$!from"
    ne $I11, -1, rxscan1648_done3803
    goto rxscan1648_scan3802
  rxscan1648_loop3801:
    inc rx1647_pos
    gt rx1647_pos, rx1647_eos, rx1647_fail3797
    repr_bind_attr_int rx1647_cur, rx1647_curclass, "$!from", rx1647_pos
  rxscan1648_scan3802:
    nqp_rxmark rx1647_bstack, rxscan1648_loop3801, rx1647_pos, 0
  rxscan1648_done3803:
    nqp_rxmark rx1647_bstack, rxcap1649_fail3805, rx1647_pos, 0
    add $I11, rx1647_pos, 3
    gt $I11, rx1647_eos, rx1647_fail3797
    substr $S10, rx1647_tgt, rx1647_pos, 3
    ne $S10, ucs4:"::=", rx1647_fail3797
    add rx1647_pos, 3
    nqp_rxpeek $I19, rx1647_bstack, rxcap1649_fail3805
    inc $I19
    set $I11, rx1647_bstack[$I19]
    repr_bind_attr_int rx1647_cur, rx1647_curclass, "$!pos", rx1647_pos
    $P11 = rx1647_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1647_pos)
    rx1647_cstack = rx1647_cur."!cursor_capture"($P11, "sym")
    goto rxcap1649_done3804
  rxcap1649_fail3805:
    goto rx1647_fail3797
  rxcap1649_done3804:
    repr_bind_attr_int rx1647_cur, rx1647_curclass, "$!pos", rx1647_pos
    $P11 = rx1647_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1647_curclass, "$!pos"
    lt $I11, 0, rx1647_fail3797
    nqp_rxmark rx1647_bstack, rxsubrule1650_pass3806, -1, 0
  rxsubrule1650_pass3806:
    rx1647_cstack = rx1647_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1647_pos, $P11, rx1647_curclass, "$!pos"
    rx1647_cur."!cursor_pass"(rx1647_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1647_cur)
  rx1647_restart3796:
    repr_get_attr_obj rx1647_cstack, rx1647_cur, rx1647_curclass, "$!cstack"
  rx1647_fail3797:
    unless rx1647_bstack, rx1647_done3795
    pop $I19, rx1647_bstack
    if_null rx1647_cstack, rx1647_cstack_done3800
    unless rx1647_cstack, rx1647_cstack_done3800
    dec $I19
    set $P11, rx1647_cstack[$I19]
  rx1647_cstack_done3800:
    pop rx1647_rep, rx1647_bstack
    pop rx1647_pos, rx1647_bstack
    pop $I19, rx1647_bstack
    lt rx1647_pos, -1, rx1647_done3795
    lt rx1647_pos, 0, rx1647_fail3797
    eq $I19, 0, rx1647_fail3797
    nqp_islist $I20, rx1647_cstack
    unless $I20, rx1647_jump3798
    elements $I18, rx1647_bstack
    le $I18, 0, rx1647_cut3799
    dec $I18
    set $I18, rx1647_bstack[$I18]
  rx1647_cut3799:
    assign rx1647_cstack, $I18
  rx1647_jump3798:
    jump $I19
  rx1647_done3795:
    rx1647_cur."!cursor_fail"()
    .return (rx1647_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_221_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1425
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1651_start
    .local string rx1651_tgt
    .local int rx1651_pos
    .local int rx1651_off
    .local int rx1651_eos
    .local int rx1651_rep
    .local pmc rx1651_cur
    .local pmc rx1651_curclass
    .local pmc rx1651_bstack
    .local pmc rx1651_cstack
    rx1651_start = self."!cursor_start_all"()
    set rx1651_cur, rx1651_start[0]
    set rx1651_tgt, rx1651_start[1]
    set rx1651_pos, rx1651_start[2]
    set rx1651_curclass, rx1651_start[3]
    set rx1651_bstack, rx1651_start[4]
    set $I19, rx1651_start[5]
    store_lex unicode:"$\x{a2}", rx1651_cur
    length rx1651_eos, rx1651_tgt
    eq $I19, 1, rx1651_restart3809
    gt rx1651_pos, rx1651_eos, rx1651_fail3810
    repr_get_attr_int $I11, self, rx1651_curclass, "$!from"
    ne $I11, -1, rxscan1652_done3816
    goto rxscan1652_scan3815
  rxscan1652_loop3814:
    inc rx1651_pos
    gt rx1651_pos, rx1651_eos, rx1651_fail3810
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!from", rx1651_pos
  rxscan1652_scan3815:
    nqp_rxmark rx1651_bstack, rxscan1652_loop3814, rx1651_pos, 0
  rxscan1652_done3816:
    nqp_rxmark rx1651_bstack, rxcap1653_fail3818, rx1651_pos, 0
    add $I11, rx1651_pos, 1
    gt $I11, rx1651_eos, rx1651_fail3810
    substr $S10, rx1651_tgt, rx1651_pos, 1
    ne $S10, ucs4:",", rx1651_fail3810
    add rx1651_pos, 1
    nqp_rxpeek $I19, rx1651_bstack, rxcap1653_fail3818
    inc $I19
    set $I11, rx1651_bstack[$I19]
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!pos", rx1651_pos
    $P11 = rx1651_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1651_pos)
    rx1651_cstack = rx1651_cur."!cursor_capture"($P11, "sym")
    goto rxcap1653_done3817
  rxcap1653_fail3818:
    goto rx1651_fail3810
  rxcap1653_done3817:
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!pos", rx1651_pos
    $P11 = rx1651_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1651_curclass, "$!pos"
    lt $I11, 0, rx1651_fail3810
    nqp_rxmark rx1651_bstack, rxsubrule1654_pass3819, -1, 0
  rxsubrule1654_pass3819:
    rx1651_cstack = rx1651_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1651_pos, $P11, rx1651_curclass, "$!pos"
    rx1651_cur."!cursor_pass"(rx1651_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1651_cur)
  rx1651_restart3809:
    repr_get_attr_obj rx1651_cstack, rx1651_cur, rx1651_curclass, "$!cstack"
  rx1651_fail3810:
    unless rx1651_bstack, rx1651_done3808
    pop $I19, rx1651_bstack
    if_null rx1651_cstack, rx1651_cstack_done3813
    unless rx1651_cstack, rx1651_cstack_done3813
    dec $I19
    set $P11, rx1651_cstack[$I19]
  rx1651_cstack_done3813:
    pop rx1651_rep, rx1651_bstack
    pop rx1651_pos, rx1651_bstack
    pop $I19, rx1651_bstack
    lt rx1651_pos, -1, rx1651_done3808
    lt rx1651_pos, 0, rx1651_fail3810
    eq $I19, 0, rx1651_fail3810
    nqp_islist $I20, rx1651_cstack
    unless $I20, rx1651_jump3811
    elements $I18, rx1651_bstack
    le $I18, 0, rx1651_cut3812
    dec $I18
    set $I18, rx1651_bstack[$I18]
  rx1651_cut3812:
    assign rx1651_cstack, $I18
  rx1651_jump3811:
    jump $I19
  rx1651_done3808:
    rx1651_cur."!cursor_fail"()
    .return (rx1651_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_222_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1427
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_417_1381281828.51527' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1655_start
    .local string rx1655_tgt
    .local int rx1655_pos
    .local int rx1655_off
    .local int rx1655_eos
    .local int rx1655_rep
    .local pmc rx1655_cur
    .local pmc rx1655_curclass
    .local pmc rx1655_bstack
    .local pmc rx1655_cstack
    rx1655_start = self."!cursor_start_all"()
    set rx1655_cur, rx1655_start[0]
    set rx1655_tgt, rx1655_start[1]
    set rx1655_pos, rx1655_start[2]
    set rx1655_curclass, rx1655_start[3]
    set rx1655_bstack, rx1655_start[4]
    set $I19, rx1655_start[5]
    store_lex unicode:"$\x{a2}", rx1655_cur
    length rx1655_eos, rx1655_tgt
    eq $I19, 1, rx1655_restart3822
    gt rx1655_pos, rx1655_eos, rx1655_fail3823
    repr_get_attr_int $I11, self, rx1655_curclass, "$!from"
    ne $I11, -1, rxscan1656_done3829
    goto rxscan1656_scan3828
  rxscan1656_loop3827:
    inc rx1655_pos
    gt rx1655_pos, rx1655_eos, rx1655_fail3823
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!from", rx1655_pos
  rxscan1656_scan3828:
    nqp_rxmark rx1655_bstack, rxscan1656_loop3827, rx1655_pos, 0
  rxscan1656_done3829:
    nqp_rxmark rx1655_bstack, rxcap1657_fail3831, rx1655_pos, 0
    add $I11, rx1655_pos, 6
    gt $I11, rx1655_eos, rx1655_fail3823
    substr $S10, rx1655_tgt, rx1655_pos, 6
    ne $S10, ucs4:"return", rx1655_fail3823
    add rx1655_pos, 6
    nqp_rxpeek $I19, rx1655_bstack, rxcap1657_fail3831
    inc $I19
    set $I11, rx1655_bstack[$I19]
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!pos", rx1655_pos
    $P11 = rx1655_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1655_pos)
    rx1655_cstack = rx1655_cur."!cursor_capture"($P11, "sym")
    goto rxcap1657_done3830
  rxcap1657_fail3831:
    goto rx1655_fail3823
  rxcap1657_done3830:
    ge rx1655_pos, rx1655_eos, rx1655_fail3823
    is_cclass $I11, .CCLASS_WHITESPACE, rx1655_tgt, rx1655_pos
    unless $I11, rx1655_fail3823
    add rx1655_pos, 1
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!pos", rx1655_pos
    $P11 = rx1655_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1655_curclass, "$!pos"
    lt $I11, 0, rx1655_fail3823
    nqp_rxmark rx1655_bstack, rxsubrule1658_pass3832, -1, 0
  rxsubrule1658_pass3832:
    rx1655_cstack = rx1655_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1655_pos, $P11, rx1655_curclass, "$!pos"
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!pos", rx1655_pos
    store_lex unicode:"$\x{a2}", rx1655_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_417_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1655_cur."!cursor_pass"(rx1655_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1655_cur)
  rx1655_restart3822:
    repr_get_attr_obj rx1655_cstack, rx1655_cur, rx1655_curclass, "$!cstack"
  rx1655_fail3823:
    unless rx1655_bstack, rx1655_done3821
    pop $I19, rx1655_bstack
    if_null rx1655_cstack, rx1655_cstack_done3826
    unless rx1655_cstack, rx1655_cstack_done3826
    dec $I19
    set $P11, rx1655_cstack[$I19]
  rx1655_cstack_done3826:
    pop rx1655_rep, rx1655_bstack
    pop rx1655_pos, rx1655_bstack
    pop $I19, rx1655_bstack
    lt rx1655_pos, -1, rx1655_done3821
    lt rx1655_pos, 0, rx1655_fail3823
    eq $I19, 0, rx1655_fail3823
    nqp_islist $I20, rx1655_cstack
    unless $I20, rx1655_jump3824
    elements $I18, rx1655_bstack
    le $I18, 0, rx1655_cut3825
    dec $I18
    set $I18, rx1655_bstack[$I18]
  rx1655_cut3825:
    assign rx1655_cstack, $I18
  rx1655_jump3824:
    jump $I19
  rx1655_done3821:
    rx1655_cur."!cursor_fail"()
    .return (rx1655_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1381281828.51527") :anon :lex :outer("cuid_222_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1427

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_223_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1428
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1659_start
    .local string rx1659_tgt
    .local int rx1659_pos
    .local int rx1659_off
    .local int rx1659_eos
    .local int rx1659_rep
    .local pmc rx1659_cur
    .local pmc rx1659_curclass
    .local pmc rx1659_bstack
    .local pmc rx1659_cstack
    rx1659_start = self."!cursor_start_all"()
    set rx1659_cur, rx1659_start[0]
    set rx1659_tgt, rx1659_start[1]
    set rx1659_pos, rx1659_start[2]
    set rx1659_curclass, rx1659_start[3]
    set rx1659_bstack, rx1659_start[4]
    set $I19, rx1659_start[5]
    store_lex unicode:"$\x{a2}", rx1659_cur
    length rx1659_eos, rx1659_tgt
    eq $I19, 1, rx1659_restart3835
    gt rx1659_pos, rx1659_eos, rx1659_fail3836
    repr_get_attr_int $I11, self, rx1659_curclass, "$!from"
    ne $I11, -1, rxscan1660_done3842
    goto rxscan1660_scan3841
  rxscan1660_loop3840:
    inc rx1659_pos
    gt rx1659_pos, rx1659_eos, rx1659_fail3836
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!from", rx1659_pos
  rxscan1660_scan3841:
    nqp_rxmark rx1659_bstack, rxscan1660_loop3840, rx1659_pos, 0
  rxscan1660_done3842:
    nqp_rxmark rx1659_bstack, rxcap1661_fail3844, rx1659_pos, 0
    add $I11, rx1659_pos, 4
    gt $I11, rx1659_eos, rx1659_fail3836
    substr $S10, rx1659_tgt, rx1659_pos, 4
    ne $S10, ucs4:"make", rx1659_fail3836
    add rx1659_pos, 4
    nqp_rxpeek $I19, rx1659_bstack, rxcap1661_fail3844
    inc $I19
    set $I11, rx1659_bstack[$I19]
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1659_pos)
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "sym")
    goto rxcap1661_done3843
  rxcap1661_fail3844:
    goto rx1659_fail3836
  rxcap1661_done3843:
    ge rx1659_pos, rx1659_eos, rx1659_fail3836
    is_cclass $I11, .CCLASS_WHITESPACE, rx1659_tgt, rx1659_pos
    unless $I11, rx1659_fail3836
    add rx1659_pos, 1
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail3836
    nqp_rxmark rx1659_bstack, rxsubrule1662_pass3845, -1, 0
  rxsubrule1662_pass3845:
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    rx1659_cur."!cursor_pass"(rx1659_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1659_cur)
  rx1659_restart3835:
    repr_get_attr_obj rx1659_cstack, rx1659_cur, rx1659_curclass, "$!cstack"
  rx1659_fail3836:
    unless rx1659_bstack, rx1659_done3834
    pop $I19, rx1659_bstack
    if_null rx1659_cstack, rx1659_cstack_done3839
    unless rx1659_cstack, rx1659_cstack_done3839
    dec $I19
    set $P11, rx1659_cstack[$I19]
  rx1659_cstack_done3839:
    pop rx1659_rep, rx1659_bstack
    pop rx1659_pos, rx1659_bstack
    pop $I19, rx1659_bstack
    lt rx1659_pos, -1, rx1659_done3834
    lt rx1659_pos, 0, rx1659_fail3836
    eq $I19, 0, rx1659_fail3836
    nqp_islist $I20, rx1659_cstack
    unless $I20, rx1659_jump3837
    elements $I18, rx1659_bstack
    le $I18, 0, rx1659_cut3838
    dec $I18
    set $I18, rx1659_bstack[$I18]
  rx1659_cut3838:
    assign rx1659_cstack, $I18
  rx1659_jump3837:
    jump $I19
  rx1659_done3834:
    rx1659_cur."!cursor_fail"()
    .return (rx1659_cur) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_224_1381281828.51527") :anon :lex :outer("cuid_398_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1430
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set fb_tmp_184, _lex_param_1
    repr_defined $I5001, fb_tmp_184
    unless $I5001 goto if1663_else3846 
    set $P5002, fb_tmp_184[0]
    set $P5004, $P5002
    goto if1663_end3847
  if1663_else3846:
    null $P5003
    set $P5004, $P5003
  if1663_end3847:
    unless_null $P5004, vivi_16643848
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_16643848:
    set $P101, $P5004
    set fb_tmp_185, _lex_param_1
    repr_defined $I5002, fb_tmp_185
    unless $I5002 goto if1665_else3849 
    set $P5006, fb_tmp_185[1]
    set $P5008, $P5006
    goto if1665_end3850
  if1665_else3849:
    null $P5007
    set $P5008, $P5007
  if1665_end3850:
    unless_null $P5008, vivi_16663851
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_16663851:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1436
    .const 'Sub' $P5013 = 'cuid_225_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_226_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_228_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_233_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_236_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_237_1381281828.51527' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1381281828.51527' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_225_1381281828.51527' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_226_1381281828.51527' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_228_1381281828.51527' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_229_1381281828.51527' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_231_1381281828.51527' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_232_1381281828.51527' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_233_1381281828.51527' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_234_1381281828.51527' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_235_1381281828.51527' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_236_1381281828.51527' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_237_1381281828.51527' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_238_1381281828.51527' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_225_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1437
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1667_start
    .local string rx1667_tgt
    .local int rx1667_pos
    .local int rx1667_off
    .local int rx1667_eos
    .local int rx1667_rep
    .local pmc rx1667_cur
    .local pmc rx1667_curclass
    .local pmc rx1667_bstack
    .local pmc rx1667_cstack
    rx1667_start = self."!cursor_start_all"()
    set rx1667_cur, rx1667_start[0]
    set rx1667_tgt, rx1667_start[1]
    set rx1667_pos, rx1667_start[2]
    set rx1667_curclass, rx1667_start[3]
    set rx1667_bstack, rx1667_start[4]
    set $I19, rx1667_start[5]
    store_lex unicode:"$\x{a2}", rx1667_cur
    length rx1667_eos, rx1667_tgt
    eq $I19, 1, rx1667_restart3854
    gt rx1667_pos, rx1667_eos, rx1667_fail3855
    repr_get_attr_int $I11, self, rx1667_curclass, "$!from"
    ne $I11, -1, rxscan1668_done3861
    goto rxscan1668_scan3860
  rxscan1668_loop3859:
    inc rx1667_pos
    gt rx1667_pos, rx1667_eos, rx1667_fail3855
    repr_bind_attr_int rx1667_cur, rx1667_curclass, "$!from", rx1667_pos
  rxscan1668_scan3860:
    nqp_rxmark rx1667_bstack, rxscan1668_loop3859, rx1667_pos, 0
  rxscan1668_done3861:
    ge rx1667_pos, rx1667_eos, rx1667_fail3855
    substr $S11, rx1667_tgt, rx1667_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1667_fail3855
    inc rx1667_pos
    rx1667_cur."!cursor_pass"(rx1667_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1667_cur)
  rx1667_restart3854:
    repr_get_attr_obj rx1667_cstack, rx1667_cur, rx1667_curclass, "$!cstack"
  rx1667_fail3855:
    unless rx1667_bstack, rx1667_done3853
    pop $I19, rx1667_bstack
    if_null rx1667_cstack, rx1667_cstack_done3858
    unless rx1667_cstack, rx1667_cstack_done3858
    dec $I19
    set $P11, rx1667_cstack[$I19]
  rx1667_cstack_done3858:
    pop rx1667_rep, rx1667_bstack
    pop rx1667_pos, rx1667_bstack
    pop $I19, rx1667_bstack
    lt rx1667_pos, -1, rx1667_done3853
    lt rx1667_pos, 0, rx1667_fail3855
    eq $I19, 0, rx1667_fail3855
    nqp_islist $I20, rx1667_cstack
    unless $I20, rx1667_jump3856
    elements $I18, rx1667_bstack
    le $I18, 0, rx1667_cut3857
    dec $I18
    set $I18, rx1667_bstack[$I18]
  rx1667_cut3857:
    assign rx1667_cstack, $I18
  rx1667_jump3856:
    jump $I19
  rx1667_done3853:
    rx1667_cur."!cursor_fail"()
    .return (rx1667_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_226_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1441
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_227_1381281828.51527' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1669_start
    .local string rx1669_tgt
    .local int rx1669_pos
    .local int rx1669_off
    .local int rx1669_eos
    .local int rx1669_rep
    .local pmc rx1669_cur
    .local pmc rx1669_curclass
    .local pmc rx1669_bstack
    .local pmc rx1669_cstack
    rx1669_start = self."!cursor_start_all"()
    set rx1669_cur, rx1669_start[0]
    set rx1669_tgt, rx1669_start[1]
    set rx1669_pos, rx1669_start[2]
    set rx1669_curclass, rx1669_start[3]
    set rx1669_bstack, rx1669_start[4]
    set $I19, rx1669_start[5]
    store_lex unicode:"$\x{a2}", rx1669_cur
    length rx1669_eos, rx1669_tgt
    eq $I19, 1, rx1669_restart3864
    gt rx1669_pos, rx1669_eos, rx1669_fail3865
    repr_get_attr_int $I11, self, rx1669_curclass, "$!from"
    ne $I11, -1, rxscan1670_done3871
    goto rxscan1670_scan3870
  rxscan1670_loop3869:
    inc rx1669_pos
    gt rx1669_pos, rx1669_eos, rx1669_fail3865
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!from", rx1669_pos
  rxscan1670_scan3870:
    nqp_rxmark rx1669_bstack, rxscan1670_loop3869, rx1669_pos, 0
  rxscan1670_done3871:
    add $I11, rx1669_pos, 1
    gt $I11, rx1669_eos, rx1669_fail3865
    substr $S10, rx1669_tgt, rx1669_pos, 1
    ne $S10, ucs4:":", rx1669_fail3865
    add rx1669_pos, 1
    .const 'Sub' $P5001 = 'cuid_227_1381281828.51527' 
    capture_lex $P5001
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1669_curclass, "$!pos"
    lt $I11, 0, rx1669_fail3865
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1669_curclass, "$!pos"
    lt $I11, 0, rx1669_fail3865
    nqp_rxmark rx1669_bstack, rxsubrule1673_pass3882, -1, 0
  rxsubrule1673_pass3882:
    rx1669_cstack = rx1669_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1669_pos, $P11, rx1669_curclass, "$!pos"
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1669_curclass, "$!pos"
    lt $I11, 0, rx1669_fail3865
    repr_get_attr_int rx1669_pos, $P11, rx1669_curclass, "$!pos"
    add $I11, rx1669_pos, 1
    gt $I11, rx1669_eos, rx1669_fail3865
    substr $S10, rx1669_tgt, rx1669_pos, 1
    ne $S10, ucs4:";", rx1669_fail3865
    add rx1669_pos, 1
    rx1669_cur."!cursor_pass"(rx1669_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1669_cur)
  rx1669_restart3864:
    repr_get_attr_obj rx1669_cstack, rx1669_cur, rx1669_curclass, "$!cstack"
  rx1669_fail3865:
    unless rx1669_bstack, rx1669_done3863
    pop $I19, rx1669_bstack
    if_null rx1669_cstack, rx1669_cstack_done3868
    unless rx1669_cstack, rx1669_cstack_done3868
    dec $I19
    set $P11, rx1669_cstack[$I19]
  rx1669_cstack_done3868:
    pop rx1669_rep, rx1669_bstack
    pop rx1669_pos, rx1669_bstack
    pop $I19, rx1669_bstack
    lt rx1669_pos, -1, rx1669_done3863
    lt rx1669_pos, 0, rx1669_fail3865
    eq $I19, 0, rx1669_fail3865
    nqp_islist $I20, rx1669_cstack
    unless $I20, rx1669_jump3866
    elements $I18, rx1669_bstack
    le $I18, 0, rx1669_cut3867
    dec $I18
    set $I18, rx1669_bstack[$I18]
  rx1669_cut3867:
    assign rx1669_cstack, $I18
  rx1669_jump3866:
    jump $I19
  rx1669_done3863:
    rx1669_cur."!cursor_fail"()
    .return (rx1669_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_227_1381281828.51527") :anon :lex :outer("cuid_226_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1671_start
    .local string rx1671_tgt
    .local int rx1671_pos
    .local int rx1671_off
    .local int rx1671_eos
    .local int rx1671_rep
    .local pmc rx1671_cur
    .local pmc rx1671_curclass
    .local pmc rx1671_bstack
    .local pmc rx1671_cstack
    rx1671_start = self."!cursor_start_all"()
    set rx1671_cur, rx1671_start[0]
    set rx1671_tgt, rx1671_start[1]
    set rx1671_pos, rx1671_start[2]
    set rx1671_curclass, rx1671_start[3]
    set rx1671_bstack, rx1671_start[4]
    set $I19, rx1671_start[5]
    store_lex unicode:"$\x{a2}", rx1671_cur
    length rx1671_eos, rx1671_tgt
    eq $I19, 1, rx1671_restart3874
    gt rx1671_pos, rx1671_eos, rx1671_fail3875
    repr_get_attr_int $I11, self, rx1671_curclass, "$!from"
    ne $I11, -1, rxscan1672_done3881
    goto rxscan1672_scan3880
  rxscan1672_loop3879:
    inc rx1671_pos
    gt rx1671_pos, rx1671_eos, rx1671_fail3875
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!from", rx1671_pos
  rxscan1672_scan3880:
    nqp_rxmark rx1671_bstack, rxscan1672_loop3879, rx1671_pos, 0
  rxscan1672_done3881:
    add $I11, rx1671_pos, 2
    gt $I11, rx1671_eos, rx1671_fail3875
    substr $S10, rx1671_tgt, rx1671_pos, 2
    ne $S10, ucs4:"my", rx1671_fail3875
    add rx1671_pos, 2
    rx1671_cur."!cursor_pass"(rx1671_pos, 'backtrack'=>1)
    .return (rx1671_cur)
  rx1671_restart3874:
    repr_get_attr_obj rx1671_cstack, rx1671_cur, rx1671_curclass, "$!cstack"
  rx1671_fail3875:
    unless rx1671_bstack, rx1671_done3873
    pop $I19, rx1671_bstack
    if_null rx1671_cstack, rx1671_cstack_done3878
    unless rx1671_cstack, rx1671_cstack_done3878
    dec $I19
    set $P11, rx1671_cstack[$I19]
  rx1671_cstack_done3878:
    pop rx1671_rep, rx1671_bstack
    pop rx1671_pos, rx1671_bstack
    pop $I19, rx1671_bstack
    lt rx1671_pos, -1, rx1671_done3873
    lt rx1671_pos, 0, rx1671_fail3875
    eq $I19, 0, rx1671_fail3875
    nqp_islist $I20, rx1671_cstack
    unless $I20, rx1671_jump3876
    elements $I18, rx1671_bstack
    le $I18, 0, rx1671_cut3877
    dec $I18
    set $I18, rx1671_bstack[$I18]
  rx1671_cut3877:
    assign rx1671_cstack, $I18
  rx1671_jump3876:
    jump $I19
  rx1671_done3873:
    rx1671_cur."!cursor_fail"()
    .return (rx1671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_228_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1445
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1675_start
    .local string rx1675_tgt
    .local int rx1675_pos
    .local int rx1675_off
    .local int rx1675_eos
    .local int rx1675_rep
    .local pmc rx1675_cur
    .local pmc rx1675_curclass
    .local pmc rx1675_bstack
    .local pmc rx1675_cstack
    rx1675_start = self."!cursor_start_all"()
    set rx1675_cur, rx1675_start[0]
    set rx1675_tgt, rx1675_start[1]
    set rx1675_pos, rx1675_start[2]
    set rx1675_curclass, rx1675_start[3]
    set rx1675_bstack, rx1675_start[4]
    set $I19, rx1675_start[5]
    store_lex unicode:"$\x{a2}", rx1675_cur
    length rx1675_eos, rx1675_tgt
    eq $I19, 1, rx1675_restart3886
    gt rx1675_pos, rx1675_eos, rx1675_fail3887
    repr_get_attr_int $I11, self, rx1675_curclass, "$!from"
    ne $I11, -1, rxscan1676_done3893
    goto rxscan1676_scan3892
  rxscan1676_loop3891:
    inc rx1675_pos
    gt rx1675_pos, rx1675_eos, rx1675_fail3887
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!from", rx1675_pos
  rxscan1676_scan3892:
    nqp_rxmark rx1675_bstack, rxscan1676_loop3891, rx1675_pos, 0
  rxscan1676_done3893:
    ge rx1675_pos, rx1675_eos, rx1675_fail3887
    substr $S11, rx1675_tgt, rx1675_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1675_fail3887
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3887
    nqp_rxmark rx1675_bstack, rxsubrule1677_pass3894, -1, 0
  rxsubrule1677_pass3894:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    rx1675_cur."!cursor_pass"(rx1675_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1675_cur)
  rx1675_restart3886:
    repr_get_attr_obj rx1675_cstack, rx1675_cur, rx1675_curclass, "$!cstack"
  rx1675_fail3887:
    unless rx1675_bstack, rx1675_done3885
    pop $I19, rx1675_bstack
    if_null rx1675_cstack, rx1675_cstack_done3890
    unless rx1675_cstack, rx1675_cstack_done3890
    dec $I19
    set $P11, rx1675_cstack[$I19]
  rx1675_cstack_done3890:
    pop rx1675_rep, rx1675_bstack
    pop rx1675_pos, rx1675_bstack
    pop $I19, rx1675_bstack
    lt rx1675_pos, -1, rx1675_done3885
    lt rx1675_pos, 0, rx1675_fail3887
    eq $I19, 0, rx1675_fail3887
    nqp_islist $I20, rx1675_cstack
    unless $I20, rx1675_jump3888
    elements $I18, rx1675_bstack
    le $I18, 0, rx1675_cut3889
    dec $I18
    set $I18, rx1675_bstack[$I18]
  rx1675_cut3889:
    assign rx1675_cstack, $I18
  rx1675_jump3888:
    jump $I19
  rx1675_done3885:
    rx1675_cur."!cursor_fail"()
    .return (rx1675_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_229_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1449
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_230_1381281828.51527' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1678_start
    .local string rx1678_tgt
    .local int rx1678_pos
    .local int rx1678_off
    .local int rx1678_eos
    .local int rx1678_rep
    .local pmc rx1678_cur
    .local pmc rx1678_curclass
    .local pmc rx1678_bstack
    .local pmc rx1678_cstack
    rx1678_start = self."!cursor_start_all"()
    set rx1678_cur, rx1678_start[0]
    set rx1678_tgt, rx1678_start[1]
    set rx1678_pos, rx1678_start[2]
    set rx1678_curclass, rx1678_start[3]
    set rx1678_bstack, rx1678_start[4]
    set $I19, rx1678_start[5]
    store_lex unicode:"$\x{a2}", rx1678_cur
    length rx1678_eos, rx1678_tgt
    eq $I19, 1, rx1678_restart3897
    gt rx1678_pos, rx1678_eos, rx1678_fail3898
    repr_get_attr_int $I11, self, rx1678_curclass, "$!from"
    ne $I11, -1, rxscan1679_done3904
    goto rxscan1679_scan3903
  rxscan1679_loop3902:
    inc rx1678_pos
    gt rx1678_pos, rx1678_eos, rx1678_fail3898
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!from", rx1678_pos
  rxscan1679_scan3903:
    nqp_rxmark rx1678_bstack, rxscan1679_loop3902, rx1678_pos, 0
  rxscan1679_done3904:
    .const 'Sub' $P5001 = 'cuid_230_1381281828.51527' 
    capture_lex $P5001
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1678_curclass, "$!pos"
    lt $I11, 0, rx1678_fail3898
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1678_curclass, "$!pos"
    lt $I11, 0, rx1678_fail3898
    nqp_rxmark rx1678_bstack, rxsubrule1684_pass3919, -1, 0
  rxsubrule1684_pass3919:
    rx1678_cstack = rx1678_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1678_pos, $P11, rx1678_curclass, "$!pos"
    rx1678_cur."!cursor_pass"(rx1678_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1678_cur)
  rx1678_restart3897:
    repr_get_attr_obj rx1678_cstack, rx1678_cur, rx1678_curclass, "$!cstack"
  rx1678_fail3898:
    unless rx1678_bstack, rx1678_done3896
    pop $I19, rx1678_bstack
    if_null rx1678_cstack, rx1678_cstack_done3901
    unless rx1678_cstack, rx1678_cstack_done3901
    dec $I19
    set $P11, rx1678_cstack[$I19]
  rx1678_cstack_done3901:
    pop rx1678_rep, rx1678_bstack
    pop rx1678_pos, rx1678_bstack
    pop $I19, rx1678_bstack
    lt rx1678_pos, -1, rx1678_done3896
    lt rx1678_pos, 0, rx1678_fail3898
    eq $I19, 0, rx1678_fail3898
    nqp_islist $I20, rx1678_cstack
    unless $I20, rx1678_jump3899
    elements $I18, rx1678_bstack
    le $I18, 0, rx1678_cut3900
    dec $I18
    set $I18, rx1678_bstack[$I18]
  rx1678_cut3900:
    assign rx1678_cstack, $I18
  rx1678_jump3899:
    jump $I19
  rx1678_done3896:
    rx1678_cur."!cursor_fail"()
    .return (rx1678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1381281828.51527") :anon :lex :outer("cuid_229_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1680_start
    .local string rx1680_tgt
    .local int rx1680_pos
    .local int rx1680_off
    .local int rx1680_eos
    .local int rx1680_rep
    .local pmc rx1680_cur
    .local pmc rx1680_curclass
    .local pmc rx1680_bstack
    .local pmc rx1680_cstack
    rx1680_start = self."!cursor_start_all"()
    set rx1680_cur, rx1680_start[0]
    set rx1680_tgt, rx1680_start[1]
    set rx1680_pos, rx1680_start[2]
    set rx1680_curclass, rx1680_start[3]
    set rx1680_bstack, rx1680_start[4]
    set $I19, rx1680_start[5]
    store_lex unicode:"$\x{a2}", rx1680_cur
    length rx1680_eos, rx1680_tgt
    eq $I19, 1, rx1680_restart3907
    gt rx1680_pos, rx1680_eos, rx1680_fail3908
    repr_get_attr_int $I11, self, rx1680_curclass, "$!from"
    ne $I11, -1, rxscan1681_done3914
    goto rxscan1681_scan3913
  rxscan1681_loop3912:
    inc rx1680_pos
    gt rx1680_pos, rx1680_eos, rx1680_fail3908
    repr_bind_attr_int rx1680_cur, rx1680_curclass, "$!from", rx1680_pos
  rxscan1681_scan3913:
    nqp_rxmark rx1680_bstack, rxscan1681_loop3912, rx1680_pos, 0
  rxscan1681_done3914:
    repr_bind_attr_int rx1680_cur, rx1680_curclass, "$!pos", rx1680_pos
    $P11 = rx1680_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1680_curclass, "$!pos"
    lt $I11, 0, rx1680_fail3908
    nqp_rxmark rx1680_bstack, rxsubrule1682_pass3915, -1, 0
  rxsubrule1682_pass3915:
    rx1680_cstack = rx1680_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1680_pos, $P11, rx1680_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1683_03917
    nqp_push_label $P11, alt1683_13918
    nqp_rxmark rx1680_bstack, alt1683_end3916, -1, 0
    rx1680_cur."!alt"(rx1680_pos, "alt_nfa__39_1381281832.93724", $P11)
    goto rx1680_fail3908
  alt1683_03917:
    ge rx1680_pos, rx1680_eos, rx1680_fail3908
    is_cclass $I11, .CCLASS_WORD, rx1680_tgt, rx1680_pos
    if $I11, rx1680_fail3908
    add rx1680_pos, 1
    ge rx1680_pos, rx1680_eos, rx1680_fail3908
    is_cclass $I11, .CCLASS_WORD, rx1680_tgt, rx1680_pos
    unless $I11, rx1680_fail3908
    add rx1680_pos, 1
    goto alt1683_end3916
  alt1683_13918:
    ge rx1680_pos, rx1680_eos, rx1680_fail3908
    is_cclass $I11, .CCLASS_WORD, rx1680_tgt, rx1680_pos
    unless $I11, rx1680_fail3908
    add rx1680_pos, 1
    goto alt1683_end3916
  alt1683_end3916:
    nqp_rxcommit rx1680_bstack, alt1683_end3916
    rx1680_cur."!cursor_pass"(rx1680_pos, 'backtrack'=>1)
    .return (rx1680_cur)
  rx1680_restart3907:
    repr_get_attr_obj rx1680_cstack, rx1680_cur, rx1680_curclass, "$!cstack"
  rx1680_fail3908:
    unless rx1680_bstack, rx1680_done3906
    pop $I19, rx1680_bstack
    if_null rx1680_cstack, rx1680_cstack_done3911
    unless rx1680_cstack, rx1680_cstack_done3911
    dec $I19
    set $P11, rx1680_cstack[$I19]
  rx1680_cstack_done3911:
    pop rx1680_rep, rx1680_bstack
    pop rx1680_pos, rx1680_bstack
    pop $I19, rx1680_bstack
    lt rx1680_pos, -1, rx1680_done3906
    lt rx1680_pos, 0, rx1680_fail3908
    eq $I19, 0, rx1680_fail3908
    nqp_islist $I20, rx1680_cstack
    unless $I20, rx1680_jump3909
    elements $I18, rx1680_bstack
    le $I18, 0, rx1680_cut3910
    dec $I18
    set $I18, rx1680_bstack[$I18]
  rx1680_cut3910:
    assign rx1680_cstack, $I18
  rx1680_jump3909:
    jump $I19
  rx1680_done3906:
    rx1680_cur."!cursor_fail"()
    .return (rx1680_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_231_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1453
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1685_start
    .local string rx1685_tgt
    .local int rx1685_pos
    .local int rx1685_off
    .local int rx1685_eos
    .local int rx1685_rep
    .local pmc rx1685_cur
    .local pmc rx1685_curclass
    .local pmc rx1685_bstack
    .local pmc rx1685_cstack
    rx1685_start = self."!cursor_start_all"()
    set rx1685_cur, rx1685_start[0]
    set rx1685_tgt, rx1685_start[1]
    set rx1685_pos, rx1685_start[2]
    set rx1685_curclass, rx1685_start[3]
    set rx1685_bstack, rx1685_start[4]
    set $I19, rx1685_start[5]
    store_lex unicode:"$\x{a2}", rx1685_cur
    length rx1685_eos, rx1685_tgt
    eq $I19, 1, rx1685_restart3922
    gt rx1685_pos, rx1685_eos, rx1685_fail3923
    repr_get_attr_int $I11, self, rx1685_curclass, "$!from"
    ne $I11, -1, rxscan1686_done3929
    goto rxscan1686_scan3928
  rxscan1686_loop3927:
    inc rx1685_pos
    gt rx1685_pos, rx1685_eos, rx1685_fail3923
    repr_bind_attr_int rx1685_cur, rx1685_curclass, "$!from", rx1685_pos
  rxscan1686_scan3928:
    nqp_rxmark rx1685_bstack, rxscan1686_loop3927, rx1685_pos, 0
  rxscan1686_done3929:
    ge rx1685_pos, rx1685_eos, rx1685_fail3923
    substr $S11, rx1685_tgt, rx1685_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1685_fail3923
    repr_bind_attr_int rx1685_cur, rx1685_curclass, "$!pos", rx1685_pos
    $P11 = rx1685_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1685_curclass, "$!pos"
    lt $I11, 0, rx1685_fail3923
    nqp_rxmark rx1685_bstack, rxsubrule1687_pass3930, -1, 0
  rxsubrule1687_pass3930:
    rx1685_cstack = rx1685_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1685_pos, $P11, rx1685_curclass, "$!pos"
    rx1685_cur."!cursor_pass"(rx1685_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1685_cur)
  rx1685_restart3922:
    repr_get_attr_obj rx1685_cstack, rx1685_cur, rx1685_curclass, "$!cstack"
  rx1685_fail3923:
    unless rx1685_bstack, rx1685_done3921
    pop $I19, rx1685_bstack
    if_null rx1685_cstack, rx1685_cstack_done3926
    unless rx1685_cstack, rx1685_cstack_done3926
    dec $I19
    set $P11, rx1685_cstack[$I19]
  rx1685_cstack_done3926:
    pop rx1685_rep, rx1685_bstack
    pop rx1685_pos, rx1685_bstack
    pop $I19, rx1685_bstack
    lt rx1685_pos, -1, rx1685_done3921
    lt rx1685_pos, 0, rx1685_fail3923
    eq $I19, 0, rx1685_fail3923
    nqp_islist $I20, rx1685_cstack
    unless $I20, rx1685_jump3924
    elements $I18, rx1685_bstack
    le $I18, 0, rx1685_cut3925
    dec $I18
    set $I18, rx1685_bstack[$I18]
  rx1685_cut3925:
    assign rx1685_cstack, $I18
  rx1685_jump3924:
    jump $I19
  rx1685_done3921:
    rx1685_cur."!cursor_fail"()
    .return (rx1685_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_232_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1457
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1688_start
    .local string rx1688_tgt
    .local int rx1688_pos
    .local int rx1688_off
    .local int rx1688_eos
    .local int rx1688_rep
    .local pmc rx1688_cur
    .local pmc rx1688_curclass
    .local pmc rx1688_bstack
    .local pmc rx1688_cstack
    rx1688_start = self."!cursor_start_all"()
    set rx1688_cur, rx1688_start[0]
    set rx1688_tgt, rx1688_start[1]
    set rx1688_pos, rx1688_start[2]
    set rx1688_curclass, rx1688_start[3]
    set rx1688_bstack, rx1688_start[4]
    set $I19, rx1688_start[5]
    store_lex unicode:"$\x{a2}", rx1688_cur
    length rx1688_eos, rx1688_tgt
    eq $I19, 1, rx1688_restart3933
    gt rx1688_pos, rx1688_eos, rx1688_fail3934
    repr_get_attr_int $I11, self, rx1688_curclass, "$!from"
    ne $I11, -1, rxscan1689_done3940
    goto rxscan1689_scan3939
  rxscan1689_loop3938:
    inc rx1688_pos
    gt rx1688_pos, rx1688_eos, rx1688_fail3934
    repr_bind_attr_int rx1688_cur, rx1688_curclass, "$!from", rx1688_pos
  rxscan1689_scan3939:
    nqp_rxmark rx1688_bstack, rxscan1689_loop3938, rx1688_pos, 0
  rxscan1689_done3940:
    add $I11, rx1688_pos, 1
    gt $I11, rx1688_eos, rx1688_fail3934
    substr $S10, rx1688_tgt, rx1688_pos, 1
    ne $S10, ucs4:"?", rx1688_fail3934
    add rx1688_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1690_03942
    nqp_push_label $P11, alt1690_13943
    nqp_rxmark rx1688_bstack, alt1690_end3941, -1, 0
    rx1688_cur."!alt"(rx1688_pos, "alt_nfa__40_1381281832.96213", $P11)
    goto rx1688_fail3934
  alt1690_03942:
    ge rx1688_pos, rx1688_eos, rx1688_fail3934
    substr $S11, rx1688_tgt, rx1688_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1688_fail3934
    goto alt1690_end3941
  alt1690_13943:
    ge rx1688_pos, rx1688_eos, rx1688_fail3934
    substr $S11, rx1688_tgt, rx1688_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1688_fail3934
    repr_bind_attr_int rx1688_cur, rx1688_curclass, "$!pos", rx1688_pos
    $P11 = rx1688_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1688_curclass, "$!pos"
    lt $I11, 0, rx1688_fail3934
    nqp_rxmark rx1688_bstack, rxsubrule1691_pass3944, -1, 0
  rxsubrule1691_pass3944:
    rx1688_cstack = rx1688_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1688_pos, $P11, rx1688_curclass, "$!pos"
    goto alt1690_end3941
  alt1690_end3941:
    nqp_rxcommit rx1688_bstack, alt1690_end3941
    rx1688_cur."!cursor_pass"(rx1688_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1688_cur)
  rx1688_restart3933:
    repr_get_attr_obj rx1688_cstack, rx1688_cur, rx1688_curclass, "$!cstack"
  rx1688_fail3934:
    unless rx1688_bstack, rx1688_done3932
    pop $I19, rx1688_bstack
    if_null rx1688_cstack, rx1688_cstack_done3937
    unless rx1688_cstack, rx1688_cstack_done3937
    dec $I19
    set $P11, rx1688_cstack[$I19]
  rx1688_cstack_done3937:
    pop rx1688_rep, rx1688_bstack
    pop rx1688_pos, rx1688_bstack
    pop $I19, rx1688_bstack
    lt rx1688_pos, -1, rx1688_done3932
    lt rx1688_pos, 0, rx1688_fail3934
    eq $I19, 0, rx1688_fail3934
    nqp_islist $I20, rx1688_cstack
    unless $I20, rx1688_jump3935
    elements $I18, rx1688_bstack
    le $I18, 0, rx1688_cut3936
    dec $I18
    set $I18, rx1688_bstack[$I18]
  rx1688_cut3936:
    assign rx1688_cstack, $I18
  rx1688_jump3935:
    jump $I19
  rx1688_done3932:
    rx1688_cur."!cursor_fail"()
    .return (rx1688_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_233_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1458
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1692_start
    .local string rx1692_tgt
    .local int rx1692_pos
    .local int rx1692_off
    .local int rx1692_eos
    .local int rx1692_rep
    .local pmc rx1692_cur
    .local pmc rx1692_curclass
    .local pmc rx1692_bstack
    .local pmc rx1692_cstack
    rx1692_start = self."!cursor_start_all"()
    set rx1692_cur, rx1692_start[0]
    set rx1692_tgt, rx1692_start[1]
    set rx1692_pos, rx1692_start[2]
    set rx1692_curclass, rx1692_start[3]
    set rx1692_bstack, rx1692_start[4]
    set $I19, rx1692_start[5]
    store_lex unicode:"$\x{a2}", rx1692_cur
    length rx1692_eos, rx1692_tgt
    eq $I19, 1, rx1692_restart3947
    gt rx1692_pos, rx1692_eos, rx1692_fail3948
    repr_get_attr_int $I11, self, rx1692_curclass, "$!from"
    ne $I11, -1, rxscan1693_done3954
    goto rxscan1693_scan3953
  rxscan1693_loop3952:
    inc rx1692_pos
    gt rx1692_pos, rx1692_eos, rx1692_fail3948
    repr_bind_attr_int rx1692_cur, rx1692_curclass, "$!from", rx1692_pos
  rxscan1693_scan3953:
    nqp_rxmark rx1692_bstack, rxscan1693_loop3952, rx1692_pos, 0
  rxscan1693_done3954:
    add $I11, rx1692_pos, 1
    gt $I11, rx1692_eos, rx1692_fail3948
    substr $S10, rx1692_tgt, rx1692_pos, 1
    ne $S10, ucs4:"!", rx1692_fail3948
    add rx1692_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1694_03956
    nqp_push_label $P11, alt1694_13957
    nqp_rxmark rx1692_bstack, alt1694_end3955, -1, 0
    rx1692_cur."!alt"(rx1692_pos, "alt_nfa__41_1381281832.97452", $P11)
    goto rx1692_fail3948
  alt1694_03956:
    ge rx1692_pos, rx1692_eos, rx1692_fail3948
    substr $S11, rx1692_tgt, rx1692_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1692_fail3948
    goto alt1694_end3955
  alt1694_13957:
    ge rx1692_pos, rx1692_eos, rx1692_fail3948
    substr $S11, rx1692_tgt, rx1692_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1692_fail3948
    repr_bind_attr_int rx1692_cur, rx1692_curclass, "$!pos", rx1692_pos
    $P11 = rx1692_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1692_curclass, "$!pos"
    lt $I11, 0, rx1692_fail3948
    nqp_rxmark rx1692_bstack, rxsubrule1695_pass3958, -1, 0
  rxsubrule1695_pass3958:
    rx1692_cstack = rx1692_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1692_pos, $P11, rx1692_curclass, "$!pos"
    goto alt1694_end3955
  alt1694_end3955:
    nqp_rxcommit rx1692_bstack, alt1694_end3955
    rx1692_cur."!cursor_pass"(rx1692_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1692_cur)
  rx1692_restart3947:
    repr_get_attr_obj rx1692_cstack, rx1692_cur, rx1692_curclass, "$!cstack"
  rx1692_fail3948:
    unless rx1692_bstack, rx1692_done3946
    pop $I19, rx1692_bstack
    if_null rx1692_cstack, rx1692_cstack_done3951
    unless rx1692_cstack, rx1692_cstack_done3951
    dec $I19
    set $P11, rx1692_cstack[$I19]
  rx1692_cstack_done3951:
    pop rx1692_rep, rx1692_bstack
    pop rx1692_pos, rx1692_bstack
    pop $I19, rx1692_bstack
    lt rx1692_pos, -1, rx1692_done3946
    lt rx1692_pos, 0, rx1692_fail3948
    eq $I19, 0, rx1692_fail3948
    nqp_islist $I20, rx1692_cstack
    unless $I20, rx1692_jump3949
    elements $I18, rx1692_bstack
    le $I18, 0, rx1692_cut3950
    dec $I18
    set $I18, rx1692_bstack[$I18]
  rx1692_cut3950:
    assign rx1692_cstack, $I18
  rx1692_jump3949:
    jump $I19
  rx1692_done3946:
    rx1692_cur."!cursor_fail"()
    .return (rx1692_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_234_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1460
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1696_start
    .local string rx1696_tgt
    .local int rx1696_pos
    .local int rx1696_off
    .local int rx1696_eos
    .local int rx1696_rep
    .local pmc rx1696_cur
    .local pmc rx1696_curclass
    .local pmc rx1696_bstack
    .local pmc rx1696_cstack
    rx1696_start = self."!cursor_start_all"()
    set rx1696_cur, rx1696_start[0]
    set rx1696_tgt, rx1696_start[1]
    set rx1696_pos, rx1696_start[2]
    set rx1696_curclass, rx1696_start[3]
    set rx1696_bstack, rx1696_start[4]
    set $I19, rx1696_start[5]
    store_lex unicode:"$\x{a2}", rx1696_cur
    length rx1696_eos, rx1696_tgt
    eq $I19, 1, rx1696_restart3961
    gt rx1696_pos, rx1696_eos, rx1696_fail3962
    repr_get_attr_int $I11, self, rx1696_curclass, "$!from"
    ne $I11, -1, rxscan1697_done3968
    goto rxscan1697_scan3967
  rxscan1697_loop3966:
    inc rx1696_pos
    gt rx1696_pos, rx1696_eos, rx1696_fail3962
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!from", rx1696_pos
  rxscan1697_scan3967:
    nqp_rxmark rx1696_bstack, rxscan1697_loop3966, rx1696_pos, 0
  rxscan1697_done3968:
    nqp_rxmark rx1696_bstack, rxcap1698_fail3970, rx1696_pos, 0
    ge rx1696_pos, rx1696_eos, rx1696_fail3962
    substr $S11, rx1696_tgt, rx1696_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1696_fail3962
    inc rx1696_pos
    ge rx1696_pos, rx1696_eos, rx1696_fail3962
    substr $S11, rx1696_tgt, rx1696_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1696_fail3962
    nqp_rxpeek $I19, rx1696_bstack, rxcap1698_fail3970
    inc $I19
    set $I11, rx1696_bstack[$I19]
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!pos", rx1696_pos
    $P11 = rx1696_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1696_pos)
    rx1696_cstack = rx1696_cur."!cursor_capture"($P11, "zw")
    goto rxcap1698_done3969
  rxcap1698_fail3970:
    goto rx1696_fail3962
  rxcap1698_done3969:
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!pos", rx1696_pos
    $P11 = rx1696_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1696_curclass, "$!pos"
    lt $I11, 0, rx1696_fail3962
    nqp_rxmark rx1696_bstack, rxsubrule1699_pass3971, -1, 0
  rxsubrule1699_pass3971:
    rx1696_cstack = rx1696_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1696_pos, $P11, rx1696_curclass, "$!pos"
    rx1696_cur."!cursor_pass"(rx1696_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1696_cur)
  rx1696_restart3961:
    repr_get_attr_obj rx1696_cstack, rx1696_cur, rx1696_curclass, "$!cstack"
  rx1696_fail3962:
    unless rx1696_bstack, rx1696_done3960
    pop $I19, rx1696_bstack
    if_null rx1696_cstack, rx1696_cstack_done3965
    unless rx1696_cstack, rx1696_cstack_done3965
    dec $I19
    set $P11, rx1696_cstack[$I19]
  rx1696_cstack_done3965:
    pop rx1696_rep, rx1696_bstack
    pop rx1696_pos, rx1696_bstack
    pop $I19, rx1696_bstack
    lt rx1696_pos, -1, rx1696_done3960
    lt rx1696_pos, 0, rx1696_fail3962
    eq $I19, 0, rx1696_fail3962
    nqp_islist $I20, rx1696_cstack
    unless $I20, rx1696_jump3963
    elements $I18, rx1696_bstack
    le $I18, 0, rx1696_cut3964
    dec $I18
    set $I18, rx1696_bstack[$I18]
  rx1696_cut3964:
    assign rx1696_cstack, $I18
  rx1696_jump3963:
    jump $I19
  rx1696_done3960:
    rx1696_cur."!cursor_fail"()
    .return (rx1696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_235_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1464
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1700_start
    .local string rx1700_tgt
    .local int rx1700_pos
    .local int rx1700_off
    .local int rx1700_eos
    .local int rx1700_rep
    .local pmc rx1700_cur
    .local pmc rx1700_curclass
    .local pmc rx1700_bstack
    .local pmc rx1700_cstack
    rx1700_start = self."!cursor_start_all"()
    set rx1700_cur, rx1700_start[0]
    set rx1700_tgt, rx1700_start[1]
    set rx1700_pos, rx1700_start[2]
    set rx1700_curclass, rx1700_start[3]
    set rx1700_bstack, rx1700_start[4]
    set $I19, rx1700_start[5]
    store_lex unicode:"$\x{a2}", rx1700_cur
    length rx1700_eos, rx1700_tgt
    eq $I19, 1, rx1700_restart3974
    gt rx1700_pos, rx1700_eos, rx1700_fail3975
    repr_get_attr_int $I11, self, rx1700_curclass, "$!from"
    ne $I11, -1, rxscan1701_done3981
    goto rxscan1701_scan3980
  rxscan1701_loop3979:
    inc rx1700_pos
    gt rx1700_pos, rx1700_eos, rx1700_fail3975
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!from", rx1700_pos
  rxscan1701_scan3980:
    nqp_rxmark rx1700_bstack, rxscan1701_loop3979, rx1700_pos, 0
  rxscan1701_done3981:
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!pos", rx1700_pos
    $P11 = rx1700_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1700_curclass, "$!pos"
    lt $I11, 0, rx1700_fail3975
    nqp_rxmark rx1700_bstack, rxsubrule1702_pass3982, -1, 0
  rxsubrule1702_pass3982:
    rx1700_cstack = rx1700_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1700_pos, $P11, rx1700_curclass, "$!pos"
    nqp_rxmark rx1700_bstack, rxquantr1703_done3984, rx1700_pos, 0
  rxquantr1703_loop3983:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1704_03986
    nqp_push_label $P11, alt1704_13987
    nqp_push_label $P11, alt1704_23989
    nqp_push_label $P11, alt1704_33991
    nqp_push_label $P11, alt1704_43993
    nqp_rxmark rx1700_bstack, alt1704_end3985, -1, 0
    rx1700_cur."!alt"(rx1700_pos, "alt_nfa__42_1381281833.01072", $P11)
    goto rx1700_fail3975
  alt1704_03986:
    ge rx1700_pos, rx1700_eos, rx1700_fail3975
    substr $S11, rx1700_tgt, rx1700_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1700_fail3975
    goto alt1704_end3985
  alt1704_13987:
    add $I11, rx1700_pos, 1
    gt $I11, rx1700_eos, rx1700_fail3975
    substr $S10, rx1700_tgt, rx1700_pos, 1
    ne $S10, ucs4:"=", rx1700_fail3975
    add rx1700_pos, 1
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!pos", rx1700_pos
    $P11 = rx1700_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1700_curclass, "$!pos"
    lt $I11, 0, rx1700_fail3975
    nqp_rxmark rx1700_bstack, rxsubrule1705_pass3988, -1, 0
  rxsubrule1705_pass3988:
    rx1700_cstack = rx1700_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1700_pos, $P11, rx1700_curclass, "$!pos"
    goto alt1704_end3985
  alt1704_23989:
    add $I11, rx1700_pos, 1
    gt $I11, rx1700_eos, rx1700_fail3975
    substr $S10, rx1700_tgt, rx1700_pos, 1
    ne $S10, ucs4:":", rx1700_fail3975
    add rx1700_pos, 1
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!pos", rx1700_pos
    $P11 = rx1700_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1700_curclass, "$!pos"
    lt $I11, 0, rx1700_fail3975
    nqp_rxmark rx1700_bstack, rxsubrule1706_pass3990, -1, 0
  rxsubrule1706_pass3990:
    rx1700_cstack = rx1700_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1700_pos, $P11, rx1700_curclass, "$!pos"
    goto alt1704_end3985
  alt1704_33991:
    add $I11, rx1700_pos, 1
    gt $I11, rx1700_eos, rx1700_fail3975
    substr $S10, rx1700_tgt, rx1700_pos, 1
    ne $S10, ucs4:"(", rx1700_fail3975
    add rx1700_pos, 1
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!pos", rx1700_pos
    $P11 = rx1700_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1700_curclass, "$!pos"
    lt $I11, 0, rx1700_fail3975
    nqp_rxmark rx1700_bstack, rxsubrule1707_pass3992, -1, 0
  rxsubrule1707_pass3992:
    rx1700_cstack = rx1700_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1700_pos, $P11, rx1700_curclass, "$!pos"
    add $I11, rx1700_pos, 1
    gt $I11, rx1700_eos, rx1700_fail3975
    substr $S10, rx1700_tgt, rx1700_pos, 1
    ne $S10, ucs4:")", rx1700_fail3975
    add rx1700_pos, 1
    goto alt1704_end3985
  alt1704_43993:
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!pos", rx1700_pos
    $P11 = rx1700_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1700_curclass, "$!pos"
    lt $I11, 0, rx1700_fail3975
    repr_get_attr_int rx1700_pos, $P11, rx1700_curclass, "$!pos"
    repr_bind_attr_int rx1700_cur, rx1700_curclass, "$!pos", rx1700_pos
    $P11 = rx1700_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1700_curclass, "$!pos"
    lt $I11, 0, rx1700_fail3975
    nqp_rxmark rx1700_bstack, rxsubrule1709_pass3995, -1, 0
  rxsubrule1709_pass3995:
    rx1700_cstack = rx1700_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1700_pos, $P11, rx1700_curclass, "$!pos"
    goto alt1704_end3985
  alt1704_end3985:
    nqp_rxpeek $I19, rx1700_bstack, rxquantr1703_done3984
    inc $I19
    inc $I19
    set rx1700_rep, rx1700_bstack[$I19]
    nqp_rxcommit rx1700_bstack, rxquantr1703_done3984
    inc rx1700_rep
  rxquantr1703_done3984:
    rx1700_cur."!cursor_pass"(rx1700_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1700_cur)
  rx1700_restart3974:
    repr_get_attr_obj rx1700_cstack, rx1700_cur, rx1700_curclass, "$!cstack"
  rx1700_fail3975:
    unless rx1700_bstack, rx1700_done3973
    pop $I19, rx1700_bstack
    if_null rx1700_cstack, rx1700_cstack_done3978
    unless rx1700_cstack, rx1700_cstack_done3978
    dec $I19
    set $P11, rx1700_cstack[$I19]
  rx1700_cstack_done3978:
    pop rx1700_rep, rx1700_bstack
    pop rx1700_pos, rx1700_bstack
    pop $I19, rx1700_bstack
    lt rx1700_pos, -1, rx1700_done3973
    lt rx1700_pos, 0, rx1700_fail3975
    eq $I19, 0, rx1700_fail3975
    nqp_islist $I20, rx1700_cstack
    unless $I20, rx1700_jump3976
    elements $I18, rx1700_bstack
    le $I18, 0, rx1700_cut3977
    dec $I18
    set $I18, rx1700_bstack[$I18]
  rx1700_cut3977:
    assign rx1700_cstack, $I18
  rx1700_jump3976:
    jump $I19
  rx1700_done3973:
    rx1700_cur."!cursor_fail"()
    .return (rx1700_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_236_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1475
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1710_start
    .local string rx1710_tgt
    .local int rx1710_pos
    .local int rx1710_off
    .local int rx1710_eos
    .local int rx1710_rep
    .local pmc rx1710_cur
    .local pmc rx1710_curclass
    .local pmc rx1710_bstack
    .local pmc rx1710_cstack
    rx1710_start = self."!cursor_start_all"()
    set rx1710_cur, rx1710_start[0]
    set rx1710_tgt, rx1710_start[1]
    set rx1710_pos, rx1710_start[2]
    set rx1710_curclass, rx1710_start[3]
    set rx1710_bstack, rx1710_start[4]
    set $I19, rx1710_start[5]
    store_lex unicode:"$\x{a2}", rx1710_cur
    length rx1710_eos, rx1710_tgt
    eq $I19, 1, rx1710_restart3998
    gt rx1710_pos, rx1710_eos, rx1710_fail3999
    repr_get_attr_int $I11, self, rx1710_curclass, "$!from"
    ne $I11, -1, rxscan1711_done4005
    goto rxscan1711_scan4004
  rxscan1711_loop4003:
    inc rx1710_pos
    gt rx1710_pos, rx1710_eos, rx1710_fail3999
    repr_bind_attr_int rx1710_cur, rx1710_curclass, "$!from", rx1710_pos
  rxscan1711_scan4004:
    nqp_rxmark rx1710_bstack, rxscan1711_loop4003, rx1710_pos, 0
  rxscan1711_done4005:
    ge rx1710_pos, rx1710_eos, rx1710_fail3999
    substr $S11, rx1710_tgt, rx1710_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1710_fail3999
    repr_bind_attr_int rx1710_cur, rx1710_curclass, "$!pos", rx1710_pos
    $P11 = rx1710_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1710_curclass, "$!pos"
    lt $I11, 0, rx1710_fail3999
    nqp_rxmark rx1710_bstack, rxsubrule1712_pass4006, -1, 0
  rxsubrule1712_pass4006:
    rx1710_cstack = rx1710_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1710_pos, $P11, rx1710_curclass, "$!pos"
    rx1710_cur."!cursor_pass"(rx1710_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1710_cur)
  rx1710_restart3998:
    repr_get_attr_obj rx1710_cstack, rx1710_cur, rx1710_curclass, "$!cstack"
  rx1710_fail3999:
    unless rx1710_bstack, rx1710_done3997
    pop $I19, rx1710_bstack
    if_null rx1710_cstack, rx1710_cstack_done4002
    unless rx1710_cstack, rx1710_cstack_done4002
    dec $I19
    set $P11, rx1710_cstack[$I19]
  rx1710_cstack_done4002:
    pop rx1710_rep, rx1710_bstack
    pop rx1710_pos, rx1710_bstack
    pop $I19, rx1710_bstack
    lt rx1710_pos, -1, rx1710_done3997
    lt rx1710_pos, 0, rx1710_fail3999
    eq $I19, 0, rx1710_fail3999
    nqp_islist $I20, rx1710_cstack
    unless $I20, rx1710_jump4000
    elements $I18, rx1710_bstack
    le $I18, 0, rx1710_cut4001
    dec $I18
    set $I18, rx1710_bstack[$I18]
  rx1710_cut4001:
    assign rx1710_cstack, $I18
  rx1710_jump4000:
    jump $I19
  rx1710_done3997:
    rx1710_cur."!cursor_fail"()
    .return (rx1710_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_237_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1479
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1713_start
    .local string rx1713_tgt
    .local int rx1713_pos
    .local int rx1713_off
    .local int rx1713_eos
    .local int rx1713_rep
    .local pmc rx1713_cur
    .local pmc rx1713_curclass
    .local pmc rx1713_bstack
    .local pmc rx1713_cstack
    rx1713_start = self."!cursor_start_all"()
    set rx1713_cur, rx1713_start[0]
    set rx1713_tgt, rx1713_start[1]
    set rx1713_pos, rx1713_start[2]
    set rx1713_curclass, rx1713_start[3]
    set rx1713_bstack, rx1713_start[4]
    set $I19, rx1713_start[5]
    store_lex unicode:"$\x{a2}", rx1713_cur
    length rx1713_eos, rx1713_tgt
    eq $I19, 1, rx1713_restart4009
    gt rx1713_pos, rx1713_eos, rx1713_fail4010
    repr_get_attr_int $I11, self, rx1713_curclass, "$!from"
    ne $I11, -1, rxscan1714_done4016
    goto rxscan1714_scan4015
  rxscan1714_loop4014:
    inc rx1713_pos
    gt rx1713_pos, rx1713_eos, rx1713_fail4010
    repr_bind_attr_int rx1713_cur, rx1713_curclass, "$!from", rx1713_pos
  rxscan1714_scan4015:
    nqp_rxmark rx1713_bstack, rxscan1714_loop4014, rx1713_pos, 0
  rxscan1714_done4016:
    repr_bind_attr_int rx1713_cur, rx1713_curclass, "$!pos", rx1713_pos
    $P11 = rx1713_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1713_curclass, "$!pos"
    lt $I11, 0, rx1713_fail4010
    nqp_rxmark rx1713_bstack, rxsubrule1715_pass4017, -1, 0
  rxsubrule1715_pass4017:
    rx1713_cstack = rx1713_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1713_pos, $P11, rx1713_curclass, "$!pos"
    rx1713_cur."!cursor_pass"(rx1713_pos, "codeblock", 'backtrack'=>1)
    .return (rx1713_cur)
  rx1713_restart4009:
    repr_get_attr_obj rx1713_cstack, rx1713_cur, rx1713_curclass, "$!cstack"
  rx1713_fail4010:
    unless rx1713_bstack, rx1713_done4008
    pop $I19, rx1713_bstack
    if_null rx1713_cstack, rx1713_cstack_done4013
    unless rx1713_cstack, rx1713_cstack_done4013
    dec $I19
    set $P11, rx1713_cstack[$I19]
  rx1713_cstack_done4013:
    pop rx1713_rep, rx1713_bstack
    pop rx1713_pos, rx1713_bstack
    pop $I19, rx1713_bstack
    lt rx1713_pos, -1, rx1713_done4008
    lt rx1713_pos, 0, rx1713_fail4010
    eq $I19, 0, rx1713_fail4010
    nqp_islist $I20, rx1713_cstack
    unless $I20, rx1713_jump4011
    elements $I18, rx1713_bstack
    le $I18, 0, rx1713_cut4012
    dec $I18
    set $I18, rx1713_bstack[$I18]
  rx1713_cut4012:
    assign rx1713_cstack, $I18
  rx1713_jump4011:
    jump $I19
  rx1713_done4008:
    rx1713_cur."!cursor_fail"()
    .return (rx1713_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_238_1381281828.51527") :anon :lex :outer("cuid_418_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1483
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1716_start
    .local string rx1716_tgt
    .local int rx1716_pos
    .local int rx1716_off
    .local int rx1716_eos
    .local int rx1716_rep
    .local pmc rx1716_cur
    .local pmc rx1716_curclass
    .local pmc rx1716_bstack
    .local pmc rx1716_cstack
    rx1716_start = self."!cursor_start_all"()
    set rx1716_cur, rx1716_start[0]
    set rx1716_tgt, rx1716_start[1]
    set rx1716_pos, rx1716_start[2]
    set rx1716_curclass, rx1716_start[3]
    set rx1716_bstack, rx1716_start[4]
    set $I19, rx1716_start[5]
    store_lex unicode:"$\x{a2}", rx1716_cur
    length rx1716_eos, rx1716_tgt
    eq $I19, 1, rx1716_restart4020
    gt rx1716_pos, rx1716_eos, rx1716_fail4021
    repr_get_attr_int $I11, self, rx1716_curclass, "$!from"
    ne $I11, -1, rxscan1717_done4027
    goto rxscan1717_scan4026
  rxscan1717_loop4025:
    inc rx1716_pos
    gt rx1716_pos, rx1716_eos, rx1716_fail4021
    repr_bind_attr_int rx1716_cur, rx1716_curclass, "$!from", rx1716_pos
  rxscan1717_scan4026:
    nqp_rxmark rx1716_bstack, rxscan1717_loop4025, rx1716_pos, 0
  rxscan1717_done4027:
    repr_bind_attr_int rx1716_cur, rx1716_curclass, "$!pos", rx1716_pos
    $P11 = rx1716_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1716_curclass, "$!pos"
    lt $I11, 0, rx1716_fail4021
    nqp_rxmark rx1716_bstack, rxsubrule1718_pass4028, -1, 0
  rxsubrule1718_pass4028:
    rx1716_cstack = rx1716_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1716_pos, $P11, rx1716_curclass, "$!pos"
    rx1716_cur."!cursor_pass"(rx1716_pos, "arg", 'backtrack'=>1)
    .return (rx1716_cur)
  rx1716_restart4020:
    repr_get_attr_obj rx1716_cstack, rx1716_cur, rx1716_curclass, "$!cstack"
  rx1716_fail4021:
    unless rx1716_bstack, rx1716_done4019
    pop $I19, rx1716_bstack
    if_null rx1716_cstack, rx1716_cstack_done4024
    unless rx1716_cstack, rx1716_cstack_done4024
    dec $I19
    set $P11, rx1716_cstack[$I19]
  rx1716_cstack_done4024:
    pop rx1716_rep, rx1716_bstack
    pop rx1716_pos, rx1716_bstack
    pop $I19, rx1716_bstack
    lt rx1716_pos, -1, rx1716_done4019
    lt rx1716_pos, 0, rx1716_fail4021
    eq $I19, 0, rx1716_fail4021
    nqp_islist $I20, rx1716_cstack
    unless $I20, rx1716_jump4022
    elements $I18, rx1716_bstack
    le $I18, 0, rx1716_cut4023
    dec $I18
    set $I18, rx1716_bstack[$I18]
  rx1716_cut4023:
    assign rx1716_cstack, $I18
  rx1716_jump4022:
    jump $I19
  rx1716_done4019:
    rx1716_cur."!cursor_fail"()
    .return (rx1716_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1492
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_186 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set fb_tmp_186, _lex_param_1
    repr_defined $I5001, fb_tmp_186
    unless $I5001 goto if1719_else4029 
    set $P5002, fb_tmp_186[0]
    set $P5004, $P5002
    goto if1719_end4030
  if1719_else4029:
    null $P5003
    set $P5004, $P5003
  if1719_end4030:
    unless_null $P5004, vivi_17204031
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_17204031:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1721_end4033 
.annotate 'line', 1494
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless1721_end4033:
.annotate 'line', 1497
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1500
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1503
    nqp_get_sc_object $P5010, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1507
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_187 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    set fb_tmp_187, _lex_param_1
    repr_defined $I5001, fb_tmp_187
    unless $I5001 goto if1722_else4034 
    set $P5002, fb_tmp_187[0]
    set $P5004, $P5002
    goto if1722_end4035
  if1722_else4034:
    null $P5003
    set $P5004, $P5003
  if1722_end4035:
    unless_null $P5004, vivi_17234036
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_17234036:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1724_end4038 
.annotate 'line', 1509
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless1724_end4038:
.annotate 'line', 1512
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1515
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1518
    nqp_get_sc_object $P5010, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1522
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_188 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set fb_tmp_188, _lex_param_1
    repr_defined $I5001, fb_tmp_188
    unless $I5001 goto if1725_else4039 
    set $P5003, fb_tmp_188[0]
    set $P5005, $P5003
    goto if1725_end4040
  if1725_else4039:
    null $P5004
    set $P5005, $P5004
  if1725_end4040:
    unless_null $P5005, vivi_17264041
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_17264041:
    set $P101, $P5005
.annotate 'line', 1524
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1727_end4043 
.annotate 'line', 1525
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless1727_end4043:
.annotate 'line', 1528
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 103
.annotate 'line', 1530
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1532
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 1535
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1538
    nqp_get_sc_object $P5018, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1540
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 1541
    nqp_get_sc_object $P5022, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1546
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_189 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set fb_tmp_189, _lex_param_1
    repr_defined $I5001, fb_tmp_189
    unless $I5001 goto if1728_else4044 
    set $P5003, fb_tmp_189[0]
    set $P5005, $P5003
    goto if1728_end4045
  if1728_else4044:
    null $P5004
    set $P5005, $P5004
  if1728_end4045:
    unless_null $P5005, vivi_17294046
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_17294046:
    set $P101, $P5005
.annotate 'line', 1548
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1730_end4048 
.annotate 'line', 1549
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless1730_end4048:
.annotate 'line', 1552
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 103
.annotate 'line', 1554
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1556
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 1559
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1562
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1564
    nqp_get_sc_object $P5018, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1565
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1570
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_190 
.annotate 'line', 1571
    set fb_tmp_190, _lex_param_1
    repr_defined $I5001, fb_tmp_190
    unless $I5001 goto if1731_else4049 
    set $P5001, fb_tmp_190[0]
    set $P5003, $P5001
    goto if1731_end4050
  if1731_else4049:
    null $P5002
    set $P5003, $P5002
  if1731_end4050:
    unless_null $P5003, vivi_17324051
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  vivi_17324051:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1574
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_191 
.annotate 'line', 1575
    set fb_tmp_191, _lex_param_1
    repr_defined $I5001, fb_tmp_191
    unless $I5001 goto if1733_else4052 
    set $P5001, fb_tmp_191[0]
    set $P5003, $P5001
    goto if1733_end4053
  if1733_else4052:
    null $P5002
    set $P5003, $P5002
  if1733_end4053:
    unless_null $P5003, vivi_17344054
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  vivi_17344054:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1578
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 1579
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4055
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5005, $P5006
    set fb_tmp_192, $P5005
    repr_defined $I5001, fb_tmp_192
    unless $I5001 goto if1735_else4056 
    set $P5007, fb_tmp_192["$REGALLOC"]
    set $P5009, $P5007
    goto if1735_end4057
  if1735_else4056:
    null $P5008
    set $P5009, $P5008
  if1735_end4057:
    unless_null $P5009, vivi_17364058
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_17364058:
    unless_null $P5009, vivi_17374059
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_17374059:
    set $P5004, $P5009
  fallback4055:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1580
    nqp_get_sc_object $P5013, "96F80A66F2271DAB0F3CD1D5EC903FD7ED58994D-1381281801.12832", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 1581
    set fb_tmp_193, _lex_param_1
    repr_defined $I5002, fb_tmp_193
    unless $I5002 goto if1738_else4060 
    set $P5015, fb_tmp_193[0]
    set $P5017, $P5015
    goto if1738_end4061
  if1738_else4060:
    null $P5016
    set $P5017, $P5016
  if1738_end4061:
    unless_null $P5017, vivi_17394062
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_17394062:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 1582
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if1740_else4063 
.annotate 'line', 1583
    $P102."push"($P103)
.annotate 'line', 1584
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if1740_end4064
  if1740_else4063:
.annotate 'line', 1586
.annotate 'line', 1587
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 1588
    $P102."push"($P103)
.annotate 'line', 1589
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1740_end4064:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1595
    .const 'Sub' $P5124 = 'cuid_427_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_430_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_433_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_434_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_437_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_439_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_441_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_443_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_444_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_450_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_239_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_240_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_241_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_242_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_243_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_244_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_245_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_246_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_247_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1381281828.51527' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1381281828.51527' 
    capture_lex $P5124 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "&xblock_immediate", $P103 
    .lex "&block_immediate", $P104 
    .lex "&default_for", $P105 
    .lex "&default_value_for_prim", $P106 
    .lex "&colonpair_str", $P107 
    .lex "&import_HOW_exports", $P108 
    .lex "&set_block_handler", $P109 
    .lex "&only_star_block", $P110 
    .lex "&attach_multi_signature", $P111 
    .lex "&wrap_return_handler", $P112 
    .lex "&lexical_package_lookup", $P113 
    .const 'Sub' $P5001 = 'cuid_427_1381281828.51527' 
    capture_lex $P5001
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_430_1381281828.51527' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_433_1381281828.51527' 
    capture_lex $P5003
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_434_1381281828.51527' 
    capture_lex $P5004
    set $P106, $P5004
    .const 'Sub' $P5005 = 'cuid_437_1381281828.51527' 
    capture_lex $P5005
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_439_1381281828.51527' 
    capture_lex $P5006
    set $P108, $P5006
    .const 'Sub' $P5007 = 'cuid_440_1381281828.51527' 
    capture_lex $P5007
    set $P109, $P5007
    .const 'Sub' $P5008 = 'cuid_441_1381281828.51527' 
    capture_lex $P5008
    set $P110, $P5008
    .const 'Sub' $P5009 = 'cuid_443_1381281828.51527' 
    capture_lex $P5009
    set $P111, $P5009
    .const 'Sub' $P5010 = 'cuid_444_1381281828.51527' 
    capture_lex $P5010
    set $P112, $P5010
    .const 'Sub' $P5011 = 'cuid_450_1381281828.51527' 
    capture_lex $P5011
    set $P113, $P5011
    .const 'Sub' $P5012 = 'cuid_239_1381281828.51527' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_240_1381281828.51527' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_241_1381281828.51527' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_242_1381281828.51527' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_243_1381281828.51527' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_244_1381281828.51527' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_245_1381281828.51527' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_246_1381281828.51527' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_247_1381281828.51527' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_248_1381281828.51527' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_249_1381281828.51527' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_250_1381281828.51527' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_251_1381281828.51527' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_252_1381281828.51527' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_253_1381281828.51527' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_254_1381281828.51527' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_255_1381281828.51527' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_256_1381281828.51527' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_257_1381281828.51527' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_258_1381281828.51527' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_259_1381281828.51527' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_260_1381281828.51527' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_261_1381281828.51527' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_262_1381281828.51527' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_263_1381281828.51527' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_264_1381281828.51527' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_265_1381281828.51527' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_266_1381281828.51527' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_267_1381281828.51527' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_268_1381281828.51527' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_269_1381281828.51527' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_270_1381281828.51527' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_271_1381281828.51527' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_272_1381281828.51527' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_273_1381281828.51527' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_274_1381281828.51527' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_275_1381281828.51527' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_276_1381281828.51527' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_277_1381281828.51527' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_278_1381281828.51527' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_279_1381281828.51527' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_280_1381281828.51527' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_281_1381281828.51527' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_282_1381281828.51527' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_283_1381281828.51527' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_284_1381281828.51527' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_285_1381281828.51527' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_286_1381281828.51527' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_287_1381281828.51527' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_288_1381281828.51527' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_289_1381281828.51527' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_290_1381281828.51527' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_291_1381281828.51527' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_292_1381281828.51527' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_293_1381281828.51527' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_294_1381281828.51527' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_295_1381281828.51527' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_296_1381281828.51527' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_297_1381281828.51527' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_298_1381281828.51527' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_299_1381281828.51527' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_300_1381281828.51527' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_301_1381281828.51527' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_302_1381281828.51527' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_303_1381281828.51527' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_304_1381281828.51527' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_305_1381281828.51527' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_306_1381281828.51527' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_307_1381281828.51527' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_308_1381281828.51527' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_309_1381281828.51527' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_310_1381281828.51527' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_311_1381281828.51527' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_312_1381281828.51527' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_313_1381281828.51527' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_314_1381281828.51527' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_315_1381281828.51527' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_316_1381281828.51527' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_317_1381281828.51527' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_318_1381281828.51527' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_319_1381281828.51527' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_320_1381281828.51527' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_321_1381281828.51527' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_322_1381281828.51527' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_323_1381281828.51527' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_324_1381281828.51527' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_325_1381281828.51527' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_326_1381281828.51527' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_327_1381281828.51527' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_328_1381281828.51527' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_329_1381281828.51527' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_330_1381281828.51527' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_331_1381281828.51527' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_332_1381281828.51527' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_333_1381281828.51527' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_334_1381281828.51527' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_335_1381281828.51527' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_336_1381281828.51527' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_337_1381281828.51527' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_338_1381281828.51527' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_339_1381281828.51527' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_340_1381281828.51527' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_341_1381281828.51527' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_342_1381281828.51527' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_343_1381281828.51527' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_344_1381281828.51527' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_345_1381281828.51527' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_346_1381281828.51527' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_347_1381281828.51527' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_348_1381281828.51527' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_349_1381281828.51527' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_350_1381281828.51527' 
    capture_lex $P5123
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_427_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1596
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_194 
.annotate 'line', 1597
    set fb_tmp_194, _lex_param_0
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if1741_else4065 
    set $P5001, fb_tmp_194[1]
    set $P5003, $P5001
    goto if1741_end4066
  if1741_else4065:
    null $P5002
    set $P5003, $P5002
  if1741_end4066:
    unless_null $P5003, vivi_17424067
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  vivi_17424067:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_430_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1601
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_429_1381281828.51527' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1602
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1603
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1743_end4069 
    .const 'Sub' $P5002 = 'cuid_429_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1743_end4069:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1381281828.51527") :anon :lex :outer("cuid_430_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1603
    .const 'Sub' $P5013 = 'cuid_428_1381281828.51527' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1604
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1605
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4070:
    unless $P5008, for_done4072
    shift $P5012, $P5008
  for_redo4071:
    .const 'Sub' $P5011 = 'cuid_428_1381281828.51527' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4070
  for_done4072:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1381281828.51527") :anon :lex :outer("cuid_429_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1605
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_433_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1611
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_432_1381281828.51527' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1744_else4073 
.annotate 'line', 1612
.annotate 'line', 1613
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1744_end4074
  if1744_else4073:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1745_else4075 
.annotate 'line', 1615
.annotate 'line', 1616
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1745_end4076
  if1745_else4075:
    .const 'Sub' $P5005 = 'cuid_432_1381281828.51527' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1745_end4076:
    set $P5008, $P5007
  if1744_end4074:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1381281828.51527") :anon :lex :outer("cuid_433_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1618
    .const 'Sub' $P5020 = 'cuid_431_1381281828.51527' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_195 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17524085
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1620
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17504083
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1621
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4077
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_195, $P5004
    repr_defined $I5001, fb_tmp_195
    unless $I5001 goto if1746_else4078 
    set $P5006, fb_tmp_195["$W"]
    set $P5008, $P5006
    goto if1746_end4079
  if1746_else4078:
    null $P5007
    set $P5008, $P5007
  if1746_end4079:
    unless_null $P5008, vivi_17474080
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_17474080:
    unless_null $P5008, vivi_17484081
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17484081:
    set $P5003, $P5008
  fallback4077:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17494082
  catch_handler_17504083:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_431_1381281828.51527' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17494082
  skip_handler_17494082:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17514084
  catch_handler_17524085:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17514084
  skip_handler_17514084:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1381281828.51527") :anon :lex :outer("cuid_432_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1622
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_434_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1628
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1753_else4086 
.annotate 'line', 1629
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1753_end4087
  if1753_else4086:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1754_else4088 
.annotate 'line', 1630
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 49
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1754_end4089
  if1754_else4088:
.annotate 'line', 1631
    nqp_get_sc_object $P5005, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1754_end4089:
    set $P5008, $P5007
  if1753_end4087:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_437_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1643
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_436_1381281828.51527' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1755_else4090 
    .const 'Sub' $P5002 = 'cuid_436_1381281828.51527' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1755_end4091
  if1755_else4090:
.annotate 'line', 1648
.annotate 'line', 1649
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1755_end4091:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1381281828.51527") :anon :lex :outer("cuid_437_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1644
    .const 'Sub' $P5010 = 'cuid_435_1381281828.51527' 
    capture_lex $P5010 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1646
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4092:
    unless $P5004, for_done4094
    shift $P5008, $P5004
  for_redo4093:
    .const 'Sub' $P5007 = 'cuid_435_1381281828.51527' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4092
  for_done4094:
.annotate 'line', 1647
    $P5009 = "&join"(" ", $P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1381281828.51527") :anon :lex :outer("cuid_436_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1646
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_439_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1835
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_438_1381281828.51527' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_196 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1756_end4096 
.annotate 'line', 1837
    set fb_tmp_196, _lex_param_0
    repr_defined $I5002, fb_tmp_196
    unless $I5002 goto if1757_else4097 
    set $P5005, fb_tmp_196["EXPORTHOW"]
    set $P5007, $P5005
    goto if1757_end4098
  if1757_else4097:
    null $P5006
    set $P5007, $P5006
  if1757_end4098:
    unless_null $P5007, vivi_17584099
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_17584099:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4105:
    unless $P5003, for_done4107
    shift $P5010, $P5003
  for_redo4106:
    .const 'Sub' $P5009 = 'cuid_438_1381281828.51527' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4105
  for_done4107:
    set $P5011, $P5001
  if1756_end4096:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_438_1381281828.51527") :anon :lex :outer("cuid_439_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1838
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_197 
    .local pmc pkg_viv_tmp_42 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4100
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_42, $P5002
    set fb_tmp_197, pkg_viv_tmp_42
    repr_defined $I5001, fb_tmp_197
    unless $I5001 goto if1759_else4101 
    set $P5004, fb_tmp_197["%HOW"]
    set $P5006, $P5004
    goto if1759_end4102
  if1759_else4101:
    null $P5005
    set $P5006, $P5005
  if1759_end4102:
    unless_null $P5006, vivi_17604103
    new $P5007, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17604103:
    unless_null $P5006, vivi_17614104
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17614104:
    set $P5001, $P5006
  fallback4100:
.annotate 'line', 1839
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_440_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1937
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_198 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_199 
    .local pmc pkg_viv_tmp_44 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4110
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_43, $P5002
    set fb_tmp_198, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_198
    unless $I5002 goto if1763_else4111 
    set $P5004, fb_tmp_198["%HANDLERS"]
    set $P5006, $P5004
    goto if1763_end4112
  if1763_else4111:
    null $P5005
    set $P5006, $P5005
  if1763_end4112:
    unless_null $P5006, vivi_17644113
    new $P5007, 'Hash'
    set pkg_viv_tmp_43["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17644113:
    unless_null $P5006, vivi_17654114
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17654114:
    set $P5001, $P5006
  fallback4110:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1762_end4109 
.annotate 'line', 1938
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1762_end4109:
.annotate 'line', 1941
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1766_end4116 
.annotate 'line', 1942
.annotate 'line', 1943
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1944
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1945
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 1948
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 1949
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1950
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1951
    $P5019 = _lex_param_1."arity"(1)
  unless1766_end4116:
.annotate 'line', 1953
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4117
    nqp_get_sc_object $P5022, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_44, $P5021
    set fb_tmp_199, pkg_viv_tmp_44
    repr_defined $I5003, fb_tmp_199
    unless $I5003 goto if1767_else4118 
    set $P5023, fb_tmp_199["%HANDLERS"]
    set $P5025, $P5023
    goto if1767_end4119
  if1767_else4118:
    null $P5024
    set $P5025, $P5024
  if1767_end4119:
    unless_null $P5025, vivi_17684120
    new $P5026, 'Hash'
    set pkg_viv_tmp_44["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17684120:
    unless_null $P5025, vivi_17694121
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17694121:
    set $P5020, $P5025
  fallback4117:
    set $S5005, _lex_param_2
.annotate 'line', 1954
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 1955
    nqp_get_sc_object $P5029, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1957
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 1959
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
.annotate 'line', 1960
    nqp_get_sc_object $P5034, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1962
    nqp_get_sc_object $P5035, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 1963
    nqp_get_sc_object $P5037, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 1964
    nqp_get_sc_object $P5039, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 1966
    nqp_get_sc_object $P5042, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5043 = $P5042."new"("null" :named("op"))
.annotate 'line', 1967
    nqp_get_sc_object $P5044, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5045 = $P5044."new"("null" :named("op"))
    $P5046 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"), $P5045 :named("moar"))
.annotate 'line', 1969
    $P5047 = "&default_for"("$")
    $P5048 = $P5028."new"($P5032, $P5046, $P5047)
    set $P5020[$S5005], $P5048
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_441_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2618
    .lex "$past", $P101 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2619
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4122
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_200, $P5003
    repr_defined $I5001, fb_tmp_200
    unless $I5001 goto if1770_else4123 
    set $P5005, fb_tmp_200["$W"]
    set $P5007, $P5005
    goto if1770_end4124
  if1770_else4123:
    null $P5006
    set $P5007, $P5006
  if1770_end4124:
    unless_null $P5007, vivi_17714125
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_17714125:
    unless_null $P5007, vivi_17724126
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17724126:
    set $P5002, $P5007
  fallback4122:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2620
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2622
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2624
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2626
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
.annotate 'line', 2628
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2629
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4127
    nqp_get_sc_object $P5022, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5021, $P5022
    set fb_tmp_201, $P5021
    repr_defined $I5002, fb_tmp_201
    unless $I5002 goto if1773_else4128 
    set $P5023, fb_tmp_201["$W"]
    set $P5025, $P5023
    goto if1773_end4129
  if1773_else4128:
    null $P5024
    set $P5025, $P5024
  if1773_end4129:
    unless_null $P5025, vivi_17744130
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_17744130:
    unless_null $P5025, vivi_17754131
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17754131:
    set $P5020, $P5025
  fallback4127:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2631
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2633
    nqp_get_sc_object $P5036, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2635
    nqp_get_sc_object $P5037, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5038, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2636
    nqp_get_sc_object $P5041, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5042 = $P5041."new"("savecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2639
    nqp_get_sc_object $P5045, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_443_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2644
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_442_1381281828.51527' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_205 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_202, _lex_param_1
    repr_defined $I5001, fb_tmp_202
    unless $I5001 goto if1776_else4132 
    set $P5008, fb_tmp_202[0]
    set $P5010, $P5008
    goto if1776_end4133
  if1776_else4132:
    null $P5009
    set $P5010, $P5009
  if1776_end4133:
    unless_null $P5010, vivi_17774134
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_17774134:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4153:
    unless $P5007, for_done4155
    shift $P5014, $P5007
  for_redo4154:
    .const 'Sub' $P5013 = 'cuid_442_1381281828.51527' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4153
  for_done4155:
.annotate 'line', 2656
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4156
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5016, $P5017
    set fb_tmp_205, $P5016
    repr_defined $I5002, fb_tmp_205
    unless $I5002 goto if1788_else4157 
    set $P5018, fb_tmp_205["$W"]
    set $P5020, $P5018
    goto if1788_end4158
  if1788_else4157:
    null $P5019
    set $P5020, $P5019
  if1788_end4158:
    unless_null $P5020, vivi_17894159
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_17894159:
    unless_null $P5020, vivi_17904160
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_17904160:
    set $P5015, $P5020
  fallback4156:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1381281828.51527") :anon :lex :outer("cuid_443_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2647
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1780_end4140 
.annotate 'line', 2648
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1780_end4140:
    set $I5005, $I5003
    unless $I5003 goto if1779_end4138 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1779_end4138:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1778_end4136 
.annotate 'line', 2649
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1781_else4141 
    null $P5007
    set $P5009, $P5007
    goto if1781_end4142
  if1781_else4141:
.annotate 'line', 2651
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1781_end4142:
    $P5004."push"($P5009)
.annotate 'line', 2652
    find_lex $P5010, "$definednesses"
    set fb_tmp_203, _lex_param_0
    repr_defined $I5010, fb_tmp_203
    unless $I5010 goto if1783_else4145 
    set $P5011, fb_tmp_203["definedness"]
    set $P5013, $P5011
    goto if1783_end4146
  if1783_else4145:
    null $P5012
    set $P5013, $P5012
  if1783_end4146:
    unless_null $P5013, vivi_17844147
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_17844147:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1782_else4143 
    set $I5014, 1
    goto if1782_end4144
  if1782_else4143:
    set fb_tmp_204, _lex_param_0
    repr_defined $I5012, fb_tmp_204
    unless $I5012 goto if1786_else4150 
    set $P5015, fb_tmp_204["definedness"]
    set $P5017, $P5015
    goto if1786_end4151
  if1786_else4150:
    null $P5016
    set $P5017, $P5016
  if1786_end4151:
    unless_null $P5017, vivi_17874152
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_17874152:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1785_else4148 
    set $I5013, 2
    goto if1785_end4149
  if1785_else4148:
    set $I5013, 0
  if1785_end4149:
    set $I5014, $I5013
  if1782_end4144:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1778_end4136:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_444_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2659
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2660
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_450_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3179
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_447_1381281828.51527' 
    capture_lex $P5037 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_206 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4161
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1791_end4164 
.annotate 'line', 3181
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1791_end4164:
.annotate 'line', 3185
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3186
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 84
.annotate 'line', 3188
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1792_else4165 
.annotate 'line', 3193
.annotate 'line', 3194
    nqp_get_sc_object $P5010, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3196
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3198
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3200
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3202
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3204
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4167
    nqp_get_sc_object $P5020, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5019, $P5020
    set fb_tmp_206, $P5019
    repr_defined $I5003, fb_tmp_206
    unless $I5003 goto if1793_else4168 
    set $P5021, fb_tmp_206["$GLOBALish"]
    set $P5023, $P5021
    goto if1793_end4169
  if1793_else4168:
    null $P5022
    set $P5023, $P5022
  if1793_end4169:
    unless_null $P5023, vivi_17944170
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_17944170:
    unless_null $P5023, vivi_17954171
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_17954171:
    set $P5018, $P5023
  fallback4167:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3206
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3208
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1792_end4166
  if1792_else4165:
    .const 'Sub' $P5034 = 'cuid_447_1381281828.51527' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1792_end4166:
    $P5036 = "RETURN"($P102)
    goto lexotic_4162
  lexotic_4161:
    .get_results ($P5036)
  lexotic_4162:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1381281828.51527") :anon :lex :outer("cuid_450_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3214
    .const 'Sub' $P5053 = 'cuid_446_1381281828.51527' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_448_1381281828.51527' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_449_1381281828.51527' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 3216
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4174
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_207, $P5004
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if1797_else4175 
    set $P5006, fb_tmp_207["$W"]
    set $P5008, $P5006
    goto if1797_end4176
  if1797_else4175:
    null $P5007
    set $P5008, $P5007
  if1797_end4176:
    unless_null $P5008, vivi_17984177
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_17984177:
    unless_null $P5008, vivi_17994178
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17994178:
    set $P5003, $P5008
  fallback4174:
    find_lex $P5011, "@name"
    set fb_tmp_208, $P5011
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if1800_else4179 
    set $P5012, fb_tmp_208[0]
    set $P5014, $P5012
    goto if1800_end4180
  if1800_else4179:
    null $P5013
    set $P5014, $P5013
  if1800_end4180:
    unless_null $P5014, vivi_18014181
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_18014181:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1796_else4172 
    .const 'Sub' $P5017 = 'cuid_446_1381281828.51527' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1796_end4173
  if1796_else4172:
.annotate 'line', 3225
.annotate 'line', 3226
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4189
    nqp_get_sc_object $P5022, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5021, $P5022
    set fb_tmp_210, $P5021
    repr_defined $I5003, fb_tmp_210
    unless $I5003 goto if1807_else4190 
    set $P5023, fb_tmp_210["$GLOBALish"]
    set $P5025, $P5023
    goto if1807_end4191
  if1807_else4190:
    null $P5024
    set $P5025, $P5024
  if1807_end4191:
    unless_null $P5025, vivi_18084192
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_18084192:
    unless_null $P5025, vivi_18094193
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_18094193:
    set $P5020, $P5025
  fallback4189:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1796_end4173:
    find_lex $P5029, "@name"
    set fb_tmp_211, $P5029
    repr_defined $I5005, fb_tmp_211
    unless $I5005 goto if1811_else4196 
    set $P5030, fb_tmp_211[0]
    set $P5032, $P5030
    goto if1811_end4197
  if1811_else4196:
    null $P5031
    set $P5032, $P5031
  if1811_end4197:
    unless_null $P5032, vivi_18124198
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5032, $P5033
  vivi_18124198:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1810_end4195 
.annotate 'line', 3228
.annotate 'line', 3229
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1810_end4195:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4199:
    unless $P5038, for_done4201
    shift $P5041, $P5038
  for_redo4200:
    .const 'Sub' $P5040 = 'cuid_448_1381281828.51527' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4199
  for_done4201:
.annotate 'line', 3255
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1814_end4205 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1814_end4205:
    unless $I5008 goto if1813_else4202 
    .const 'Sub' $P5047 = 'cuid_449_1381281828.51527' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1813_end4203
  if1813_else4202:
.annotate 'line', 3270
.annotate 'line', 3271
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1813_end4203:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1381281828.51527") :anon :lex :outer("cuid_447_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3217
    .const 'Sub' $P5019 = 'cuid_445_1381281828.51527' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_209 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_18064188
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3218
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3219
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4182
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5006, $P5007
    set fb_tmp_209, $P5006
    repr_defined $I5001, fb_tmp_209
    unless $I5001 goto if1802_else4183 
    set $P5008, fb_tmp_209["$W"]
    set $P5010, $P5008
    goto if1802_end4184
  if1802_else4183:
    null $P5009
    set $P5010, $P5009
  if1802_end4184:
    unless_null $P5010, vivi_18034185
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_18034185:
    unless_null $P5010, vivi_18044186
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_18044186:
    set $P5005, $P5010
  fallback4182:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_18054187
  catch_handler_18064188:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_445_1381281828.51527' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_18054187
  skip_handler_18054187:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1381281828.51527") :anon :lex :outer("cuid_446_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3220
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3221
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1381281828.51527") :anon :lex :outer("cuid_447_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3231
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3232
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3233
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 3234
    nqp_get_sc_object $P5005, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3236
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3239
    nqp_get_sc_object $P5010, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3241
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3243
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3244
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3246
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3248
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5021, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3249
    nqp_get_sc_object $P5024, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3251
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
.annotate 'line', 3253
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    find_lex $P5031, "$path"
    $P5032 = $P5030."new"($P5031, $P101, "locallifetime" :named("op"))
    store_lex "$path", $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1381281828.51527") :anon :lex :outer("cuid_447_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3257
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3258
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3259
    nqp_get_sc_object $P5005, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3261
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_212, $P5008
    repr_defined $I5001, fb_tmp_212
    unless $I5001 goto if1815_else4206 
    set $P5009, fb_tmp_212[0]
    set $P5011, $P5009
    goto if1815_end4207
  if1815_else4206:
    null $P5010
    set $P5011, $P5010
  if1815_end4207:
    unless_null $P5011, vivi_18164208
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_18164208:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3263
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3265
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_213, $P5018
    repr_defined $I5002, fb_tmp_213
    unless $I5002 goto if1817_else4209 
    set $P5019, fb_tmp_213[1]
    set $P5021, $P5019
    goto if1817_end4210
  if1817_else4209:
    null $P5020
    set $P5021, $P5020
  if1817_end4210:
    unless_null $P5021, vivi_18184211
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_18184211:
.annotate 'line', 3267
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_239_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1634
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_214 
    unless_null _lex_param_1, fallback4214
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4214:
    set fb_tmp_214, _lex_param_1
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if1819_else4212 
    set $P5002, fb_tmp_214["comp_unit"]
    set $P5004, $P5002
    goto if1819_end4213
  if1819_else4212:
    null $P5003
    set $P5004, $P5003
  if1819_end4213:
    unless_null $P5004, vivi_18204215
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_18204215:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_240_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1636
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
.annotate 'line', 1637
    unless_null _lex_param_1, fallback4220
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4220:
    set fb_tmp_215, _lex_param_1
    repr_defined $I5001, fb_tmp_215
    unless $I5001 goto if1822_else4218 
    set $P5002, fb_tmp_215["colonpair"]
    set $P5004, $P5002
    goto if1822_end4219
  if1822_else4218:
    null $P5003
    set $P5004, $P5003
  if1822_end4219:
    unless_null $P5004, vivi_18234221
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_18234221:
    unless $P5004 goto if1821_else4216 
    unless_null _lex_param_1, fallback4224
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback4224:
    set fb_tmp_216, _lex_param_1
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if1824_else4222 
    set $P5007, fb_tmp_216["identifier"]
    set $P5009, $P5007
    goto if1824_end4223
  if1824_else4222:
    null $P5008
    set $P5009, $P5008
  if1824_end4223:
    unless_null $P5009, vivi_18254225
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_18254225:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1638
    unless_null _lex_param_1, fallback4228
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5011
  fallback4228:
    set fb_tmp_217, _lex_param_1
    repr_defined $I5003, fb_tmp_217
    unless $I5003 goto if1826_else4226 
    set $P5012, fb_tmp_217["colonpair"]
    set $P5014, $P5012
    goto if1826_end4227
  if1826_else4226:
    null $P5013
    set $P5014, $P5013
  if1826_end4227:
    unless_null $P5014, vivi_18274229
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_18274229:
    $P5016 = $P5014."ast"()
    $P5017 = $P5016."named"()
    set $S5007, $P5017
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1639
    unless_null _lex_param_1, fallback4232
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5018
  fallback4232:
    set fb_tmp_218, _lex_param_1
    repr_defined $I5004, fb_tmp_218
    unless $I5004 goto if1828_else4230 
    set $P5019, fb_tmp_218["colonpair"]
    set $P5021, $P5019
    goto if1828_end4231
  if1828_else4230:
    null $P5020
    set $P5021, $P5020
  if1828_end4231:
    unless_null $P5021, vivi_18294233
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_18294233:
    $P5023 = $P5021."ast"()
    $P5024 = "&colonpair_str"($P5023)
    set $S5008, $P5024
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1821_end4217
  if1821_else4216:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1821_end4217:
    $P5025 = _lex_param_1."!make"($S5010)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_241_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1653
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 1654
    unless_null _lex_param_1, fallback4236
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5004
  fallback4236:
    set fb_tmp_219, _lex_param_1
    repr_defined $I5001, fb_tmp_219
    unless $I5001 goto if1830_else4234 
    set $P5005, fb_tmp_219["statementlist"]
    set $P5007, $P5005
    goto if1830_end4235
  if1830_else4234:
    null $P5006
    set $P5007, $P5006
  if1830_end4235:
    unless_null $P5007, vivi_18314237
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_18314237:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1655
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4238
    nqp_get_sc_object $P5012, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5011, $P5012
    set fb_tmp_220, $P5011
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if1832_else4239 
    set $P5013, fb_tmp_220["$W"]
    set $P5015, $P5013
    goto if1832_end4240
  if1832_else4239:
    null $P5014
    set $P5015, $P5014
  if1832_end4240:
    unless_null $P5015, vivi_18334241
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_18334241:
    unless_null $P5015, vivi_18344242
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18344242:
    set $P5010, $P5015
  fallback4238:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4245
    nqp_get_sc_object $P5021, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5020, $P5021
    set fb_tmp_221, $P5020
    repr_defined $I5003, fb_tmp_221
    unless $I5003 goto if1836_else4246 
    set $P5022, fb_tmp_221["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1836_end4247
  if1836_else4246:
    null $P5023
    set $P5024, $P5023
  if1836_end4247:
    unless_null $P5024, vivi_18374248
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_18374248:
    unless_null $P5024, vivi_18384249
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18384249:
    set $P5019, $P5024
  fallback4245:
    if $P5019 goto unless1835_end4244 
.annotate 'line', 1660
.annotate 'line', 1661
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1835_end4244:
.annotate 'line', 1668
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4252
    nqp_get_sc_object $P5034, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5033, $P5034
    set fb_tmp_222, $P5033
    repr_defined $I5004, fb_tmp_222
    unless $I5004 goto if1840_else4253 
    set $P5035, fb_tmp_222["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1840_end4254
  if1840_else4253:
    null $P5036
    set $P5037, $P5036
  if1840_end4254:
    unless_null $P5037, vivi_18414255
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_18414255:
    unless_null $P5037, vivi_18424256
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18424256:
    set $P5032, $P5037
  fallback4252:
    unless $P5032 goto if1839_end4251 
.annotate 'line', 1669
.annotate 'line', 1670
    nqp_get_sc_object $P5040, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1672
    nqp_get_sc_object $P5041, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1673
    nqp_get_sc_object $P5043, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1674
    find_dynamic_lex $P5044, "$*MAIN_SUB"
    unless_null $P5044, fallback4257
    nqp_get_sc_object $P5046, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5045, $P5046
    set fb_tmp_223, $P5045
    repr_defined $I5005, fb_tmp_223
    unless $I5005 goto if1843_else4258 
    set $P5047, fb_tmp_223["$MAIN_SUB"]
    set $P5049, $P5047
    goto if1843_end4259
  if1843_else4258:
    null $P5048
    set $P5049, $P5048
  if1843_end4259:
    unless_null $P5049, vivi_18444260
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_18444260:
    unless_null $P5049, vivi_18454261
    die "Contextual $*MAIN_SUB not found"
    box $P5051, "Contextual $*MAIN_SUB not found"
    set $P5049, $P5051
  vivi_18454261:
    set $P5044, $P5049
  fallback4257:
    $P5052 = $P5044."name"()
    set $S5002, $P5052
    concat $S5001, "&", $S5002
.annotate 'line', 1675
    nqp_get_sc_object $P5053, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5054 = $P5053."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5055 = $P5043."new"($P5054, "call" :named("op"), $S5001 :named("name"))
    $P5056 = $P5040."new"($P5042, $P5055, "if" :named("op"))
    $P5057 = $P101."push"($P5056)
  if1839_end4251:
.annotate 'line', 1681
    $P102."push"($P101)
.annotate 'line', 1684
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4262
    nqp_get_sc_object $P5060, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5059, $P5060
    set fb_tmp_224, $P5059
    repr_defined $I5006, fb_tmp_224
    unless $I5006 goto if1846_else4263 
    set $P5061, fb_tmp_224["$W"]
    set $P5063, $P5061
    goto if1846_end4264
  if1846_else4263:
    null $P5062
    set $P5063, $P5062
  if1846_end4264:
    unless_null $P5063, vivi_18474265
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5063, $P5064
  vivi_18474265:
    unless_null $P5063, vivi_18484266
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_18484266:
    set $P5058, $P5063
  fallback4262:
    $P5066 = $P5058."libs"()
    $P102."push"($P5066)
.annotate 'line', 1687
    nqp_get_sc_object $P5067, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 120
.annotate 'line', 1691
    find_dynamic_lex $P5068, "$*W"
    unless_null $P5068, fallback4267
    nqp_get_sc_object $P5070, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5069, $P5070
    set fb_tmp_225, $P5069
    repr_defined $I5007, fb_tmp_225
    unless $I5007 goto if1849_else4268 
    set $P5071, fb_tmp_225["$W"]
    set $P5073, $P5071
    goto if1849_end4269
  if1849_else4268:
    null $P5072
    set $P5073, $P5072
  if1849_end4269:
    unless_null $P5073, vivi_18504270
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5073, $P5074
  vivi_18504270:
    unless_null $P5073, vivi_18514271
    die "Contextual $*W not found"
    box $P5075, "Contextual $*W not found"
    set $P5073, $P5075
  vivi_18514271:
    set $P5068, $P5073
  fallback4267:
    $P5076 = $P5068."sc"()
.annotate 'line', 1692
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback4272
    nqp_get_sc_object $P5079, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5078, $P5079
    set fb_tmp_226, $P5078
    repr_defined $I5008, fb_tmp_226
    unless $I5008 goto if1852_else4273 
    set $P5080, fb_tmp_226["$W"]
    set $P5082, $P5080
    goto if1852_end4274
  if1852_else4273:
    null $P5081
    set $P5082, $P5081
  if1852_end4274:
    unless_null $P5082, vivi_18534275
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_18534275:
    unless_null $P5082, vivi_18544276
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_18544276:
    set $P5077, $P5082
  fallback4272:
    $P5085 = $P5077."code_ref_blocks"()
.annotate 'line', 1693
    find_dynamic_lex $P5086, "$*W"
    unless_null $P5086, fallback4277
    nqp_get_sc_object $P5088, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5087, $P5088
    set fb_tmp_227, $P5087
    repr_defined $I5009, fb_tmp_227
    unless $I5009 goto if1855_else4278 
    set $P5089, fb_tmp_227["$W"]
    set $P5091, $P5089
    goto if1855_end4279
  if1855_else4278:
    null $P5090
    set $P5091, $P5090
  if1855_end4279:
    unless_null $P5091, vivi_18564280
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5091, $P5092
  vivi_18564280:
    unless_null $P5091, vivi_18574281
    die "Contextual $*W not found"
    box $P5093, "Contextual $*W not found"
    set $P5091, $P5093
  vivi_18574281:
    set $P5086, $P5091
  fallback4277:
    $P5094 = $P5086."is_precompilation_mode"()
.annotate 'line', 1694
    find_dynamic_lex $P5095, "$*W"
    unless_null $P5095, fallback4282
    nqp_get_sc_object $P5097, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5096, $P5097
    set fb_tmp_228, $P5096
    repr_defined $I5010, fb_tmp_228
    unless $I5010 goto if1858_else4283 
    set $P5098, fb_tmp_228["$W"]
    set $P5100, $P5098
    goto if1858_end4284
  if1858_else4283:
    null $P5099
    set $P5100, $P5099
  if1858_end4284:
    unless_null $P5100, vivi_18594285
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5100, $P5101
  vivi_18594285:
    unless_null $P5100, vivi_18604286
    die "Contextual $*W not found"
    box $P5102, "Contextual $*W not found"
    set $P5100, $P5102
  vivi_18604286:
    set $P5095, $P5100
  fallback4282:
    $P5103 = $P5095."load_dependency_tasks"()
.annotate 'line', 1695
    find_dynamic_lex $P5104, "$*W"
    unless_null $P5104, fallback4287
    nqp_get_sc_object $P5106, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5105, $P5106
    set fb_tmp_229, $P5105
    repr_defined $I5011, fb_tmp_229
    unless $I5011 goto if1861_else4288 
    set $P5107, fb_tmp_229["$W"]
    set $P5109, $P5107
    goto if1861_end4289
  if1861_else4288:
    null $P5108
    set $P5109, $P5108
  if1861_end4289:
    unless_null $P5109, vivi_18624290
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5109, $P5110
  vivi_18624290:
    unless_null $P5109, vivi_18634291
    die "Contextual $*W not found"
    box $P5111, "Contextual $*W not found"
    set $P5109, $P5111
  vivi_18634291:
    set $P5104, $P5109
  fallback4287:
    $P5112 = $P5104."fixup_tasks"()
.annotate 'line', 1700
    nqp_get_sc_object $P5113, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1702
    nqp_get_sc_object $P5114, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    $P5115 = $P5114."new"($P102 :named("value"))
    $P5116 = $P5113."new"($P5115, "call" :named("op"))
.annotate 'line', 1707
    nqp_get_sc_object $P5117, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 1708
    nqp_get_sc_object $P5118, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1710
    nqp_get_sc_object $P5119, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 60
    $P5120 = $P5119."new"($P102 :named("value"))
.annotate 'line', 1711
    nqp_get_sc_object $P5121, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5122 = $P5121."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5123 = $P5118."new"($P5120, $P5122, "call" :named("op"))
    $P5124 = $P5117."new"($P5123)
    $P5125 = $P5067."new"($P102, "nqp" :named("hll"), $P5076 :named("sc"), $P5085 :named("code_ref_blocks"), $P5094 :named("compilation_mode"), $P5103 :named("pre_deserialize"), $P5112 :named("post_deserialize"), $P5116 :named("load"), $P5124 :named("main"))
    set $P103, $P5125
.annotate 'line', 1720
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback4292
    nqp_get_sc_object $P5128, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5127, $P5128
    set fb_tmp_230, $P5127
    repr_defined $I5012, fb_tmp_230
    unless $I5012 goto if1864_else4293 
    set $P5129, fb_tmp_230["$W"]
    set $P5131, $P5129
    goto if1864_end4294
  if1864_else4293:
    null $P5130
    set $P5131, $P5130
  if1864_end4294:
    unless_null $P5131, vivi_18654295
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5131, $P5132
  vivi_18654295:
    unless_null $P5131, vivi_18664296
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_18664296:
    set $P5126, $P5131
  fallback4292:
    $P5126."cleanup"()
.annotate 'line', 1722
    $P5134 = _lex_param_1."!make"($P103)
    .return ($P5134) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_242_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1725
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_451_1381281828.51527' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1726
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4301
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5004
  fallback4301:
    set fb_tmp_231, _lex_param_1
    repr_defined $I5001, fb_tmp_231
    unless $I5001 goto if1868_else4299 
    set $P5005, fb_tmp_231["statement"]
    set $P5007, $P5005
    goto if1868_end4300
  if1868_else4299:
    null $P5006
    set $P5007, $P5006
  if1868_end4300:
    unless_null $P5007, vivi_18694302
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_18694302:
    unless $P5007 goto if1867_else4297 
.annotate 'line', 1727
    unless_null _lex_param_1, fallback4305
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback4305:
    set fb_tmp_232, _lex_param_1
    repr_defined $I5002, fb_tmp_232
    unless $I5002 goto if1870_else4303 
    set $P5013, fb_tmp_232["statement"]
    set $P5015, $P5013
    goto if1870_end4304
  if1870_else4303:
    null $P5014
    set $P5015, $P5014
  if1870_end4304:
    unless_null $P5015, vivi_18714306
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_18714306:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4325:
    unless $P5011, for_done4327
    shift $P5018, $P5011
  for_redo4326:
    .const 'Sub' $P5017 = 'cuid_451_1381281828.51527' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4325
  for_done4327:
    goto if1867_end4298
  if1867_else4297:
.annotate 'line', 1736
.annotate 'line', 1737
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1867_end4298:
.annotate 'line', 1739
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1381281828.51527") :anon :lex :outer("cuid_242_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1728
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1729
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_233, $P101
    repr_defined $I5002, fb_tmp_233
    unless $I5002 goto if1873_else4309 
    set $P5003, fb_tmp_233["sink"]
    set $P5005, $P5003
    goto if1873_end4310
  if1873_else4309:
    null $P5004
    set $P5005, $P5004
  if1873_end4310:
    unless_null $P5005, vivi_18744311
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_18744311:
    defined $I5001, $P5005
    unless $I5001 goto if1872_end4308 
    set fb_tmp_234, $P101
    repr_defined $I5003, fb_tmp_234
    unless $I5003 goto if1875_else4312 
    set $P5007, fb_tmp_234["sink"]
    set $P5009, $P5007
    goto if1875_end4313
  if1875_else4312:
    null $P5008
    set $P5009, $P5008
  if1875_end4313:
    unless_null $P5009, vivi_18764314
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_18764314:
    set $P101, $P5009
  if1872_end4308:
    set fb_tmp_235, $P101
    repr_defined $I5004, fb_tmp_235
    unless $I5004 goto if1878_else4317 
    set $P5011, fb_tmp_235["bareblock"]
    set $P5013, $P5011
    goto if1878_end4318
  if1878_else4317:
    null $P5012
    set $P5013, $P5012
  if1878_end4318:
    unless_null $P5013, vivi_18794319
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_18794319:
    unless $P5013 goto if1877_end4316 
.annotate 'line', 1731
    set fb_tmp_236, $P101
    repr_defined $I5005, fb_tmp_236
    unless $I5005 goto if1880_else4320 
    set $P5015, fb_tmp_236[0]
    set $P5017, $P5015
    goto if1880_end4321
  if1880_else4320:
    null $P5016
    set $P5017, $P5016
  if1880_end4321:
    unless_null $P5017, vivi_18814322
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_18814322:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1877_end4316:
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1882_end4324 
.annotate 'line', 1732
    nqp_get_sc_object $P5021, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1882_end4324:
.annotate 'line', 1733
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_243_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1742
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_452_1381281828.51527' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_249 
    if haz_param_5, default4383
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_2, $P5023
  default4383:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4332
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4332:
    set fb_tmp_237, _lex_param_1
    repr_defined $I5001, fb_tmp_237
    unless $I5001 goto if1884_else4330 
    set $P5003, fb_tmp_237["EXPR"]
    set $P5005, $P5003
    goto if1884_end4331
  if1884_else4330:
    null $P5004
    set $P5005, $P5004
  if1884_end4331:
    unless_null $P5005, vivi_18854333
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_18854333:
    unless $P5005 goto if1883_else4328 
    .const 'Sub' $P5007 = 'cuid_452_1381281828.51527' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1883_end4329
  if1883_else4328:
    unless_null _lex_param_1, fallback4377
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5009
  fallback4377:
    set fb_tmp_248, _lex_param_1
    repr_defined $I5002, fb_tmp_248
    unless $I5002 goto if1910_else4375 
    set $P5010, fb_tmp_248["statement_control"]
    set $P5012, $P5010
    goto if1910_end4376
  if1910_else4375:
    null $P5011
    set $P5012, $P5011
  if1910_end4376:
    unless_null $P5012, vivi_19114378
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_19114378:
    unless $P5012 goto if1909_else4373 
.annotate 'line', 1765
    unless_null _lex_param_1, fallback4381
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5014
  fallback4381:
    set fb_tmp_249, _lex_param_1
    repr_defined $I5003, fb_tmp_249
    unless $I5003 goto if1912_else4379 
    set $P5015, fb_tmp_249["statement_control"]
    set $P5017, $P5015
    goto if1912_end4380
  if1912_else4379:
    null $P5016
    set $P5017, $P5016
  if1912_end4380:
    unless_null $P5017, vivi_19134382
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_19134382:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1909_end4374
  if1909_else4373:
.annotate 'line', 1766
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1909_end4374:
  if1883_end4329:
.annotate 'line', 1767
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1381281828.51527") :anon :lex :outer("cuid_243_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1744
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4336
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  fallback4336:
    set fb_tmp_238, $P5003
    repr_defined $I5001, fb_tmp_238
    unless $I5001 goto if1886_else4334 
    set $P5005, fb_tmp_238["statement_mod_cond"]
    set $P5007, $P5005
    goto if1886_end4335
  if1886_else4334:
    null $P5006
    set $P5007, $P5006
  if1886_end4335:
    unless_null $P5007, vivi_18874337
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_18874337:
    set $P101, $P5007
    find_lex $P5009, "$/"
    unless_null $P5009, fallback4340
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  fallback4340:
    set fb_tmp_239, $P5009
    repr_defined $I5002, fb_tmp_239
    unless $I5002 goto if1888_else4338 
    set $P5011, fb_tmp_239["statement_mod_loop"]
    set $P5013, $P5011
    goto if1888_end4339
  if1888_else4338:
    null $P5012
    set $P5013, $P5012
  if1888_end4339:
    unless_null $P5013, vivi_18894341
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_18894341:
    set $P102, $P5013
.annotate 'line', 1747
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4344
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  fallback4344:
    set fb_tmp_240, $P5015
    repr_defined $I5003, fb_tmp_240
    unless $I5003 goto if1890_else4342 
    set $P5017, fb_tmp_240["EXPR"]
    set $P5019, $P5017
    goto if1890_end4343
  if1890_else4342:
    null $P5018
    set $P5019, $P5018
  if1890_end4343:
    unless_null $P5019, vivi_18914345
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_18914345:
    $P5021 = $P5019."ast"()
    store_lex "$past", $P5021
    unless $P101 goto if1892_end4347 
.annotate 'line', 1748
.annotate 'line', 1749
    nqp_get_sc_object $P5022, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    set fb_tmp_241, $P101
    repr_defined $I5004, fb_tmp_241
    unless $I5004 goto if1893_else4348 
    set $P5023, fb_tmp_241["cond"]
    set $P5025, $P5023
    goto if1893_end4349
  if1893_else4348:
    null $P5024
    set $P5025, $P5024
  if1893_end4349:
    unless_null $P5025, vivi_18944350
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_18944350:
    $P5027 = $P5025."ast"()
    find_lex $P5028, "$past"
    set fb_tmp_242, $P101
    repr_defined $I5005, fb_tmp_242
    unless $I5005 goto if1895_else4351 
    set $P5029, fb_tmp_242["sym"]
    set $P5031, $P5029
    goto if1895_end4352
  if1895_else4351:
    null $P5030
    set $P5031, $P5030
  if1895_end4352:
    unless_null $P5031, vivi_18964353
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_18964353:
    set $S5001, $P5031
    find_lex $P5033, "$/"
    $P5034 = $P5022."new"($P5027, $P5028, $S5001 :named("op"), $P5033 :named("node"))
    store_lex "$past", $P5034
  if1892_end4347:
    set $P5073, $P102
    unless $P102 goto if1897_end4355 
.annotate 'line', 1751
    set fb_tmp_243, $P102
    repr_defined $I5007, fb_tmp_243
    unless $I5007 goto if1899_else4358 
    set $P5035, fb_tmp_243["sym"]
    set $P5037, $P5035
    goto if1899_end4359
  if1899_else4358:
    null $P5036
    set $P5037, $P5036
  if1899_end4359:
    unless_null $P5037, vivi_19004360
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_19004360:
    set $S5002, $P5037
    iseq $I5006, $S5002, "for"
    unless $I5006 goto if1898_else4356 
.annotate 'line', 1752
.annotate 'line', 1753
    nqp_get_sc_object $P5039, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 108
.annotate 'line', 1754
    nqp_get_sc_object $P5040, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5041 = $P5040."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5042, "$past"
    $P5043 = $P5039."new"($P5041, $P5042, "immediate" :named("blocktype"))
    store_lex "$past", $P5043
.annotate 'line', 1756
    find_lex $P5044, "$past"
    $P5044."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1757
    find_lex $P5045, "$past"
    $P5045."arity"(1)
.annotate 'line', 1758
    nqp_get_sc_object $P5046, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    set fb_tmp_244, $P102
    repr_defined $I5008, fb_tmp_244
    unless $I5008 goto if1901_else4361 
    set $P5047, fb_tmp_244["cond"]
    set $P5049, $P5047
    goto if1901_end4362
  if1901_else4361:
    null $P5048
    set $P5049, $P5048
  if1901_end4362:
    unless_null $P5049, vivi_19024363
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_19024363:
    $P5051 = $P5049."ast"()
    find_lex $P5052, "$past"
    set fb_tmp_245, $P102
    repr_defined $I5009, fb_tmp_245
    unless $I5009 goto if1903_else4364 
    set $P5053, fb_tmp_245["sym"]
    set $P5055, $P5053
    goto if1903_end4365
  if1903_else4364:
    null $P5054
    set $P5055, $P5054
  if1903_end4365:
    unless_null $P5055, vivi_19044366
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5055, $P5056
  vivi_19044366:
    set $S5003, $P5055
    find_lex $P5057, "$/"
    $P5058 = $P5046."new"($P5051, $P5052, $S5003 :named("op"), $P5057 :named("node"))
    store_lex "$past", $P5058
    set $P5072, $P5058
    goto if1898_end4357
  if1898_else4356:
.annotate 'line', 1760
.annotate 'line', 1761
    nqp_get_sc_object $P5059, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    set fb_tmp_246, $P102
    repr_defined $I5010, fb_tmp_246
    unless $I5010 goto if1905_else4367 
    set $P5060, fb_tmp_246["cond"]
    set $P5062, $P5060
    goto if1905_end4368
  if1905_else4367:
    null $P5061
    set $P5062, $P5061
  if1905_end4368:
    unless_null $P5062, vivi_19064369
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5062, $P5063
  vivi_19064369:
    $P5064 = $P5062."ast"()
    find_lex $P5065, "$past"
    set fb_tmp_247, $P102
    repr_defined $I5011, fb_tmp_247
    unless $I5011 goto if1907_else4370 
    set $P5066, fb_tmp_247["sym"]
    set $P5068, $P5066
    goto if1907_end4371
  if1907_else4370:
    null $P5067
    set $P5068, $P5067
  if1907_end4371:
    unless_null $P5068, vivi_19084372
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5068, $P5069
  vivi_19084372:
    set $S5004, $P5068
    find_lex $P5070, "$/"
    $P5071 = $P5059."new"($P5064, $P5065, $S5004 :named("op"), $P5070 :named("node"))
    store_lex "$past", $P5071
    set $P5072, $P5071
  if1898_end4357:
    set $P5073, $P5072
  if1897_end4355:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_244_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1770
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
.annotate 'line', 1771
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    unless_null _lex_param_1, fallback4386
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4386:
    set fb_tmp_250, _lex_param_1
    repr_defined $I5001, fb_tmp_250
    unless $I5001 goto if1914_else4384 
    set $P5003, fb_tmp_250["EXPR"]
    set $P5005, $P5003
    goto if1914_end4385
  if1914_else4384:
    null $P5004
    set $P5005, $P5004
  if1914_end4385:
    unless_null $P5005, vivi_19154387
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_19154387:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4390
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback4390:
    set fb_tmp_251, _lex_param_1
    repr_defined $I5002, fb_tmp_251
    unless $I5002 goto if1916_else4388 
    set $P5009, fb_tmp_251["pblock"]
    set $P5011, $P5009
    goto if1916_end4389
  if1916_else4388:
    null $P5010
    set $P5011, $P5010
  if1916_end4389:
    unless_null $P5011, vivi_19174391
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_19174391:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_245_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1774
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_252 
.annotate 'line', 1775
    unless_null _lex_param_1, fallback4394
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4394:
    set fb_tmp_252, _lex_param_1
    repr_defined $I5001, fb_tmp_252
    unless $I5001 goto if1918_else4392 
    set $P5002, fb_tmp_252["blockoid"]
    set $P5004, $P5002
    goto if1918_end4393
  if1918_else4392:
    null $P5003
    set $P5004, $P5003
  if1918_end4393:
    unless_null $P5004, vivi_19194395
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_19194395:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_246_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1778
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_253 
.annotate 'line', 1779
    unless_null _lex_param_1, fallback4398
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4398:
    set fb_tmp_253, _lex_param_1
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if1920_else4396 
    set $P5002, fb_tmp_253["blockoid"]
    set $P5004, $P5002
    goto if1920_end4397
  if1920_else4396:
    null $P5003
    set $P5004, $P5003
  if1920_end4397:
    unless_null $P5004, vivi_19214399
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_19214399:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_247_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1782
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_454_1381281828.51527' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1783
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4400
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_254, $P5003
    repr_defined $I5001, fb_tmp_254
    unless $I5001 goto if1922_else4401 
    set $P5005, fb_tmp_254["$W"]
    set $P5007, $P5005
    goto if1922_end4402
  if1922_else4401:
    null $P5006
    set $P5007, $P5006
  if1922_end4402:
    unless_null $P5007, vivi_19234403
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_19234403:
    unless_null $P5007, vivi_19244404
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19244404:
    set $P5002, $P5007
  fallback4400:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4409
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5011
  fallback4409:
    set fb_tmp_255, _lex_param_1
    repr_defined $I5002, fb_tmp_255
    unless $I5002 goto if1926_else4407 
    set $P5012, fb_tmp_255["statementlist"]
    set $P5014, $P5012
    goto if1926_end4408
  if1926_else4407:
    null $P5013
    set $P5014, $P5013
  if1926_end4408:
    unless_null $P5014, vivi_19274410
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_19274410:
    unless $P5014 goto if1925_else4405 
    .const 'Sub' $P5016 = 'cuid_454_1381281828.51527' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1925_end4406
  if1925_else4405:
.annotate 'line', 1798
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4444
    nqp_get_sc_object $P5020, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5019, $P5020
    set fb_tmp_261, $P5019
    repr_defined $I5003, fb_tmp_261
    unless $I5003 goto if1945_else4445 
    set $P5021, fb_tmp_261["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1945_end4446
  if1945_else4445:
    null $P5022
    set $P5023, $P5022
  if1945_end4446:
    unless_null $P5023, vivi_19464447
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_19464447:
    unless_null $P5023, vivi_19474448
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19474448:
    set $P5018, $P5023
  fallback4444:
    unless $P5018 goto if1944_end4443 
.annotate 'line', 1799
.annotate 'line', 1800
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1944_end4443:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1803
    unless_null _lex_param_1, fallback4451
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5029
  fallback4451:
    set fb_tmp_262, _lex_param_1
    repr_defined $I5004, fb_tmp_262
    unless $I5004 goto if1948_else4449 
    set $P5030, fb_tmp_262["you_are_here"]
    set $P5032, $P5030
    goto if1948_end4450
  if1948_else4449:
    null $P5031
    set $P5032, $P5031
  if1948_end4450:
    unless_null $P5032, vivi_19494452
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5032, $P5033
  vivi_19494452:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1925_end4406:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1381281828.51527") :anon :lex :outer("cuid_247_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1784
    .const 'Sub' $P5055 = 'cuid_453_1381281828.51527' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_258 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_259 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_260 
    .local pmc pkg_viv_tmp_35 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1785
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4413
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback4413:
    set fb_tmp_256, $P5002
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if1928_else4411 
    set $P5004, fb_tmp_256["statementlist"]
    set $P5006, $P5004
    goto if1928_end4412
  if1928_else4411:
    null $P5005
    set $P5006, $P5005
  if1928_end4412:
    unless_null $P5006, vivi_19294414
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_19294414:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4417
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_33, $P5010
    set fb_tmp_257, pkg_viv_tmp_33
    repr_defined $I5002, fb_tmp_257
    unless $I5002 goto if1931_else4418 
    set $P5012, fb_tmp_257["%HANDLERS"]
    set $P5014, $P5012
    goto if1931_end4419
  if1931_else4418:
    null $P5013
    set $P5014, $P5013
  if1931_end4419:
    unless_null $P5014, vivi_19324420
    new $P5015, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19324420:
    unless_null $P5014, vivi_19334421
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19334421:
    set $P5009, $P5014
  fallback4417:
    unless $P5009 goto if1930_end4416 
.annotate 'line', 1786
.annotate 'line', 1787
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4422
    nqp_get_sc_object $P5024, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_34, $P5023
    set fb_tmp_258, pkg_viv_tmp_34
    repr_defined $I5003, fb_tmp_258
    unless $I5003 goto if1934_else4423 
    set $P5025, fb_tmp_258["%HANDLERS"]
    set $P5027, $P5025
    goto if1934_end4424
  if1934_else4423:
    null $P5026
    set $P5027, $P5026
  if1934_end4424:
    unless_null $P5027, vivi_19354425
    new $P5028, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19354425:
    unless_null $P5027, vivi_19364426
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19364426:
    set $P5022, $P5027
  fallback4422:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4427:
    unless $P5021, for_done4429
    shift $P5031, $P5021
  for_redo4428:
    .const 'Sub' $P5030 = 'cuid_453_1381281828.51527' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4427
  for_done4429:
  if1930_end4416:
.annotate 'line', 1793
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1794
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4432
    nqp_get_sc_object $P5037, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_36, $P5036
    set fb_tmp_259, pkg_viv_tmp_36
    repr_defined $I5004, fb_tmp_259
    unless $I5004 goto if1938_else4433 
    set $P5038, fb_tmp_259["%HANDLERS"]
    set $P5040, $P5038
    goto if1938_end4434
  if1938_else4433:
    null $P5039
    set $P5040, $P5039
  if1938_end4434:
    unless_null $P5040, vivi_19394435
    new $P5041, 'Hash'
    set pkg_viv_tmp_36["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19394435:
    unless_null $P5040, vivi_19404436
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19404436:
    set $P5035, $P5040
  fallback4432:
    unless $P5035 goto if1937_end4431 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4437
    nqp_get_sc_object $P5046, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_35, $P5045
    set fb_tmp_260, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_260
    unless $I5005 goto if1941_else4438 
    set $P5047, fb_tmp_260["%HANDLERS"]
    set $P5049, $P5047
    goto if1941_end4439
  if1941_else4438:
    null $P5048
    set $P5049, $P5048
  if1941_end4439:
    unless_null $P5049, vivi_19424440
    new $P5050, 'Hash'
    set pkg_viv_tmp_35["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19424440:
    unless_null $P5049, vivi_19434441
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19434441:
    set $P5044, $P5049
  fallback4437:
    set $P5043["handlers"], $P5044
  if1937_end4431:
.annotate 'line', 1796
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1381281828.51527") :anon :lex :outer("cuid_454_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1788
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1789
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1790
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_248_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1807
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_263 
.annotate 'line', 1808
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4453
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_263, $P5002
    repr_defined $I5001, fb_tmp_263
    unless $I5001 goto if1950_else4454 
    set $P5004, fb_tmp_263["$W"]
    set $P5006, $P5004
    goto if1950_end4455
  if1950_else4454:
    null $P5005
    set $P5006, $P5005
  if1950_end4455:
    unless_null $P5006, vivi_19514456
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_19514456:
    unless_null $P5006, vivi_19524457
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19524457:
    set $P5001, $P5006
  fallback4453:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_249_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1811
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_456_1381281828.51527' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_284 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4464
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_37, $P5002
    set fb_tmp_266, pkg_viv_tmp_37
    repr_defined $I5004, fb_tmp_266
    unless $I5004 goto if1956_else4465 
    set $P5004, fb_tmp_266["%COMPILING"]
    set $P5006, $P5004
    goto if1956_end4466
  if1956_else4465:
    null $P5005
    set $P5006, $P5005
  if1956_end4466:
    unless_null $P5006, vivi_19574467
    new $P5007, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19574467:
    unless_null $P5006, vivi_19584468
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19584468:
    set $P5001, $P5006
  fallback4464:
    set fb_tmp_265, $P5001
    repr_defined $I5003, fb_tmp_265
    unless $I5003 goto if1955_else4462 
    set $P5009, fb_tmp_265["%?OPTIONS"]
    set $P5011, $P5009
    goto if1955_end4463
  if1955_else4462:
    null $P5010
    set $P5011, $P5010
  if1955_end4463:
    unless_null $P5011, vivi_19594469
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_19594469:
    set fb_tmp_264, $P5011
    repr_defined $I5002, fb_tmp_264
    unless $I5002 goto if1954_else4460 
    set $P5013, fb_tmp_264["outer_ctx"]
    set $P5015, $P5013
    goto if1954_end4461
  if1954_else4460:
    null $P5014
    set $P5015, $P5014
  if1954_end4461:
    unless_null $P5015, vivi_19604470
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_19604470:
    defined $I5001, $P5015
    if $I5001 goto unless1953_end4459 
    .const 'Sub' $P5017 = 'cuid_456_1381281828.51527' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1953_end4459:
.annotate 'line', 1832
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4547
    nqp_get_sc_object $P5022, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5021, $P5022
    set fb_tmp_284, $P5021
    repr_defined $I5005, fb_tmp_284
    unless $I5005 goto if2007_else4548 
    set $P5023, fb_tmp_284["$W"]
    set $P5025, $P5023
    goto if2007_end4549
  if2007_else4548:
    null $P5024
    set $P5025, $P5024
  if2007_end4549:
    unless_null $P5025, vivi_20084550
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_20084550:
    unless_null $P5025, vivi_20094551
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_20094551:
    set $P5020, $P5025
  fallback4547:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1381281828.51527") :anon :lex :outer("cuid_249_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1812
    .const 'Sub' $P5100 = 'cuid_455_1381281828.51527' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    .local pmc fb_tmp_273 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1815
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4471
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_267, $P5003
    repr_defined $I5001, fb_tmp_267
    unless $I5001 goto if1961_else4472 
    set $P5005, fb_tmp_267["$W"]
    set $P5007, $P5005
    goto if1961_end4473
  if1961_else4472:
    null $P5006
    set $P5007, $P5006
  if1961_end4473:
    unless_null $P5007, vivi_19624474
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_19624474:
    unless_null $P5007, vivi_19634475
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19634475:
    set $P5002, $P5007
  fallback4471:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4481
    nqp_get_sc_object $P5013, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_38, $P5012
    set fb_tmp_270, pkg_viv_tmp_38
    repr_defined $I5005, fb_tmp_270
    unless $I5005 goto if1966_else4482 
    set $P5014, fb_tmp_270["%COMPILING"]
    set $P5016, $P5014
    goto if1966_end4483
  if1966_else4482:
    null $P5015
    set $P5016, $P5015
  if1966_end4483:
    unless_null $P5016, vivi_19674484
    new $P5017, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19674484:
    unless_null $P5016, vivi_19684485
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19684485:
    set $P5011, $P5016
  fallback4481:
    set fb_tmp_269, $P5011
    repr_defined $I5004, fb_tmp_269
    unless $I5004 goto if1965_else4479 
    set $P5019, fb_tmp_269["%?OPTIONS"]
    set $P5021, $P5019
    goto if1965_end4480
  if1965_else4479:
    null $P5020
    set $P5021, $P5020
  if1965_end4480:
    unless_null $P5021, vivi_19694486
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_19694486:
    set fb_tmp_268, $P5021
    repr_defined $I5003, fb_tmp_268
    unless $I5003 goto if1964_else4477 
    set $P5023, fb_tmp_268["setting"]
    set $P5025, $P5023
    goto if1964_end4478
  if1964_else4477:
    null $P5024
    set $P5025, $P5024
  if1964_end4478:
    unless_null $P5025, vivi_19704487
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_19704487:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4476
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4476:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4494
    nqp_get_sc_object $P5031, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_39, $P5030
    set fb_tmp_273, pkg_viv_tmp_39
    repr_defined $I5009, fb_tmp_273
    unless $I5009 goto if1974_else4495 
    set $P5032, fb_tmp_273["%COMPILING"]
    set $P5034, $P5032
    goto if1974_end4496
  if1974_else4495:
    null $P5033
    set $P5034, $P5033
  if1974_end4496:
    unless_null $P5034, vivi_19754497
    new $P5035, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19754497:
    unless_null $P5034, vivi_19764498
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19764498:
    set $P5029, $P5034
  fallback4494:
    set fb_tmp_272, $P5029
    repr_defined $I5008, fb_tmp_272
    unless $I5008 goto if1973_else4492 
    set $P5037, fb_tmp_272["%?OPTIONS"]
    set $P5039, $P5037
    goto if1973_end4493
  if1973_else4492:
    null $P5038
    set $P5039, $P5038
  if1973_end4493:
    unless_null $P5039, vivi_19774499
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5039, $P5040
  vivi_19774499:
    set fb_tmp_271, $P5039
    repr_defined $I5007, fb_tmp_271
    unless $I5007 goto if1972_else4490 
    set $P5041, fb_tmp_271["setting"]
    set $P5043, $P5041
    goto if1972_end4491
  if1972_else4490:
    null $P5042
    set $P5043, $P5042
  if1972_end4491:
    unless_null $P5043, vivi_19784500
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5043, $P5044
  vivi_19784500:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1971_end4489 
.annotate 'line', 1820
.annotate 'line', 1821
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4507
    nqp_get_sc_object $P5047, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_40, $P5046
    set fb_tmp_276, pkg_viv_tmp_40
    repr_defined $I5012, fb_tmp_276
    unless $I5012 goto if1982_else4508 
    set $P5048, fb_tmp_276["%COMPILING"]
    set $P5050, $P5048
    goto if1982_end4509
  if1982_else4508:
    null $P5049
    set $P5050, $P5049
  if1982_end4509:
    unless_null $P5050, vivi_19834510
    new $P5051, 'Hash'
    set pkg_viv_tmp_40["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_19834510:
    unless_null $P5050, vivi_19844511
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_19844511:
    set $P5045, $P5050
  fallback4507:
    set fb_tmp_275, $P5045
    repr_defined $I5011, fb_tmp_275
    unless $I5011 goto if1981_else4505 
    set $P5053, fb_tmp_275["%?OPTIONS"]
    set $P5055, $P5053
    goto if1981_end4506
  if1981_else4505:
    null $P5054
    set $P5055, $P5054
  if1981_end4506:
    unless_null $P5055, vivi_19854512
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5055, $P5056
  vivi_19854512:
    set fb_tmp_274, $P5055
    repr_defined $I5010, fb_tmp_274
    unless $I5010 goto if1980_else4503 
    set $P5057, fb_tmp_274["no-regex-lib"]
    set $P5059, $P5057
    goto if1980_end4504
  if1980_else4503:
    null $P5058
    set $P5059, $P5058
  if1980_end4504:
    unless_null $P5059, vivi_19864513
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5059, $P5060
  vivi_19864513:
    set $P5097, $P5059
    if $P5059 goto unless1979_end4502 
.annotate 'line', 1822
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4520
    nqp_get_sc_object $P5063, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_41, $P5062
    set fb_tmp_279, pkg_viv_tmp_41
    repr_defined $I5015, fb_tmp_279
    unless $I5015 goto if1990_else4521 
    set $P5064, fb_tmp_279["%COMPILING"]
    set $P5066, $P5064
    goto if1990_end4522
  if1990_else4521:
    null $P5065
    set $P5066, $P5065
  if1990_end4522:
    unless_null $P5066, vivi_19914523
    new $P5067, 'Hash'
    set pkg_viv_tmp_41["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_19914523:
    unless_null $P5066, vivi_19924524
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_19924524:
    set $P5061, $P5066
  fallback4520:
    set fb_tmp_278, $P5061
    repr_defined $I5014, fb_tmp_278
    unless $I5014 goto if1989_else4518 
    set $P5069, fb_tmp_278["%?OPTIONS"]
    set $P5071, $P5069
    goto if1989_end4519
  if1989_else4518:
    null $P5070
    set $P5071, $P5070
  if1989_end4519:
    unless_null $P5071, vivi_19934525
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5071, $P5072
  vivi_19934525:
    set fb_tmp_277, $P5071
    repr_defined $I5013, fb_tmp_277
    unless $I5013 goto if1988_else4516 
    set $P5073, fb_tmp_277["custom-regex-lib"]
    set $P5075, $P5073
    goto if1988_end4517
  if1988_else4516:
    null $P5074
    set $P5075, $P5074
  if1988_end4517:
    unless_null $P5075, vivi_19944526
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5075, $P5076
  vivi_19944526:
    unless $P5075 goto if1987_else4514 
    .const 'Sub' $P5077 = 'cuid_455_1381281828.51527' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if1987_end4515
  if1987_else4514:
.annotate 'line', 1826
.annotate 'line', 1827
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4537
    nqp_get_sc_object $P5081, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5080, $P5081
    set fb_tmp_282, $P5080
    repr_defined $I5016, fb_tmp_282
    unless $I5016 goto if2001_else4538 
    set $P5082, fb_tmp_282["$W"]
    set $P5084, $P5082
    goto if2001_end4539
  if2001_else4538:
    null $P5083
    set $P5084, $P5083
  if2001_end4539:
    unless_null $P5084, vivi_20024540
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5084, $P5085
  vivi_20024540:
    unless_null $P5084, vivi_20034541
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_20034541:
    set $P5079, $P5084
  fallback4537:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4542
    nqp_get_sc_object $P5089, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5088, $P5089
    set fb_tmp_283, $P5088
    repr_defined $I5017, fb_tmp_283
    unless $I5017 goto if2004_else4543 
    set $P5090, fb_tmp_283["$GLOBALish"]
    set $P5092, $P5090
    goto if2004_end4544
  if2004_else4543:
    null $P5091
    set $P5092, $P5091
  if2004_end4544:
    unless_null $P5092, vivi_20054545
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5092, $P5093
  vivi_20054545:
    unless_null $P5092, vivi_20064546
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_20064546:
    set $P5087, $P5092
  fallback4542:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if1987_end4515:
    set $P5097, $P5096
  unless1979_end4502:
    set $P5098, $P5097
  unless1971_end4489:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1381281828.51527") :anon :lex :outer("cuid_456_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1823
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
.annotate 'line', 1824
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4527
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_280, $P5002
    repr_defined $I5001, fb_tmp_280
    unless $I5001 goto if1995_else4528 
    set $P5004, fb_tmp_280["$W"]
    set $P5006, $P5004
    goto if1995_end4529
  if1995_else4528:
    null $P5005
    set $P5006, $P5005
  if1995_end4529:
    unless_null $P5006, vivi_19964530
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_19964530:
    unless_null $P5006, vivi_19974531
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19974531:
    set $P5001, $P5006
  fallback4527:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4532
    nqp_get_sc_object $P5011, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5010, $P5011
    set fb_tmp_281, $P5010
    repr_defined $I5002, fb_tmp_281
    unless $I5002 goto if1998_else4533 
    set $P5012, fb_tmp_281["$GLOBALish"]
    set $P5014, $P5012
    goto if1998_end4534
  if1998_else4533:
    null $P5013
    set $P5014, $P5013
  if1998_end4534:
    unless_null $P5014, vivi_19994535
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_19994535:
    unless_null $P5014, vivi_20004536
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_20004536:
    set $P5009, $P5014
  fallback4532:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_250_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1844
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1845
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_251_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1850
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1851
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4552
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_285, $P5003
    repr_defined $I5001, fb_tmp_285
    unless $I5001 goto if2010_else4553 
    set $P5005, fb_tmp_285["$W"]
    set $P5007, $P5005
    goto if2010_end4554
  if2010_else4553:
    null $P5006
    set $P5007, $P5006
  if2010_end4554:
    unless_null $P5007, vivi_20114555
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_20114555:
    unless_null $P5007, vivi_20124556
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_20124556:
    set $P5002, $P5007
  fallback4552:
    unless_null _lex_param_1, fallback4559
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5010
  fallback4559:
    set fb_tmp_286, _lex_param_1
    repr_defined $I5002, fb_tmp_286
    unless $I5002 goto if2013_else4557 
    set $P5011, fb_tmp_286["name"]
    set $P5013, $P5011
    goto if2013_end4558
  if2013_else4557:
    null $P5012
    set $P5013, $P5012
  if2013_end4558:
    unless_null $P5013, vivi_20144560
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_20144560:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4561
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5016, $P5017
    set fb_tmp_287, $P5016
    repr_defined $I5003, fb_tmp_287
    unless $I5003 goto if2015_else4562 
    set $P5018, fb_tmp_287["$GLOBALish"]
    set $P5020, $P5018
    goto if2015_end4563
  if2015_else4562:
    null $P5019
    set $P5020, $P5019
  if2015_end4563:
    unless_null $P5020, vivi_20164564
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_20164564:
    unless_null $P5020, vivi_20174565
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_20174565:
    set $P5015, $P5020
  fallback4561:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2018_end4567 
.annotate 'line', 1852
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2020_end4571 
    set fb_tmp_288, $P101
    repr_defined $I5007, fb_tmp_288
    unless $I5007 goto if2021_else4572 
    set $P5025, fb_tmp_288["EXPORT"]
    set $P5027, $P5025
    goto if2021_end4573
  if2021_else4572:
    null $P5026
    set $P5027, $P5026
  if2021_end4573:
    unless_null $P5027, vivi_20224574
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5027, $P5028
  vivi_20224574:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2020_end4571:
    unless $I5008 goto if2019_end4569 
.annotate 'line', 1853
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4575
    nqp_get_sc_object $P5031, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5030, $P5031
    set fb_tmp_289, $P5030
    repr_defined $I5009, fb_tmp_289
    unless $I5009 goto if2023_else4576 
    set $P5032, fb_tmp_289["$W"]
    set $P5034, $P5032
    goto if2023_end4577
  if2023_else4576:
    null $P5033
    set $P5034, $P5033
  if2023_end4577:
    unless_null $P5034, vivi_20244578
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  vivi_20244578:
    unless_null $P5034, vivi_20254579
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20254579:
    set $P5029, $P5034
  fallback4575:
    set fb_tmp_291, $P101
    repr_defined $I5011, fb_tmp_291
    unless $I5011 goto if2027_else4582 
    set $P5039, fb_tmp_291["EXPORT"]
    set $P5041, $P5039
    goto if2027_end4583
  if2027_else4582:
    null $P5040
    set $P5041, $P5040
  if2027_end4583:
    unless_null $P5041, vivi_20284584
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5041, $P5042
  vivi_20284584:
    get_who $P5038, $P5041
    set fb_tmp_290, $P5038
    repr_defined $I5010, fb_tmp_290
    unless $I5010 goto if2026_else4580 
    set $P5043, fb_tmp_290["DEFAULT"]
    set $P5045, $P5043
    goto if2026_end4581
  if2026_else4580:
    null $P5044
    set $P5045, $P5044
  if2026_end4581:
    unless_null $P5045, vivi_20294585
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  vivi_20294585:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2019_end4569:
.annotate 'line', 1856
    $P5048 = "&import_HOW_exports"($P101)
  if2018_end4567:
.annotate 'line', 1858
    nqp_get_sc_object $P5049, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_252_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1861
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_457_1381281828.51527' 
    capture_lex $P5038 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4588
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback4588:
    set fb_tmp_292, _lex_param_1
    repr_defined $I5001, fb_tmp_292
    unless $I5001 goto if2030_else4586 
    set $P5004, fb_tmp_292["xblock"]
    set $P5006, $P5004
    goto if2030_end4587
  if2030_else4586:
    null $P5005
    set $P5006, $P5005
  if2030_end4587:
    unless_null $P5006, vivi_20314589
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_20314589:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1863
    unless_null _lex_param_1, fallback4594
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5009
  fallback4594:
    set fb_tmp_294, _lex_param_1
    repr_defined $I5003, fb_tmp_294
    unless $I5003 goto if2033_else4592 
    set $P5010, fb_tmp_294["xblock"]
    set $P5012, $P5010
    goto if2033_end4593
  if2033_else4592:
    null $P5011
    set $P5012, $P5011
  if2033_end4593:
    unless_null $P5012, vivi_20344595
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_20344595:
    set fb_tmp_293, $P5012
    repr_defined $I5002, fb_tmp_293
    unless $I5002 goto if2032_else4590 
    set $I5004, $P101
    set $P5014, fb_tmp_293[$I5004]
    set $P5016, $P5014
    goto if2032_end4591
  if2032_else4590:
    null $P5015
    set $P5016, $P5015
  if2032_end4591:
    unless_null $P5016, vivi_20354596
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_20354596:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4601
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5020
  fallback4601:
    set fb_tmp_295, _lex_param_1
    repr_defined $I5005, fb_tmp_295
    unless $I5005 goto if2037_else4599 
    set $P5021, fb_tmp_295["else"]
    set $P5023, $P5021
    goto if2037_end4600
  if2037_else4599:
    null $P5022
    set $P5023, $P5022
  if2037_end4600:
    unless_null $P5023, vivi_20384602
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_20384602:
    unless $P5023 goto if2036_end4598 
.annotate 'line', 1864
.annotate 'line', 1865
    unless_null _lex_param_1, fallback4605
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5025
  fallback4605:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5006, fb_tmp_296
    unless $I5006 goto if2039_else4603 
    set $P5026, fb_tmp_296["else"]
    set $P5028, $P5026
    goto if2039_end4604
  if2039_else4603:
    null $P5027
    set $P5028, $P5027
  if2039_end4604:
    unless_null $P5028, vivi_20404606
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_20404606:
    $P5030 = $P5028."ast"()
    $P5031 = "&block_immediate"($P5030)
    $P5032 = $P102."push"($P5031)
  if2036_end4598:
  while2041_test4607:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5007, $N5004, $N5005
    box $P5036, $I5007
    set $P5035, $P5036
    unless $I5007 goto while2041_done4611 
  while2041_redo4609:
    .const 'Sub' $P5033 = 'cuid_457_1381281828.51527' 
    capture_lex $P5033
    $P5034 = $P5033()
    set $P5035, $P5034
    goto while2041_test4607 
  while2041_done4611:
.annotate 'line', 1874
    $P5037 = _lex_param_1."!make"($P102)
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1381281828.51527") :anon :lex :outer("cuid_252_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1868
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1871
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4616
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  fallback4616:
    set fb_tmp_298, $P5003
    repr_defined $I5002, fb_tmp_298
    unless $I5002 goto if2043_else4614 
    set $P5005, fb_tmp_298["xblock"]
    set $P5007, $P5005
    goto if2043_end4615
  if2043_else4614:
    null $P5006
    set $P5007, $P5006
  if2043_end4615:
    unless_null $P5007, vivi_20444617
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_20444617:
    set fb_tmp_297, $P5007
    repr_defined $I5001, fb_tmp_297
    unless $I5001 goto if2042_else4612 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_297[$I5003]
    set $P5012, $P5009
    goto if2042_end4613
  if2042_else4612:
    null $P5011
    set $P5012, $P5011
  if2042_end4613:
    unless_null $P5012, vivi_20454618
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_20454618:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1872
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_253_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1877
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_299 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1878
    unless_null _lex_param_1, fallback4621
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4621:
    set fb_tmp_299, _lex_param_1
    repr_defined $I5001, fb_tmp_299
    unless $I5001 goto if2046_else4619 
    set $P5003, fb_tmp_299["xblock"]
    set $P5005, $P5003
    goto if2046_end4620
  if2046_else4619:
    null $P5004
    set $P5005, $P5004
  if2046_end4620:
    unless_null $P5005, vivi_20474622
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_20474622:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1879
    $P101."op"("unless")
.annotate 'line', 1880
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_254_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1883
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1884
    unless_null _lex_param_1, fallback4625
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4625:
    set fb_tmp_300, _lex_param_1
    repr_defined $I5001, fb_tmp_300
    unless $I5001 goto if2048_else4623 
    set $P5003, fb_tmp_300["xblock"]
    set $P5005, $P5003
    goto if2048_end4624
  if2048_else4623:
    null $P5004
    set $P5005, $P5004
  if2048_end4624:
    unless_null $P5005, vivi_20494626
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_20494626:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1885
    unless_null _lex_param_1, fallback4629
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5009
  fallback4629:
    set fb_tmp_301, _lex_param_1
    repr_defined $I5002, fb_tmp_301
    unless $I5002 goto if2050_else4627 
    set $P5010, fb_tmp_301["sym"]
    set $P5012, $P5010
    goto if2050_end4628
  if2050_else4627:
    null $P5011
    set $P5012, $P5011
  if2050_end4628:
    unless_null $P5012, vivi_20514630
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_20514630:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4633
    nqp_get_sc_object $P5016, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5015, $P5016
    set fb_tmp_302, $P5015
    repr_defined $I5003, fb_tmp_302
    unless $I5003 goto if2053_else4634 
    set $P5017, fb_tmp_302["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2053_end4635
  if2053_else4634:
    null $P5018
    set $P5019, $P5018
  if2053_end4635:
    unless_null $P5019, vivi_20544636
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_20544636:
    unless_null $P5019, vivi_20554637
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20554637:
    set $P5014, $P5019
  fallback4633:
    if $P5014 goto unless2052_end4632 
.annotate 'line', 1886
.annotate 'line', 1887
    nqp_get_sc_object $P5022, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2052_end4632:
.annotate 'line', 1889
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_255_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1892
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4640
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback4640:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5001, fb_tmp_303
    unless $I5001 goto if2056_else4638 
    set $P5004, fb_tmp_303["wu"]
    set $P5006, $P5004
    goto if2056_end4639
  if2056_else4638:
    null $P5005
    set $P5006, $P5005
  if2056_end4639:
    unless_null $P5006, vivi_20574641
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_20574641:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4646
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5009
  fallback4646:
    set fb_tmp_304, _lex_param_1
    repr_defined $I5002, fb_tmp_304
    unless $I5002 goto if2059_else4644 
    set $P5010, fb_tmp_304["xblock"]
    set $P5012, $P5010
    goto if2059_end4645
  if2059_else4644:
    null $P5011
    set $P5012, $P5011
  if2059_end4645:
    unless_null $P5012, vivi_20604647
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_20604647:
    unless $P5012 goto if2058_else4642 
.annotate 'line', 1895
.annotate 'line', 1896
    unless_null _lex_param_1, fallback4650
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5014
  fallback4650:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5003, fb_tmp_305
    unless $I5003 goto if2061_else4648 
    set $P5015, fb_tmp_305["xblock"]
    set $P5017, $P5015
    goto if2061_end4649
  if2061_else4648:
    null $P5016
    set $P5017, $P5016
  if2061_end4649:
    unless_null $P5017, vivi_20624651
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_20624651:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1897
    $P5021 = $P102."op"($P101)
    goto if2058_end4643
  if2058_else4642:
.annotate 'line', 1899
.annotate 'line', 1900
    nqp_get_sc_object $P5022, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    unless_null _lex_param_1, fallback4654
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5023
  fallback4654:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5004, fb_tmp_306
    unless $I5004 goto if2063_else4652 
    set $P5024, fb_tmp_306["EXPR"]
    set $P5026, $P5024
    goto if2063_end4653
  if2063_else4652:
    null $P5025
    set $P5026, $P5025
  if2063_end4653:
    unless_null $P5026, vivi_20644655
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_20644655:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4658
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5029
  fallback4658:
    set fb_tmp_307, _lex_param_1
    repr_defined $I5005, fb_tmp_307
    unless $I5005 goto if2065_else4656 
    set $P5030, fb_tmp_307["pblock"]
    set $P5032, $P5030
    goto if2065_end4657
  if2065_else4656:
    null $P5031
    set $P5032, $P5031
  if2065_end4657:
    unless_null $P5032, vivi_20664659
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5032, $P5033
  vivi_20664659:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2058_end4643:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback4662
    nqp_get_sc_object $P5039, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5038, $P5039
    set fb_tmp_308, $P5038
    repr_defined $I5006, fb_tmp_308
    unless $I5006 goto if2068_else4663 
    set $P5040, fb_tmp_308["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2068_end4664
  if2068_else4663:
    null $P5041
    set $P5042, $P5041
  if2068_end4664:
    unless_null $P5042, vivi_20694665
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5042, $P5043
  vivi_20694665:
    unless_null $P5042, vivi_20704666
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20704666:
    set $P5037, $P5042
  fallback4662:
    if $P5037 goto unless2067_end4661 
.annotate 'line', 1903
.annotate 'line', 1904
    nqp_get_sc_object $P5045, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2067_end4661:
.annotate 'line', 1906
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_256_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1909
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 1910
    unless_null _lex_param_1, fallback4669
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback4669:
    set fb_tmp_309, _lex_param_1
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2071_else4667 
    set $P5004, fb_tmp_309["xblock"]
    set $P5006, $P5004
    goto if2071_end4668
  if2071_else4667:
    null $P5005
    set $P5006, $P5005
  if2071_end4668:
    unless_null $P5006, vivi_20724670
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_20724670:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1911
    $P101."op"("for")
    set fb_tmp_310, $P101
    repr_defined $I5002, fb_tmp_310
    unless $I5002 goto if2073_else4671 
    set $P5009, fb_tmp_310[1]
    set $P5011, $P5009
    goto if2073_end4672
  if2073_else4671:
    null $P5010
    set $P5011, $P5010
  if2073_end4672:
    unless_null $P5011, vivi_20744673
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_20744673:
    set $P102, $P5011
.annotate 'line', 1913
    $P5013 = $P102."arity"()
    if $P5013 goto unless2075_end4675 
.annotate 'line', 1914
    set fb_tmp_311, $P102
    repr_defined $I5003, fb_tmp_311
    unless $I5003 goto if2076_else4676 
    set $P5014, fb_tmp_311[0]
    set $P5016, $P5014
    goto if2076_end4677
  if2076_else4676:
    null $P5015
    set $P5016, $P5015
  if2076_end4677:
    unless_null $P5016, vivi_20774678
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_20774678:
    nqp_get_sc_object $P5018, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 1915
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1916
    $P5020 = $P102."arity"(1)
  unless2075_end4675:
.annotate 'line', 1918
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback4681
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set fb_tmp_312, $P5022
    repr_defined $I5004, fb_tmp_312
    unless $I5004 goto if2079_else4682 
    set $P5024, fb_tmp_312["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2079_end4683
  if2079_else4682:
    null $P5025
    set $P5026, $P5025
  if2079_end4683:
    unless_null $P5026, vivi_20804684
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_20804684:
    unless_null $P5026, vivi_20814685
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_20814685:
    set $P5021, $P5026
  fallback4681:
    if $P5021 goto unless2078_end4680 
.annotate 'line', 1919
.annotate 'line', 1920
    nqp_get_sc_object $P5029, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2078_end4680:
.annotate 'line', 1922
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_257_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1925
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_313 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1926
    unless_null _lex_param_1, fallback4688
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4688:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5001, fb_tmp_313
    unless $I5001 goto if2082_else4686 
    set $P5003, fb_tmp_313["block"]
    set $P5005, $P5003
    goto if2082_end4687
  if2082_else4686:
    null $P5004
    set $P5005, $P5004
  if2082_end4687:
    unless_null $P5005, vivi_20834689
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_20834689:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1927
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1928
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_258_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1931
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_314 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 1932
    unless_null _lex_param_1, fallback4692
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4692:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2084_else4690 
    set $P5003, fb_tmp_314["block"]
    set $P5005, $P5003
    goto if2084_end4691
  if2084_else4690:
    null $P5004
    set $P5005, $P5004
  if2084_end4691:
    unless_null $P5005, vivi_20854693
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_20854693:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1933
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1934
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_259_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1972
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
.annotate 'line', 1973
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4694
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_315, $P5002
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if2086_else4695 
    set $P5004, fb_tmp_315["$W"]
    set $P5006, $P5004
    goto if2086_end4696
  if2086_else4695:
    null $P5005
    set $P5006, $P5005
  if2086_end4696:
    unless_null $P5006, vivi_20874697
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_20874697:
    unless_null $P5006, vivi_20884698
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20884698:
    set $P5001, $P5006
  fallback4694:
    unless_null _lex_param_1, fallback4701
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5009
  fallback4701:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5002, fb_tmp_316
    unless $I5002 goto if2089_else4699 
    set $P5010, fb_tmp_316["blorst"]
    set $P5012, $P5010
    goto if2089_end4700
  if2089_else4699:
    null $P5011
    set $P5012, $P5011
  if2089_end4700:
    unless_null $P5012, vivi_20904702
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_20904702:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_260_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1976
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
.annotate 'line', 1977
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4703
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_317, $P5002
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2091_else4704 
    set $P5004, fb_tmp_317["$W"]
    set $P5006, $P5004
    goto if2091_end4705
  if2091_else4704:
    null $P5005
    set $P5006, $P5005
  if2091_end4705:
    unless_null $P5006, vivi_20924706
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_20924706:
    unless_null $P5006, vivi_20934707
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20934707:
    set $P5001, $P5006
  fallback4703:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback4710
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5010
  fallback4710:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5002, fb_tmp_318
    unless $I5002 goto if2094_else4708 
    set $P5011, fb_tmp_318["blorst"]
    set $P5013, $P5011
    goto if2094_end4709
  if2094_else4708:
    null $P5012
    set $P5013, $P5012
  if2094_end4709:
    unless_null $P5013, vivi_20954711
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_20954711:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1978
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_261_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1981
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    .local pmc fb_tmp_320 
    .local pmc fb_tmp_321 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4712
    .lex "RETURN", $P102
.annotate 'line', 1982
    unless_null _lex_param_1, fallback4716
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4716:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2096_else4714 
    set $P5003, fb_tmp_319["blorst"]
    set $P5005, $P5003
    goto if2096_end4715
  if2096_else4714:
    null $P5004
    set $P5005, $P5004
  if2096_end4715:
    unless_null $P5005, vivi_20974717
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_20974717:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 108
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2098_end4719 
.annotate 'line', 1983
    set fb_tmp_320, $P101
    repr_defined $I5003, fb_tmp_320
    unless $I5003 goto if2101_else4724 
    set $P5009, fb_tmp_320["handlers"]
    set $P5011, $P5009
    goto if2101_end4725
  if2101_else4724:
    null $P5010
    set $P5011, $P5010
  if2101_end4725:
    unless_null $P5011, vivi_21024726
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_21024726:
    set $P5017, $P5011
    unless $P5011 goto if2100_end4723 
    set fb_tmp_321, $P101
    repr_defined $I5005, fb_tmp_321
    unless $I5005 goto if2103_else4727 
    set $P5013, fb_tmp_321["handlers"]
    set $P5015, $P5013
    goto if2103_end4728
  if2103_else4727:
    null $P5014
    set $P5015, $P5014
  if2103_end4728:
    unless_null $P5015, vivi_21044729
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_21044729:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2100_end4723:
    unless $P5017 goto if2099_else4720 
.annotate 'line', 1984
.annotate 'line', 1985
    _lex_param_1."!make"($P101)
    $P5019 = "RETURN"(1)
    set $P5021, $P5019
    goto if2099_end4721
  if2099_else4720:
.annotate 'line', 1988
.annotate 'line', 1989
    $P5020 = $P101."blocktype"("immediate")
    set $P5021, $P5020
  if2099_end4721:
  if2098_end4719:
.annotate 'line', 1992
    nqp_get_sc_object $P5022, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 1996
    nqp_get_sc_object $P5023, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 1997
    nqp_get_sc_object $P5024, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
.annotate 'line', 1998
    nqp_get_sc_object $P5025, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2000
    nqp_get_sc_object $P5026, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5027 = $P5026."new"("exception" :named("op"))
.annotate 'line', 2001
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5029 = $P5028."new"("handled" :named("value"))
.annotate 'line', 2002
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5031 = $P5030."new"(1 :named("value"))
    $P5032 = $P5025."new"($P5027, $P5029, $P5031, "bindkey_i" :named("op"))
.annotate 'line', 2004
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5034 = $P5033."new"("null" :named("op"))
.annotate 'line', 2005
    nqp_get_sc_object $P5035, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5036 = $P5035."new"("null" :named("op"))
    $P5037 = $P5024."new"($P5032 :named("parrot"), $P5034 :named("jvm"), $P5036 :named("moar"))
.annotate 'line', 2007
    $P5038 = "&default_for"("$")
    $P5039 = $P5023."new"($P5037, $P5038)
    $P5040 = $P5022."new"($P101, "CATCH", $P5039, "handle" :named("op"))
    $P5041 = _lex_param_1."!make"($P5040)
    goto lexotic_4713
  lexotic_4712:
    .get_results ($P5041)
  lexotic_4713:
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_262_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2011
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_322 
    .local pmc fb_tmp_323 
    .local pmc fb_tmp_324 
.annotate 'line', 2012
    unless_null _lex_param_1, fallback4734
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4734:
    set fb_tmp_322, _lex_param_1
    repr_defined $I5001, fb_tmp_322
    unless $I5001 goto if2106_else4732 
    set $P5002, fb_tmp_322["block"]
    set $P5004, $P5002
    goto if2106_end4733
  if2106_else4732:
    null $P5003
    set $P5004, $P5003
  if2106_end4733:
    unless_null $P5004, vivi_21074735
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21074735:
    unless $P5004 goto if2105_else4730 
.annotate 'line', 2013
    unless_null _lex_param_1, fallback4738
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback4738:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5002, fb_tmp_323
    unless $I5002 goto if2108_else4736 
    set $P5007, fb_tmp_323["block"]
    set $P5009, $P5007
    goto if2108_end4737
  if2108_else4736:
    null $P5008
    set $P5009, $P5008
  if2108_end4737:
    unless_null $P5009, vivi_21094739
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_21094739:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2105_end4731
  if2105_else4730:
.annotate 'line', 2014
    unless_null _lex_param_1, fallback4742
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5013
  fallback4742:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5003, fb_tmp_324
    unless $I5003 goto if2110_else4740 
    set $P5014, fb_tmp_324["statement"]
    set $P5016, $P5014
    goto if2110_end4741
  if2110_else4740:
    null $P5015
    set $P5016, $P5015
  if2110_end4741:
    unless_null $P5016, vivi_21114743
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_21114743:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2105_end4731:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_263_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2019
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    unless_null _lex_param_1, fallback4746
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4746:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2112_else4744 
    set $P5002, fb_tmp_325["cond"]
    set $P5004, $P5002
    goto if2112_end4745
  if2112_else4744:
    null $P5003
    set $P5004, $P5003
  if2112_end4745:
    unless_null $P5004, vivi_21134747
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21134747:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_264_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_326 
    unless_null _lex_param_1, fallback4750
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4750:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2114_else4748 
    set $P5002, fb_tmp_326["cond"]
    set $P5004, $P5002
    goto if2114_end4749
  if2114_else4748:
    null $P5003
    set $P5004, $P5003
  if2114_end4749:
    unless_null $P5004, vivi_21154751
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21154751:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_265_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2022
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
    unless_null _lex_param_1, fallback4754
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4754:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2116_else4752 
    set $P5002, fb_tmp_327["cond"]
    set $P5004, $P5002
    goto if2116_end4753
  if2116_else4752:
    null $P5003
    set $P5004, $P5003
  if2116_end4753:
    unless_null $P5004, vivi_21174755
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21174755:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_266_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_328 
    unless_null _lex_param_1, fallback4758
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4758:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5001, fb_tmp_328
    unless $I5001 goto if2118_else4756 
    set $P5002, fb_tmp_328["cond"]
    set $P5004, $P5002
    goto if2118_end4757
  if2118_else4756:
    null $P5003
    set $P5004, $P5003
  if2118_end4757:
    unless_null $P5004, vivi_21194759
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21194759:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_267_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_329 
    unless_null _lex_param_1, fallback4762
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4762:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5001, fb_tmp_329
    unless $I5001 goto if2120_else4760 
    set $P5002, fb_tmp_329["fatarrow"]
    set $P5004, $P5002
    goto if2120_end4761
  if2120_else4760:
    null $P5003
    set $P5004, $P5003
  if2120_end4761:
    unless_null $P5004, vivi_21214763
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21214763:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_268_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2028
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_330 
    unless_null _lex_param_1, fallback4766
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4766:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5001, fb_tmp_330
    unless $I5001 goto if2122_else4764 
    set $P5002, fb_tmp_330["colonpair"]
    set $P5004, $P5002
    goto if2122_end4765
  if2122_else4764:
    null $P5003
    set $P5004, $P5003
  if2122_end4765:
    unless_null $P5004, vivi_21234767
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21234767:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_269_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2029
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_331 
    unless_null _lex_param_1, fallback4770
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4770:
    set fb_tmp_331, _lex_param_1
    repr_defined $I5001, fb_tmp_331
    unless $I5001 goto if2124_else4768 
    set $P5002, fb_tmp_331["variable"]
    set $P5004, $P5002
    goto if2124_end4769
  if2124_else4768:
    null $P5003
    set $P5004, $P5003
  if2124_end4769:
    unless_null $P5004, vivi_21254771
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21254771:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_270_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2030
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_332 
    unless_null _lex_param_1, fallback4774
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4774:
    set fb_tmp_332, _lex_param_1
    repr_defined $I5001, fb_tmp_332
    unless $I5001 goto if2126_else4772 
    set $P5002, fb_tmp_332["package_declarator"]
    set $P5004, $P5002
    goto if2126_end4773
  if2126_else4772:
    null $P5003
    set $P5004, $P5003
  if2126_end4773:
    unless_null $P5004, vivi_21274775
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21274775:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_271_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2031
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_333 
    unless_null _lex_param_1, fallback4778
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4778:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5001, fb_tmp_333
    unless $I5001 goto if2128_else4776 
    set $P5002, fb_tmp_333["scope_declarator"]
    set $P5004, $P5002
    goto if2128_end4777
  if2128_else4776:
    null $P5003
    set $P5004, $P5003
  if2128_end4777:
    unless_null $P5004, vivi_21294779
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21294779:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_272_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2032
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_334 
    unless_null _lex_param_1, fallback4782
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4782:
    set fb_tmp_334, _lex_param_1
    repr_defined $I5001, fb_tmp_334
    unless $I5001 goto if2130_else4780 
    set $P5002, fb_tmp_334["routine_declarator"]
    set $P5004, $P5002
    goto if2130_end4781
  if2130_else4780:
    null $P5003
    set $P5004, $P5003
  if2130_end4781:
    unless_null $P5004, vivi_21314783
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21314783:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_273_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2033
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_335 
    unless_null _lex_param_1, fallback4786
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4786:
    set fb_tmp_335, _lex_param_1
    repr_defined $I5001, fb_tmp_335
    unless $I5001 goto if2132_else4784 
    set $P5002, fb_tmp_335["regex_declarator"]
    set $P5004, $P5002
    goto if2132_end4785
  if2132_else4784:
    null $P5003
    set $P5004, $P5003
  if2132_end4785:
    unless_null $P5004, vivi_21334787
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21334787:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_274_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2034
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_336 
    unless_null _lex_param_1, fallback4790
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4790:
    set fb_tmp_336, _lex_param_1
    repr_defined $I5001, fb_tmp_336
    unless $I5001 goto if2134_else4788 
    set $P5002, fb_tmp_336["statement_prefix"]
    set $P5004, $P5002
    goto if2134_end4789
  if2134_else4788:
    null $P5003
    set $P5004, $P5003
  if2134_end4789:
    unless_null $P5004, vivi_21354791
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21354791:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_275_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_337 
.annotate 'line', 2036
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    unless_null _lex_param_1, fallback4794
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4794:
    set fb_tmp_337, _lex_param_1
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if2136_else4792 
    set $P5003, fb_tmp_337["pblock"]
    set $P5005, $P5003
    goto if2136_end4793
  if2136_else4792:
    null $P5004
    set $P5005, $P5004
  if2136_end4793:
    unless_null $P5005, vivi_21374795
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_21374795:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_276_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2039
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2040
    unless_null _lex_param_1, fallback4798
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4798:
    set fb_tmp_338, _lex_param_1
    repr_defined $I5001, fb_tmp_338
    unless $I5001 goto if2138_else4796 
    set $P5003, fb_tmp_338["val"]
    set $P5005, $P5003
    goto if2138_end4797
  if2138_else4796:
    null $P5004
    set $P5005, $P5004
  if2138_end4797:
    unless_null $P5005, vivi_21394799
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_21394799:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2041
    unless_null _lex_param_1, fallback4802
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback4802:
    set fb_tmp_339, _lex_param_1
    repr_defined $I5002, fb_tmp_339
    unless $I5002 goto if2140_else4800 
    set $P5009, fb_tmp_339["key"]
    set $P5011, $P5009
    goto if2140_end4801
  if2140_else4800:
    null $P5010
    set $P5011, $P5010
  if2140_end4801:
    unless_null $P5011, vivi_21414803
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_21414803:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2042
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_277_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2045
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_458_1381281828.51527' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    unless_null _lex_param_1, fallback4808
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4808:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2143_else4806 
    set $P5002, fb_tmp_340["variable"]
    set $P5004, $P5002
    goto if2143_end4807
  if2143_else4806:
    null $P5003
    set $P5004, $P5003
  if2143_end4807:
    unless_null $P5004, vivi_21444809
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_21444809:
    unless $P5004 goto if2142_else4804 
.annotate 'line', 2046
.annotate 'line', 2047
    unless_null _lex_param_1, fallback4812
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback4812:
    set fb_tmp_341, _lex_param_1
    repr_defined $I5002, fb_tmp_341
    unless $I5002 goto if2145_else4810 
    set $P5007, fb_tmp_341["variable"]
    set $P5009, $P5007
    goto if2145_end4811
  if2145_else4810:
    null $P5008
    set $P5009, $P5008
  if2145_end4811:
    unless_null $P5009, vivi_21464813
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_21464813:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback4818
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback4818:
    set fb_tmp_343, _lex_param_1
    repr_defined $I5004, fb_tmp_343
    unless $I5004 goto if2148_else4816 
    set $P5013, fb_tmp_343["variable"]
    set $P5015, $P5013
    goto if2148_end4817
  if2148_else4816:
    null $P5014
    set $P5015, $P5014
  if2148_end4817:
    unless_null $P5015, vivi_21494819
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_21494819:
    set fb_tmp_342, $P5015
    repr_defined $I5003, fb_tmp_342
    unless $I5003 goto if2147_else4814 
    set $P5017, fb_tmp_342["desigilname"]
    set $P5019, $P5017
    goto if2147_end4815
  if2147_else4814:
    null $P5018
    set $P5019, $P5018
  if2147_end4815:
    unless_null $P5019, vivi_21504820
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_21504820:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2048
    unless_null _lex_param_1, fallback4823
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5021
  fallback4823:
    set fb_tmp_344, _lex_param_1
    repr_defined $I5005, fb_tmp_344
    unless $I5005 goto if2151_else4821 
    set $P5022, fb_tmp_344["variable"]
    set $P5024, $P5022
    goto if2151_end4822
  if2151_else4821:
    null $P5023
    set $P5024, $P5023
  if2151_end4822:
    unless_null $P5024, vivi_21524824
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_21524824:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2142_end4805
  if2142_else4804:
    .const 'Sub' $P5028 = 'cuid_458_1381281828.51527' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2142_end4805:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1381281828.51527") :anon :lex :outer("cuid_277_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2049
    .lex "$past", $P101 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4829
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback4829:
    set fb_tmp_345, $P5002
    repr_defined $I5001, fb_tmp_345
    unless $I5001 goto if2154_else4827 
    set $P5004, fb_tmp_345["circumfix"]
    set $P5006, $P5004
    goto if2154_end4828
  if2154_else4827:
    null $P5005
    set $P5006, $P5005
  if2154_end4828:
    unless_null $P5006, vivi_21554830
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_21554830:
    unless $P5006 goto if2153_else4825 
.annotate 'line', 2051
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4833
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  fallback4833:
    set fb_tmp_346, $P5008
    repr_defined $I5002, fb_tmp_346
    unless $I5002 goto if2156_else4831 
    set $P5010, fb_tmp_346["circumfix"]
    set $P5012, $P5010
    goto if2156_end4832
  if2156_else4831:
    null $P5011
    set $P5012, $P5011
  if2156_end4832:
    unless_null $P5012, vivi_21574834
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_21574834:
    $P5014 = $P5012."ast"()
    set $P5023, $P5014
    goto if2153_end4826
  if2153_else4825:
.annotate 'line', 2052
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    find_lex $P5016, "$/"
    unless_null $P5016, fallback4837
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  fallback4837:
    set fb_tmp_347, $P5016
    repr_defined $I5004, fb_tmp_347
    unless $I5004 goto if2158_else4835 
    set $P5018, fb_tmp_347["not"]
    set $P5020, $P5018
    goto if2158_end4836
  if2158_else4835:
    null $P5019
    set $P5020, $P5019
  if2158_end4836:
    unless_null $P5020, vivi_21594838
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_21594838:
    isfalse $I5003, $P5020
    $P5022 = $P5015."new"($I5003 :named("value"))
    set $P5023, $P5022
  if2153_end4826:
    set $P101, $P5023
.annotate 'line', 2053
    find_lex $P5024, "$/"
    unless_null $P5024, fallback4841
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  fallback4841:
    set fb_tmp_348, $P5024
    repr_defined $I5005, fb_tmp_348
    unless $I5005 goto if2160_else4839 
    set $P5026, fb_tmp_348["identifier"]
    set $P5028, $P5026
    goto if2160_end4840
  if2160_else4839:
    null $P5027
    set $P5028, $P5027
  if2160_end4840:
    unless_null $P5028, vivi_21614842
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_21614842:
    set $S5001, $P5028
    $P101."named"($S5001)
.annotate 'line', 2054
    find_dynamic_lex $P5030, "$/"
    $P5031 = $P5030."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_278_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2058
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_460_1381281828.51527' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4847
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback4847:
    set fb_tmp_349, _lex_param_1
    repr_defined $I5001, fb_tmp_349
    unless $I5001 goto if2163_else4845 
    set $P5003, fb_tmp_349["postcircumfix"]
    set $P5005, $P5003
    goto if2163_end4846
  if2163_else4845:
    null $P5004
    set $P5005, $P5004
  if2163_end4846:
    unless_null $P5005, vivi_21644848
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_21644848:
    unless $P5005 goto if2162_else4843 
.annotate 'line', 2060
.annotate 'line', 2061
    unless_null _lex_param_1, fallback4851
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5007
  fallback4851:
    set fb_tmp_350, _lex_param_1
    repr_defined $I5002, fb_tmp_350
    unless $I5002 goto if2165_else4849 
    set $P5008, fb_tmp_350["postcircumfix"]
    set $P5010, $P5008
    goto if2165_end4850
  if2165_else4849:
    null $P5009
    set $P5010, $P5009
  if2165_end4850:
    unless_null $P5010, vivi_21664852
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_21664852:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2062
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 84
.annotate 'line', 2063
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2162_end4844
  if2162_else4843:
    .const 'Sub' $P5017 = 'cuid_460_1381281828.51527' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2162_end4844:
.annotate 'line', 2144
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1381281828.51527") :anon :lex :outer("cuid_278_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2066
    .const 'Sub' $P5081 = 'cuid_459_1381281828.51527' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_463_1381281828.51527' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_464_1381281828.51527' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_465_1381281828.51527' 
    capture_lex $P5081 
    .lex "@name", $P101 
    .local pmc fb_tmp_351 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2067
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2168_else4855 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2168_end4856
  if2168_else4855:
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5007
  if2168_end4856:
    get_who $P5002, $P5008
    set fb_tmp_351, $P5002
    repr_defined $I5001, fb_tmp_351
    unless $I5001 goto if2167_else4853 
    set $P5009, fb_tmp_351["Compiler"]
    set $P5011, $P5009
    goto if2167_end4854
  if2167_else4853:
    null $P5010
    set $P5011, $P5010
  if2167_end4854:
    unless_null $P5011, vivi_21694857
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_21694857:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2170_else4858 
.annotate 'line', 2068
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4864
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  fallback4864:
    set fb_tmp_352, $P5015
    repr_defined $I5004, fb_tmp_352
    unless $I5004 goto if2172_else4862 
    set $P5017, fb_tmp_352["twigil"]
    set $P5019, $P5017
    goto if2172_end4863
  if2172_else4862:
    null $P5018
    set $P5019, $P5018
  if2172_end4863:
    unless_null $P5019, vivi_21734865
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_21734865:
    unless $P5019 goto if2171_end4861 
.annotate 'line', 2069
.annotate 'line', 2070
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2171_end4861:
.annotate 'line', 2072
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5080, $P5025
    goto if2170_end4859
  if2170_else4858:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback4870
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  fallback4870:
    set fb_tmp_353, $P5026
    repr_defined $I5006, fb_tmp_353
    unless $I5006 goto if2175_else4868 
    set $P5028, fb_tmp_353["twigil"]
    set $P5030, $P5028
    goto if2175_end4869
  if2175_else4868:
    null $P5029
    set $P5030, $P5029
  if2175_end4869:
    unless_null $P5030, vivi_21764871
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5030, $P5031
  vivi_21764871:
    set $S5002, $P5030
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2174_else4866 
    .const 'Sub' $P5032 = 'cuid_459_1381281828.51527' 
    capture_lex $P5032
    $P5033 = $P5032()
    set $P5079, $P5033
    goto if2174_end4867
  if2174_else4866:
    find_lex $P5034, "$/"
    unless_null $P5034, fallback4884
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  fallback4884:
    set fb_tmp_356, $P5034
    repr_defined $I5008, fb_tmp_356
    unless $I5008 goto if2182_else4882 
    set $P5036, fb_tmp_356["twigil"]
    set $P5038, $P5036
    goto if2182_end4883
  if2182_else4882:
    null $P5037
    set $P5038, $P5037
  if2182_end4883:
    unless_null $P5038, vivi_21834885
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5038, $P5039
  vivi_21834885:
    set $S5003, $P5038
    iseq $I5007, $S5003, "!"
    unless $I5007 goto if2181_else4880 
    .const 'Sub' $P5040 = 'cuid_463_1381281828.51527' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5078, $P5041
    goto if2181_end4881
  if2181_else4880:
    find_lex $P5042, "$/"
    unless_null $P5042, fallback4934
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5042, $P5043
  fallback4934:
    set fb_tmp_363, $P5042
    repr_defined $I5009, fb_tmp_363
    unless $I5009 goto if2208_else4932 
    set $P5044, fb_tmp_363["semilist"]
    set $P5046, $P5044
    goto if2208_end4933
  if2208_else4932:
    null $P5045
    set $P5046, $P5045
  if2208_end4933:
    unless_null $P5046, vivi_22094935
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5046, $P5047
  vivi_22094935:
    unless $P5046 goto if2207_else4930 
    .const 'Sub' $P5048 = 'cuid_464_1381281828.51527' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5077, $P5049
    goto if2207_end4931
  if2207_else4930:
.annotate 'line', 2129
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback4954
    nqp_get_sc_object $P5052, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5051, $P5052
    set fb_tmp_367, $P5051
    repr_defined $I5010, fb_tmp_367
    unless $I5010 goto if2219_else4955 
    set $P5053, fb_tmp_367["$W"]
    set $P5055, $P5053
    goto if2219_end4956
  if2219_else4955:
    null $P5054
    set $P5055, $P5054
  if2219_end4956:
    unless_null $P5055, vivi_22204957
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5055, $P5056
  vivi_22204957:
    unless_null $P5055, vivi_22214958
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_22214958:
    set $P5050, $P5055
  fallback4954:
    set fb_tmp_368, $P101
    repr_defined $I5011, fb_tmp_368
    unless $I5011 goto if2222_else4959 
    set $P5058, fb_tmp_368[0]
    set $P5060, $P5058
    goto if2222_end4960
  if2222_else4959:
    null $P5059
    set $P5060, $P5059
  if2222_end4960:
    unless_null $P5060, vivi_22234961
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5060, $P5061
  vivi_22234961:
    set $S5004, $P5060
    $P5062 = $P5050."is_package"($S5004)
    unless $P5062 goto if2218_else4952 
.annotate 'line', 2130
    find_lex $P5063, "$/"
    $P5064 = "&lexical_package_lookup"($P101, $P5063)
    store_lex "$past", $P5064
.annotate 'line', 2131
    find_lex $P5065, "$past"
    find_lex $P5066, "$/"
    unless_null $P5066, fallback4964
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5066, $P5067
  fallback4964:
    set fb_tmp_369, $P5066
    repr_defined $I5012, fb_tmp_369
    unless $I5012 goto if2224_else4962 
    set $P5068, fb_tmp_369["sigil"]
    set $P5070, $P5068
    goto if2224_end4963
  if2224_else4962:
    null $P5069
    set $P5070, $P5069
  if2224_end4963:
    unless_null $P5070, vivi_22254965
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5070, $P5071
  vivi_22254965:
    $P5072 = "&default_for"($P5070)
    $P5073 = $P5065."fallback"($P5072)
    set $P5076, $P5073
    goto if2218_end4953
  if2218_else4952:
    .const 'Sub' $P5074 = 'cuid_465_1381281828.51527' 
    capture_lex $P5074
    $P5075 = $P5074()
    set $P5076, $P5075
  if2218_end4953:
    set $P5077, $P5076
  if2207_end4931:
    set $P5078, $P5077
  if2181_end4881:
    set $P5079, $P5078
  if2174_end4867:
    set $P5080, $P5079
  if2170_end4859:
    .return ($P5080) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1381281828.51527") :anon :lex :outer("cuid_460_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2074
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2075
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2077
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback4874
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  fallback4874:
    set fb_tmp_354, $P5005
    repr_defined $I5001, fb_tmp_354
    unless $I5001 goto if2177_else4872 
    set $P5007, fb_tmp_354["sigil"]
    set $P5009, $P5007
    goto if2177_end4873
  if2177_else4872:
    null $P5008
    set $P5009, $P5008
  if2177_end4873:
    unless_null $P5009, vivi_21784875
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_21784875:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback4878
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  fallback4878:
    set fb_tmp_355, $P5011
    repr_defined $I5002, fb_tmp_355
    unless $I5002 goto if2179_else4876 
    set $P5013, fb_tmp_355["desigilname"]
    set $P5015, $P5013
    goto if2179_end4877
  if2179_else4876:
    null $P5014
    set $P5015, $P5014
  if2179_end4877:
    unless_null $P5015, vivi_21804879
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_21804879:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2078
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2080
    nqp_get_sc_object $P5021, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2082
    nqp_get_sc_object $P5026, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 84
.annotate 'line', 2083
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1381281828.51527") :anon :lex :outer("cuid_460_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2087
    .const 'Sub' $P5052 = 'cuid_462_1381281828.51527' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2088
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback4888
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5007, $P5008
    set fb_tmp_357, $P5007
    repr_defined $I5002, fb_tmp_357
    unless $I5002 goto if2185_else4889 
    set $P5009, fb_tmp_357["$PKGDECL"]
    set $P5011, $P5009
    goto if2185_end4890
  if2185_else4889:
    null $P5010
    set $P5011, $P5010
  if2185_end4890:
    unless_null $P5011, vivi_21864891
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_21864891:
    unless_null $P5011, vivi_21874892
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_21874892:
    set $P5006, $P5011
  fallback4888:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2184_else4886 
.annotate 'line', 2090
.annotate 'line', 2091
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2092
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback4893
    nqp_get_sc_object $P5018, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5017, $P5018
    set fb_tmp_358, $P5017
    repr_defined $I5003, fb_tmp_358
    unless $I5003 goto if2188_else4894 
    set $P5019, fb_tmp_358["$PACKAGE"]
    set $P5021, $P5019
    goto if2188_end4895
  if2188_else4894:
    null $P5020
    set $P5021, $P5020
  if2188_end4895:
    unless_null $P5021, vivi_21894896
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_21894896:
    unless_null $P5021, vivi_21904897
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_21904897:
    set $P5016, $P5021
  fallback4893:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2184_end4887
  if2184_else4886:
.annotate 'line', 2094
.annotate 'line', 2095
    nqp_get_sc_object $P5025, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback4898
    nqp_get_sc_object $P5028, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5027, $P5028
    set fb_tmp_359, $P5027
    repr_defined $I5004, fb_tmp_359
    unless $I5004 goto if2191_else4899 
    set $P5029, fb_tmp_359["$PACKAGE"]
    set $P5031, $P5029
    goto if2191_end4900
  if2191_else4899:
    null $P5030
    set $P5031, $P5030
  if2191_end4900:
    unless_null $P5031, vivi_21924901
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_21924901:
    unless_null $P5031, vivi_21934902
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_21934902:
    set $P5026, $P5031
  fallback4898:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2184_end4887:
.annotate 'line', 2097
    nqp_get_sc_object $P5035, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
.annotate 'line', 2099
    nqp_get_sc_object $P5036, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2100
    nqp_get_sc_object $P5037, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback4905
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5042, $P5043
    set fb_tmp_360, $P5042
    repr_defined $I5005, fb_tmp_360
    unless $I5005 goto if2195_else4906 
    set $P5044, fb_tmp_360["$IN_DECL"]
    set $P5046, $P5044
    goto if2195_end4907
  if2195_else4906:
    null $P5045
    set $P5046, $P5045
  if2195_end4907:
    unless_null $P5046, vivi_21964908
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5046, $P5047
  vivi_21964908:
    unless_null $P5046, vivi_21974909
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_21974909:
    set $P5041, $P5046
  fallback4905:
    set $P5051, $P5041
    if $P5041 goto unless2194_end4904 
    .const 'Sub' $P5049 = 'cuid_462_1381281828.51527' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2194_end4904:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1381281828.51527") :anon :lex :outer("cuid_463_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2105
    .const 'Sub' $P5036 = 'cuid_461_1381281828.51527' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2107
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback4910
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5007, $P5008
    set fb_tmp_361, $P5007
    repr_defined $I5001, fb_tmp_361
    unless $I5001 goto if2198_else4911 
    set $P5009, fb_tmp_361["$PACKAGE"]
    set $P5011, $P5009
    goto if2198_end4912
  if2198_else4911:
    null $P5010
    set $P5011, $P5010
  if2198_end4912:
    unless_null $P5011, vivi_21994913
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_21994913:
    unless_null $P5011, vivi_22004914
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_22004914:
    set $P5006, $P5011
  fallback4910:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback4915
    nqp_get_sc_object $P5016, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5015, $P5016
    set fb_tmp_362, $P5015
    repr_defined $I5002, fb_tmp_362
    unless $I5002 goto if2201_else4916 
    set $P5017, fb_tmp_362["$PACKAGE"]
    set $P5019, $P5017
    goto if2201_end4917
  if2201_else4916:
    null $P5018
    set $P5019, $P5018
  if2201_end4917:
    unless_null $P5019, vivi_22024918
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_22024918:
    unless_null $P5019, vivi_22034919
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_22034919:
    set $P5014, $P5019
  fallback4915:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers4922
    push_eh $P5024
  for_next4923:
    unless $P5004, for_done4925
    shift $P5025, $P5004
  for_redo4924:
    .const 'Sub' $P5023 = 'cuid_461_1381281828.51527' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next4923
  for_handlers4922:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next4923
    eq $P5024, .CONTROL_LOOP_REDO, for_redo4924
  for_done4925:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2205_else4926 
.annotate 'line', 2113
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2206_end4929 
.annotate 'line', 2114
.annotate 'line', 2115
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2206_end4929:
    set $P5035, $P5029
    goto if2205_end4927
  if2205_else4926:
.annotate 'line', 2118
.annotate 'line', 2119
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2205_end4927:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1381281828.51527") :anon :lex :outer("cuid_462_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2107
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2108
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2204_end4921 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2204_end4921:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1381281828.51527") :anon :lex :outer("cuid_460_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2123
    .lex "$name", $P101 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4940
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback4940:
    set fb_tmp_364, $P5002
    repr_defined $I5002, fb_tmp_364
    unless $I5002 goto if2211_else4938 
    set $P5004, fb_tmp_364["sigil"]
    set $P5006, $P5004
    goto if2211_end4939
  if2211_else4938:
    null $P5005
    set $P5006, $P5005
  if2211_end4939:
    unless_null $P5006, vivi_22124941
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_22124941:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2210_else4936 
    set $S5004, "list"
    goto if2210_end4937
  if2210_else4936:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4946
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  fallback4946:
    set fb_tmp_365, $P5008
    repr_defined $I5004, fb_tmp_365
    unless $I5004 goto if2214_else4944 
    set $P5010, fb_tmp_365["sigil"]
    set $P5012, $P5010
    goto if2214_end4945
  if2214_else4944:
    null $P5011
    set $P5012, $P5011
  if2214_end4945:
    unless_null $P5012, vivi_22154947
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_22154947:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2213_else4942 
    set $S5003, "hash"
    goto if2213_end4943
  if2213_else4942:
    set $S5003, "item"
  if2213_end4943:
    set $S5004, $S5003
  if2210_end4937:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2127
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    find_lex $P5016, "$/"
    unless_null $P5016, fallback4950
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  fallback4950:
    set fb_tmp_366, $P5016
    repr_defined $I5005, fb_tmp_366
    unless $I5005 goto if2216_else4948 
    set $P5018, fb_tmp_366["semilist"]
    set $P5020, $P5018
    goto if2216_end4949
  if2216_else4948:
    null $P5019
    set $P5020, $P5019
  if2216_end4949:
    unless_null $P5020, vivi_22174951
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_22174951:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1381281828.51527") :anon :lex :outer("cuid_460_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2133
    .lex "$name", $P101 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2134
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback4978
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5006, $P5007
    set fb_tmp_370, $P5006
    repr_defined $I5002, fb_tmp_370
    unless $I5002 goto if2232_else4979 
    set $P5008, fb_tmp_370["$IN_DECL"]
    set $P5010, $P5008
    goto if2232_end4980
  if2232_else4979:
    null $P5009
    set $P5010, $P5009
  if2232_end4980:
    unless_null $P5010, vivi_22334981
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_22334981:
    unless_null $P5010, vivi_22344982
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22344982:
    set $P5005, $P5010
  fallback4978:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2231_end4977 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2231_end4977:
    set $I5006, $I5004
    if $I5004 goto unless2230_end4975 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2230_end4975:
    set $I5008, $I5006
    if $I5006 goto unless2229_end4973 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2229_end4973:
    set $I5011, $I5008
    if $I5008 goto unless2228_end4971 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback4985
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  fallback4985:
    set fb_tmp_371, $P5013
    repr_defined $I5010, fb_tmp_371
    unless $I5010 goto if2235_else4983 
    set $P5015, fb_tmp_371["twigil"]
    set $P5017, $P5015
    goto if2235_end4984
  if2235_else4983:
    null $P5016
    set $P5017, $P5016
  if2235_end4984:
    unless_null $P5017, vivi_22364986
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_22364986:
    set $S5006, $P5017
    iseq $I5009, $S5006, "?"
    set $I5011, $I5009
  unless2228_end4971:
    box $P5029, $I5011
    set $P5028, $P5029
    if $I5011 goto unless2227_end4969 
.annotate 'line', 2136
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback4987
    nqp_get_sc_object $P5021, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5020, $P5021
    set fb_tmp_372, $P5020
    repr_defined $I5012, fb_tmp_372
    unless $I5012 goto if2237_else4988 
    set $P5022, fb_tmp_372["$W"]
    set $P5024, $P5022
    goto if2237_end4989
  if2237_else4988:
    null $P5023
    set $P5024, $P5023
  if2237_end4989:
    unless_null $P5024, vivi_22384990
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_22384990:
    unless_null $P5024, vivi_22394991
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_22394991:
    set $P5019, $P5024
  fallback4987:
    $P5027 = $P5019."is_lexical"($P101)
    set $P5028, $P5027
  unless2227_end4969:
    unless $P5028 goto if2226_else4966 
.annotate 'line', 2137
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5031 = $P5030."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5031
    set $P5035, $P5031
    goto if2226_end4967
  if2226_else4966:
.annotate 'line', 2139
.annotate 'line', 2140
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5034 = $P5033."panic"($S5007)
    set $P5035, $P5034
  if2226_end4967:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_279_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2147
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_373 
    unless_null _lex_param_1, fallback4994
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4994:
    set fb_tmp_373, _lex_param_1
    repr_defined $I5001, fb_tmp_373
    unless $I5001 goto if2240_else4992 
    set $P5002, fb_tmp_373["package_def"]
    set $P5004, $P5002
    goto if2240_end4993
  if2240_else4992:
    null $P5003
    set $P5004, $P5003
  if2240_end4993:
    unless_null $P5004, vivi_22414995
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_22414995:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_280_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2148
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_374 
    unless_null _lex_param_1, fallback4998
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback4998:
    set fb_tmp_374, _lex_param_1
    repr_defined $I5001, fb_tmp_374
    unless $I5001 goto if2242_else4996 
    set $P5002, fb_tmp_374["package_def"]
    set $P5004, $P5002
    goto if2242_end4997
  if2242_else4996:
    null $P5003
    set $P5004, $P5003
  if2242_end4997:
    unless_null $P5004, vivi_22434999
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_22434999:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_281_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2149
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_375 
    unless_null _lex_param_1, fallback5002
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5002:
    set fb_tmp_375, _lex_param_1
    repr_defined $I5001, fb_tmp_375
    unless $I5001 goto if2244_else5000 
    set $P5002, fb_tmp_375["package_def"]
    set $P5004, $P5002
    goto if2244_end5001
  if2244_else5000:
    null $P5003
    set $P5004, $P5003
  if2244_end5001:
    unless_null $P5004, vivi_22455003
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_22455003:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_282_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2150
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_376 
    unless_null _lex_param_1, fallback5006
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5006:
    set fb_tmp_376, _lex_param_1
    repr_defined $I5001, fb_tmp_376
    unless $I5001 goto if2246_else5004 
    set $P5002, fb_tmp_376["package_def"]
    set $P5004, $P5002
    goto if2246_end5005
  if2246_else5004:
    null $P5003
    set $P5004, $P5003
  if2246_end5005:
    unless_null $P5004, vivi_22475007
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_22475007:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_283_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2151
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_377 
    unless_null _lex_param_1, fallback5010
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5010:
    set fb_tmp_377, _lex_param_1
    repr_defined $I5001, fb_tmp_377
    unless $I5001 goto if2248_else5008 
    set $P5002, fb_tmp_377["package_def"]
    set $P5004, $P5002
    goto if2248_end5009
  if2248_else5008:
    null $P5003
    set $P5004, $P5003
  if2248_end5009:
    unless_null $P5004, vivi_22495011
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_22495011:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_284_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_378 
    unless_null _lex_param_1, fallback5014
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5014:
    set fb_tmp_378, _lex_param_1
    repr_defined $I5001, fb_tmp_378
    unless $I5001 goto if2250_else5012 
    set $P5002, fb_tmp_378["package_def"]
    set $P5004, $P5002
    goto if2250_end5013
  if2250_else5012:
    null $P5003
    set $P5004, $P5003
  if2250_end5013:
    unless_null $P5004, vivi_22515015
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_22515015:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_285_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2157
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5016
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_379, $P5004
    repr_defined $I5001, fb_tmp_379
    unless $I5001 goto if2252_else5017 
    set $P5006, fb_tmp_379["$W"]
    set $P5008, $P5006
    goto if2252_end5018
  if2252_else5017:
    null $P5007
    set $P5008, $P5007
  if2252_end5018:
    unless_null $P5008, vivi_22535019
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_22535019:
    unless_null $P5008, vivi_22545020
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22545020:
    set $P5003, $P5008
  fallback5016:
    unless_null _lex_param_1, fallback5025
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5011
  fallback5025:
    set fb_tmp_381, _lex_param_1
    repr_defined $I5003, fb_tmp_381
    unless $I5003 goto if2256_else5023 
    set $P5012, fb_tmp_381["metaclass"]
    set $P5014, $P5012
    goto if2256_end5024
  if2256_else5023:
    null $P5013
    set $P5014, $P5013
  if2256_end5024:
    unless_null $P5014, vivi_22575026
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_22575026:
    set fb_tmp_380, $P5014
    repr_defined $I5002, fb_tmp_380
    unless $I5002 goto if2255_else5021 
    set $P5016, fb_tmp_380["identifier"]
    set $P5018, $P5016
    goto if2255_end5022
  if2255_else5021:
    null $P5017
    set $P5018, $P5017
  if2255_end5022:
    unless_null $P5018, vivi_22585027
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_22585027:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2158
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5028
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set fb_tmp_382, $P5022
    repr_defined $I5004, fb_tmp_382
    unless $I5004 goto if2259_else5029 
    set $P5024, fb_tmp_382["$W"]
    set $P5026, $P5024
    goto if2259_end5030
  if2259_else5029:
    null $P5025
    set $P5026, $P5025
  if2259_end5030:
    unless_null $P5026, vivi_22605031
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_22605031:
    unless_null $P5026, vivi_22615032
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22615032:
    set $P5021, $P5026
  fallback5028:
    unless_null _lex_param_1, fallback5035
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5029
  fallback5035:
    set fb_tmp_383, _lex_param_1
    repr_defined $I5005, fb_tmp_383
    unless $I5005 goto if2262_else5033 
    set $P5030, fb_tmp_383["name"]
    set $P5032, $P5030
    goto if2262_end5034
  if2262_else5033:
    null $P5031
    set $P5032, $P5031
  if2262_end5034:
    unless_null $P5032, vivi_22635036
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5032, $P5033
  vivi_22635036:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5041
    nqp_get_sc_object $P5037, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5036, $P5037
    set fb_tmp_384, $P5036
    repr_defined $I5007, fb_tmp_384
    unless $I5007 goto if2266_else5042 
    set $P5038, fb_tmp_384["$SCOPE"]
    set $P5040, $P5038
    goto if2266_end5043
  if2266_else5042:
    null $P5039
    set $P5040, $P5039
  if2266_end5043:
    unless_null $P5040, vivi_22675044
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5041
  vivi_22675044:
    unless_null $P5040, vivi_22685045
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22685045:
    set $P5035, $P5040
  fallback5041:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2265_end5040 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5046
    nqp_get_sc_object $P5045, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5044, $P5045
    set fb_tmp_385, $P5044
    repr_defined $I5009, fb_tmp_385
    unless $I5009 goto if2269_else5047 
    set $P5046, fb_tmp_385["$SCOPE"]
    set $P5048, $P5046
    goto if2269_end5048
  if2269_else5047:
    null $P5047
    set $P5048, $P5047
  if2269_end5048:
    unless_null $P5048, vivi_22705049
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5048, $P5049
  vivi_22705049:
    unless_null $P5048, vivi_22715050
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22715050:
    set $P5043, $P5048
  fallback5046:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2265_end5040:
    unless $I5010 goto if2264_else5037 
.annotate 'line', 2161
.annotate 'line', 2162
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5051
    nqp_get_sc_object $P5053, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5052, $P5053
    set fb_tmp_386, $P5052
    repr_defined $I5011, fb_tmp_386
    unless $I5011 goto if2272_else5052 
    set $P5054, fb_tmp_386["$W"]
    set $P5056, $P5054
    goto if2272_end5053
  if2272_else5052:
    null $P5055
    set $P5056, $P5055
  if2272_end5053:
    unless_null $P5056, vivi_22735054
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5056, $P5057
  vivi_22735054:
    unless_null $P5056, vivi_22745055
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22745055:
    set $P5051, $P5056
  fallback5051:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5056
    nqp_get_sc_object $P5061, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5060, $P5061
    set fb_tmp_387, $P5060
    repr_defined $I5012, fb_tmp_387
    unless $I5012 goto if2275_else5057 
    set $P5062, fb_tmp_387["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2275_end5058
  if2275_else5057:
    null $P5063
    set $P5064, $P5063
  if2275_end5058:
    unless_null $P5064, vivi_22765059
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5064, $P5065
  vivi_22765059:
    unless_null $P5064, vivi_22775060
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_22775060:
    set $P5059, $P5064
  fallback5056:
    unless_null _lex_param_1, fallback5065
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5067
  fallback5065:
    set fb_tmp_389, _lex_param_1
    repr_defined $I5014, fb_tmp_389
    unless $I5014 goto if2279_else5063 
    set $P5068, fb_tmp_389["name"]
    set $P5070, $P5068
    goto if2279_end5064
  if2279_else5063:
    null $P5069
    set $P5070, $P5069
  if2279_end5064:
    unless_null $P5070, vivi_22805066
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5070, $P5071
  vivi_22805066:
    set fb_tmp_388, $P5070
    repr_defined $I5013, fb_tmp_388
    unless $I5013 goto if2278_else5061 
    set $P5072, fb_tmp_388["identifier"]
    set $P5074, $P5072
    goto if2278_end5062
  if2278_else5061:
    null $P5073
    set $P5074, $P5073
  if2278_end5062:
    unless_null $P5074, vivi_22815067
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5074, $P5075
  vivi_22815067:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5074
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5076
  fallback5074:
    set fb_tmp_391, _lex_param_1
    repr_defined $I5017, fb_tmp_391
    unless $I5017 goto if2284_else5072 
    set $P5077, fb_tmp_391["name"]
    set $P5079, $P5077
    goto if2284_end5073
  if2284_else5072:
    null $P5078
    set $P5079, $P5078
  if2284_end5073:
    unless_null $P5079, vivi_22855075
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5079, $P5080
  vivi_22855075:
    set fb_tmp_390, $P5079
    repr_defined $I5016, fb_tmp_390
    unless $I5016 goto if2283_else5070 
    set $P5081, fb_tmp_390["identifier"]
    set $P5083, $P5081
    goto if2283_end5071
  if2283_else5070:
    null $P5082
    set $P5083, $P5082
  if2283_end5071:
    unless_null $P5083, vivi_22865076
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5083, $P5084
  vivi_22865076:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2282_end5069 
.annotate 'line', 2163
.annotate 'line', 2164
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5077
    nqp_get_sc_object $P5087, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5086, $P5087
    set fb_tmp_392, $P5086
    repr_defined $I5018, fb_tmp_392
    unless $I5018 goto if2287_else5078 
    set $P5088, fb_tmp_392["$W"]
    set $P5090, $P5088
    goto if2287_end5079
  if2287_else5078:
    null $P5089
    set $P5090, $P5089
  if2287_end5079:
    unless_null $P5090, vivi_22885080
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5090, $P5091
  vivi_22885080:
    unless_null $P5090, vivi_22895081
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_22895081:
    set $P5085, $P5090
  fallback5077:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5082
    nqp_get_sc_object $P5095, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5094, $P5095
    set fb_tmp_393, $P5094
    repr_defined $I5019, fb_tmp_393
    unless $I5019 goto if2290_else5083 
    set $P5096, fb_tmp_393["$W"]
    set $P5098, $P5096
    goto if2290_end5084
  if2290_else5083:
    null $P5097
    set $P5098, $P5097
  if2290_end5084:
    unless_null $P5098, vivi_22915085
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5098, $P5099
  vivi_22915085:
    unless_null $P5098, vivi_22925086
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_22925086:
    set $P5093, $P5098
  fallback5082:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5093
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5102
  fallback5093:
    set fb_tmp_396, _lex_param_1
    repr_defined $I5022, fb_tmp_396
    unless $I5022 goto if2295_else5091 
    set $P5103, fb_tmp_396["name"]
    set $P5105, $P5103
    goto if2295_end5092
  if2295_else5091:
    null $P5104
    set $P5105, $P5104
  if2295_end5092:
    unless_null $P5105, vivi_22965094
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5105, $P5106
  vivi_22965094:
    set fb_tmp_395, $P5105
    repr_defined $I5021, fb_tmp_395
    unless $I5021 goto if2294_else5089 
    set $P5107, fb_tmp_395["identifier"]
    set $P5109, $P5107
    goto if2294_end5090
  if2294_else5089:
    null $P5108
    set $P5109, $P5108
  if2294_end5090:
    unless_null $P5109, vivi_22975095
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5109, $P5110
  vivi_22975095:
    set fb_tmp_394, $P5109
    repr_defined $I5020, fb_tmp_394
    unless $I5020 goto if2293_else5087 
    set $P5111, fb_tmp_394[0]
    set $P5113, $P5111
    goto if2293_end5088
  if2293_else5087:
    null $P5112
    set $P5113, $P5112
  if2293_end5088:
    unless_null $P5113, vivi_22985096
    nqp_get_sc_object $P5114, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5113, $P5114
  vivi_22985096:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2282_end5069:
    goto if2264_end5038
  if2264_else5037:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5099
    nqp_get_sc_object $P5120, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5119, $P5120
    set fb_tmp_397, $P5119
    repr_defined $I5024, fb_tmp_397
    unless $I5024 goto if2300_else5100 
    set $P5121, fb_tmp_397["$SCOPE"]
    set $P5123, $P5121
    goto if2300_end5101
  if2300_else5100:
    null $P5122
    set $P5123, $P5122
  if2300_end5101:
    unless_null $P5123, vivi_23015102
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5123, $P5124
  vivi_23015102:
    unless_null $P5123, vivi_23025103
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_23025103:
    set $P5118, $P5123
  fallback5099:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2299_else5097 
.annotate 'line', 2167
    unless_null _lex_param_1, fallback5110
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5126
  fallback5110:
    set fb_tmp_399, _lex_param_1
    repr_defined $I5027, fb_tmp_399
    unless $I5027 goto if2305_else5108 
    set $P5127, fb_tmp_399["name"]
    set $P5129, $P5127
    goto if2305_end5109
  if2305_else5108:
    null $P5128
    set $P5129, $P5128
  if2305_end5109:
    unless_null $P5129, vivi_23065111
    nqp_get_sc_object $P5130, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5129, $P5130
  vivi_23065111:
    set fb_tmp_398, $P5129
    repr_defined $I5026, fb_tmp_398
    unless $I5026 goto if2304_else5106 
    set $P5131, fb_tmp_398["identifier"]
    set $P5133, $P5131
    goto if2304_end5107
  if2304_else5106:
    null $P5132
    set $P5133, $P5132
  if2304_end5107:
    unless_null $P5133, vivi_23075112
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5133, $P5134
  vivi_23075112:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2303_end5105 
.annotate 'line', 2168
.annotate 'line', 2169
    unless_null _lex_param_1, fallback5115
    nqp_get_sc_object $P5135, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5135
  fallback5115:
    set fb_tmp_400, _lex_param_1
    repr_defined $I5028, fb_tmp_400
    unless $I5028 goto if2308_else5113 
    set $P5136, fb_tmp_400["name"]
    set $P5138, $P5136
    goto if2308_end5114
  if2308_else5113:
    null $P5137
    set $P5138, $P5137
  if2308_end5114:
    unless_null $P5138, vivi_23095116
    nqp_get_sc_object $P5139, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5138, $P5139
  vivi_23095116:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2303_end5105:
.annotate 'line', 2171
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5117
    nqp_get_sc_object $P5144, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5143, $P5144
    set fb_tmp_401, $P5143
    repr_defined $I5029, fb_tmp_401
    unless $I5029 goto if2310_else5118 
    set $P5145, fb_tmp_401["$W"]
    set $P5147, $P5145
    goto if2310_end5119
  if2310_else5118:
    null $P5146
    set $P5147, $P5146
  if2310_end5119:
    unless_null $P5147, vivi_23115120
    nqp_get_sc_object $P5148, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5147, $P5148
  vivi_23115120:
    unless_null $P5147, vivi_23125121
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23125121:
    set $P5142, $P5147
  fallback5117:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5122
    nqp_get_sc_object $P5152, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5151, $P5152
    set fb_tmp_402, $P5151
    repr_defined $I5030, fb_tmp_402
    unless $I5030 goto if2313_else5123 
    set $P5153, fb_tmp_402["$W"]
    set $P5155, $P5153
    goto if2313_end5124
  if2313_else5123:
    null $P5154
    set $P5155, $P5154
  if2313_end5124:
    unless_null $P5155, vivi_23145125
    nqp_get_sc_object $P5156, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5155, $P5156
  vivi_23145125:
    unless_null $P5155, vivi_23155126
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23155126:
    set $P5150, $P5155
  fallback5122:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5133
    nqp_get_sc_object $P5159, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5159
  fallback5133:
    set fb_tmp_405, _lex_param_1
    repr_defined $I5033, fb_tmp_405
    unless $I5033 goto if2318_else5131 
    set $P5160, fb_tmp_405["name"]
    set $P5162, $P5160
    goto if2318_end5132
  if2318_else5131:
    null $P5161
    set $P5162, $P5161
  if2318_end5132:
    unless_null $P5162, vivi_23195134
    nqp_get_sc_object $P5163, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5162, $P5163
  vivi_23195134:
    set fb_tmp_404, $P5162
    repr_defined $I5032, fb_tmp_404
    unless $I5032 goto if2317_else5129 
    set $P5164, fb_tmp_404["identifier"]
    set $P5166, $P5164
    goto if2317_end5130
  if2317_else5129:
    null $P5165
    set $P5166, $P5165
  if2317_end5130:
    unless_null $P5166, vivi_23205135
    nqp_get_sc_object $P5167, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5166, $P5167
  vivi_23205135:
    set fb_tmp_403, $P5166
    repr_defined $I5031, fb_tmp_403
    unless $I5031 goto if2316_else5127 
    set $P5168, fb_tmp_403[0]
    set $P5170, $P5168
    goto if2316_end5128
  if2316_else5127:
    null $P5169
    set $P5170, $P5169
  if2316_end5128:
    unless_null $P5170, vivi_23215136
    nqp_get_sc_object $P5171, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5170, $P5171
  vivi_23215136:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2299_end5098
  if2299_else5097:
.annotate 'line', 2173
.annotate 'line', 2174
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5137
    nqp_get_sc_object $P5176, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5175, $P5176
    set fb_tmp_406, $P5175
    repr_defined $I5034, fb_tmp_406
    unless $I5034 goto if2322_else5138 
    set $P5177, fb_tmp_406["$SCOPE"]
    set $P5179, $P5177
    goto if2322_end5139
  if2322_else5138:
    null $P5178
    set $P5179, $P5178
  if2322_end5139:
    unless_null $P5179, vivi_23235140
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5179, $P5180
  vivi_23235140:
    unless_null $P5179, vivi_23245141
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23245141:
    set $P5174, $P5179
  fallback5137:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2299_end5098:
  if2264_end5038:
.annotate 'line', 2177
    nqp_get_sc_object $P5184, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_286_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2180
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5165 = 'cuid_467_1381281828.51527' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_468_1381281828.51527' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_469_1381281828.51527' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_470_1381281828.51527' 
    capture_lex $P5165 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    unless_null _lex_param_1, fallback5146
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback5146:
    set fb_tmp_408, _lex_param_1
    repr_defined $I5002, fb_tmp_408
    unless $I5002 goto if2326_else5144 
    set $P5007, fb_tmp_408["name"]
    set $P5009, $P5007
    goto if2326_end5145
  if2326_else5144:
    null $P5008
    set $P5009, $P5008
  if2326_end5145:
    unless_null $P5009, vivi_23275147
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_23275147:
    set fb_tmp_407, $P5009
    repr_defined $I5001, fb_tmp_407
    unless $I5001 goto if2325_else5142 
    set $P5011, fb_tmp_407["identifier"]
    set $P5013, $P5011
    goto if2325_end5143
  if2325_else5142:
    null $P5012
    set $P5013, $P5012
  if2325_end5143:
    unless_null $P5013, vivi_23285148
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_23285148:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2183
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5151
    nqp_get_sc_object $P5019, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_45, $P5018
    set fb_tmp_410, pkg_viv_tmp_45
    repr_defined $I5004, fb_tmp_410
    unless $I5004 goto if2330_else5152 
    set $P5020, fb_tmp_410["%HOW"]
    set $P5022, $P5020
    goto if2330_end5153
  if2330_else5152:
    null $P5021
    set $P5022, $P5021
  if2330_end5153:
    unless_null $P5022, vivi_23315154
    new $P5023, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23315154:
    unless_null $P5022, vivi_23325155
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23325155:
    set $P5017, $P5022
  fallback5151:
    set fb_tmp_409, $P5017
    repr_defined $I5003, fb_tmp_409
    unless $I5003 goto if2329_else5149 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5156
    nqp_get_sc_object $P5028, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5027, $P5028
    set fb_tmp_411, $P5027
    repr_defined $I5005, fb_tmp_411
    unless $I5005 goto if2333_else5157 
    set $P5029, fb_tmp_411["$PKGDECL"]
    set $P5031, $P5029
    goto if2333_end5158
  if2333_else5157:
    null $P5030
    set $P5031, $P5030
  if2333_end5158:
    unless_null $P5031, vivi_23345159
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_23345159:
    unless_null $P5031, vivi_23355160
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23355160:
    set $P5026, $P5031
  fallback5156:
    set $S5002, $P5026
    set $P5025, fb_tmp_409[$S5002]
    set $P5035, $P5025
    goto if2329_end5150
  if2329_else5149:
    null $P5034
    set $P5035, $P5034
  if2329_end5150:
    unless_null $P5035, vivi_23365161
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5035, $P5036
  vivi_23365161:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5166
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5037
  fallback5166:
    set fb_tmp_412, _lex_param_1
    repr_defined $I5006, fb_tmp_412
    unless $I5006 goto if2338_else5164 
    set $P5038, fb_tmp_412["blockoid"]
    set $P5040, $P5038
    goto if2338_end5165
  if2338_else5164:
    null $P5039
    set $P5040, $P5039
  if2338_end5165:
    unless_null $P5040, vivi_23395167
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5041
  vivi_23395167:
    unless $P5040 goto if2337_else5162 
.annotate 'line', 2188
.annotate 'line', 2189
    unless_null _lex_param_1, fallback5170
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5042
  fallback5170:
    set fb_tmp_413, _lex_param_1
    repr_defined $I5007, fb_tmp_413
    unless $I5007 goto if2340_else5168 
    set $P5043, fb_tmp_413["blockoid"]
    set $P5045, $P5043
    goto if2340_end5169
  if2340_else5168:
    null $P5044
    set $P5045, $P5044
  if2340_end5169:
    unless_null $P5045, vivi_23415171
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  vivi_23415171:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2337_end5163
  if2337_else5162:
.annotate 'line', 2191
.annotate 'line', 2192
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5172
    nqp_get_sc_object $P5050, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5049, $P5050
    set fb_tmp_414, $P5049
    repr_defined $I5008, fb_tmp_414
    unless $I5008 goto if2342_else5173 
    set $P5051, fb_tmp_414["$W"]
    set $P5053, $P5051
    goto if2342_end5174
  if2342_else5173:
    null $P5052
    set $P5053, $P5052
  if2342_end5174:
    unless_null $P5053, vivi_23435175
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5053, $P5054
  vivi_23435175:
    unless_null $P5053, vivi_23445176
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23445176:
    set $P5048, $P5053
  fallback5172:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2193
    unless_null _lex_param_1, fallback5179
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5057
  fallback5179:
    set fb_tmp_415, _lex_param_1
    repr_defined $I5009, fb_tmp_415
    unless $I5009 goto if2345_else5177 
    set $P5058, fb_tmp_415["statementlist"]
    set $P5060, $P5058
    goto if2345_end5178
  if2345_else5177:
    null $P5059
    set $P5060, $P5059
  if2345_end5178:
    unless_null $P5060, vivi_23465180
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5060, $P5061
  vivi_23465180:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2337_end5163:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2348_end5184 
.annotate 'line', 2200
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2348_end5184:
    unless $P5065 goto if2347_else5181 
    .const 'Sub' $P5067 = 'cuid_467_1381281828.51527' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2347_end5182
  if2347_else5181:
.annotate 'line', 2215
.annotate 'line', 2216
    $P5069 = $P104."blocktype"("immediate")
  if2347_end5182:
    unless_null _lex_param_1, fallback5215
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5070
  fallback5215:
    set fb_tmp_421, _lex_param_1
    repr_defined $I5011, fb_tmp_421
    unless $I5011 goto if2363_else5213 
    set $P5071, fb_tmp_421["parent"]
    set $P5073, $P5071
    goto if2363_end5214
  if2363_else5213:
    null $P5072
    set $P5073, $P5072
  if2363_end5214:
    unless_null $P5073, vivi_23645216
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5073, $P5074
  vivi_23645216:
    unless $P5073 goto if2362_else5211 
    .const 'Sub' $P5075 = 'cuid_468_1381281828.51527' 
    capture_lex $P5075
    $P5076 = $P5075()
    goto if2362_end5212
  if2362_else5211:
    can $I5012, $P103, "set_default_parent"
    box $P5080, $I5012
    set $P5079, $P5080
    unless $I5012 goto if2383_end5248 
    .const 'Sub' $P5077 = 'cuid_469_1381281828.51527' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
  if2383_end5248:
  if2362_end5212:
    unless_null _lex_param_1, fallback5275
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5081
  fallback5275:
    set fb_tmp_432, _lex_param_1
    repr_defined $I5013, fb_tmp_432
    unless $I5013 goto if2398_else5273 
    set $P5082, fb_tmp_432["role"]
    set $P5084, $P5082
    goto if2398_end5274
  if2398_else5273:
    null $P5083
    set $P5084, $P5083
  if2398_end5274:
    unless_null $P5084, vivi_23995276
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5084, $P5085
  vivi_23995276:
    unless $P5084 goto if2397_end5272 
.annotate 'line', 2241
    unless_null _lex_param_1, fallback5279
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5089
  fallback5279:
    set fb_tmp_433, _lex_param_1
    repr_defined $I5014, fb_tmp_433
    unless $I5014 goto if2400_else5277 
    set $P5090, fb_tmp_433["role"]
    set $P5092, $P5090
    goto if2400_end5278
  if2400_else5277:
    null $P5091
    set $P5092, $P5091
  if2400_end5278:
    unless_null $P5092, vivi_24015280
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5092, $P5093
  vivi_24015280:
    set $P5086, $P5092
    iter $P5088, $P5092
  for_next5303:
    unless $P5088, for_done5305
    shift $P5095, $P5088
  for_redo5304:
    .const 'Sub' $P5094 = 'cuid_470_1381281828.51527' 
    capture_lex $P5094
    $P5086 = $P5094($P5095)
    goto for_next5303
  for_done5305:
  if2397_end5272:
.annotate 'line', 2259
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback5306
    nqp_get_sc_object $P5098, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5097, $P5098
    set fb_tmp_438, $P5097
    repr_defined $I5015, fb_tmp_438
    unless $I5015 goto if2416_else5307 
    set $P5099, fb_tmp_438["$W"]
    set $P5101, $P5099
    goto if2416_end5308
  if2416_else5307:
    null $P5100
    set $P5101, $P5100
  if2416_end5308:
    unless_null $P5101, vivi_24175309
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5101, $P5102
  vivi_24175309:
    unless_null $P5101, vivi_24185310
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_24185310:
    set $P5096, $P5101
  fallback5306:
    find_dynamic_lex $P5104, "$*PACKAGE"
    unless_null $P5104, fallback5311
    nqp_get_sc_object $P5106, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5105, $P5106
    set fb_tmp_439, $P5105
    repr_defined $I5016, fb_tmp_439
    unless $I5016 goto if2419_else5312 
    set $P5107, fb_tmp_439["$PACKAGE"]
    set $P5109, $P5107
    goto if2419_end5313
  if2419_else5312:
    null $P5108
    set $P5109, $P5108
  if2419_end5313:
    unless_null $P5109, vivi_24205314
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5109, $P5110
  vivi_24205314:
    unless_null $P5109, vivi_24215315
    die "Contextual $*PACKAGE not found"
    box $P5111, "Contextual $*PACKAGE not found"
    set $P5109, $P5111
  vivi_24215315:
    set $P5104, $P5109
  fallback5311:
    $P5096."pkg_compose"($P5104)
    find_dynamic_lex $P5112, "$*PKGDECL"
    unless_null $P5112, fallback5320
    nqp_get_sc_object $P5114, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5113, $P5114
    set fb_tmp_440, $P5113
    repr_defined $I5018, fb_tmp_440
    unless $I5018 goto if2424_else5321 
    set $P5115, fb_tmp_440["$PKGDECL"]
    set $P5117, $P5115
    goto if2424_end5322
  if2424_else5321:
    null $P5116
    set $P5117, $P5116
  if2424_end5322:
    unless_null $P5117, vivi_24255323
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5117, $P5118
  vivi_24255323:
    unless_null $P5117, vivi_24265324
    die "Contextual $*PKGDECL not found"
    box $P5119, "Contextual $*PKGDECL not found"
    set $P5117, $P5119
  vivi_24265324:
    set $P5112, $P5117
  fallback5320:
    set $S5003, $P5112
    iseq $I5017, $S5003, "grammar"
    set $I5021, $I5017
    unless $I5017 goto if2423_end5319 
    find_dynamic_lex $P5120, "$*PACKAGE"
    unless_null $P5120, fallback5325
    nqp_get_sc_object $P5122, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5121, $P5122
    set fb_tmp_441, $P5121
    repr_defined $I5020, fb_tmp_441
    unless $I5020 goto if2427_else5326 
    set $P5123, fb_tmp_441["$PACKAGE"]
    set $P5125, $P5123
    goto if2427_end5327
  if2427_else5326:
    null $P5124
    set $P5125, $P5124
  if2427_end5327:
    unless_null $P5125, vivi_24285328
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5125, $P5126
  vivi_24285328:
    unless_null $P5125, vivi_24295329
    die "Contextual $*PACKAGE not found"
    box $P5127, "Contextual $*PACKAGE not found"
    set $P5125, $P5127
  vivi_24295329:
    set $P5120, $P5125
  fallback5325:
    can $I5019, $P5120, "!precompute_nfas"
    set $I5021, $I5019
  if2423_end5319:
    unless $I5021 goto if2422_end5317 
.annotate 'line', 2262
.annotate 'line', 2263
    find_dynamic_lex $P5128, "$*PACKAGE"
    unless_null $P5128, fallback5330
    nqp_get_sc_object $P5130, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5129, $P5130
    set fb_tmp_442, $P5129
    repr_defined $I5022, fb_tmp_442
    unless $I5022 goto if2430_else5331 
    set $P5131, fb_tmp_442["$PACKAGE"]
    set $P5133, $P5131
    goto if2430_end5332
  if2430_else5331:
    null $P5132
    set $P5133, $P5132
  if2430_end5332:
    unless_null $P5133, vivi_24315333
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5133, $P5134
  vivi_24315333:
    unless_null $P5133, vivi_24325334
    die "Contextual $*PACKAGE not found"
    box $P5135, "Contextual $*PACKAGE not found"
    set $P5133, $P5135
  vivi_24325334:
    set $P5128, $P5133
  fallback5330:
    $P5136 = $P5128."!precompute_nfas"()
  if2422_end5317:
    unless_null _lex_param_1, fallback5339
    nqp_get_sc_object $P5137, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5137
  fallback5339:
    set fb_tmp_443, _lex_param_1
    repr_defined $I5023, fb_tmp_443
    unless $I5023 goto if2434_else5337 
    set $P5138, fb_tmp_443["export"]
    set $P5140, $P5138
    goto if2434_end5338
  if2434_else5337:
    null $P5139
    set $P5140, $P5139
  if2434_end5338:
    unless_null $P5140, vivi_24355340
    nqp_get_sc_object $P5141, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5140, $P5141
  vivi_24355340:
    unless $P5140 goto if2433_end5336 
.annotate 'line', 2267
    find_dynamic_lex $P5144, "$*EXPORT"
    unless_null $P5144, fallback5343
    nqp_get_sc_object $P5146, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5145, $P5146
    set fb_tmp_445, $P5145
    repr_defined $I5025, fb_tmp_445
    unless $I5025 goto if2437_else5344 
    set $P5147, fb_tmp_445["$EXPORT"]
    set $P5149, $P5147
    goto if2437_end5345
  if2437_else5344:
    null $P5148
    set $P5149, $P5148
  if2437_end5345:
    unless_null $P5149, vivi_24385346
    nqp_get_sc_object $P5150, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5149, $P5150
  vivi_24385346:
    unless_null $P5149, vivi_24395347
    die "Contextual $*EXPORT not found"
    box $P5151, "Contextual $*EXPORT not found"
    set $P5149, $P5151
  vivi_24395347:
    set $P5144, $P5149
  fallback5343:
    get_who $P5143, $P5144
    set fb_tmp_444, $P5143
    repr_defined $I5024, fb_tmp_444
    unless $I5024 goto if2436_else5341 
    set $P5152, fb_tmp_444["DEFAULT"]
    set $P5154, $P5152
    goto if2436_end5342
  if2436_else5341:
    null $P5153
    set $P5154, $P5153
  if2436_end5342:
    unless_null $P5154, vivi_24405348
    nqp_get_sc_object $P5155, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5154, $P5155
  vivi_24405348:
    get_who $P5142, $P5154
    set $S5004, $P102
    find_dynamic_lex $P5156, "$*PACKAGE"
    unless_null $P5156, fallback5349
    nqp_get_sc_object $P5158, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5157, $P5158
    set fb_tmp_446, $P5157
    repr_defined $I5026, fb_tmp_446
    unless $I5026 goto if2441_else5350 
    set $P5159, fb_tmp_446["$PACKAGE"]
    set $P5161, $P5159
    goto if2441_end5351
  if2441_else5350:
    null $P5160
    set $P5161, $P5160
  if2441_end5351:
    unless_null $P5161, vivi_24425352
    nqp_get_sc_object $P5162, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5161, $P5162
  vivi_24425352:
    unless_null $P5161, vivi_24435353
    die "Contextual $*PACKAGE not found"
    box $P5163, "Contextual $*PACKAGE not found"
    set $P5161, $P5163
  vivi_24435353:
    set $P5156, $P5161
  fallback5349:
    set $P5142[$S5004], $P5156
  if2433_end5336:
.annotate 'line', 2271
    $P5164 = _lex_param_1."!make"($P104)
    .return ($P5164) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1381281828.51527") :anon :lex :outer("cuid_286_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2200
    .const 'Sub' $P5051 = 'cuid_466_1381281828.51527' 
    capture_lex $P5051 
    .lex "$params", $P101 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2201
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration_static")
.annotate 'line', 2202
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 2203
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5189
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  fallback5189:
    set fb_tmp_416, $P5007
    repr_defined $I5001, fb_tmp_416
    unless $I5001 goto if2350_else5187 
    set $P5009, fb_tmp_416["role_params"]
    set $P5011, $P5009
    goto if2350_end5188
  if2350_else5187:
    null $P5010
    set $P5011, $P5010
  if2350_end5188:
    unless_null $P5011, vivi_23515190
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_23515190:
    unless $P5011 goto if2349_end5186 
.annotate 'line', 2205
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5195
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  fallback5195:
    set fb_tmp_418, $P5016
    repr_defined $I5003, fb_tmp_418
    unless $I5003 goto if2353_else5193 
    set $P5018, fb_tmp_418["role_params"]
    set $P5020, $P5018
    goto if2353_end5194
  if2353_else5193:
    null $P5019
    set $P5020, $P5019
  if2353_end5194:
    unless_null $P5020, vivi_23545196
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_23545196:
    set fb_tmp_417, $P5020
    repr_defined $I5002, fb_tmp_417
    unless $I5002 goto if2352_else5191 
    set $P5022, fb_tmp_417["variable"]
    set $P5024, $P5022
    goto if2352_end5192
  if2352_else5191:
    null $P5023
    set $P5024, $P5023
  if2352_end5192:
    unless_null $P5024, vivi_23555197
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_23555197:
    set $P5013, $P5024
    iter $P5015, $P5024
  for_next5198:
    unless $P5015, for_done5200
    shift $P5027, $P5015
  for_redo5199:
    .const 'Sub' $P5026 = 'cuid_466_1381281828.51527' 
    capture_lex $P5026
    $P5013 = $P5026($P5027)
    goto for_next5198
  for_done5200:
  if2349_end5186:
.annotate 'line', 2210
    find_lex $P5028, "$past"
    $P5028."unshift"($P101)
.annotate 'line', 2211
    find_lex $P5029, "$past"
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5031 = $P5030."new"("curlexpad" :named("op"))
    $P5029."push"($P5031)
.annotate 'line', 2212
    find_lex $P5032, "$past"
    $P5032."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2213
    find_dynamic_lex $P5033, "$*W"
    unless_null $P5033, fallback5201
    nqp_get_sc_object $P5035, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5034, $P5035
    set fb_tmp_419, $P5034
    repr_defined $I5004, fb_tmp_419
    unless $I5004 goto if2356_else5202 
    set $P5036, fb_tmp_419["$W"]
    set $P5038, $P5036
    goto if2356_end5203
  if2356_else5202:
    null $P5037
    set $P5038, $P5037
  if2356_end5203:
    unless_null $P5038, vivi_23575204
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5038, $P5039
  vivi_23575204:
    unless_null $P5038, vivi_23585205
    die "Contextual $*W not found"
    box $P5040, "Contextual $*W not found"
    set $P5038, $P5040
  vivi_23585205:
    set $P5033, $P5038
  fallback5201:
    find_dynamic_lex $P5041, "$*PACKAGE"
    unless_null $P5041, fallback5206
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5042, $P5043
    set fb_tmp_420, $P5042
    repr_defined $I5005, fb_tmp_420
    unless $I5005 goto if2359_else5207 
    set $P5044, fb_tmp_420["$PACKAGE"]
    set $P5046, $P5044
    goto if2359_end5208
  if2359_else5207:
    null $P5045
    set $P5046, $P5045
  if2359_end5208:
    unless_null $P5046, vivi_23605209
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5046, $P5047
  vivi_23605209:
    unless_null $P5046, vivi_23615210
    die "Contextual $*PACKAGE not found"
    box $P5048, "Contextual $*PACKAGE not found"
    set $P5046, $P5048
  vivi_23615210:
    set $P5041, $P5046
  fallback5206:
    find_lex $P5049, "$past"
    $P5050 = $P5033."pkg_set_body_block"($P5041, $P5049)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1381281828.51527") :anon :lex :outer("cuid_467_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2206
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2207
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1381281828.51527") :anon :lex :outer("cuid_286_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2220
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_23735230
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2223
.annotate 'line', 2224
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5217
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_422, $P5004
    repr_defined $I5001, fb_tmp_422
    unless $I5001 goto if2365_else5218 
    set $P5006, fb_tmp_422["$W"]
    set $P5008, $P5006
    goto if2365_end5219
  if2365_else5218:
    null $P5007
    set $P5008, $P5007
  if2365_end5219:
    unless_null $P5008, vivi_23665220
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_23665220:
    unless_null $P5008, vivi_23675221
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23675221:
    set $P5003, $P5008
  fallback5217:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5226
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  fallback5226:
    set fb_tmp_424, $P5012
    repr_defined $I5003, fb_tmp_424
    unless $I5003 goto if2369_else5224 
    set $P5014, fb_tmp_424["parent"]
    set $P5016, $P5014
    goto if2369_end5225
  if2369_else5224:
    null $P5015
    set $P5016, $P5015
  if2369_end5225:
    unless_null $P5016, vivi_23705227
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_23705227:
    set fb_tmp_423, $P5016
    repr_defined $I5002, fb_tmp_423
    unless $I5002 goto if2368_else5222 
    set $P5018, fb_tmp_423["identifier"]
    set $P5020, $P5018
    goto if2368_end5223
  if2368_else5222:
    null $P5019
    set $P5020, $P5019
  if2368_end5223:
    unless_null $P5020, vivi_23715228
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_23715228:
    repr_clone $P5011, $P5020
    $P5022 = $P5003."find_sym"($P5011)
    set $P101, $P5022
    box $P5023, 1
    set $P102, $P5023
    set $P5025, $P102
    pop_eh 
    goto skip_handler_23725229
  catch_handler_23735230:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_23725229
  skip_handler_23725229:
    unless $P102 goto if2374_else5231 
.annotate 'line', 2227
.annotate 'line', 2228
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback5233
    nqp_get_sc_object $P5028, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5027, $P5028
    set fb_tmp_425, $P5027
    repr_defined $I5004, fb_tmp_425
    unless $I5004 goto if2375_else5234 
    set $P5029, fb_tmp_425["$W"]
    set $P5031, $P5029
    goto if2375_end5235
  if2375_else5234:
    null $P5030
    set $P5031, $P5030
  if2375_end5235:
    unless_null $P5031, vivi_23765236
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_23765236:
    unless_null $P5031, vivi_23775237
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_23775237:
    set $P5026, $P5031
  fallback5233:
    find_dynamic_lex $P5034, "$*PACKAGE"
    unless_null $P5034, fallback5238
    nqp_get_sc_object $P5036, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5035, $P5036
    set fb_tmp_426, $P5035
    repr_defined $I5005, fb_tmp_426
    unless $I5005 goto if2378_else5239 
    set $P5037, fb_tmp_426["$PACKAGE"]
    set $P5039, $P5037
    goto if2378_end5240
  if2378_else5239:
    null $P5038
    set $P5039, $P5038
  if2378_end5240:
    unless_null $P5039, vivi_23795241
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5039, $P5040
  vivi_23795241:
    unless_null $P5039, vivi_23805242
    die "Contextual $*PACKAGE not found"
    box $P5041, "Contextual $*PACKAGE not found"
    set $P5039, $P5041
  vivi_23805242:
    set $P5034, $P5039
  fallback5238:
    $P5042 = $P5026."pkg_add_parent_or_role"($P5034, "add_parent", $P101)
    set $P5052, $P5042
    goto if2374_end5232
  if2374_else5231:
.annotate 'line', 2230
.annotate 'line', 2231
    find_lex $P5043, "$/"
    $P5044 = $P5043."CURSOR"()
    find_lex $P5045, "$/"
    unless_null $P5045, fallback5245
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  fallback5245:
    set fb_tmp_427, $P5045
    repr_defined $I5006, fb_tmp_427
    unless $I5006 goto if2381_else5243 
    set $P5047, fb_tmp_427["parent"]
    set $P5049, $P5047
    goto if2381_end5244
  if2381_else5243:
    null $P5048
    set $P5049, $P5048
  if2381_end5244:
    unless_null $P5049, vivi_23825246
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_23825246:
    set $S5003, $P5049
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5051 = $P5044."panic"($S5001)
    set $P5052, $P5051
  if2374_end5232:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1381281828.51527") :anon :lex :outer("cuid_286_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2234
    .lex "$default", $P101 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5251
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_428, $P5003
    repr_defined $I5002, fb_tmp_428
    unless $I5002 goto if2385_else5252 
    set $P5005, fb_tmp_428["$PKGDECL"]
    set $P5007, $P5005
    goto if2385_end5253
  if2385_else5252:
    null $P5006
    set $P5007, $P5006
  if2385_end5253:
    unless_null $P5007, vivi_23865254
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_23865254:
    unless_null $P5007, vivi_23875255
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_23875255:
    set $P5002, $P5007
  fallback5251:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2384_else5249 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2384_end5250
  if2384_else5249:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2384_end5250:
    set $P101, $P5014
.annotate 'line', 2236
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5256
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5016, $P5017
    set fb_tmp_429, $P5016
    repr_defined $I5003, fb_tmp_429
    unless $I5003 goto if2388_else5257 
    set $P5018, fb_tmp_429["$W"]
    set $P5020, $P5018
    goto if2388_end5258
  if2388_else5257:
    null $P5019
    set $P5020, $P5019
  if2388_end5258:
    unless_null $P5020, vivi_23895259
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_23895259:
    unless_null $P5020, vivi_23905260
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_23905260:
    set $P5015, $P5020
  fallback5256:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5261
    nqp_get_sc_object $P5025, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5024, $P5025
    set fb_tmp_430, $P5024
    repr_defined $I5004, fb_tmp_430
    unless $I5004 goto if2391_else5262 
    set $P5026, fb_tmp_430["$PACKAGE"]
    set $P5028, $P5026
    goto if2391_end5263
  if2391_else5262:
    null $P5027
    set $P5028, $P5027
  if2391_end5263:
    unless_null $P5028, vivi_23925264
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_23925264:
    unless_null $P5028, vivi_23935265
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_23935265:
    set $P5023, $P5028
  fallback5261:
.annotate 'line', 2237
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5266
    nqp_get_sc_object $P5033, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5032, $P5033
    set fb_tmp_431, $P5032
    repr_defined $I5005, fb_tmp_431
    unless $I5005 goto if2394_else5267 
    set $P5034, fb_tmp_431["$W"]
    set $P5036, $P5034
    goto if2394_end5268
  if2394_else5267:
    null $P5035
    set $P5036, $P5035
  if2394_end5268:
    unless_null $P5036, vivi_23955269
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5036, $P5037
  vivi_23955269:
    unless_null $P5036, vivi_23965270
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_23965270:
    set $P5031, $P5036
  fallback5266:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1381281828.51527") :anon :lex :outer("cuid_286_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2242
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24085290
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2245
.annotate 'line', 2246
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5281
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_434, $P5004
    repr_defined $I5001, fb_tmp_434
    unless $I5001 goto if2402_else5282 
    set $P5006, fb_tmp_434["$W"]
    set $P5008, $P5006
    goto if2402_end5283
  if2402_else5282:
    null $P5007
    set $P5008, $P5007
  if2402_end5283:
    unless_null $P5008, vivi_24035284
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_24035284:
    unless_null $P5008, vivi_24045285
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24045285:
    set $P5003, $P5008
  fallback5281:
    set fb_tmp_435, _lex_param_0
    repr_defined $I5002, fb_tmp_435
    unless $I5002 goto if2405_else5286 
    set $P5012, fb_tmp_435["identifier"]
    set $P5014, $P5012
    goto if2405_end5287
  if2405_else5286:
    null $P5013
    set $P5014, $P5013
  if2405_end5287:
    unless_null $P5014, vivi_24065288
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_24065288:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24075289
  catch_handler_24085290:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24075289
  skip_handler_24075289:
    unless $P102 goto if2409_else5291 
.annotate 'line', 2249
.annotate 'line', 2250
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5293
    nqp_get_sc_object $P5022, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5021, $P5022
    set fb_tmp_436, $P5021
    repr_defined $I5003, fb_tmp_436
    unless $I5003 goto if2410_else5294 
    set $P5023, fb_tmp_436["$W"]
    set $P5025, $P5023
    goto if2410_end5295
  if2410_else5294:
    null $P5024
    set $P5025, $P5024
  if2410_end5295:
    unless_null $P5025, vivi_24115296
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5025, $P5026
  vivi_24115296:
    unless_null $P5025, vivi_24125297
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24125297:
    set $P5020, $P5025
  fallback5293:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5298
    nqp_get_sc_object $P5030, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5029, $P5030
    set fb_tmp_437, $P5029
    repr_defined $I5004, fb_tmp_437
    unless $I5004 goto if2413_else5299 
    set $P5031, fb_tmp_437["$PACKAGE"]
    set $P5033, $P5031
    goto if2413_end5300
  if2413_else5299:
    null $P5032
    set $P5033, $P5032
  if2413_end5300:
    unless_null $P5033, vivi_24145301
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5034
  vivi_24145301:
    unless_null $P5033, vivi_24155302
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24155302:
    set $P5028, $P5033
  fallback5298:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2409_end5292
  if2409_else5291:
.annotate 'line', 2252
.annotate 'line', 2253
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2409_end5292:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_287_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2274
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_471_1381281828.51527' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_447 
    unless_null _lex_param_1, fallback5356
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5004
  fallback5356:
    set fb_tmp_447, _lex_param_1
    repr_defined $I5001, fb_tmp_447
    unless $I5001 goto if2444_else5354 
    set $P5005, fb_tmp_447["variable"]
    set $P5007, $P5005
    goto if2444_end5355
  if2444_else5354:
    null $P5006
    set $P5007, $P5006
  if2444_end5355:
    unless_null $P5007, vivi_24455357
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_24455357:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5363:
    unless $P5003, for_done5365
    shift $P5010, $P5003
  for_redo5364:
    .const 'Sub' $P5009 = 'cuid_471_1381281828.51527' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5363
  for_done5365:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1381281828.51527") :anon :lex :outer("cuid_287_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2275
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_448 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2276
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2277
    $P101."scope"("lexical")
.annotate 'line', 2278
    $P101."decl"("param")
.annotate 'line', 2279
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5358
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_448, $P5004
    repr_defined $I5001, fb_tmp_448
    unless $I5001 goto if2446_else5359 
    set $P5006, fb_tmp_448["$W"]
    set $P5008, $P5006
    goto if2446_end5360
  if2446_else5359:
    null $P5007
    set $P5008, $P5007
  if2446_end5360:
    unless_null $P5008, vivi_24475361
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_24475361:
    unless_null $P5008, vivi_24485362
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24485362:
    set $P5003, $P5008
  fallback5358:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_288_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2283
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_449 
    unless_null _lex_param_1, fallback5368
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5368:
    set fb_tmp_449, _lex_param_1
    repr_defined $I5001, fb_tmp_449
    unless $I5001 goto if2449_else5366 
    set $P5002, fb_tmp_449["scoped"]
    set $P5004, $P5002
    goto if2449_end5367
  if2449_else5366:
    null $P5003
    set $P5004, $P5003
  if2449_end5367:
    unless_null $P5004, vivi_24505369
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24505369:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_289_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2284
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_450 
    unless_null _lex_param_1, fallback5372
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5372:
    set fb_tmp_450, _lex_param_1
    repr_defined $I5001, fb_tmp_450
    unless $I5001 goto if2451_else5370 
    set $P5002, fb_tmp_450["scoped"]
    set $P5004, $P5002
    goto if2451_end5371
  if2451_else5370:
    null $P5003
    set $P5004, $P5003
  if2451_end5371:
    unless_null $P5004, vivi_24525373
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24525373:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_290_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_451 
    unless_null _lex_param_1, fallback5376
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5376:
    set fb_tmp_451, _lex_param_1
    repr_defined $I5001, fb_tmp_451
    unless $I5001 goto if2453_else5374 
    set $P5002, fb_tmp_451["scoped"]
    set $P5004, $P5002
    goto if2453_end5375
  if2453_else5374:
    null $P5003
    set $P5004, $P5003
  if2453_end5375:
    unless_null $P5004, vivi_24545377
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24545377:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_291_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
.annotate 'line', 2288
    unless_null _lex_param_1, fallback5382
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5382:
    set fb_tmp_452, _lex_param_1
    repr_defined $I5001, fb_tmp_452
    unless $I5001 goto if2456_else5380 
    set $P5002, fb_tmp_452["declarator"]
    set $P5004, $P5002
    goto if2456_end5381
  if2456_else5380:
    null $P5003
    set $P5004, $P5003
  if2456_end5381:
    unless_null $P5004, vivi_24575383
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24575383:
    unless $P5004 goto if2455_else5378 
    unless_null _lex_param_1, fallback5386
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback5386:
    set fb_tmp_453, _lex_param_1
    repr_defined $I5002, fb_tmp_453
    unless $I5002 goto if2458_else5384 
    set $P5007, fb_tmp_453["declarator"]
    set $P5009, $P5007
    goto if2458_end5385
  if2458_else5384:
    null $P5008
    set $P5009, $P5008
  if2458_end5385:
    unless_null $P5009, vivi_24595387
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_24595387:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2455_end5379
  if2455_else5378:
    unless_null _lex_param_1, fallback5392
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback5392:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5003, fb_tmp_454
    unless $I5003 goto if2461_else5390 
    set $P5013, fb_tmp_454["multi_declarator"]
    set $P5015, $P5013
    goto if2461_end5391
  if2461_else5390:
    null $P5014
    set $P5015, $P5014
  if2461_end5391:
    unless_null $P5015, vivi_24625393
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_24625393:
    unless $P5015 goto if2460_else5388 
.annotate 'line', 2289
    unless_null _lex_param_1, fallback5396
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5017
  fallback5396:
    set fb_tmp_455, _lex_param_1
    repr_defined $I5004, fb_tmp_455
    unless $I5004 goto if2463_else5394 
    set $P5018, fb_tmp_455["multi_declarator"]
    set $P5020, $P5018
    goto if2463_end5395
  if2463_else5394:
    null $P5019
    set $P5020, $P5019
  if2463_end5395:
    unless_null $P5020, vivi_24645397
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_24645397:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2460_end5389
  if2460_else5388:
.annotate 'line', 2290
    unless_null _lex_param_1, fallback5400
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5023
  fallback5400:
    set fb_tmp_456, _lex_param_1
    repr_defined $I5005, fb_tmp_456
    unless $I5005 goto if2465_else5398 
    set $P5024, fb_tmp_456["package_declarator"]
    set $P5026, $P5024
    goto if2465_end5399
  if2465_else5398:
    null $P5025
    set $P5026, $P5025
  if2465_end5399:
    unless_null $P5026, vivi_24665401
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_24665401:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2460_end5389:
    set $P5030, $P5029
  if2455_end5379:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_292_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2293
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
.annotate 'line', 2294
    unless_null _lex_param_1, fallback5406
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5406:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5001, fb_tmp_457
    unless $I5001 goto if2468_else5404 
    set $P5002, fb_tmp_457["routine_declarator"]
    set $P5004, $P5002
    goto if2468_end5405
  if2468_else5404:
    null $P5003
    set $P5004, $P5003
  if2468_end5405:
    unless_null $P5004, vivi_24695407
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24695407:
    unless $P5004 goto if2467_else5402 
.annotate 'line', 2295
    unless_null _lex_param_1, fallback5410
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback5410:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5002, fb_tmp_458
    unless $I5002 goto if2470_else5408 
    set $P5007, fb_tmp_458["routine_declarator"]
    set $P5009, $P5007
    goto if2470_end5409
  if2470_else5408:
    null $P5008
    set $P5009, $P5008
  if2470_end5409:
    unless_null $P5009, vivi_24715411
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_24715411:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2467_end5403
  if2467_else5402:
.annotate 'line', 2296
    unless_null _lex_param_1, fallback5414
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback5414:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5003, fb_tmp_459
    unless $I5003 goto if2472_else5412 
    set $P5013, fb_tmp_459["variable_declarator"]
    set $P5015, $P5013
    goto if2472_end5413
  if2472_else5412:
    null $P5014
    set $P5015, $P5014
  if2472_end5413:
    unless_null $P5015, vivi_24735415
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_24735415:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2467_end5403:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_293_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2299
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
    .local pmc fb_tmp_462 
    unless_null _lex_param_1, fallback5420
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5420:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5001, fb_tmp_460
    unless $I5001 goto if2475_else5418 
    set $P5002, fb_tmp_460["declarator"]
    set $P5004, $P5002
    goto if2475_end5419
  if2475_else5418:
    null $P5003
    set $P5004, $P5003
  if2475_end5419:
    unless_null $P5004, vivi_24765421
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24765421:
    unless $P5004 goto if2474_else5416 
    unless_null _lex_param_1, fallback5424
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback5424:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5002, fb_tmp_461
    unless $I5002 goto if2477_else5422 
    set $P5007, fb_tmp_461["declarator"]
    set $P5009, $P5007
    goto if2477_end5423
  if2477_else5422:
    null $P5008
    set $P5009, $P5008
  if2477_end5423:
    unless_null $P5009, vivi_24785425
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_24785425:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2474_end5417
  if2474_else5416:
    unless_null _lex_param_1, fallback5428
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback5428:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5003, fb_tmp_462
    unless $I5003 goto if2479_else5426 
    set $P5013, fb_tmp_462["routine_def"]
    set $P5015, $P5013
    goto if2479_end5427
  if2479_else5426:
    null $P5014
    set $P5015, $P5014
  if2479_end5427:
    unless_null $P5015, vivi_24805429
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_24805429:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2474_end5417:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_294_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    unless_null _lex_param_1, fallback5434
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5434:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5001, fb_tmp_463
    unless $I5001 goto if2482_else5432 
    set $P5002, fb_tmp_463["declarator"]
    set $P5004, $P5002
    goto if2482_end5433
  if2482_else5432:
    null $P5003
    set $P5004, $P5003
  if2482_end5433:
    unless_null $P5004, vivi_24835435
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24835435:
    unless $P5004 goto if2481_else5430 
    unless_null _lex_param_1, fallback5438
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback5438:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5002, fb_tmp_464
    unless $I5002 goto if2484_else5436 
    set $P5007, fb_tmp_464["declarator"]
    set $P5009, $P5007
    goto if2484_end5437
  if2484_else5436:
    null $P5008
    set $P5009, $P5008
  if2484_end5437:
    unless_null $P5009, vivi_24855439
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_24855439:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2481_end5431
  if2481_else5430:
    unless_null _lex_param_1, fallback5442
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback5442:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5003, fb_tmp_465
    unless $I5003 goto if2486_else5440 
    set $P5013, fb_tmp_465["routine_def"]
    set $P5015, $P5013
    goto if2486_end5441
  if2486_else5440:
    null $P5014
    set $P5015, $P5014
  if2486_end5441:
    unless_null $P5015, vivi_24875443
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_24875443:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2481_end5431:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_295_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_466 
    unless_null _lex_param_1, fallback5446
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5446:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5001, fb_tmp_466
    unless $I5001 goto if2488_else5444 
    set $P5002, fb_tmp_466["declarator"]
    set $P5004, $P5002
    goto if2488_end5445
  if2488_else5444:
    null $P5003
    set $P5004, $P5003
  if2488_end5445:
    unless_null $P5004, vivi_24895447
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_24895447:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_296_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_472_1381281828.51527' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_474_1381281828.51527' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_475_1381281828.51527' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P105, $P5005
.annotate 'line', 2305
    unless_null _lex_param_1, fallback5450
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback5450:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5001, fb_tmp_467
    unless $I5001 goto if2490_else5448 
    set $P5007, fb_tmp_467["variable"]
    set $P5009, $P5007
    goto if2490_end5449
  if2490_else5448:
    null $P5008
    set $P5009, $P5008
  if2490_end5449:
    unless_null $P5009, vivi_24915451
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_24915451:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5456
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback5456:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5003, fb_tmp_469
    unless $I5003 goto if2493_else5454 
    set $P5013, fb_tmp_469["variable"]
    set $P5015, $P5013
    goto if2493_end5455
  if2493_else5454:
    null $P5014
    set $P5015, $P5014
  if2493_end5455:
    unless_null $P5015, vivi_24945457
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_24945457:
    set fb_tmp_468, $P5015
    repr_defined $I5002, fb_tmp_468
    unless $I5002 goto if2492_else5452 
    set $P5017, fb_tmp_468["sigil"]
    set $P5019, $P5017
    goto if2492_end5453
  if2492_else5452:
    null $P5018
    set $P5019, $P5018
  if2492_end5453:
    unless_null $P5019, vivi_24955458
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_24955458:
    set $P102, $P5019
.annotate 'line', 2307
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2308
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5459
    nqp_get_sc_object $P5024, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5023, $P5024
    set fb_tmp_470, $P5023
    repr_defined $I5004, fb_tmp_470
    unless $I5004 goto if2496_else5460 
    set $P5025, fb_tmp_470["$W"]
    set $P5027, $P5025
    goto if2496_end5461
  if2496_else5460:
    null $P5026
    set $P5027, $P5026
  if2496_end5461:
    unless_null $P5027, vivi_24975462
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5027, $P5028
  vivi_24975462:
    unless_null $P5027, vivi_24985463
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_24985463:
    set $P5022, $P5027
  fallback5459:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2503_end5472 
.annotate 'line', 2310
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2503_end5472:
    unless $P5039 goto if2502_end5470 
.annotate 'line', 2311
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2502_end5470:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5475
    nqp_get_sc_object $P5044, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5043, $P5044
    set fb_tmp_472, $P5043
    repr_defined $I5007, fb_tmp_472
    unless $I5007 goto if2505_else5476 
    set $P5045, fb_tmp_472["$SCOPE"]
    set $P5047, $P5045
    goto if2505_end5477
  if2505_else5476:
    null $P5046
    set $P5047, $P5046
  if2505_end5477:
    unless_null $P5047, vivi_25065478
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5047, $P5048
  vivi_25065478:
    unless_null $P5047, vivi_25075479
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25075479:
    set $P5042, $P5047
  fallback5475:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2504_else5473 
    .const 'Sub' $P5050 = 'cuid_472_1381281828.51527' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2504_end5474
  if2504_else5473:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5557
    nqp_get_sc_object $P5054, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5053, $P5054
    set fb_tmp_487, $P5053
    repr_defined $I5009, fb_tmp_487
    unless $I5009 goto if2553_else5558 
    set $P5055, fb_tmp_487["$SCOPE"]
    set $P5057, $P5055
    goto if2553_end5559
  if2553_else5558:
    null $P5056
    set $P5057, $P5056
  if2553_end5559:
    unless_null $P5057, vivi_25545560
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5057, $P5058
  vivi_25545560:
    unless_null $P5057, vivi_25555561
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25555561:
    set $P5052, $P5057
  fallback5557:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2552_else5555 
.annotate 'line', 2341
    unless_null _lex_param_1, fallback5566
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5060
  fallback5566:
    set fb_tmp_488, _lex_param_1
    repr_defined $I5010, fb_tmp_488
    unless $I5010 goto if2557_else5564 
    set $P5061, fb_tmp_488["typename"]
    set $P5063, $P5061
    goto if2557_end5565
  if2557_else5564:
    null $P5062
    set $P5063, $P5062
  if2557_end5565:
    unless_null $P5063, vivi_25585567
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5063, $P5064
  vivi_25585567:
    unless $P5063 goto if2556_end5563 
.annotate 'line', 2345
.annotate 'line', 2346
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2556_end5563:
    unless_null _lex_param_1, fallback5570
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5067
  fallback5570:
    set fb_tmp_489, _lex_param_1
    repr_defined $I5011, fb_tmp_489
    unless $I5011 goto if2559_else5568 
    set $P5068, fb_tmp_489["variable"]
    set $P5070, $P5068
    goto if2559_end5569
  if2559_else5568:
    null $P5069
    set $P5070, $P5069
  if2559_end5569:
    unless_null $P5070, vivi_25605571
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5070, $P5071
  vivi_25605571:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2349
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2350
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2552_end5556
  if2552_else5555:
    .const 'Sub' $P5076 = 'cuid_474_1381281828.51527' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2552_end5556:
  if2504_end5474:
    unless_null _lex_param_1, fallback5598
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5079
  fallback5598:
    set fb_tmp_494, _lex_param_1
    repr_defined $I5012, fb_tmp_494
    unless $I5012 goto if2574_else5596 
    set $P5080, fb_tmp_494["trait"]
    set $P5082, $P5080
    goto if2574_end5597
  if2574_else5596:
    null $P5081
    set $P5082, $P5081
  if2574_end5597:
    unless_null $P5082, vivi_25755599
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_25755599:
    unless $P5082 goto if2573_end5595 
.annotate 'line', 2379
    unless_null _lex_param_1, fallback5602
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5087
  fallback5602:
    set fb_tmp_495, _lex_param_1
    repr_defined $I5013, fb_tmp_495
    unless $I5013 goto if2576_else5600 
    set $P5088, fb_tmp_495["trait"]
    set $P5090, $P5088
    goto if2576_end5601
  if2576_else5600:
    null $P5089
    set $P5090, $P5089
  if2576_end5601:
    unless_null $P5090, vivi_25775603
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5090, $P5091
  vivi_25775603:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5604:
    unless $P5086, for_done5606
    shift $P5093, $P5086
  for_redo5605:
    .const 'Sub' $P5092 = 'cuid_475_1381281828.51527' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5604
  for_done5606:
  if2573_end5595:
.annotate 'line', 2383
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1381281828.51527") :anon :lex :outer("cuid_296_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2313
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_473 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_486 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5482
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_46, $P5004
    set fb_tmp_473, pkg_viv_tmp_46
    repr_defined $I5002, fb_tmp_473
    unless $I5002 goto if2509_else5483 
    set $P5006, fb_tmp_473["%HOW"]
    set $P5008, $P5006
    goto if2509_end5484
  if2509_else5483:
    null $P5007
    set $P5008, $P5007
  if2509_end5484:
    unless_null $P5008, vivi_25105485
    new $P5009, 'Hash'
    set pkg_viv_tmp_46["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25105485:
    unless_null $P5008, vivi_25115486
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25115486:
    set $P5003, $P5008
  fallback5482:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5487
    nqp_get_sc_object $P5013, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5012, $P5013
    set fb_tmp_474, $P5012
    repr_defined $I5003, fb_tmp_474
    unless $I5003 goto if2512_else5488 
    set $P5014, fb_tmp_474["$PKGDECL"]
    set $P5016, $P5014
    goto if2512_end5489
  if2512_else5488:
    null $P5015
    set $P5016, $P5015
  if2512_end5489:
    unless_null $P5016, vivi_25135490
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_25135490:
    unless_null $P5016, vivi_25145491
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25145491:
    set $P5011, $P5016
  fallback5487:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2508_end5481 
.annotate 'line', 2315
.annotate 'line', 2316
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5492
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set fb_tmp_475, $P5022
    repr_defined $I5004, fb_tmp_475
    unless $I5004 goto if2515_else5493 
    set $P5024, fb_tmp_475["$PKGDECL"]
    set $P5026, $P5024
    goto if2515_end5494
  if2515_else5493:
    null $P5025
    set $P5026, $P5025
  if2515_end5494:
    unless_null $P5026, vivi_25165495
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_25165495:
    unless_null $P5026, vivi_25175496
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25175496:
    set $P5021, $P5026
  fallback5492:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2508_end5481:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5501
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  fallback5501:
    set fb_tmp_476, $P5031
    repr_defined $I5005, fb_tmp_476
    unless $I5005 goto if2519_else5499 
    set $P5033, fb_tmp_476["typename"]
    set $P5035, $P5033
    goto if2519_end5500
  if2519_else5499:
    null $P5034
    set $P5035, $P5034
  if2519_end5500:
    unless_null $P5035, vivi_25205502
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5035, $P5036
  vivi_25205502:
    unless $P5035 goto if2518_end5498 
.annotate 'line', 2323
.annotate 'line', 2324
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5503
    nqp_get_sc_object $P5039, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5038, $P5039
    set fb_tmp_477, $P5038
    repr_defined $I5006, fb_tmp_477
    unless $I5006 goto if2521_else5504 
    set $P5040, fb_tmp_477["$W"]
    set $P5042, $P5040
    goto if2521_end5505
  if2521_else5504:
    null $P5041
    set $P5042, $P5041
  if2521_end5505:
    unless_null $P5042, vivi_25225506
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5042, $P5043
  vivi_25225506:
    unless_null $P5042, vivi_25235507
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25235507:
    set $P5037, $P5042
  fallback5503:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5510
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5046, $P5047
  fallback5510:
    set fb_tmp_478, $P5046
    repr_defined $I5007, fb_tmp_478
    unless $I5007 goto if2524_else5508 
    set $P5048, fb_tmp_478["typename"]
    set $P5050, $P5048
    goto if2524_end5509
  if2524_else5508:
    null $P5049
    set $P5050, $P5049
  if2524_end5509:
    unless_null $P5050, vivi_25255511
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5050, $P5051
  vivi_25255511:
    set $S5005, $P5050
    box $P5052, $S5005
    push $P5045, $P5052
    $P5053 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5053
  if2518_end5498:
    find_lex $P5054, "$sigil"
    set $S5006, $P5054
    iseq $I5008, $S5006, "$"
    set $I5010, $I5008
    if $I5008 goto unless2527_end5515 
    find_lex $P5055, "$sigil"
    set $S5007, $P5055
    iseq $I5009, $S5007, "&"
    set $I5010, $I5009
  unless2527_end5515:
    unless $I5010 goto if2526_end5513 
.annotate 'line', 2326
    find_lex $P5056, "$/"
    unless_null $P5056, fallback5520
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5056, $P5057
  fallback5520:
    set fb_tmp_479, $P5056
    repr_defined $I5011, fb_tmp_479
    unless $I5011 goto if2529_else5518 
    set $P5058, fb_tmp_479["typename"]
    set $P5060, $P5058
    goto if2529_end5519
  if2529_else5518:
    null $P5059
    set $P5060, $P5059
  if2529_end5519:
    unless_null $P5060, vivi_25305521
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5060, $P5061
  vivi_25305521:
    unless $P5060 goto if2528_else5516 
.annotate 'line', 2327
    set fb_tmp_480, $P102
    repr_defined $I5012, fb_tmp_480
    unless $I5012 goto if2531_else5522 
    set $P5062, fb_tmp_480["type"]
    set $P5064, $P5062
    goto if2531_end5523
  if2531_else5522:
    null $P5063
    set $P5064, $P5063
  if2531_end5523:
    unless_null $P5064, vivi_25325524
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5064, $P5065
  vivi_25325524:
    set $P102["default"], $P5064
    set $P5079, $P5064
    goto if2528_end5517
  if2528_else5516:
.annotate 'line', 2330
    new $P5077, 'ExceptionHandler'
    set_label $P5077, catch_handler_25375531
    $P5077.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5077
.annotate 'line', 2331
    find_dynamic_lex $P5066, "$*W"
    unless_null $P5066, fallback5525
    nqp_get_sc_object $P5068, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5067, $P5068
    set fb_tmp_481, $P5067
    repr_defined $I5013, fb_tmp_481
    unless $I5013 goto if2533_else5526 
    set $P5069, fb_tmp_481["$W"]
    set $P5071, $P5069
    goto if2533_end5527
  if2533_else5526:
    null $P5070
    set $P5071, $P5070
  if2533_end5527:
    unless_null $P5071, vivi_25345528
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5071, $P5072
  vivi_25345528:
    unless_null $P5071, vivi_25355529
    die "Contextual $*W not found"
    box $P5073, "Contextual $*W not found"
    set $P5071, $P5073
  vivi_25355529:
    set $P5066, $P5071
  fallback5525:
    new $P5074, 'ResizablePMCArray'
    box $P5075, "NQPMu"
    push $P5074, $P5075
    $P5076 = $P5066."find_sym"($P5074)
    set $P102["default"], $P5076
    set $P5078, $P5076
    pop_eh 
    goto skip_handler_25365530
  catch_handler_25375531:
    .get_results ($P5077) 
    set $I10001, 1
    set $P5077["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5077
    pop_upto_eh $P5077
    pop_eh 
    set $P5078, $P10001
    goto skip_handler_25365530
  skip_handler_25365530:
    set $P5079, $P5078
  if2528_end5517:
  if2526_end5513:
.annotate 'line', 2336
    find_dynamic_lex $P5080, "$*W"
    unless_null $P5080, fallback5532
    nqp_get_sc_object $P5082, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5081, $P5082
    set fb_tmp_482, $P5081
    repr_defined $I5014, fb_tmp_482
    unless $I5014 goto if2538_else5533 
    set $P5083, fb_tmp_482["$W"]
    set $P5085, $P5083
    goto if2538_end5534
  if2538_else5533:
    null $P5084
    set $P5085, $P5084
  if2538_end5534:
    unless_null $P5085, vivi_25395535
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5085, $P5086
  vivi_25395535:
    unless_null $P5085, vivi_25405536
    die "Contextual $*W not found"
    box $P5087, "Contextual $*W not found"
    set $P5085, $P5087
  vivi_25405536:
    set $P5080, $P5085
  fallback5532:
    find_dynamic_lex $P5088, "$*PACKAGE"
    unless_null $P5088, fallback5537
    nqp_get_sc_object $P5090, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5089, $P5090
    set fb_tmp_483, $P5089
    repr_defined $I5015, fb_tmp_483
    unless $I5015 goto if2541_else5538 
    set $P5091, fb_tmp_483["$PACKAGE"]
    set $P5093, $P5091
    goto if2541_end5539
  if2541_else5538:
    null $P5092
    set $P5093, $P5092
  if2541_end5539:
    unless_null $P5093, vivi_25425540
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5093, $P5094
  vivi_25425540:
    unless_null $P5093, vivi_25435541
    die "Contextual $*PACKAGE not found"
    box $P5095, "Contextual $*PACKAGE not found"
    set $P5093, $P5095
  vivi_25435541:
    set $P5088, $P5093
  fallback5537:
    find_dynamic_lex $P5096, "%*HOW"
    unless_null $P5096, fallback5544
    nqp_get_sc_object $P5098, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_47, $P5097
    set fb_tmp_485, pkg_viv_tmp_47
    repr_defined $I5017, fb_tmp_485
    unless $I5017 goto if2545_else5545 
    set $P5099, fb_tmp_485["%HOW"]
    set $P5101, $P5099
    goto if2545_end5546
  if2545_else5545:
    null $P5100
    set $P5101, $P5100
  if2545_end5546:
    unless_null $P5101, vivi_25465547
    new $P5102, 'Hash'
    set pkg_viv_tmp_47["%HOW"], $P5102
    set $P5101, $P5102
  vivi_25465547:
    unless_null $P5101, vivi_25475548
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_25475548:
    set $P5096, $P5101
  fallback5544:
    set fb_tmp_484, $P5096
    repr_defined $I5016, fb_tmp_484
    unless $I5016 goto if2544_else5542 
    find_dynamic_lex $P5105, "$*PKGDECL"
    unless_null $P5105, fallback5549
    nqp_get_sc_object $P5107, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5106, $P5107
    set fb_tmp_486, $P5106
    repr_defined $I5018, fb_tmp_486
    unless $I5018 goto if2548_else5550 
    set $P5108, fb_tmp_486["$PKGDECL"]
    set $P5110, $P5108
    goto if2548_end5551
  if2548_else5550:
    null $P5109
    set $P5110, $P5109
  if2548_end5551:
    unless_null $P5110, vivi_25495552
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5110, $P5111
  vivi_25495552:
    unless_null $P5110, vivi_25505553
    die "Contextual $*PKGDECL not found"
    box $P5112, "Contextual $*PKGDECL not found"
    set $P5110, $P5112
  vivi_25505553:
    set $P5105, $P5110
  fallback5549:
    set $S5009, $P5105
    concat $S5008, $S5009, "-attr"
    set $P5104, fb_tmp_484[$S5008]
    set $P5114, $P5104
    goto if2544_end5543
  if2544_else5542:
    null $P5113
    set $P5114, $P5113
  if2544_end5543:
    unless_null $P5114, vivi_25515554
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5114, $P5115
  vivi_25515554:
    $P5116 = $P5080."pkg_add_attribute"($P5088, $P5114, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5116
.annotate 'line', 2339
    nqp_get_sc_object $P5117, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
    $P5118 = $P5117."new"()
    store_lex "$past", $P5118
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1381281828.51527") :anon :lex :outer("cuid_296_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2352
    .const 'Sub' $P5052 = 'cuid_473_1381281828.51527' 
    capture_lex $P5052 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5576
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  fallback5576:
    set fb_tmp_490, $P5003
    repr_defined $I5001, fb_tmp_490
    unless $I5001 goto if2562_else5574 
    set $P5005, fb_tmp_490["typename"]
    set $P5007, $P5005
    goto if2562_end5575
  if2562_else5574:
    null $P5006
    set $P5007, $P5006
  if2562_end5575:
    unless_null $P5007, vivi_25635577
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_25635577:
    unless $P5007 goto if2561_else5572 
.annotate 'line', 2355
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2564_end5579 
.annotate 'line', 2356
.annotate 'line', 2357
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2564_end5579:
.annotate 'line', 2359
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5580
    nqp_get_sc_object $P5015, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5014, $P5015
    set fb_tmp_491, $P5014
    repr_defined $I5003, fb_tmp_491
    unless $I5003 goto if2565_else5581 
    set $P5016, fb_tmp_491["$W"]
    set $P5018, $P5016
    goto if2565_end5582
  if2565_else5581:
    null $P5017
    set $P5018, $P5017
  if2565_end5582:
    unless_null $P5018, vivi_25665583
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_25665583:
    unless_null $P5018, vivi_25675584
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25675584:
    set $P5013, $P5018
  fallback5580:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5587
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  fallback5587:
    set fb_tmp_492, $P5022
    repr_defined $I5004, fb_tmp_492
    unless $I5004 goto if2568_else5585 
    set $P5024, fb_tmp_492["typename"]
    set $P5026, $P5024
    goto if2568_end5586
  if2568_else5585:
    null $P5025
    set $P5026, $P5025
  if2568_end5586:
    unless_null $P5026, vivi_25695588
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_25695588:
    set $S5002, $P5026
    box $P5028, $S5002
    push $P5021, $P5028
    $P5029 = $P5013."find_sym"($P5021)
    set $P101, $P5029
    repr_get_primitive_type_spec $I5005, $P101
    unless $I5005 goto if2570_else5589 
    .const 'Sub' $P5030 = 'cuid_473_1381281828.51527' 
    capture_lex $P5030
    $P5031 = $P5030($I5005)
    set $P5035, $P5031
    goto if2570_end5590
  if2570_else5589:
.annotate 'line', 2363
.annotate 'line', 2364
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    $P5034 = $P5033."panic"("Only native types are currently supported/checked")
    set $P5035, $P5034
  if2570_end5590:
    goto if2561_end5573
  if2561_else5572:
.annotate 'line', 2367
.annotate 'line', 2368
    find_lex $P5036, "$sigil"
    $P5037 = "&default_for"($P5036)
    set $P102, $P5037
  if2561_end5573:
.annotate 'line', 2370
    find_lex $P5038, "$BLOCK"
    set fb_tmp_493, $P5038
    repr_defined $I5006, fb_tmp_493
    unless $I5006 goto if2571_else5591 
    set $P5039, fb_tmp_493[0]
    set $P5041, $P5039
    goto if2571_end5592
  if2571_else5591:
    null $P5040
    set $P5041, $P5040
  if2571_end5592:
    unless_null $P5041, vivi_25725593
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5041, $P5042
  vivi_25725593:
    nqp_get_sc_object $P5043, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    find_lex $P5044, "$/"
.annotate 'line', 2372
    nqp_get_sc_object $P5045, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    find_lex $P5046, "$name"
    $P5047 = $P5045."new"($P5046 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5048 = $P5043."new"($P5047, $P102, "bind" :named("op"), $P5044 :named("node"))
    $P5041."push"($P5048)
.annotate 'line', 2375
    find_lex $P5049, "$BLOCK"
    find_lex $P5050, "$name"
    $P5051 = $P5049."symbol"($P5050, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1381281828.51527") :anon :lex :outer("cuid_474_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2360
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2361
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1381281828.51527") :anon :lex :outer("cuid_296_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2380
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_297_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2386
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_496 
    unless_null _lex_param_1, fallback5609
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5609:
    set fb_tmp_496, _lex_param_1
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if2578_else5607 
    set $P5002, fb_tmp_496["routine_def"]
    set $P5004, $P5002
    goto if2578_end5608
  if2578_else5607:
    null $P5003
    set $P5004, $P5003
  if2578_end5608:
    unless_null $P5004, vivi_25795610
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_25795610:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_298_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2387
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_497 
    unless_null _lex_param_1, fallback5613
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback5613:
    set fb_tmp_497, _lex_param_1
    repr_defined $I5001, fb_tmp_497
    unless $I5001 goto if2580_else5611 
    set $P5002, fb_tmp_497["method_def"]
    set $P5004, $P5002
    goto if2580_end5612
  if2580_else5611:
    null $P5003
    set $P5004, $P5003
  if2580_end5612:
    unless_null $P5004, vivi_25815614
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_25815614:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_299_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2389
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_479_1381281828.51527' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_482_1381281828.51527' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5619
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5004
  fallback5619:
    set fb_tmp_498, _lex_param_1
    repr_defined $I5001, fb_tmp_498
    unless $I5001 goto if2583_else5617 
    set $P5005, fb_tmp_498["onlystar"]
    set $P5007, $P5005
    goto if2583_end5618
  if2583_else5617:
    null $P5006
    set $P5007, $P5006
  if2583_end5618:
    unless_null $P5007, vivi_25845620
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_25845620:
    unless $P5007 goto if2582_else5615 
.annotate 'line', 2393
.annotate 'line', 2394
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2582_end5616
  if2582_else5615:
.annotate 'line', 2396
.annotate 'line', 2397
    unless_null _lex_param_1, fallback5623
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5010
  fallback5623:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5002, fb_tmp_499
    unless $I5002 goto if2585_else5621 
    set $P5011, fb_tmp_499["blockoid"]
    set $P5013, $P5011
    goto if2585_end5622
  if2585_else5621:
    null $P5012
    set $P5013, $P5012
  if2585_end5622:
    unless_null $P5013, vivi_25865624
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_25865624:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5627
    nqp_get_sc_object $P5018, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5017, $P5018
    set fb_tmp_500, $P5017
    repr_defined $I5003, fb_tmp_500
    unless $I5003 goto if2588_else5628 
    set $P5019, fb_tmp_500["$RETURN_USED"]
    set $P5021, $P5019
    goto if2588_end5629
  if2588_else5628:
    null $P5020
    set $P5021, $P5020
  if2588_end5629:
    unless_null $P5021, vivi_25895630
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_25895630:
    unless_null $P5021, vivi_25905631
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_25905631:
    set $P5016, $P5021
  fallback5627:
    set $P5029, $P5016
    unless $P5016 goto if2587_end5626 
.annotate 'line', 2398
.annotate 'line', 2399
    set fb_tmp_501, $P101
    repr_defined $I5004, fb_tmp_501
    unless $I5004 goto if2591_else5632 
    set $P5024, fb_tmp_501[1]
    set $P5026, $P5024
    goto if2591_end5633
  if2591_else5632:
    null $P5025
    set $P5026, $P5025
  if2591_end5633:
    unless_null $P5026, vivi_25925634
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_25925634:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2587_end5626:
  if2582_end5616:
.annotate 'line', 2402
    $P101."blocktype"("declaration")
    set $P102, $P101
    unless_null _lex_param_1, fallback5639
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5030
  fallback5639:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5005, fb_tmp_502
    unless $I5005 goto if2594_else5637 
    set $P5031, fb_tmp_502["deflongname"]
    set $P5033, $P5031
    goto if2594_end5638
  if2594_else5637:
    null $P5032
    set $P5033, $P5032
  if2594_end5638:
    unless_null $P5033, vivi_25955640
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5034
  vivi_25955640:
    unless $P5033 goto if2593_else5635 
    .const 'Sub' $P5035 = 'cuid_479_1381281828.51527' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2593_end5636
  if2593_else5635:
.annotate 'line', 2522
.annotate 'line', 2523
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5812
    nqp_get_sc_object $P5039, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5038, $P5039
    set fb_tmp_535, $P5038
    repr_defined $I5006, fb_tmp_535
    unless $I5006 goto if2695_else5813 
    set $P5040, fb_tmp_535["$W"]
    set $P5042, $P5040
    goto if2695_end5814
  if2695_else5813:
    null $P5041
    set $P5042, $P5041
  if2695_end5814:
    unless_null $P5042, vivi_26965815
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5042, $P5043
  vivi_26965815:
    unless_null $P5042, vivi_26975816
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_26975816:
    set $P5037, $P5042
  fallback5812:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2694_end5811 
.annotate 'line', 2524
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback5817
    nqp_get_sc_object $P5048, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5047, $P5048
    set fb_tmp_536, $P5047
    repr_defined $I5007, fb_tmp_536
    unless $I5007 goto if2698_else5818 
    set $P5049, fb_tmp_536["$W"]
    set $P5051, $P5049
    goto if2698_end5819
  if2698_else5818:
    null $P5050
    set $P5051, $P5050
  if2698_end5819:
    unless_null $P5051, vivi_26995820
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5051, $P5052
  vivi_26995820:
    unless_null $P5051, vivi_27005821
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_27005821:
    set $P5046, $P5051
  fallback5817:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2694_end5811:
  if2593_end5636:
.annotate 'line', 2528
    nqp_get_sc_object $P5056, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2531
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5826
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5058
  fallback5826:
    set fb_tmp_537, _lex_param_1
    repr_defined $I5008, fb_tmp_537
    unless $I5008 goto if2702_else5824 
    set $P5059, fb_tmp_537["trait"]
    set $P5061, $P5059
    goto if2702_end5825
  if2702_else5824:
    null $P5060
    set $P5061, $P5060
  if2702_end5825:
    unless_null $P5061, vivi_27035827
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5061, $P5062
  vivi_27035827:
    set $P5073, $P5061
    unless $P5061 goto if2701_end5823 
.annotate 'line', 2534
    unless_null _lex_param_1, fallback5830
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5066
  fallback5830:
    set fb_tmp_538, _lex_param_1
    repr_defined $I5009, fb_tmp_538
    unless $I5009 goto if2704_else5828 
    set $P5067, fb_tmp_538["trait"]
    set $P5069, $P5067
    goto if2704_end5829
  if2704_else5828:
    null $P5068
    set $P5069, $P5068
  if2704_end5829:
    unless_null $P5069, vivi_27055831
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5069, $P5070
  vivi_27055831:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next5832:
    unless $P5065, for_done5834
    shift $P5072, $P5065
  for_redo5833:
    .const 'Sub' $P5071 = 'cuid_482_1381281828.51527' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next5832
  for_done5834:
    set $P5073, $P5063
  if2701_end5823:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1381281828.51527") :anon :lex :outer("cuid_299_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2405
    .const 'Sub' $P5088 = 'cuid_478_1381281828.51527' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_480_1381281828.51527' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_481_1381281828.51527' 
    capture_lex $P5088 
    .lex "$name", $P101 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5643
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback5643:
    set fb_tmp_503, $P5002
    repr_defined $I5001, fb_tmp_503
    unless $I5001 goto if2596_else5641 
    set $P5004, fb_tmp_503["sigil"]
    set $P5006, $P5004
    goto if2596_end5642
  if2596_else5641:
    null $P5005
    set $P5006, $P5005
  if2596_end5642:
    unless_null $P5006, vivi_25975644
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_25975644:
    set $S5002, $P5006
.annotate 'line', 2406
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5647
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  fallback5647:
    set fb_tmp_504, $P5008
    repr_defined $I5002, fb_tmp_504
    unless $I5002 goto if2598_else5645 
    set $P5010, fb_tmp_504["deflongname"]
    set $P5012, $P5010
    goto if2598_end5646
  if2598_else5645:
    null $P5011
    set $P5012, $P5011
  if2598_end5646:
    unless_null $P5012, vivi_25995648
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_25995648:
    $P5014 = $P5012."ast"()
    set $S5003, $P5014
    concat $S5001, $S5002, $S5003
    box $P5015, $S5001
    set $P101, $P5015
.annotate 'line', 2407
    find_lex $P5016, "$past"
    $P5016."name"($P101)
    find_dynamic_lex $P5017, "$*SCOPE"
    unless_null $P5017, fallback5655
    nqp_get_sc_object $P5019, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5018, $P5019
    set fb_tmp_505, $P5018
    repr_defined $I5004, fb_tmp_505
    unless $I5004 goto if2603_else5656 
    set $P5020, fb_tmp_505["$SCOPE"]
    set $P5022, $P5020
    goto if2603_end5657
  if2603_else5656:
    null $P5021
    set $P5022, $P5021
  if2603_end5657:
    unless_null $P5022, vivi_26045658
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_26045658:
    unless_null $P5022, vivi_26055659
    die "Contextual $*SCOPE not found"
    box $P5024, "Contextual $*SCOPE not found"
    set $P5022, $P5024
  vivi_26055659:
    set $P5017, $P5022
  fallback5655:
    set $S5004, $P5017
    iseq $I5003, $S5004, ""
    set $I5007, $I5003
    if $I5003 goto unless2602_end5654 
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback5660
    nqp_get_sc_object $P5027, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5026, $P5027
    set fb_tmp_506, $P5026
    repr_defined $I5006, fb_tmp_506
    unless $I5006 goto if2606_else5661 
    set $P5028, fb_tmp_506["$SCOPE"]
    set $P5030, $P5028
    goto if2606_end5662
  if2606_else5661:
    null $P5029
    set $P5030, $P5029
  if2606_end5662:
    unless_null $P5030, vivi_26075663
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5030, $P5031
  vivi_26075663:
    unless_null $P5030, vivi_26085664
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26085664:
    set $P5025, $P5030
  fallback5660:
    set $S5005, $P5025
    iseq $I5005, $S5005, "my"
    set $I5007, $I5005
  unless2602_end5654:
    set $I5010, $I5007
    if $I5007 goto unless2601_end5652 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback5665
    nqp_get_sc_object $P5035, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5034, $P5035
    set fb_tmp_507, $P5034
    repr_defined $I5009, fb_tmp_507
    unless $I5009 goto if2609_else5666 
    set $P5036, fb_tmp_507["$SCOPE"]
    set $P5038, $P5036
    goto if2609_end5667
  if2609_else5666:
    null $P5037
    set $P5038, $P5037
  if2609_end5667:
    unless_null $P5038, vivi_26105668
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5038, $P5039
  vivi_26105668:
    unless_null $P5038, vivi_26115669
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26115669:
    set $P5033, $P5038
  fallback5665:
    set $S5006, $P5033
    iseq $I5008, $S5006, "our"
    set $I5010, $I5008
  unless2601_end5652:
    unless $I5010 goto if2600_else5649 
.annotate 'line', 2408
    find_dynamic_lex $P5041, "$*MULTINESS"
    unless_null $P5041, fallback5672
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5042, $P5043
    set fb_tmp_508, $P5042
    repr_defined $I5012, fb_tmp_508
    unless $I5012 goto if2613_else5673 
    set $P5044, fb_tmp_508["$MULTINESS"]
    set $P5046, $P5044
    goto if2613_end5674
  if2613_else5673:
    null $P5045
    set $P5046, $P5045
  if2613_end5674:
    unless_null $P5046, vivi_26145675
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5046, $P5047
  vivi_26145675:
    unless_null $P5046, vivi_26155676
    die "Contextual $*MULTINESS not found"
    box $P5048, "Contextual $*MULTINESS not found"
    set $P5046, $P5048
  vivi_26155676:
    set $P5041, $P5046
  fallback5672:
    set $S5007, $P5041
    iseq $I5011, $S5007, "multi"
    unless $I5011 goto if2612_else5670 
    .const 'Sub' $P5049 = 'cuid_478_1381281828.51527' 
    capture_lex $P5049
    $P5050 = $P5049()
    goto if2612_end5671
  if2612_else5670:
    find_dynamic_lex $P5051, "$*MULTINESS"
    unless_null $P5051, fallback5732
    nqp_get_sc_object $P5053, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5052, $P5053
    set fb_tmp_519, $P5052
    repr_defined $I5014, fb_tmp_519
    unless $I5014 goto if2647_else5733 
    set $P5054, fb_tmp_519["$MULTINESS"]
    set $P5056, $P5054
    goto if2647_end5734
  if2647_else5733:
    null $P5055
    set $P5056, $P5055
  if2647_end5734:
    unless_null $P5056, vivi_26485735
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5056, $P5057
  vivi_26485735:
    unless_null $P5056, vivi_26495736
    die "Contextual $*MULTINESS not found"
    box $P5058, "Contextual $*MULTINESS not found"
    set $P5056, $P5058
  vivi_26495736:
    set $P5051, $P5056
  fallback5732:
    set $S5008, $P5051
    iseq $I5013, $S5008, "proto"
    unless $I5013 goto if2646_else5730 
    .const 'Sub' $P5059 = 'cuid_480_1381281828.51527' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if2646_end5731
  if2646_else5730:
    .const 'Sub' $P5061 = 'cuid_481_1381281828.51527' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if2646_end5731:
  if2612_end5671:
.annotate 'line', 2511
    nqp_get_sc_object $P5064, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5065 = $P5064."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5065
    goto if2600_end5650
  if2600_else5649:
.annotate 'line', 2513
.annotate 'line', 2514
    find_lex $P5066, "$/"
    $P5067 = $P5066."CURSOR"()
    find_dynamic_lex $P5068, "$*SCOPE"
    unless_null $P5068, fallback5796
    nqp_get_sc_object $P5070, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5069, $P5070
    set fb_tmp_533, $P5069
    repr_defined $I5015, fb_tmp_533
    unless $I5015 goto if2686_else5797 
    set $P5071, fb_tmp_533["$SCOPE"]
    set $P5073, $P5071
    goto if2686_end5798
  if2686_else5797:
    null $P5072
    set $P5073, $P5072
  if2686_end5798:
    unless_null $P5073, vivi_26875799
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5073, $P5074
  vivi_26875799:
    unless_null $P5073, vivi_26885800
    die "Contextual $*SCOPE not found"
    box $P5075, "Contextual $*SCOPE not found"
    set $P5073, $P5075
  vivi_26885800:
    set $P5068, $P5073
  fallback5796:
    set $S5012, $P5068
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5076 = $P5067."panic"($S5011)
  if2600_end5650:
    set $S5013, $P101
    iseq $I5016, $S5013, "MAIN"
    set $I5019, $I5016
    unless $I5016 goto if2690_end5804 
    find_dynamic_lex $P5077, "$*MULTINESS"
    unless_null $P5077, fallback5805
    nqp_get_sc_object $P5079, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5078, $P5079
    set fb_tmp_534, $P5078
    repr_defined $I5018, fb_tmp_534
    unless $I5018 goto if2691_else5806 
    set $P5080, fb_tmp_534["$MULTINESS"]
    set $P5082, $P5080
    goto if2691_end5807
  if2691_else5806:
    null $P5081
    set $P5082, $P5081
  if2691_end5807:
    unless_null $P5082, vivi_26925808
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_26925808:
    unless_null $P5082, vivi_26935809
    die "Contextual $*MULTINESS not found"
    box $P5084, "Contextual $*MULTINESS not found"
    set $P5082, $P5084
  vivi_26935809:
    set $P5077, $P5082
  fallback5805:
    set $S5014, $P5077
    isne $I5017, $S5014, "multi"
    set $I5019, $I5017
  if2690_end5804:
    box $P5087, $I5019
    set $P5086, $P5087
    unless $I5019 goto if2689_end5802 
.annotate 'line', 2518
    find_lex $P5085, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5085
    set $P5086, $P5085
  if2689_end5802:
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1381281828.51527") :anon :lex :outer("cuid_479_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2409
    .const 'Sub' $P5063 = 'cuid_477_1381281828.51527' 
    capture_lex $P5063 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback5679
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5006, $P5007
    set fb_tmp_509, $P5006
    repr_defined $I5002, fb_tmp_509
    unless $I5002 goto if2617_else5680 
    set $P5008, fb_tmp_509["$SCOPE"]
    set $P5010, $P5008
    goto if2617_end5681
  if2617_else5680:
    null $P5009
    set $P5010, $P5009
  if2617_end5681:
    unless_null $P5010, vivi_26185682
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_26185682:
    unless_null $P5010, vivi_26195683
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26195683:
    set $P5005, $P5010
  fallback5679:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2616_end5678 
.annotate 'line', 2411
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2616_end5678:
.annotate 'line', 2413
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback5684
    nqp_get_sc_object $P5016, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5015, $P5016
    set fb_tmp_510, $P5015
    repr_defined $I5003, fb_tmp_510
    unless $I5003 goto if2620_else5685 
    set $P5017, fb_tmp_510["$W"]
    set $P5019, $P5017
    goto if2620_end5686
  if2620_else5685:
    null $P5018
    set $P5019, $P5018
  if2620_end5686:
    unless_null $P5019, vivi_26215687
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_26215687:
    unless_null $P5019, vivi_26225688
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26225688:
    set $P5014, $P5019
  fallback5684:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_511, $P102
    repr_defined $I5004, fb_tmp_511
    unless $I5004 goto if2624_else5691 
    set $P5025, fb_tmp_511["proto"]
    set $P5027, $P5025
    goto if2624_end5692
  if2624_else5691:
    null $P5026
    set $P5027, $P5026
  if2624_end5692:
    unless_null $P5027, vivi_26255693
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5027, $P5028
  vivi_26255693:
    unless $P5027 goto if2623_else5689 
.annotate 'line', 2414
    set fb_tmp_512, $P102
    repr_defined $I5005, fb_tmp_512
    unless $I5005 goto if2626_else5694 
    set $P5029, fb_tmp_512["value"]
    set $P5031, $P5029
    goto if2626_end5695
  if2626_else5694:
    null $P5030
    set $P5031, $P5030
  if2626_end5695:
    unless_null $P5031, vivi_26275696
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_26275696:
    set $P101, $P5031
    goto if2623_end5690
  if2623_else5689:
    .const 'Sub' $P5033 = 'cuid_477_1381281828.51527' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2623_end5690:
.annotate 'line', 2443
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback5717
    nqp_get_sc_object $P5037, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5036, $P5037
    set fb_tmp_516, $P5036
    repr_defined $I5006, fb_tmp_516
    unless $I5006 goto if2638_else5718 
    set $P5038, fb_tmp_516["$W"]
    set $P5040, $P5038
    goto if2638_end5719
  if2638_else5718:
    null $P5039
    set $P5040, $P5039
  if2638_end5719:
    unless_null $P5040, vivi_26395720
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5041
  vivi_26395720:
    unless_null $P5040, vivi_26405721
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26405721:
    set $P5035, $P5040
  fallback5717:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2444
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2447
    $P101."add_dispatchee"($P103)
.annotate 'line', 2453
    find_lex $P5047, "$past"
    $P5047."blocktype"("declaration_static")
.annotate 'line', 2454
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5722
    nqp_get_sc_object $P5050, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5049, $P5050
    set fb_tmp_517, $P5049
    repr_defined $I5007, fb_tmp_517
    unless $I5007 goto if2641_else5723 
    set $P5051, fb_tmp_517["$W"]
    set $P5053, $P5051
    goto if2641_end5724
  if2641_else5723:
    null $P5052
    set $P5053, $P5052
  if2641_end5724:
    unless_null $P5053, vivi_26425725
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5053, $P5054
  vivi_26425725:
    unless_null $P5053, vivi_26435726
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_26435726:
    set $P5048, $P5053
  fallback5722:
    $P5056 = $P5048."cur_lexpad"()
    set $P104, $P5056
.annotate 'line', 2455
    set fb_tmp_518, $P104
    repr_defined $I5008, fb_tmp_518
    unless $I5008 goto if2644_else5727 
    set $P5057, fb_tmp_518[0]
    set $P5059, $P5057
    goto if2644_end5728
  if2644_else5727:
    null $P5058
    set $P5059, $P5058
  if2644_end5728:
    unless_null $P5059, vivi_26455729
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5059, $P5060
  vivi_26455729:
    find_lex $P5061, "$past"
    $P5062 = $P5059."push"($P5061)
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1381281828.51527") :anon :lex :outer("cuid_478_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2419
    .const 'Sub' $P5020 = 'cuid_476_1381281828.51527' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_513 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2422
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback5697
    nqp_get_sc_object $P5007, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5006, $P5007
    set fb_tmp_513, $P5006
    repr_defined $I5001, fb_tmp_513
    unless $I5001 goto if2628_else5698 
    set $P5008, fb_tmp_513["$W"]
    set $P5010, $P5008
    goto if2628_end5699
  if2628_else5698:
    null $P5009
    set $P5010, $P5009
  if2628_end5699:
    unless_null $P5010, vivi_26295700
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_26295700:
    unless_null $P5010, vivi_26305701
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26305701:
    set $P5005, $P5010
  fallback5697:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next5712:
    unless $P5004, for_done5714
    shift $P5015, $P5004
  for_redo5713:
    .const 'Sub' $P5014 = 'cuid_476_1381281828.51527' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next5712
  for_done5714:
    if $P101 goto unless2637_end5716 
.annotate 'line', 2434
.annotate 'line', 2435
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2637_end5716:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1381281828.51527") :anon :lex :outer("cuid_477_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2422
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2423
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_514, $P101
    repr_defined $I5001, fb_tmp_514
    unless $I5001 goto if2632_else5704 
    set $P5004, fb_tmp_514["proto"]
    set $P5006, $P5004
    goto if2632_end5705
  if2632_else5704:
    null $P5005
    set $P5006, $P5005
  if2632_end5705:
    unless_null $P5006, vivi_26335706
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_26335706:
    unless $P5006 goto if2631_else5702 
.annotate 'line', 2424
    set fb_tmp_515, $P101
    repr_defined $I5002, fb_tmp_515
    unless $I5002 goto if2634_else5707 
    set $P5008, fb_tmp_515["value"]
    set $P5010, $P5008
    goto if2634_end5708
  if2634_else5707:
    null $P5009
    set $P5010, $P5009
  if2634_end5708:
    unless_null $P5010, vivi_26355709
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_26355709:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2631_end5703
  if2631_else5702:
    set $P5016, $P101
    unless $P101 goto if2636_end5711 
.annotate 'line', 2428
.annotate 'line', 2429
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2636_end5711:
    set $P5017, $P5016
  if2631_end5703:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1381281828.51527") :anon :lex :outer("cuid_479_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2457
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback5739
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_520, $P5004
    repr_defined $I5002, fb_tmp_520
    unless $I5002 goto if2651_else5740 
    set $P5006, fb_tmp_520["$SCOPE"]
    set $P5008, $P5006
    goto if2651_end5741
  if2651_else5740:
    null $P5007
    set $P5008, $P5007
  if2651_end5741:
    unless_null $P5008, vivi_26525742
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_26525742:
    unless_null $P5008, vivi_26535743
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26535743:
    set $P5003, $P5008
  fallback5739:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2650_end5738 
.annotate 'line', 2461
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2650_end5738:
.annotate 'line', 2462
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback5744
    nqp_get_sc_object $P5014, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5013, $P5014
    set fb_tmp_521, $P5013
    repr_defined $I5003, fb_tmp_521
    unless $I5003 goto if2654_else5745 
    set $P5015, fb_tmp_521["$W"]
    set $P5017, $P5015
    goto if2654_end5746
  if2654_else5745:
    null $P5016
    set $P5017, $P5016
  if2654_end5746:
    unless_null $P5017, vivi_26555747
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_26555747:
    unless_null $P5017, vivi_26565748
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26565748:
    set $P5012, $P5017
  fallback5744:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2463
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5749
    nqp_get_sc_object $P5025, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5024, $P5025
    set fb_tmp_522, $P5024
    repr_defined $I5004, fb_tmp_522
    unless $I5004 goto if2657_else5750 
    set $P5026, fb_tmp_522["$W"]
    set $P5028, $P5026
    goto if2657_end5751
  if2657_else5750:
    null $P5027
    set $P5028, $P5027
  if2657_end5751:
    unless_null $P5028, vivi_26585752
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_26585752:
    unless_null $P5028, vivi_26595753
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26595753:
    set $P5023, $P5028
  fallback5749:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2464
    set fb_tmp_523, $P102
    repr_defined $I5005, fb_tmp_523
    unless $I5005 goto if2660_else5754 
    set $P5032, fb_tmp_523[0]
    set $P5034, $P5032
    goto if2660_end5755
  if2660_else5754:
    null $P5033
    set $P5034, $P5033
  if2660_end5755:
    unless_null $P5034, vivi_26615756
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  vivi_26615756:
    nqp_get_sc_object $P5036, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2466
    nqp_get_sc_object $P5037, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2469
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2473
    find_lex $P5043, "$block"
    set fb_tmp_524, $P5043
    repr_defined $I5006, fb_tmp_524
    unless $I5006 goto if2662_else5757 
    set $P5044, fb_tmp_524[0]
    set $P5046, $P5044
    goto if2662_end5758
  if2662_else5757:
    null $P5045
    set $P5046, $P5045
  if2662_end5758:
    unless_null $P5046, vivi_26635759
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5046, $P5047
  vivi_26635759:
    nqp_get_sc_object $P5048, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2475
    nqp_get_sc_object $P5049, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2476
    nqp_get_sc_object $P5051, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2478
    find_lex $P5054, "$block"
    set fb_tmp_525, $P5054
    repr_defined $I5007, fb_tmp_525
    unless $I5007 goto if2664_else5760 
    set $P5055, fb_tmp_525[0]
    set $P5057, $P5055
    goto if2664_end5761
  if2664_else5760:
    null $P5056
    set $P5057, $P5056
  if2664_end5761:
    unless_null $P5057, vivi_26655762
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5057, $P5058
  vivi_26655762:
    nqp_get_sc_object $P5059, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2480
    nqp_get_sc_object $P5060, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2481
    nqp_get_sc_object $P5062, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5063, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1381281828.51527") :anon :lex :outer("cuid_479_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2484
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2485
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5763
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_526, $P5003
    repr_defined $I5001, fb_tmp_526
    unless $I5001 goto if2666_else5764 
    set $P5005, fb_tmp_526["$W"]
    set $P5007, $P5005
    goto if2666_end5765
  if2666_else5764:
    null $P5006
    set $P5007, $P5006
  if2666_end5765:
    unless_null $P5007, vivi_26675766
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_26675766:
    unless_null $P5007, vivi_26685767
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26685767:
    set $P5002, $P5007
  fallback5763:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2486
    set fb_tmp_527, $P101
    repr_defined $I5002, fb_tmp_527
    unless $I5002 goto if2669_else5768 
    set $P5011, fb_tmp_527[0]
    set $P5013, $P5011
    goto if2669_end5769
  if2669_else5768:
    null $P5012
    set $P5013, $P5012
  if2669_end5769:
    unless_null $P5013, vivi_26705770
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_26705770:
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2488
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2491
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback5773
    nqp_get_sc_object $P5024, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5023, $P5024
    set fb_tmp_528, $P5023
    repr_defined $I5004, fb_tmp_528
    unless $I5004 goto if2672_else5774 
    set $P5025, fb_tmp_528["$SCOPE"]
    set $P5027, $P5025
    goto if2672_end5775
  if2672_else5774:
    null $P5026
    set $P5027, $P5026
  if2672_end5775:
    unless_null $P5027, vivi_26735776
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5027, $P5028
  vivi_26735776:
    unless_null $P5027, vivi_26745777
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_26745777:
    set $P5022, $P5027
  fallback5773:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5074, $I5003
    set $P5073, $P5074
    unless $I5003 goto if2671_end5772 
.annotate 'line', 2492
.annotate 'line', 2495
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5778
    nqp_get_sc_object $P5032, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5031, $P5032
    set fb_tmp_529, $P5031
    repr_defined $I5005, fb_tmp_529
    unless $I5005 goto if2675_else5779 
    set $P5033, fb_tmp_529["$W"]
    set $P5035, $P5033
    goto if2675_end5780
  if2675_else5779:
    null $P5034
    set $P5035, $P5034
  if2675_end5780:
    unless_null $P5035, vivi_26765781
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5035, $P5036
  vivi_26765781:
    unless_null $P5035, vivi_26775782
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_26775782:
    set $P5030, $P5035
  fallback5778:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5783
    nqp_get_sc_object $P5040, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5039, $P5040
    set fb_tmp_530, $P5039
    repr_defined $I5006, fb_tmp_530
    unless $I5006 goto if2678_else5784 
    set $P5041, fb_tmp_530["$PACKAGE"]
    set $P5043, $P5041
    goto if2678_end5785
  if2678_else5784:
    null $P5042
    set $P5043, $P5042
  if2678_end5785:
    unless_null $P5043, vivi_26795786
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5043, $P5044
  vivi_26795786:
    unless_null $P5043, vivi_26805787
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_26805787:
    set $P5038, $P5043
  fallback5783:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2496
    set fb_tmp_531, $P101
    repr_defined $I5007, fb_tmp_531
    unless $I5007 goto if2681_else5788 
    set $P5048, fb_tmp_531[0]
    set $P5050, $P5048
    goto if2681_end5789
  if2681_else5788:
    null $P5049
    set $P5050, $P5049
  if2681_end5789:
    unless_null $P5050, vivi_26825790
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5050, $P5051
  vivi_26825790:
    nqp_get_sc_object $P5052, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2498
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2499
    nqp_get_sc_object $P5057, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5050."push"($P5060)
.annotate 'line', 2504
    find_lex $P5061, "$past"
    $P5061."blocktype"("declaration_static")
.annotate 'line', 2508
    find_dynamic_lex $P5062, "$*W"
    unless_null $P5062, fallback5791
    nqp_get_sc_object $P5064, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5063, $P5064
    set fb_tmp_532, $P5063
    repr_defined $I5008, fb_tmp_532
    unless $I5008 goto if2683_else5792 
    set $P5065, fb_tmp_532["$W"]
    set $P5067, $P5065
    goto if2683_end5793
  if2683_else5792:
    null $P5066
    set $P5067, $P5066
  if2683_end5793:
    unless_null $P5067, vivi_26845794
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5067, $P5068
  vivi_26845794:
    unless_null $P5067, vivi_26855795
    die "Contextual $*W not found"
    box $P5069, "Contextual $*W not found"
    set $P5067, $P5069
  vivi_26855795:
    set $P5062, $P5067
  fallback5791:
    find_lex $P5070, "$past"
    find_lex $P5071, "$name"
    $P5072 = $P5062."create_code"($P5070, $P5071, 0)
    set $P5073, $P5072
  if2671_end5772:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1381281828.51527") :anon :lex :outer("cuid_299_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2535
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_300_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2539
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5113 = 'cuid_483_1381281828.51527' 
    capture_lex $P5113 
    .const 'Sub' $P5113 = 'cuid_484_1381281828.51527' 
    capture_lex $P5113 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5839
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5004
  fallback5839:
    set fb_tmp_539, _lex_param_1
    repr_defined $I5001, fb_tmp_539
    unless $I5001 goto if2707_else5837 
    set $P5005, fb_tmp_539["onlystar"]
    set $P5007, $P5005
    goto if2707_end5838
  if2707_else5837:
    null $P5006
    set $P5007, $P5006
  if2707_end5838:
    unless_null $P5007, vivi_27085840
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_27085840:
    unless $P5007 goto if2706_else5835 
.annotate 'line', 2543
.annotate 'line', 2544
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2706_end5836
  if2706_else5835:
.annotate 'line', 2546
.annotate 'line', 2547
    unless_null _lex_param_1, fallback5843
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5010
  fallback5843:
    set fb_tmp_540, _lex_param_1
    repr_defined $I5002, fb_tmp_540
    unless $I5002 goto if2709_else5841 
    set $P5011, fb_tmp_540["blockoid"]
    set $P5013, $P5011
    goto if2709_end5842
  if2709_else5841:
    null $P5012
    set $P5013, $P5012
  if2709_end5842:
    unless_null $P5013, vivi_27105844
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_27105844:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5847
    nqp_get_sc_object $P5018, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5017, $P5018
    set fb_tmp_541, $P5017
    repr_defined $I5003, fb_tmp_541
    unless $I5003 goto if2712_else5848 
    set $P5019, fb_tmp_541["$RETURN_USED"]
    set $P5021, $P5019
    goto if2712_end5849
  if2712_else5848:
    null $P5020
    set $P5021, $P5020
  if2712_end5849:
    unless_null $P5021, vivi_27135850
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_27135850:
    unless_null $P5021, vivi_27145851
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27145851:
    set $P5016, $P5021
  fallback5847:
    set $P5029, $P5016
    unless $P5016 goto if2711_end5846 
.annotate 'line', 2548
.annotate 'line', 2549
    set fb_tmp_542, $P101
    repr_defined $I5004, fb_tmp_542
    unless $I5004 goto if2715_else5852 
    set $P5024, fb_tmp_542[1]
    set $P5026, $P5024
    goto if2715_end5853
  if2715_else5852:
    null $P5025
    set $P5026, $P5025
  if2715_end5853:
    unless_null $P5026, vivi_27165854
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_27165854:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2711_end5846:
  if2706_end5836:
.annotate 'line', 2552
    $P101."blocktype"("declaration_static")
    set fb_tmp_543, $P101
    repr_defined $I5005, fb_tmp_543
    unless $I5005 goto if2718_else5857 
    set $P5030, fb_tmp_543["signature_has_invocant"]
    set $P5032, $P5030
    goto if2718_end5858
  if2718_else5857:
    null $P5031
    set $P5032, $P5031
  if2718_end5858:
    unless_null $P5032, vivi_27195859
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5032, $P5033
  vivi_27195859:
    if $P5032 goto unless2717_end5856 
.annotate 'line', 2555
.annotate 'line', 2556
    set fb_tmp_544, $P101
    repr_defined $I5006, fb_tmp_544
    unless $I5006 goto if2720_else5860 
    set $P5034, fb_tmp_544[0]
    set $P5036, $P5034
    goto if2720_end5861
  if2720_else5860:
    null $P5035
    set $P5036, $P5035
  if2720_end5861:
    unless_null $P5036, vivi_27215862
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5036, $P5037
  vivi_27215862:
    nqp_get_sc_object $P5038, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback5863
    nqp_get_sc_object $P5041, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5040, $P5041
    set fb_tmp_545, $P5040
    repr_defined $I5007, fb_tmp_545
    unless $I5007 goto if2722_else5864 
    set $P5042, fb_tmp_545["$PACKAGE"]
    set $P5044, $P5042
    goto if2722_end5865
  if2722_else5864:
    null $P5043
    set $P5044, $P5043
  if2722_end5865:
    unless_null $P5044, vivi_27235866
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5044, $P5045
  vivi_27235866:
    unless_null $P5044, vivi_27245867
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27245867:
    set $P5039, $P5044
  fallback5863:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2717_end5856:
.annotate 'line', 2561
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback5872
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5050
  fallback5872:
    set fb_tmp_546, _lex_param_1
    repr_defined $I5008, fb_tmp_546
    unless $I5008 goto if2726_else5870 
    set $P5051, fb_tmp_546["deflongname"]
    set $P5053, $P5051
    goto if2726_end5871
  if2726_else5870:
    null $P5052
    set $P5053, $P5052
  if2726_end5871:
    unless_null $P5053, vivi_27275873
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5053, $P5054
  vivi_27275873:
    unless $P5053 goto if2725_else5868 
.annotate 'line', 2565
    unless_null _lex_param_1, fallback5876
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5055
  fallback5876:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5009, fb_tmp_547
    unless $I5009 goto if2728_else5874 
    set $P5056, fb_tmp_547["private"]
    set $P5058, $P5056
    goto if2728_end5875
  if2728_else5874:
    null $P5057
    set $P5058, $P5057
  if2728_end5875:
    unless_null $P5058, vivi_27295877
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5058, $P5059
  vivi_27295877:
    set $S5002, $P5058
.annotate 'line', 2566
    unless_null _lex_param_1, fallback5880
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5060
  fallback5880:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5010, fb_tmp_548
    unless $I5010 goto if2730_else5878 
    set $P5061, fb_tmp_548["deflongname"]
    set $P5063, $P5061
    goto if2730_end5879
  if2730_else5878:
    null $P5062
    set $P5063, $P5062
  if2730_end5879:
    unless_null $P5063, vivi_27315881
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5063, $P5064
  vivi_27315881:
    $P5065 = $P5063."ast"()
    set $S5003, $P5065
    concat $S5001, $S5002, $S5003
    box $P5066, $S5001
    set $P102, $P5066
    goto if2725_end5869
  if2725_else5868:
    unless_null _lex_param_1, fallback5886
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5067
  fallback5886:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5011, fb_tmp_549
    unless $I5011 goto if2733_else5884 
    set $P5068, fb_tmp_549["latename"]
    set $P5070, $P5068
    goto if2733_end5885
  if2733_else5884:
    null $P5069
    set $P5070, $P5069
  if2733_end5885:
    unless_null $P5070, vivi_27345887
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5070, $P5071
  vivi_27345887:
    set $P5088, $P5070
    unless $P5070 goto if2732_end5883 
.annotate 'line', 2568
    find_dynamic_lex $P5072, "$*PKGDECL"
    unless_null $P5072, fallback5890
    nqp_get_sc_object $P5074, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5073, $P5074
    set fb_tmp_550, $P5073
    repr_defined $I5013, fb_tmp_550
    unless $I5013 goto if2736_else5891 
    set $P5075, fb_tmp_550["$PKGDECL"]
    set $P5077, $P5075
    goto if2736_end5892
  if2736_else5891:
    null $P5076
    set $P5077, $P5076
  if2736_end5892:
    unless_null $P5077, vivi_27375893
    nqp_get_sc_object $P5078, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5077, $P5078
  vivi_27375893:
    unless_null $P5077, vivi_27385894
    die "Contextual $*PKGDECL not found"
    box $P5079, "Contextual $*PKGDECL not found"
    set $P5077, $P5079
  vivi_27385894:
    set $P5072, $P5077
  fallback5890:
    set $S5004, $P5072
    isne $I5012, $S5004, "role"
    unless $I5012 goto if2735_end5889 
.annotate 'line', 2569
.annotate 'line', 2570
    $P5080 = _lex_param_1."CURSOR"()
    $P5081 = $P5080."panic"("Late-bound method name only valid in role")
  if2735_end5889:
    unless_null _lex_param_1, fallback5897
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5082
  fallback5897:
    set fb_tmp_551, _lex_param_1
    repr_defined $I5014, fb_tmp_551
    unless $I5014 goto if2739_else5895 
    set $P5083, fb_tmp_551["latename"]
    set $P5085, $P5083
    goto if2739_end5896
  if2739_else5895:
    null $P5084
    set $P5085, $P5084
  if2739_end5896:
    unless_null $P5085, vivi_27405898
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5085, $P5086
  vivi_27405898:
    set $S5006, $P5085
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5087, $S5005
    set $P102, $P5087
    set $P5088, $P102
  if2732_end5883:
  if2725_end5869:
    set $S5007, $P102
    isne $I5015, $S5007, ""
    unless $I5015 goto if2741_end5900 
    .const 'Sub' $P5089 = 'cuid_483_1381281828.51527' 
    capture_lex $P5089
    $P5090 = $P5089()
  if2741_end5900:
.annotate 'line', 2608
    nqp_get_sc_object $P5091, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5092 = $P5091."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5092
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_563, $P101
    repr_defined $I5016, fb_tmp_563
    unless $I5016 goto if2777_else5960 
    set $P5093, fb_tmp_563["code_obj"]
    set $P5095, $P5093
    goto if2777_end5961
  if2777_else5960:
    null $P5094
    set $P5095, $P5094
  if2777_end5961:
    unless_null $P5095, vivi_27785962
    nqp_get_sc_object $P5096, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5095, $P5096
  vivi_27785962:
    set $P103["code_obj"], $P5095
.annotate 'line', 2612
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5967
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5097
  fallback5967:
    set fb_tmp_564, _lex_param_1
    repr_defined $I5017, fb_tmp_564
    unless $I5017 goto if2780_else5965 
    set $P5098, fb_tmp_564["trait"]
    set $P5100, $P5098
    goto if2780_end5966
  if2780_else5965:
    null $P5099
    set $P5100, $P5099
  if2780_end5966:
    unless_null $P5100, vivi_27815968
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5100, $P5101
  vivi_27815968:
    set $P5112, $P5100
    unless $P5100 goto if2779_end5964 
.annotate 'line', 2613
    unless_null _lex_param_1, fallback5971
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5105
  fallback5971:
    set fb_tmp_565, _lex_param_1
    repr_defined $I5018, fb_tmp_565
    unless $I5018 goto if2782_else5969 
    set $P5106, fb_tmp_565["trait"]
    set $P5108, $P5106
    goto if2782_end5970
  if2782_else5969:
    null $P5107
    set $P5108, $P5107
  if2782_end5970:
    unless_null $P5108, vivi_27835972
    nqp_get_sc_object $P5109, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5108, $P5109
  vivi_27835972:
    set $P5102, $P5108
    iter $P5104, $P5108
  for_next5973:
    unless $P5104, for_done5975
    shift $P5111, $P5104
  for_redo5974:
    .const 'Sub' $P5110 = 'cuid_484_1381281828.51527' 
    capture_lex $P5110
    $P5102 = $P5110($P5111)
    goto for_next5973
  for_done5975:
    set $P5112, $P5102
  if2779_end5964:
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1381281828.51527") :anon :lex :outer("cuid_300_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2574
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 2576
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback5903
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5007, $P5008
    set fb_tmp_552, $P5007
    repr_defined $I5002, fb_tmp_552
    unless $I5002 goto if2743_else5904 
    set $P5009, fb_tmp_552["$MULTINESS"]
    set $P5011, $P5009
    goto if2743_end5905
  if2743_else5904:
    null $P5010
    set $P5011, $P5010
  if2743_end5905:
    unless_null $P5011, vivi_27445906
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_27445906:
    unless_null $P5011, vivi_27455907
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27455907:
    set $P5006, $P5011
  fallback5903:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2742_else5901 
    set $S5002, "add_multi_method"
    goto if2742_end5902
  if2742_else5901:
    set $S5002, "add_method"
  if2742_end5902:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback5908
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5016, $P5017
    set fb_tmp_553, $P5016
    repr_defined $I5004, fb_tmp_553
    unless $I5004 goto if2746_else5909 
    set $P5018, fb_tmp_553["$MULTINESS"]
    set $P5020, $P5018
    goto if2746_end5910
  if2746_else5909:
    null $P5019
    set $P5020, $P5019
  if2746_end5910:
    unless_null $P5020, vivi_27475911
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_27475911:
    unless_null $P5020, vivi_27485912
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27485912:
    set $P5015, $P5020
  fallback5908:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2581
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback5913
    nqp_get_sc_object $P5026, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5025, $P5026
    set fb_tmp_554, $P5025
    repr_defined $I5005, fb_tmp_554
    unless $I5005 goto if2749_else5914 
    set $P5027, fb_tmp_554["$W"]
    set $P5029, $P5027
    goto if2749_end5915
  if2749_else5914:
    null $P5028
    set $P5029, $P5028
  if2749_end5915:
    unless_null $P5029, vivi_27505916
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5029, $P5030
  vivi_27505916:
    unless_null $P5029, vivi_27515917
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27515917:
    set $P5024, $P5029
  fallback5913:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback5920
    nqp_get_sc_object $P5037, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5036, $P5037
    set fb_tmp_555, $P5036
    repr_defined $I5007, fb_tmp_555
    unless $I5007 goto if2753_else5921 
    set $P5038, fb_tmp_555["$MULTINESS"]
    set $P5040, $P5038
    goto if2753_end5922
  if2753_else5921:
    null $P5039
    set $P5040, $P5039
  if2753_end5922:
    unless_null $P5040, vivi_27545923
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5041
  vivi_27545923:
    unless_null $P5040, vivi_27555924
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27555924:
    set $P5035, $P5040
  fallback5920:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2752_end5919 
.annotate 'line', 2582
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2752_end5919:
.annotate 'line', 2583
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback5925
    nqp_get_sc_object $P5047, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5046, $P5047
    set fb_tmp_556, $P5046
    repr_defined $I5008, fb_tmp_556
    unless $I5008 goto if2756_else5926 
    set $P5048, fb_tmp_556["$W"]
    set $P5050, $P5048
    goto if2756_end5927
  if2756_else5926:
    null $P5049
    set $P5050, $P5049
  if2756_end5927:
    unless_null $P5050, vivi_27575928
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5050, $P5051
  vivi_27575928:
    unless_null $P5050, vivi_27585929
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27585929:
    set $P5045, $P5050
  fallback5925:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback5930
    nqp_get_sc_object $P5055, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5054, $P5055
    set fb_tmp_557, $P5054
    repr_defined $I5009, fb_tmp_557
    unless $I5009 goto if2759_else5931 
    set $P5056, fb_tmp_557["$PACKAGE"]
    set $P5058, $P5056
    goto if2759_end5932
  if2759_else5931:
    null $P5057
    set $P5058, $P5057
  if2759_end5932:
    unless_null $P5058, vivi_27605933
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5058, $P5059
  vivi_27605933:
    unless_null $P5058, vivi_27615934
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27615934:
    set $P5053, $P5058
  fallback5930:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback5937
    nqp_get_sc_object $P5065, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5064, $P5065
    set fb_tmp_558, $P5064
    repr_defined $I5011, fb_tmp_558
    unless $I5011 goto if2763_else5938 
    set $P5066, fb_tmp_558["$SCOPE"]
    set $P5068, $P5066
    goto if2763_end5939
  if2763_else5938:
    null $P5067
    set $P5068, $P5067
  if2763_end5939:
    unless_null $P5068, vivi_27645940
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5068, $P5069
  vivi_27645940:
    unless_null $P5068, vivi_27655941
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27655941:
    set $P5063, $P5068
  fallback5937:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2762_end5936 
.annotate 'line', 2587
.annotate 'line', 2588
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback5942
    nqp_get_sc_object $P5073, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5072, $P5073
    set fb_tmp_559, $P5072
    repr_defined $I5012, fb_tmp_559
    unless $I5012 goto if2766_else5943 
    set $P5074, fb_tmp_559["$W"]
    set $P5076, $P5074
    goto if2766_end5944
  if2766_else5943:
    null $P5075
    set $P5076, $P5075
  if2766_end5944:
    unless_null $P5076, vivi_27675945
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5076, $P5077
  vivi_27675945:
    unless_null $P5076, vivi_27685946
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_27685946:
    set $P5071, $P5076
  fallback5942:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback5947
    nqp_get_sc_object $P5081, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5080, $P5081
    set fb_tmp_560, $P5080
    repr_defined $I5013, fb_tmp_560
    unless $I5013 goto if2769_else5948 
    set $P5082, fb_tmp_560["$PACKAGE"]
    set $P5084, $P5082
    goto if2769_end5949
  if2769_else5948:
    null $P5083
    set $P5084, $P5083
  if2769_end5949:
    unless_null $P5084, vivi_27705950
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5084, $P5085
  vivi_27705950:
    unless_null $P5084, vivi_27715951
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_27715951:
    set $P5079, $P5084
  fallback5947:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2762_end5936:
    set $P5115, $P102
    unless $P102 goto if2772_end5953 
.annotate 'line', 2593
.annotate 'line', 2594
    find_lex $P5090, "$past"
    set fb_tmp_561, $P5090
    repr_defined $I5014, fb_tmp_561
    unless $I5014 goto if2773_else5954 
    set $P5091, fb_tmp_561[0]
    set $P5093, $P5091
    goto if2773_end5955
  if2773_else5954:
    null $P5092
    set $P5093, $P5092
  if2773_end5955:
    unless_null $P5093, vivi_27745956
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5093, $P5094
  vivi_27745956:
    nqp_get_sc_object $P5095, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2596
    nqp_get_sc_object $P5096, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2597
    nqp_get_sc_object $P5098, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2599
    find_lex $P5101, "$past"
    set fb_tmp_562, $P5101
    repr_defined $I5015, fb_tmp_562
    unless $I5015 goto if2775_else5957 
    set $P5102, fb_tmp_562[0]
    set $P5104, $P5102
    goto if2775_end5958
  if2775_else5957:
    null $P5103
    set $P5104, $P5103
  if2775_end5958:
    unless_null $P5104, vivi_27765959
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5104, $P5105
  vivi_27765959:
    nqp_get_sc_object $P5106, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2601
    nqp_get_sc_object $P5107, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2602
    nqp_get_sc_object $P5109, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    nqp_get_sc_object $P5110, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2772_end5953:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1381281828.51527") :anon :lex :outer("cuid_300_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2614
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_301_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2666
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_485_1381281828.51527' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_486_1381281828.51527' 
    capture_lex $P5039 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2667
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5976
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_566, $P5004
    repr_defined $I5001, fb_tmp_566
    unless $I5001 goto if2784_else5977 
    set $P5006, fb_tmp_566["$W"]
    set $P5008, $P5006
    goto if2784_end5978
  if2784_else5977:
    null $P5007
    set $P5008, $P5007
  if2784_end5978:
    unless_null $P5008, vivi_27855979
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_27855979:
    unless_null $P5008, vivi_27865980
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_27865980:
    set $P5003, $P5008
  fallback5976:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_567, $P101
    repr_defined $I5002, fb_tmp_567
    unless $I5002 goto if2787_else5981 
    set $P5012, fb_tmp_567[0]
    set $P5014, $P5012
    goto if2787_end5982
  if2787_else5981:
    null $P5013
    set $P5014, $P5013
  if2787_end5982:
    unless_null $P5014, vivi_27885983
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_27885983:
    set $P102, $P5014
    unless_null _lex_param_1, fallback5988
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5016
  fallback5988:
    set fb_tmp_568, _lex_param_1
    repr_defined $I5003, fb_tmp_568
    unless $I5003 goto if2790_else5986 
    set $P5017, fb_tmp_568["invocant"]
    set $P5019, $P5017
    goto if2790_end5987
  if2790_else5986:
    null $P5018
    set $P5019, $P5018
  if2790_end5987:
    unless_null $P5019, vivi_27915989
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_27915989:
    unless $P5019 goto if2789_end5985 
    .const 'Sub' $P5021 = 'cuid_485_1381281828.51527' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2789_end5985:
    unless_null _lex_param_1, fallback5998
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5023
  fallback5998:
    set fb_tmp_570, _lex_param_1
    repr_defined $I5004, fb_tmp_570
    unless $I5004 goto if2795_else5996 
    set $P5024, fb_tmp_570["parameter"]
    set $P5026, $P5024
    goto if2795_end5997
  if2795_else5996:
    null $P5025
    set $P5026, $P5025
  if2795_end5997:
    unless_null $P5026, vivi_27965999
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_27965999:
    set $P5038, $P5026
    unless $P5026 goto if2794_end5995 
.annotate 'line', 2679
    unless_null _lex_param_1, fallback6002
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5031
  fallback6002:
    set fb_tmp_571, _lex_param_1
    repr_defined $I5005, fb_tmp_571
    unless $I5005 goto if2797_else6000 
    set $P5032, fb_tmp_571["parameter"]
    set $P5034, $P5032
    goto if2797_end6001
  if2797_else6000:
    null $P5033
    set $P5034, $P5033
  if2797_end6001:
    unless_null $P5034, vivi_27986003
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  vivi_27986003:
    set $P5028, $P5034
    iter $P5030, $P5034
  for_next6004:
    unless $P5030, for_done6006
    shift $P5037, $P5030
  for_redo6005:
    .const 'Sub' $P5036 = 'cuid_486_1381281828.51527' 
    capture_lex $P5036
    $P5028 = $P5036($P5037)
    goto for_next6004
  for_done6006:
    set $P5038, $P5028
  if2794_end5995:
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1381281828.51527") :anon :lex :outer("cuid_301_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2669
    .lex "$inv", $P101 
    .local pmc fb_tmp_569 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2670
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5992
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback5992:
    set fb_tmp_569, $P5002
    repr_defined $I5001, fb_tmp_569
    unless $I5001 goto if2792_else5990 
    set $P5004, fb_tmp_569["invocant"]
    set $P5006, $P5004
    goto if2792_end5991
  if2792_else5990:
    null $P5005
    set $P5006, $P5005
  if2792_end5991:
    unless_null $P5006, vivi_27935993
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_27935993:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2671
    find_lex $P5009, "$BLOCKINIT"
    $P5009."push"($P101)
.annotate 'line', 2672
    find_lex $P5010, "$BLOCKINIT"
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2674
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5013 = $P5012."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2675
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5015 = $P101."name"()
    $P5016 = $P5014."new"("lexical" :named("scope"), $P5015 :named("name"))
    $P5017 = $P5011."new"($P5013, $P5016, "bind" :named("op"))
    $P5010."push"($P5017)
    find_lex $P5018, "$BLOCK"
    box $P5019, 1
    set $P5018["signature_has_invocant"], $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1381281828.51527") :anon :lex :outer("cuid_301_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2680
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_302_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2684
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_488_1381281828.51527' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6009
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback6009:
    set fb_tmp_572, _lex_param_1
    repr_defined $I5001, fb_tmp_572
    unless $I5001 goto if2799_else6007 
    set $P5004, fb_tmp_572["quant"]
    set $P5006, $P5004
    goto if2799_end6008
  if2799_else6007:
    null $P5005
    set $P5006, $P5005
  if2799_end6008:
    unless_null $P5006, vivi_28006010
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_28006010:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6015
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6015:
    set fb_tmp_573, _lex_param_1
    repr_defined $I5002, fb_tmp_573
    unless $I5002 goto if2802_else6013 
    set $P5009, fb_tmp_573["named_param"]
    set $P5011, $P5009
    goto if2802_end6014
  if2802_else6013:
    null $P5010
    set $P5011, $P5010
  if2802_end6014:
    unless_null $P5011, vivi_28036016
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_28036016:
    unless $P5011 goto if2801_else6011 
.annotate 'line', 2687
.annotate 'line', 2688
    unless_null _lex_param_1, fallback6019
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5013
  fallback6019:
    set fb_tmp_574, _lex_param_1
    repr_defined $I5003, fb_tmp_574
    unless $I5003 goto if2804_else6017 
    set $P5014, fb_tmp_574["named_param"]
    set $P5016, $P5014
    goto if2804_end6018
  if2804_else6017:
    null $P5015
    set $P5016, $P5015
  if2804_end6018:
    unless_null $P5016, vivi_28056020
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_28056020:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2806_end6022 
.annotate 'line', 2689
.annotate 'line', 2690
    unless_null _lex_param_1, fallback6029
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5019
  fallback6029:
    set fb_tmp_577, _lex_param_1
    repr_defined $I5007, fb_tmp_577
    unless $I5007 goto if2809_else6027 
    set $P5020, fb_tmp_577["named_param"]
    set $P5022, $P5020
    goto if2809_end6028
  if2809_else6027:
    null $P5021
    set $P5022, $P5021
  if2809_end6028:
    unless_null $P5022, vivi_28106030
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_28106030:
    set fb_tmp_576, $P5022
    repr_defined $I5006, fb_tmp_576
    unless $I5006 goto if2808_else6025 
    set $P5024, fb_tmp_576["param_var"]
    set $P5026, $P5024
    goto if2808_end6026
  if2808_else6025:
    null $P5025
    set $P5026, $P5025
  if2808_end6026:
    unless_null $P5026, vivi_28116031
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_28116031:
    set fb_tmp_575, $P5026
    repr_defined $I5005, fb_tmp_575
    unless $I5005 goto if2807_else6023 
    set $P5028, fb_tmp_575["sigil"]
    set $P5030, $P5028
    goto if2807_end6024
  if2807_else6023:
    null $P5029
    set $P5030, $P5029
  if2807_end6024:
    unless_null $P5030, vivi_28126032
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5030, $P5031
  vivi_28126032:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2806_end6022:
    goto if2801_end6012
  if2801_else6011:
.annotate 'line', 2693
.annotate 'line', 2694
    unless_null _lex_param_1, fallback6035
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5036
  fallback6035:
    set fb_tmp_578, _lex_param_1
    repr_defined $I5008, fb_tmp_578
    unless $I5008 goto if2813_else6033 
    set $P5037, fb_tmp_578["param_var"]
    set $P5039, $P5037
    goto if2813_end6034
  if2813_else6033:
    null $P5038
    set $P5039, $P5038
  if2813_end6034:
    unless_null $P5039, vivi_28146036
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5039, $P5040
  vivi_28146036:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2815_else6037 
.annotate 'line', 2695
.annotate 'line', 2696
    $P102."slurpy"(1)
.annotate 'line', 2697
    unless_null _lex_param_1, fallback6043
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5042
  fallback6043:
    set fb_tmp_580, _lex_param_1
    repr_defined $I5012, fb_tmp_580
    unless $I5012 goto if2817_else6041 
    set $P5043, fb_tmp_580["param_var"]
    set $P5045, $P5043
    goto if2817_end6042
  if2817_else6041:
    null $P5044
    set $P5045, $P5044
  if2817_end6042:
    unless_null $P5045, vivi_28186044
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  vivi_28186044:
    set fb_tmp_579, $P5045
    repr_defined $I5011, fb_tmp_579
    unless $I5011 goto if2816_else6039 
    set $P5047, fb_tmp_579["sigil"]
    set $P5049, $P5047
    goto if2816_end6040
  if2816_else6039:
    null $P5048
    set $P5049, $P5048
  if2816_end6040:
    unless_null $P5049, vivi_28196045
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_28196045:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2815_end6038
  if2815_else6037:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2820_end6047 
.annotate 'line', 2699
.annotate 'line', 2700
    unless_null _lex_param_1, fallback6052
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5052
  fallback6052:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5015, fb_tmp_582
    unless $I5015 goto if2822_else6050 
    set $P5053, fb_tmp_582["param_var"]
    set $P5055, $P5053
    goto if2822_end6051
  if2822_else6050:
    null $P5054
    set $P5055, $P5054
  if2822_end6051:
    unless_null $P5055, vivi_28236053
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5055, $P5056
  vivi_28236053:
    set fb_tmp_581, $P5055
    repr_defined $I5014, fb_tmp_581
    unless $I5014 goto if2821_else6048 
    set $P5057, fb_tmp_581["sigil"]
    set $P5059, $P5057
    goto if2821_end6049
  if2821_else6048:
    null $P5058
    set $P5059, $P5058
  if2821_end6049:
    unless_null $P5059, vivi_28246054
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5059, $P5060
  vivi_28246054:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2820_end6047:
    set $P5065, $P5063
  if2815_end6038:
  if2801_end6012:
    unless_null _lex_param_1, fallback6059
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5066
  fallback6059:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5016, fb_tmp_583
    unless $I5016 goto if2826_else6057 
    set $P5067, fb_tmp_583["default_value"]
    set $P5069, $P5067
    goto if2826_end6058
  if2826_else6057:
    null $P5068
    set $P5069, $P5068
  if2826_end6058:
    unless_null $P5069, vivi_28276060
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5069, $P5070
  vivi_28276060:
    unless $P5069 goto if2825_end6056 
.annotate 'line', 2703
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2828_end6062 
.annotate 'line', 2704
.annotate 'line', 2705
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2828_end6062:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2829_end6064 
.annotate 'line', 2707
.annotate 'line', 2708
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2829_end6064:
.annotate 'line', 2710
    unless_null _lex_param_1, fallback6071
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5075
  fallback6071:
    set fb_tmp_586, _lex_param_1
    repr_defined $I5021, fb_tmp_586
    unless $I5021 goto if2832_else6069 
    set $P5076, fb_tmp_586["default_value"]
    set $P5078, $P5076
    goto if2832_end6070
  if2832_else6069:
    null $P5077
    set $P5078, $P5077
  if2832_end6070:
    unless_null $P5078, vivi_28336072
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5078, $P5079
  vivi_28336072:
    set fb_tmp_585, $P5078
    repr_defined $I5020, fb_tmp_585
    unless $I5020 goto if2831_else6067 
    set $P5080, fb_tmp_585[0]
    set $P5082, $P5080
    goto if2831_end6068
  if2831_else6067:
    null $P5081
    set $P5082, $P5081
  if2831_end6068:
    unless_null $P5082, vivi_28346073
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5082, $P5083
  vivi_28346073:
    set fb_tmp_584, $P5082
    repr_defined $I5019, fb_tmp_584
    unless $I5019 goto if2830_else6065 
    set $P5084, fb_tmp_584["EXPR"]
    set $P5086, $P5084
    goto if2830_end6066
  if2830_else6065:
    null $P5085
    set $P5086, $P5085
  if2830_end6066:
    unless_null $P5086, vivi_28356074
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5086, $P5087
  vivi_28356074:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2825_end6056:
.annotate 'line', 2712
    $P5090 = $P102."default"()
    if $P5090 goto unless2836_end6076 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6077
    nqp_get_sc_object $P5093, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5092, $P5093
    set fb_tmp_587, $P5092
    repr_defined $I5022, fb_tmp_587
    unless $I5022 goto if2837_else6078 
    set $P5094, fb_tmp_587["$W"]
    set $P5096, $P5094
    goto if2837_end6079
  if2837_else6078:
    null $P5095
    set $P5096, $P5095
  if2837_end6079:
    unless_null $P5096, vivi_28386080
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5096, $P5097
  vivi_28386080:
    unless_null $P5096, vivi_28396081
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28396081:
    set $P5091, $P5096
  fallback6077:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6082
    nqp_get_sc_object $P5102, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5101, $P5102
    set fb_tmp_588, $P5101
    repr_defined $I5023, fb_tmp_588
    unless $I5023 goto if2840_else6083 
    set $P5103, fb_tmp_588["$W"]
    set $P5105, $P5103
    goto if2840_end6084
  if2840_else6083:
    null $P5104
    set $P5105, $P5104
  if2840_end6084:
    unless_null $P5105, vivi_28416085
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5105, $P5106
  vivi_28416085:
    unless_null $P5105, vivi_28426086
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28426086:
    set $P5100, $P5105
  fallback6082:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2836_end6076:
    unless_null _lex_param_1, fallback6091
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5111
  fallback6091:
    set fb_tmp_589, _lex_param_1
    repr_defined $I5024, fb_tmp_589
    unless $I5024 goto if2844_else6089 
    set $P5112, fb_tmp_589["typename"]
    set $P5114, $P5112
    goto if2844_end6090
  if2844_else6089:
    null $P5113
    set $P5114, $P5113
  if2844_end6090:
    unless_null $P5114, vivi_28456092
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5114, $P5115
  vivi_28456092:
    unless $P5114 goto if2843_end6088 
    .const 'Sub' $P5116 = 'cuid_488_1381281828.51527' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2843_end6088:
    unless_null _lex_param_1, fallback6119
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5118
  fallback6119:
    set fb_tmp_594, _lex_param_1
    repr_defined $I5025, fb_tmp_594
    unless $I5025 goto if2859_else6117 
    set $P5119, fb_tmp_594["definedness"]
    set $P5121, $P5119
    goto if2859_end6118
  if2859_else6117:
    null $P5120
    set $P5121, $P5120
  if2859_end6118:
    unless_null $P5121, vivi_28606120
    nqp_get_sc_object $P5122, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5121, $P5122
  vivi_28606120:
    unless $P5121 goto if2858_end6116 
.annotate 'line', 2727
    unless_null _lex_param_1, fallback6125
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5123
  fallback6125:
    set fb_tmp_596, _lex_param_1
    repr_defined $I5027, fb_tmp_596
    unless $I5027 goto if2862_else6123 
    set $P5124, fb_tmp_596["definedness"]
    set $P5126, $P5124
    goto if2862_end6124
  if2862_else6123:
    null $P5125
    set $P5126, $P5125
  if2862_end6124:
    unless_null $P5126, vivi_28636126
    nqp_get_sc_object $P5127, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5126, $P5127
  vivi_28636126:
    set fb_tmp_595, $P5126
    repr_defined $I5026, fb_tmp_595
    unless $I5026 goto if2861_else6121 
    set $P5128, fb_tmp_595[0]
    set $P5130, $P5128
    goto if2861_end6122
  if2861_else6121:
    null $P5129
    set $P5130, $P5129
  if2861_end6122:
    unless_null $P5130, vivi_28646127
    nqp_get_sc_object $P5131, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5130, $P5131
  vivi_28646127:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2858_end6116:
.annotate 'line', 2731
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1381281828.51527") :anon :lex :outer("cuid_302_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2715
    .const 'Sub' $P5019 = 'cuid_487_1381281828.51527' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2716
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6097
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback6097:
    set fb_tmp_591, $P5002
    repr_defined $I5002, fb_tmp_591
    unless $I5002 goto if2847_else6095 
    set $P5004, fb_tmp_591["typename"]
    set $P5006, $P5004
    goto if2847_end6096
  if2847_else6095:
    null $P5005
    set $P5006, $P5005
  if2847_end6096:
    unless_null $P5006, vivi_28486098
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_28486098:
    set fb_tmp_590, $P5006
    repr_defined $I5001, fb_tmp_590
    unless $I5001 goto if2846_else6093 
    set $P5008, fb_tmp_590[0]
    set $P5010, $P5008
    goto if2846_end6094
  if2846_else6093:
    null $P5009
    set $P5010, $P5009
  if2846_end6094:
    unless_null $P5010, vivi_28496099
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_28496099:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2717
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2850_end6101 
    .const 'Sub' $P5015 = 'cuid_487_1381281828.51527' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2850_end6101:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1381281828.51527") :anon :lex :outer("cuid_488_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2718
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
.annotate 'line', 2719
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6102
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_592, $P5002
    repr_defined $I5001, fb_tmp_592
    unless $I5001 goto if2851_else6103 
    set $P5004, fb_tmp_592["$W"]
    set $P5006, $P5004
    goto if2851_end6104
  if2851_else6103:
    null $P5005
    set $P5006, $P5005
  if2851_end6104:
    unless_null $P5006, vivi_28526105
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_28526105:
    unless_null $P5006, vivi_28536106
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28536106:
    set $P5001, $P5006
  fallback6102:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2720
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2855_end6110 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6113
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  fallback6113:
    set fb_tmp_593, $P5015
    repr_defined $I5003, fb_tmp_593
    unless $I5003 goto if2856_else6111 
    set $P5017, fb_tmp_593["default_value"]
    set $P5019, $P5017
    goto if2856_end6112
  if2856_else6111:
    null $P5018
    set $P5019, $P5018
  if2856_end6112:
    unless_null $P5019, vivi_28576114
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5019, $P5020
  vivi_28576114:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2855_end6110:
    set $P5026, $P5021
    unless $P5021 goto if2854_end6108 
.annotate 'line', 2721
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2854_end6108:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_303_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2734
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_597 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2736
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2738
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6128
    nqp_get_sc_object $P5008, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5007, $P5008
    set fb_tmp_597, $P5007
    repr_defined $I5001, fb_tmp_597
    unless $I5001 goto if2865_else6129 
    set $P5009, fb_tmp_597["$W"]
    set $P5011, $P5009
    goto if2865_end6130
  if2865_else6129:
    null $P5010
    set $P5011, $P5010
  if2865_end6130:
    unless_null $P5011, vivi_28666131
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_28666131:
    unless_null $P5011, vivi_28676132
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28676132:
    set $P5006, $P5011
  fallback6128:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2739
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_304_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2742
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_600 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2743
    unless_null _lex_param_1, fallback6135
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6135:
    set fb_tmp_598, _lex_param_1
    repr_defined $I5001, fb_tmp_598
    unless $I5001 goto if2868_else6133 
    set $P5003, fb_tmp_598["param_var"]
    set $P5005, $P5003
    goto if2868_end6134
  if2868_else6133:
    null $P5004
    set $P5005, $P5004
  if2868_end6134:
    unless_null $P5005, vivi_28696136
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_28696136:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2744
    unless_null _lex_param_1, fallback6141
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6141:
    set fb_tmp_600, _lex_param_1
    repr_defined $I5003, fb_tmp_600
    unless $I5003 goto if2871_else6139 
    set $P5009, fb_tmp_600["param_var"]
    set $P5011, $P5009
    goto if2871_end6140
  if2871_else6139:
    null $P5010
    set $P5011, $P5010
  if2871_end6140:
    unless_null $P5011, vivi_28726142
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_28726142:
    set fb_tmp_599, $P5011
    repr_defined $I5002, fb_tmp_599
    unless $I5002 goto if2870_else6137 
    set $P5013, fb_tmp_599["name"]
    set $P5015, $P5013
    goto if2870_end6138
  if2870_else6137:
    null $P5014
    set $P5015, $P5014
  if2870_end6138:
    unless_null $P5015, vivi_28736143
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_28736143:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2745
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_305_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2748
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_489_1381281828.51527' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2752
    nqp_get_sc_object $P5003, "30F2FDCF121B88EF4D971E3D787EDDB9E926F649-1381281791.94485", 127
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_28786150
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_489_1381281828.51527' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_28776149
  catch_handler_28786150:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_28776149
  skip_handler_28776149:
    set $P5012, $P102
    if $P102 goto unless2879_end6152 
.annotate 'line', 2759
.annotate 'line', 2760
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2879_end6152:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1381281828.51527") :anon :lex :outer("cuid_305_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2754
    .lex "$sym", $P101 
    .local pmc fb_tmp_601 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2755
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6144
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_601, $P5003
    repr_defined $I5001, fb_tmp_601
    unless $I5001 goto if2874_else6145 
    set $P5005, fb_tmp_601["$W"]
    set $P5007, $P5005
    goto if2874_end6146
  if2874_else6145:
    null $P5006
    set $P5007, $P5006
  if2874_end6146:
    unless_null $P5007, vivi_28756147
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_28756147:
    unless_null $P5007, vivi_28766148
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_28766148:
    set $P5002, $P5007
  fallback6144:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2756
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_306_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2764
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_602 
.annotate 'line', 2765
    unless_null _lex_param_1, fallback6155
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6155:
    set fb_tmp_602, _lex_param_1
    repr_defined $I5001, fb_tmp_602
    unless $I5001 goto if2880_else6153 
    set $P5002, fb_tmp_602["trait_mod"]
    set $P5004, $P5002
    goto if2880_end6154
  if2880_else6153:
    null $P5003
    set $P5004, $P5003
  if2880_end6154:
    unless_null $P5004, vivi_28816156
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_28816156:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_307_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2768
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_491_1381281828.51527' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_493_1381281828.51527' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_494_1381281828.51527' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_495_1381281828.51527' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_496_1381281828.51527' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_603 
    .local pmc fb_tmp_612 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_629 
    unless_null _lex_param_1, fallback6161
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6161:
    set fb_tmp_603, _lex_param_1
    repr_defined $I5002, fb_tmp_603
    unless $I5002 goto if2883_else6159 
    set $P5002, fb_tmp_603["longname"]
    set $P5004, $P5002
    goto if2883_end6160
  if2883_else6159:
    null $P5003
    set $P5004, $P5003
  if2883_end6160:
    unless_null $P5004, vivi_28846162
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_28846162:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2882_else6157 
    .const 'Sub' $P5006 = 'cuid_491_1381281828.51527' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2882_end6158
  if2882_else6157:
    unless_null _lex_param_1, fallback6203
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6203:
    set fb_tmp_612, _lex_param_1
    repr_defined $I5004, fb_tmp_612
    unless $I5004 goto if2907_else6201 
    set $P5009, fb_tmp_612["longname"]
    set $P5011, $P5009
    goto if2907_end6202
  if2907_else6201:
    null $P5010
    set $P5011, $P5010
  if2907_end6202:
    unless_null $P5011, vivi_29086204
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_29086204:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2906_else6199 
    .const 'Sub' $P5013 = 'cuid_493_1381281828.51527' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2906_end6200
  if2906_else6199:
    unless_null _lex_param_1, fallback6231
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5015
  fallback6231:
    set fb_tmp_618, _lex_param_1
    repr_defined $I5006, fb_tmp_618
    unless $I5006 goto if2923_else6229 
    set $P5016, fb_tmp_618["longname"]
    set $P5018, $P5016
    goto if2923_end6230
  if2923_else6229:
    null $P5017
    set $P5018, $P5017
  if2923_end6230:
    unless_null $P5018, vivi_29246232
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_29246232:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2922_else6227 
.annotate 'line', 2794
.annotate 'line', 2795
    .const 'Sub' $P5021 = 'cuid_494_1381281828.51527' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2922_end6228
  if2922_else6227:
    unless_null _lex_param_1, fallback6242
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5023
  fallback6242:
    set fb_tmp_620, _lex_param_1
    repr_defined $I5008, fb_tmp_620
    unless $I5008 goto if2929_else6240 
    set $P5024, fb_tmp_620["longname"]
    set $P5026, $P5024
    goto if2929_end6241
  if2929_else6240:
    null $P5025
    set $P5026, $P5025
  if2929_end6241:
    unless_null $P5026, vivi_29306243
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_29306243:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2928_else6238 
.annotate 'line', 2797
.annotate 'line', 2798
    .const 'Sub' $P5029 = 'cuid_495_1381281828.51527' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2928_end6239
  if2928_else6238:
    unless_null _lex_param_1, fallback6253
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5031
  fallback6253:
    set fb_tmp_622, _lex_param_1
    repr_defined $I5010, fb_tmp_622
    unless $I5010 goto if2935_else6251 
    set $P5032, fb_tmp_622["longname"]
    set $P5034, $P5032
    goto if2935_end6252
  if2935_else6251:
    null $P5033
    set $P5034, $P5033
  if2935_end6252:
    unless_null $P5034, vivi_29366254
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  vivi_29366254:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2934_else6249 
.annotate 'line', 2800
.annotate 'line', 2801
    .const 'Sub' $P5037 = 'cuid_496_1381281828.51527' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2934_end6250
  if2934_else6249:
.annotate 'line', 2808
.annotate 'line', 2809
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6280
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5040
  fallback6280:
    set fb_tmp_629, _lex_param_1
    repr_defined $I5011, fb_tmp_629
    unless $I5011 goto if2951_else6278 
    set $P5041, fb_tmp_629["longname"]
    set $P5043, $P5041
    goto if2951_end6279
  if2951_else6278:
    null $P5042
    set $P5043, $P5042
  if2951_end6279:
    unless_null $P5043, vivi_29526281
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5043, $P5044
  vivi_29526281:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2934_end6250:
    set $P5047, $P5046
  if2928_end6239:
    set $P5048, $P5047
  if2922_end6228:
    set $P5049, $P5048
  if2906_end6200:
    set $P5050, $P5049
  if2882_end6158:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1381281828.51527") :anon :lex :outer("cuid_307_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2769
    .const 'Sub' $P5043 = 'cuid_490_1381281828.51527' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P104, $P5004
.annotate 'line', 2771
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6167
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  fallback6167:
    set fb_tmp_605, $P5005
    repr_defined $I5002, fb_tmp_605
    unless $I5002 goto if2886_else6165 
    set $P5007, fb_tmp_605["circumfix"]
    set $P5009, $P5007
    goto if2886_end6166
  if2886_else6165:
    null $P5008
    set $P5009, $P5008
  if2886_end6166:
    unless_null $P5009, vivi_28876168
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_28876168:
    set fb_tmp_604, $P5009
    repr_defined $I5001, fb_tmp_604
    unless $I5001 goto if2885_else6163 
    set $P5011, fb_tmp_604[0]
    set $P5013, $P5011
    goto if2885_end6164
  if2885_else6163:
    null $P5012
    set $P5013, $P5012
  if2885_end6164:
    unless_null $P5013, vivi_28886169
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_28886169:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2773
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2889_end6171 
.annotate 'line', 2772
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2889_end6171:
.annotate 'line', 2774
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6172
    nqp_get_sc_object $P5024, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5023, $P5024
    set fb_tmp_606, $P5023
    repr_defined $I5003, fb_tmp_606
    unless $I5003 goto if2890_else6173 
    set $P5025, fb_tmp_606["$PACKAGE"]
    set $P5027, $P5025
    goto if2890_end6174
  if2890_else6173:
    null $P5026
    set $P5027, $P5026
  if2890_end6174:
    unless_null $P5027, vivi_28916175
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5027, $P5028
  vivi_28916175:
    unless_null $P5027, vivi_28926176
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_28926176:
    set $P5022, $P5027
  fallback6172:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6177
    nqp_get_sc_object $P5032, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5031, $P5032
    set fb_tmp_607, $P5031
    repr_defined $I5005, fb_tmp_607
    unless $I5005 goto if2893_else6178 
    set $P5033, fb_tmp_607["$SCOPE"]
    set $P5035, $P5033
    goto if2893_end6179
  if2893_else6178:
    null $P5034
    set $P5035, $P5034
  if2893_end6179:
    unless_null $P5035, vivi_28946180
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5035, $P5036
  vivi_28946180:
    unless_null $P5035, vivi_28956181
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_28956181:
    set $P5030, $P5035
  fallback6177:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2777
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_490_1381281828.51527' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1381281828.51527") :anon :lex :outer("cuid_491_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2777
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_608 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
.annotate 'line', 2778
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6182
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_608, $P5002
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2896_else6183 
    set $P5004, fb_tmp_608["$W"]
    set $P5006, $P5004
    goto if2896_end6184
  if2896_else6183:
    null $P5005
    set $P5006, $P5005
  if2896_end6184:
    unless_null $P5006, vivi_28976185
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_28976185:
    unless_null $P5006, vivi_28986186
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28986186:
    set $P5001, $P5006
  fallback6182:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2779
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_609, $P5012
    repr_defined $I5003, fb_tmp_609
    unless $I5003 goto if2899_else6188 
    set $P5013, fb_tmp_609["code_obj"]
    set $P5015, $P5013
    goto if2899_end6189
  if2899_else6188:
    null $P5014
    set $P5015, $P5014
  if2899_end6189:
    unless_null $P5015, vivi_29006190
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_29006190:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6187
.annotate 'line', 2780
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6191
    nqp_get_sc_object $P5019, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5018, $P5019
    set fb_tmp_610, $P5018
    repr_defined $I5004, fb_tmp_610
    unless $I5004 goto if2901_else6192 
    set $P5020, fb_tmp_610["$W"]
    set $P5022, $P5020
    goto if2901_end6193
  if2901_else6192:
    null $P5021
    set $P5022, $P5021
  if2901_end6193:
    unless_null $P5022, vivi_29026194
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_29026194:
    unless_null $P5022, vivi_29036195
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29036195:
    set $P5017, $P5022
  fallback6191:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_611, $P5025
    repr_defined $I5005, fb_tmp_611
    unless $I5005 goto if2904_else6196 
    set $P5026, fb_tmp_611["block_past"]
    set $P5028, $P5026
    goto if2904_end6197
  if2904_else6196:
    null $P5027
    set $P5028, $P5027
  if2904_end6197:
    unless_null $P5028, vivi_29056198
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_29056198:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6187:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1381281828.51527") :anon :lex :outer("cuid_307_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2783
    .const 'Sub' $P5033 = 'cuid_492_1381281828.51527' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 2785
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6209
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  fallback6209:
    set fb_tmp_614, $P5004
    repr_defined $I5002, fb_tmp_614
    unless $I5002 goto if2910_else6207 
    set $P5006, fb_tmp_614["circumfix"]
    set $P5008, $P5006
    goto if2910_end6208
  if2910_else6207:
    null $P5007
    set $P5008, $P5007
  if2910_end6208:
    unless_null $P5008, vivi_29116210
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_29116210:
    set fb_tmp_613, $P5008
    repr_defined $I5001, fb_tmp_613
    unless $I5001 goto if2909_else6205 
    set $P5010, fb_tmp_613[0]
    set $P5012, $P5010
    goto if2909_end6206
  if2909_else6205:
    null $P5011
    set $P5012, $P5011
  if2909_end6206:
    unless_null $P5012, vivi_29126211
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_29126211:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2787
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2913_end6213 
.annotate 'line', 2786
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2913_end6213:
.annotate 'line', 2788
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6214
    nqp_get_sc_object $P5023, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5022, $P5023
    set fb_tmp_615, $P5022
    repr_defined $I5003, fb_tmp_615
    unless $I5003 goto if2914_else6215 
    set $P5024, fb_tmp_615["$PACKAGE"]
    set $P5026, $P5024
    goto if2914_end6216
  if2914_else6215:
    null $P5025
    set $P5026, $P5025
  if2914_end6216:
    unless_null $P5026, vivi_29156217
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_29156217:
    unless_null $P5026, vivi_29166218
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29166218:
    set $P5021, $P5026
  fallback6214:
    set $P103, $P5021
.annotate 'line', 2790
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_492_1381281828.51527' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1381281828.51527") :anon :lex :outer("cuid_493_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2790
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
.annotate 'line', 2791
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6219
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_616, $P5002
    repr_defined $I5001, fb_tmp_616
    unless $I5001 goto if2917_else6220 
    set $P5004, fb_tmp_616["$W"]
    set $P5006, $P5004
    goto if2917_end6221
  if2917_else6220:
    null $P5005
    set $P5006, $P5005
  if2917_end6221:
    unless_null $P5006, vivi_29186222
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_29186222:
    unless_null $P5006, vivi_29196223
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29196223:
    set $P5001, $P5006
  fallback6219:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_617, _lex_param_0
    repr_defined $I5002, fb_tmp_617
    unless $I5002 goto if2920_else6224 
    set $P5011, fb_tmp_617["variable"]
    set $P5013, $P5011
    goto if2920_end6225
  if2920_else6224:
    null $P5012
    set $P5013, $P5012
  if2920_end6225:
    unless_null $P5013, vivi_29216226
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_29216226:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1381281828.51527") :anon :lex :outer("cuid_307_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2795
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_619 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6233
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_619, $P5002
    repr_defined $I5001, fb_tmp_619
    unless $I5001 goto if2925_else6234 
    set $P5004, fb_tmp_619["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2925_end6235
  if2925_else6234:
    null $P5005
    set $P5006, $P5005
  if2925_end6235:
    unless_null $P5006, vivi_29266236
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_29266236:
    unless_null $P5006, vivi_29276237
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29276237:
    set $P5001, $P5006
  fallback6233:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1381281828.51527") :anon :lex :outer("cuid_307_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2798
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_621 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6244
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set fb_tmp_621, $P5002
    repr_defined $I5001, fb_tmp_621
    unless $I5001 goto if2931_else6245 
    set $P5004, fb_tmp_621["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2931_end6246
  if2931_else6245:
    null $P5005
    set $P5006, $P5005
  if2931_end6246:
    unless_null $P5006, vivi_29326247
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_29326247:
    unless_null $P5006, vivi_29336248
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29336248:
    set $P5001, $P5006
  fallback6244:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1381281828.51527") :anon :lex :outer("cuid_307_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2801
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2802
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2803
    set fb_tmp_623, $P101
    repr_defined $I5001, fb_tmp_623
    unless $I5001 goto if2937_else6255 
    set $P5004, fb_tmp_623["block_past"]
    set $P5006, $P5004
    goto if2937_end6256
  if2937_else6255:
    null $P5005
    set $P5006, $P5005
  if2937_end6256:
    unless_null $P5006, vivi_29386257
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_29386257:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6260
    nqp_get_sc_object $P5013, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5012, $P5013
    set fb_tmp_625, $P5012
    repr_defined $I5003, fb_tmp_625
    unless $I5003 goto if2940_else6261 
    set $P5014, fb_tmp_625["$EXPORT"]
    set $P5016, $P5014
    goto if2940_end6262
  if2940_else6261:
    null $P5015
    set $P5016, $P5015
  if2940_end6262:
    unless_null $P5016, vivi_29416263
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_29416263:
    unless_null $P5016, vivi_29426264
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29426264:
    set $P5011, $P5016
  fallback6260:
    get_who $P5010, $P5011
    set fb_tmp_624, $P5010
    repr_defined $I5002, fb_tmp_624
    unless $I5002 goto if2939_else6258 
    set $P5019, fb_tmp_624["DEFAULT"]
    set $P5021, $P5019
    goto if2939_end6259
  if2939_else6258:
    null $P5020
    set $P5021, $P5020
  if2939_end6259:
    unless_null $P5021, vivi_29436265
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_29436265:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_626, $P101
    repr_defined $I5005, fb_tmp_626
    unless $I5005 goto if2944_else6267 
    set $P5024, fb_tmp_626["code_obj"]
    set $P5026, $P5024
    goto if2944_end6268
  if2944_else6267:
    null $P5025
    set $P5026, $P5025
  if2944_end6268:
    unless_null $P5026, vivi_29456269
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_29456269:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6266
.annotate 'line', 2805
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6270
    nqp_get_sc_object $P5030, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5029, $P5030
    set fb_tmp_627, $P5029
    repr_defined $I5006, fb_tmp_627
    unless $I5006 goto if2946_else6271 
    set $P5031, fb_tmp_627["$W"]
    set $P5033, $P5031
    goto if2946_end6272
  if2946_else6271:
    null $P5032
    set $P5033, $P5032
  if2946_end6272:
    unless_null $P5033, vivi_29476273
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5033, $P5034
  vivi_29476273:
    unless_null $P5033, vivi_29486274
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29486274:
    set $P5028, $P5033
  fallback6270:
    set fb_tmp_628, $P101
    repr_defined $I5007, fb_tmp_628
    unless $I5007 goto if2949_else6275 
    set $P5036, fb_tmp_628["block_past"]
    set $P5038, $P5036
    goto if2949_end6276
  if2949_else6275:
    null $P5037
    set $P5038, $P5037
  if2949_end6276:
    unless_null $P5038, vivi_29506277
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5038, $P5039
  vivi_29506277:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6266:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_308_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2813
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_6 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_498_1381281828.51527' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    if haz_param_6, default6398
    nqp_get_sc_object $P5073, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_2, $P5073
  default6398:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6286
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback6286:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5001, fb_tmp_630
    unless $I5001 goto if2954_else6284 
    set $P5004, fb_tmp_630["deflongname"]
    set $P5006, $P5004
    goto if2954_end6285
  if2954_else6284:
    null $P5005
    set $P5006, $P5005
  if2954_end6285:
    unless_null $P5006, vivi_29556287
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_29556287:
    unless $P5006 goto if2953_else6282 
.annotate 'line', 2815
.annotate 'line', 2816
    unless_null _lex_param_1, fallback6290
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6290:
    set fb_tmp_631, _lex_param_1
    repr_defined $I5002, fb_tmp_631
    unless $I5002 goto if2956_else6288 
    set $P5009, fb_tmp_631["deflongname"]
    set $P5011, $P5009
    goto if2956_end6289
  if2956_else6288:
    null $P5010
    set $P5011, $P5010
  if2956_end6289:
    unless_null $P5011, vivi_29576291
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_29576291:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2953_end6283
  if2953_else6282:
.annotate 'line', 2818
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6294
    nqp_get_sc_object $P5017, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5016, $P5017
    set fb_tmp_632, $P5016
    repr_defined $I5004, fb_tmp_632
    unless $I5004 goto if2959_else6295 
    set $P5018, fb_tmp_632["$PKGDECL"]
    set $P5020, $P5018
    goto if2959_end6296
  if2959_else6295:
    null $P5019
    set $P5020, $P5019
  if2959_end6296:
    unless_null $P5020, vivi_29606297
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_29606297:
    unless_null $P5020, vivi_29616298
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29616298:
    set $P5015, $P5020
  fallback6294:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2958_end6293 
.annotate 'line', 2819
.annotate 'line', 2820
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2958_end6293:
    unless_null _lex_param_1, fallback6301
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5025
  fallback6301:
    set fb_tmp_633, _lex_param_1
    repr_defined $I5005, fb_tmp_633
    unless $I5005 goto if2962_else6299 
    set $P5026, fb_tmp_633["latename"]
    set $P5028, $P5026
    goto if2962_end6300
  if2962_else6299:
    null $P5027
    set $P5028, $P5027
  if2962_end6300:
    unless_null $P5028, vivi_29636302
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_29636302:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2953_end6283:
    unless_null _lex_param_1, fallback6307
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5031
  fallback6307:
    set fb_tmp_634, _lex_param_1
    repr_defined $I5006, fb_tmp_634
    unless $I5006 goto if2965_else6305 
    set $P5032, fb_tmp_634["proto"]
    set $P5034, $P5032
    goto if2965_end6306
  if2965_else6305:
    null $P5033
    set $P5034, $P5033
  if2965_end6306:
    unless_null $P5034, vivi_29666308
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5034, $P5035
  vivi_29666308:
    unless $P5034 goto if2964_else6303 
.annotate 'line', 2825
.annotate 'line', 2826
    nqp_get_sc_object $P5036, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 108
.annotate 'line', 2828
    nqp_get_sc_object $P5037, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2829
    nqp_get_sc_object $P5038, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2830
    nqp_get_sc_object $P5040, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration_static" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2837
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6309
    nqp_get_sc_object $P5046, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5045, $P5046
    set fb_tmp_635, $P5045
    repr_defined $I5007, fb_tmp_635
    unless $I5007 goto if2967_else6310 
    set $P5047, fb_tmp_635["$W"]
    set $P5049, $P5047
    goto if2967_end6311
  if2967_else6310:
    null $P5048
    set $P5049, $P5048
  if2967_end6311:
    unless_null $P5049, vivi_29686312
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_29686312:
    unless_null $P5049, vivi_29696313
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_29696313:
    set $P5044, $P5049
  fallback6309:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6314
    nqp_get_sc_object $P5054, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5053, $P5054
    set fb_tmp_636, $P5053
    repr_defined $I5008, fb_tmp_636
    unless $I5008 goto if2970_else6315 
    set $P5055, fb_tmp_636["$PACKAGE"]
    set $P5057, $P5055
    goto if2970_end6316
  if2970_else6315:
    null $P5056
    set $P5057, $P5056
  if2970_end6316:
    unless_null $P5057, vivi_29716317
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5057, $P5058
  vivi_29716317:
    unless_null $P5057, vivi_29726318
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_29726318:
    set $P5052, $P5057
  fallback6314:
.annotate 'line', 2838
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6319
    nqp_get_sc_object $P5062, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5061, $P5062
    set fb_tmp_637, $P5061
    repr_defined $I5009, fb_tmp_637
    unless $I5009 goto if2973_else6320 
    set $P5063, fb_tmp_637["$W"]
    set $P5065, $P5063
    goto if2973_end6321
  if2973_else6320:
    null $P5064
    set $P5065, $P5064
  if2973_end6321:
    unless_null $P5065, vivi_29746322
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5065, $P5066
  vivi_29746322:
    unless_null $P5065, vivi_29756323
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_29756323:
    set $P5060, $P5065
  fallback6319:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2964_end6304
  if2964_else6303:
    .const 'Sub' $P5070 = 'cuid_498_1381281828.51527' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2964_end6304:
.annotate 'line', 2879
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1381281828.51527") :anon :lex :outer("cuid_308_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2840
    .const 'Sub' $P5128 = 'cuid_497_1381281828.51527' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 2841
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6324
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5005, $P5006
    set fb_tmp_638, $P5005
    repr_defined $I5001, fb_tmp_638
    unless $I5001 goto if2976_else6325 
    set $P5007, fb_tmp_638["$W"]
    set $P5009, $P5007
    goto if2976_end6326
  if2976_else6325:
    null $P5008
    set $P5009, $P5008
  if2976_end6326:
    unless_null $P5009, vivi_29776327
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_29776327:
    unless_null $P5009, vivi_29786328
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_29786328:
    set $P5004, $P5009
  fallback6324:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2842
    set fb_tmp_639, $P101
    repr_defined $I5002, fb_tmp_639
    unless $I5002 goto if2979_else6329 
    set $P5013, fb_tmp_639[0]
    set $P5015, $P5013
    goto if2979_end6330
  if2979_else6329:
    null $P5014
    set $P5015, $P5014
  if2979_end6330:
    unless_null $P5015, vivi_29806331
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_29806331:
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2843
    set fb_tmp_640, $P101
    repr_defined $I5003, fb_tmp_640
    unless $I5003 goto if2981_else6332 
    set $P5019, fb_tmp_640[0]
    set $P5021, $P5019
    goto if2981_end6333
  if2981_else6332:
    null $P5020
    set $P5021, $P5020
  if2981_end6333:
    unless_null $P5021, vivi_29826334
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_29826334:
    nqp_get_sc_object $P5023, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2845
    nqp_get_sc_object $P5024, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2846
    nqp_get_sc_object $P5026, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2847
    set fb_tmp_641, $P101
    repr_defined $I5004, fb_tmp_641
    unless $I5004 goto if2983_else6335 
    set $P5029, fb_tmp_641[0]
    set $P5031, $P5029
    goto if2983_end6336
  if2983_else6335:
    null $P5030
    set $P5031, $P5030
  if2983_end6336:
    unless_null $P5031, vivi_29846337
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_29846337:
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 2848
    set fb_tmp_642, $P101
    repr_defined $I5005, fb_tmp_642
    unless $I5005 goto if2985_else6338 
    set $P5035, fb_tmp_642[0]
    set $P5037, $P5035
    goto if2985_end6339
  if2985_else6338:
    null $P5036
    set $P5037, $P5036
  if2985_end6339:
    unless_null $P5037, vivi_29866340
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_29866340:
    nqp_get_sc_object $P5039, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 2849
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2850
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6343
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_48, $P5042
    set fb_tmp_644, pkg_viv_tmp_48
    repr_defined $I5007, fb_tmp_644
    unless $I5007 goto if2988_else6344 
    set $P5044, fb_tmp_644["%RX"]
    set $P5046, $P5044
    goto if2988_end6345
  if2988_else6344:
    null $P5045
    set $P5046, $P5045
  if2988_end6345:
    unless_null $P5046, vivi_29896346
    new $P5047, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5047
    set $P5046, $P5047
  vivi_29896346:
    unless_null $P5046, vivi_29906347
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_29906347:
    set $P5041, $P5046
  fallback6343:
    set fb_tmp_643, $P5041
    repr_defined $I5006, fb_tmp_643
    unless $I5006 goto if2987_else6341 
    set $P5049, fb_tmp_643["code"]
    set $P5051, $P5049
    goto if2987_end6342
  if2987_else6341:
    null $P5050
    set $P5051, $P5050
  if2987_end6342:
    unless_null $P5051, vivi_29916348
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5051, $P5052
  vivi_29916348:
    set $P102, $P5051
.annotate 'line', 2852
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6351
    nqp_get_sc_object $P5055, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_49, $P5054
    set fb_tmp_646, pkg_viv_tmp_49
    repr_defined $I5009, fb_tmp_646
    unless $I5009 goto if2993_else6352 
    set $P5056, fb_tmp_646["%LANG"]
    set $P5058, $P5056
    goto if2993_end6353
  if2993_else6352:
    null $P5057
    set $P5058, $P5057
  if2993_end6353:
    unless_null $P5058, vivi_29946354
    new $P5059, 'Hash'
    set pkg_viv_tmp_49["%LANG"], $P5059
    set $P5058, $P5059
  vivi_29946354:
    unless_null $P5058, vivi_29956355
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_29956355:
    set $P5053, $P5058
  fallback6351:
    set fb_tmp_645, $P5053
    repr_defined $I5008, fb_tmp_645
    unless $I5008 goto if2992_else6349 
    set $P5061, fb_tmp_645["Regex-actions"]
    set $P5063, $P5061
    goto if2992_end6350
  if2992_else6349:
    null $P5062
    set $P5063, $P5062
  if2992_end6350:
    unless_null $P5063, vivi_29966356
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5063, $P5064
  vivi_29966356:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6359
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5065, $P5066
  fallback6359:
    set fb_tmp_647, $P5065
    repr_defined $I5010, fb_tmp_647
    unless $I5010 goto if2997_else6357 
    set $P5067, fb_tmp_647["p6regex"]
    set $P5069, $P5067
    goto if2997_end6358
  if2997_else6357:
    null $P5068
    set $P5069, $P5068
  if2997_end6358:
    unless_null $P5069, vivi_29986360
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5069, $P5070
  vivi_29986360:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 2853
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6365
    nqp_get_sc_object $P5076, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5075, $P5076
    set fb_tmp_648, $P5075
    repr_defined $I5011, fb_tmp_648
    unless $I5011 goto if3001_else6366 
    set $P5077, fb_tmp_648["$PKGDECL"]
    set $P5079, $P5077
    goto if3001_end6367
  if3001_else6366:
    null $P5078
    set $P5079, $P5078
  if3001_end6367:
    unless_null $P5079, vivi_30026368
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5079, $P5080
  vivi_30026368:
    unless_null $P5079, vivi_30036369
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30036369:
    set $P5074, $P5079
  fallback6365:
    set $P5091, $P5074
    unless $P5074 goto if3000_end6364 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6370
    nqp_get_sc_object $P5085, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5084, $P5085
    set fb_tmp_649, $P5084
    repr_defined $I5013, fb_tmp_649
    unless $I5013 goto if3004_else6371 
    set $P5086, fb_tmp_649["$PACKAGE"]
    set $P5088, $P5086
    goto if3004_end6372
  if3004_else6371:
    null $P5087
    set $P5088, $P5087
  if3004_end6372:
    unless_null $P5088, vivi_30056373
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5088, $P5089
  vivi_30056373:
    unless_null $P5088, vivi_30066374
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30066374:
    set $P5083, $P5088
  fallback6370:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if3000_end6364:
    unless $P5091 goto if2999_end6362 
.annotate 'line', 2855
.annotate 'line', 2858
    $P101."blocktype"("declaration_static")
.annotate 'line', 2859
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6375
    nqp_get_sc_object $P5095, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5094, $P5095
    set fb_tmp_650, $P5094
    repr_defined $I5014, fb_tmp_650
    unless $I5014 goto if3007_else6376 
    set $P5096, fb_tmp_650["$W"]
    set $P5098, $P5096
    goto if3007_end6377
  if3007_else6376:
    null $P5097
    set $P5098, $P5097
  if3007_end6377:
    unless_null $P5098, vivi_30086378
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5098, $P5099
  vivi_30086378:
    unless_null $P5098, vivi_30096379
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30096379:
    set $P5093, $P5098
  fallback6375:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6380
    nqp_get_sc_object $P5103, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5102, $P5103
    set fb_tmp_651, $P5102
    repr_defined $I5015, fb_tmp_651
    unless $I5015 goto if3010_else6381 
    set $P5104, fb_tmp_651["$PACKAGE"]
    set $P5106, $P5104
    goto if3010_end6382
  if3010_else6381:
    null $P5105
    set $P5106, $P5105
  if3010_end6382:
    unless_null $P5106, vivi_30116383
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5106, $P5107
  vivi_30116383:
    unless_null $P5106, vivi_30126384
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30126384:
    set $P5101, $P5106
  fallback6380:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if2999_end6362:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6387
    nqp_get_sc_object $P5113, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5112, $P5113
    set fb_tmp_652, $P5112
    repr_defined $I5017, fb_tmp_652
    unless $I5017 goto if3014_else6388 
    set $P5114, fb_tmp_652["$PKGDECL"]
    set $P5116, $P5114
    goto if3014_end6389
  if3014_else6388:
    null $P5115
    set $P5116, $P5115
  if3014_end6389:
    unless_null $P5116, vivi_30156390
    nqp_get_sc_object $P5117, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5116, $P5117
  vivi_30156390:
    unless_null $P5116, vivi_30166391
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30166391:
    set $P5111, $P5116
  fallback6387:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3013_end6386 
    .const 'Sub' $P5119 = 'cuid_497_1381281828.51527' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3013_end6386:
.annotate 'line', 2873
    nqp_get_sc_object $P5121, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2875
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1381281828.51527") :anon :lex :outer("cuid_498_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2864
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_653 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2865
    nqp_get_sc_object $P5002, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381281785.75165", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2866
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6394
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  fallback6394:
    set fb_tmp_653, $P5004
    repr_defined $I5001, fb_tmp_653
    unless $I5001 goto if3017_else6392 
    set $P5006, fb_tmp_653["p6regex"]
    set $P5008, $P5006
    goto if3017_end6393
  if3017_else6392:
    null $P5007
    set $P5008, $P5007
  if3017_end6393:
    unless_null $P5008, vivi_30186395
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_30186395:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 2867
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3019_end6397 
.annotate 'line', 2868
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3019_end6397:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_309_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2883
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6403
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6403:
    set fb_tmp_654, _lex_param_1
    repr_defined $I5001, fb_tmp_654
    unless $I5001 goto if3021_else6401 
    set $P5003, fb_tmp_654["args"]
    set $P5005, $P5003
    goto if3021_end6402
  if3021_else6401:
    null $P5004
    set $P5005, $P5004
  if3021_end6402:
    unless_null $P5005, vivi_30226404
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_30226404:
    unless $P5005 goto if3020_else6399 
.annotate 'line', 2884
    unless_null _lex_param_1, fallback6409
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5007
  fallback6409:
    set fb_tmp_656, _lex_param_1
    repr_defined $I5003, fb_tmp_656
    unless $I5003 goto if3024_else6407 
    set $P5008, fb_tmp_656["args"]
    set $P5010, $P5008
    goto if3024_end6408
  if3024_else6407:
    null $P5009
    set $P5010, $P5009
  if3024_end6408:
    unless_null $P5010, vivi_30256410
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_30256410:
    set fb_tmp_655, $P5010
    repr_defined $I5002, fb_tmp_655
    unless $I5002 goto if3023_else6405 
    set $P5012, fb_tmp_655[0]
    set $P5014, $P5012
    goto if3023_end6406
  if3023_else6405:
    null $P5013
    set $P5014, $P5013
  if3023_end6406:
    unless_null $P5014, vivi_30266411
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_30266411:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3020_end6400
  if3020_else6399:
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3020_end6400:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6416
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5020
  fallback6416:
    set fb_tmp_657, _lex_param_1
    repr_defined $I5004, fb_tmp_657
    unless $I5004 goto if3028_else6414 
    set $P5021, fb_tmp_657["quote"]
    set $P5023, $P5021
    goto if3028_end6415
  if3028_else6414:
    null $P5022
    set $P5023, $P5022
  if3028_end6415:
    unless_null $P5023, vivi_30296417
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_30296417:
    unless $P5023 goto if3027_else6412 
.annotate 'line', 2885
.annotate 'line', 2886
    unless_null _lex_param_1, fallback6420
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5025
  fallback6420:
    set fb_tmp_658, _lex_param_1
    repr_defined $I5005, fb_tmp_658
    unless $I5005 goto if3030_else6418 
    set $P5026, fb_tmp_658["quote"]
    set $P5028, $P5026
    goto if3030_end6419
  if3030_else6418:
    null $P5027
    set $P5028, $P5027
  if3030_end6419:
    unless_null $P5028, vivi_30316421
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_30316421:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 2887
    $P5031 = $P101."op"("callmethod")
    goto if3027_end6413
  if3027_else6412:
    unless_null _lex_param_1, fallback6426
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5032
  fallback6426:
    set fb_tmp_659, _lex_param_1
    repr_defined $I5007, fb_tmp_659
    unless $I5007 goto if3033_else6424 
    set $P5033, fb_tmp_659["longname"]
    set $P5035, $P5033
    goto if3033_end6425
  if3033_else6424:
    null $P5034
    set $P5035, $P5034
  if3033_end6425:
    unless_null $P5035, vivi_30346427
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5035, $P5036
  vivi_30346427:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3032_else6422 
.annotate 'line', 2889
.annotate 'line', 2890
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3032_end6423
  if3032_else6422:
    unless_null _lex_param_1, fallback6432
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5038
  fallback6432:
    set fb_tmp_660, _lex_param_1
    repr_defined $I5009, fb_tmp_660
    unless $I5009 goto if3036_else6430 
    set $P5039, fb_tmp_660["longname"]
    set $P5041, $P5039
    goto if3036_end6431
  if3036_else6430:
    null $P5040
    set $P5041, $P5040
  if3036_end6431:
    unless_null $P5041, vivi_30376433
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5041, $P5042
  vivi_30376433:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3035_else6428 
.annotate 'line', 2892
.annotate 'line', 2893
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3035_end6429
  if3035_else6428:
    unless_null _lex_param_1, fallback6438
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5044
  fallback6438:
    set fb_tmp_661, _lex_param_1
    repr_defined $I5011, fb_tmp_661
    unless $I5011 goto if3039_else6436 
    set $P5045, fb_tmp_661["longname"]
    set $P5047, $P5045
    goto if3039_end6437
  if3039_else6436:
    null $P5046
    set $P5047, $P5046
  if3039_end6437:
    unless_null $P5047, vivi_30406439
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5047, $P5048
  vivi_30406439:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3038_else6434 
.annotate 'line', 2895
.annotate 'line', 2896
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3038_end6435
  if3038_else6434:
    unless_null _lex_param_1, fallback6444
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5050
  fallback6444:
    set fb_tmp_662, _lex_param_1
    repr_defined $I5013, fb_tmp_662
    unless $I5013 goto if3042_else6442 
    set $P5051, fb_tmp_662["longname"]
    set $P5053, $P5051
    goto if3042_end6443
  if3042_else6442:
    null $P5052
    set $P5053, $P5052
  if3042_end6443:
    unless_null $P5053, vivi_30436445
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5053, $P5054
  vivi_30436445:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3041_else6440 
.annotate 'line', 2898
.annotate 'line', 2899
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3041_end6441
  if3041_else6440:
.annotate 'line', 2901
.annotate 'line', 2902
    unless_null _lex_param_1, fallback6448
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5056
  fallback6448:
    set fb_tmp_663, _lex_param_1
    repr_defined $I5014, fb_tmp_663
    unless $I5014 goto if3044_else6446 
    set $P5057, fb_tmp_663["longname"]
    set $P5059, $P5057
    goto if3044_end6447
  if3044_else6446:
    null $P5058
    set $P5059, $P5058
  if3044_end6447:
    unless_null $P5059, vivi_30456449
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5059, $P5060
  vivi_30456449:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 2903
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3041_end6441:
    set $P5063, $P5062
  if3038_end6435:
    set $P5064, $P5063
  if3035_end6429:
    set $P5065, $P5064
  if3032_end6423:
  if3027_end6413:
.annotate 'line', 2905
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_310_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2910
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 2911
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2912
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_311_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2915
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2916
    unless_null _lex_param_1, fallback6452
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6452:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5001, fb_tmp_664
    unless $I5001 goto if3046_else6450 
    set $P5003, fb_tmp_664["args"]
    set $P5005, $P5003
    goto if3046_end6451
  if3046_else6450:
    null $P5004
    set $P5005, $P5004
  if3046_end6451:
    unless_null $P5005, vivi_30476453
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_30476453:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2917
    unless_null _lex_param_1, fallback6456
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6456:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5002, fb_tmp_665
    unless $I5002 goto if3048_else6454 
    set $P5009, fb_tmp_665["deflongname"]
    set $P5011, $P5009
    goto if3048_end6455
  if3048_else6454:
    null $P5010
    set $P5011, $P5010
  if3048_end6455:
    unless_null $P5011, vivi_30496457
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_30496457:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2918
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_312_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2921
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_499_1381281828.51527' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_501_1381281828.51527' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2924
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6460
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5004, $P5005
    set fb_tmp_666, $P5004
    repr_defined $I5001, fb_tmp_666
    unless $I5001 goto if3051_else6461 
    set $P5006, fb_tmp_666["$W"]
    set $P5008, $P5006
    goto if3051_end6462
  if3051_else6461:
    null $P5007
    set $P5008, $P5007
  if3051_end6462:
    unless_null $P5008, vivi_30526463
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_30526463:
    unless_null $P5008, vivi_30536464
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30536464:
    set $P5003, $P5008
  fallback6460:
    unless_null _lex_param_1, fallback6467
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5011
  fallback6467:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5002, fb_tmp_667
    unless $I5002 goto if3054_else6465 
    set $P5012, fb_tmp_667["name"]
    set $P5014, $P5012
    goto if3054_end6466
  if3054_else6465:
    null $P5013
    set $P5014, $P5013
  if3054_end6466:
    unless_null $P5014, vivi_30556468
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_30556468:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3050_else6458 
    unless_null _lex_param_1, fallback6473
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5017
  fallback6473:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5003, fb_tmp_668
    unless $I5003 goto if3057_else6471 
    set $P5018, fb_tmp_668["args"]
    set $P5020, $P5018
    goto if3057_end6472
  if3057_else6471:
    null $P5019
    set $P5020, $P5019
  if3057_end6472:
    unless_null $P5020, vivi_30586474
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5020, $P5021
  vivi_30586474:
    if $P5020 goto unless3056_end6470 
.annotate 'line', 2925
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30666487
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_499_1381281828.51527' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30656486
  catch_handler_30666487:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30656486
  skip_handler_30656486:
  unless3056_end6470:
    set $P5033, $P101
    if $P101 goto unless3067_end6489 
.annotate 'line', 2933
.annotate 'line', 2934
    nqp_get_sc_object $P5026, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    unless_null _lex_param_1, fallback6492
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5027
  fallback6492:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5004, fb_tmp_671
    unless $I5004 goto if3068_else6490 
    set $P5028, fb_tmp_671["name"]
    set $P5030, $P5028
    goto if3068_end6491
  if3068_else6490:
    null $P5029
    set $P5030, $P5029
  if3068_end6491:
    unless_null $P5030, vivi_30696493
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5030, $P5031
  vivi_30696493:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3067_end6489:
    goto if3050_end6459
  if3050_else6458:
    .const 'Sub' $P5034 = 'cuid_501_1381281828.51527' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3050_end6459:
    set $P102, $P101
    unless_null _lex_param_1, fallback6522
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5036
  fallback6522:
    set fb_tmp_676, _lex_param_1
    repr_defined $I5005, fb_tmp_676
    unless $I5005 goto if3085_else6520 
    set $P5037, fb_tmp_676["args"]
    set $P5039, $P5037
    goto if3085_end6521
  if3085_else6520:
    null $P5038
    set $P5039, $P5038
  if3085_end6521:
    unless_null $P5039, vivi_30866523
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5039, $P5040
  vivi_30866523:
    unless $P5039 goto if3084_end6519 
.annotate 'line', 2954
.annotate 'line', 2955
    unless_null _lex_param_1, fallback6528
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5041
  fallback6528:
    set fb_tmp_678, _lex_param_1
    repr_defined $I5007, fb_tmp_678
    unless $I5007 goto if3088_else6526 
    set $P5042, fb_tmp_678["args"]
    set $P5044, $P5042
    goto if3088_end6527
  if3088_else6526:
    null $P5043
    set $P5044, $P5043
  if3088_end6527:
    unless_null $P5044, vivi_30896529
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5044, $P5045
  vivi_30896529:
    set fb_tmp_677, $P5044
    repr_defined $I5006, fb_tmp_677
    unless $I5006 goto if3087_else6524 
    set $P5046, fb_tmp_677[0]
    set $P5048, $P5046
    goto if3087_end6525
  if3087_else6524:
    null $P5047
    set $P5048, $P5047
  if3087_end6525:
    unless_null $P5048, vivi_30906530
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5048, $P5049
  vivi_30906530:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 2956
    $P5051 = $P102."unshift"($P101)
  if3084_end6519:
.annotate 'line', 2958
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1381281828.51527") :anon :lex :outer("cuid_312_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2926
    .lex "$sym", $P101 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2927
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6475
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_669, $P5003
    repr_defined $I5001, fb_tmp_669
    unless $I5001 goto if3059_else6476 
    set $P5005, fb_tmp_669["$W"]
    set $P5007, $P5005
    goto if3059_end6477
  if3059_else6476:
    null $P5006
    set $P5007, $P5006
  if3059_end6477:
    unless_null $P5007, vivi_30606478
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_30606478:
    unless_null $P5007, vivi_30616479
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30616479:
    set $P5002, $P5007
  fallback6475:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6482
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  fallback6482:
    set fb_tmp_670, $P5011
    repr_defined $I5002, fb_tmp_670
    unless $I5002 goto if3062_else6480 
    set $P5013, fb_tmp_670["name"]
    set $P5015, $P5013
    goto if3062_end6481
  if3062_else6480:
    null $P5014
    set $P5015, $P5014
  if3062_end6481:
    unless_null $P5015, vivi_30636483
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_30636483:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3064_end6485 
.annotate 'line', 2928
.annotate 'line', 2929
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3064_end6485:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1381281828.51527") :anon :lex :outer("cuid_312_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2937
    .const 'Sub' $P5027 = 'cuid_500_1381281828.51527' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6498
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  fallback6498:
    set fb_tmp_673, $P5003
    repr_defined $I5002, fb_tmp_673
    unless $I5002 goto if3071_else6496 
    set $P5005, fb_tmp_673["name"]
    set $P5007, $P5005
    goto if3071_end6497
  if3071_else6496:
    null $P5006
    set $P5007, $P5006
  if3071_end6497:
    unless_null $P5007, vivi_30726499
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_30726499:
    set fb_tmp_672, $P5007
    repr_defined $I5001, fb_tmp_672
    unless $I5001 goto if3070_else6494 
    set $P5009, fb_tmp_672["identifier"]
    set $P5011, $P5009
    goto if3070_end6495
  if3070_else6494:
    null $P5010
    set $P5011, $P5010
  if3070_end6495:
    unless_null $P5011, vivi_30736500
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_30736500:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6505
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  fallback6505:
    set fb_tmp_674, $P5013
    repr_defined $I5003, fb_tmp_674
    unless $I5003 goto if3075_else6503 
    set $P5015, fb_tmp_674["args"]
    set $P5017, $P5015
    goto if3075_end6504
  if3075_else6503:
    null $P5016
    set $P5017, $P5016
  if3075_end6504:
    unless_null $P5017, vivi_30766506
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_30766506:
    if $P5017 goto unless3074_end6502 
.annotate 'line', 2939
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_30826515
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_500_1381281828.51527' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_30816514
  catch_handler_30826515:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_30816514
  skip_handler_30816514:
  unless3074_end6502:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3083_end6517 
.annotate 'line', 2947
.annotate 'line', 2948
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3083_end6517:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1381281828.51527") :anon :lex :outer("cuid_501_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2940
    .lex "$sym", $P101 
    .local pmc fb_tmp_675 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 2941
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6507
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_675, $P5003
    repr_defined $I5001, fb_tmp_675
    unless $I5001 goto if3077_else6508 
    set $P5005, fb_tmp_675["$W"]
    set $P5007, $P5005
    goto if3077_end6509
  if3077_else6508:
    null $P5006
    set $P5007, $P5006
  if3077_end6509:
    unless_null $P5007, vivi_30786510
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_30786510:
    unless_null $P5007, vivi_30796511
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30796511:
    set $P5002, $P5007
  fallback6507:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3080_end6513 
.annotate 'line', 2942
.annotate 'line', 2943
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3080_end6513:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_313_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2961
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6535
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback6535:
    set fb_tmp_679, _lex_param_1
    repr_defined $I5001, fb_tmp_679
    unless $I5001 goto if3092_else6533 
    set $P5004, fb_tmp_679["args"]
    set $P5006, $P5004
    goto if3092_end6534
  if3092_else6533:
    null $P5005
    set $P5006, $P5005
  if3092_end6534:
    unless_null $P5006, vivi_30936536
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_30936536:
    unless $P5006 goto if3091_else6531 
.annotate 'line', 2962
    unless_null _lex_param_1, fallback6541
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6541:
    set fb_tmp_681, _lex_param_1
    repr_defined $I5003, fb_tmp_681
    unless $I5003 goto if3095_else6539 
    set $P5009, fb_tmp_681["args"]
    set $P5011, $P5009
    goto if3095_end6540
  if3095_else6539:
    null $P5010
    set $P5011, $P5010
  if3095_end6540:
    unless_null $P5011, vivi_30966542
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_30966542:
    set fb_tmp_680, $P5011
    repr_defined $I5002, fb_tmp_680
    unless $I5002 goto if3094_else6537 
    set $P5013, fb_tmp_680[0]
    set $P5015, $P5013
    goto if3094_end6538
  if3094_else6537:
    null $P5014
    set $P5015, $P5014
  if3094_end6538:
    unless_null $P5015, vivi_30976543
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_30976543:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3091_end6532
  if3091_else6531:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3091_end6532:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6546
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5021
  fallback6546:
    set fb_tmp_682, _lex_param_1
    repr_defined $I5004, fb_tmp_682
    unless $I5004 goto if3098_else6544 
    set $P5022, fb_tmp_682["op"]
    set $P5024, $P5022
    goto if3098_end6545
  if3098_else6544:
    null $P5023
    set $P5024, $P5023
  if3098_end6545:
    unless_null $P5024, vivi_30996547
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_30996547:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
.annotate 'line', 2964
    set $S5002, $P102
    split $P5027, "__", $S5002
    $P5028 = "&join"(" ", $P5027)
    set $P102, $P5028
.annotate 'line', 2965
    nqp_get_sc_object $P5029, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_314_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2968
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_683 
.annotate 'line', 2969
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    unless_null _lex_param_1, fallback6550
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6550:
    set fb_tmp_683, _lex_param_1
    repr_defined $I5001, fb_tmp_683
    unless $I5001 goto if3100_else6548 
    set $P5003, fb_tmp_683["const"]
    set $P5005, $P5003
    goto if3100_end6549
  if3100_else6548:
    null $P5004
    set $P5005, $P5004
  if3100_end6549:
    unless_null $P5005, vivi_31016551
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_31016551:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_315_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2972
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6554
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5004
  fallback6554:
    set fb_tmp_684, _lex_param_1
    repr_defined $I5001, fb_tmp_684
    unless $I5001 goto if3102_else6552 
    set $P5005, fb_tmp_684["op"]
    set $P5007, $P5005
    goto if3102_end6553
  if3102_else6552:
    null $P5006
    set $P5007, $P5006
  if3102_end6553:
    unless_null $P5007, vivi_31036555
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_31036555:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6560
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5010
  fallback6560:
    set fb_tmp_685, _lex_param_1
    repr_defined $I5002, fb_tmp_685
    unless $I5002 goto if3105_else6558 
    set $P5011, fb_tmp_685["args"]
    set $P5013, $P5011
    goto if3105_end6559
  if3105_else6558:
    null $P5012
    set $P5013, $P5012
  if3105_end6559:
    unless_null $P5013, vivi_31066561
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_31066561:
    unless $P5013 goto if3104_else6556 
.annotate 'line', 2974
    unless_null _lex_param_1, fallback6566
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5015
  fallback6566:
    set fb_tmp_687, _lex_param_1
    repr_defined $I5004, fb_tmp_687
    unless $I5004 goto if3108_else6564 
    set $P5016, fb_tmp_687["args"]
    set $P5018, $P5016
    goto if3108_end6565
  if3108_else6564:
    null $P5017
    set $P5018, $P5017
  if3108_end6565:
    unless_null $P5018, vivi_31096567
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_31096567:
    set fb_tmp_686, $P5018
    repr_defined $I5003, fb_tmp_686
    unless $I5003 goto if3107_else6562 
    set $P5020, fb_tmp_686[0]
    set $P5022, $P5020
    goto if3107_end6563
  if3107_else6562:
    null $P5021
    set $P5022, $P5021
  if3107_end6563:
    unless_null $P5022, vivi_31106568
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5022, $P5023
  vivi_31106568:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3104_end6557
  if3104_else6556:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3104_end6557:
    set $P102, $P5027
.annotate 'line', 2975
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 2976
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_316_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2979
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_688 
.annotate 'line', 2980
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    unless_null _lex_param_1, fallback6571
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6571:
    set fb_tmp_688, _lex_param_1
    repr_defined $I5001, fb_tmp_688
    unless $I5001 goto if3111_else6569 
    set $P5003, fb_tmp_688["const"]
    set $P5005, $P5003
    goto if3111_end6570
  if3111_else6569:
    null $P5004
    set $P5005, $P5004
  if3111_end6570:
    unless_null $P5005, vivi_31126572
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_31126572:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_317_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2983
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "$stmts", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_689 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 2984
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
    $P5004 = $P5003."unique"("dispatch_cap")
    set $P101, $P5004
.annotate 'line', 2985
    nqp_get_sc_object $P5005, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 2986
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2988
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5008 = $P5007."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2989
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5010 = $P5009."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5011 = $P5006."new"($P5008, $P5010, "bind" :named("op"))
.annotate 'line', 2991
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2993
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2995
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 2997
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
.annotate 'line', 2999
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5017 = $P5016."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3000
    nqp_get_sc_object $P5018, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 64
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback6573
    nqp_get_sc_object $P5021, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5020, $P5021
    set fb_tmp_689, $P5020
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if3113_else6574 
    set $P5022, fb_tmp_689["$W"]
    set $P5024, $P5022
    goto if3113_end6575
  if3113_else6574:
    null $P5023
    set $P5024, $P5023
  if3113_end6575:
    unless_null $P5024, vivi_31146576
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5024, $P5025
  vivi_31146576:
    unless_null $P5024, vivi_31156577
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_31156577:
    set $P5019, $P5024
  fallback6573:
    new $P5027, 'ResizablePMCArray'
    box $P5028, "NQPRoutine"
    push $P5027, $P5028
    $P5029 = $P5019."find_sym"($P5027)
    $P5030 = $P5018."new"($P5029 :named("value"))
    $P5031 = $P5015."new"($P5017, $P5030, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 3002
    nqp_get_sc_object $P5032, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5033 = $P5032."new"($P101 :named("name"), "local" :named("scope"))
    $P5034 = $P5014."new"($P5031, $P5033, "multicachefind" :named("op"))
.annotate 'line', 3004
    nqp_get_sc_object $P5035, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3006
    nqp_get_sc_object $P5036, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5037 = $P5036."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3007
    nqp_get_sc_object $P5038, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5039 = $P5038."new"($P101 :named("name"), "local" :named("scope"))
    $P5040 = $P5035."new"($P5037, $P5039, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5041 = $P5013."new"($P5034, $P5040, "ifnull" :named("op"))
.annotate 'line', 3010
    nqp_get_sc_object $P5042, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5043 = $P5042."new"($P101 :named("name"), "local" :named("scope"))
    $P5044 = $P5012."new"($P5041, $P5043, "invokewithcapture" :named("op"))
    $P5045 = $P5005."new"($P5011, $P5044)
    set $P102, $P5045
.annotate 'line', 3012
    nqp_get_sc_object $P5046, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5047 = $P5046."new"($P102, $P101, "locallifetime" :named("op"))
    $P5048 = _lex_param_1."!make"($P5047)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_318_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_690 
    unless_null _lex_param_1, fallback6580
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6580:
    set fb_tmp_690, _lex_param_1
    repr_defined $I5001, fb_tmp_690
    unless $I5001 goto if3116_else6578 
    set $P5002, fb_tmp_690["arglist"]
    set $P5004, $P5002
    goto if3116_end6579
  if3116_else6578:
    null $P5003
    set $P5004, $P5003
  if3116_end6579:
    unless_null $P5004, vivi_31176581
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31176581:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_319_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3017
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_503_1381281828.51527' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_698 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_700 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 3018
    nqp_get_sc_object $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6586
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback6586:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5001, fb_tmp_691
    unless $I5001 goto if3119_else6584 
    set $P5007, fb_tmp_691["EXPR"]
    set $P5009, $P5007
    goto if3119_end6585
  if3119_else6584:
    null $P5008
    set $P5009, $P5008
  if3119_end6585:
    unless_null $P5009, vivi_31206587
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_31206587:
    unless $P5009 goto if3118_end6583 
    .const 'Sub' $P5011 = 'cuid_503_1381281828.51527' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3118_end6583:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3027
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3126_test6601:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3126_done6605 
  while3126_redo6603:
.annotate 'line', 3028
    set fb_tmp_693, $P101
    repr_defined $I5004, fb_tmp_693
    unless $I5004 goto if3129_else6610 
    set $I5005, $P102
    set $P5016, fb_tmp_693[$I5005]
    set $P5018, $P5016
    goto if3129_end6611
  if3129_else6610:
    null $P5017
    set $P5018, $P5017
  if3129_end6611:
    unless_null $P5018, vivi_31306612
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5018, $P5019
  vivi_31306612:
    nqp_get_sc_object $P5020, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3128_end6609 
.annotate 'line', 3029
    set fb_tmp_694, $P101
    repr_defined $I5007, fb_tmp_694
    unless $I5007 goto if3131_else6613 
    set $I5008, $P102
    set $P5021, fb_tmp_694[$I5008]
    set $P5023, $P5021
    goto if3131_end6614
  if3131_else6613:
    null $P5022
    set $P5023, $P5022
  if3131_end6614:
    unless_null $P5023, vivi_31326615
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_31326615:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3128_end6609:
    unless $I5009 goto if3127_end6607 
    set $I5010, $P102
    set fb_tmp_696, $P101
    repr_defined $I5012, fb_tmp_696
    unless $I5012 goto if3134_else6618 
    set $I5013, $P102
    set $P5026, fb_tmp_696[$I5013]
    set $P5028, $P5026
    goto if3134_end6619
  if3134_else6618:
    null $P5027
    set $P5028, $P5027
  if3134_end6619:
    unless_null $P5028, vivi_31356620
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5028, $P5029
  vivi_31356620:
    set fb_tmp_695, $P5028
    repr_defined $I5011, fb_tmp_695
    unless $I5011 goto if3133_else6616 
    set $P5030, fb_tmp_695[0]
    set $P5032, $P5030
    goto if3133_end6617
  if3133_else6616:
    null $P5031
    set $P5032, $P5031
  if3133_end6617:
    unless_null $P5032, vivi_31366621
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5032, $P5033
  vivi_31366621:
    set $P101[$I5010], $P5032
.annotate 'line', 3031
    set fb_tmp_697, $P101
    repr_defined $I5014, fb_tmp_697
    unless $I5014 goto if3137_else6622 
    set $I5015, $P102
    set $P5034, fb_tmp_697[$I5015]
    set $P5036, $P5034
    goto if3137_end6623
  if3137_else6622:
    null $P5035
    set $P5036, $P5035
  if3137_end6623:
    unless_null $P5036, vivi_31386624
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5036, $P5037
  vivi_31386624:
    $P5036."flat"(1)
    set fb_tmp_698, $P101
    repr_defined $I5017, fb_tmp_698
    unless $I5017 goto if3141_else6629 
    set $I5018, $P102
    set $P5038, fb_tmp_698[$I5018]
    set $P5040, $P5038
    goto if3141_end6630
  if3141_else6629:
    null $P5039
    set $P5040, $P5039
  if3141_end6630:
    unless_null $P5040, vivi_31426631
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5041
  vivi_31426631:
    nqp_get_sc_object $P5042, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3140_end6628 
.annotate 'line', 3033
    set fb_tmp_699, $P101
    repr_defined $I5020, fb_tmp_699
    unless $I5020 goto if3143_else6632 
    set $I5021, $P102
    set $P5043, fb_tmp_699[$I5021]
    set $P5045, $P5043
    goto if3143_end6633
  if3143_else6632:
    null $P5044
    set $P5045, $P5044
  if3143_end6633:
    unless_null $P5045, vivi_31446634
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  vivi_31446634:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3140_end6628:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3139_end6626 
.annotate 'line', 3032
    set fb_tmp_700, $P101
    repr_defined $I5023, fb_tmp_700
    unless $I5023 goto if3145_else6635 
    set $I5024, $P102
    set $P5048, fb_tmp_700[$I5024]
    set $P5050, $P5048
    goto if3145_end6636
  if3145_else6635:
    null $P5049
    set $P5050, $P5049
  if3145_end6636:
    unless_null $P5050, vivi_31466637
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5050, $P5051
  vivi_31466637:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3139_end6626:
  if3127_end6607:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3126_test6601 
  while3126_done6605:
.annotate 'line', 3037
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1381281828.51527") :anon :lex :outer("cuid_319_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3019
    .const 'Sub' $P5021 = 'cuid_502_1381281828.51527' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_692 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3020
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6590
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5002, $P5003
  fallback6590:
    set fb_tmp_692, $P5002
    repr_defined $I5001, fb_tmp_692
    unless $I5001 goto if3121_else6588 
    set $P5004, fb_tmp_692["EXPR"]
    set $P5006, $P5004
    goto if3121_end6589
  if3121_else6588:
    null $P5005
    set $P5006, $P5005
  if3121_end6589:
    unless_null $P5006, vivi_31226591
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_31226591:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3125_end6597 
.annotate 'line', 3021
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3125_end6597:
    set $I5006, $I5004
    unless $I5004 goto if3124_end6595 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3124_end6595:
    unless $I5006 goto if3123_else6592 
.annotate 'line', 3022
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6598:
    unless $P5014, for_done6600
    shift $P5017, $P5014
  for_redo6599:
    .const 'Sub' $P5016 = 'cuid_502_1381281828.51527' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6598
  for_done6600:
    set $P5020, $P5012
    goto if3123_end6593
  if3123_else6592:
.annotate 'line', 3024
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3123_end6593:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1381281828.51527") :anon :lex :outer("cuid_503_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3022
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_320_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3040
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    unless_null _lex_param_1, fallback6640
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6640:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if3147_else6638 
    set $P5002, fb_tmp_701["multi_declarator"]
    set $P5004, $P5002
    goto if3147_end6639
  if3147_else6638:
    null $P5003
    set $P5004, $P5003
  if3147_end6639:
    unless_null $P5004, vivi_31486641
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31486641:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_321_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3042
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_702 
    unless_null _lex_param_1, fallback6644
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6644:
    set fb_tmp_702, _lex_param_1
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if3149_else6642 
    set $P5002, fb_tmp_702["value"]
    set $P5004, $P5002
    goto if3149_end6643
  if3149_else6642:
    null $P5003
    set $P5004, $P5003
  if3149_end6643:
    unless_null $P5004, vivi_31506645
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31506645:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_322_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3044
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
.annotate 'line', 3045
    unless_null _lex_param_1, fallback6650
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6650:
    set fb_tmp_703, _lex_param_1
    repr_defined $I5001, fb_tmp_703
    unless $I5001 goto if3152_else6648 
    set $P5002, fb_tmp_703["EXPR"]
    set $P5004, $P5002
    goto if3152_end6649
  if3152_else6648:
    null $P5003
    set $P5004, $P5003
  if3152_end6649:
    unless_null $P5004, vivi_31536651
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31536651:
    unless $P5004 goto if3151_else6646 
.annotate 'line', 3046
    unless_null _lex_param_1, fallback6656
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback6656:
    set fb_tmp_705, _lex_param_1
    repr_defined $I5003, fb_tmp_705
    unless $I5003 goto if3155_else6654 
    set $P5007, fb_tmp_705["EXPR"]
    set $P5009, $P5007
    goto if3155_end6655
  if3155_else6654:
    null $P5008
    set $P5009, $P5008
  if3155_end6655:
    unless_null $P5009, vivi_31566657
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_31566657:
    set fb_tmp_704, $P5009
    repr_defined $I5002, fb_tmp_704
    unless $I5002 goto if3154_else6652 
    set $P5011, fb_tmp_704[0]
    set $P5013, $P5011
    goto if3154_end6653
  if3154_else6652:
    null $P5012
    set $P5013, $P5012
  if3154_end6653:
    unless_null $P5013, vivi_31576658
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_31576658:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3151_end6647
  if3151_else6646:
.annotate 'line', 3047
    nqp_get_sc_object $P5016, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3151_end6647:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_323_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3050
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6663
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6663:
    set fb_tmp_706, _lex_param_1
    repr_defined $I5001, fb_tmp_706
    unless $I5001 goto if3159_else6661 
    set $P5003, fb_tmp_706["EXPR"]
    set $P5005, $P5003
    goto if3159_end6662
  if3159_else6661:
    null $P5004
    set $P5005, $P5004
  if3159_end6662:
    unless_null $P5005, vivi_31606664
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_31606664:
    unless $P5005 goto if3158_else6659 
.annotate 'line', 3052
.annotate 'line', 3053
    unless_null _lex_param_1, fallback6669
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5007
  fallback6669:
    set fb_tmp_708, _lex_param_1
    repr_defined $I5003, fb_tmp_708
    unless $I5003 goto if3162_else6667 
    set $P5008, fb_tmp_708["EXPR"]
    set $P5010, $P5008
    goto if3162_end6668
  if3162_else6667:
    null $P5009
    set $P5010, $P5009
  if3162_end6668:
    unless_null $P5010, vivi_31636670
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_31636670:
    set fb_tmp_707, $P5010
    repr_defined $I5002, fb_tmp_707
    unless $I5002 goto if3161_else6665 
    set $P5012, fb_tmp_707[0]
    set $P5014, $P5012
    goto if3161_end6666
  if3161_else6665:
    null $P5013
    set $P5014, $P5013
  if3161_end6666:
    unless_null $P5014, vivi_31646671
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5014, $P5015
  vivi_31646671:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3166_end6675 
.annotate 'line', 3054
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3166_end6675:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3165_end6673 
.annotate 'line', 3055
    nqp_get_sc_object $P5019, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3165_end6673:
    goto if3158_end6660
  if3158_else6659:
.annotate 'line', 3058
.annotate 'line', 3059
    nqp_get_sc_object $P5023, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3158_end6660:
.annotate 'line', 3061
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3062
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_324_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3065
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_709 
    unless_null _lex_param_1, fallback6678
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6678:
    set fb_tmp_709, _lex_param_1
    repr_defined $I5001, fb_tmp_709
    unless $I5001 goto if3167_else6676 
    set $P5002, fb_tmp_709["quote_EXPR"]
    set $P5004, $P5002
    goto if3167_end6677
  if3167_else6676:
    null $P5003
    set $P5004, $P5003
  if3167_end6677:
    unless_null $P5004, vivi_31686679
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31686679:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_325_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3066
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_710 
    unless_null _lex_param_1, fallback6682
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6682:
    set fb_tmp_710, _lex_param_1
    repr_defined $I5001, fb_tmp_710
    unless $I5001 goto if3169_else6680 
    set $P5002, fb_tmp_710["quote_EXPR"]
    set $P5004, $P5002
    goto if3169_end6681
  if3169_else6680:
    null $P5003
    set $P5004, $P5003
  if3169_end6681:
    unless_null $P5004, vivi_31706683
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31706683:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_326_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3068
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_504_1381281828.51527' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    unless_null _lex_param_1, fallback6694
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6694:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5005, fb_tmp_714
    unless $I5005 goto if3175_else6692 
    set $P5002, fb_tmp_714["pblock"]
    set $P5004, $P5002
    goto if3175_end6693
  if3175_else6692:
    null $P5003
    set $P5004, $P5003
  if3175_end6693:
    unless_null $P5004, vivi_31766695
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31766695:
    set fb_tmp_713, $P5004
    repr_defined $I5004, fb_tmp_713
    unless $I5004 goto if3174_else6690 
    set $P5006, fb_tmp_713["blockoid"]
    set $P5008, $P5006
    goto if3174_end6691
  if3174_else6690:
    null $P5007
    set $P5008, $P5007
  if3174_end6691:
    unless_null $P5008, vivi_31776696
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_31776696:
    set fb_tmp_712, $P5008
    repr_defined $I5003, fb_tmp_712
    unless $I5003 goto if3173_else6688 
    set $P5010, fb_tmp_712["statementlist"]
    set $P5012, $P5010
    goto if3173_end6689
  if3173_else6688:
    null $P5011
    set $P5012, $P5011
  if3173_end6689:
    unless_null $P5012, vivi_31786697
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_31786697:
    set fb_tmp_711, $P5012
    repr_defined $I5002, fb_tmp_711
    unless $I5002 goto if3172_else6686 
    set $P5014, fb_tmp_711["statement"]
    set $P5016, $P5014
    goto if3172_end6687
  if3172_else6686:
    null $P5015
    set $P5016, $P5015
  if3172_end6687:
    unless_null $P5016, vivi_31796698
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_31796698:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3171_else6684 
    .const 'Sub' $P5018 = 'cuid_504_1381281828.51527' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3171_end6685
  if3171_else6684:
    unless_null _lex_param_1, fallback6711
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5020
  fallback6711:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5008, fb_tmp_718
    unless $I5008 goto if3185_else6709 
    set $P5021, fb_tmp_718["pblock"]
    set $P5023, $P5021
    goto if3185_end6710
  if3185_else6709:
    null $P5022
    set $P5023, $P5022
  if3185_end6710:
    unless_null $P5023, vivi_31866712
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_31866712:
    set fb_tmp_717, $P5023
    repr_defined $I5007, fb_tmp_717
    unless $I5007 goto if3184_else6707 
    set $P5025, fb_tmp_717["blockoid"]
    set $P5027, $P5025
    goto if3184_end6708
  if3184_else6707:
    null $P5026
    set $P5027, $P5026
  if3184_end6708:
    unless_null $P5027, vivi_31876713
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5027, $P5028
  vivi_31876713:
    set fb_tmp_716, $P5027
    repr_defined $I5006, fb_tmp_716
    unless $I5006 goto if3183_else6705 
    set $P5029, fb_tmp_716["you_are_here"]
    set $P5031, $P5029
    goto if3183_end6706
  if3183_else6705:
    null $P5030
    set $P5031, $P5030
  if3183_end6706:
    unless_null $P5031, vivi_31886714
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_31886714:
    unless $P5031 goto if3182_else6703 
.annotate 'line', 3074
.annotate 'line', 3075
    unless_null _lex_param_1, fallback6717
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5033
  fallback6717:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5009, fb_tmp_719
    unless $I5009 goto if3189_else6715 
    set $P5034, fb_tmp_719["pblock"]
    set $P5036, $P5034
    goto if3189_end6716
  if3189_else6715:
    null $P5035
    set $P5036, $P5035
  if3189_end6716:
    unless_null $P5036, vivi_31906718
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5036, $P5037
  vivi_31906718:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3182_end6704
  if3182_else6703:
.annotate 'line', 3077
.annotate 'line', 3078
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3182_end6704:
    set $P5043, $P5042
  if3171_end6685:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1381281828.51527") :anon :lex :outer("cuid_326_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3069
    .lex "$past", $P101 
    .local pmc fb_tmp_715 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3070
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6701
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  fallback6701:
    set fb_tmp_715, $P5003
    repr_defined $I5001, fb_tmp_715
    unless $I5001 goto if3180_else6699 
    set $P5005, fb_tmp_715["pblock"]
    set $P5007, $P5005
    goto if3180_end6700
  if3180_else6699:
    null $P5006
    set $P5007, $P5006
  if3180_end6700:
    unless_null $P5007, vivi_31816702
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_31816702:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3072
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_327_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3082
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_720 
    unless_null _lex_param_1, fallback6721
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6721:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5001, fb_tmp_720
    unless $I5001 goto if3191_else6719 
    set $P5002, fb_tmp_720["statement"]
    set $P5004, $P5002
    goto if3191_end6720
  if3191_else6719:
    null $P5003
    set $P5004, $P5003
  if3191_end6720:
    unless_null $P5004, vivi_31926722
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_31926722:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_328_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3084
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
.annotate 'line', 3085
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 84
    unless_null _lex_param_1, fallback6725
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6725:
    set fb_tmp_721, _lex_param_1
    repr_defined $I5001, fb_tmp_721
    unless $I5001 goto if3193_else6723 
    set $P5003, fb_tmp_721["EXPR"]
    set $P5005, $P5003
    goto if3193_end6724
  if3193_else6723:
    null $P5004
    set $P5005, $P5004
  if3193_end6724:
    unless_null $P5005, vivi_31946726
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_31946726:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_329_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3088
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_722 
.annotate 'line', 3089
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 84
    unless_null _lex_param_1, fallback6729
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6729:
    set fb_tmp_722, _lex_param_1
    repr_defined $I5001, fb_tmp_722
    unless $I5001 goto if3195_else6727 
    set $P5003, fb_tmp_722["EXPR"]
    set $P5005, $P5003
    goto if3195_end6728
  if3195_else6727:
    null $P5004
    set $P5005, $P5004
  if3195_end6728:
    unless_null $P5005, vivi_31966730
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_31966730:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_330_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3092
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_723 
.annotate 'line', 3093
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 84
    unless_null _lex_param_1, fallback6733
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6733:
    set fb_tmp_723, _lex_param_1
    repr_defined $I5001, fb_tmp_723
    unless $I5001 goto if3197_else6731 
    set $P5003, fb_tmp_723["quote_EXPR"]
    set $P5005, $P5003
    goto if3197_end6732
  if3197_else6731:
    null $P5004
    set $P5005, $P5004
  if3197_end6732:
    unless_null $P5005, vivi_31986734
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_31986734:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_331_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3096
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_724 
.annotate 'line', 3097
    unless_null _lex_param_1, fallback6737
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6737:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5001, fb_tmp_724
    unless $I5001 goto if3199_else6735 
    set $P5002, fb_tmp_724["arglist"]
    set $P5004, $P5002
    goto if3199_end6736
  if3199_else6735:
    null $P5003
    set $P5004, $P5003
  if3199_end6736:
    unless_null $P5004, vivi_32006738
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32006738:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_332_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3100
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
.annotate 'line', 3101
    unless_null _lex_param_1, fallback6743
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6743:
    set fb_tmp_725, _lex_param_1
    repr_defined $I5001, fb_tmp_725
    unless $I5001 goto if3202_else6741 
    set $P5002, fb_tmp_725["quote"]
    set $P5004, $P5002
    goto if3202_end6742
  if3202_else6741:
    null $P5003
    set $P5004, $P5003
  if3202_end6742:
    unless_null $P5004, vivi_32036744
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32036744:
    unless $P5004 goto if3201_else6739 
    unless_null _lex_param_1, fallback6747
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5006
  fallback6747:
    set fb_tmp_726, _lex_param_1
    repr_defined $I5002, fb_tmp_726
    unless $I5002 goto if3204_else6745 
    set $P5007, fb_tmp_726["quote"]
    set $P5009, $P5007
    goto if3204_end6746
  if3204_else6745:
    null $P5008
    set $P5009, $P5008
  if3204_end6746:
    unless_null $P5009, vivi_32056748
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_32056748:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3201_end6740
  if3201_else6739:
    unless_null _lex_param_1, fallback6751
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5012
  fallback6751:
    set fb_tmp_727, _lex_param_1
    repr_defined $I5003, fb_tmp_727
    unless $I5003 goto if3206_else6749 
    set $P5013, fb_tmp_727["number"]
    set $P5015, $P5013
    goto if3206_end6750
  if3206_else6749:
    null $P5014
    set $P5015, $P5014
  if3206_end6750:
    unless_null $P5015, vivi_32076752
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_32076752:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3201_end6740:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_333_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3104
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    .local pmc fb_tmp_730 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6757
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6757:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5001, fb_tmp_728
    unless $I5001 goto if3209_else6755 
    set $P5003, fb_tmp_728["dec_number"]
    set $P5005, $P5003
    goto if3209_end6756
  if3209_else6755:
    null $P5004
    set $P5005, $P5004
  if3209_end6756:
    unless_null $P5005, vivi_32106758
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_32106758:
    unless $P5005 goto if3208_else6753 
.annotate 'line', 3105
    unless_null _lex_param_1, fallback6761
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5007
  fallback6761:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5002, fb_tmp_729
    unless $I5002 goto if3211_else6759 
    set $P5008, fb_tmp_729["dec_number"]
    set $P5010, $P5008
    goto if3211_end6760
  if3211_else6759:
    null $P5009
    set $P5010, $P5009
  if3211_end6760:
    unless_null $P5010, vivi_32126762
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5010, $P5011
  vivi_32126762:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3208_end6754
  if3208_else6753:
    unless_null _lex_param_1, fallback6765
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5013
  fallback6765:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5003, fb_tmp_730
    unless $I5003 goto if3213_else6763 
    set $P5014, fb_tmp_730["integer"]
    set $P5016, $P5014
    goto if3213_end6764
  if3213_else6763:
    null $P5015
    set $P5016, $P5015
  if3213_end6764:
    unless_null $P5016, vivi_32146766
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5016, $P5017
  vivi_32146766:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3208_end6754:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6771
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5020
  fallback6771:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5005, fb_tmp_731
    unless $I5005 goto if3216_else6769 
    set $P5021, fb_tmp_731["sign"]
    set $P5023, $P5021
    goto if3216_end6770
  if3216_else6769:
    null $P5022
    set $P5023, $P5022
  if3216_end6770:
    unless_null $P5023, vivi_32176772
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5023, $P5024
  vivi_32176772:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3215_end6768 
.annotate 'line', 3106
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3215_end6768:
.annotate 'line', 3107
    unless_null _lex_param_1, fallback6777
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5026
  fallback6777:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5006, fb_tmp_732
    unless $I5006 goto if3219_else6775 
    set $P5027, fb_tmp_732["dec_number"]
    set $P5029, $P5027
    goto if3219_end6776
  if3219_else6775:
    null $P5028
    set $P5029, $P5028
  if3219_end6776:
    unless_null $P5029, vivi_32206778
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5029, $P5030
  vivi_32206778:
    unless $P5029 goto if3218_else6773 
.annotate 'line', 3108
    nqp_get_sc_object $P5031, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 49
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3218_end6774
  if3218_else6773:
.annotate 'line', 3109
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3218_end6774:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_334_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3112
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
    unless_null _lex_param_1, fallback6781
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6781:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3221_else6779 
    set $P5002, fb_tmp_733["quote_EXPR"]
    set $P5004, $P5002
    goto if3221_end6780
  if3221_else6779:
    null $P5003
    set $P5004, $P5003
  if3221_end6780:
    unless_null $P5004, vivi_32226782
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32226782:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_335_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3113
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
    unless_null _lex_param_1, fallback6785
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6785:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3223_else6783 
    set $P5002, fb_tmp_734["quote_EXPR"]
    set $P5004, $P5002
    goto if3223_end6784
  if3223_else6783:
    null $P5003
    set $P5004, $P5003
  if3223_end6784:
    unless_null $P5004, vivi_32246786
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32246786:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_336_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3114
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_735 
    unless_null _lex_param_1, fallback6789
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6789:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5001, fb_tmp_735
    unless $I5001 goto if3225_else6787 
    set $P5002, fb_tmp_735["quote_EXPR"]
    set $P5004, $P5002
    goto if3225_end6788
  if3225_else6787:
    null $P5003
    set $P5004, $P5003
  if3225_end6788:
    unless_null $P5004, vivi_32266790
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32266790:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_337_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3115
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_736 
    unless_null _lex_param_1, fallback6793
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6793:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5001, fb_tmp_736
    unless $I5001 goto if3227_else6791 
    set $P5002, fb_tmp_736["quote_EXPR"]
    set $P5004, $P5002
    goto if3227_end6792
  if3227_else6791:
    null $P5003
    set $P5004, $P5003
  if3227_end6792:
    unless_null $P5004, vivi_32286794
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32286794:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_338_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3116
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_737 
    unless_null _lex_param_1, fallback6797
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6797:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5001, fb_tmp_737
    unless $I5001 goto if3229_else6795 
    set $P5002, fb_tmp_737["quote_EXPR"]
    set $P5004, $P5002
    goto if3229_end6796
  if3229_else6795:
    null $P5003
    set $P5004, $P5003
  if3229_end6796:
    unless_null $P5004, vivi_32306798
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32306798:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_339_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3117
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_738 
.annotate 'line', 3118
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 93
    unless_null _lex_param_1, fallback6801
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6801:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5001, fb_tmp_738
    unless $I5001 goto if3231_else6799 
    set $P5003, fb_tmp_738["quote_EXPR"]
    set $P5005, $P5003
    goto if3231_end6800
  if3231_else6799:
    null $P5004
    set $P5005, $P5004
  if3231_end6800:
    unless_null $P5005, vivi_32326802
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_32326802:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_340_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3121
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc fb_tmp_745 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_746 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
.annotate 'line', 3122
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6803
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5005, $P5006
    set fb_tmp_739, $P5005
    repr_defined $I5001, fb_tmp_739
    unless $I5001 goto if3233_else6804 
    set $P5007, fb_tmp_739["$W"]
    set $P5009, $P5007
    goto if3233_end6805
  if3233_else6804:
    null $P5008
    set $P5009, $P5008
  if3233_end6805:
    unless_null $P5009, vivi_32346806
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_32346806:
    unless_null $P5009, vivi_32356807
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32356807:
    set $P5004, $P5009
  fallback6803:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3123
    set fb_tmp_740, $P101
    repr_defined $I5002, fb_tmp_740
    unless $I5002 goto if3236_else6808 
    set $P5013, fb_tmp_740[0]
    set $P5015, $P5013
    goto if3236_end6809
  if3236_else6808:
    null $P5014
    set $P5015, $P5014
  if3236_end6809:
    unless_null $P5015, vivi_32376810
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5015, $P5016
  vivi_32376810:
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3124
    set fb_tmp_741, $P101
    repr_defined $I5003, fb_tmp_741
    unless $I5003 goto if3238_else6811 
    set $P5019, fb_tmp_741[0]
    set $P5021, $P5019
    goto if3238_end6812
  if3238_else6811:
    null $P5020
    set $P5021, $P5020
  if3238_end6812:
    unless_null $P5021, vivi_32396813
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_32396813:
    nqp_get_sc_object $P5023, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3126
    nqp_get_sc_object $P5024, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3127
    nqp_get_sc_object $P5026, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3128
    set fb_tmp_742, $P101
    repr_defined $I5004, fb_tmp_742
    unless $I5004 goto if3240_else6814 
    set $P5029, fb_tmp_742[0]
    set $P5031, $P5029
    goto if3240_end6815
  if3240_else6814:
    null $P5030
    set $P5031, $P5030
  if3240_end6815:
    unless_null $P5031, vivi_32416816
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5031, $P5032
  vivi_32416816:
    nqp_get_sc_object $P5033, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3129
    set fb_tmp_743, $P101
    repr_defined $I5005, fb_tmp_743
    unless $I5005 goto if3242_else6817 
    set $P5035, fb_tmp_743[0]
    set $P5037, $P5035
    goto if3242_end6818
  if3242_else6817:
    null $P5036
    set $P5037, $P5036
  if3242_end6818:
    unless_null $P5037, vivi_32436819
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_32436819:
    nqp_get_sc_object $P5039, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3130
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3131
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3133
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback6822
    nqp_get_sc_object $P5043, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_50, $P5042
    set fb_tmp_745, pkg_viv_tmp_50
    repr_defined $I5007, fb_tmp_745
    unless $I5007 goto if3245_else6823 
    set $P5044, fb_tmp_745["%LANG"]
    set $P5046, $P5044
    goto if3245_end6824
  if3245_else6823:
    null $P5045
    set $P5046, $P5045
  if3245_end6824:
    unless_null $P5046, vivi_32466825
    new $P5047, 'Hash'
    set pkg_viv_tmp_50["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32466825:
    unless_null $P5046, vivi_32476826
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32476826:
    set $P5041, $P5046
  fallback6822:
    set fb_tmp_744, $P5041
    repr_defined $I5006, fb_tmp_744
    unless $I5006 goto if3244_else6820 
    set $P5049, fb_tmp_744["Regex-actions"]
    set $P5051, $P5049
    goto if3244_end6821
  if3244_else6820:
    null $P5050
    set $P5051, $P5050
  if3244_end6821:
    unless_null $P5051, vivi_32486827
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5051, $P5052
  vivi_32486827:
    unless_null _lex_param_1, fallback6830
    nqp_get_sc_object $P5053, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5053
  fallback6830:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5008, fb_tmp_746
    unless $I5008 goto if3249_else6828 
    set $P5054, fb_tmp_746["p6regex"]
    set $P5056, $P5054
    goto if3249_end6829
  if3249_else6828:
    null $P5055
    set $P5056, $P5055
  if3249_end6829:
    unless_null $P5056, vivi_32506831
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5056, $P5057
  vivi_32506831:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3134
    nqp_get_sc_object $P5060, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3136
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3141
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_341_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3144
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    unless_null _lex_param_1, fallback6834
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6834:
    set fb_tmp_747, _lex_param_1
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3251_else6832 
    set $P5002, fb_tmp_747["variable"]
    set $P5004, $P5002
    goto if3251_end6833
  if3251_else6832:
    null $P5003
    set $P5004, $P5003
  if3251_end6833:
    unless_null $P5004, vivi_32526835
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32526835:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_342_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_748 
.annotate 'line', 3146
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3147
    unless_null _lex_param_1, fallback6838
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6838:
    set fb_tmp_748, _lex_param_1
    repr_defined $I5001, fb_tmp_748
    unless $I5001 goto if3253_else6836 
    set $P5003, fb_tmp_748["block"]
    set $P5005, $P5003
    goto if3253_end6837
  if3253_else6836:
    null $P5004
    set $P5005, $P5004
  if3253_end6837:
    unless_null $P5005, vivi_32546839
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_32546839:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_343_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3150
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_344_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_749 
    unless_null _lex_param_1, fallback6842
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6842:
    set fb_tmp_749, _lex_param_1
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if3255_else6840 
    set $P5002, fb_tmp_749["dotty"]
    set $P5004, $P5002
    goto if3255_end6841
  if3255_else6840:
    null $P5003
    set $P5004, $P5003
  if3255_end6841:
    unless_null $P5004, vivi_32566843
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_32566843:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_345_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3157
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("call" :named("op"), "RETURN" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_346_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3160
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3161
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3162
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_347_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3169
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_348_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3170
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_349_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3171
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_350_1381281828.51527") :anon :lex :outer("cuid_426_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3173
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3174
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3279
    .const 'Sub' $P5014 = 'cuid_351_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_352_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_353_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_354_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_355_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_356_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_357_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_358_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_359_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_360_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1381281828.51527' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1381281828.51527' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_351_1381281828.51527' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_352_1381281828.51527' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_353_1381281828.51527' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_354_1381281828.51527' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_355_1381281828.51527' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_356_1381281828.51527' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_357_1381281828.51527' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_358_1381281828.51527' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_359_1381281828.51527' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_360_1381281828.51527' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_361_1381281828.51527' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_362_1381281828.51527' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_363_1381281828.51527' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_351_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3281
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_750 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3282
    unless_null _lex_param_1, fallback6846
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6846:
    set fb_tmp_750, _lex_param_1
    repr_defined $I5001, fb_tmp_750
    unless $I5001 goto if3257_else6844 
    set $P5003, fb_tmp_750["statement"]
    set $P5005, $P5003
    goto if3257_end6845
  if3257_else6844:
    null $P5004
    set $P5005, $P5004
  if3257_end6845:
    unless_null $P5005, vivi_32586847
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_32586847:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3283
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_352_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_751 
.annotate 'line', 3288
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    unless_null _lex_param_1, fallback6850
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6850:
    set fb_tmp_751, _lex_param_1
    repr_defined $I5001, fb_tmp_751
    unless $I5001 goto if3259_else6848 
    set $P5003, fb_tmp_751["codeblock"]
    set $P5005, $P5003
    goto if3259_end6849
  if3259_else6848:
    null $P5004
    set $P5005, $P5004
  if3259_end6849:
    unless_null $P5005, vivi_32606851
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_32606851:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_353_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3292
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
.annotate 'line', 3293
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
.annotate 'line', 3294
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3295
    unless_null _lex_param_1, fallback6854
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5005
  fallback6854:
    set fb_tmp_752, _lex_param_1
    repr_defined $I5001, fb_tmp_752
    unless $I5001 goto if3261_else6852 
    set $P5006, fb_tmp_752["var"]
    set $P5008, $P5006
    goto if3261_end6853
  if3261_else6852:
    null $P5007
    set $P5008, $P5007
  if3261_end6853:
    unless_null $P5008, vivi_32626855
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_32626855:
    $P5010 = $P5008."ast"()
.annotate 'line', 3296
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback6858
    nqp_get_sc_object $P5014, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5013, $P5014
    set fb_tmp_753, $P5013
    repr_defined $I5002, fb_tmp_753
    unless $I5002 goto if3264_else6859 
    set $P5015, fb_tmp_753["$SEQ"]
    set $P5017, $P5015
    goto if3264_end6860
  if3264_else6859:
    null $P5016
    set $P5017, $P5016
  if3264_end6860:
    unless_null $P5017, vivi_32656861
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_32656861:
    unless_null $P5017, vivi_32666862
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_32666862:
    set $P5012, $P5017
  fallback6858:
    unless $P5012 goto if3263_else6856 
    set $I5003, 1
    goto if3263_end6857
  if3263_else6856:
    set $I5003, 0
  if3263_end6857:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_354_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_754 
.annotate 'line', 3301
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
.annotate 'line', 3302
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3303
    unless_null _lex_param_1, fallback6865
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5005
  fallback6865:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5001, fb_tmp_754
    unless $I5001 goto if3267_else6863 
    set $P5006, fb_tmp_754["codeblock"]
    set $P5008, $P5006
    goto if3267_end6864
  if3267_else6863:
    null $P5007
    set $P5008, $P5007
  if3267_end6864:
    unless_null $P5008, vivi_32686866
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_32686866:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_355_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3307
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_755 
    .local pmc fb_tmp_756 
.annotate 'line', 3308
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    unless_null _lex_param_1, fallback6869
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5002
  fallback6869:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5001, fb_tmp_755
    unless $I5001 goto if3269_else6867 
    set $P5003, fb_tmp_755["codeblock"]
    set $P5005, $P5003
    goto if3269_end6868
  if3269_else6867:
    null $P5004
    set $P5005, $P5004
  if3269_end6868:
    unless_null $P5005, vivi_32706870
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_32706870:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback6873
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5008
  fallback6873:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5003, fb_tmp_756
    unless $I5003 goto if3271_else6871 
    set $P5009, fb_tmp_756["zw"]
    set $P5011, $P5009
    goto if3271_end6872
  if3271_else6871:
    null $P5010
    set $P5011, $P5010
  if3271_end6872:
    unless_null $P5011, vivi_32726874
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_32726874:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_356_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3313
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
.annotate 'line', 3314
    nqp_get_sc_object $P5001, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    nqp_get_sc_object $P5002, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
.annotate 'line', 3315
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3316
    unless_null _lex_param_1, fallback6877
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5005
  fallback6877:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3273_else6875 
    set $P5006, fb_tmp_757["var"]
    set $P5008, $P5006
    goto if3273_end6876
  if3273_else6875:
    null $P5007
    set $P5008, $P5007
  if3273_end6876:
    unless_null $P5008, vivi_32746878
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_32746878:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_357_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3320
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
.annotate 'line', 3321
    unless_null _lex_param_1, fallback6881
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback6881:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3275_else6879 
    set $P5004, fb_tmp_758["block"]
    set $P5006, $P5004
    goto if3275_end6880
  if3275_else6879:
    null $P5005
    set $P5006, $P5005
  if3275_end6880:
    unless_null $P5006, vivi_32766882
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_32766882:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3322
    $P101."blocktype"("immediate")
.annotate 'line', 3324
    nqp_get_sc_object $P5009, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 98
.annotate 'line', 3325
    nqp_get_sc_object $P5010, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3327
    nqp_get_sc_object $P5011, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3328
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
.annotate 'line', 3329
    nqp_get_sc_object $P5014, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3336
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_358_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3339
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_506_1381281828.51527' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_507_1381281828.51527' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6885
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5003
  fallback6885:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3277_else6883 
    set $P5004, fb_tmp_759["longname"]
    set $P5006, $P5004
    goto if3277_end6884
  if3277_else6883:
    null $P5005
    set $P5006, $P5005
  if3277_end6884:
    unless_null $P5006, vivi_32786886
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_32786886:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback6891
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5009
  fallback6891:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5002, fb_tmp_760
    unless $I5002 goto if3280_else6889 
    set $P5010, fb_tmp_760["assertion"]
    set $P5012, $P5010
    goto if3280_end6890
  if3280_else6889:
    null $P5011
    set $P5012, $P5011
  if3280_end6890:
    unless_null $P5012, vivi_32816892
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5012, $P5013
  vivi_32816892:
    unless $P5012 goto if3279_else6887 
.annotate 'line', 3342
.annotate 'line', 3343
    unless_null _lex_param_1, fallback6897
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5014
  fallback6897:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5004, fb_tmp_762
    unless $I5004 goto if3283_else6895 
    set $P5015, fb_tmp_762["assertion"]
    set $P5017, $P5015
    goto if3283_end6896
  if3283_else6895:
    null $P5016
    set $P5017, $P5016
  if3283_end6896:
    unless_null $P5017, vivi_32846898
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5017, $P5018
  vivi_32846898:
    set fb_tmp_761, $P5017
    repr_defined $I5003, fb_tmp_761
    unless $I5003 goto if3282_else6893 
    set $P5019, fb_tmp_761[0]
    set $P5021, $P5019
    goto if3282_end6894
  if3282_else6893:
    null $P5020
    set $P5021, $P5020
  if3282_end6894:
    unless_null $P5021, vivi_32856899
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5021, $P5022
  vivi_32856899:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3344
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3279_end6888
  if3279_else6887:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3286_else6900 
    .const 'Sub' $P5026 = 'cuid_506_1381281828.51527' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3286_end6901
  if3286_else6900:
.annotate 'line', 3355
.annotate 'line', 3356
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
.annotate 'line', 3358
    nqp_get_sc_object $P5029, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 12
    nqp_get_sc_object $P5030, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 55
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback6916
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5034
  fallback6916:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5006, fb_tmp_765
    unless $I5006 goto if3294_else6914 
    set $P5035, fb_tmp_765["arglist"]
    set $P5037, $P5035
    goto if3294_end6915
  if3294_else6914:
    null $P5036
    set $P5037, $P5036
  if3294_end6915:
    unless_null $P5037, vivi_32956917
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5037, $P5038
  vivi_32956917:
    unless $P5037 goto if3293_else6912 
.annotate 'line', 3359
.annotate 'line', 3360
    unless_null _lex_param_1, fallback6922
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5042
  fallback6922:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5008, fb_tmp_767
    unless $I5008 goto if3297_else6920 
    set $P5043, fb_tmp_767["arglist"]
    set $P5045, $P5043
    goto if3297_end6921
  if3297_else6920:
    null $P5044
    set $P5045, $P5044
  if3297_end6921:
    unless_null $P5045, vivi_32986923
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5045, $P5046
  vivi_32986923:
    set fb_tmp_766, $P5045
    repr_defined $I5007, fb_tmp_766
    unless $I5007 goto if3296_else6918 
    set $P5047, fb_tmp_766[0]
    set $P5049, $P5047
    goto if3296_end6919
  if3296_else6918:
    null $P5048
    set $P5049, $P5048
  if3296_end6919:
    unless_null $P5049, vivi_32996924
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5049, $P5050
  vivi_32996924:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next6928:
    unless $P5041, for_done6930
    shift $P5054, $P5041
  for_redo6929:
    .const 'Sub' $P5053 = 'cuid_507_1381281828.51527' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next6928
  for_done6930:
    set $P5098, $P5039
    goto if3293_end6913
  if3293_else6912:
    unless_null _lex_param_1, fallback6935
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5055
  fallback6935:
    set fb_tmp_769, _lex_param_1
    repr_defined $I5009, fb_tmp_769
    unless $I5009 goto if3303_else6933 
    set $P5056, fb_tmp_769["nibbler"]
    set $P5058, $P5056
    goto if3303_end6934
  if3303_else6933:
    null $P5057
    set $P5058, $P5057
  if3303_end6934:
    unless_null $P5058, vivi_33046936
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5058, $P5059
  vivi_33046936:
    set $P5097, $P5058
    unless $P5058 goto if3302_end6932 
.annotate 'line', 3362
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3305_else6937 
.annotate 'line', 3364
    set fb_tmp_770, $P102
    repr_defined $I5011, fb_tmp_770
    unless $I5011 goto if3306_else6939 
    set $P5060, fb_tmp_770[0]
    set $P5062, $P5060
    goto if3306_end6940
  if3306_else6939:
    null $P5061
    set $P5062, $P5061
  if3306_end6940:
    unless_null $P5062, vivi_33076941
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5062, $P5063
  vivi_33076941:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback6946
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5066
  fallback6946:
    set fb_tmp_772, _lex_param_1
    repr_defined $I5013, fb_tmp_772
    unless $I5013 goto if3309_else6944 
    set $P5067, fb_tmp_772["nibbler"]
    set $P5069, $P5067
    goto if3309_end6945
  if3309_else6944:
    null $P5068
    set $P5069, $P5068
  if3309_end6945:
    unless_null $P5069, vivi_33106947
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5069, $P5070
  vivi_33106947:
    set fb_tmp_771, $P5069
    repr_defined $I5012, fb_tmp_771
    unless $I5012 goto if3308_else6942 
    set $P5071, fb_tmp_771[0]
    set $P5073, $P5071
    goto if3308_end6943
  if3308_else6942:
    null $P5072
    set $P5073, $P5072
  if3308_end6943:
    unless_null $P5073, vivi_33116948
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5073, $P5074
  vivi_33116948:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3305_end6938
  if3305_else6937:
.annotate 'line', 3365
    set fb_tmp_773, $P102
    repr_defined $I5014, fb_tmp_773
    unless $I5014 goto if3312_else6949 
    set $P5079, fb_tmp_773[0]
    set $P5081, $P5079
    goto if3312_end6950
  if3312_else6949:
    null $P5080
    set $P5081, $P5080
  if3312_end6950:
    unless_null $P5081, vivi_33136951
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5081, $P5082
  vivi_33136951:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback6956
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5084
  fallback6956:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5016, fb_tmp_775
    unless $I5016 goto if3315_else6954 
    set $P5085, fb_tmp_775["nibbler"]
    set $P5087, $P5085
    goto if3315_end6955
  if3315_else6954:
    null $P5086
    set $P5087, $P5086
  if3315_end6955:
    unless_null $P5087, vivi_33166957
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5087, $P5088
  vivi_33166957:
    set fb_tmp_774, $P5087
    repr_defined $I5015, fb_tmp_774
    unless $I5015 goto if3314_else6952 
    set $P5089, fb_tmp_774[0]
    set $P5091, $P5089
    goto if3314_end6953
  if3314_else6952:
    null $P5090
    set $P5091, $P5090
  if3314_end6953:
    unless_null $P5091, vivi_33176958
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5091, $P5092
  vivi_33176958:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3305_end6938:
    set $P5097, $P5096
  if3302_end6932:
    set $P5098, $P5097
  if3293_end6913:
    set $P5099, $P5098
  if3286_end6901:
  if3279_end6888:
.annotate 'line', 3368
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1381281828.51527") :anon :lex :outer("cuid_358_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3346
    .lex "$fullrxname", $S101 
    .lex "$loc", $I101 
    .lex "$rxname", $S102 
    .local pmc fb_tmp_763 
    .local pmc fb_tmp_764 
    .local pmc pkg_viv_tmp_51 
    set $S101, ""
    set $I101, 0
    set $S102, ""
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback6904
    nqp_get_sc_object $P5003, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_51, $P5002
    set fb_tmp_764, pkg_viv_tmp_51
    repr_defined $I5002, fb_tmp_764
    unless $I5002 goto if3288_else6905 
    set $P5004, fb_tmp_764["%RX"]
    set $P5006, $P5004
    goto if3288_end6906
  if3288_else6905:
    null $P5005
    set $P5006, $P5005
  if3288_end6906:
    unless_null $P5006, vivi_32896907
    new $P5007, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5007
    set $P5006, $P5007
  vivi_32896907:
    unless_null $P5006, vivi_32906908
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_32906908:
    set $P5001, $P5006
  fallback6904:
    set fb_tmp_763, $P5001
    repr_defined $I5001, fb_tmp_763
    unless $I5001 goto if3287_else6902 
    set $P5009, fb_tmp_763["name"]
    set $P5011, $P5009
    goto if3287_end6903
  if3287_else6902:
    null $P5010
    set $P5011, $P5010
  if3287_end6903:
    unless_null $P5011, vivi_32916909
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5011, $P5012
  vivi_32916909:
    set $S5001, $P5011
    set $S101, $S5001
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if3292_end6911 
    index $I5005, $S101, utf8:":sym\x{ab}", 0
    set $I101, $I5005
  if3292_end6911:
    add $I5006, $I101, 5
    length $I5009, $S101
    sub $I5008, $I5009, $I101
    sub $I5007, $I5008, 6
    substr $S5002, $S101, $I5006, $I5007
    set $S102, $S5002
.annotate 'line', 3352
    nqp_get_sc_object $P5013, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    find_lex $P5014, "$/"
.annotate 'line', 3353
    nqp_get_sc_object $P5015, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 34
    find_lex $P5016, "$/"
    $P5017 = $P5015."new"($S102, "literal" :named("rxtype"), $P5016 :named("node"))
    $P5018 = $P5013."new"($P5017, "sym" :named("name"), "subcapture" :named("rxtype"), $P5014 :named("node"))
    store_lex "$qast", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1381281828.51527") :anon :lex :outer("cuid_358_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3360
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_768 
    find_lex $P5001, "$qast"
    set fb_tmp_768, $P5001
    repr_defined $I5001, fb_tmp_768
    unless $I5001 goto if3300_else6925 
    set $P5002, fb_tmp_768[0]
    set $P5004, $P5002
    goto if3300_end6926
  if3300_else6925:
    null $P5003
    set $P5004, $P5003
  if3300_end6926:
    unless_null $P5004, vivi_33016927
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_33016927:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_359_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3371
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_776 
.annotate 'line', 3372
    unless_null _lex_param_1, fallback6961
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_1, $P5001
  fallback6961:
    set fb_tmp_776, _lex_param_1
    repr_defined $I5001, fb_tmp_776
    unless $I5001 goto if3318_else6959 
    set $P5002, fb_tmp_776["quote_EXPR"]
    set $P5004, $P5002
    goto if3318_end6960
  if3318_else6959:
    null $P5003
    set $P5004, $P5003
  if3318_end6960:
    unless_null $P5004, vivi_33196962
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5004, $P5005
  vivi_33196962:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_360_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3375
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc pkg_viv_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3376
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6963
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5003, $P5004
    set fb_tmp_777, $P5003
    repr_defined $I5001, fb_tmp_777
    unless $I5001 goto if3320_else6964 
    set $P5005, fb_tmp_777["$W"]
    set $P5007, $P5005
    goto if3320_end6965
  if3320_else6964:
    null $P5006
    set $P5007, $P5006
  if3320_end6965:
    unless_null $P5007, vivi_33216966
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_33216966:
    unless_null $P5007, vivi_33226967
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33226967:
    set $P5002, $P5007
  fallback6963:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback6970
    nqp_get_sc_object $P5013, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_52, $P5012
    set fb_tmp_778, pkg_viv_tmp_52
    repr_defined $I5003, fb_tmp_778
    unless $I5003 goto if3324_else6971 
    set $P5014, fb_tmp_778["%RX"]
    set $P5016, $P5014
    goto if3324_end6972
  if3324_else6971:
    null $P5015
    set $P5016, $P5015
  if3324_end6972:
    unless_null $P5016, vivi_33256973
    new $P5017, 'Hash'
    set pkg_viv_tmp_52["%RX"], $P5017
    set $P5016, $P5017
  vivi_33256973:
    unless_null $P5016, vivi_33266974
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33266974:
    set $P5011, $P5016
  fallback6970:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3323_end6969 
.annotate 'line', 3377
.annotate 'line', 3378
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback6977
    nqp_get_sc_object $P5021, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_53, $P5020
    set fb_tmp_780, pkg_viv_tmp_53
    repr_defined $I5005, fb_tmp_780
    unless $I5005 goto if3328_else6978 
    set $P5022, fb_tmp_780["%RX"]
    set $P5024, $P5022
    goto if3328_end6979
  if3328_else6978:
    null $P5023
    set $P5024, $P5023
  if3328_end6979:
    unless_null $P5024, vivi_33296980
    new $P5025, 'Hash'
    set pkg_viv_tmp_53["%RX"], $P5025
    set $P5024, $P5025
  vivi_33296980:
    unless_null $P5024, vivi_33306981
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33306981:
    set $P5019, $P5024
  fallback6977:
    set fb_tmp_779, $P5019
    repr_defined $I5004, fb_tmp_779
    unless $I5004 goto if3327_else6975 
    set $P5027, fb_tmp_779["code"]
    set $P5029, $P5027
    goto if3327_end6976
  if3327_else6975:
    null $P5028
    set $P5029, $P5028
  if3327_end6976:
    unless_null $P5029, vivi_33316982
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5029, $P5030
  vivi_33316982:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3323_end6969:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_361_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3383
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3384
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_362_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3387
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3388
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_363_1381281828.51527") :anon :lex :outer("cuid_505_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3391
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_508_1381281828.51527' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next6983:
    unless $P5004, for_done6985
    shift $P5006, $P5004
  for_redo6984:
    .const 'Sub' $P5005 = 'cuid_508_1381281828.51527' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next6983
  for_done6985:
.annotate 'line', 3396
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1381281828.51527") :anon :lex :outer("cuid_363_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3393
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3394
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3401
    .const 'Sub' $P5008 = 'cuid_364_1381281828.51527' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_365_1381281828.51527' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_366_1381281828.51527' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_367_1381281828.51527' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_368_1381281828.51527' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_369_1381281828.51527' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_370_1381281828.51527' 
    capture_lex $P5008 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_364_1381281828.51527' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_365_1381281828.51527' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_366_1381281828.51527' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_367_1381281828.51527' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_368_1381281828.51527' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_369_1381281828.51527' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_370_1381281828.51527' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_364_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3404
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$ast", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_781 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    new $P5003, 'ResizablePMCArray'
    set fb_tmp_781, _lex_param_1
    repr_defined $I5001, fb_tmp_781
    unless $I5001 goto if3332_else6986 
    set $P5004, fb_tmp_781[0]
    set $P5006, $P5004
    goto if3332_end6987
  if3332_else6986:
    null $P5005
    set $P5006, $P5005
  if3332_end6987:
    unless_null $P5006, vivi_33336988
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5006, $P5007
  vivi_33336988:
    push $P5003, $P5006
    repr_bind_attr_obj $P5001, $P5002, "@!block_stack", 0, $P5003
.annotate 'line', 3406
    nqp_decontainerize $P5008, _lex_param_0
    $P5008."visit_children"(_lex_param_1)
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_block" :subid("cuid_365_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3410
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
.annotate 'line', 3411
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    $P5003."push"(_lex_param_1)
.annotate 'line', 3413
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 3415
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!block_stack", 0
    $P5007."pop"()
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "find_lex" :subid("cuid_366_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3420
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_510_1381281828.51527' 
    capture_lex $P5009 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    set $I101, 0
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_6989
    .lex "RETURN", $P101
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    set $N5001, $P5003
    set $I5001, $N5001
    set $I101, $I5001
  while3334_test6991:
    set $N5002, $I101
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5007, $I5002
    set $P5006, $P5007
    unless $I5002 goto while3334_done6995 
  while3334_redo6993:
    .const 'Sub' $P5004 = 'cuid_510_1381281828.51527' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5006, $P5005
    goto while3334_test6991 
  while3334_done6995:
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    goto lexotic_6990
  lexotic_6989:
    .get_results ($P5008)
  lexotic_6990:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1381281828.51527") :anon :lex :outer("cuid_366_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3422
    .lex "%sym", $P101 
    .local pmc fb_tmp_782 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $I5002, "$i"
    sub $I5001, $I5002, 1
    store_lex "$i", $I5001
.annotate 'line', 3424
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    repr_get_attr_obj $P5005, $P5002, $P5004, "@!block_stack", 0
    set fb_tmp_782, $P5005
    repr_defined $I5003, fb_tmp_782
    unless $I5003 goto if3335_else6996 
    find_lex $I5004, "$i"
    set $P5006, fb_tmp_782[$I5004]
    set $P5008, $P5006
    goto if3335_end6997
  if3335_else6996:
    null $P5007
    set $P5008, $P5007
  if3335_end6997:
    unless_null $P5008, vivi_33366998
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5008, $P5009
  vivi_33366998:
    find_lex $P5010, "$name"
    $P5011 = $P5008."symbol"($P5010)
    set $P101, $P5011
    set $N5001, $P101
    box $P5014, $N5001
    set $P5013, $P5014
    unless $N5001 goto if3337_end7000 
.annotate 'line', 3425
    $P5012 = "RETURN"($P101)
    set $P5013, $P5012
  if3337_end7000:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_367_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3432
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "%sym", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_783 
    new $P5001, 'Hash'
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_7001
    .lex "RETURN", $P102
.annotate 'line', 3433
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."find_lex"(_lex_param_1)
    set $P101, $P5003
    get_id $I5003, $P101
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    get_id $I5004, $P5004
    iseq $I5002, $I5003, $I5004
    not $I5001, $I5002
    set $I5006, $I5001
    unless $I5001 goto if3339_end7006 
    exists $I5005, $P101["value"]
    set $I5006, $I5005
  if3339_end7006:
    unless $I5006 goto if3338_else7003 
.annotate 'line', 3434
    set fb_tmp_783, $P101
    repr_defined $I5007, fb_tmp_783
    unless $I5007 goto if3340_else7007 
    set $P5005, fb_tmp_783["value"]
    set $P5007, $P5005
    goto if3340_end7008
  if3340_else7007:
    null $P5006
    set $P5007, $P5006
  if3340_end7008:
    unless_null $P5007, vivi_33417009
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_33417009:
    $P5009 = "RETURN"($P5007)
    set $P5011, $P5009
    goto if3338_end7004
  if3338_else7003:
.annotate 'line', 3437
    set $S5002, _lex_param_1
    concat $S5001, "No compile-time value for ", $S5002
    box $P5010, $S5001
    die $P5010
    set $P5011, $P5010
  if3338_end7004:
    goto lexotic_7002
  lexotic_7001:
    .get_results ($P5011)
  lexotic_7002:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "visit_op" :subid("cuid_368_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3442
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_512_1381281828.51527' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_515_1381281828.51527' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_516_1381281828.51527' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_517_1381281828.51527' 
    capture_lex $P5043 
    .lex "&returns_int", $P101 
    .lex "$typeinfo", $P102 
    .lex "$asm", $P103 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_787 
    .const 'Sub' $P5001 = 'cuid_512_1381281828.51527' 
    capture_lex $P5001
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_7039
    .lex "RETURN", $P104
.annotate 'line', 3466
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 3468
    $P5005 = _lex_param_1."op"()
    set $S5001, $P5005
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if3356_else7041 
.annotate 'line', 3469
    $P5006 = _lex_param_1."op"()
    set $S5003, $P5006
    $P5007 = _lex_param_1."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if3356_end7042
  if3356_else7041:
    set $S5005, ""
  if3356_end7042:
    box $P5008, $S5005
    set $P102, $P5008
.annotate 'line', 3471
    $P5009 = _lex_param_1."op"()
    set $S5007, $P5009
    substr $S5006, $S5007, 0, 3
    box $P5010, $S5006
    set $P103, $P5010
    new $P5041, 'ExceptionHandler'
    set_label $P5041, catch_handler_33817084
    $P5041.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5041
.annotate 'line', 3473
    new $P5039, 'ExceptionHandler'
    set_label $P5039, catch_handler_33797082
    $P5039.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5039
    set $S5008, $P102
    iseq $I5005, $S5008, "_n"
    set $I5011, $I5005
    unless $I5005 goto if3358_end7046 
    set $S5009, $P103
    iseq $I5006, $S5009, "add"
    set $I5008, $I5006
    if $I5006 goto unless3360_end7050 
    set $S5010, $P103
    iseq $I5007, $S5010, "sub"
    set $I5008, $I5007
  unless3360_end7050:
    set $I5010, $I5008
    if $I5008 goto unless3359_end7048 
    set $S5011, $P103
    iseq $I5009, $S5011, "mul"
    set $I5010, $I5009
  unless3359_end7048:
    set $I5011, $I5010
  if3358_end7046:
    unless $I5011 goto if3357_else7043 
    .const 'Sub' $P5011 = 'cuid_515_1381281828.51527' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if3357_end7044
  if3357_else7043:
    set $S5012, $P102
    iseq $I5012, $S5012, "_i"
    unless $I5012 goto if3367_else7061 
.annotate 'line', 3483
.annotate 'line', 3484
    nqp_decontainerize $P5013, _lex_param_0
    $P5014 = $P5013."find_sym"("num")
    $P5015 = _lex_param_1."returns"($P5014)
    set $P5037, $P5015
    goto if3367_end7062
  if3367_else7061:
    set $S5013, $P102
    iseq $I5013, $S5013, "_s"
    unless $I5013 goto if3368_else7063 
.annotate 'line', 3485
.annotate 'line', 3486
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5016."find_sym"("str")
    $P5018 = _lex_param_1."returns"($P5017)
    set $P5036, $P5018
    goto if3368_end7064
  if3368_else7063:
.annotate 'line', 3487
    $P5019 = _lex_param_1."op"()
    set $S5014, $P5019
    iseq $I5014, $S5014, "handle"
    unless $I5014 goto if3369_else7065 
.annotate 'line', 3488
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."visit_handle"(_lex_param_1)
    $P5022 = "RETURN"($P5021)
    set $P5035, $P5022
    goto if3369_end7066
  if3369_else7065:
.annotate 'line', 3489
    $P5023 = _lex_param_1."op"()
    set $S5015, $P5023
    iseq $I5015, $S5015, "numify"
    box $P5034, $I5015
    set $P5033, $P5034
    unless $I5015 goto if3370_end7068 
    set fb_tmp_787, _lex_param_1
    repr_defined $I5017, fb_tmp_787
    unless $I5017 goto if3372_else7071 
    set $P5024, fb_tmp_787[0]
    set $P5026, $P5024
    goto if3372_end7072
  if3372_else7071:
    null $P5025
    set $P5026, $P5025
  if3372_end7072:
    unless_null $P5026, vivi_33737073
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5026, $P5027
  vivi_33737073:
    nqp_get_sc_object $P5028, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5016, $P5026, $P5028
    box $P5032, $I5016
    set $P5031, $P5032
    unless $I5016 goto if3371_end7070 
    .const 'Sub' $P5029 = 'cuid_516_1381281828.51527' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5031, $P5030
  if3371_end7070:
    set $P5033, $P5031
  if3370_end7068:
    set $P5035, $P5033
  if3369_end7066:
    set $P5036, $P5035
  if3368_end7064:
    set $P5037, $P5036
  if3367_end7062:
  if3357_end7044:
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5040, $P5038
    pop_eh 
    goto skip_handler_33787081
  catch_handler_33797082:
    .get_results ($P5039) 
    .const 'Sub' $P10001 = 'cuid_517_1381281828.51527' 
    capture_lex $P10001
    $P10001($P5039)
    set $I10001, 1
    set $P5039["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5039
    pop_upto_eh $P5039
    pop_eh 
    set $P5040, $P10002
    goto skip_handler_33787081
  skip_handler_33787081:
    set $P5042, $P5040
    pop_eh 
    goto skip_handler_33807083
  catch_handler_33817084:
    .get_results ($P5041) 
    set $I10001, 1
    set $P5041["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    finalize $P5041
    pop_upto_eh $P5041
    pop_eh 
    set $P5042, $P10001
    goto skip_handler_33807083
  skip_handler_33807083:
    goto lexotic_7040
  lexotic_7039:
    .get_results (_lex_param_1)
  lexotic_7040:
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "returns_int" :subid("cuid_512_1381281828.51527") :anon :lex :outer("cuid_368_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3443
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_511_1381281828.51527' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_513_1381281828.51527' 
    capture_lex $P5016 
    .lex "$node", _lex_param_0 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_7010
    .lex "RETURN", $P101
.annotate 'line', 3444
    $P5001 = _lex_param_0."returns"()
    repr_get_primitive_type_spec $I5002, $P5001
    set $N5001, $I5002
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if3342_end7013 
    $P5002 = "RETURN"(1)
  if3342_end7013:
    nqp_get_sc_object $P5003, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    type_check $I5003, _lex_param_0, $P5003
    unless $I5003 goto if3343_else7014 
    .const 'Sub' $P5004 = 'cuid_511_1381281828.51527' 
    capture_lex $P5004
    $P5005 = $P5004()
    goto if3343_end7015
  if3343_else7014:
    nqp_get_sc_object $P5006, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 43
    type_check $I5004, _lex_param_0, $P5006
    unless $I5004 goto if3349_else7026 
.annotate 'line', 3456
    $P5007 = "RETURN"(1)
    set $P5014, $P5007
    goto if3349_end7027
  if3349_else7026:
    nqp_get_sc_object $P5008, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 74
    type_check $I5005, _lex_param_0, $P5008
    set $I5007, $I5005
    unless $I5005 goto if3351_end7031 
.annotate 'line', 3458
    $P5009 = _lex_param_0."scope"()
    set $S5001, $P5009
    iseq $I5006, $S5001, "lexical"
    set $I5007, $I5006
  if3351_end7031:
    box $P5013, $I5007
    set $P5012, $P5013
    unless $I5007 goto if3350_end7029 
    .const 'Sub' $P5010 = 'cuid_513_1381281828.51527' 
    capture_lex $P5010
    $P5011 = $P5010()
    set $P5012, $P5011
  if3350_end7029:
    set $P5014, $P5012
  if3349_end7027:
  if3343_end7015:
    $P5015 = "RETURN"(0)
    goto lexotic_7011
  lexotic_7010:
    .get_results ($P5015)
  lexotic_7011:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1381281828.51527") :anon :lex :outer("cuid_512_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3447
    .lex "$typeinfo", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3448
    find_lex $P5002, "$node"
    $P5003 = $P5002."op"()
    set $S5001, $P5003
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if3344_else7016 
.annotate 'line', 3449
    find_lex $P5004, "$node"
    $P5005 = $P5004."op"()
    set $S5003, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if3344_end7017
  if3344_else7016:
    set $S5005, ""
  if3344_end7017:
    box $P5008, $S5005
    set $P101, $P5008
    set $S5006, $P101
    iseq $I5005, $S5006, "_i"
    unless $I5005 goto if3345_else7018 
.annotate 'line', 3451
    $P5009 = "RETURN"(1)
    set $P5019, $P5009
    goto if3345_end7019
  if3345_else7018:
.annotate 'line', 3453
    find_lex $P5010, "$node"
    $P5011 = $P5010."op"()
    set $S5007, $P5011
    iseq $I5006, $S5007, "chars"
    set $I5008, $I5006
    if $I5006 goto unless3348_end7025 
    find_lex $P5012, "$node"
    $P5013 = $P5012."op"()
    set $S5008, $P5013
    iseq $I5007, $S5008, "ord"
    set $I5008, $I5007
  unless3348_end7025:
    set $I5010, $I5008
    if $I5008 goto unless3347_end7023 
    find_lex $P5014, "$node"
    $P5015 = $P5014."op"()
    set $S5009, $P5015
    iseq $I5009, $S5009, "elems"
    set $I5010, $I5009
  unless3347_end7023:
    box $P5018, $I5010
    set $P5017, $P5018
    unless $I5010 goto if3346_end7021 
    $P5016 = "RETURN"(1)
    set $P5017, $P5016
  if3346_end7021:
    set $P5019, $P5017
  if3345_end7019:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_513_1381281828.51527") :anon :lex :outer("cuid_512_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3458
    .lex "%sym", $P101 
    .local pmc fb_tmp_784 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3459
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."find_lex"($P5005)
    set $P101, $P5006
    exists $I5001, $P101["type"]
    set $I5005, $I5001
    unless $I5001 goto if3353_end7035 
    set fb_tmp_784, $P101
    repr_defined $I5004, fb_tmp_784
    unless $I5004 goto if3354_else7036 
    set $P5007, fb_tmp_784["type"]
    set $P5009, $P5007
    goto if3354_end7037
  if3354_else7036:
    null $P5008
    set $P5009, $P5008
  if3354_end7037:
    unless_null $P5009, vivi_33557038
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5009, $P5010
  vivi_33557038:
    repr_get_primitive_type_spec $I5003, $P5009
    set $N5001, $I5003
    set $N5002, 1
    iseq $I5002, $N5001, $N5002
    set $I5005, $I5002
  if3353_end7035:
    box $P5013, $I5005
    set $P5012, $P5013
    unless $I5005 goto if3352_end7033 
.annotate 'line', 3460
    $P5011 = "RETURN"(1)
    set $P5012, $P5011
  if3352_end7033:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_515_1381281828.51527") :anon :lex :outer("cuid_368_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3474
    .const 'Sub' $P5025 = 'cuid_514_1381281828.51527' 
    capture_lex $P5025 
    .lex "$newopn", $P101 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 3476
    find_lex $P5004, "$op"
    set fb_tmp_785, $P5004
    repr_defined $I5001, fb_tmp_785
    unless $I5001 goto if3363_else7055 
    set $P5005, fb_tmp_785[0]
    set $P5007, $P5005
    goto if3363_end7056
  if3363_else7055:
    null $P5006
    set $P5007, $P5006
  if3363_end7056:
    unless_null $P5007, vivi_33647057
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5007, $P5008
  vivi_33647057:
    $P5009 = "&returns_int"($P5007)
    set $P5016, $P5009
    unless $P5009 goto if3362_end7054 
    find_lex $P5010, "$op"
    set fb_tmp_786, $P5010
    repr_defined $I5002, fb_tmp_786
    unless $I5002 goto if3365_else7058 
    set $P5011, fb_tmp_786[1]
    set $P5013, $P5011
    goto if3365_end7059
  if3365_else7058:
    null $P5012
    set $P5013, $P5012
  if3365_end7059:
    unless_null $P5013, vivi_33667060
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5013, $P5014
  vivi_33667060:
    $P5015 = "&returns_int"($P5013)
    set $P5016, $P5015
  if3362_end7054:
    unless $P5016 goto if3361_else7051 
    .const 'Sub' $P5017 = 'cuid_514_1381281828.51527' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5024, $P5018
    goto if3361_end7052
  if3361_else7051:
.annotate 'line', 3480
.annotate 'line', 3481
    find_lex $P5019, "$op"
    find_lex $P5021, "self"
    nqp_decontainerize $P5020, $P5021
    $P5022 = $P5020."find_sym"("num")
    $P5023 = $P5019."returns"($P5022)
    set $P5024, $P5023
  if3361_end7052:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_514_1381281828.51527") :anon :lex :outer("cuid_515_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3476
    .lex "$newopn", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 3478
    find_lex $P5004, "$op"
    $P5004."op"($P101)
.annotate 'line', 3479
    find_lex $P5005, "$op"
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    $P5008 = $P5006."find_sym"("int")
    $P5009 = $P5005."returns"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_516_1381281828.51527") :anon :lex :outer("cuid_368_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3492
    .lex "$sigil", $P101 
    .local pmc fb_tmp_788 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
.annotate 'line', 3493
    find_lex $P5002, "$op"
    set fb_tmp_788, $P5002
    repr_defined $I5001, fb_tmp_788
    unless $I5001 goto if3374_else7074 
    set $P5003, fb_tmp_788[0]
    set $P5005, $P5003
    goto if3374_end7075
  if3374_else7074:
    null $P5004
    set $P5005, $P5004
  if3374_end7075:
    unless_null $P5005, vivi_33757076
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_33757076:
    $P5007 = $P5005."name"()
    set $S5002, $P5007
    substr $S5001, $S5002, 0, 1
    box $P5008, $S5001
    set $P101, $P5008
    set $S5003, $P101
    iseq $I5002, $S5003, "@"
    set $I5004, $I5002
    if $I5002 goto unless3377_end7080 
    set $S5004, $P101
    iseq $I5003, $S5004, "%"
    set $I5004, $I5003
  unless3377_end7080:
    box $P5015, $I5004
    set $P5014, $P5015
    unless $I5004 goto if3376_end7078 
.annotate 'line', 3494
.annotate 'line', 3495
    find_lex $P5009, "$op"
    find_lex $P5011, "self"
    nqp_decontainerize $P5010, $P5011
    $P5012 = $P5010."find_sym"("int")
    $P5013 = $P5009."returns"($P5012)
    set $P5014, $P5013
  if3376_end7078:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_517_1381281828.51527") :anon :lex :outer("cuid_368_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3499
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "visit_handle" :subid("cuid_369_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3506
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$handle", _lex_param_1 
.annotate 'line', 3507
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."visit_children"(_lex_param_1, 1 :named("skip_selectors"))
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_children" :subid("cuid_370_1381281828.51527") :anon :lex :outer("cuid_509_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3511
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("skip_selectors") :optional 
    .param int haz_param_7 :opt_flag 
    .const 'Sub' $P5007 = 'cuid_518_1381281828.51527' 
    capture_lex $P5007 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$skip_selectors", _lex_param_2 
    if haz_param_7, default7105
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set _lex_param_2, $P5006
  default7105:
    set $I101, 0
    set $I101, 0
    nqp_isstr $I5001, _lex_param_1
    set $I5005, $I5001
    if $I5001 goto unless3382_end7086 
.annotate 'line', 3513
  while3383_test7087:
    set $N5001, $I101
    $P5001 = _lex_param_1."list"()
    set $N5002, $P5001
    islt $I5002, $N5001, $N5002
    set $I5004, $I5002
    unless $I5002 goto while3383_done7091 
  while3383_redo7089:
.annotate 'line', 3514
    set $P5002, _lex_param_2
    unless _lex_param_2 goto if3385_end7095 
    set $N5004, $I101
    set $N5005, 2
    mod $N5003, $N5004, $N5005
    box $P5003, $N5003
    set $P5002, $P5003
  if3385_end7095:
    if $P5002 goto unless3384_end7093 
    .const 'Sub' $P5004 = 'cuid_518_1381281828.51527' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless3384_end7093:
    add $I5003, $I101, 1
    set $I101, $I5003
    set $I5004, $I101
    goto while3383_test7087 
  while3383_done7091:
    set $I5005, $I5004
  unless3382_end7086:
    .return ($I5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_518_1381281828.51527") :anon :lex :outer("cuid_370_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3515
    .lex "$visit", $P101 
    .local pmc fb_tmp_789 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P101, $P5001
    find_lex $P5002, "$node"
    set fb_tmp_789, $P5002
    repr_defined $I5001, fb_tmp_789
    unless $I5001 goto if3386_else7096 
    find_lex $I5002, "$i"
    set $P5003, fb_tmp_789[$I5002]
    set $P5005, $P5003
    goto if3386_end7097
  if3386_else7096:
    null $P5004
    set $P5005, $P5004
  if3386_end7097:
    unless_null $P5005, vivi_33877098
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5005, $P5006
  vivi_33877098:
    set $P101, $P5005
    nqp_get_sc_object $P5007, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 86
    type_check $I5003, $P101, $P5007
    unless $I5003 goto if3388_else7099 
.annotate 'line', 3517
    find_lex $P5008, "$node"
    find_lex $I5004, "$i"
.annotate 'line', 3518
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    $P5011 = $P5009."visit_op"($P101)
    set $P5008[$I5004], $P5011
    set $P5026, $P5011
    goto if3388_end7100
  if3388_else7099:
    nqp_get_sc_object $P5012, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 108
    type_check $I5005, $P101, $P5012
    unless $I5005 goto if3389_else7101 
.annotate 'line', 3519
    find_lex $P5013, "$node"
    find_lex $I5006, "$i"
.annotate 'line', 3520
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    $P5016 = $P5014."visit_block"($P101)
    set $P5013[$I5006], $P5016
    set $P5025, $P5016
    goto if3389_end7102
  if3389_else7101:
    nqp_get_sc_object $P5017, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924", 69
    type_check $I5007, $P101, $P5017
    unless $I5007 goto if3390_else7103 
.annotate 'line', 3521
.annotate 'line', 3522
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    $P5020 = $P5018."visit_children"($P101, 1 :named("skip_selectors"))
    set $P5024, $P5020
    goto if3390_end7104
  if3390_else7103:
.annotate 'line', 3523
.annotate 'line', 3524
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."visit_children"($P101)
    set $P5024, $P5023
  if3390_end7104:
    set $P5025, $P5024
  if3389_end7102:
    set $P5026, $P5025
  if3388_end7100:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_519_1381281828.51527") :anon :lex :outer("cuid_372_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3536
    .const 'Sub' $P5002 = 'cuid_371_1381281828.51527' 
    capture_lex $P5002 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_371_1381281828.51527' 
    capture_lex $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_371_1381281828.51527") :anon :lex :outer("cuid_519_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3537
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_790 
    set fb_tmp_790, _lex_param_2
    repr_defined $I5002, fb_tmp_790
    unless $I5002 goto if3392_else7108 
    set $P5001, fb_tmp_790["optimize"]
    set $P5003, $P5001
    goto if3392_end7109
  if3392_else7108:
    null $P5002
    set $P5003, $P5002
  if3392_end7109:
    unless_null $P5003, vivi_33937110
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314", 26
    set $P5003, $P5004
  vivi_33937110:
    set $S5001, $P5003
    iseq $I5001, $S5001, "off"
    unless $I5001 goto if3391_else7106 
    set $P5008, _lex_param_1
    goto if3391_end7107
  if3391_else7106:
.annotate 'line', 3540
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    $P5006 = $P5005."new"()
    $P5007 = $P5006."optimize"(_lex_param_1, _lex_param_2 :flat :named)
    set $P5008, $P5007
  if3391_end7107:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_521_1381281828.51527") :load :init
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = 'cuid_520_1381281828.51527' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_372_1381281828.51527" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    nqp_create_sc $P5001, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src/stage2/gen/NQP.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381281785.75165"
    push $P5004, "src/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1381281780.68314"
    push $P5004, "src/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "30F2FDCF121B88EF4D971E3D787EDDB9E926F649-1381281791.94485"
    push $P5004, "src/stage2/gen/NQPHLL.nqp"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_fail"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "term:sym<name>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "5D8A0D0FBDA2B081F5DDEAF8492A748F124D5C36-1381281822.09102"
    push $P5004, "src/stage2/gen/NQPP6QRegex.nqp"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<unsp>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "cclass_backslash"
    push $P5004, "cclass_backslash:sym<s>"
    push $P5004, "cclass_backslash:sym<b>"
    push $P5004, "cclass_backslash:sym<e>"
    push $P5004, "cclass_backslash:sym<f>"
    push $P5004, "cclass_backslash:sym<h>"
    push $P5004, "cclass_backslash:sym<r>"
    push $P5004, "cclass_backslash:sym<t>"
    push $P5004, "cclass_backslash:sym<v>"
    push $P5004, "cclass_backslash:sym<o>"
    push $P5004, "cclass_backslash:sym<x>"
    push $P5004, "cclass_backslash:sym<c>"
    push $P5004, "cclass_backslash:sym<any>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "optimize"
    push $P5004, "visit_block"
    push $P5004, "find_lex"
    push $P5004, "visit_op"
    push $P5004, "visit_handle"
    push $P5004, "visit_children"
    push $P5004, "@!block_stack"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "recursion_limit"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, "-'"
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1381281830.16661"
    push $P5004, "alt_nfa__2_1381281830.18802"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1381281830.21252"
    push $P5004, "alt_nfa__3_1381281830.20096"
    push $P5004, "alt_nfa__6_1381281830.31668"
    push $P5004, "alt_nfa__5_1381281830.30132"
    push $P5004, "alt_nfa__7_1381281830.42617"
    push $P5004, "alt_nfa__9_1381281830.45107"
    push $P5004, "])}"
    push $P5004, "alt_nfa__8_1381281830.43374"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1381281830.57891"
    push $P5004, "alt_nfa__11_1381281830.58618"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1381281830.71007"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1381281830.73725"
    push $P5004, "alt_nfa__14_1381281830.73773"
    push $P5004, "alt_nfa__15_1381281830.73797"
    push $P5004, "alt_nfa__16_1381281830.80025"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1381281830.88347"
    push $P5004, "alt_nfa__18_1381281830.89415"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1381281830.97118"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1381281830.99611"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1381281831.4423"
    push $P5004, "alt_nfa__22_1381281831.46022"
    push $P5004, "alt_nfa__23_1381281831.52088"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1381281831.56603"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1381281831.66126"
    push $P5004, "alt_nfa__25_1381281831.65438"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1381281831.69389"
    push $P5004, "alt_nfa__28_1381281831.69422"
    push $P5004, "alt_nfa__29_1381281831.69457"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1381281831.70772"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1381281831.9436"
    push $P5004, "alt_nfa__32_1381281831.94449"
    push $P5004, "alt_nfa__33_1381281831.94515"
    push $P5004, "'\""
    push $P5004, "alt_nfa__34_1381281831.97316"
    push $P5004, "alt_nfa__35_1381281831.97352"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1381281832.06667"
    push $P5004, "alt_nfa__37_1381281832.07821"
    push $P5004, "sign"
    push $P5004, "+-"
    push $P5004, "alt_nfa__38_1381281832.09019"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "("
    push $P5004, "$"
    push $P5004, "\\"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1381281832.93724"
    push $P5004, "alt_nfa__40_1381281832.96213"
    push $P5004, "alt_nfa__41_1381281832.97452"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1381281833.01072"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "82C8134F4F1F98F3955D960634CCE916B8CF0355-1381281775.85002"
    push $P5004, "src/stage2/gen/nqp-mo.nqp"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1381281792.20591"
    push $P5004, "alt_nfa__2_1381281792.24744"
    push $P5004, "alt_nfa__3_1381281792.33988"
    push $P5004, "alt_nfa__4_1381281792.34058"
    push $P5004, "alt_nfa__5_1381281792.36691"
    push $P5004, "alt_nfa__6_1381281792.46378"
    push $P5004, "alt_nfa__7_1381281792.48076"
    push $P5004, "alt_nfa__8_1381281792.62911"
    push $P5004, "alt_nfa__9_1381281792.67602"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1381281822.25451"
    push $P5004, "alt_nfa__2_1381281822.28975"
    push $P5004, "alt_nfa__3_1381281822.39734"
    push $P5004, "alt_nfa__4_1381281822.41961"
    push $P5004, "alt_nfa__5_1381281822.5158"
    push $P5004, "alt_nfa__6_1381281822.55605"
    push $P5004, "alt_nfa__7_1381281822.58423"
    push $P5004, "alt_nfa__8_1381281822.79723"
    push $P5004, "alt_nfa__9_1381281822.79778"
    push $P5004, "alt_nfa__10_1381281822.81257"
    push $P5004, "alt_nfa__11_1381281822.89775"
    push $P5004, "alt_nfa__12_1381281822.90609"
    push $P5004, "alt_nfa__13_1381281823.00833"
    push $P5004, "alt_nfa__14_1381281823.08074"
    push $P5004, "alt_nfa__15_1381281823.09518"
    push $P5004, "alt_nfa__16_1381281823.16119"
    push $P5004, "alt_nfa__17_1381281823.24025"
    push $P5004, "alt_nfa__18_1381281823.25533"
    push $P5004, "alt_nfa__19_1381281823.28521"
    push $P5004, "alt_nfa__20_1381281823.29981"
    push $P5004, "alt_nfa__21_1381281823.43465"
    push $P5004, "alt_nfa__22_1381281823.44468"
    push $P5004, "alt_nfa__23_1381281823.52192"
    push $P5004, "alt_nfa__24_1381281823.52261"
    push $P5004, "alt_nfa__25_1381281823.52293"
    push $P5004, "alt_nfa__27_1381281823.55989"
    push $P5004, "alt_nfa__28_1381281823.5604"
    push $P5004, "alt_nfa__26_1381281823.53209"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Optimizer"
    push $P5004, "block_stack"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "8D7C40D4B41C0FB97C97F9FA59E4F60A345D73C3-1381281783.14924"
    push $P5004, "src/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "96F80A66F2271DAB0F3CD1D5EC903FD7ED58994D-1381281801.12832"
    push $P5004, "src/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Optimizer"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, ")}]"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_520_1381281828.51527' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3395_end7114 
    die "Repossession conflicts occurred during deserialization"
  if3395_end7114:
    .const 'Sub' $P5001 = "cuid_1_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 37
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 230
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 231
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 232
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_228_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 252
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 253
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_248_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 365
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 366
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_360_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1381281828.51527" 
    nqp_get_sc_object $P5002, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 380
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_372_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "GLOBALish"
    push $P5002, "$?PACKAGE"
    push $P5002, "EXPORT"
    push $P5002, "ParseShared"
    push $P5002, "NQPCursorRole"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 0
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 1
    push $P5003, $P5006
    nqp_get_sc_object $P5007, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381281785.75165", 32
    push $P5003, $P5007
    nqp_get_sc_object $P5008, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1381281785.75165", 35
    push $P5003, $P5008
    new $P5009, 'ResizableIntegerArray'
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5009)
    .const "LexInfo" $P5001 = "cuid_375_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 3
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_398_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 38
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_418_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 229
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 229
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_426_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 244
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 244
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_505_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 357
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 357
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_509_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 371
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_519_1381281828.51527"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 379
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "03F59DA42ACF208BB631701F92498BAD312D74A6-1381281828.56056", 379
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5007 = $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_520_1381281828.51527") :anon :lex :outer("cuid_521_1381281828.51527")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1381281828.51527" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1381281828.51527" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_522_1381281828.51527") :load
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = "cuid_372_1381281828.51527" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_523_1381281828.51527") :main
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_372_1381281828.51527" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end